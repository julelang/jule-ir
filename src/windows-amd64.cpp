// Auto generated by JuleC.
// JuleC version: jule0.0.15 @master
// Date: 5/8/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp -lws2_32 -lshell32 -lshell32

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <winsock2.h>
#include <ws2ipdef.h>
#include <windows.h>
#include <fcntl.h>
#include <io.h>
#include <cstdio>
#include <sys/stat.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _1c62e9057_comptimeRangeKind{};
struct _1c6343ac9_Importer{};
struct _1c641d06b_Kind{};
struct _1c643d058_Lookup{};
struct _1aab3bdb0_CommonFlag{};
struct _22061d123_acceptRange;
struct _2206c697e_StrBuilder;
struct _22187b715_Range16;
struct _22187bc43_Range32;
struct _22187c1e9_RangeTable;
struct _2218c7475_lazyBuff;
struct _220506a9a_DirEntry;
struct _220506d0e_Directory;
struct _2205120d3_File;
struct _220514921_Status;
struct _221a2b387_cmdAttrs;
struct _221968cb9_Log;
struct _1dc23708e_floatInfo;
struct _1dc237c3d_decimalSlice;
struct _1dc24a008_leftCheat;
struct _1dc24aa31_decimal;
struct _1dc260590_Const;
struct _1c6283a3b_Token;
struct _1c6289305_File;
struct _1c628b428_kindPair;
struct _1c629253e_lex;
struct _1c6297379_Ast;
struct _1c6298248_Node;
struct _1c6298666_Directive;
struct _1c6299249_TypeDecl;
struct _1c6299854_IdentTypeDecl;
struct _1c6299b51_SubIdentTypeDecl;
struct _1c6299ee7_NamespaceTypeDecl;
struct _1c629a2e4_SptrTypeDecl;
struct _1c629a679_SlcTypeDecl;
struct _1c629a976_TupleTypeDecl;
struct _1c629ac73_PtrTypeDecl;
struct _1c629b515_ArrTypeDecl;
struct _1c629bc63_MapTypeDecl;
struct _1c629c13c_RetTypeDecl;
struct _1c629d57d_Expr;
struct _1c629d87a_RangeExpr;
struct _1c629de52_UseExpr;
struct _1c629e24e_TupleExpr;
struct _1c629e628_LitExpr;
struct _1c629ea02_UnsafeExpr;
struct _1c629eea8_IdentExpr;
struct _1c62a063a_UnaryExpr;
struct _1c62a0a14_VariadicExpr;
struct _1c62a0ddd_CastExpr;
struct _1c62a12b7_NsSelectionExpr;
struct _1c62a1691_SubIdentExpr;
struct _1c62a1b47_BinopExpr;
struct _1c62a22a7_FnCallExpr;
struct _1c62a2c9c_FieldExprPair;
struct _1c62a35c7_StructLit;
struct _1c62a3a7d_BraceLit;
struct _1c62a43a8_KeyValPair;
struct _1c62a4aa1_SliceExpr;
struct _1c62a5541_IndexingExpr;
struct _1c62a5ba1_SlicingExpr;
struct _1c62a5e9d_Constraint;
struct _1c62a6454_GenericDecl;
struct _1c62a682d_LabelSt;
struct _1c62a6c07_GotoSt;
struct _1c62a7004_FallSt;
struct _1c62a7664_AssignLeft;
struct _1c62a7be7_AssignSt;
struct _1c62a8b0a_Stmt;
struct _1c62a926a_ScopeTree;
struct _1c62a99a7_ParamDecl;
struct _1c62aae09_FnDecl;
struct _1c62abed7_VarDecl;
struct _1c62ac3b1_RetSt;
struct _1c62aca54_Iter;
struct _1c62ad37e_WhileKind;
struct _1c62adc86_RangeKind;
struct _1c62ae160_BreakSt;
struct _1c62ae539_ContSt;
struct _1c62ae9e0_If;
struct _1c62aedb9_Else;
struct _1c62b0370_Conditional;
struct _1c62b0aac_TypeAliasDecl;
struct _1c62b1063_Case;
struct _1c62b17a0_MatchCase;
struct _1c62b20b9_UseDecl;
struct _1c62b2570_EnumItemDecl;
struct _1c62b3131_EnumDecl;
struct _1c62b395b_TypeEnumItemDecl;
struct _1c62b40bb_TypeEnumDecl;
struct _1c62b4385_FieldDecl;
struct _1c62b4c7b_StructDecl;
struct _1c62b54b8_TraitDecl;
struct _1c62b5b28_Impl;
struct _1c62b6e48_Field;
struct _1c62b8e28_Operators;
struct _1c62b9d3b_Struct;
struct _1c62bc019_FieldIns;
struct _1c62c19ad_OperandExprModel;
struct _1c62c1ea8_BinopExprModel;
struct _1c62c2382_UnaryExprModel;
struct _1c62c28b0_StructArgExprModel;
struct _1c62c2c56_StructLitExprModel;
struct _1c62c3053_AllocStructLitExprModel;
struct _1c62c35d6_CastingExprModel;
struct _1c62c3e88_FnCallExprModel;
struct _1c62c4362_SliceExprModel;
struct _1c62c4818_IndexingExprModel;
struct _1c62c4be2_AnonFnExprModel;
struct _1c62c50bb_KeyValPairExprModel;
struct _1c62c5572_MapExprModel;
struct _1c62c5b05_SlicingExprModel;
struct _1c62c6188_TraitSubIdentExprModel;
struct _1c62c6a29_StructSubIdentExprModel;
struct _1c62c6ed0_StructStaticIdentExprModel;
struct _1c62c73a9_ArrayExprModel;
struct _1c62c76a6_TupleExprModel;
struct _1c62c7a80_BuiltinOutCallExprModel;
struct _1c62c7e59_BuiltinOutlnCallExprModel;
struct _1c62c8333_BuiltinNewCallExprModel;
struct _1c62c870c_BuiltinPanicCallExprModel;
struct _1c62c8bb3_BuiltinAssertCallExprModel;
struct _1c62c9169_BuiltinMakeCallExprModel;
struct _1c62c9543_BuiltinAppendCallExprModel;
struct _1c62c9840_BuiltinLenCallExprModel;
struct _1c62c9b3c_BuiltinCapCallExprModel;
struct _1c62ca016_BuiltinDeleteCallExprModel;
struct _1c62ca3e0_BuiltinCopyCallExprModel;
struct _1c62ca7b9_BuiltinErrorCallExprModel;
struct _1c62c6375_SizeofExprModel;
struct _1c62caee5_AlignofExprModel;
struct _1c62cb2e2_RuneExprModel;
struct _1c62cb5de_IntegratedToStrExprModel;
struct _1c62cb9b8_BackendEmitExprModel;
struct _1c62cbcb5_FreeExprModel;
struct _1c62cc997_RetType;
struct _1c62cd228_Param;
struct _1c62cebec_Fn;
struct _1c62d1b55_ParamIns;
struct _1c62d2b01_FnIns;
struct _1c62d5c9c_ReferenceStack;
struct _1c62d72ba_Pass;
struct _1c62dbd80_symbolBuilder;
struct _1c62e2e96_Trait;
struct _1c62e4b24_EnumItem;
struct _1c62e5691_Enum;
struct _1c62e67c4_TypeEnumItem;
struct _1c62e6d9b_TypeEnum;
struct _1c62e9244_comptimeRange;
struct _1c62e9ca0_comptimeStructField;
struct _1c62eb950_comptimeStructFields;
struct _1c62ed05b_comptimeStatic;
struct _1c62eec1c_comptimeStatics;
struct _1c6301317_comptimeEnumField;
struct _1c6302626_comptimeEnumFields;
struct _1c6303ca9_comptimeParam;
struct _1c6306020_comptimeParams;
struct _1c630761a_comptimeTypeInfos;
struct _1c6308c15_comptimeTypeInfo;
struct _1c6310227_comptimeValue;
struct _1c6312a76_comptimeFiles;
struct _1c6314171_comptimeFile;
struct _1c63182da_constraintChecker;
struct _1c631a320_Impl;
struct _1c6320754_Scope;
struct _1c6320b72_If;
struct _1c6320e6e_Else;
struct _1c632138c_Conditional;
struct _1c6321689_InfIter;
struct _1c6321b40_WhileIter;
struct _1c632258b_RangeIter;
struct _1c6322921_ContSt;
struct _1c6322cea_BreakSt;
struct _1c63230e7_Label;
struct _1c63234c1_GotoSt;
struct _1c632389a_Postfix;
struct _1c6323d51_Assign;
struct _1c632422a_MultiAssign;
struct _1c632488a_Match;
struct _1c63254c3_Case;
struct _1c6325abc_FallSt;
struct _1c6325e52_RetSt;
struct _1c63265b2_scopeLabel;
struct _1c6326b45_scopeGoto;
struct _1c6327a58_scopeChecker;
struct _1c6340565_directiveChecker;
struct _1c63469de_ImportInfo;
struct _1c6349915_Package;
struct _1c6366d94_commonSemaMeta;
struct _1c63679bb_Sema;
struct _1c638680e_missingRetChecker;
struct _1c6388beb_IterRelation;
struct _1c6389da6_Var;
struct _1c638abba_FuncPattern;
struct _1c63c5177_typeCompatibilityChecker;
struct _1c63c6e26_assignTypeChecker;
struct _1c63c8a93_dynamicTypeAnnotation;
struct _1c63cd900_fnCallArgChecker;
struct _1c63d1837_structLitChecker;
struct _1c63d3619_rangeChecker;
struct _1c63d5d7a_retTypeChecker;
struct _1c63d8135_SymbolTable;
struct _1c63dd35a_Data;
struct _1c63de49e_Value;
struct _1c63e004e_Eval;
struct _1c640d4e0_unaryEval;
struct _1c641047b_binaryEval;
struct _1c641bb3b_InsGeneric;
struct _1c641c730_TypeAlias;
struct _1c641d522_TypeKind;
struct _1c64256e4_TypeSymbol;
struct _1c64260eb_Prim;
struct _1c6429b27_Sptr;
struct _1c642a5ea_Slc;
struct _1c642b1de_Tuple;
struct _1c642bc8e_Map;
struct _1c642c91b_Arr;
struct _1c642d3de_Ptr;
struct _1c642e3e0_referencer;
struct _1c64303d0_typeChecker;
struct _1c6438064_identTypeLookup;
struct _1c6c84904_FileInfo;
struct _1c6cca2a7_stmt;
struct _1c6ccab48_scopeParser;
struct _1a9eabbd1_exprBuilder;
struct _1a9eb913e_assignInfo;
struct _1a9ebc7d5_parser;
struct _1a9ece64e_typeBuilder;
struct _1c472d636_CompileInfo;
struct _1c472eadd_directiveEval;
struct _1a9ed3785_JuleImporter;
struct _1a9ed8999_OrderedDefines;
struct _1a9ed8c0d_defineOrderer;
struct _1aa117c82_liveTable;
struct _1aa134e14_scopeDeadCode;
struct _1aa13916b_exprDeadCode;
struct _1c651ab6e_SwapExprModel;
struct _1c651b08c_EmptyCompareExprModel;
struct _1c651b389_RefExprModel;
struct _1c651b8b7_StrCompExprModel;
struct _1c651be4a_MutSlicingExprModel;
struct _1c651c247_UnsafeBinopExprModel;
struct _1c651c544_UnsafeIndexingExprModel;
struct _1c651c973_PushToSliceExprModel;
struct _1c651cd4c_AppendToSliceExprModel;
struct _1c651d149_InlineStdInternalNosafeStobs;
struct _1c651e2e3_scopeOptimizer;
struct _1c65254c5_exprOptimizer;
struct _1a9eda5a0_stdCacheData;
struct _1c6637b37_Optimizer;
struct _1c66608eb_AnsiEscape;
struct _1c6662029_Logger;
struct _1aaa99aa9_AbsTime;
struct _1aaa9a280_Time;
struct _1aa9c4e9b_scopeCoder;
struct _1aa9ce1b4_exprCoder;
struct _1aa9deaed_TestCoder;
struct _1aa9e27d2_identCoder;
struct _1aaaa2c16_SerializationInfo;
struct _1aaaa32dd_traitHash;
struct _1aaaa36b7_traitCast;
struct _1aaab8743_customType;
struct _1aaab9348_typeCoder;
struct _1aaac2120_resultCoder;
struct _1acbadc21_Flag;
struct _1acbb2582_Flag;
struct _1acbb5c7d_Flag;
struct _1acbb94bd_Flag;
struct _1acbbcbb9_Flag;
struct _1aab3d961_FlagSet;
struct _1aab413e2_argParser;
struct _1aaaa472e_ObjectCoder;
struct _1aa1279a6_ObjectDeadCode;
struct _1a9ed6249_IR;
struct _1c62bcab9_StructIns;
struct _221a270ec_Cmd;
struct _22061d123_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

	inline bool operator==(_22061d123_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_22061d123_acceptRange _other) { return !this->operator==(_other); }


};
struct _2206c697e_StrBuilder {
	jule::Slice<jule::U8> _field_buf;
	


};
struct _22187b715_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

	inline bool operator==(_22187b715_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_22187b715_Range16 _other) { return !this->operator==(_other); }


};
struct _22187bc43_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

	inline bool operator==(_22187bc43_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_22187bc43_Range32 _other) { return !this->operator==(_other); }


};
struct _22187c1e9_RangeTable {
	jule::Slice<_22187b715_Range16> _field_R16;
	jule::Slice<_22187bc43_Range32> _field_R32;
	jule::I64 _field_LatinOffset = 0;
	


};
struct _2218c7475_lazyBuff {
	jule::Slice<jule::U8> _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen = 0;
	


};
struct _220506a9a_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_220514921_Status> _field_Stat;
	

	inline bool operator==(_220506a9a_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_220506a9a_DirEntry _other) { return !this->operator==(_other); }


};
struct _220506d0e_Directory {
	

	inline bool operator==(_220506d0e_Directory _other) { return true; }

	inline bool operator!=(_220506d0e_Directory _other) { return !this->operator==(_other); }


};
struct _2205120d3_File {
	jule::Uintptr _field_handle = 0;
	

	inline bool operator==(_2205120d3_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_2205120d3_File _other) { return !this->operator==(_other); }


};
struct _220514921_Status {
	jule::I64 _field_mode = 0LL;
	jule::U64 _field_size = 0;
	

	inline bool operator==(_220514921_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_220514921_Status _other) { return !this->operator==(_other); }


};
struct _221a2b387_cmdAttrs {
	HANDLE _field_hProcess = nullptr;
	HANDLE _field_hThread = nullptr;
	

	inline bool operator==(_221a2b387_cmdAttrs _other) {
		return 
			this->_field_hProcess == _other._field_hProcess &&
			this->_field_hThread == _other._field_hThread;
	}

	inline bool operator!=(_221a2b387_cmdAttrs _other) { return !this->operator==(_other); }


};
struct _221968cb9_Log {
	jule::I64 _field_Kind = 0LL;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

	inline bool operator==(_221968cb9_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_221968cb9_Log _other) { return !this->operator==(_other); }


};
struct _1dc23708e_floatInfo {
	jule::U64 _field_mantbits = 0;
	jule::U64 _field_expbits = 0;
	jule::I64 _field_bias = 0;
	

	inline bool operator==(_1dc23708e_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1dc23708e_floatInfo _other) { return !this->operator==(_other); }


};
struct _1dc237c3d_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	


};
struct _1dc24a008_leftCheat {
	jule::I64 _field_delta = 0;
	jule::Str _field_cutoff;
	

	inline bool operator==(_1dc24a008_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1dc24a008_leftCheat _other) { return !this->operator==(_other); }


};
struct _1dc24aa31_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

	inline bool operator==(_1dc24aa31_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1dc24aa31_decimal _other) { return !this->operator==(_other); }


};
inline jule::Bool _1dc266145_Eq(_1dc260590_Const*, _1dc260590_Const);
inline jule::Bool _1dc266486_Lt(_1dc260590_Const*, _1dc260590_Const);
inline jule::Bool _1dc2667c7_LtEq(_1dc260590_Const*, _1dc260590_Const);
inline jule::Bool _1dc266b18_Gt(_1dc260590_Const*, _1dc260590_Const);
inline jule::Bool _1dc266e59_GtEq(_1dc260590_Const*, _1dc260590_Const);
struct _1dc260590_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

	inline jule::Bool operator==(_1dc260590_Const _other) { return _1dc266145_Eq(this, _other); }

	inline bool operator!=(_1dc260590_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1dc260590_Const _other) { return _1dc266b18_Gt(this, _other); }

	inline jule::Bool operator>=(_1dc260590_Const _other) { return _1dc266e59_GtEq(this, _other); }

	inline jule::Bool operator<(_1dc260590_Const _other) { return _1dc266486_Lt(this, _other); }

	inline jule::Bool operator<=(_1dc260590_Const _other) { return _1dc2667c7_LtEq(this, _other); }


};
struct _1c6283a3b_Token {
	jule::Ptr<_1c6289305_File> _field_File;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U64 _field_Id = 0LLU;
	

	inline bool operator==(_1c6283a3b_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_1c6283a3b_Token _other) { return !this->operator==(_other); }


};
struct _1c6289305_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _field_Tokens;
	


};
struct _1c628b428_kindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U64 _field_id = 0LLU;
	

	inline bool operator==(_1c628b428_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1c628b428_kindPair _other) { return !this->operator==(_other); }


};
struct _1c629253e_lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _field_tokens;
	jule::Ptr<_1c6289305_File> _field_file;
	jule::I64 _field_pos = 0;
	jule::I64 _field_column = 0;
	jule::I64 _field_row = 0;
	jule::Slice<_221968cb9_Log> _field_errors;
	


};
struct _1c6297379_Ast {
	jule::Ptr<_1c6289305_File> _field_File;
	jule::Slice<jule::Ptr<_1c6298666_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1c62b20b9_UseDecl>> _field_UseDecls;
	jule::Slice<_1c6298248_Node> _field_Nodes;
	


};
struct _1c6298248_Node {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1c6298248_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1c6298248_Node _other) { return !this->operator==(_other); }


};
struct _1c6298666_Directive {
	jule::Ptr<_1c6283a3b_Token> _field_Tag;
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _field_Args;
	


};
struct _1c6299249_TypeDecl {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1c6299249_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1c6299249_TypeDecl _other) { return !this->operator==(_other); }


};
struct _1c6299854_IdentTypeDecl {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1c6299249_TypeDecl>> _field_Generics;
	


};
struct _1c6299b51_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1c6299854_IdentTypeDecl>> _field_Idents;
	


};
struct _1c6299ee7_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _field_Idents;
	jule::Ptr<_1c6299249_TypeDecl> _field_Kind;
	


};
struct _1c629a2e4_SptrTypeDecl {
	jule::Ptr<_1c6299249_TypeDecl> _field_Elem;
	

	inline bool operator==(_1c629a2e4_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1c629a2e4_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1c629a679_SlcTypeDecl {
	jule::Ptr<_1c6299249_TypeDecl> _field_Elem;
	

	inline bool operator==(_1c629a679_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1c629a679_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1c629a976_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1c6299249_TypeDecl>> _field_Types;
	


};
struct _1c629ac73_PtrTypeDecl {
	jule::Ptr<_1c6299249_TypeDecl> _field_Elem;
	

	inline bool operator==(_1c629ac73_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1c629ac73_PtrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1c629b515_ArrTypeDecl {
	jule::Ptr<_1c6299249_TypeDecl> _field_Elem;
	jule::Ptr<_1c629d57d_Expr> _field_Size;
	

	inline bool operator==(_1c629b515_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1c629b515_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1c629bc63_MapTypeDecl {
	jule::Ptr<_1c6299249_TypeDecl> _field_Key;
	jule::Ptr<_1c6299249_TypeDecl> _field_Val;
	

	inline bool operator==(_1c629bc63_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1c629bc63_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1c629c13c_RetTypeDecl {
	jule::Ptr<_1c6299249_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _field_Idents;
	


};
struct _1c629d57d_Expr {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Ptr<_1c6283a3b_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1c629d57d_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1c629d57d_Expr _other) { return !this->operator==(_other); }


};
struct _1c629d87a_RangeExpr {
	jule::Ptr<_1c629d57d_Expr> _field_Expr;
	

	inline bool operator==(_1c629d87a_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c629d87a_RangeExpr _other) { return !this->operator==(_other); }


};
struct _1c629de52_UseExpr {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Ptr<_1c629d57d_Expr> _field_Expr;
	

	inline bool operator==(_1c629de52_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c629de52_UseExpr _other) { return !this->operator==(_other); }


};
struct _1c629e24e_TupleExpr {
	jule::Slice<jule::Ptr<_1c629d57d_Expr>> _field_Expr;
	


};
struct _1c629e628_LitExpr {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Str _field_Value;
	

	inline bool operator==(_1c629e628_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1c629e628_LitExpr _other) { return !this->operator==(_other); }


};
struct _1c629ea02_UnsafeExpr {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Ptr<_1c629d57d_Expr> _field_Expr;
	

	inline bool operator==(_1c629ea02_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c629ea02_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _1c629eea8_IdentExpr {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	

	inline bool operator==(_1c629eea8_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Binded == _other._field_Binded;
	}

	inline bool operator!=(_1c629eea8_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1c62a063a_UnaryExpr {
	jule::Ptr<_1c6283a3b_Token> _field_Op;
	jule::Ptr<_1c629d57d_Expr> _field_Expr;
	

	inline bool operator==(_1c62a063a_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c62a063a_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1c62a0a14_VariadicExpr {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Ptr<_1c629d57d_Expr> _field_Expr;
	

	inline bool operator==(_1c62a0a14_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c62a0a14_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1c62a0ddd_CastExpr {
	jule::Ptr<_1c6299249_TypeDecl> _field_Kind;
	jule::Ptr<_1c629d57d_Expr> _field_Expr;
	

	inline bool operator==(_1c62a0ddd_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c62a0ddd_CastExpr _other) { return !this->operator==(_other); }


};
struct _1c62a12b7_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _field_Ns;
	jule::Ptr<_1c6283a3b_Token> _field_Ident;
	


};
struct _1c62a1691_SubIdentExpr {
	jule::Ptr<_1c629d57d_Expr> _field_Expr;
	jule::Ptr<_1c6283a3b_Token> _field_Ident;
	

	inline bool operator==(_1c62a1691_SubIdentExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1c62a1691_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1c62a1b47_BinopExpr {
	jule::Ptr<_1c629d57d_Expr> _field_Left;
	jule::Ptr<_1c629d57d_Expr> _field_Right;
	jule::Ptr<_1c6283a3b_Token> _field_Op;
	

	inline bool operator==(_1c62a1b47_BinopExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1c62a1b47_BinopExpr _other) { return !this->operator==(_other); }


};
struct _1c62a22a7_FnCallExpr {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Ptr<_1c629d57d_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1c629d57d_Expr>> _field_Args;
	jule::Ptr<_1c62a926a_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	


};
struct _1c62a2c9c_FieldExprPair {
	jule::Ptr<_1c6283a3b_Token> _field_Field;
	jule::Ptr<_1c629d57d_Expr> _field_Expr;
	

	inline bool operator==(_1c62a2c9c_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c62a2c9c_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1c62a35c7_StructLit {
	jule::Ptr<_1c6283a3b_Token> _field_End;
	jule::Ptr<_1c6299249_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1c629d57d_Expr>> _field_Exprs;
	


};
struct _1c62a3a7d_BraceLit {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Ptr<_1c6283a3b_Token> _field_End;
	jule::Slice<jule::Ptr<_1c629d57d_Expr>> _field_Exprs;
	


};
struct _1c62a43a8_KeyValPair {
	jule::Ptr<_1c629d57d_Expr> _field_Key;
	jule::Ptr<_1c629d57d_Expr> _field_Val;
	jule::Ptr<_1c6283a3b_Token> _field_Colon;
	

	inline bool operator==(_1c62a43a8_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_1c62a43a8_KeyValPair _other) { return !this->operator==(_other); }


};
struct _1c62a4aa1_SliceExpr {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Ptr<_1c6283a3b_Token> _field_End;
	jule::Slice<jule::Ptr<_1c629d57d_Expr>> _field_Exprs;
	


};
struct _1c62a5541_IndexingExpr {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Ptr<_1c6283a3b_Token> _field_End;
	jule::Ptr<_1c629d57d_Expr> _field_Expr;
	jule::Ptr<_1c629d57d_Expr> _field_Index;
	

	inline bool operator==(_1c62a5541_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1c62a5541_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1c62a5ba1_SlicingExpr {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Ptr<_1c6283a3b_Token> _field_End;
	jule::Ptr<_1c629d57d_Expr> _field_Expr;
	jule::Ptr<_1c629d57d_Expr> _field_Start;
	jule::Ptr<_1c629d57d_Expr> _field_To;
	

	inline bool operator==(_1c62a5ba1_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_1c62a5ba1_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1c62a5e9d_Constraint {
	jule::Slice<jule::Ptr<_1c6299249_TypeDecl>> _field_Mask;
	


};
struct _1c62a6454_GenericDecl {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c62a5e9d_Constraint> _field_Constraint;
	

	inline bool operator==(_1c62a6454_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1c62a6454_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1c62a682d_LabelSt {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Str _field_Ident;
	

	inline bool operator==(_1c62a682d_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1c62a682d_LabelSt _other) { return !this->operator==(_other); }


};
struct _1c62a6c07_GotoSt {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Ptr<_1c6283a3b_Token> _field_Label;
	

	inline bool operator==(_1c62a6c07_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1c62a6c07_GotoSt _other) { return !this->operator==(_other); }


};
struct _1c62a7004_FallSt {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	

	inline bool operator==(_1c62a7004_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_1c62a7004_FallSt _other) { return !this->operator==(_other); }


};
struct _1c62a7664_AssignLeft {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_1c629d57d_Expr> _field_Expr;
	

	inline bool operator==(_1c62a7664_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c62a7664_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1c62a7be7_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_1c6283a3b_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1c62a7664_AssignLeft>> _field_Left;
	jule::Ptr<_1c629d57d_Expr> _field_Right;
	


};
struct _1c62a8b0a_Stmt {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1c62a8b0a_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1c62a8b0a_Stmt _other) { return !this->operator==(_other); }


};
struct _1c62a926a_ScopeTree {
	jule::Ptr<_1c62a926a_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_1c62a8b0a_Stmt> _field_Stmts;
	jule::Ptr<_1c6283a3b_Token> _field_End;
	


};
struct _1c62a99a7_ParamDecl {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1c6299249_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1c62a99a7_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1c62a99a7_ParamDecl _other) { return !this->operator==(_other); }


};
struct _1c62aae09_FnDecl {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1c6298666_Directive>> _field_Directives;
	jule::Ptr<_1c62a926a_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1c62a6454_GenericDecl>> _field_Generics;
	jule::Ptr<_1c629c13c_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1c62a99a7_ParamDecl>> _field_Params;
	


};
struct _1c62abed7_VarDecl {
	jule::Ptr<_1c62a926a_ScopeTree> _field_Scope;
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_1c6298666_Directive>> _field_Directives;
	jule::Ptr<_1c6299249_TypeDecl> _field_Kind;
	jule::Ptr<_1c629d57d_Expr> _field_Expr;
	


};
struct _1c62ac3b1_RetSt {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Ptr<_1c629d57d_Expr> _field_Expr;
	

	inline bool operator==(_1c62ac3b1_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c62ac3b1_RetSt _other) { return !this->operator==(_other); }


};
struct _1c62aca54_Iter {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_1c62a926a_ScopeTree> _field_Scope;
	

	inline bool operator==(_1c62aca54_Iter _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1c62aca54_Iter _other) { return !this->operator==(_other); }


};
struct _1c62ad37e_WhileKind {
	jule::Ptr<_1c629d57d_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1c6283a3b_Token> _field_NextToken;
	

	inline bool operator==(_1c62ad37e_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_1c62ad37e_WhileKind _other) { return !this->operator==(_other); }


};
struct _1c62adc86_RangeKind {
	jule::Ptr<_1c6283a3b_Token> _field_InToken;
	jule::Ptr<_1c629d57d_Expr> _field_Expr;
	jule::Ptr<_1c62abed7_VarDecl> _field_KeyA;
	jule::Ptr<_1c62abed7_VarDecl> _field_KeyB;
	

	inline bool operator==(_1c62adc86_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1c62adc86_RangeKind _other) { return !this->operator==(_other); }


};
struct _1c62ae160_BreakSt {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Ptr<_1c6283a3b_Token> _field_Label;
	

	inline bool operator==(_1c62ae160_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1c62ae160_BreakSt _other) { return !this->operator==(_other); }


};
struct _1c62ae539_ContSt {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Ptr<_1c6283a3b_Token> _field_Label;
	

	inline bool operator==(_1c62ae539_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1c62ae539_ContSt _other) { return !this->operator==(_other); }


};
struct _1c62ae9e0_If {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Ptr<_1c629d57d_Expr> _field_Expr;
	jule::Ptr<_1c62a926a_ScopeTree> _field_Scope;
	

	inline bool operator==(_1c62ae9e0_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1c62ae9e0_If _other) { return !this->operator==(_other); }


};
struct _1c62aedb9_Else {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Ptr<_1c62a926a_ScopeTree> _field_Scope;
	

	inline bool operator==(_1c62aedb9_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1c62aedb9_Else _other) { return !this->operator==(_other); }


};
struct _1c62b0370_Conditional {
	jule::Ptr<_1c62ae9e0_If> _field_Head;
	jule::Slice<jule::Ptr<_1c62ae9e0_If>> _field_Tail;
	jule::Ptr<_1c62aedb9_Else> _field_Default;
	


};
struct _1c62b0aac_TypeAliasDecl {
	jule::Ptr<_1c62a926a_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c6299249_TypeDecl> _field_Kind;
	

	inline bool operator==(_1c62b0aac_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_Binded == _other._field_Binded &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1c62b0aac_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1c62b1063_Case {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Ptr<_1c62a926a_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1c629d57d_Expr>> _field_Exprs;
	


};
struct _1c62b17a0_MatchCase {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Ptr<_1c6283a3b_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_1c629d57d_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1c62b1063_Case>> _field_Cases;
	jule::Ptr<_1c62aedb9_Else> _field_Default;
	


};
struct _1c62b20b9_UseDecl {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _field_Selected;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	


};
struct _1c62b2570_EnumItemDecl {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c629d57d_Expr> _field_Expr;
	

	inline bool operator==(_1c62b2570_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c62b2570_EnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1c62b3131_EnumDecl {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1c6299249_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1c62b2570_EnumItemDecl>> _field_Items;
	jule::Ptr<_1c6283a3b_Token> _field_End;
	


};
struct _1c62b395b_TypeEnumItemDecl {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c6299249_TypeDecl> _field_Kind;
	

	inline bool operator==(_1c62b395b_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1c62b395b_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1c62b40bb_TypeEnumDecl {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1c62b395b_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_1c6283a3b_Token> _field_End;
	


};
struct _1c62b4385_FieldDecl {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1c6299249_TypeDecl> _field_Kind;
	jule::Ptr<_1c629d57d_Expr> _field_Default;
	

	inline bool operator==(_1c62b4385_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1c62b4385_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1c62b4c7b_StructDecl {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Ptr<_1c6283a3b_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1c62b4385_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1c6298666_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1c62a6454_GenericDecl>> _field_Generics;
	


};
struct _1c62b54b8_TraitDecl {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Ptr<_1c6283a3b_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1c6299249_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1c62aae09_FnDecl>> _field_Methods;
	


};
struct _1c62b5b28_Impl {
	jule::Ptr<_1c6283a3b_Token> _field_End;
	jule::Ptr<_1c6299249_TypeDecl> _field_Base;
	jule::Ptr<_1c6299249_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1c62aae09_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1c62abed7_VarDecl>> _field_Statics;
	


};
struct _1c62b6e48_Field {
	jule::Ptr<_1c62b9d3b_Struct> _field_Owner;
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1c64256e4_TypeSymbol> _field_Kind;
	jule::Ptr<_1c629d57d_Expr> _field_Default;
	

	inline bool operator==(_1c62b6e48_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1c62b6e48_Field _other) { return !this->operator==(_other); }


};
struct _1c62b8e28_Operators {
	jule::Ptr<_1c62d2b01_FnIns> _field_Eq;
	jule::Ptr<_1c62d2b01_FnIns> _field_Gt;
	jule::Ptr<_1c62d2b01_FnIns> _field_GtEq;
	jule::Ptr<_1c62d2b01_FnIns> _field_Lt;
	jule::Ptr<_1c62d2b01_FnIns> _field_LtEq;
	jule::Ptr<_1c62d2b01_FnIns> _field_Shl;
	jule::Ptr<_1c62d2b01_FnIns> _field_Shr;
	jule::Ptr<_1c62d2b01_FnIns> _field_Add;
	jule::Ptr<_1c62d2b01_FnIns> _field_Sub;
	jule::Ptr<_1c62d2b01_FnIns> _field_Div;
	jule::Ptr<_1c62d2b01_FnIns> _field_Mul;
	jule::Ptr<_1c62d2b01_FnIns> _field_Mod;
	jule::Ptr<_1c62d2b01_FnIns> _field_BitAnd;
	jule::Ptr<_1c62d2b01_FnIns> _field_BitOr;
	jule::Ptr<_1c62d2b01_FnIns> _field_BitXor;
	jule::Ptr<_1c62d2b01_FnIns> _field_Neg;
	jule::Ptr<_1c62d2b01_FnIns> _field_Pos;
	jule::Ptr<_1c62d2b01_FnIns> _field_BitNot;
	jule::Ptr<_1c62d2b01_FnIns> _field_AddAssign;
	jule::Ptr<_1c62d2b01_FnIns> _field_SubAssign;
	jule::Ptr<_1c62d2b01_FnIns> _field_DivAssign;
	jule::Ptr<_1c62d2b01_FnIns> _field_MulAssign;
	jule::Ptr<_1c62d2b01_FnIns> _field_ModAssign;
	jule::Ptr<_1c62d2b01_FnIns> _field_ShlAssign;
	jule::Ptr<_1c62d2b01_FnIns> _field_ShrAssign;
	jule::Ptr<_1c62d2b01_FnIns> _field_BitOrAssign;
	jule::Ptr<_1c62d2b01_FnIns> _field_BitAndAssign;
	jule::Ptr<_1c62d2b01_FnIns> _field_BitXorAssign;
	

	inline bool operator==(_1c62b8e28_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_1c62b8e28_Operators _other) { return !this->operator==(_other); }


};
struct _1c62b9d3b_Struct {
	jule::Ptr<_1c63679bb_Sema> _field_sema;
	jule::Slice<jule::Ptr<_1c62b9d3b_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1c62b9d3b_Struct>> _field_Uses;
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1c62b6e48_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1c62cebec_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1c6389da6_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1c6298666_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1c62a6454_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1c62e2e96_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1c62bcab9_StructIns>> _field_Instances;
	


};
struct _1c62bc019_FieldIns {
	jule::Ptr<_1c62b6e48_Field> _field_Decl;
	jule::Ptr<_1c641d522_TypeKind> _field_Kind;
	jule::Ptr<_1c63dd35a_Data> _field_Default;
	

	inline bool operator==(_1c62bc019_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1c62bc019_FieldIns _other) { return !this->operator==(_other); }


};
struct _1c62c19ad_OperandExprModel {
	jule::Ptr<_1c641d522_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

	inline bool operator==(_1c62c19ad_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_1c62c19ad_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1c62c1ea8_BinopExprModel {
	jule::Ptr<_1c62c19ad_OperandExprModel> _field_Left;
	jule::Ptr<_1c62c19ad_OperandExprModel> _field_Right;
	jule::Ptr<_1c6283a3b_Token> _field_Op;
	

	inline bool operator==(_1c62c1ea8_BinopExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1c62c1ea8_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _1c62c2382_UnaryExprModel {
	jule::Ptr<_1c63dd35a_Data> _field_Expr;
	jule::Ptr<_1c6283a3b_Token> _field_Op;
	

	inline bool operator==(_1c62c2382_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1c62c2382_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1c62c28b0_StructArgExprModel {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Ptr<_1c62bc019_FieldIns> _field_Field;
	jule::Ptr<_1c63dd35a_Data> _field_Expr;
	

	inline bool operator==(_1c62c28b0_StructArgExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c62c28b0_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1c62c2c56_StructLitExprModel {
	jule::Ptr<_1c62bcab9_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1c62c28b0_StructArgExprModel>> _field_Args;
	


};
struct _1c62c3053_AllocStructLitExprModel {
	jule::Ptr<_1c62c2c56_StructLitExprModel> _field_Lit;
	

	inline bool operator==(_1c62c3053_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_1c62c3053_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1c62c35d6_CastingExprModel {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1c641d522_TypeKind> _field_Kind;
	jule::Ptr<_1c641d522_TypeKind> _field_ExprKind;
	

	inline bool operator==(_1c62c35d6_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_1c62c35d6_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1c62c3e88_FnCallExprModel {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Ptr<_1c62d2b01_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1c6320754_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	


};
struct _1c62c4362_SliceExprModel {
	jule::Ptr<_1c641d522_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1c62c4818_IndexingExprModel {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Ptr<_1c63dd35a_Data> _field_Expr;
	jule::Ptr<_1c63dd35a_Data> _field_Index;
	

	inline bool operator==(_1c62c4818_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1c62c4818_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1c62c4be2_AnonFnExprModel {
	jule::Ptr<_1c62d2b01_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	

	inline bool operator==(_1c62c4be2_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_1c62c4be2_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1c62c50bb_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

	inline bool operator==(_1c62c50bb_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1c62c50bb_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1c62c5572_MapExprModel {
	jule::Ptr<_1c641d522_TypeKind> _field_KeyKind;
	jule::Ptr<_1c641d522_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_1c62c50bb_KeyValPairExprModel>> _field_Entries;
	


};
struct _1c62c5b05_SlicingExprModel {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1c62c5b05_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1c62c5b05_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1c62c6188_TraitSubIdentExprModel {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1c62cebec_Fn> _field_Method;
	jule::Ptr<_1c62e2e96_Trait> _field_Trt;
	

	inline bool operator==(_1c62c6188_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_1c62c6188_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1c62c6a29_StructSubIdentExprModel {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Ptr<_1c63dd35a_Data> _field_Expr;
	jule::Ptr<_1c62d2b01_FnIns> _field_Method;
	jule::Ptr<_1c62bc019_FieldIns> _field_Field;
	jule::Ptr<_1c62bcab9_StructIns> _field_Owner;
	

	inline bool operator==(_1c62c6a29_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_1c62c6a29_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1c62c6ed0_StructStaticIdentExprModel {
	jule::Ptr<_1c62bcab9_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1c62d2b01_FnIns> _field_Method;
	

	inline bool operator==(_1c62c6ed0_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_1c62c6ed0_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1c62c73a9_ArrayExprModel {
	jule::Ptr<_1c642c91b_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1c62c76a6_TupleExprModel {
	jule::Slice<jule::Ptr<_1c63dd35a_Data>> _field_Datas;
	


};
struct _1c62c7a80_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1c62c7a80_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1c62c7a80_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c62c7e59_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1c62c7e59_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1c62c7e59_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c62c8333_BuiltinNewCallExprModel {
	jule::Ptr<_1c641d522_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

	inline bool operator==(_1c62c8333_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_1c62c8333_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c62c870c_BuiltinPanicCallExprModel {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1c62c870c_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c62c870c_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c62c8bb3_BuiltinAssertCallExprModel {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

	inline bool operator==(_1c62c8bb3_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_1c62c8bb3_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c62c9169_BuiltinMakeCallExprModel {
	jule::Ptr<_1c641d522_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

	inline bool operator==(_1c62c9169_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_1c62c9169_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c62c9543_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

	inline bool operator==(_1c62c9543_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_1c62c9543_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c62c9840_BuiltinLenCallExprModel {
	jule::Ptr<_1c63dd35a_Data> _field_Expr;
	

	inline bool operator==(_1c62c9840_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c62c9840_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c62c9b3c_BuiltinCapCallExprModel {
	jule::Ptr<_1c63dd35a_Data> _field_Expr;
	

	inline bool operator==(_1c62c9b3c_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c62c9b3c_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c62ca016_BuiltinDeleteCallExprModel {
	jule::Ptr<_1c63dd35a_Data> _field_Dest;
	jule::Ptr<_1c63dd35a_Data> _field_Key;
	

	inline bool operator==(_1c62ca016_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_1c62ca016_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c62ca3e0_BuiltinCopyCallExprModel {
	jule::Ptr<_1c63dd35a_Data> _field_Dest;
	jule::Ptr<_1c63dd35a_Data> _field_Src;
	

	inline bool operator==(_1c62ca3e0_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_1c62ca3e0_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c62ca7b9_BuiltinErrorCallExprModel {
	jule::Ptr<_1c62d2b01_FnIns> _field_Func;
	jule::Ptr<_1c63dd35a_Data> _field_Err;
	

	inline bool operator==(_1c62ca7b9_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_1c62ca7b9_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c62c6375_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1c62c6375_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c62c6375_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1c62caee5_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1c62caee5_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c62caee5_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1c62cb2e2_RuneExprModel {
	jule::I32 _field_Code = 0;
	

	inline bool operator==(_1c62cb2e2_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_1c62cb2e2_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1c62cb5de_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1c62cb5de_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c62cb5de_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1c62cb9b8_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	


};
struct _1c62cbcb5_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1c62cbcb5_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c62cbcb5_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1c62cc997_RetType {
	jule::Ptr<_1c64256e4_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _field_Idents;
	


};
struct _1c62cd228_Param {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1c64256e4_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1c62cd228_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1c62cd228_Param _other) { return !this->operator==(_other); }


};
struct _1c62cebec_Fn {
	jule::Ptr<_1c63679bb_Sema> _field_sema;
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1c6298666_Directive>> _field_Directives;
	jule::Ptr<_1c62a926a_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1c62a6454_GenericDecl>> _field_Generics;
	jule::Ptr<_1c62cc997_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1c62cd228_Param>> _field_Params;
	jule::Ptr<_1c62b9d3b_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1c62d2b01_FnIns>> _field_Instances;
	


};
struct _1c62d1b55_ParamIns {
	jule::Ptr<_1c62cd228_Param> _field_Decl;
	jule::Ptr<_1c641d522_TypeKind> _field_Kind;
	

	inline bool operator==(_1c62d1b55_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1c62d1b55_ParamIns _other) { return !this->operator==(_other); }


};
struct _1c62d2b01_FnIns {
	jule::Ptr<_1c62bcab9_StructIns> _field_Owner;
	jule::Ptr<_1c62cebec_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1c641bb3b_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1c62d1b55_ParamIns>> _field_Params;
	jule::Ptr<_1c641d522_TypeKind> _field_Result;
	jule::Ptr<_1c6320754_Scope> _field_Scope;
	jule::Ptr<_1c62d5c9c_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)> _field_caller;
	jule::Bool _field_reloaded = false;
	


};
struct _1c62d5c9c_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	


};
struct _1c62d72ba_Pass {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Str _field_Text;
	

	inline bool operator==(_1c62d72ba_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_1c62d72ba_Pass _other) { return !this->operator==(_other); }


};
struct _1c62dbd80_symbolBuilder {
	jule::Ptr<_1c62dbd80_symbolBuilder> _field_owner;
	jule::Trait<_1c6343ac9_Importer> _field_importer;
	jule::Slice<_221968cb9_Log> _field_errors;
	jule::Ptr<_1c6297379_Ast> _field_ast;
	jule::Ptr<_1c63d8135_SymbolTable> _field_table;
	


};
struct _1c62e2e96_Trait {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1c64256e4_TypeSymbol>> _field_Inherits;
	jule::Slice<jule::Ptr<_1c62cebec_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1c62b9d3b_Struct>> _field_Implemented;
	


};
struct _1c62e4b24_EnumItem {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c63de49e_Value> _field_Value;
	

	inline bool operator==(_1c62e4b24_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1c62e4b24_EnumItem _other) { return !this->operator==(_other); }


};
struct _1c62e5691_Enum {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1c64256e4_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1c62e4b24_EnumItem>> _field_Items;
	


};
struct _1c62e67c4_TypeEnumItem {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c64256e4_TypeSymbol> _field_Kind;
	

	inline bool operator==(_1c62e67c4_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1c62e67c4_TypeEnumItem _other) { return !this->operator==(_other); }


};
struct _1c62e6d9b_TypeEnum {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1c62e67c4_TypeEnumItem>> _field_Items;
	


};
struct _1c62e9244_comptimeRange {
	jule::Trait<_1c62e9057_comptimeRangeKind> _field_kind;
	

	inline bool operator==(_1c62e9244_comptimeRange _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1c62e9244_comptimeRange _other) { return !this->operator==(_other); }


};
struct _1c62e9ca0_comptimeStructField {
	jule::Ptr<_1c62bc019_FieldIns> _field_field;
	

	inline bool operator==(_1c62e9ca0_comptimeStructField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1c62e9ca0_comptimeStructField _other) { return !this->operator==(_other); }


};
struct _1c62eb950_comptimeStructFields {
	jule::Slice<jule::Ptr<_1c62bc019_FieldIns>> _field_fields;
	


};
struct _1c62ed05b_comptimeStatic {
	jule::Ptr<_1c6389da6_Var> _field_field;
	

	inline bool operator==(_1c62ed05b_comptimeStatic _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1c62ed05b_comptimeStatic _other) { return !this->operator==(_other); }


};
struct _1c62eec1c_comptimeStatics {
	jule::Slice<jule::Ptr<_1c6389da6_Var>> _field_fields;
	


};
struct _1c6301317_comptimeEnumField {
	jule::Ptr<_1c62e4b24_EnumItem> _field_field;
	

	inline bool operator==(_1c6301317_comptimeEnumField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1c6301317_comptimeEnumField _other) { return !this->operator==(_other); }


};
struct _1c6302626_comptimeEnumFields {
	jule::Slice<jule::Ptr<_1c62e4b24_EnumItem>> _field_fields;
	


};
struct _1c6303ca9_comptimeParam {
	jule::Ptr<_1c62d1b55_ParamIns> _field_param;
	

	inline bool operator==(_1c6303ca9_comptimeParam _other) {
		return 
			this->_field_param == _other._field_param;
	}

	inline bool operator!=(_1c6303ca9_comptimeParam _other) { return !this->operator==(_other); }


};
struct _1c6306020_comptimeParams {
	jule::Slice<jule::Ptr<_1c62d1b55_ParamIns>> _field_params;
	


};
struct _1c630761a_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_1c6308c15_comptimeTypeInfo>> _field_types;
	


};
struct _1c6308c15_comptimeTypeInfo {
	jule::Ptr<_1c641d522_TypeKind> _field_base;
	

	inline bool operator==(_1c6308c15_comptimeTypeInfo _other) {
		return 
			this->_field_base == _other._field_base;
	}

	inline bool operator!=(_1c6308c15_comptimeTypeInfo _other) { return !this->operator==(_other); }


};
struct _1c6310227_comptimeValue {
	jule::Ptr<_1c63dd35a_Data> _field_data;
	

	inline bool operator==(_1c6310227_comptimeValue _other) {
		return 
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1c6310227_comptimeValue _other) { return !this->operator==(_other); }


};
struct _1c6312a76_comptimeFiles {
	jule::Slice<jule::Ptr<_1c63d8135_SymbolTable>> _field_files;
	


};
struct _1c6314171_comptimeFile {
	jule::Ptr<_1c63d8135_SymbolTable> _field_file;
	

	inline bool operator==(_1c6314171_comptimeFile _other) {
		return 
			this->_field_file == _other._field_file;
	}

	inline bool operator!=(_1c6314171_comptimeFile _other) { return !this->operator==(_other); }


};
struct _1c63182da_constraintChecker {
	jule::Ptr<_1c63679bb_Sema> _field_s;
	jule::Slice<jule::Ptr<_1c62a6454_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1c641bb3b_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1c641c730_TypeAlias>> _field_genericsA;
	jule::Ptr<_1c62d2b01_FnIns> _field_fi;
	jule::Ptr<_1c62bcab9_StructIns> _field_si;
	jule::Ptr<_1c6283a3b_Token> _field_et;
	jule::Bool _field_uniq = false;
	


};
struct _1c631a320_Impl {
	jule::Ptr<_1c6299249_TypeDecl> _field_Base;
	jule::Ptr<_1c6299249_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1c62cebec_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1c6389da6_Var>> _field_Statics;
	


};
struct _1c6320754_Scope {
	jule::Ptr<_1c6320754_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	


};
struct _1c6320b72_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1c6320754_Scope> _field_Scope;
	

	inline bool operator==(_1c6320b72_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1c6320b72_If _other) { return !this->operator==(_other); }


};
struct _1c6320e6e_Else {
	jule::Ptr<_1c6320754_Scope> _field_Scope;
	

	inline bool operator==(_1c6320e6e_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1c6320e6e_Else _other) { return !this->operator==(_other); }


};
struct _1c632138c_Conditional {
	jule::Slice<jule::Ptr<_1c6320b72_If>> _field_Elifs;
	jule::Ptr<_1c6320e6e_Else> _field_Default;
	


};
struct _1c6321689_InfIter {
	jule::Ptr<_1c6320754_Scope> _field_Scope;
	

	inline bool operator==(_1c6321689_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1c6321689_InfIter _other) { return !this->operator==(_other); }


};
struct _1c6321b40_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1c6320754_Scope> _field_Scope;
	

	inline bool operator==(_1c6321b40_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1c6321b40_WhileIter _other) { return !this->operator==(_other); }


};
struct _1c632258b_RangeIter {
	jule::Ptr<_1c63dd35a_Data> _field_Expr;
	jule::Ptr<_1c6320754_Scope> _field_Scope;
	jule::Ptr<_1c6389da6_Var> _field_KeyA;
	jule::Ptr<_1c6389da6_Var> _field_KeyB;
	

	inline bool operator==(_1c632258b_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1c632258b_RangeIter _other) { return !this->operator==(_other); }


};
struct _1c6322921_ContSt {
	jule::Uintptr _field_It = 0;
	

	inline bool operator==(_1c6322921_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_1c6322921_ContSt _other) { return !this->operator==(_other); }


};
struct _1c6322cea_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

	inline bool operator==(_1c6322cea_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_1c6322cea_BreakSt _other) { return !this->operator==(_other); }


};
struct _1c63230e7_Label {
	jule::Str _field_Ident;
	

	inline bool operator==(_1c63230e7_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1c63230e7_Label _other) { return !this->operator==(_other); }


};
struct _1c63234c1_GotoSt {
	jule::Str _field_Ident;
	jule::Ptr<_1c63230e7_Label> _field_Label;
	

	inline bool operator==(_1c63234c1_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1c63234c1_GotoSt _other) { return !this->operator==(_other); }


};
struct _1c632389a_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

	inline bool operator==(_1c632389a_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1c632389a_Postfix _other) { return !this->operator==(_other); }


};
struct _1c6323d51_Assign {
	jule::Ptr<_1c62c19ad_OperandExprModel> _field_L;
	jule::Ptr<_1c62c19ad_OperandExprModel> _field_R;
	jule::Ptr<_1c6283a3b_Token> _field_Op;
	

	inline bool operator==(_1c6323d51_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1c6323d51_Assign _other) { return !this->operator==(_other); }


};
struct _1c632422a_MultiAssign {
	jule::Slice<jule::Ptr<_1c63dd35a_Data>> _field_L;
	jule::Any _field_R = jule::Any(nullptr);
	


};
struct _1c632488a_Match {
	jule::Ptr<_1c63dd35a_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Bool _field_Comptime = false;
	jule::Slice<jule::Ptr<_1c63254c3_Case>> _field_Cases;
	jule::Ptr<_1c63254c3_Case> _field_Default;
	


};
struct _1c63254c3_Case {
	jule::Ptr<_1c632488a_Match> _field_Owner;
	jule::Ptr<_1c6320754_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1c63dd35a_Data>> _field_Exprs;
	jule::Ptr<_1c63254c3_Case> _field_Next;
	


};
struct _1c6325abc_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

	inline bool operator==(_1c6325abc_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_1c6325abc_FallSt _other) { return !this->operator==(_other); }


};
struct _1c6325e52_RetSt {
	jule::Ptr<_1c62d2b01_FnIns> _field_Func;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1c6325e52_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c6325e52_RetSt _other) { return !this->operator==(_other); }


};
struct _1c63265b2_scopeLabel {
	jule::Ptr<_1c6283a3b_Token> _field_token;
	jule::Ptr<_1c63230e7_Label> _field_label;
	jule::I64 _field_pos = 0;
	jule::Ptr<_1c6327a58_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

	inline bool operator==(_1c63265b2_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1c63265b2_scopeLabel _other) { return !this->operator==(_other); }


};
struct _1c6326b45_scopeGoto {
	jule::Ptr<_1c63234c1_GotoSt> _field_st;
	jule::Ptr<_1c62a6c07_GotoSt> _field_gt;
	jule::Ptr<_1c6327a58_scopeChecker> _field_scope;
	jule::I64 _field_pos = 0;
	

	inline bool operator==(_1c6326b45_scopeGoto _other) {
		return 
			this->_field_st == _other._field_st &&
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1c6326b45_scopeGoto _other) { return !this->operator==(_other); }


};
struct _1c6327a58_scopeChecker {
	jule::Ptr<_1c6283a3b_Token> _field_calledFrom;
	jule::Ptr<_1c63679bb_Sema> _field_s;
	jule::Ptr<_1c62d2b01_FnIns> _field_owner;
	jule::Ptr<_1c6327a58_scopeChecker> _field_parent;
	jule::I64 _field_childIndex = 0;
	jule::Ptr<_1c63d8135_SymbolTable> _field_table;
	jule::Ptr<_1c6320754_Scope> _field_scope;
	jule::Ptr<_1c62a926a_ScopeTree> _field_tree;
	jule::Ptr<_1c62d2b01_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1c63265b2_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1c6326b45_scopeGoto>>> _field_gotos;
	jule::I64 _field_i = 0;
	

	inline bool operator==(_1c6327a58_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1c6327a58_scopeChecker _other) { return !this->operator==(_other); }


};
struct _1c6340565_directiveChecker {
	jule::Ptr<_1c63679bb_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1c6298666_Directive>>> _field_d;
	jule::Any _field_o;
	

	inline bool operator==(_1c6340565_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1c6340565_directiveChecker _other) { return !this->operator==(_other); }


};
struct _1c63469de_ImportInfo {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _field_Selected;
	jule::Ptr<_1c6349915_Package> _field_Package;
	jule::I64 _field_ModId = 0;
	


};
struct _1c6349915_Package {
	jule::Slice<jule::Ptr<_1c63d8135_SymbolTable>> _field_Files;
	


};
struct _1c6366d94_commonSemaMeta {
	jule::Slice<jule::Ptr<_1c6308c15_comptimeTypeInfo>> _field_comptimeTypeInfos;
	


};
struct _1c63679bb_Sema {
	jule::Slice<_221968cb9_Log> _field_errors;
	jule::Slice<jule::Ptr<_1c63d8135_SymbolTable>> _field_files;
	jule::Ptr<_1c63d8135_SymbolTable> _field_file;
	jule::I64 _field_flags = 0LL;
	jule::Ptr<_1c6366d94_commonSemaMeta> _field_meta;
	


};
struct _1c638680e_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	


};
struct _1c6388beb_IterRelation {
	jule::Ptr<_1c6389da6_Var> _field_Range;
	

	inline bool operator==(_1c6388beb_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_1c6388beb_IterRelation _other) { return !this->operator==(_other); }


};
struct _1c6389da6_Var {
	jule::Ptr<_1c6320754_Scope> _field_Scope;
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1c64256e4_TypeSymbol> _field_Kind;
	jule::Ptr<_1c63de49e_Value> _field_Value;
	jule::Ptr<_1c62d5c9c_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1c6298666_Directive>> _field_Directives;
	jule::Ptr<_1c6388beb_IterRelation> _field_IterRelation;
	jule::I64 _field_RetOrder = -2LL;
	jule::Slice<jule::Ptr<_1c6389da6_Var>> _field_Depends;
	


};
struct _1c638abba_FuncPattern {
	


};
struct _1c63c5177_typeCompatibilityChecker {
	jule::Ptr<_1c63679bb_Sema> _field_s;
	jule::Ptr<_1c641d522_TypeKind> _field_dest;
	jule::Ptr<_1c641d522_TypeKind> _field_src;
	jule::Ptr<_1c6283a3b_Token> _field_errorToken;
	

	inline bool operator==(_1c63c5177_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1c63c5177_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
struct _1c63c6e26_assignTypeChecker {
	jule::Ptr<_1c63679bb_Sema> _field_s;
	jule::Ptr<_1c641d522_TypeKind> _field_dest;
	jule::Ptr<_1c63dd35a_Data> _field_d;
	jule::Ptr<_1c6283a3b_Token> _field_errorToken;
	

	inline bool operator==(_1c63c6e26_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1c63c6e26_assignTypeChecker _other) { return !this->operator==(_other); }


};
struct _1c63c8a93_dynamicTypeAnnotation {
	jule::Ptr<_1c63e004e_Eval> _field_e;
	jule::Ptr<_1c62d2b01_FnIns> _field_f;
	jule::Ptr<_1c62d1b55_ParamIns> _field_p;
	jule::Ptr<_1c63dd35a_Data> _field_a;
	jule::Ptr<_1c6283a3b_Token> _field_errorToken;
	jule::Ptr<_1c641d522_TypeKind>* _field_k = nullptr;
	jule::Ptr<_1c6299249_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1c641d522_TypeKind>> _field_ignored;
	


};
struct _1c63cd900_fnCallArgChecker {
	jule::Ptr<_1c63e004e_Eval> _field_e;
	jule::Slice<jule::Ptr<_1c629d57d_Expr>> _field_args;
	jule::Ptr<_1c6283a3b_Token> _field_errorToken;
	jule::Ptr<_1c62d2b01_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1c641d522_TypeKind>> _field_ignored;
	


};
struct _1c63d1837_structLitChecker {
	jule::Ptr<_1c63e004e_Eval> _field_e;
	jule::Ptr<_1c6283a3b_Token> _field_errorToken;
	jule::Ptr<_1c62bcab9_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1c62c28b0_StructArgExprModel>> _field_args;
	


};
struct _1c63d3619_rangeChecker {
	jule::Ptr<_1c6327a58_scopeChecker> _field_sc;
	jule::Ptr<_1c62adc86_RangeKind> _field_rang;
	jule::Ptr<_1c632258b_RangeIter> _field_Kind;
	jule::Ptr<_1c63dd35a_Data> _field_d;
	

	inline bool operator==(_1c63d3619_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1c63d3619_rangeChecker _other) { return !this->operator==(_other); }


};
struct _1c63d5d7a_retTypeChecker {
	jule::Ptr<_1c6327a58_scopeChecker> _field_sc;
	jule::Ptr<_1c62d2b01_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1c641d522_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_1c629d57d_Expr>> _field_exprs;
	jule::Ptr<_1c6283a3b_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	


};
struct _1c63d8135_SymbolTable {
	jule::Ptr<_1c6289305_File> _field_File;
	jule::Slice<_1c62d72ba_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1c63469de_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1c6389da6_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1c641c730_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1c62b9d3b_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1c62cebec_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1c62e2e96_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1c62e5691_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1c62e6d9b_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1c631a320_Impl>> _field_Impls;
	


};
struct _1c63dd35a_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_1c641d522_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_1dc260590_Const> _field_Constant;
	

	inline bool operator==(_1c63dd35a_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_1c63dd35a_Data _other) { return !this->operator==(_other); }


};
struct _1c63de49e_Value {
	jule::Ptr<_1c629d57d_Expr> _field_Expr;
	jule::Ptr<_1c63dd35a_Data> _field_Data;
	

	inline bool operator==(_1c63de49e_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1c63de49e_Value _other) { return !this->operator==(_other); }


};
struct _1c63e004e_Eval {
	jule::Ptr<_1c63679bb_Sema> _field_s;
	jule::Trait<_1c643d058_Lookup> _field_lookup;
	jule::Ptr<_1c641d522_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_1c6389da6_Var> _field_owner;
	jule::Ptr<_1c62bc019_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

	inline bool operator==(_1c63e004e_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1c63e004e_Eval _other) { return !this->operator==(_other); }


};
struct _1c640d4e0_unaryEval {
	jule::Ptr<_1c63e004e_Eval> _field_e;
	jule::Ptr<_1c63dd35a_Data> _field_d;
	jule::Ptr<_1c62a063a_UnaryExpr> _field_u;
	

	inline bool operator==(_1c640d4e0_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1c640d4e0_unaryEval _other) { return !this->operator==(_other); }


};
struct _1c641047b_binaryEval {
	jule::Ptr<_1c63e004e_Eval> _field_e;
	jule::Ptr<_1c63dd35a_Data> _field_l;
	jule::Ptr<_1c63dd35a_Data> _field_r;
	jule::Ptr<_1c6283a3b_Token> _field_op;
	

	inline bool operator==(_1c641047b_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1c641047b_binaryEval _other) { return !this->operator==(_other); }


};
struct _1c641bb3b_InsGeneric {
	jule::Ptr<_1c641d522_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_1c641d522_TypeKind>> _field_Constraint;
	


};
struct _1c641c730_TypeAlias {
	jule::Ptr<_1c62a926a_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c64256e4_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1c641c730_TypeAlias>> _field_Generics;
	


};
struct _1c641d522_TypeKind {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait<_1c641d06b_Kind> _field_Kind;
	

	inline bool operator==(_1c641d522_TypeKind _other) {
		return 
			this->_field_BindIdent == _other._field_BindIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1c641d522_TypeKind _other) { return !this->operator==(_other); }


};
struct _1c64256e4_TypeSymbol {
	jule::Ptr<_1c6299249_TypeDecl> _field_Decl;
	jule::Ptr<_1c641d522_TypeKind> _field_Kind;
	

	inline bool operator==(_1c64256e4_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1c64256e4_TypeSymbol _other) { return !this->operator==(_other); }


};
struct _1c64260eb_Prim {
	jule::Str _field_Kind;
	

	inline bool operator==(_1c64260eb_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1c64260eb_Prim _other) { return !this->operator==(_other); }


};
struct _1c6429b27_Sptr {
	jule::Ptr<_1c641d522_TypeKind> _field_Elem;
	

	inline bool operator==(_1c6429b27_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1c6429b27_Sptr _other) { return !this->operator==(_other); }


};
struct _1c642a5ea_Slc {
	jule::Ptr<_1c641d522_TypeKind> _field_Elem;
	

	inline bool operator==(_1c642a5ea_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1c642a5ea_Slc _other) { return !this->operator==(_other); }


};
struct _1c642b1de_Tuple {
	jule::Slice<jule::Ptr<_1c641d522_TypeKind>> _field_Types;
	


};
struct _1c642bc8e_Map {
	jule::Ptr<_1c641d522_TypeKind> _field_Key;
	jule::Ptr<_1c641d522_TypeKind> _field_Val;
	

	inline bool operator==(_1c642bc8e_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1c642bc8e_Map _other) { return !this->operator==(_other); }


};
struct _1c642c91b_Arr {
	jule::Bool _field_Auto = false;
	jule::I64 _field_N = 0;
	jule::Ptr<_1c641d522_TypeKind> _field_Elem;
	

	inline bool operator==(_1c642c91b_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1c642c91b_Arr _other) { return !this->operator==(_other); }


};
struct _1c642d3de_Ptr {
	jule::Ptr<_1c641d522_TypeKind> _field_Elem;
	

	inline bool operator==(_1c642d3de_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1c642d3de_Ptr _other) { return !this->operator==(_other); }


};
struct _1c642e3e0_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	inline bool operator==(_1c642e3e0_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1c642e3e0_referencer _other) { return !this->operator==(_other); }


};
struct _1c64303d0_typeChecker {
	jule::Ptr<_1c63679bb_Sema> _field_s;
	jule::Trait<_1c643d058_Lookup> _field_rootLookup;
	jule::Trait<_1c643d058_Lookup> _field_lookup;
	jule::Ptr<_1c642e3e0_referencer> _field_referencer;
	jule::Ptr<_1c62d5c9c_ReferenceStack> _field_refers;
	jule::Ptr<_1c6283a3b_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1c62a6454_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1c641d522_TypeKind>>* _field_ignoredGenerics = nullptr;
	jule::Slice<jule::Ptr<_1c641c730_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk = true;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_1c641c730_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1c641c730_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	


};
struct _1c6438064_identTypeLookup {
	

	inline bool operator==(_1c6438064_identTypeLookup _other) { return true; }

	inline bool operator!=(_1c6438064_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _1c6c84904_FileInfo {
	jule::Ptr<_1c6297379_Ast> _field_Ast;
	jule::Slice<_221968cb9_Log> _field_Errors;
	


};
struct _1c6cca2a7_stmt {
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	


};
struct _1c6ccab48_scopeParser {
	jule::Ptr<_1a9ebc7d5_parser> _field_p;
	jule::Ptr<_1c62a926a_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1c6cca2a7_stmt>> _field_stmts;
	jule::I64 _field_pos = 0;
	


};
struct _1a9eabbd1_exprBuilder {
	jule::Ptr<_1a9ebc7d5_parser> _field_p;
	

	inline bool operator==(_1a9eabbd1_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1a9eabbd1_exprBuilder _other) { return !this->operator==(_other); }


};
struct _1a9eb913e_assignInfo {
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _field_l;
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _field_r;
	jule::Ptr<_1c6283a3b_Token> _field_setter;
	jule::Bool _field_ok = false;
	


};
struct _1a9ebc7d5_parser {
	jule::Ptr<_1c6297379_Ast> _field_ast;
	jule::Slice<jule::Ptr<_1c6298666_Directive>> _field_directives;
	jule::Slice<_221968cb9_Log> _field_errors;
	jule::Ptr<_1a9eabbd1_exprBuilder> _field_ep;
	


};
struct _1a9ece64e_typeBuilder {
	jule::Ptr<_1a9ebc7d5_parser> _field_p;
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _field_tokens;
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = false;
	


};
struct _1c472d636_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str("clang", 5);
	jule::Str _field_CppStd = jule::Str("cpp14", 5);
	

	inline bool operator==(_1c472d636_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_1c472d636_CompileInfo _other) { return !this->operator==(_other); }


};
struct _1c472eadd_directiveEval {
	jule::Slice<_221968cb9_Log> _field_logs;
	jule::Ptr<_1c6298666_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1a9ed3785_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1c63469de_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1a9ed8999_OrderedDefines {
	jule::Slice<jule::Ptr<_1c62b9d3b_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1c6389da6_Var>> _field_Globals;
	


};
struct _1a9ed8c0d_defineOrderer {
	

	inline bool operator==(_1a9ed8c0d_defineOrderer _other) { return true; }

	inline bool operator!=(_1a9ed8c0d_defineOrderer _other) { return !this->operator==(_other); }


};
struct _1aa117c82_liveTable {
	jule::Slice<jule::Ptr<_1c6389da6_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1c62d2b01_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1c62bcab9_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1c62e2e96_Trait>> _field_traits;
	


};
struct _1aa134e14_scopeDeadCode {
	jule::Ptr<_1aa134e14_scopeDeadCode> _field_parent;
	jule::Ptr<_1c6320754_Scope> _field_s;
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1c63230e7_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1c63234c1_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

	inline bool operator==(_1aa134e14_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1aa134e14_scopeDeadCode _other) { return !this->operator==(_other); }


};
struct _1aa13916b_exprDeadCode {
	jule::Ptr<_1aa134e14_scopeDeadCode> _field_s;
	

	inline bool operator==(_1aa13916b_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1aa13916b_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _1c651ab6e_SwapExprModel {
	jule::Ptr<_1c63dd35a_Data> _field_Left;
	jule::Ptr<_1c63dd35a_Data> _field_Right;
	

	inline bool operator==(_1c651ab6e_SwapExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1c651ab6e_SwapExprModel _other) { return !this->operator==(_other); }


};
struct _1c651b08c_EmptyCompareExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Neg = false;
	

	inline bool operator==(_1c651b08c_EmptyCompareExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Neg == _other._field_Neg;
	}

	inline bool operator!=(_1c651b08c_EmptyCompareExprModel _other) { return !this->operator==(_other); }


};
struct _1c651b389_RefExprModel {
	jule::Ptr<_1c6389da6_Var> _field_Var;
	

	inline bool operator==(_1c651b389_RefExprModel _other) {
		return 
			this->_field_Var == _other._field_Var;
	}

	inline bool operator!=(_1c651b389_RefExprModel _other) { return !this->operator==(_other); }


};
struct _1c651b8b7_StrCompExprModel {
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Ptr<_1dc260590_Const> _field_Right;
	jule::Bool _field_NotEq = false;
	

	inline bool operator==(_1c651b8b7_StrCompExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_NotEq == _other._field_NotEq;
	}

	inline bool operator!=(_1c651b8b7_StrCompExprModel _other) { return !this->operator==(_other); }


};
struct _1c651be4a_MutSlicingExprModel {
	jule::Ptr<_1c6283a3b_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1c651be4a_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1c651be4a_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1c651c247_UnsafeBinopExprModel {
	jule::Ptr<_1c62c1ea8_BinopExprModel> _field_Node;
	

	inline bool operator==(_1c651c247_UnsafeBinopExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1c651c247_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _1c651c544_UnsafeIndexingExprModel {
	jule::Ptr<_1c62c4818_IndexingExprModel> _field_Node;
	

	inline bool operator==(_1c651c544_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1c651c544_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1c651c973_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_1c62c4362_SliceExprModel> _field_Elems;
	

	inline bool operator==(_1c651c973_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1c651c973_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1c651cd4c_AppendToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Slice = jule::Any(nullptr);
	

	inline bool operator==(_1c651cd4c_AppendToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Slice == _other._field_Slice;
	}

	inline bool operator!=(_1c651cd4c_AppendToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1c651d149_InlineStdInternalNosafeStobs {
	jule::Any _field_Str = jule::Any(nullptr);
	

	inline bool operator==(_1c651d149_InlineStdInternalNosafeStobs _other) {
		return 
			this->_field_Str == _other._field_Str;
	}

	inline bool operator!=(_1c651d149_InlineStdInternalNosafeStobs _other) { return !this->operator==(_other); }


};
struct _1c651e2e3_scopeOptimizer {
	jule::I64 _field_i = 0;
	jule::Ptr<_1c6320754_Scope> _field_scope;
	

	inline bool operator==(_1c651e2e3_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1c651e2e3_scopeOptimizer _other) { return !this->operator==(_other); }


};
struct _1c65254c5_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	

	inline bool operator==(_1c65254c5_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1c65254c5_exprOptimizer _other) { return !this->operator==(_other); }


};
struct _1a9eda5a0_stdCacheData {
	jule::Ptr<_1c62d2b01_FnIns> _field_f;
	jule::Fn<void(_1c65254c5_exprOptimizer*,_1a9eda5a0_stdCacheData*,jule::Ptr<_1c62c3e88_FnCallExprModel>*)> _field_do;
	


};
struct _1c6637b37_Optimizer {
	jule::Ptr<_1a9ed6249_IR> _field_ir;
	

	inline bool operator==(_1c6637b37_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1c6637b37_Optimizer _other) { return !this->operator==(_other); }


};
struct _1c66608eb_AnsiEscape {
	

	inline bool operator==(_1c66608eb_AnsiEscape _other) { return true; }

	inline bool operator!=(_1c66608eb_AnsiEscape _other) { return !this->operator==(_other); }


};
struct _1c6662029_Logger {
	

	inline bool operator==(_1c6662029_Logger _other) { return true; }

	inline bool operator!=(_1c6662029_Logger _other) { return !this->operator==(_other); }


};
struct _1aaa99aa9_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

	inline bool operator==(_1aaa99aa9_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_1aaa99aa9_AbsTime _other) { return !this->operator==(_other); }


};
struct _1aaa9a280_Time {
	jule::U64 _field_sec = 0;
	

	inline bool operator==(_1aaa9a280_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1aaa9a280_Time _other) { return !this->operator==(_other); }


};
struct _1aa9c4e9b_scopeCoder {
	jule::Ptr<_1aaaa472e_ObjectCoder> _field_oc;
	

	inline bool operator==(_1aa9c4e9b_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1aa9c4e9b_scopeCoder _other) { return !this->operator==(_other); }


};
struct _1aa9ce1b4_exprCoder {
	jule::Ptr<_1aaaa472e_ObjectCoder> _field_oc;
	

	inline bool operator==(_1aa9ce1b4_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1aa9ce1b4_exprCoder _other) { return !this->operator==(_other); }


};
struct _1aa9deaed_TestCoder {
	jule::Ptr<_1c62bcab9_StructIns> _field_t;
	jule::Ptr<_1c62cebec_Fn> _field_tmReset;
	jule::Ptr<_1c62cebec_Fn> _field_tmFailed;
	jule::Ptr<_1c62cebec_Fn> _field_tmSkipped;
	jule::Ptr<_1aaaa472e_ObjectCoder> _field_oc;
	

	inline bool operator==(_1aa9deaed_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1aa9deaed_TestCoder _other) { return !this->operator==(_other); }


};
struct _1aa9e27d2_identCoder {
	

	inline bool operator==(_1aa9e27d2_identCoder _other) { return true; }

	inline bool operator!=(_1aa9e27d2_identCoder _other) { return !this->operator==(_other); }


};
struct _1aaaa2c16_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

	inline bool operator==(_1aaaa2c16_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_1aaaa2c16_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1aaaa32dd_traitHash {
	jule::Ptr<_1c62e2e96_Trait> _field_t;
	jule::Str _field_ti;
	jule::Ptr<_1c62bcab9_StructIns> _field_s;
	jule::I64 _field_i = 0;
	

	inline bool operator==(_1aaaa32dd_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_ti == _other._field_ti &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1aaaa32dd_traitHash _other) { return !this->operator==(_other); }


};
struct _1aaaa36b7_traitCast {
	jule::Ptr<_1c62e2e96_Trait> _field_t1;
	jule::Ptr<_1c62e2e96_Trait> _field_t2;
	

	inline bool operator==(_1aaaa36b7_traitCast _other) {
		return 
			this->_field_t1 == _other._field_t1 &&
			this->_field_t2 == _other._field_t2;
	}

	inline bool operator!=(_1aaaa36b7_traitCast _other) { return !this->operator==(_other); }


};
struct _1aaab8743_customType {
	jule::Str _field_kind;
	

	inline bool operator==(_1aaab8743_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1aaab8743_customType _other) { return !this->operator==(_other); }


};
struct _1aaab9348_typeCoder {
	jule::Ptr<_1aaaa472e_ObjectCoder> _field_oc;
	jule::Ptr<_1aaac2120_resultCoder> _field_rc;
	

	inline bool operator==(_1aaab9348_typeCoder _other) {
		return 
			this->_field_oc == _other._field_oc &&
			this->_field_rc == _other._field_rc;
	}

	inline bool operator!=(_1aaab9348_typeCoder _other) { return !this->operator==(_other); }


};
struct _1aaac2120_resultCoder {
	jule::Ptr<_1aaab9348_typeCoder> _field_tc;
	

	inline bool operator==(_1aaac2120_resultCoder _other) {
		return 
			this->_field_tc == _other._field_tc;
	}

	inline bool operator!=(_1aaac2120_resultCoder _other) { return !this->operator==(_other); }


};
struct _1acbadc21_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

	inline bool operator==(_1acbadc21_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1acbadc21_Flag _other) { return !this->operator==(_other); }


};struct _1acbb2582_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

	inline bool operator==(_1acbb2582_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1acbb2582_Flag _other) { return !this->operator==(_other); }


};struct _1acbb5c7d_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

	inline bool operator==(_1acbb5c7d_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1acbb5c7d_Flag _other) { return !this->operator==(_other); }


};struct _1acbb94bd_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

	inline bool operator==(_1acbb94bd_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1acbb94bd_Flag _other) { return !this->operator==(_other); }


};struct _1acbbcbb9_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

	inline bool operator==(_1acbbcbb9_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1acbbcbb9_Flag _other) { return !this->operator==(_other); }


};
struct _1aab3d961_FlagSet {
	jule::Slice<jule::Trait<_1aab3bdb0_CommonFlag>> _field_flags;
	


};
struct _1aab413e2_argParser {
	_1aab3d961_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i = 0;
	


};
struct _1aaaa472e_ObjectCoder {
	_2206c697e_StrBuilder _field_Obj;
	_2206c697e_StrBuilder _field_resultDecls;
	_2206c697e_StrBuilder _field_anyObj;
	jule::Ptr<_1a9ed6249_IR> _field_ir;
	_1aaaa2c16_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1aaaa32dd_traitHash>> _field_tmap;
	jule::Slice<jule::U8> _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_1c641d522_TypeKind>> _field_anyTypeMap;
	jule::Slice<_1aaaa36b7_traitCast> _field_traitCastMap;
	jule::Ptr<_1aa9ce1b4_exprCoder> _field_ec;
	jule::Ptr<_1aa9c4e9b_scopeCoder> _field_sc;
	jule::Ptr<_1aaab9348_typeCoder> _field_tc;
	jule::I64 _field_headPos = 0;
	jule::I64 _field_declPos = 0;
	


};
struct _1aa1279a6_ObjectDeadCode {
	_1aa117c82_liveTable _field_live;
	jule::Ptr<_1a9ed6249_IR> _field_ir;
	


};
struct _1a9ed6249_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1c6349915_Package> _field_Main;
	jule::Slice<jule::Ptr<_1c63469de_ImportInfo>> _field_Used;
	_1a9ed8999_OrderedDefines _field_Ordered;
	


};
struct _1c62bcab9_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_1c62b9d3b_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1c641bb3b_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1c62bc019_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1c6389da6_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1c62cebec_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Comparable = false;
	jule::Ptr<_1c62d5c9c_ReferenceStack> _field_Refers;
	_1c62b8e28_Operators _field_Operators;
	


};
struct _221a270ec_Cmd {
	_221a2b387_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	


};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1c63dd35a_Data__jule_tuple_x_1c63dd35a_Data {
	jule::Ptr<_1c63dd35a_Data> __jule_result_arg0;
	jule::Ptr<_1c63dd35a_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1c63dd35a_Data__jule_tuple_bool {
	jule::Ptr<_1c63dd35a_Data> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1c62b1063_Case__jule_tuple_bool {
	jule::Ptr<_1c62b1063_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1c62b1063_Case__jule_tuple_x_1c62aedb9_Else {
	jule::Slice<jule::Ptr<_1c62b1063_Case>> __jule_result_arg0;
	jule::Ptr<_1c62aedb9_Else> __jule_result_arg1;
};
struct __jule_tuple__1c62a88a7_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1c62a7be7_AssignSt__jule_tuple_bool {
	jule::Ptr<_1c62a7be7_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1c6299249_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1c6299249_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1c629c13c_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1c629c13c_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1c6297379_Ast__jule_tuple_s_221968cb9_Log {
	jule::Slice<jule::Ptr<_1c6297379_Ast>> __jule_result_arg0;
	jule::Slice<_221968cb9_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_221968cb9_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_221968cb9_Log> __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a9ed6249_IR__jule_tuple_s_221968cb9_Log {
	jule::Ptr<_1a9ed6249_IR> __jule_result_arg0;
	jule::Slice<_221968cb9_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_i32 {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__22257de2d_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I64 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__22257de2d_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__22257de2d_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__22257de2d_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I64 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1c63d8135_SymbolTable__jule_tuple_s_221968cb9_Log {
	jule::Ptr<_1c63d8135_SymbolTable> __jule_result_arg0;
	jule::Slice<_221968cb9_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1c6349915_Package__jule_tuple_s_221968cb9_Log {
	jule::Ptr<_1c6349915_Package> __jule_result_arg0;
	jule::Slice<_221968cb9_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1c6297379_Ast__jule_tuple_s_221968cb9_Log {
	jule::Ptr<_1c6297379_Ast> __jule_result_arg0;
	jule::Slice<_221968cb9_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1c6283a3b_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1c6283a3b_Token__jule_tuple_sx_1c6283a3b_Token {
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_1c6283a3b_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_ssx_1c6283a3b_Token__jule_tuple_s_221968cb9_Log {
	jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>> __jule_result_arg0;
	jule::Slice<_221968cb9_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline _2206c697e_StrBuilder static__2206c6c9d_New(jule::I64);
inline void _2206d036c_Write(_2206c697e_StrBuilder*, jule::Slice<jule::U8>);
inline void _2206d0625_WriteStr(_2206c697e_StrBuilder*, jule::Str);
inline void _2206d08cd_WriteByte(_2206c697e_StrBuilder*, jule::U8);
inline jule::Str _2206d0e1c_Str(_2206c697e_StrBuilder*);
inline void _2206d111a_Clear(_2206c697e_StrBuilder*);
inline jule::I64 _2206d13a1_Len(_2206c697e_StrBuilder*);
inline jule::Slice<jule::U8> _2206d18bd_Buf(_2206c697e_StrBuilder*);
inline void _2206d1b76_SetBuf(_2206c697e_StrBuilder*, jule::Slice<jule::U8>);
inline jule::U8 _2218c78c6_index(_2218c7475_lazyBuff*, jule::I64);
inline void _2218c7b7e_append(_2218c7475_lazyBuff*, jule::U8);
inline jule::Str _2218c7e15_string(_2218c7475_lazyBuff*);
inline jule::Exceptional<jule::Slice<jule::Ptr<_220506a9a_DirEntry>>> static__2218ca1ae_Read(jule::Str);
inline jule::VoidExceptional static__2218ca3e0_Create(jule::Str);
inline jule::VoidExceptional static__2218ca621_Remove(jule::Str);
inline jule::Ptr<_2205120d3_File> static__220512512_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_2205120d3_File>> static__2205127cb_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__220512a95_Read(jule::Str);
inline jule::VoidExceptional static__220512e3b_Write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::VoidExceptional _220513d71_Close(_2205120d3_File*);
inline jule::Exceptional<jule::Ptr<_2205120d3_File>> static__220621e07_Open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__220622138_Remove(jule::Str);
inline jule::Exceptional<jule::I64> _2206225bc_Write(_2205120d3_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _22062290d_Read(_2205120d3_File*, jule::Slice<jule::U8>);
inline jule::Bool _220514cea_IsDir(_220514921_Status*);
inline jule::Bool _220515081_IsReg(_220514921_Status*);
inline jule::U64 _220515317_Size(_220514921_Status*);
inline jule::Exceptional<jule::Ptr<_220514921_Status>> static__2218cb017_Of(jule::Str);
inline jule::Bool _1dc2423eb_set(_1dc24aa31_decimal*, jule::Slice<jule::U8>);
inline __jule_tuple_u64__jule_tuple_bool _1dc24273c_floatBits(_1dc24aa31_decimal*, _1dc23708e_floatInfo*);
inline void _1dc24add8_assign(_1dc24aa31_decimal*, jule::U64);
inline void _1dc24b191_shift(_1dc24aa31_decimal*, jule::I64);
inline void _1dc24b449_roundDown(_1dc24aa31_decimal*, jule::I64);
inline void _1dc24b702_roundUp(_1dc24aa31_decimal*, jule::I64);
inline void _1dc24b9aa_round(_1dc24aa31_decimal*, jule::I64);
inline jule::U64 _1dc24bc41_roundedInteger(_1dc24aa31_decimal*);
inline jule::Ptr<_1dc260590_Const> static__1dc2609d0_NewI64(jule::I64);
inline jule::Ptr<_1dc260590_Const> static__1dc260c99_NewU64(jule::U64);
inline jule::Ptr<_1dc260590_Const> static__1dc261063_NewBool(jule::Bool);
inline jule::Ptr<_1dc260590_Const> static__1dc26132c_NewStr(jule::Str);
inline jule::Ptr<_1dc260590_Const> static__1dc2615e6_NewF64(jule::F64);
inline jule::Ptr<_1dc260590_Const> static__1dc261805_NewNil(void);
inline jule::I64 _1dc261e65_ReadI64(_1dc260590_Const*);
inline jule::U64 _1dc2621eb_ReadU64(_1dc260590_Const*);
inline jule::Bool _1dc262482_ReadBool(_1dc260590_Const*);
inline jule::Str _1dc262718_ReadStr(_1dc260590_Const*);
inline jule::F64 _1dc26299e_ReadF64(_1dc260590_Const*);
inline jule::I64 _1dc262c35_AsI64(_1dc260590_Const*);
inline jule::U64 _1dc262ebb_AsU64(_1dc260590_Const*);
inline jule::F64 _1dc263252_AsF64(_1dc260590_Const*);
inline void _1dc26350a_SetI64(_1dc260590_Const*, jule::I64);
inline void _1dc2637b3_SetU64(_1dc260590_Const*, jule::U64);
inline void _1dc263a6b_SetBool(_1dc260590_Const*, jule::Bool);
inline void _1dc263d24_SetStr(_1dc260590_Const*, jule::Str);
inline void _1dc2640cc_SetF64(_1dc260590_Const*, jule::F64);
inline jule::Bool _1dc264561_IsI64(_1dc260590_Const*);
inline jule::Bool _1dc2647e7_IsU64(_1dc260590_Const*);
inline jule::Bool _1dc264a7d_IsBool(_1dc260590_Const*);
inline jule::Bool _1dc264d14_IsStr(_1dc260590_Const*);
inline jule::Bool _1dc26509a_IsF64(_1dc260590_Const*);
inline jule::Bool _1dc265331_IsNil(_1dc260590_Const*);
inline jule::Bool _1dc2659b3_And(_1dc260590_Const*, _1dc260590_Const);
inline jule::Bool _1dc265d04_Or(_1dc260590_Const*, _1dc260590_Const);
inline jule::Bool _1dc26729a_Add(_1dc260590_Const*, _1dc260590_Const);
inline jule::Bool _1dc2675db_Sub(_1dc260590_Const*, _1dc260590_Const);
inline jule::Bool _1dc26792c_Mul(_1dc260590_Const*, _1dc260590_Const);
inline jule::Bool _1dc267c6d_Div(_1dc260590_Const*, _1dc260590_Const);
inline jule::Bool _1dc2680ae_Mod(_1dc260590_Const*, _1dc260590_Const);
inline jule::Bool _1dc268400_BitwiseAnd(_1dc260590_Const*, _1dc260590_Const);
inline jule::Bool _1dc268741_BitwiseOr(_1dc260590_Const*, _1dc260590_Const);
inline jule::Bool _1dc268a82_Xor(_1dc260590_Const*, _1dc260590_Const);
inline jule::Bool _1dc268dc3_Lshift(_1dc260590_Const*, _1dc260590_Const);
inline jule::Bool _1dc269214_Rshift(_1dc260590_Const*, _1dc260590_Const);
inline jule::U8 _1c6283db0_Prec(_1c6283a3b_Token*);
inline void _1c62896e0_Fill(_1c6289305_File*, jule::Slice<jule::U8>);
inline jule::Str _1c6289976_Dir(_1c6289305_File*);
inline jule::Str _1c6289c0c_Name(_1c6289305_File*);
inline jule::Str _1c628a2d4_GetRow(_1c6289305_File*, jule::I64);
inline void _1c6292ac2_pushErr(_1c629253e_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _1c6293133_lex(_1c629253e_lex*);
inline jule::Str _1c6293474_id(_1c629253e_lex*, jule::Slice<jule::U8>*);
inline jule::Slice<jule::U8> _1c629370a_resume(_1c629253e_lex*);
inline void _1c62939b3_lexLineComment(_1c629253e_lex*, jule::Ptr<_1c6283a3b_Token>*);
inline void _1c6293c6b_lexRangeComment(_1c629253e_lex*, jule::Ptr<_1c6283a3b_Token>*);
inline jule::Str _1c62940ac_num(_1c629253e_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1c62943ed_escapeSeq(_1c629253e_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1c62947e9_getRune(_1c629253e_lex*, jule::Slice<jule::U8>*, jule::Bool);
inline jule::Str _1c6294b3a_lexRune(_1c629253e_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1c6294dc1_lexStr(_1c629253e_lex*);
inline void _1c6295355_newLine(_1c629253e_lex*);
inline jule::Bool _1c62958b6_isOp(_1c629253e_lex*, jule::Slice<jule::U8>*, jule::Str, jule::U64, jule::Ptr<_1c6283a3b_Token>*);
inline jule::Bool _1c6295cb2_lexBasicOps(_1c629253e_lex*, jule::Slice<jule::U8>, jule::Ptr<_1c6283a3b_Token>*);
inline jule::Bool _1c62961ad_lexId(_1c629253e_lex*, jule::Slice<jule::U8>*, jule::Ptr<_1c6283a3b_Token>*);
inline jule::Bool _1c62965a9_lexNum(_1c629253e_lex*, jule::Slice<jule::U8>*, jule::Ptr<_1c6283a3b_Token>*);
inline jule::Ptr<_1c6283a3b_Token> _1c6296840_token(_1c629253e_lex*);
inline jule::Bool _1c629b0d6_IsUnsafe(_1c629ac73_PtrTypeDecl*);
inline jule::Bool _1c629b878_AutoSized(_1c629b515_ArrTypeDecl*);
inline jule::Bool _1c62a262b_Unhandled(_1c62a22a7_FnCallExpr*);
inline jule::Bool _1c62a28b2_Ignored(_1c62a22a7_FnCallExpr*);
inline jule::Bool _1c62a9d2b_IsSelf(_1c62a99a7_ParamDecl*);
inline jule::Bool _1c62ab26c_IsAnon(_1c62aae09_FnDecl*);
inline jule::Bool _1c62acdb7_IsInf(_1c62aca54_Iter*);
inline jule::Bool _1c62ad6e2_IsWhileNext(_1c62ad37e_WhileKind*);
inline jule::Ptr<_1c62bc019_FieldIns> _1c62b72bc_instance(jule::Ptr<_1c62b6e48_Field>);
inline jule::Ptr<_1c62bcab9_StructIns> _1c62ba29d_instance(jule::Ptr<_1c62b9d3b_Struct>);
inline jule::Ptr<_1c62bcab9_StructIns> _1c62ba5ab_appendInstance(_1c62b9d3b_Struct*, jule::Ptr<_1c62bcab9_StructIns>*);
inline jule::Ptr<_1c62cebec_Fn> _1c62ba9a7_FindMethod(_1c62b9d3b_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1c6389da6_Var> _1c62bace8_FindStatic(_1c62b9d3b_Struct*, jule::Str);
inline jule::Ptr<_1c62b6e48_Field> _1c62bb139_FindField(_1c62b9d3b_Struct*, jule::Str);
inline jule::Bool _1c62bb47a_IsImplements(_1c62b9d3b_Struct*, jule::Ptr<_1c62e2e96_Trait>);
inline jule::Bool _1c62bb7bb_IsUses(_1c62b9d3b_Struct*, jule::Ptr<_1c62b9d3b_Struct>);
inline jule::Ptr<_1c62d1b55_ParamIns> _1c62cd5ad_instance(jule::Ptr<_1c62cd228_Param>);
inline jule::Bool _1c62cd844_IsSelf(_1c62cd228_Param*);
inline jule::Bool _1c62cdaca_IsRef(_1c62cd228_Param*);
inline jule::Bool _1c62d0170_IsVoid(_1c62cebec_Fn*);
inline jule::Bool _1c62d0406_IsMethod(_1c62cebec_Fn*);
inline jule::Bool _1c62d068c_IsEntryPoint(_1c62cebec_Fn*);
inline jule::Bool _1c62d0923_IsInit(_1c62cebec_Fn*);
inline jule::Bool _1c62d0ba9_IsAnon(_1c62cebec_Fn*);
inline jule::Bool _1c62d0e40_AnyVar(_1c62cebec_Fn*);
inline jule::Ptr<_1c62d2b01_FnIns> _1c62d11c6_instanceForce(jule::Ptr<_1c62cebec_Fn>);
inline jule::Ptr<_1c62d2b01_FnIns> _1c62d145c_instance(jule::Ptr<_1c62cebec_Fn>);
inline jule::Ptr<_1c62d2b01_FnIns> _1c62d176a_appendInstance(_1c62cebec_Fn*, jule::Ptr<_1c62d2b01_FnIns>*);
inline jule::Str _1c62d1eb8_Str(_1c62d1b55_ParamIns*);
inline jule::Str _1c62d2e42_Str(_1c62d2b01_FnIns*);
inline jule::Bool _1c62d3283_Equal(jule::Ptr<_1c62d2b01_FnIns>, jule::Ptr<_1c641d522_TypeKind>);
inline jule::Bool _1c62d3728_EqualFn(jule::Ptr<_1c62d2b01_FnIns>, jule::Ptr<_1c62d2b01_FnIns>*);
inline jule::Bool _1c62d3a69_equalTrait(jule::Ptr<_1c62d2b01_FnIns>, jule::Ptr<_1c62d2b01_FnIns>*);
inline jule::Slice<jule::Ptr<_1c641d522_TypeKind>> _1c62d3d00_Types(_1c62d2b01_FnIns*);
inline jule::Bool _1c62d4086_IsBuiltin(_1c62d2b01_FnIns*);
inline jule::Bool _1c62d431c_IsAnon(_1c62d2b01_FnIns*);
inline jule::Bool _1c62d465d_Same(_1c62d2b01_FnIns*, jule::Ptr<_1c62d2b01_FnIns>);
inline jule::Str _1c62d499e_GetKindStr(_1c62d2b01_FnIns*, jule::Bool);
inline jule::Ptr<_1c62d5c9c_ReferenceStack> static__1c62d6099_new(void);
inline jule::I64 _1c62d6495_Len(_1c62d5c9c_ReferenceStack*);
inline jule::Any _1c62d67d6_At(_1c62d5c9c_ReferenceStack*, jule::I64);
inline void _1c62d6a8e_Push(_1c62d5c9c_ReferenceStack*, jule::Any);
inline jule::Bool _1acda05d8_Exist(_1c62d5c9c_ReferenceStack*, jule::Ptr<_1c62d2b01_FnIns>);
inline jule::Bool _1acdb7da3_Exist(_1c62d5c9c_ReferenceStack*, jule::Ptr<_1c6389da6_Var>);
inline jule::Bool _1ace7d9e6_Exist(_1c62d5c9c_ReferenceStack*, jule::Ptr<_1c62bcab9_StructIns>);
inline jule::Bool _1ad2ac550_Exist(_1c62d5c9c_ReferenceStack*, jule::Ptr<_1c62e2e96_Trait>);
inline void _1c62dc721_pushErr(_1c62dbd80_symbolBuilder*, jule::Ptr<_1c6283a3b_Token>*, jule::Str, jule::Slice<jule::Any>);
inline void _1c62dcea2_pushSuggestion(_1c62dbd80_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c62dd39d_checkCppUseDeclPath(_1c62dbd80_symbolBuilder*, jule::Ptr<_1c62b20b9_UseDecl>*, jule::Str*);
inline jule::Ptr<_1c63469de_ImportInfo> _1c62dd6ab_buildCppHeaderImport(_1c62dbd80_symbolBuilder*, jule::Ptr<_1c62b20b9_UseDecl>*);
inline jule::Ptr<_1c63469de_ImportInfo> _1c62dd9ec_buildStdImport(_1c62dbd80_symbolBuilder*, jule::Ptr<_1c62b20b9_UseDecl>*);
inline jule::Ptr<_1c63469de_ImportInfo> _1c62ddd3d_buildIdentImport(jule::Ptr<_1c62dbd80_symbolBuilder>, jule::Ptr<_1c62b20b9_UseDecl>*);
inline jule::Ptr<_1c63469de_ImportInfo> _1c62de17e_buildImport(jule::Ptr<_1c62dbd80_symbolBuilder>, jule::Ptr<_1c62b20b9_UseDecl>*);
inline jule::Bool _1c62de4c0_checkDuplicateUseDecl(_1c62dbd80_symbolBuilder*, jule::Ptr<_1c63469de_ImportInfo>*);
inline void _1c62de833_implImportSelections(_1c62dbd80_symbolBuilder*, jule::Ptr<_1c63469de_ImportInfo>*, jule::Ptr<_1c62b20b9_UseDecl>*);
inline jule::Str _1c62deb74_getAsLinkPath(jule::Ptr<_1c62dbd80_symbolBuilder>, jule::Str);
inline void _1c62e0092_pushCycleError(jule::Ptr<_1c62dbd80_symbolBuilder>, jule::Ptr<_1c62dbd80_symbolBuilder>*, jule::Str, _2206c697e_StrBuilder*);
inline void _1c62e04b0_pushCrossCycleError(jule::Ptr<_1c62dbd80_symbolBuilder>, jule::Ptr<_1c62dbd80_symbolBuilder>*, jule::Ptr<_1c63469de_ImportInfo>*, jule::Ptr<_1c6283a3b_Token>*);
inline jule::Bool _1c62e08ab_checkImportCycles(jule::Ptr<_1c62dbd80_symbolBuilder>, jule::Ptr<_1c63469de_ImportInfo>, jule::Ptr<_1c62b20b9_UseDecl>*);
inline void _1c62e0cc9_checkPackageAccessibility(_1c62dbd80_symbolBuilder*, jule::Ptr<_1c62b20b9_UseDecl>*, jule::Str*, jule::Str*);
inline jule::Bool _1c62e11c5_importPackage(jule::Ptr<_1c62dbd80_symbolBuilder>, jule::Ptr<_1c63469de_ImportInfo>*, jule::Ptr<_1c62b20b9_UseDecl>*);
inline jule::Ptr<_1c63469de_ImportInfo> _1c62e1516_importUseDecl(jule::Ptr<_1c62dbd80_symbolBuilder>, jule::Ptr<_1c62b20b9_UseDecl>*);
inline void _1c62e1714_importUseDecls(jule::Ptr<_1c62dbd80_symbolBuilder>);
inline void _1c62e19bc_appendNode(_1c62dbd80_symbolBuilder*, _1c6298248_Node*);
inline void _1c62e1bba_appendNodes(_1c62dbd80_symbolBuilder*);
inline void _1c62e1e73_pushDirectivePass(_1c62dbd80_symbolBuilder*, jule::Ptr<_1c6298666_Directive>*);
inline void _1c62e2171_appendTopDirectives(_1c62dbd80_symbolBuilder*);
inline void _1c62e236e_build(jule::Ptr<_1c62dbd80_symbolBuilder>);
inline jule::Str _1c62e335e_Str(_1c62e2e96_Trait*);
inline jule::Bool _1c62e36a0_Equal(jule::Ptr<_1c62e2e96_Trait>, jule::Ptr<_1c641d522_TypeKind>);
inline jule::Ptr<_1c62cebec_Fn> _1c62e3b45_FindMethod(_1c62e2e96_Trait*, jule::Str);
inline jule::Ptr<_1c62cebec_Fn> _1c62e42c7_findMethodInherit(_1c62e2e96_Trait*, jule::Str*);
inline jule::Bool _1c62e4ecb_AutoExpr(_1c62e4b24_EnumItem*);
inline jule::Str _1c62e5a15_Str(_1c62e5691_Enum*);
inline jule::Bool _1c62e5d56_Equal(jule::Ptr<_1c62e5691_Enum>, jule::Ptr<_1c641d522_TypeKind>);
inline jule::Ptr<_1c62e4b24_EnumItem> _1c62e6285_FindItem(_1c62e5691_Enum*, jule::Str);
inline jule::Str _1c62e71dc_Str(_1c62e6d9b_TypeEnum*);
inline jule::Bool _1c62e752d_Equal(jule::Ptr<_1c62e6d9b_TypeEnum>, jule::Ptr<_1c641d522_TypeKind>);
inline jule::Ptr<_1c62e67c4_TypeEnumItem> _1c62e795c_FindItem(_1c62e6d9b_TypeEnum*, jule::Str);
inline jule::Str _1c62e960c_Str(_1c62e9244_comptimeRange*);
inline jule::Bool _1c62e994d_Equal(jule::Ptr<_1c62e9244_comptimeRange>, jule::Ptr<_1c641d522_TypeKind>);
inline jule::Str _1c62ea124_Str(_1c62e9ca0_comptimeStructField*);
inline jule::Bool _1c62ea465_Equal(jule::Ptr<_1c62e9ca0_comptimeStructField>, jule::Ptr<_1c641d522_TypeKind>);
inline jule::Ptr<_1c63dd35a_Data> _1c62ea982__Name(jule::Ptr<_1c62e9ca0_comptimeStructField>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c62ead7d__Type(jule::Ptr<_1c62e9ca0_comptimeStructField>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c62eb279__Public(jule::Ptr<_1c62e9ca0_comptimeStructField>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c62eb5ba_subIdent(jule::Ptr<_1c62e9ca0_comptimeStructField>, jule::Str*);
inline jule::Str _1c62ebcd5_Str(_1c62eb950_comptimeStructFields*);
inline jule::Bool _1c62ec126_Equal(jule::Ptr<_1c62eb950_comptimeStructFields>, jule::Ptr<_1c641d522_TypeKind>);
inline void _1c62ec599_ready(_1c62eb950_comptimeStructFields*, jule::Ptr<_1c6389da6_Var>*, jule::Ptr<_1c6389da6_Var>*);
inline void _1c62ec9b7_step(_1c62eb950_comptimeStructFields*, jule::I64, jule::Ptr<_1c6389da6_Var>*, jule::Ptr<_1c6389da6_Var>*);
inline jule::I64 _1c62ecc4d_len(_1c62eb950_comptimeStructFields*);
inline jule::Str _1c62ed3d0_Str(_1c62ed05b_comptimeStatic*);
inline jule::Bool _1c62ed721_Equal(jule::Ptr<_1c62ed05b_comptimeStatic>, jule::Ptr<_1c641d522_TypeKind>);
inline jule::Ptr<_1c63dd35a_Data> _1c62edc3d__Name(jule::Ptr<_1c62ed05b_comptimeStatic>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c62ee139__Type(jule::Ptr<_1c62ed05b_comptimeStatic>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c62ee535__Public(jule::Ptr<_1c62ed05b_comptimeStatic>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c62ee876_subIdent(jule::Ptr<_1c62ed05b_comptimeStatic>, jule::Str*);
inline jule::Str _1c6300091_Str(_1c62eec1c_comptimeStatics*);
inline jule::Bool _1c63003d2_Equal(jule::Ptr<_1c62eec1c_comptimeStatics>, jule::Ptr<_1c641d522_TypeKind>);
inline void _1c6300855_ready(_1c62eec1c_comptimeStatics*, jule::Ptr<_1c6389da6_Var>*, jule::Ptr<_1c6389da6_Var>*);
inline void _1c6300c73_step(_1c62eec1c_comptimeStatics*, jule::I64, jule::Ptr<_1c6389da6_Var>*, jule::Ptr<_1c6389da6_Var>*);
inline jule::I64 _1c6301009_len(_1c62eec1c_comptimeStatics*);
inline jule::Str _1c630168b_Str(_1c6301317_comptimeEnumField*);
inline jule::Bool _1c63019cc_Equal(jule::Ptr<_1c6301317_comptimeEnumField>, jule::Ptr<_1c641d522_TypeKind>);
inline jule::Ptr<_1c63dd35a_Data> _1c6301ec7__Name(jule::Ptr<_1c6301317_comptimeEnumField>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c6302318_subIdent(jule::Ptr<_1c6301317_comptimeEnumField>, jule::Str*);
inline jule::Str _1c6302aaa_Str(_1c6302626_comptimeEnumFields*);
inline jule::Bool _1c6302deb_Equal(jule::Ptr<_1c6302626_comptimeEnumFields>, jule::Ptr<_1c641d522_TypeKind>);
inline void _1c63032e7_ready(_1c6302626_comptimeEnumFields*, jule::Ptr<_1c6389da6_Var>*, jule::Ptr<_1c6389da6_Var>*);
inline void _1c6303715_step(_1c6302626_comptimeEnumFields*, jule::I64, jule::Ptr<_1c6389da6_Var>*, jule::Ptr<_1c6389da6_Var>*);
inline jule::I64 _1c630399b_len(_1c6302626_comptimeEnumFields*);
inline jule::Str _1c630412d_Str(_1c6303ca9_comptimeParam*);
inline jule::Bool _1c630446e_Equal(jule::Ptr<_1c6303ca9_comptimeParam>, jule::Ptr<_1c641d522_TypeKind>);
inline jule::Ptr<_1c63dd35a_Data> _1c630499c__Name(jule::Ptr<_1c6303ca9_comptimeParam>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c6304d98__Type(jule::Ptr<_1c6303ca9_comptimeParam>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c6305294__Variadic(jule::Ptr<_1c6303ca9_comptimeParam>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c6305690__Reference(jule::Ptr<_1c6303ca9_comptimeParam>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c63059d1_subIdent(jule::Ptr<_1c6303ca9_comptimeParam>, jule::Str*);
inline jule::Str _1c6306394_Str(_1c6306020_comptimeParams*);
inline jule::Bool _1c63066d5_Equal(jule::Ptr<_1c6306020_comptimeParams>, jule::Ptr<_1c641d522_TypeKind>);
inline void _1c6306b58_ready(_1c6306020_comptimeParams*, jule::Ptr<_1c6389da6_Var>*, jule::Ptr<_1c6389da6_Var>*);
inline void _1c6307076_step(_1c6306020_comptimeParams*, jule::I64, jule::Ptr<_1c6389da6_Var>*, jule::Ptr<_1c6389da6_Var>*);
inline jule::I64 _1c630730c_len(_1c6306020_comptimeParams*);
inline jule::Str _1c630798e_Str(_1c630761a_comptimeTypeInfos*);
inline jule::Bool _1c6307cd0_Equal(jule::Ptr<_1c630761a_comptimeTypeInfos>, jule::Ptr<_1c641d522_TypeKind>);
inline void _1c6308253_ready(_1c630761a_comptimeTypeInfos*, jule::Ptr<_1c6389da6_Var>*, jule::Ptr<_1c6389da6_Var>*);
inline void _1c6308671_step(_1c630761a_comptimeTypeInfos*, jule::I64, jule::Ptr<_1c6389da6_Var>*, jule::Ptr<_1c6389da6_Var>*);
inline jule::I64 _1c6308907_len(_1c630761a_comptimeTypeInfos*);
inline jule::Str _1c6309089_Str(_1c6308c15_comptimeTypeInfo*);
inline jule::Bool _1c63093ca_Equal(jule::Ptr<_1c6308c15_comptimeTypeInfo>, jule::Ptr<_1c641d522_TypeKind>);
inline jule::Ptr<_1c63dd35a_Data> _1c6309a29__Str(jule::Ptr<_1c6308c15_comptimeTypeInfo>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c6309e25__Kind(jule::Ptr<_1c6308c15_comptimeTypeInfo>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c630a321__Bits(jule::Ptr<_1c6308c15_comptimeTypeInfo>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c630a71c__Elem(jule::Ptr<_1c6308c15_comptimeTypeInfo>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c630ab18__Size(jule::Ptr<_1c6308c15_comptimeTypeInfo>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c630b014__Key(jule::Ptr<_1c6308c15_comptimeTypeInfo>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c630b410__Value(jule::Ptr<_1c6308c15_comptimeTypeInfo>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c630b80b__Fields(jule::Ptr<_1c6308c15_comptimeTypeInfo>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c630bc07__Statics(jule::Ptr<_1c6308c15_comptimeTypeInfo>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c630c103__Public(jule::Ptr<_1c6308c15_comptimeTypeInfo>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c630c4ee__Binded(jule::Ptr<_1c6308c15_comptimeTypeInfo>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c630c8ea__Ordered(jule::Ptr<_1c6308c15_comptimeTypeInfo>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c630cce6__Comparable(jule::Ptr<_1c6308c15_comptimeTypeInfo>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c630d1e2__Mutable(jule::Ptr<_1c6308c15_comptimeTypeInfo>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c630d5dd__Types(jule::Ptr<_1c6308c15_comptimeTypeInfo>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c630d9d9__Exceptional(jule::Ptr<_1c6308c15_comptimeTypeInfo>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c630ddd5__CanNil(jule::Ptr<_1c6308c15_comptimeTypeInfo>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c630e2d1__RC(jule::Ptr<_1c6308c15_comptimeTypeInfo>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c630e6cc__Result(jule::Ptr<_1c6308c15_comptimeTypeInfo>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c630eac8__Params(jule::Ptr<_1c6308c15_comptimeTypeInfo>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c630ee19_subIdent(jule::Ptr<_1c6308c15_comptimeTypeInfo>, jule::Str*);
inline jule::Str _1c631059b_Str(_1c6310227_comptimeValue*);
inline jule::Bool _1c63108dc_Equal(jule::Ptr<_1c6310227_comptimeValue>, jule::Ptr<_1c641d522_TypeKind>);
inline jule::Ptr<_1c63dd35a_Data> _1c6310e3c__Unwrap(jule::Ptr<_1c6310227_comptimeValue>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c6311338__Type(jule::Ptr<_1c6310227_comptimeValue>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c6311734__Lvalue(jule::Ptr<_1c6310227_comptimeValue>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c6311b30__Mutable(jule::Ptr<_1c6310227_comptimeValue>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c631202b__Const(jule::Ptr<_1c6310227_comptimeValue>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c6312427__Field(jule::Ptr<_1c6310227_comptimeValue>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c6312768_subIdent(jule::Ptr<_1c6310227_comptimeValue>, jule::Str*);
inline jule::Str _1c6312dea_Str(_1c6312a76_comptimeFiles*);
inline jule::Bool _1c631323b_Equal(jule::Ptr<_1c6312a76_comptimeFiles>, jule::Ptr<_1c641d522_TypeKind>);
inline void _1c63136ae_ready(_1c6312a76_comptimeFiles*, jule::Ptr<_1c6389da6_Var>*, jule::Ptr<_1c6389da6_Var>*);
inline void _1c6313acc_step(_1c6312a76_comptimeFiles*, jule::I64, jule::Ptr<_1c6389da6_Var>*, jule::Ptr<_1c6389da6_Var>*);
inline jule::I64 _1c6313d63_len(_1c6312a76_comptimeFiles*);
inline jule::Str _1c63144e5_Str(_1c6314171_comptimeFile*);
inline jule::Bool _1c6314836_Equal(jule::Ptr<_1c6314171_comptimeFile>, jule::Ptr<_1c641d522_TypeKind>);
inline jule::Ptr<_1c63dd35a_Data> _1c6314d53__Path(jule::Ptr<_1c6314171_comptimeFile>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c631524e__Name(jule::Ptr<_1c6314171_comptimeFile>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c631564a__Dir(jule::Ptr<_1c6314171_comptimeFile>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c631598b_subIdent(jule::Ptr<_1c6314171_comptimeFile>, jule::Str*);
inline jule::Fn<jule::Bool(jule::Ptr<_1c63679bb_Sema>*,jule::Slice<jule::Ptr<_1c641c730_TypeAlias>>*)> _1c63186d6_readyFn(jule::Ptr<_1c63182da_constraintChecker>);
inline jule::Bool _1c631896c_readyFi(jule::Ptr<_1c63182da_constraintChecker>);
inline jule::Bool _1c6318c03_readySi(jule::Ptr<_1c63182da_constraintChecker>);
inline jule::Bool _1c6318e89_ready(jule::Ptr<_1c63182da_constraintChecker>);
inline jule::Bool _1c6319220_check(jule::Ptr<_1c63182da_constraintChecker>);
inline jule::Bool _1c631a6d8_IsTraitImpl(_1c631a320_Impl*);
inline jule::Bool _1c631a96e_IsStructImpl(_1c631a320_Impl*);
inline jule::Ptr<_1c63469de_ImportInfo> _1c6327eed_SelectPackage(_1c6327a58_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_1c63469de_ImportInfo>)>);
inline jule::Ptr<_1c6389da6_Var> _1c63283e9_FindVar(_1c6327a58_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1c641c730_TypeAlias> _1c63287e5_FindTypeAlias(_1c6327a58_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1c62b9d3b_Struct> _1c6328be1_FindStruct(_1c6327a58_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1c62cebec_Fn> _1c63290dc_FindFn(_1c6327a58_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1c62e2e96_Trait> _1c632942d_FindTrait(_1c6327a58_scopeChecker*, jule::Str);
inline jule::Ptr<_1c62e5691_Enum> _1c632976e_FindEnum(_1c6327a58_scopeChecker*, jule::Str);
inline jule::Ptr<_1c62e6d9b_TypeEnum> _1c6329ab0_FindTypeEnum(_1c6327a58_scopeChecker*, jule::Str);
inline jule::Bool _1c6329e12_isUnsafe(jule::Ptr<_1c6327a58_scopeChecker>);
inline jule::Bool _1c632a198_isRoot(_1c6327a58_scopeChecker*);
inline void _1c632a396_stop(_1c6327a58_scopeChecker*);
inline jule::Bool _1c632a62c_stopped(_1c6327a58_scopeChecker*);
inline jule::Bool _1c632a8b3_isDeferred(jule::Ptr<_1c6327a58_scopeChecker>);
inline jule::Ptr<_1c6327a58_scopeChecker> _1c632ab49_getRoot(jule::Ptr<_1c6327a58_scopeChecker>);
inline jule::Ptr<_1c6327a58_scopeChecker> _1c632add0_getHardRoot(jule::Ptr<_1c6327a58_scopeChecker>);
inline jule::Ptr<_1c63230e7_Label> _1c632b221_findLabel(_1c6327a58_scopeChecker*, jule::Str*);
inline jule::Ptr<_1c63265b2_scopeLabel> _1c632b562_findLabelScope(jule::Ptr<_1c6327a58_scopeChecker>, jule::Str*);
inline jule::Ptr<_1c63265b2_scopeLabel> _1c632b8a3_findLabelAll(_1c6327a58_scopeChecker*, jule::Str*);
inline jule::Bool _1c632bc9e_isDuplicatedIdent(_1c6327a58_scopeChecker*, jule::Uintptr, jule::Str*);
inline void _1c632c057_checkVarDecl(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c62abed7_VarDecl>);
inline void _1c632c310_checkTypeAlias(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c641c730_TypeAlias>*);
inline void _1c632c5b8_checkTypeAliasDecl(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c62b0aac_TypeAliasDecl>);
inline jule::Ptr<_1c6320754_Scope> _1c632c84e_getChild(_1c6327a58_scopeChecker*);
inline void _1c632cc6c_checkChildSsc(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c62a926a_ScopeTree>*, jule::Ptr<_1c6320754_Scope>*, jule::Ptr<_1c6327a58_scopeChecker>*);
inline jule::Ptr<_1c6320754_Scope> _1c632d168_checkChildSc(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c62a926a_ScopeTree>*, jule::Ptr<_1c6327a58_scopeChecker>*);
inline jule::Ptr<_1c6320754_Scope> _1c632d4a9_checkChild(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c62a926a_ScopeTree>*);
inline void _1c632d762_checkAnonScope(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c62a926a_ScopeTree>);
inline void _1c632dac5_processErrorCall(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c62ca7b9_BuiltinErrorCallExprModel>*, jule::Ptr<_1c6283a3b_Token>);
inline void _1c632dd7d_checkExpr(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c629d57d_Expr>);
inline jule::Ptr<_1c6320b72_If> _1c632e1be_checkIf(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c62ae9e0_If>);
inline jule::Ptr<_1c6320e6e_Else> _1c632e510_checkElse(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c62aedb9_Else>);
inline void _1c632e7b8_checkConditional(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c62b0370_Conditional>);
inline void _1c632ec91_checkIterScopeSsc(jule::Ptr<_1c6327a58_scopeChecker>, jule::Uintptr, jule::Ptr<_1c62a926a_ScopeTree>, jule::Ptr<_1c6320754_Scope>*, jule::Ptr<_1c6327a58_scopeChecker>);
inline jule::Ptr<_1c6320754_Scope> _1c6330247_checkIterScopeSc(jule::Ptr<_1c6327a58_scopeChecker>, jule::Uintptr, jule::Ptr<_1c62a926a_ScopeTree>, jule::Ptr<_1c6327a58_scopeChecker>);
inline jule::Ptr<_1c6320754_Scope> _1c6330643_checkIterScope(jule::Ptr<_1c6327a58_scopeChecker>, jule::Uintptr, jule::Ptr<_1c62a926a_ScopeTree>*);
inline void _1c63308eb_checkInfIter(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c62aca54_Iter>*);
inline void _1c6330ba4_checkWhileIter(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c62aca54_Iter>*);
inline void _1c63310c2_checkComptimeRangeIter(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c62aca54_Iter>*, jule::Ptr<_1c632258b_RangeIter>*, jule::Ptr<_1c63dd35a_Data>*);
inline void _1c633137a_checkRangeIter(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c62aca54_Iter>*);
inline void _1c6331633_checkIter(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c62aca54_Iter>);
inline jule::Bool _1c6331974_checkValidContLabel(jule::Ptr<_1c6327a58_scopeChecker>, jule::Uintptr);
inline jule::Bool _1c6331cb5_checkValidBreakLabel(jule::Ptr<_1c6327a58_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_1c6322921_ContSt> _1c6332106_checkContValidScope(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c62ae539_ContSt>);
inline void _1c63323ae_checkCont(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c62ae539_ContSt>);
inline void _1c6332667_checkLabel(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c62a682d_LabelSt>);
inline void _1c6332920_pushGoto(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c62a6c07_GotoSt>);
inline void _1c6332bc8_checkPostfix(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c62a7be7_AssignSt>);
inline jule::Bool _1c6333019_isNewAssignIdent(_1c6327a58_scopeChecker*, jule::Str);
inline void _1c63332c2_removeInteriorMutRisk(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Bool _1c6333778_checkStructureAssignOp(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c62bcab9_StructIns>*, jule::Ptr<_1c62a7be7_AssignSt>*, jule::Ptr<_1c63dd35a_Data>*);
inline void _1c633888d_checkSingleAssign(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c62a7be7_AssignSt>*);
inline void _1c6338e21_processEndPartOfMultiAssign(_1c6327a58_scopeChecker*, jule::Ptr<_1c632422a_MultiAssign>*, jule::Ptr<_1c62a7be7_AssignSt>*, jule::Ptr<_1c62a7664_AssignLeft>*, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c63dd35a_Data>*);
inline void _1c63391c9_checkMultiAssign(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c62a7be7_AssignSt>*);
inline void _1c6339482_singleDeclAssign(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c62a7be7_AssignSt>*);
inline void _1c633973a_checkAssignSt(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c62a7be7_AssignSt>);
inline jule::Ptr<_1c6320754_Scope> _1c6339b36_checkCaseScope(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c63254c3_Case>*, jule::Ptr<_1c62a926a_ScopeTree>*);
inline jule::Ptr<_1c63254c3_Case> _1c633a197_checkCase(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c632488a_Match>, jule::I64, jule::Ptr<_1c62b1063_Case>, jule::Ptr<_1c63dd35a_Data>);
inline void _1c633a5b5_checkCases(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c62b17a0_MatchCase>*, jule::Ptr<_1c632488a_Match>, jule::Ptr<_1c63dd35a_Data>);
inline jule::Ptr<_1c63254c3_Case> _1c633a9b1_checkDefault(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c632488a_Match>, jule::Ptr<_1c62aedb9_Else>);
inline void _1c633ad24_checkComptimePanic(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c6283a3b_Token>, jule::Ptr<_1c6320754_Scope>*);
inline void _1c633b187_processConstMatch(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c632488a_Match>*, jule::Ptr<_1c62b17a0_MatchCase>*);
inline void _1c633b440_checkTypeMatch(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c62b17a0_MatchCase>*);
inline void _1c633b6e8_checkCommonMatch(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c62b17a0_MatchCase>*);
inline void _1c633b9a1_checkMatch(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c62b17a0_MatchCase>);
inline void _1c633bc59_checkFall(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c62a7004_FallSt>);
inline jule::Ptr<_1c6322cea_BreakSt> _1c633c09a_checkBreakWithLabel(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c62ae160_BreakSt>);
inline jule::Ptr<_1c6322cea_BreakSt> _1c633c3db_checkPlainBreak(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c62ae160_BreakSt>);
inline void _1c633c694_checkBreak(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c62ae160_BreakSt>);
inline void _1c633c94c_checkRet(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c62ac3b1_RetSt>);
inline void _1c633cc05_checkUseExpr(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c629de52_UseExpr>);
inline void _1c633cead_checkNode(jule::Ptr<_1c6327a58_scopeChecker>, jule::Any*);
inline void _1c633d1ab_checkResult(jule::Ptr<_1c6327a58_scopeChecker>);
inline void _1c633d3a9_checkTree(jule::Ptr<_1c6327a58_scopeChecker>);
inline void _1c633d71c_checkGoto(_1c6327a58_scopeChecker*, jule::Ptr<_1c6326b45_scopeGoto>*, jule::Ptr<_1c63265b2_scopeLabel>*);
inline void _1c633d91a_checkGotos(_1c6327a58_scopeChecker*);
inline void _1c633db18_checkLabels(_1c6327a58_scopeChecker*);
inline void _1c633dd16_checkVars(_1c6327a58_scopeChecker*);
inline void _1c633e014_checkAliases(_1c6327a58_scopeChecker*);
inline void _1c633e377_check(jule::Ptr<_1c6327a58_scopeChecker>, jule::Ptr<_1c62a926a_ScopeTree>*, jule::Ptr<_1c6320754_Scope>*);
inline jule::Ptr<_1c6327a58_scopeChecker> _1c633e60d_newChildChecker(jule::Ptr<_1c6327a58_scopeChecker>);
inline void _1c6340972_checkCdef(_1c6340565_directiveChecker*, jule::Ptr<_1c6298666_Directive>*);
inline void _1c6340c2a_checkTypedef(_1c6340565_directiveChecker*, jule::Ptr<_1c6298666_Directive>*);
inline void _1c6340ed3_checkNamespace(_1c6340565_directiveChecker*, jule::Ptr<_1c6298666_Directive>*);
inline void _1c634128b_checkDeprecated(_1c6340565_directiveChecker*, jule::Ptr<_1c6298666_Directive>*);
inline void _1c6341544_checkTest(_1c6340565_directiveChecker*, jule::Ptr<_1c6298666_Directive>*);
inline void _1c63417ec_checkDirective(_1c6340565_directiveChecker*, jule::Ptr<_1c6298666_Directive>*);
inline void _1c63419ea_check(_1c6340565_directiveChecker*);
inline jule::Ptr<_1c63469de_ImportInfo> _1c6346ec8_SelectPackage(_1c63469de_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_1c63469de_ImportInfo>)>);
inline jule::Ptr<_1c6389da6_Var> _1c63473c4_FindVar(_1c63469de_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1c641c730_TypeAlias> _1c63477c0_FindTypeAlias(_1c63469de_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1c62b9d3b_Struct> _1c6347bbb_FindStruct(_1c63469de_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1c62cebec_Fn> _1c63480b7_FindFn(_1c63469de_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1c62e2e96_Trait> _1c6348408_FindTrait(_1c63469de_ImportInfo*, jule::Str);
inline jule::Ptr<_1c62e5691_Enum> _1c6348749_FindEnum(_1c63469de_ImportInfo*, jule::Str);
inline jule::Ptr<_1c62e6d9b_TypeEnum> _1c6348a8a_FindTypeEnum(_1c63469de_ImportInfo*, jule::Str);
inline jule::Bool _1c6349030_isLookupable(_1c63469de_ImportInfo*, jule::Str*);
inline jule::Bool _1c6349371_existIdent(_1c63469de_ImportInfo*, jule::Str);
inline jule::Bool _1c6349607_isAccessibleViaSelection(_1c63469de_ImportInfo*);
inline jule::Ptr<_1c63469de_ImportInfo> _1c6349daa_SelectPackage(_1c6349915_Package*, jule::Fn<jule::Bool(jule::Ptr<_1c63469de_ImportInfo>)>);
inline jule::Ptr<_1c6389da6_Var> _1c634a2a6_FindVar(_1c6349915_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1c641c730_TypeAlias> _1c634a6a2_FindTypeAlias(_1c6349915_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1c62b9d3b_Struct> _1c634aa9d_FindStruct(_1c6349915_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1c62cebec_Fn> _1c634ae99_FindFn(_1c6349915_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1c62e2e96_Trait> _1c634b2da_FindTrait(_1c6349915_Package*, jule::Str);
inline jule::Ptr<_1c62e5691_Enum> _1c634b62b_FindEnum(_1c6349915_Package*, jule::Str);
inline jule::Ptr<_1c62e6d9b_TypeEnum> _1c634b96c_FindTypeEnum(_1c6349915_Package*, jule::Str);
inline jule::Ptr<_1c6308c15_comptimeTypeInfo> _1c6367306_pushComptimeTypeInfo(_1c6366d94_commonSemaMeta*, jule::Ptr<_1c641d522_TypeKind>*);
inline jule::Ptr<_1c63469de_ImportInfo> _1c6367e61_SelectPackage(_1c63679bb_Sema*, jule::Fn<jule::Bool(jule::Ptr<_1c63469de_ImportInfo>)>);
inline jule::Ptr<_1c6389da6_Var> _1c636835c_FindVar(_1c63679bb_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1c641c730_TypeAlias> _1c6368758_FindTypeAlias(_1c63679bb_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1c62b9d3b_Struct> _1c6368b54_FindStruct(_1c63679bb_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1c62cebec_Fn> _1c6369050_FindFn(_1c63679bb_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1c62e2e96_Trait> _1c6369391_FindTrait(_1c63679bb_Sema*, jule::Str);
inline jule::Ptr<_1c62e5691_Enum> _1c63696d2_FindEnum(_1c63679bb_Sema*, jule::Str);
inline jule::Ptr<_1c62e6d9b_TypeEnum> _1c6369a23_FindTypeEnum(_1c63679bb_Sema*, jule::Str);
inline jule::Bool _1c6369e30_isFlag(_1c63679bb_Sema*, jule::I64);
inline void _1c636a1d8_setCurrentFile(_1c63679bb_Sema*, jule::Ptr<_1c63d8135_SymbolTable>);
inline void _1c636a606_pushErr(_1c63679bb_Sema*, jule::Ptr<_1c6283a3b_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c636a969_pushSuggestion(_1c63679bb_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c636ad65_isAccessibleDefine(_1c63679bb_Sema*, jule::Bool, jule::Ptr<_1c6283a3b_Token>);
inline jule::Bool _1c636b31b_isDuplicatedIdent(_1c63679bb_Sema*, jule::Uintptr, jule::Str*, jule::Bool);
inline void _1c636b67e_checkDirectives(jule::Ptr<_1c63679bb_Sema>, jule::Slice<jule::Ptr<_1c6298666_Directive>>*, jule::Any);
inline jule::Bool _1c636bb35_checkGenericQuantity(_1c63679bb_Sema*, jule::I64, jule::I64, jule::Ptr<_1c6283a3b_Token>);
inline jule::Bool _1c636c031_isDuplicatedImportSelection(_1c63679bb_Sema*, jule::Uintptr, jule::Str*);
inline jule::Any _1c636c42c_getImportDef(_1c63679bb_Sema*, jule::Str*, jule::Ptr<_1c63469de_ImportInfo>*);
inline jule::Bool _1ac941c4b_checkImportSelection(_1c63679bb_Sema*, jule::Ptr<_1c6283a3b_Token>*, jule::Ptr<_1c6389da6_Var>*);
inline jule::Bool _1ac945d93_checkImportSelection(_1c63679bb_Sema*, jule::Ptr<_1c6283a3b_Token>*, jule::Ptr<_1c641c730_TypeAlias>*);
inline jule::Bool _1ac949e96_checkImportSelection(_1c63679bb_Sema*, jule::Ptr<_1c6283a3b_Token>*, jule::Ptr<_1c62b9d3b_Struct>*);
inline jule::Bool _1ac94e385_checkImportSelection(_1c63679bb_Sema*, jule::Ptr<_1c6283a3b_Token>*, jule::Ptr<_1c62e2e96_Trait>*);
inline jule::Bool _1ac9534aa_checkImportSelection(_1c63679bb_Sema*, jule::Ptr<_1c6283a3b_Token>*, jule::Ptr<_1c62e5691_Enum>*);
inline jule::Bool _1ac9575d0_checkImportSelection(_1c63679bb_Sema*, jule::Ptr<_1c6283a3b_Token>*, jule::Ptr<_1c62e6d9b_TypeEnum>*);
inline jule::Bool _1ac95b6d3_checkImportSelection(_1c63679bb_Sema*, jule::Ptr<_1c6283a3b_Token>*, jule::Ptr<_1c62cebec_Fn>*);
inline jule::Bool _1c636cb69_checkImportSelectedSelections(_1c63679bb_Sema*, jule::Ptr<_1c63469de_ImportInfo>*);
inline jule::Bool _1ac960dad_checkImportsAllSelectionsFromCollection(_1c63679bb_Sema*, jule::Slice<jule::Ptr<_1c6389da6_Var>>*, jule::Ptr<_1c6283a3b_Token>*);
inline jule::Bool _1ac962002_checkImportsAllSelectionsFromCollection(_1c63679bb_Sema*, jule::Slice<jule::Ptr<_1c641c730_TypeAlias>>*, jule::Ptr<_1c6283a3b_Token>*);
inline jule::Bool _1aa146de3_checkImportsAllSelectionsFromCollection(_1c63679bb_Sema*, jule::Slice<jule::Ptr<_1c62b9d3b_Struct>>*, jule::Ptr<_1c6283a3b_Token>*);
inline jule::Bool _1ac08e18a_checkImportsAllSelectionsFromCollection(_1c63679bb_Sema*, jule::Slice<jule::Ptr<_1c62cebec_Fn>>*, jule::Ptr<_1c6283a3b_Token>*);
inline jule::Bool _1ac090301_checkImportsAllSelectionsFromCollection(_1c63679bb_Sema*, jule::Slice<jule::Ptr<_1c62e2e96_Trait>>*, jule::Ptr<_1c6283a3b_Token>*);
inline jule::Bool _1ac0931c2_checkImportsAllSelectionsFromCollection(_1c63679bb_Sema*, jule::Slice<jule::Ptr<_1c62e5691_Enum>>*, jule::Ptr<_1c6283a3b_Token>*);
inline jule::Bool _1ac096093_checkImportsAllSelectionsFromCollection(_1c63679bb_Sema*, jule::Slice<jule::Ptr<_1c62e6d9b_TypeEnum>>*, jule::Ptr<_1c6283a3b_Token>*);
inline jule::Bool _1c636d3a6_checkImportAllSelections(_1c63679bb_Sema*, jule::Ptr<_1c63469de_ImportInfo>*);
inline jule::Bool _1c636d6e7_checkImportSelections(_1c63679bb_Sema*, jule::Ptr<_1c63469de_ImportInfo>*);
inline jule::Bool _1c636da38_isUseAliasDuplication(_1c63679bb_Sema*, jule::Ptr<_1c63469de_ImportInfo>*);
inline jule::Bool _1c636dd79_checkImport(_1c63679bb_Sema*, jule::Ptr<_1c63469de_ImportInfo>*);
inline void _1c636e077_checkImports(_1c63679bb_Sema*);
inline void _1c636e275_implFileImpls(jule::Ptr<_1c63679bb_Sema>);
inline void _1c636e473_implImpls(jule::Ptr<_1c63679bb_Sema>);
inline void _1c636e671_checkEnums(jule::Ptr<_1c63679bb_Sema>);
inline void _1c636e86e_checkFileInherits(jule::Ptr<_1c63679bb_Sema>);
inline void _1c636ea6c_checkInherits(jule::Ptr<_1c63679bb_Sema>);
inline _1c64303d0_typeChecker _1c6370023_typeChecker(jule::Ptr<_1c63679bb_Sema>, jule::Trait<_1c643d058_Lookup>, jule::Slice<jule::Ptr<_1c641c730_TypeAlias>>, jule::Ptr<_1c642e3e0_referencer>);
inline jule::Ptr<_1c641d522_TypeKind> _1c6370584_buildTypeWithRefers(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c6299249_TypeDecl>*, jule::Trait<_1c643d058_Lookup>, jule::Slice<jule::Ptr<_1c641c730_TypeAlias>>, jule::Ptr<_1c642e3e0_referencer>);
inline jule::Bool _1c6370ae5_checkTypeWithRefers(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c64256e4_TypeSymbol>*, jule::Trait<_1c643d058_Lookup>, jule::Slice<jule::Ptr<_1c641c730_TypeAlias>>, jule::Ptr<_1c642e3e0_referencer>);
inline jule::Ptr<_1c63182da_constraintChecker> _1c6370d7b_constraintChecker(jule::Ptr<_1c63679bb_Sema>);
inline jule::Bool _1c6371277_checkType(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c64256e4_TypeSymbol>*, jule::Trait<_1c643d058_Lookup>);
inline jule::Ptr<_1c641d522_TypeKind> _1c637172d_buildTypeWithGenerics(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c6299249_TypeDecl>*, jule::Slice<jule::Ptr<_1c641c730_TypeAlias>>, jule::Ptr<_1c62d5c9c_ReferenceStack>);
inline jule::Ptr<_1c641d522_TypeKind> _1c6371db0_selectType(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c6299249_TypeDecl>*);
inline jule::Ptr<_1c63e004e_Eval> _1c6372366_evalpd(jule::Ptr<_1c63679bb_Sema>, jule::Trait<_1c643d058_Lookup>, jule::Ptr<_1c641d522_TypeKind>, jule::Ptr<_1c6389da6_Var>);
inline jule::Ptr<_1c63e004e_Eval> _1c6372762_evalp(jule::Ptr<_1c63679bb_Sema>, jule::Trait<_1c643d058_Lookup>, jule::Ptr<_1c641d522_TypeKind>);
inline jule::Ptr<_1c63e004e_Eval> _1c6372aa3_eval(jule::Ptr<_1c63679bb_Sema>, jule::Trait<_1c643d058_Lookup>);
inline jule::Bool _1c6373114_checkAssignType(jule::Ptr<_1c63679bb_Sema>, jule::Bool, jule::Ptr<_1c641d522_TypeKind>*, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c6283a3b_Token>);
inline jule::Bool _1c63735ba_checkTypeCompatibility(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c641d522_TypeKind>*, jule::Ptr<_1c641d522_TypeKind>*, jule::Ptr<_1c6283a3b_Token>*);
inline jule::Ptr<_1c641d522_TypeKind> _1c6373a71_buildNonGenericTypeKind(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c6299249_TypeDecl>*, jule::Slice<jule::Ptr<_1c62a6454_GenericDecl>>*, jule::Slice<jule::Ptr<_1c641d522_TypeKind>>*);
inline jule::Bool _1c6373e6c_buildFnNonGenericTypeKinds(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c62d2b01_FnIns>*, jule::Slice<jule::Ptr<_1c641d522_TypeKind>>*);
inline jule::Ptr<_1c62d2b01_FnIns> _1c63742ad_getTraitCheckFnKind(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c62cebec_Fn>*);
inline jule::Bool _1c6374764_checkConstraintsFn(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c62d2b01_FnIns>*, jule::Ptr<_1c6283a3b_Token>*, jule::Ptr<_1c62d2b01_FnIns>);
inline jule::Bool _1c6374c1a_checkConstraintsStruct(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c62bcab9_StructIns>*, jule::Ptr<_1c6283a3b_Token>*, jule::Ptr<_1c62bcab9_StructIns>);
inline jule::Bool _1c6375116_fnEnvironment(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c62d2b01_FnIns>*, jule::Fn<jule::Bool(jule::Ptr<_1c63679bb_Sema>*,jule::Slice<jule::Ptr<_1c641c730_TypeAlias>>*)>);
inline void _1c63753be_checkFnParamKind(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c62d1b55_ParamIns>*);
inline jule::Bool _1c6375710_reloadFnInsTypes(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c62d2b01_FnIns>);
inline jule::Bool _1c6375bb6_checkRefValidityForInitExpr(jule::Ptr<_1c63679bb_Sema>, jule::Bool, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c6283a3b_Token>*);
inline jule::Bool _1c6376007_isMutRiskyStruct(_1c63679bb_Sema*, jule::Ptr<_1c62bcab9_StructIns>*);
inline jule::Bool _1c6376623_checkValidityForInitExpr(jule::Ptr<_1c63679bb_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1c641d522_TypeKind>*, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c6283a3b_Token>*);
inline jule::Bool _1c6376a1e_checkTypeAliasDeclKind(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c641c730_TypeAlias>*, jule::Trait<_1c643d058_Lookup>);
inline void _1c6376d82_checkTypeAliasDecl(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c641c730_TypeAlias>*, jule::Trait<_1c643d058_Lookup>);
inline void _1c637713a_checkTypeAliasDeclDup(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c641c730_TypeAlias>*);
inline jule::Bool _1c63773c1_checkTypeAliasDecls(jule::Ptr<_1c63679bb_Sema>);
inline void _1ac14431c_checkEnumItemsDup(_1c63679bb_Sema*, jule::Slice<jule::Ptr<_1c62e4b24_EnumItem>>);
inline void _1ac151417_checkEnumItemsDup(_1c63679bb_Sema*, jule::Slice<jule::Ptr<_1c62e67c4_TypeEnumItem>>);
inline void _1c6377932_checkEnumItemsStr(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c62e5691_Enum>*);
inline void _1ac12354e_checkEnumItemInt(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62e5691_Enum>*, jule::Ptr<_1c64260eb_Prim>*, jule::Ptr<_1c62e4b24_EnumItem>*, jule::U64*);
inline void _1ac134296_checkEnumItemInt(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62e5691_Enum>*, jule::Ptr<_1c64260eb_Prim>*, jule::Ptr<_1c62e4b24_EnumItem>*, jule::I64*);
inline void _1ac11e6d2_checkEnumItemsInt1(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c64260eb_Prim>*, jule::Ptr<_1c62e5691_Enum>*);
inline void _1ac12cdc7_checkEnumItemsInt1(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c64260eb_Prim>*, jule::Ptr<_1c62e5691_Enum>*);
inline void _1c63785d1_checkEnumItemsInt(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c62e5691_Enum>*);
inline void _1c6378889_checkEnumDecl(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c62e5691_Enum>*);
inline void _1c6378b42_checkTypeEnumDecl(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c62e6d9b_TypeEnum>*);
inline jule::Bool _1c6378dc8_checkEnumDecls(jule::Ptr<_1c63679bb_Sema>);
inline jule::Bool _1c637915e_checkTypeEnumDecls(jule::Ptr<_1c63679bb_Sema>);
inline jule::Bool _1c63794a0_checkDeclGenerics(_1c63679bb_Sema*, jule::Slice<jule::Ptr<_1c62a6454_GenericDecl>>*);
inline jule::Bool _1c63797e1_checkFnDeclParamsDup(_1c63679bb_Sema*, jule::Ptr<_1c62cebec_Fn>*);
inline jule::Bool _1c6379b32_checkFnDeclResultDup(_1c63679bb_Sema*, jule::Ptr<_1c62cebec_Fn>*);
inline jule::Bool _1c6379e73_checkFnVariadicParam(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c62cebec_Fn>*);
inline void _1c637a22b_checkFnDeclPrototype(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c62cebec_Fn>*);
inline jule::Bool _1c637a6d2_catchTraitInheritCycle(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c62e2e96_Trait>, jule::Ptr<_1c62e2e96_Trait>, _2206c697e_StrBuilder*);
inline jule::Bool _1c637aa23__checkTraitDeclInherits(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c62e2e96_Trait>*);
inline void _1c637accb_checkTraitDeclInherits(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c62e2e96_Trait>*);
inline void _1c637b084_checkTraitDeclMethod(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c62cebec_Fn>*);
inline void _1c637b33c_checkTraitDeclMethods(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c62e2e96_Trait>*);
inline void _1c637b5e5_checkTraitDecl(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c62e2e96_Trait>*);
inline jule::Bool _1c637b87b_checkTraitDecls(jule::Ptr<_1c63679bb_Sema>);
inline jule::Bool _1c637bc77_checkTraitImplMethods(_1c63679bb_Sema*, jule::Ptr<_1c62e2e96_Trait>*, jule::Ptr<_1c631a320_Impl>*);
inline jule::Bool _1c637c173_implToStruct(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c62b9d3b_Struct>*, jule::Ptr<_1c631a320_Impl>*);
inline void _1c637c42b_implTrait(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c631a320_Impl>*);
inline void _1c637c6d4_implStruct(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c631a320_Impl>*);
inline void _1c637c98c_implImpl(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c631a320_Impl>*);
inline void _1c637cd00_checkVarDecl(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c6389da6_Var>*, jule::Trait<_1c643d058_Lookup>);
inline void _1c637d0a8_checkGlobalVarDecl(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c6389da6_Var>*);
inline jule::Bool _1c637d33e_checkGlobalDecls(jule::Ptr<_1c63679bb_Sema>);
inline jule::Bool _1c637d73a_checkStructTraitImpl(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c62b9d3b_Struct>*, jule::Ptr<_1c62e2e96_Trait>*);
inline jule::Bool _1c637da7b_checkStructImpls(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c62b9d3b_Struct>*);
inline jule::Bool _1c637ddbc_checkStructFields(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c62b9d3b_Struct>*);
inline void _1c637e175_checkStructDecl(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c62b9d3b_Struct>*);
inline jule::Bool _1c637e40b_checkStructDecls(jule::Ptr<_1c63679bb_Sema>);
inline void _1c637e6b4_checkAnonFuncDecl(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c62cebec_Fn>*);
inline void _1c637e96c_checkFuncDecl(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c62cebec_Fn>*);
inline jule::Bool _1c637ecad_checkFuncDeclsBy(jule::Ptr<_1c63679bb_Sema>, jule::Slice<jule::Ptr<_1c62cebec_Fn>>*);
inline jule::Bool _1c6380044_checkFuncDecls(jule::Ptr<_1c63679bb_Sema>);
inline void _1c6380462_pushCycleError(_1c63679bb_Sema*, jule::Str*, jule::Str*, _2206c697e_StrBuilder*);
inline void _1c6380b16_checkPackageDecls(jule::Ptr<_1c63679bb_Sema>);
inline void _1c6380e79_checkDataForTypeInference(_1c63679bb_Sema*, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c6283a3b_Token>*);
inline void _1c6381232_checkVarValue(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c6389da6_Var>*);
inline void _1c6381595_evalVarValue(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c6389da6_Var>*, jule::Trait<_1c643d058_Lookup>);
inline void _1c6381908_checkVar(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c6389da6_Var>*, jule::Trait<_1c643d058_Lookup>);
inline void _1c6381b06_checkGlobals(jule::Ptr<_1c63679bb_Sema>);
inline jule::Ptr<_1c62d2b01_FnIns> _1c6382002_readyToCheckFn(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c62bcab9_StructIns>*, jule::Ptr<_1c62cebec_Fn>*);
inline void _1c6382365_checkTypeMethod(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c62bcab9_StructIns>*, jule::Ptr<_1c62cebec_Fn>*);
inline jule::Ptr<_1c62d2b01_FnIns> _1c638281b_checkStructInsOp(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c62bcab9_StructIns>*, jule::Ptr<_1c62cebec_Fn>*, jule::Fn<jule::Bool(jule::Ptr<_1c62cebec_Fn>)>);
inline jule::Bool _1c6382c17_checkStructEnv(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c62bcab9_StructIns>*, jule::Ptr<_1c6283a3b_Token>);
inline jule::Bool _1c6383113_precheckStructIns(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c62bcab9_StructIns>*, jule::Ptr<_1c6283a3b_Token>);
inline void _1c63833bb_checkStructIns(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c62bcab9_StructIns>*);
inline void _1c6383674_checkTypeStruct(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c62b9d3b_Struct>*);
inline void _1c6383872_checkStructTypes(jule::Ptr<_1c63679bb_Sema>);
inline void _1c6383b2a_checkStructInsOperators(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c62bcab9_StructIns>);
inline void _1c6383dd3_precheckStructType(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c62b9d3b_Struct>*);
inline void _1c63840d1_precheckStructTypes(jule::Ptr<_1c63679bb_Sema>);
inline void _1c6384389_checkRets(_1c63679bb_Sema*, jule::Ptr<_1c62d2b01_FnIns>*);
inline void _1c63846ec_checkFnInsSc(_1c63679bb_Sema*, jule::Ptr<_1c62d2b01_FnIns>*, jule::Ptr<_1c6327a58_scopeChecker>*);
inline void _1c6384a60_checkFnInsCaller(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c62d2b01_FnIns>*, jule::Ptr<_1c6283a3b_Token>);
inline void _1c6384d18_checkFnIns(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c62d2b01_FnIns>*);
inline void _1c63850c1_checkFunc(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c62cebec_Fn>*);
inline void _1c6385379_checkTestFn(_1c63679bb_Sema*, jule::Ptr<_1c62d2b01_FnIns>*);
inline void _1c6385632_precheckFunc(jule::Ptr<_1c63679bb_Sema>, jule::Ptr<_1c62cebec_Fn>*);
inline void _1c6385830_precheckFuncs(jule::Ptr<_1c63679bb_Sema>);
inline void _1c6385a2d_checkFuncs(jule::Ptr<_1c63679bb_Sema>);
inline void _1c6385c2b_checkPackageTypes(jule::Ptr<_1c63679bb_Sema>);
inline void _1c6385e29_setFileSemaFields(jule::Ptr<_1c63679bb_Sema>);
inline void _1c6386127_setSemaFields(jule::Ptr<_1c63679bb_Sema>);
inline void _1c63863d0_check(jule::Ptr<_1c63679bb_Sema>, jule::Slice<jule::Ptr<_1c63d8135_SymbolTable>>*);
inline _1c638680e_missingRetChecker static__1c6386bc7_new(void);
inline jule::Bool _1c6386ed5_checkConditional(_1c638680e_missingRetChecker*, jule::Ptr<_1c632138c_Conditional>);
inline jule::Bool _1c6387326_checkMatch(_1c638680e_missingRetChecker*, jule::Ptr<_1c632488a_Match>);
inline jule::Bool _1c6387667_checkInfIter(_1c638680e_missingRetChecker*, jule::Ptr<_1c6321689_InfIter>);
inline jule::Bool _1c63879a8_checkScope(_1c638680e_missingRetChecker*, jule::Ptr<_1c6320754_Scope>);
inline jule::Bool _1c6387ce9_check(_1c638680e_missingRetChecker*, jule::Ptr<_1c6320754_Scope>);
inline jule::Bool _1c638a23b_IsInitialized(_1c6389da6_Var*);
inline jule::Bool _1c638a4c2_IsTypeInferred(_1c6389da6_Var*);
inline jule::Bool _1c638a758_untypedConstant(_1c6389da6_Var*);
inline jule::Bool static__1c638b308_Dispose(jule::Ptr<_1c62cebec_Fn>);
inline jule::Bool static__1c638b5c2_Str(jule::Ptr<_1c62cebec_Fn>);
inline jule::Bool static__1c638b946_logical(jule::Ptr<_1c62cebec_Fn>*, jule::Str);
inline jule::Bool static__1c638bc10_Eq(jule::Ptr<_1c62cebec_Fn>);
inline jule::Bool static__1c638bec9_Gt(jule::Ptr<_1c62cebec_Fn>);
inline jule::Bool static__1c638c293_GtEq(jule::Ptr<_1c62cebec_Fn>);
inline jule::Bool static__1c638c55c_Lt(jule::Ptr<_1c62cebec_Fn>);
inline jule::Bool static__1c638c826_LtEq(jule::Ptr<_1c62cebec_Fn>);
inline jule::Bool static__1c638cb9a_result(jule::Ptr<_1c62cebec_Fn>*, jule::Str);
inline jule::Bool static__1c638ce64_Shl(jule::Ptr<_1c62cebec_Fn>);
inline jule::Bool static__1c638d22d_Shr(jule::Ptr<_1c62cebec_Fn>);
inline jule::Bool static__1c638d4e7_Add(jule::Ptr<_1c62cebec_Fn>);
inline jule::Bool static__1c638d7b1_Sub(jule::Ptr<_1c62cebec_Fn>);
inline jule::Bool static__1c638da7a_Div(jule::Ptr<_1c62cebec_Fn>);
inline jule::Bool static__1c638dd44_Mul(jule::Ptr<_1c62cebec_Fn>);
inline jule::Bool static__1c638e10d_Mod(jule::Ptr<_1c62cebec_Fn>);
inline jule::Bool static__1c638e3c7_BitAnd(jule::Ptr<_1c62cebec_Fn>);
inline jule::Bool static__1c638e691_BitOr(jule::Ptr<_1c62cebec_Fn>);
inline jule::Bool static__1c638e95a_BitXor(jule::Ptr<_1c62cebec_Fn>);
inline jule::Bool static__1c638ecce_unary(jule::Ptr<_1c62cebec_Fn>*, jule::Str);
inline jule::Bool static__1c6390098_Neg(jule::Ptr<_1c62cebec_Fn>);
inline jule::Bool static__1c6390362_Pos(jule::Ptr<_1c62cebec_Fn>);
inline jule::Bool static__1c639062b_BitNot(jule::Ptr<_1c62cebec_Fn>);
inline jule::Bool static__1c63909a0_assign(jule::Ptr<_1c62cebec_Fn>*, jule::Str);
inline jule::Bool static__1c6390c69_AddAssign(jule::Ptr<_1c62cebec_Fn>);
inline jule::Bool static__1c6391033_SubAssign(jule::Ptr<_1c62cebec_Fn>);
inline jule::Bool static__1c63912ec_DivAssign(jule::Ptr<_1c62cebec_Fn>);
inline jule::Bool static__1c63915b6_MulAssign(jule::Ptr<_1c62cebec_Fn>);
inline jule::Bool static__1c6391880_ModAssign(jule::Ptr<_1c62cebec_Fn>);
inline jule::Bool static__1c6391b49_ShlAssign(jule::Ptr<_1c62cebec_Fn>);
inline jule::Bool static__1c6391e13_ShrAssign(jule::Ptr<_1c62cebec_Fn>);
inline jule::Bool static__1c63921cc_BitOrAssign(jule::Ptr<_1c62cebec_Fn>);
inline jule::Bool static__1c6392496_BitAndAssign(jule::Ptr<_1c62cebec_Fn>);
inline jule::Bool static__1c6392760_BitXorAssign(jule::Ptr<_1c62cebec_Fn>);
inline void _1c63c5672_pushErr(_1c63c5177_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c63c5908_checkTrait(_1c63c5177_typeCompatibilityChecker*);
inline jule::Bool _1c63c5b8e_checkPtr(_1c63c5177_typeCompatibilityChecker*);
inline jule::Bool _1c63c5e25_checkPrim(_1c63c5177_typeCompatibilityChecker*);
inline jule::Bool _1c63c6321_typeEnum(_1c63c5177_typeCompatibilityChecker*, jule::Ptr<_1c62e6d9b_TypeEnum>*, jule::Ptr<_1c641d522_TypeKind>*);
inline jule::Bool _1c63c65a7_checkTypeEnum(_1c63c5177_typeCompatibilityChecker*);
inline jule::Bool _1c63c683d_check(_1c63c5177_typeCompatibilityChecker*);
inline void _1c63c73bb_pushErr(_1c63c6e26_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c63c7652_checkValidity(_1c63c6e26_assignTypeChecker*);
inline jule::Bool _1c63c78d8_checkConst(_1c63c6e26_assignTypeChecker*);
inline jule::Bool _1c63c7b6e_isPrim(_1c63c6e26_assignTypeChecker*);
inline jule::Bool _1c63c7e05_checkCompatibility(_1c63c6e26_assignTypeChecker*);
inline jule::Bool _1c63c818b_check(_1c63c6e26_assignTypeChecker*);
inline jule::Bool _1ac96916e_annotateConstraintElem(_1c63c8a93_dynamicTypeAnnotation*, jule::Ptr<_1c641d522_TypeKind>*);
inline jule::Bool _1ac9689cb_annotateConstraintElem(_1c63c8a93_dynamicTypeAnnotation*, jule::Ptr<_1c641d522_TypeKind>*);
inline jule::Bool _1ac96abba_annotateConstraintElem(_1c63c8a93_dynamicTypeAnnotation*, jule::Ptr<_1c641d522_TypeKind>*);
inline jule::Bool _1ac971990_annotateConstraintElem(_1c63c8a93_dynamicTypeAnnotation*, jule::Ptr<_1c641d522_TypeKind>*);
inline jule::Bool _1c63c9489_annotateConstraintMap(_1c63c8a93_dynamicTypeAnnotation*, jule::Ptr<_1c641d522_TypeKind>*);
inline jule::Bool _1c63c97ca_annotateConstraintTup(_1c63c8a93_dynamicTypeAnnotation*, jule::Ptr<_1c641d522_TypeKind>*);
inline jule::Bool _1c63c9b1b_annotateConstraintFn(_1c63c8a93_dynamicTypeAnnotation*, jule::Ptr<_1c641d522_TypeKind>*);
inline jule::Bool _1c63c9e5c_annotateConstraintIdent(_1c63c8a93_dynamicTypeAnnotation*, jule::Ptr<_1c641d522_TypeKind>*);
inline jule::Bool _1c63ca29d_annotateConstraint(_1c63c8a93_dynamicTypeAnnotation*, jule::Ptr<_1c641d522_TypeKind>*);
inline void _1c63ca611_pushGeneric(_1c63c8a93_dynamicTypeAnnotation*, jule::Ptr<_1c641d522_TypeKind>*, jule::I64);
inline jule::Bool _1c63ca952_annotatePrim(_1c63c8a93_dynamicTypeAnnotation*, jule::Ptr<_1c641d522_TypeKind>*);
inline jule::Bool _1c63cac93_annotateArr(_1c63c8a93_dynamicTypeAnnotation*, jule::Ptr<_1c641d522_TypeKind>*);
inline jule::Bool _1c63cb0d4_annotateSlc(_1c63c8a93_dynamicTypeAnnotation*, jule::Ptr<_1c641d522_TypeKind>*);
inline jule::Bool _1c63cb4d0_checkMapKey(_1c63c8a93_dynamicTypeAnnotation*, jule::Ptr<_1c641d522_TypeKind>*, jule::Ptr<_1c641d522_TypeKind>*);
inline jule::Bool _1c63cb821_annotateMap(_1c63c8a93_dynamicTypeAnnotation*, jule::Ptr<_1c641d522_TypeKind>*);
inline jule::Bool _1c63cbb62_annotateFn(_1c63c8a93_dynamicTypeAnnotation*, jule::Ptr<_1c641d522_TypeKind>*);
inline jule::Bool _1c63cbea3_annotatePtr(_1c63c8a93_dynamicTypeAnnotation*, jule::Ptr<_1c641d522_TypeKind>*);
inline jule::Bool _1c63cc2e4_annotateSptr(_1c63c8a93_dynamicTypeAnnotation*, jule::Ptr<_1c641d522_TypeKind>*);
inline jule::Bool _1c63cc635_annotateStruct(_1c63c8a93_dynamicTypeAnnotation*, jule::Ptr<_1c641d522_TypeKind>*);
inline jule::Bool _1c63cc976_annotateAny(_1c63c8a93_dynamicTypeAnnotation*, jule::Ptr<_1c641d522_TypeKind>*);
inline jule::Bool _1c63cccb7_annotateKind(_1c63c8a93_dynamicTypeAnnotation*, jule::Ptr<_1c641d522_TypeKind>*);
inline jule::Bool _1c63cd04d_annotate(_1c63c8a93_dynamicTypeAnnotation*);
inline void _1c63cde94_pushErrToken(_1c63cd900_fnCallArgChecker*, jule::Ptr<_1c6283a3b_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c63ce307_pushErr(_1c63cd900_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1c62d1b55_ParamIns>> _1c63ce58d_getParams(_1c63cd900_fnCallArgChecker*);
inline jule::Bool _1c63ce89b_checkCounts(_1c63cd900_fnCallArgChecker*, jule::Slice<jule::Ptr<_1c62d1b55_ParamIns>>*);
inline jule::Bool _1c63ced52_checkArg(_1c63cd900_fnCallArgChecker*, jule::Ptr<_1c62d1b55_ParamIns>*, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c6283a3b_Token>*);
inline jule::Bool _1c63d024d_push(_1c63cd900_fnCallArgChecker*, jule::Ptr<_1c62d1b55_ParamIns>*, jule::Ptr<_1c629d57d_Expr>);
inline jule::Bool _1c63d0649_pushVariadic(_1c63cd900_fnCallArgChecker*, jule::Ptr<_1c62d1b55_ParamIns>*, jule::I64);
inline jule::Bool _1c63d098a_checkArgs(_1c63cd900_fnCallArgChecker*, jule::Slice<jule::Ptr<_1c62d1b55_ParamIns>>*);
inline jule::Bool _1c63d0c21_checkDynamicTypeAnnotation(_1c63cd900_fnCallArgChecker*);
inline jule::Bool _1c63d0ea7_check(_1c63cd900_fnCallArgChecker*);
inline void _1c63d1d87_pushErr(_1c63d1837_structLitChecker*, jule::Ptr<_1c6283a3b_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c63d21ea_pushSuggestion(_1c63d1837_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1c63d2618_pushMatch(_1c63d1837_structLitChecker*, jule::Ptr<_1c62bc019_FieldIns>*, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c6283a3b_Token>*);
inline void _1c63d297b_checkPair(_1c63d1837_structLitChecker*, jule::Ptr<_1c62a2c9c_FieldExprPair>*, jule::Slice<jule::Ptr<_1c629d57d_Expr>>*);
inline jule::Bool _1c63d2cbc_readyExprs(_1c63d1837_structLitChecker*, jule::Slice<jule::Ptr<_1c629d57d_Expr>>*);
inline void _1c63d3075_check(_1c63d1837_structLitChecker*, jule::Slice<jule::Ptr<_1c629d57d_Expr>>*);
inline jule::Ptr<_1c6389da6_Var> _1c63d3b03_buildVar(_1c63d3619_rangeChecker*, jule::Ptr<_1c62abed7_VarDecl>*);
inline void _1c63d3d01_setSizeKey(_1c63d3619_rangeChecker*);
inline void _1c63d421e_checkRangeExprValidity(_1c63d3619_rangeChecker*, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c6389da6_Var>*, jule::Ptr<_1c641d522_TypeKind>*);
inline void _1c63d441c_checkSlice(_1c63d3619_rangeChecker*);
inline void _1c63d461a_checkArray(_1c63d3619_rangeChecker*);
inline void _1c63d4818_checkMapKeyA(_1c63d3619_rangeChecker*);
inline void _1c63d4a16_checkMapKeyB(_1c63d3619_rangeChecker*);
inline void _1c63d4c14_checkMap(_1c63d3619_rangeChecker*);
inline void _1c63d4e12_checkStr(_1c63d3619_rangeChecker*);
inline void _1c63d5110_checkComptime(_1c63d3619_rangeChecker*);
inline jule::Bool _1c63d5396_checkComptimeRange(_1c63d3619_rangeChecker*);
inline jule::Bool _1c63d562c_check(_1c63d3619_rangeChecker*);
inline void _1c63d6298_prepareTypes(_1c63d5d7a_retTypeChecker*);
inline void _1c63d6551_prepareExprs(_1c63d5d7a_retTypeChecker*, jule::Ptr<_1c629d57d_Expr>*);
inline void _1c63d674e_checkExprs(_1c63d5d7a_retTypeChecker*);
inline jule::Bool _1c63d6a90_check(_1c63d5d7a_retTypeChecker*, jule::Ptr<_1c629d57d_Expr>*);
inline jule::Ptr<_1c63469de_ImportInfo> _1c63d861e_SelectPackage(_1c63d8135_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_1c63469de_ImportInfo>)>);
inline jule::Ptr<_1c6389da6_Var> _1c63d8a1a_FindVar(_1c63d8135_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1c641c730_TypeAlias> _1c63d8e16_FindTypeAlias(_1c63d8135_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1c62b9d3b_Struct> _1c63d9312_FindStruct(_1c63d8135_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1c62cebec_Fn> _1c63d970d_FindFn(_1c63d8135_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1c62e2e96_Trait> _1c63d9a4e_FindTrait(_1c63d8135_SymbolTable*, jule::Str);
inline jule::Ptr<_1c62e5691_Enum> _1c63d9d90_FindEnum(_1c63d8135_SymbolTable*, jule::Str);
inline jule::Ptr<_1c62e6d9b_TypeEnum> _1c63da1d1_FindTypeEnum(_1c63d8135_SymbolTable*, jule::Str);
inline jule::Ptr<_1c6389da6_Var> _1c63da7ec_findVar(_1c63d8135_SymbolTable*, jule::Str*, jule::Bool, jule::Bool);
inline jule::Ptr<_1c641c730_TypeAlias> _1c63daca3_findTypeAlias(_1c63d8135_SymbolTable*, jule::Str*, jule::Bool, jule::Bool);
inline jule::Any _1c63db19e_defByIdent(_1c63d8135_SymbolTable*, jule::Str*, jule::Bool);
inline jule::Bool _1c63db655_isDuplicatedIdent(_1c63d8135_SymbolTable*, jule::Uintptr, jule::Str*, jule::Bool);
inline jule::Bool _1c63dd712_IsNil(_1c63dd35a_Data*);
inline jule::Bool _1c63dd998_IsVoid(_1c63dd35a_Data*);
inline jule::Bool _1c63ddc2e_IsConst(_1c63dd35a_Data*);
inline jule::Bool _1c63de070_GoodOperand(_1c63dd35a_Data*, jule::Ptr<_1c63dd35a_Data>*);
inline void _1c63e059e_pushErr(_1c63e004e_Eval*, jule::Ptr<_1c6283a3b_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c63e0912_pushSuggestion(_1c63e004e_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1c63e0b10_allowBuiltin(_1c63e004e_Eval*);
inline void _1c63e0d0d_disallowBuiltin(_1c63e004e_Eval*);
inline jule::Bool _1c63e1094_isUnsafe(_1c63e004e_Eval*);
inline jule::Bool _1c63e132a_isGlobal(_1c63e004e_Eval*);
inline jule::Bool _1c63e1638_applyNumericPrefix(_1c63e004e_Eval*, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Ptr<_1c63dd35a_Data> _1c63e1979_litStr(_1c63e004e_Eval*, jule::Ptr<_1c629e628_LitExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c63e1cba_litRune(_1c63e004e_Eval*, jule::Ptr<_1c629e628_LitExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c63e210b_litFloat(_1c63e004e_Eval*, jule::Ptr<_1c629e628_LitExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c63e244c_litInt(_1c63e004e_Eval*, jule::Ptr<_1c629e628_LitExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c63e278d_litNum(_1c63e004e_Eval*, jule::Ptr<_1c629e628_LitExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c63e2ace_evalLit(_1c63e004e_Eval*, jule::Ptr<_1c629e628_LitExpr>);
inline jule::Any _1c63e2e20_findBuiltins(_1c63e004e_Eval*, jule::Str*);
inline jule::Any _1c63e331b_getDef(_1c63e004e_Eval*, jule::Str*, jule::Bool);
inline void _1acd9c67e_pushReference(_1c63e004e_Eval*, jule::Ptr<_1c62d2b01_FnIns>*);
inline void _1acdb4e8d_pushReference(_1c63e004e_Eval*, jule::Ptr<_1c6389da6_Var>*);
inline void _1ace7aa8c_pushReference(_1c63e004e_Eval*, jule::Ptr<_1c62bcab9_StructIns>*);
inline jule::Ptr<_1c63dd35a_Data> _1c63e3915__evalEnum(_1c63e004e_Eval*, jule::Ptr<_1c62e5691_Enum>);
inline jule::Ptr<_1c63dd35a_Data> _1c63e3d11_evalEnum(_1c63e004e_Eval*, jule::Ptr<_1c62e5691_Enum>, jule::Ptr<_1c6283a3b_Token>);
inline jule::Ptr<_1c63dd35a_Data> _1c63e4152__evalTypeEnum(_1c63e004e_Eval*, jule::Ptr<_1c62e6d9b_TypeEnum>);
inline jule::Ptr<_1c63dd35a_Data> _1c63e454d_evalTypeEnum(_1c63e004e_Eval*, jule::Ptr<_1c62e6d9b_TypeEnum>, jule::Ptr<_1c6283a3b_Token>);
inline jule::Ptr<_1c63dd35a_Data> _1c63e488e__evalStruct(_1c63e004e_Eval*, jule::Ptr<_1c62bcab9_StructIns>);
inline jule::Ptr<_1c63dd35a_Data> _1c63e4c8a_evalStruct(_1c63e004e_Eval*, jule::Ptr<_1c62bcab9_StructIns>, jule::Ptr<_1c6283a3b_Token>);
inline jule::Ptr<_1c63dd35a_Data> _1c63e50cb_evalFnIns(_1c63e004e_Eval*, jule::Ptr<_1c62d2b01_FnIns>);
inline void _1c63e543e_checkDeprecated(_1c63e004e_Eval*, jule::Slice<jule::Ptr<_1c6298666_Directive>>*, jule::Ptr<_1c6283a3b_Token>);
inline jule::Ptr<_1c63dd35a_Data> _1c63e583a_evalFn(_1c63e004e_Eval*, jule::Ptr<_1c62cebec_Fn>, jule::Ptr<_1c6283a3b_Token>);
inline void _1c63e5c58_pushIllegalCycleError(_1c63e004e_Eval*, jule::Ptr<_1c6389da6_Var>*, jule::Ptr<_1c6389da6_Var>*, _2206c697e_StrBuilder*);
inline jule::Bool _1c63e6154_checkCrossCycle(_1c63e004e_Eval*, jule::Ptr<_1c6389da6_Var>*, _2206c697e_StrBuilder*);
inline jule::Bool _1c63e6550_checkIllegalCycles(_1c63e004e_Eval*, jule::Ptr<_1c6389da6_Var>*, jule::Ptr<_1c6283a3b_Token>);
inline jule::Ptr<_1c63dd35a_Data> _1c63e694b_evalVar(_1c63e004e_Eval*, jule::Ptr<_1c6389da6_Var>, jule::Ptr<_1c6283a3b_Token>);
inline jule::Ptr<_1c63dd35a_Data> _1c63e6d47_evalTypeAlias(_1c63e004e_Eval*, jule::Ptr<_1c641c730_TypeAlias>, jule::Ptr<_1c6283a3b_Token>);
inline jule::Ptr<_1c63dd35a_Data> _1c63e7243_evalDef(_1c63e004e_Eval*, jule::Any*, jule::Ptr<_1c6283a3b_Token>);
inline jule::Ptr<_1c63dd35a_Data> _1c63e7584_evalIdent(_1c63e004e_Eval*, jule::Ptr<_1c629eea8_IdentExpr>);
inline jule::Ptr<_1c63dd35a_Data> _1c63e78c5_evalUnary(jule::Ptr<_1c63e004e_Eval>, jule::Ptr<_1c62a063a_UnaryExpr>);
inline jule::Ptr<_1c63dd35a_Data> _1c63e7c16_evalVariadic(jule::Ptr<_1c63e004e_Eval>, jule::Ptr<_1c62a0a14_VariadicExpr>);
inline jule::Ptr<_1c63dd35a_Data> _1c63e8057_evalUnsafe(jule::Ptr<_1c63e004e_Eval>, jule::Ptr<_1c629ea02_UnsafeExpr>);
inline jule::Ptr<_1c63dd35a_Data> _1c63e8398_evalArr(jule::Ptr<_1c63e004e_Eval>, jule::Ptr<_1c62a4aa1_SliceExpr>);
inline jule::Ptr<_1c63dd35a_Data> _1c63e884e_evalExpSlc(jule::Ptr<_1c63e004e_Eval>, jule::Ptr<_1c62a4aa1_SliceExpr>, jule::Ptr<_1c641d522_TypeKind>, jule::Any);
inline jule::Ptr<_1c63dd35a_Data> _1c63e8b90_evalSliceExpr(jule::Ptr<_1c63e004e_Eval>, jule::Ptr<_1c62a4aa1_SliceExpr>);
inline void _1c63e9003_checkIntegerIndexingByData(_1c63e004e_Eval*, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c6283a3b_Token>);
inline void _1c63e9421_indexingPtr(_1c63e004e_Eval*, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c62a5541_IndexingExpr>*);
inline void _1c63e983e_indexingArr(_1c63e004e_Eval*, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c62a5541_IndexingExpr>*);
inline void _1c63e9c5c_indexingSlc(_1c63e004e_Eval*, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c62a5541_IndexingExpr>*);
inline void _1c63ea17a_indexingMap(_1c63e004e_Eval*, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c62a5541_IndexingExpr>*);
inline void _1c63ea598_indexingStr(_1c63e004e_Eval*, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c62a5541_IndexingExpr>*);
inline void _1c63ea9b6_toIndexing(_1c63e004e_Eval*, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c62a5541_IndexingExpr>*);
inline jule::Bool _1c63eae6c_pushGenericsFromExprSubIdent(jule::Ptr<_1c63e004e_Eval>, jule::Ptr<_1c62a1691_SubIdentExpr>*, jule::Slice<jule::Ptr<_1c6299249_TypeDecl>>*, jule::Ptr<_1c629d57d_Expr>*);
inline jule::Bool _1c63eb368_pushGenericsFromData(jule::Ptr<_1c63e004e_Eval>, jule::Slice<jule::Ptr<_1c6299249_TypeDecl>>*, jule::Ptr<_1c629d57d_Expr>*);
inline void _1c63eb6cb_evalIdentDeclFromIndexing(jule::Ptr<_1c63e004e_Eval>, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c62a5541_IndexingExpr>*);
inline jule::Bool _1c63ebb82_checkGenericFn(jule::Ptr<_1c63e004e_Eval>, jule::Ptr<_1c62d2b01_FnIns>*, jule::Ptr<_1c6283a3b_Token>*, jule::Any*);
inline void _1c63ebee5_evalFnGenericFromIndexing(jule::Ptr<_1c63e004e_Eval>, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c62a5541_IndexingExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c63ec336_evalIndexing(jule::Ptr<_1c63e004e_Eval>, jule::Ptr<_1c62a5541_IndexingExpr>);
inline __jule_tuple_x_1c63dd35a_Data__jule_tuple_x_1c63dd35a_Data _1c63ec677_evalSlicingExprs(jule::Ptr<_1c63e004e_Eval>, jule::Ptr<_1c62a5ba1_SlicingExpr>*);
inline void _1c63ec930_slicingArr(_1c63e004e_Eval*, jule::Ptr<_1c63dd35a_Data>*);
inline void _1c63ecd4d_slicingStr(_1c63e004e_Eval*, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c63dd35a_Data>*);
inline void _1c63ed326_checkSlicing(_1c63e004e_Eval*, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c62a5ba1_SlicingExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c63ed667_evalSlicing(jule::Ptr<_1c63e004e_Eval>, jule::Ptr<_1c62a5ba1_SlicingExpr>);
inline void _1c63eda85_castPtr(_1c63e004e_Eval*, jule::Ptr<_1c641d522_TypeKind>, jule::Ptr<_1c63dd35a_Data>, jule::Ptr<_1c6283a3b_Token>);
inline void _1c63edea3_castStruct(_1c63e004e_Eval*, jule::Ptr<_1c641d522_TypeKind>, jule::Ptr<_1c63dd35a_Data>, jule::Ptr<_1c6283a3b_Token>);
inline void _1c63ee3c1_castRef(_1c63e004e_Eval*, jule::Ptr<_1c641d522_TypeKind>, jule::Ptr<_1c63dd35a_Data>, jule::Ptr<_1c6283a3b_Token>);
inline void _1c63ee7de_castSlc(_1c63e004e_Eval*, jule::Ptr<_1c641d522_TypeKind>, jule::Ptr<_1c63dd35a_Data>, jule::Ptr<_1c6283a3b_Token>);
inline void _1c63eeb52_castStr(_1c63e004e_Eval*, jule::Ptr<_1c63dd35a_Data>, jule::Ptr<_1c6283a3b_Token>);
inline void _1c6400070_castInt(_1c63e004e_Eval*, jule::Ptr<_1c641d522_TypeKind>, jule::Ptr<_1c63dd35a_Data>, jule::Ptr<_1c6283a3b_Token>);
inline void _1c640048d_castNum(_1c63e004e_Eval*, jule::Ptr<_1c641d522_TypeKind>, jule::Ptr<_1c63dd35a_Data>, jule::Ptr<_1c6283a3b_Token>);
inline void _1c64008ab_castPrim(_1c63e004e_Eval*, jule::Ptr<_1c641d522_TypeKind>, jule::Ptr<_1c63dd35a_Data>, jule::Ptr<_1c6283a3b_Token>);
inline void _1c6400c1e_castConstant(_1c63e004e_Eval*, jule::Ptr<_1c641d522_TypeKind>*, jule::Ptr<_1c63dd35a_Data>*);
inline void _1c640113c_castTypeEnum(_1c63e004e_Eval*, jule::Ptr<_1c641d522_TypeKind>*, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c6283a3b_Token>*);
inline void _1c640155a_castTypeEnumT(_1c63e004e_Eval*, jule::Ptr<_1c641d522_TypeKind>*, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c6283a3b_Token>*);
inline jule::Ptr<_1c63dd35a_Data> _1c6401a11_evalCastByTypeNData(_1c63e004e_Eval*, jule::Ptr<_1c641d522_TypeKind>, jule::Ptr<_1c63dd35a_Data>, jule::Ptr<_1c6283a3b_Token>);
inline jule::Ptr<_1c63dd35a_Data> _1c6401eb7_evalCastT(jule::Ptr<_1c63e004e_Eval>, jule::Ptr<_1c641d522_TypeKind>*, jule::Ptr<_1c629d57d_Expr>*, jule::Ptr<_1c6283a3b_Token>*);
inline jule::Ptr<_1c63dd35a_Data> _1c6402308_evalCast(jule::Ptr<_1c63e004e_Eval>, jule::Ptr<_1c62a0ddd_CastExpr>);
inline jule::Ptr<_1c63dd35a_Data> _1c6402649_evalNsSelection(_1c63e004e_Eval*, jule::Ptr<_1c62a12b7_NsSelectionExpr>);
inline jule::Ptr<_1c63dd35a_Data> _1c6402b00_evalStructLitExplicit(jule::Ptr<_1c63e004e_Eval>, jule::Ptr<_1c62bcab9_StructIns>, jule::Slice<jule::Ptr<_1c629d57d_Expr>>, jule::Ptr<_1c6283a3b_Token>);
inline jule::Ptr<_1c63dd35a_Data> _1c6402e41_evalStructLit(jule::Ptr<_1c63e004e_Eval>, jule::Ptr<_1c62a35c7_StructLit>);
inline _1c64303d0_typeChecker _1c64031c7_typeChecker(_1c63e004e_Eval*);
inline jule::Ptr<_1c63dd35a_Data> _1c6403518_evalType(_1c63e004e_Eval*, jule::Ptr<_1c6299249_TypeDecl>);
inline void _1c640387b_callTypeFn(jule::Ptr<_1c63e004e_Eval>, jule::Ptr<_1c62a22a7_FnCallExpr>*, jule::Ptr<_1c63dd35a_Data>*);
inline void _1c6403bde_callBuiltinFn(jule::Ptr<_1c63e004e_Eval>, jule::Ptr<_1c62a22a7_FnCallExpr>*, jule::Ptr<_1c63dd35a_Data>*);
inline void _1c6404052_checkFnOfConcurrentCall(_1c63e004e_Eval*, jule::Ptr<_1c62d2b01_FnIns>*, jule::Ptr<_1c6283a3b_Token>);
inline void _1c6404470_processExceptionalHandler(_1c63e004e_Eval*, jule::Ptr<_1c62d2b01_FnIns>*, jule::Ptr<_1c62a22a7_FnCallExpr>*, jule::Ptr<_1c63dd35a_Data>*);
inline void _1c64047d3_callFn(jule::Ptr<_1c63e004e_Eval>, jule::Ptr<_1c62a22a7_FnCallExpr>*, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Ptr<_1c63dd35a_Data> _1c6404b24_evalFnCall(jule::Ptr<_1c63e004e_Eval>, jule::Ptr<_1c62a22a7_FnCallExpr>);
inline jule::Ptr<_1c63dd35a_Data> _1c6405020_evalEnumStatic(_1c63e004e_Eval*, jule::Ptr<_1c62e5691_Enum>, jule::Ptr<_1c6283a3b_Token>);
inline jule::Ptr<_1c63dd35a_Data> _1c640541b_evalTypeEnumStatic(_1c63e004e_Eval*, jule::Ptr<_1c62e6d9b_TypeEnum>, jule::Ptr<_1c6283a3b_Token>);
inline jule::Ptr<_1c63dd35a_Data> _1c6405817_evalStructStatic(_1c63e004e_Eval*, jule::Ptr<_1c62bcab9_StructIns>, jule::Ptr<_1c6283a3b_Token>);
inline jule::Ptr<_1c63dd35a_Data> _1c6405cbd_evalTraitSubIdent(_1c63e004e_Eval*, jule::Ptr<_1c63dd35a_Data>, jule::Ptr<_1c62e2e96_Trait>, jule::Ptr<_1c6283a3b_Token>);
inline jule::Ptr<_1c63dd35a_Data> _1c640632e_evalStructSubIdentField(_1c63e004e_Eval*, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c62bcab9_StructIns>*, jule::Ptr<_1c6283a3b_Token>*, jule::Ptr<_1c62bc019_FieldIns>*);
inline jule::Ptr<_1c63dd35a_Data> _1c6406890_evalStructSubIdent(_1c63e004e_Eval*, jule::Ptr<_1c63dd35a_Data>, jule::Ptr<_1c62bcab9_StructIns>, jule::Ptr<_1c62a1691_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1c63dd35a_Data> _1c6406bd1_evalIntTypeStatic(_1c63e004e_Eval*, jule::Ptr<_1c6283a3b_Token>);
inline jule::Ptr<_1c63dd35a_Data> _1c6407022_evalUintTypeStatic(_1c63e004e_Eval*, jule::Ptr<_1c6283a3b_Token>);
inline jule::Ptr<_1c63dd35a_Data> _1c6407363_evalI8TypeStatic(_1c63e004e_Eval*, jule::Ptr<_1c6283a3b_Token>);
inline jule::Ptr<_1c63dd35a_Data> _1c64076a4_evalI16TypeStatic(_1c63e004e_Eval*, jule::Ptr<_1c6283a3b_Token>);
inline jule::Ptr<_1c63dd35a_Data> _1c64079e5_evalI32TypeStatic(_1c63e004e_Eval*, jule::Ptr<_1c6283a3b_Token>);
inline jule::Ptr<_1c63dd35a_Data> _1c6407d36_evalI64TypeStatic(_1c63e004e_Eval*, jule::Ptr<_1c6283a3b_Token>);
inline jule::Ptr<_1c63dd35a_Data> _1c6408177_evalU8TypeStatic(_1c63e004e_Eval*, jule::Ptr<_1c6283a3b_Token>);
inline jule::Ptr<_1c63dd35a_Data> _1c64084b8_evalU16TypeStatic(_1c63e004e_Eval*, jule::Ptr<_1c6283a3b_Token>);
inline jule::Ptr<_1c63dd35a_Data> _1c6408809_evalU32TypeStatic(_1c63e004e_Eval*, jule::Ptr<_1c6283a3b_Token>);
inline jule::Ptr<_1c63dd35a_Data> _1c6408b4a_evalU64TypeStatic(_1c63e004e_Eval*, jule::Ptr<_1c6283a3b_Token>);
inline jule::Ptr<_1c63dd35a_Data> _1c6408e8b_evalF32TypeStatic(_1c63e004e_Eval*, jule::Ptr<_1c6283a3b_Token>);
inline jule::Ptr<_1c63dd35a_Data> _1c64092cc_evalF64TypeStatic(_1c63e004e_Eval*, jule::Ptr<_1c6283a3b_Token>);
inline jule::Ptr<_1c63dd35a_Data> _1c64096c8_evalPrimStatic(_1c63e004e_Eval*, jule::Str, jule::Ptr<_1c6283a3b_Token>);
inline jule::Ptr<_1c63dd35a_Data> _1c6409ac4_evalTypeStatic(_1c63e004e_Eval*, jule::Ptr<_1c63dd35a_Data>, jule::Ptr<_1c62a1691_SubIdentExpr>);
inline jule::Ptr<_1c63dd35a_Data> _1ad0a504b_comptimeObjSubIdent(_1c63e004e_Eval*, jule::Ptr<_1c6308c15_comptimeTypeInfo>*, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c62a1691_SubIdentExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1ad0a9605_comptimeObjSubIdent(_1c63e004e_Eval*, jule::Ptr<_1c62e9ca0_comptimeStructField>*, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c62a1691_SubIdentExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1ad0adb6a_comptimeObjSubIdent(_1c63e004e_Eval*, jule::Ptr<_1c6301317_comptimeEnumField>*, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c62a1691_SubIdentExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1ad0b3224_comptimeObjSubIdent(_1c63e004e_Eval*, jule::Ptr<_1c6303ca9_comptimeParam>*, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c62a1691_SubIdentExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1ad0b7a0e_comptimeObjSubIdent(_1c63e004e_Eval*, jule::Ptr<_1c62ed05b_comptimeStatic>*, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c62a1691_SubIdentExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1ad0bc074_comptimeObjSubIdent(_1c63e004e_Eval*, jule::Ptr<_1c6310227_comptimeValue>*, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c62a1691_SubIdentExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1ad0c15d9_comptimeObjSubIdent(_1c63e004e_Eval*, jule::Ptr<_1c6314171_comptimeFile>*, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c62a1691_SubIdentExpr>*);
inline __jule_tuple_x_1c63dd35a_Data__jule_tuple_bool _1c640a476_tryComptimeObjSubIdent(_1c63e004e_Eval*, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c62a1691_SubIdentExpr>);
inline jule::Ptr<_1c63dd35a_Data> _1c640a872_evalObjSubIdent(_1c63e004e_Eval*, jule::Ptr<_1c63dd35a_Data>, jule::Ptr<_1c62a1691_SubIdentExpr>);
inline jule::Ptr<_1c63dd35a_Data> _1c640abb3_evalSubIdent(jule::Ptr<_1c63e004e_Eval>, jule::Ptr<_1c62a1691_SubIdentExpr>);
inline jule::Ptr<_1c63dd35a_Data> _1c640b004_evalTuple(jule::Ptr<_1c63e004e_Eval>, jule::Ptr<_1c629e24e_TupleExpr>);
inline jule::Ptr<_1c63dd35a_Data> _1c640b400_evalMap(jule::Ptr<_1c63e004e_Eval>, jule::Ptr<_1c642bc8e_Map>, jule::Ptr<_1c62a3a7d_BraceLit>);
inline jule::Ptr<_1c63dd35a_Data> _1c640b741_evalBraceLit(jule::Ptr<_1c63e004e_Eval>, jule::Ptr<_1c62a3a7d_BraceLit>);
inline jule::Ptr<_1c63dd35a_Data> _1c640ba82_evalAnonFunc(jule::Ptr<_1c63e004e_Eval>, jule::Ptr<_1c62aae09_FnDecl>);
inline jule::Ptr<_1c63dd35a_Data> _1c640bdc3_evalBinop(jule::Ptr<_1c63e004e_Eval>, jule::Ptr<_1c62a1b47_BinopExpr>);
inline jule::Ptr<_1c63dd35a_Data> _1c640c214_evalExprKind(jule::Ptr<_1c63e004e_Eval>, jule::Any);
inline jule::Ptr<_1c63dd35a_Data> _1c640c555_eval1(jule::Ptr<_1c63e004e_Eval>, jule::Ptr<_1c629d57d_Expr>);
inline jule::Ptr<_1c63dd35a_Data> _1c640c896_eval(jule::Ptr<_1c63e004e_Eval>, jule::Ptr<_1c629d57d_Expr>);
inline jule::Ptr<_1c63dd35a_Data> _1c640cbd7_evalExpr1(jule::Ptr<_1c63e004e_Eval>, jule::Ptr<_1c629d57d_Expr>);
inline jule::Ptr<_1c63dd35a_Data> _1c640d028_evalExpr(jule::Ptr<_1c63e004e_Eval>, jule::Ptr<_1c629d57d_Expr>);
inline _1c640d4e0_unaryEval static__1c640d930_new(jule::Ptr<_1c63e004e_Eval>);
inline void _1c640db2d_minus(_1c640d4e0_unaryEval*);
inline void _1c640dd2b_plus(_1c640d4e0_unaryEval*);
inline void _1c640e029_caret(_1c640d4e0_unaryEval*);
inline void _1c640e227_excl(_1c640d4e0_unaryEval*);
inline void _1c640e425_star(_1c640d4e0_unaryEval*);
inline void _1c640e623_amper(_1c640d4e0_unaryEval*);
inline void _1c640e821_typeDecl(_1c640d4e0_unaryEval*);
inline void _1c640ea1e_evalData(_1c640d4e0_unaryEval*);
inline jule::Ptr<_1c63dd35a_Data> _1c640ed60_eval(_1c640d4e0_unaryEval*, jule::Ptr<_1c62a063a_UnaryExpr>);
inline _1c641047b_binaryEval static__1c6410a64_newPlain(jule::Ptr<_1c63e004e_Eval>);
inline _1c641047b_binaryEval static__1c6410da5_new(jule::Ptr<_1c63e004e_Eval>, jule::Ptr<_1c6283a3b_Token>);
inline jule::Bool _1c641113b_checkTypeCompatibility(_1c641047b_binaryEval*);
inline jule::Bool _1c64113c2_checkStructCommonOperatorCompatibility(_1c641047b_binaryEval*);
inline jule::Ptr<_1c63dd35a_Data> _1c6411658_evalComptimeTypeInfo(_1c641047b_binaryEval*);
inline jule::Ptr<_1c63dd35a_Data> _1c64118de_evalNil(_1c641047b_binaryEval*);
inline jule::Ptr<_1c63dd35a_Data> _1c6411b75_evalEnum(_1c641047b_binaryEval*);
inline jule::Ptr<_1c63dd35a_Data> _1c6411e0b_evalTypeEnum(_1c641047b_binaryEval*);
inline jule::Ptr<_1c63dd35a_Data> _1c6412192_evalSptr(_1c641047b_binaryEval*);
inline jule::Ptr<_1c63dd35a_Data> _1c6412428_evalPtr(_1c641047b_binaryEval*);
inline jule::Ptr<_1c63dd35a_Data> _1c64126ae_evalArr(_1c641047b_binaryEval*);
inline jule::Ptr<_1c63dd35a_Data> _1c6412945_evalSlc(_1c641047b_binaryEval*);
inline jule::Ptr<_1c63dd35a_Data> _1c6412bcb_evalStruct(_1c641047b_binaryEval*);
inline jule::Ptr<_1c63dd35a_Data> _1c6412e62_evalTrait(_1c641047b_binaryEval*);
inline jule::Ptr<_1c63dd35a_Data> _1c64131e8_evalAny(_1c641047b_binaryEval*);
inline jule::Ptr<_1c63dd35a_Data> _1c641347e_evalBool(_1c641047b_binaryEval*);
inline jule::Ptr<_1c63dd35a_Data> _1c6413715_evalStr(_1c641047b_binaryEval*);
inline void _1c6413913_setTypeToGreater(_1c641047b_binaryEval*);
inline void _1c6413bbb_checkModData(_1c641047b_binaryEval*, jule::Ptr<_1c63dd35a_Data>*);
inline void _1c6413db9_mod(_1c641047b_binaryEval*);
inline jule::Bool _1c64142b5_numbersAreCompatibile(_1c641047b_binaryEval*, jule::Str*, jule::Str*);
inline jule::Ptr<_1c63dd35a_Data> _1c641454b_evalFloat(_1c641047b_binaryEval*);
inline jule::Ptr<_1c63dd35a_Data> _1c64147d2_evalInt(_1c641047b_binaryEval*);
inline jule::Ptr<_1c63dd35a_Data> _1c6414a68_evalPrim(_1c641047b_binaryEval*);
inline void _1c6414c66_checkSpecialCases(_1c641047b_binaryEval*);
inline jule::Ptr<_1c63dd35a_Data> _1c6414eec_evalOp(_1c641047b_binaryEval*);
inline void _1c64152a5_evalConst(_1c641047b_binaryEval*, jule::Ptr<_1c63dd35a_Data>*);
inline void _1c641555d_checkData(_1c641047b_binaryEval*, jule::Ptr<_1c63dd35a_Data>*);
inline void _1c641575b_checkDatas(_1c641047b_binaryEval*);
inline void _1c6415a14_setModel(_1c641047b_binaryEval*, jule::Ptr<_1c63dd35a_Data>*);
inline void _1c6415cbc_postEval(_1c641047b_binaryEval*, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Ptr<_1c63dd35a_Data> _1c64161b8_solveExplicit(_1c641047b_binaryEval*, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Ptr<_1c63dd35a_Data> _1c6416509_eval(_1c641047b_binaryEval*, jule::Ptr<_1c62a1b47_BinopExpr>*);
inline jule::Str _1c641d8da_Str(_1c641d522_TypeKind*);
inline jule::Bool _1c641dc2b_Equal(jule::Ptr<_1c641d522_TypeKind>, jule::Ptr<_1c641d522_TypeKind>);
inline jule::Bool _1c641e369_Binded(_1c641d522_TypeKind*);
inline jule::Bool _1c641e600_IsNil(_1c641d522_TypeKind*);
inline jule::Bool _1c641e886_Void(_1c641d522_TypeKind*);
inline jule::Bool _1c641eb1c_Comparable(_1c641d522_TypeKind*);
inline jule::Bool _1c641eda3_Mutable(_1c641d522_TypeKind*);
inline jule::Bool _1c6420139_Ordered(_1c641d522_TypeKind*);
inline jule::Bool _1c64203c0_NilCompatible(_1c641d522_TypeKind*);
inline jule::Bool _1c6420656_PerformsRC(_1c641d522_TypeKind*);
inline jule::Bool _1c64208dc_Variadicable(_1c641d522_TypeKind*);
inline jule::Ptr<_1c64260eb_Prim> _1c6420b73_Prim(_1c641d522_TypeKind*);
inline jule::Ptr<_1c6429b27_Sptr> _1c6420e09_Sptr(_1c641d522_TypeKind*);
inline jule::Ptr<_1c642d3de_Ptr> _1c6421190_Ptr(_1c641d522_TypeKind*);
inline jule::Ptr<_1c62e5691_Enum> _1c6421426_Enum(_1c641d522_TypeKind*);
inline jule::Ptr<_1c62e6d9b_TypeEnum> _1c64216ac_TypeEnum(_1c641d522_TypeKind*);
inline jule::Ptr<_1c642c91b_Arr> _1c6421943_Arr(_1c641d522_TypeKind*);
inline jule::Ptr<_1c642a5ea_Slc> _1c6421bc9_Slc(_1c641d522_TypeKind*);
inline jule::Ptr<_1c62d2b01_FnIns> _1c6421e60_Fn(_1c641d522_TypeKind*);
inline jule::Ptr<_1c62bcab9_StructIns> _1c64221e6_Struct(_1c641d522_TypeKind*);
inline jule::Ptr<_1c62e2e96_Trait> _1c642247c_Trait(_1c641d522_TypeKind*);
inline jule::Ptr<_1c642bc8e_Map> _1c6422713_Map(_1c641d522_TypeKind*);
inline jule::Ptr<_1c642b1de_Tuple> _1c6422999_Tup(_1c641d522_TypeKind*);
inline jule::Bool _1c6422c30_comptime(_1c641d522_TypeKind*);
inline jule::Ptr<_1c62eb950_comptimeStructFields> _1c6422eb6_comptimeStructFields(_1c641d522_TypeKind*);
inline jule::Ptr<_1c62e9ca0_comptimeStructField> _1c642324c_comptimeStructField(_1c641d522_TypeKind*);
inline jule::Ptr<_1c6302626_comptimeEnumFields> _1c64234d3_comptimeEnumFields(_1c641d522_TypeKind*);
inline jule::Ptr<_1c6301317_comptimeEnumField> _1c6423769_comptimeEnumField(_1c641d522_TypeKind*);
inline jule::Ptr<_1c6306020_comptimeParams> _1c6423a00_comptimeParams(_1c641d522_TypeKind*);
inline jule::Ptr<_1c6303ca9_comptimeParam> _1c6423c86_comptimeParam(_1c641d522_TypeKind*);
inline jule::Ptr<_1c62e9244_comptimeRange> _1c642401c_comptimeRange(_1c641d522_TypeKind*);
inline jule::Ptr<_1c630761a_comptimeTypeInfos> _1c64242a3_comptimeTypeInfos(_1c641d522_TypeKind*);
inline jule::Ptr<_1c6308c15_comptimeTypeInfo> _1c6424539_comptimeTypeInfo(_1c641d522_TypeKind*);
inline jule::Ptr<_1c62eec1c_comptimeStatics> _1c64247c0_comptimeStatics(_1c641d522_TypeKind*);
inline jule::Ptr<_1c62ed05b_comptimeStatic> _1c6424a56_comptimeStatic(_1c641d522_TypeKind*);
inline jule::Ptr<_1c6310227_comptimeValue> _1c6424cdc_comptimeValue(_1c641d522_TypeKind*);
inline jule::Ptr<_1c6314171_comptimeFile> _1c6425073_comptimeFile(_1c641d522_TypeKind*);
inline jule::Ptr<_1c6312a76_comptimeFiles> _1c6425309_comptimeFiles(_1c641d522_TypeKind*);
inline jule::Bool _1c6425a68_checked(_1c64256e4_TypeSymbol*);
inline jule::Str _1c642643c_Str(_1c64260eb_Prim*);
inline jule::Bool _1c642677d_Equal(jule::Ptr<_1c64260eb_Prim>, jule::Ptr<_1c641d522_TypeKind>);
inline jule::Bool _1c6426c23_IsConstraint(_1c64260eb_Prim*);
inline jule::Bool _1c6426ea9_IsI8(_1c64260eb_Prim*);
inline jule::Bool _1c6427240_IsI16(_1c64260eb_Prim*);
inline jule::Bool _1c64274c6_IsI32(_1c64260eb_Prim*);
inline jule::Bool _1c642775c_IsI64(_1c64260eb_Prim*);
inline jule::Bool _1c64279e3_IsU8(_1c64260eb_Prim*);
inline jule::Bool _1c6427c79_IsU16(_1c64260eb_Prim*);
inline jule::Bool _1c6428010_IsU32(_1c64260eb_Prim*);
inline jule::Bool _1c6428296_IsU64(_1c64260eb_Prim*);
inline jule::Bool _1c642852c_IsF32(_1c64260eb_Prim*);
inline jule::Bool _1c64287b3_IsF64(_1c64260eb_Prim*);
inline jule::Bool _1c6428a49_IsInt(_1c64260eb_Prim*);
inline jule::Bool _1c6428cd0_IsUint(_1c64260eb_Prim*);
inline jule::Bool _1c6429066_IsUintptr(_1c64260eb_Prim*);
inline jule::Bool _1c64292ec_IsBool(_1c64260eb_Prim*);
inline jule::Bool _1c6429583_IsStr(_1c64260eb_Prim*);
inline jule::Bool _1c6429819_IsAny(_1c64260eb_Prim*);
inline jule::Str _1c6429e9b_Str(_1c6429b27_Sptr*);
inline jule::Bool _1c642a2dc_Equal(jule::Ptr<_1c6429b27_Sptr>, jule::Ptr<_1c641d522_TypeKind>);
inline jule::Str _1c642aa7e_Str(_1c642a5ea_Slc*);
inline jule::Bool _1c642adc0_Equal(jule::Ptr<_1c642a5ea_Slc>, jule::Ptr<_1c641d522_TypeKind>);
inline jule::Str _1c642b563_Str(_1c642b1de_Tuple*);
inline jule::Bool _1c642b8a4_Equal(jule::Ptr<_1c642b1de_Tuple>, jule::Ptr<_1c641d522_TypeKind>);
inline jule::Str _1c642c113_Str(_1c642bc8e_Map*);
inline jule::Bool _1c642c454_Equal(jule::Ptr<_1c642bc8e_Map>, jule::Ptr<_1c641d522_TypeKind>);
inline jule::Str _1c642cc90_Str(_1c642c91b_Arr*);
inline jule::Bool _1c642d0d1_Equal(jule::Ptr<_1c642c91b_Arr>, jule::Ptr<_1c641d522_TypeKind>);
inline jule::Str _1c642d763_Str(_1c642d3de_Ptr*);
inline jule::Bool _1c642daa4_Equal(jule::Ptr<_1c642d3de_Ptr>, jule::Ptr<_1c641d522_TypeKind>);
inline jule::Bool _1c642de28_IsUnsafe(_1c642d3de_Ptr*);
inline void _1c6430b1c_pushErr(_1c64303d0_typeChecker*, jule::Ptr<_1c6283a3b_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c6430d1a_allowBuiltin(_1c64303d0_typeChecker*);
inline void _1c6431018_disallowBuiltin(_1c64303d0_typeChecker*);
inline void _1ad2a7836_pushReference(_1c64303d0_typeChecker*, jule::Ptr<_1c62bcab9_StructIns>*);
inline void _1ad2aa806_pushReference(_1c64303d0_typeChecker*, jule::Ptr<_1c62e2e96_Trait>*);
inline void _1c6431579_pushReferenceByKind(_1c64303d0_typeChecker*, jule::Ptr<_1c641d522_TypeKind>*);
inline void _1c6431997_pushCycleError(_1c64303d0_typeChecker*, jule::Any, jule::Any, _2206c697e_StrBuilder*);
inline jule::Bool _1c6431d93_checkCrossCycle(_1c64303d0_typeChecker*, jule::Any, _2206c697e_StrBuilder*);
inline jule::Bool _1c643228e_checkIllegalCycles(_1c64303d0_typeChecker*, jule::Ptr<_1c6299854_IdentTypeDecl>*, jule::Any);
inline jule::Trait<_1c641d06b_Kind> _1c643268a_fromTypeAlias(_1c64303d0_typeChecker*, jule::Ptr<_1c6299854_IdentTypeDecl>*, jule::Ptr<_1c641c730_TypeAlias>*);
inline jule::Ptr<_1c62e5691_Enum> _1c6432a86_fromEnum(_1c64303d0_typeChecker*, jule::Ptr<_1c6299854_IdentTypeDecl>*, jule::Ptr<_1c62e5691_Enum>*);
inline jule::Ptr<_1c62e6d9b_TypeEnum> _1c6432e82_fromTypeEnum(_1c64303d0_typeChecker*, jule::Ptr<_1c6299854_IdentTypeDecl>*, jule::Ptr<_1c62e6d9b_TypeEnum>*);
inline jule::Ptr<_1c62e2e96_Trait> _1c643337d_fromTrait(_1c64303d0_typeChecker*, jule::Ptr<_1c6299854_IdentTypeDecl>*, jule::Ptr<_1c62e2e96_Trait>*);
inline jule::Bool _1c6433779_checkStructIns(_1c64303d0_typeChecker*, jule::Ptr<_1c62bcab9_StructIns>*, jule::Ptr<_1c6283a3b_Token>*);
inline void _1c6433a32_appendUsedStructReference(_1c64303d0_typeChecker*, jule::Ptr<_1c62b9d3b_Struct>*);
inline jule::Ptr<_1c62bcab9_StructIns> _1c6433e2d_buildStructInstance(_1c64303d0_typeChecker*, jule::Ptr<_1c6299854_IdentTypeDecl>*, jule::Ptr<_1c62b9d3b_Struct>*);
inline jule::Ptr<_1c62bcab9_StructIns> _1c6434329_fromStruct(_1c64303d0_typeChecker*, jule::Ptr<_1c6299854_IdentTypeDecl>*, jule::Ptr<_1c62b9d3b_Struct>*);
inline jule::Trait<_1c641d06b_Kind> _1c643466a_getDef(_1c64303d0_typeChecker*, jule::Ptr<_1c6299854_IdentTypeDecl>*);
inline jule::Trait<_1c641d06b_Kind> _1c64349ab_buildIdent(_1c64303d0_typeChecker*, jule::Ptr<_1c6299854_IdentTypeDecl>);
inline jule::Trait<_1c641d06b_Kind> _1c6434cec_buildSubIdent(_1c64303d0_typeChecker*, jule::Ptr<_1c6299b51_SubIdentTypeDecl>);
inline jule::Ptr<_1c6429b27_Sptr> _1c643513d_buildSptrFromType(_1c64303d0_typeChecker*, jule::Ptr<_1c641d522_TypeKind>*);
inline jule::Ptr<_1c6429b27_Sptr> _1c643547e_buildSptr(_1c64303d0_typeChecker*, jule::Ptr<_1c629a2e4_SptrTypeDecl>);
inline jule::Ptr<_1c642d3de_Ptr> _1c64357c0_buildPtrFromType(_1c64303d0_typeChecker*, jule::Ptr<_1c641d522_TypeKind>*);
inline jule::Ptr<_1c642d3de_Ptr> _1c6435b11_buildPtr(_1c64303d0_typeChecker*, jule::Ptr<_1c629ac73_PtrTypeDecl>);
inline jule::Ptr<_1c642a5ea_Slc> _1c6435e52_buildSlc(_1c64303d0_typeChecker*, jule::Ptr<_1c629a679_SlcTypeDecl>);
inline jule::Ptr<_1c642c91b_Arr> _1c6436293_buildArr(_1c64303d0_typeChecker*, jule::Ptr<_1c629b515_ArrTypeDecl>);
inline jule::Ptr<_1c642bc8e_Map> _1c64365d4_buildMap(_1c64303d0_typeChecker*, jule::Ptr<_1c629bc63_MapTypeDecl>);
inline jule::Ptr<_1c642b1de_Tuple> _1c6436925_buildTuple(_1c64303d0_typeChecker*, jule::Ptr<_1c629a976_TupleTypeDecl>);
inline jule::Bool _1c6436c66_checkFuncTypes(_1c64303d0_typeChecker*, jule::Ptr<_1c62d2b01_FnIns>*);
inline jule::Ptr<_1c62d2b01_FnIns> _1c64370a7_buildFunc(_1c64303d0_typeChecker*, jule::Ptr<_1c62aae09_FnDecl>);
inline jule::Trait<_1c641d06b_Kind> _1c64373e8_buildByNamespace(_1c64303d0_typeChecker*, jule::Ptr<_1c6299ee7_NamespaceTypeDecl>);
inline jule::Ptr<_1c641d522_TypeKind> _1c6437739_build(_1c64303d0_typeChecker*, jule::Any*);
inline jule::Ptr<_1c641d522_TypeKind> _1c6437a7a_checkDecl(_1c64303d0_typeChecker*, jule::Ptr<_1c6299249_TypeDecl>*);
inline jule::Bool static__1c64384c6_prim(jule::Str*, jule::Ptr<_1c64260eb_Prim>);
inline jule::Bool static__1c643884a_exist(jule::Str*, jule::Ptr<_1c641d522_TypeKind>*);
inline void _1c6ccb2a8_stop(_1c6ccab48_scopeParser*);
inline jule::Bool _1c6ccb53e_stopped(_1c6ccab48_scopeParser*);
inline jule::Bool _1c6ccb7c5_finished(_1c6ccab48_scopeParser*);
inline jule::Bool _1c6ccba5b_isLastSt(_1c6ccab48_scopeParser*);
inline void _1c6ccbdbe_pushErr(_1c6ccab48_scopeParser*, jule::Ptr<_1c6283a3b_Token>, jule::Str);
inline void _1c6ccc232_pushSuggestion(_1c6ccab48_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1c6ccc4da_insertAsNext(_1c6ccab48_scopeParser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Ptr<_1c6cca2a7_stmt> _1c6ccc771_next(_1c6ccab48_scopeParser*);
inline jule::Ptr<_1c62a926a_ScopeTree> _1c6cccb6c_buildScope(_1c6ccab48_scopeParser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*, jule::Ptr<_1c6283a3b_Token>);
inline jule::Ptr<_1c62abed7_VarDecl> _1c6cccead_buildVarSt(_1c6ccab48_scopeParser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Ptr<_1c62ac3b1_RetSt> _1c6ccd2ee_buildRetSt(_1c6ccab48_scopeParser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline jule::Ptr<_1c62aca54_Iter> _1c6ccd640_buildWhileNextIter(_1c6ccab48_scopeParser*, jule::Ptr<_1c6cca2a7_stmt>*);
inline jule::Ptr<_1c62ad37e_WhileKind> _1c6ccd981_buildWhileIterKind(_1c6ccab48_scopeParser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>> _1c6ccdcc2_getRangeKindKeysTokens(_1c6ccab48_scopeParser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Ptr<_1c62abed7_VarDecl> _1c6cce113_buildRangeKindKey(_1c6ccab48_scopeParser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Slice<jule::Ptr<_1c62abed7_VarDecl>> _1c6cce454_buildRangeKindKeys(_1c6ccab48_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>>*);
inline void _1c6cce7b7_setupRangeKindKeysPlain(_1c6ccab48_scopeParser*, jule::Ptr<_1c62adc86_RangeKind>*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline void _1c6cceb2a_setupRangeKindKeysExplicit(_1c6ccab48_scopeParser*, jule::Ptr<_1c62adc86_RangeKind>*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline void _1c6ccee8d_setupRangeKindKeys(_1c6ccab48_scopeParser*, jule::Ptr<_1c62adc86_RangeKind>*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Ptr<_1c62adc86_RangeKind> _1c6cd0444_buildRangeIterKind(_1c6ccab48_scopeParser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*, jule::Ptr<_1c6283a3b_Token>*);
inline jule::Any _1c6cd0840_buildCommonIterKind(_1c6ccab48_scopeParser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*, jule::Ptr<_1c6283a3b_Token>*);
inline jule::Ptr<_1c62aca54_Iter> _1c6cd0b81_buildCommonIter(_1c6ccab48_scopeParser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline jule::Ptr<_1c62aca54_Iter> _1c6cd0ec2_buildIterSt(_1c6ccab48_scopeParser*, jule::Ptr<_1c6cca2a7_stmt>*);
inline jule::Ptr<_1c62ae160_BreakSt> _1c6cd1313_buildBreakSt(_1c6ccab48_scopeParser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Ptr<_1c62ae539_ContSt> _1c6cd1654_buildContSt(_1c6ccab48_scopeParser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Ptr<_1c62ae9e0_If> _1c6cd1995_buildIf(_1c6ccab48_scopeParser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Ptr<_1c62aedb9_Else> _1c6cd1cd6_buildElse(_1c6ccab48_scopeParser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Ptr<_1c62b0370_Conditional> _1c6cd2127_buildIfElseChain(_1c6ccab48_scopeParser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline jule::Ptr<_1c629d57d_Expr> _1c6cd2468_buildCoCallSt(_1c6ccab48_scopeParser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline jule::Ptr<_1c62a6c07_GotoSt> _1c6cd27a9_buildGotoSt(_1c6ccab48_scopeParser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Ptr<_1c62a7004_FallSt> _1c6cd2aea_buildFallSt(_1c6ccab48_scopeParser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Ptr<_1c62b0aac_TypeAliasDecl> _1c6cd2e3b_buildTypeAliasSt(_1c6ccab48_scopeParser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline void _1c6cd3414_pushCaseExpr(_1c6ccab48_scopeParser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>, jule::Ptr<_1c6283a3b_Token>, jule::Bool, jule::Slice<jule::Ptr<_1c629d57d_Expr>>*);
inline jule::Slice<jule::Ptr<_1c629d57d_Expr>> _1a9ea7380_buildCaseExprs(_1c6ccab48_scopeParser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*, jule::Ptr<_1c6283a3b_Token>*, jule::Bool);
inline jule::Ptr<_1c62a926a_ScopeTree> _1a9ea76c1_buildCaseScope(_1c6ccab48_scopeParser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline __jule_tuple_x_1c62b1063_Case__jule_tuple_bool _1a9ea7abc_buildCase(_1c6ccab48_scopeParser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*, jule::Bool);
inline __jule_tuple_sx_1c62b1063_Case__jule_tuple_x_1c62aedb9_Else _1a9ea7eb8_buildCases(_1c6ccab48_scopeParser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>, jule::Bool);
inline jule::Ptr<_1c62b17a0_MatchCase> _1a9ea8309_buildMatchCase(_1c6ccab48_scopeParser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline jule::Ptr<_1c62a926a_ScopeTree> _1a9ea864a_buildScopeSt(_1c6ccab48_scopeParser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline jule::Ptr<_1c62a682d_LabelSt> _1a9ea898b_buildLabelSt(_1c6ccab48_scopeParser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline __jule_tuple__1c62a88a7_StmtData__jule_tuple_bool _1a9ea8ccc_buildIdSt(_1c6ccab48_scopeParser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Ptr<_1a9eb913e_assignInfo> _1a9ea911d_buildAssignInfo(_1c6ccab48_scopeParser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Ptr<_1c62a7664_AssignLeft> _1a9ea945e_buildAssignL(_1c6ccab48_scopeParser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Slice<jule::Ptr<_1c62a7664_AssignLeft>> _1a9ea97a0_buildAssignLs(_1c6ccab48_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>>*);
inline __jule_tuple_x_1c62a7be7_AssignSt__jule_tuple_bool _1a9ea9ae1_buildPlainAssign(_1c6ccab48_scopeParser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Bool _1a9ea9edc_buildDeclAssign1(_1c6ccab48_scopeParser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*, jule::Ptr<_1c62a7be7_AssignSt>*);
inline __jule_tuple_x_1c62a7be7_AssignSt__jule_tuple_bool _1a9eaa32d_buildDeclAssign(_1c6ccab48_scopeParser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline __jule_tuple_x_1c62a7be7_AssignSt__jule_tuple_bool _1a9eaa66e_buildAssignSt(_1c6ccab48_scopeParser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Ptr<_1c629de52_UseExpr> _1a9eaa9b0_buildUseExpr(_1c6ccab48_scopeParser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Any _1a9eaad01_buildSt(_1c6ccab48_scopeParser*, jule::Ptr<_1c6cca2a7_stmt>*);
inline void _1a9eab164_build(_1c6ccab48_scopeParser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*, jule::Ptr<_1c62a926a_ScopeTree>*);
inline void _1a9eac495_pushErr(_1a9eabbd1_exprBuilder*, jule::Ptr<_1c6283a3b_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a9eac808_pushSuggestion(_1a9eabbd1_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1c629e24e_TupleExpr> _1a9eacb49_buildTuple(_1a9eabbd1_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>>*);
inline jule::Ptr<_1c629e628_LitExpr> _1a9eace8a_buildLit(_1a9eabbd1_exprBuilder*, jule::Ptr<_1c6283a3b_Token>);
inline jule::Any _1a9ead61c_buildSingle(_1a9eabbd1_exprBuilder*, jule::Ptr<_1c6283a3b_Token>);
inline jule::Ptr<_1c629eea8_IdentExpr> _1a9ead95d_buildBindIdent(_1a9eabbd1_exprBuilder*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Ptr<_1c62a063a_UnaryExpr> _1a9eadc9e_buildUnary(_1a9eabbd1_exprBuilder*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline jule::Ptr<_1c62a1691_SubIdentExpr> _1a9eae0e0_buildObjSubIdent(_1a9eabbd1_exprBuilder*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline jule::Ptr<_1c62a12b7_NsSelectionExpr> _1a9eae431_buildNsSubIdent(_1a9eabbd1_exprBuilder*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Ptr<_1c6299249_TypeDecl> _1a9eae772_buildType(_1a9eabbd1_exprBuilder*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Any _1a9eaeab3_buildSubIdent(_1a9eabbd1_exprBuilder*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Ptr<_1c62a0a14_VariadicExpr> _1a9eaee04_buildVariadic(_1a9eabbd1_exprBuilder*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline jule::Ptr<_1c629d87a_RangeExpr> _1a9eb0245_buildBetweenParentheses(_1a9eabbd1_exprBuilder*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline jule::Ptr<_1c62a0ddd_CastExpr> _1a9eb0586_tryBuildCast(_1a9eabbd1_exprBuilder*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline void _1a9eb09a4_pushArg(_1a9eabbd1_exprBuilder*, jule::Slice<jule::Ptr<_1c629d57d_Expr>>*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>, jule::Ptr<_1c6283a3b_Token>);
inline jule::Slice<jule::Ptr<_1c629d57d_Expr>> _1a9eb0ce5_buildArgs(_1a9eabbd1_exprBuilder*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline jule::Ptr<_1c62a22a7_FnCallExpr> _1a9eb15dc_buildFnCall(_1a9eabbd1_exprBuilder*, jule::Ptr<_1c6283a3b_Token>*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Any _1a9eb192d_buildParenthesesRange(_1a9eabbd1_exprBuilder*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Ptr<_1c629ea02_UnsafeExpr> _1a9eb1c6e_buildUnsafeExpr(_1a9eabbd1_exprBuilder*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline jule::Ptr<_1c62aae09_FnDecl> _1a9eb20b0_buildAnonFn(_1a9eabbd1_exprBuilder*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Any _1a9eb2401_buildUnsafe(_1a9eabbd1_exprBuilder*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline void _1a9eb281e_pushRangeLitPart(_1a9eabbd1_exprBuilder*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>, jule::Ptr<_1c6283a3b_Token>, jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>> _1a9eb2b60_getBraceRangeLitExprParts(_1a9eabbd1_exprBuilder*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline jule::Ptr<_1c62a2c9c_FieldExprPair> _1a9eb2ea1_buildFieldExprPair(_1a9eabbd1_exprBuilder*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline jule::Ptr<_1c629d57d_Expr> _1a9eb32e2_buildStructLitExpr(_1a9eabbd1_exprBuilder*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Slice<jule::Ptr<_1c629d57d_Expr>> _1a9eb3633_buildStructLitExprs(_1a9eabbd1_exprBuilder*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Ptr<_1c62a35c7_StructLit> _1a9eb3974_buildTypedStructLiteral(_1a9eabbd1_exprBuilder*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline jule::Ptr<_1c629d57d_Expr> _1a9eb3cb5_buildBraceLitPart(_1a9eabbd1_exprBuilder*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Ptr<_1c62a3a7d_BraceLit> _1a9eb4106_buildBraceLit(_1a9eabbd1_exprBuilder*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Any _1a9eb4447_buildBraceRange(_1a9eabbd1_exprBuilder*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>> _1a9eb4788_getEnumerableParts(_1a9eabbd1_exprBuilder*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline jule::Ptr<_1c62a4aa1_SliceExpr> _1a9eb4ac9_buildSlice(_1a9eabbd1_exprBuilder*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline jule::Ptr<_1c62a5541_IndexingExpr> _1a9eb5080_buildIndexing(_1a9eabbd1_exprBuilder*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>, jule::Slice<jule::Ptr<_1c6283a3b_Token>>, jule::Ptr<_1c6283a3b_Token>);
inline jule::Ptr<_1c62a5ba1_SlicingExpr> _1a9eb569b_buildSlicing(_1a9eabbd1_exprBuilder*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*, jule::Ptr<_1c6283a3b_Token>*, jule::Ptr<_1c6283a3b_Token>);
inline jule::Any _1a9eb59dc_buildBracketRange(_1a9eabbd1_exprBuilder*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline jule::Any _1a9eb5d2d_buildExclRight(_1a9eabbd1_exprBuilder*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Any _1a9eb616e_buildData(_1a9eabbd1_exprBuilder*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Any _1a9eb656a_buildBinop(_1a9eabbd1_exprBuilder*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*, jule::I64);
inline jule::Any _1a9eb68ab_build(_1a9eabbd1_exprBuilder*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Any _1a9eb6bec_buildKind(_1a9eabbd1_exprBuilder*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Ptr<_1c629d57d_Expr> _1a9eb703d_buildFromTokens(_1a9eabbd1_exprBuilder*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline void _1a9ebcad2_stop(_1a9ebc7d5_parser*);
inline jule::Bool _1a9ebcd68_stopped(_1a9ebc7d5_parser*);
inline void _1a9ebd286_pushErr(_1a9ebc7d5_parser*, jule::Ptr<_1c6283a3b_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a9ebd5e9_pushSuggestion(_1a9ebc7d5_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1c629d57d_Expr> _1a9ebd93a_buildExpr(jule::Ptr<_1a9ebc7d5_parser>, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Ptr<_1c6298666_Directive> _1a9ebdc7b_buildDirective(_1a9ebc7d5_parser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline void _1a9ebe034_pushDirective(_1a9ebc7d5_parser*, jule::Ptr<_1c6298666_Directive>);
inline jule::Ptr<_1c62a926a_ScopeTree> _1a9ebe430_buildScope(jule::Ptr<_1a9ebc7d5_parser>, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*, jule::Ptr<_1c6283a3b_Token>);
inline __jule_tuple_x_1c6299249_TypeDecl__jule_tuple_bool _1a9ebe8d6__buildType(jule::Ptr<_1a9ebc7d5_parser>, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*, jule::I64*, jule::Bool);
inline __jule_tuple_x_1c6299249_TypeDecl__jule_tuple_bool _1a9ebed8c_buildType(jule::Ptr<_1a9ebc7d5_parser>, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_1c62b0aac_TypeAliasDecl> _1a9ec01cd_buildTypeAliasDecl(jule::Ptr<_1a9ebc7d5_parser>, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline void _1a9ec0541_buildVarTypeAndExpr(jule::Ptr<_1a9ebc7d5_parser>, jule::Ptr<_1c62abed7_VarDecl>*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline void _1a9ec08a4_buildVarCommon(jule::Ptr<_1a9ebc7d5_parser>, jule::Ptr<_1c62abed7_VarDecl>*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline void _1a9ec0cc2_buildVarBegin(_1a9ebc7d5_parser*, jule::Ptr<_1c62abed7_VarDecl>*, jule::I64*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Ptr<_1c62abed7_VarDecl> _1a9ec1113_buildVar(jule::Ptr<_1a9ebc7d5_parser>, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline jule::Ptr<_1c62a6454_GenericDecl> _1a9ec1454_buildGeneric(jule::Ptr<_1a9ebc7d5_parser>, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Slice<jule::Ptr<_1c62a6454_GenericDecl>> _1a9ec1850_buildGenerics(jule::Ptr<_1a9ebc7d5_parser>, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*, jule::Ptr<_1c6283a3b_Token>*);
inline jule::Ptr<_1c62a99a7_ParamDecl> _1a9ec1b91_buildSelfParam(_1a9ebc7d5_parser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline void _1a9ec20ae_paramTypeBegin(_1a9ebc7d5_parser*, jule::Ptr<_1c62a99a7_ParamDecl>*, jule::I64*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline void _1a9ec2422_buildParamType(jule::Ptr<_1a9ebc7d5_parser>, jule::Ptr<_1c62a99a7_ParamDecl>*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline void _1a9ec2785_buildParamBody(jule::Ptr<_1a9ebc7d5_parser>, jule::Ptr<_1c62a99a7_ParamDecl>*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline jule::Ptr<_1c62a99a7_ParamDecl> _1a9ec2ac6_buildParam(jule::Ptr<_1a9ebc7d5_parser>, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline void _1a9ec2d7e_checkParams(_1a9ebc7d5_parser*, jule::Slice<jule::Ptr<_1c62a99a7_ParamDecl>>*);
inline jule::Slice<jule::Ptr<_1c62a99a7_ParamDecl>> _1a9ec327a_buildParams(jule::Ptr<_1a9ebc7d5_parser>, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*, jule::Bool);
inline __jule_tuple_x_1c629c13c_RetTypeDecl__jule_tuple_bool _1a9ec3676_buildMultiRetType(jule::Ptr<_1a9ebc7d5_parser>, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*, jule::I64*);
inline __jule_tuple_x_1c629c13c_RetTypeDecl__jule_tuple_bool _1a9ec3a72_buildRetType(jule::Ptr<_1a9ebc7d5_parser>, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*, jule::I64*);
inline jule::Ptr<_1c62aae09_FnDecl> _1a9ec4028_buildFnPrototype(jule::Ptr<_1a9ebc7d5_parser>, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_1c62aae09_FnDecl> _1a9ec44ce_buildFn(jule::Ptr<_1a9ebc7d5_parser>, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_1c6283a3b_Token>> _1a9ec4820_getUseDeclSelectors(_1a9ebc7d5_parser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline void _1a9ec4b83_buildBindUseDecl(_1a9ebc7d5_parser*, jule::Ptr<_1c62b20b9_UseDecl>*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline void _1a9ec4ee6_buildStdUseDecl(_1a9ebc7d5_parser*, jule::Ptr<_1c62b20b9_UseDecl>*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline void _1a9ec5359_buildIdentUseDecl(_1a9ebc7d5_parser*, jule::Ptr<_1c62b20b9_UseDecl>*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline void _1a9ec56bc_parseUseDecl(_1a9ebc7d5_parser*, jule::Ptr<_1c62b20b9_UseDecl>*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline jule::Ptr<_1c62b20b9_UseDecl> _1a9ec5ab8_buildUseDecl(_1a9ebc7d5_parser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>, jule::Bool);
inline jule::Ptr<_1c6299249_TypeDecl> _1a9ec5eb4_buildTypeEnumItemKind(jule::Ptr<_1a9ebc7d5_parser>, jule::I64*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Slice<jule::Ptr<_1c62b395b_TypeEnumItemDecl>> _1a9ec6305_buildTypeEnumItems(jule::Ptr<_1a9ebc7d5_parser>, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Ptr<_1c62b40bb_TypeEnumDecl> _1a9ec6646_buildTypeEnumDecl(jule::Ptr<_1a9ebc7d5_parser>, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Ptr<_1c629d57d_Expr> _1a9ec6a42_buildEnumItemExpr(jule::Ptr<_1a9ebc7d5_parser>, jule::I64*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Slice<jule::Ptr<_1c62b2570_EnumItemDecl>> _1a9ec6d83_buildEnumItems(jule::Ptr<_1a9ebc7d5_parser>, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Ptr<_1c62b3131_EnumDecl> _1a9ec71c4_buildEnumDecl(jule::Ptr<_1a9ebc7d5_parser>, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Any _1a9ec7515_buildNodeEnumDecl(jule::Ptr<_1a9ebc7d5_parser>, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Ptr<_1c62b4385_FieldDecl> _1a9ec7856_buildField(jule::Ptr<_1a9ebc7d5_parser>, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline jule::Slice<jule::Ptr<_1c62b4385_FieldDecl>> _1a9ec7b97_buildStructDeclFields(jule::Ptr<_1a9ebc7d5_parser>, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline jule::Ptr<_1c62b4c7b_StructDecl> _1a9ec7ed8_buildStructDecl(jule::Ptr<_1a9ebc7d5_parser>, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline void _1a9ec8291_checkMethodReceiver(_1a9ebc7d5_parser*, jule::Ptr<_1c62aae09_FnDecl>*);
inline void _1a9ec8604_buildTraitBody(jule::Ptr<_1a9ebc7d5_parser>, jule::Ptr<_1c62b54b8_TraitDecl>*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline jule::Ptr<_1c62b54b8_TraitDecl> _1a9ec8945_buildTraitDecl(jule::Ptr<_1a9ebc7d5_parser>, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Ptr<_1c62aae09_FnDecl> _1a9ec8c86_buildBindFn(jule::Ptr<_1a9ebc7d5_parser>, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline jule::Ptr<_1c62abed7_VarDecl> _1a9ec90c7_buildBindVar(jule::Ptr<_1a9ebc7d5_parser>, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline jule::Ptr<_1c62b4c7b_StructDecl> _1a9ec9418_buildBindStruct(jule::Ptr<_1a9ebc7d5_parser>, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline jule::Ptr<_1c62b0aac_TypeAliasDecl> _1a9ec9759_buildBindTypeAlias(jule::Ptr<_1a9ebc7d5_parser>, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline jule::Ptr<_1c62b20b9_UseDecl> _1a9ec9a9a_buildBindUse(jule::Ptr<_1a9ebc7d5_parser>, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline jule::Any _1a9ec9ddb_buildBind(jule::Ptr<_1a9ebc7d5_parser>, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Ptr<_1c62aae09_FnDecl> _1a9eca22c_getMethod(jule::Ptr<_1a9ebc7d5_parser>, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline void _1a9eca590_parseImplBody(jule::Ptr<_1a9ebc7d5_parser>, jule::Ptr<_1c62b5b28_Impl>*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Ptr<_1c62b5b28_Impl> _1a9eca8d1_buildImpl(jule::Ptr<_1a9ebc7d5_parser>, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline jule::Any _1a9ecac22_buildNodeData(jule::Ptr<_1a9ebc7d5_parser>, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline void _1a9ecaeca_applyFnMeta(_1a9ebc7d5_parser*, jule::Ptr<_1c62aae09_FnDecl>*);
inline void _1a9ecb283_applyMeta(_1a9ebc7d5_parser*, _1c6298248_Node*);
inline void _1a9ecb53b_pushUseDecl(jule::Ptr<_1a9ebc7d5_parser>, jule::Ptr<_1c62b20b9_UseDecl>*);
inline jule::Bool _1a9ecb87c_pushMetaNodes(jule::Ptr<_1a9ebc7d5_parser>, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline _1c6298248_Node _1a9ecbbbd_parseNode(jule::Ptr<_1a9ebc7d5_parser>, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline void _1a9ecbe76_appendNode(jule::Ptr<_1a9ebc7d5_parser>, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline void _1a9ecc44e_removeRange(_1a9ebc7d5_parser*, jule::I64, jule::U64, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*, jule::Slice<jule::I64>*);
inline void _1a9ecc86c_pushWrongOrderCloseErr(_1a9ebc7d5_parser*, jule::Ptr<_1c6283a3b_Token>*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*, jule::Slice<jule::I64>*);
inline void _1a9eccd45_pushRangeClose(_1a9ebc7d5_parser*, jule::Ptr<_1c6283a3b_Token>, jule::U64, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*, jule::Slice<jule::I64>*);
inline void _1a9ecd0ed_checkRanges(_1a9ebc7d5_parser*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline void _1a9ecd3a6_parse(jule::Ptr<_1a9ebc7d5_parser>, jule::Ptr<_1c6289305_File>*);
inline void _1a9ecebe3_pushErr(_1a9ece64e_typeBuilder*, jule::Ptr<_1c6283a3b_Token>, jule::Str);
inline void _1a9ed0056_pushSuggestion(_1a9ece64e_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1c6299249_TypeDecl> _1a9ed02dc_buildNamespace(_1a9ece64e_typeBuilder*);
inline jule::Slice<jule::Ptr<_1c6299249_TypeDecl>> _1a9ed0573_buildGenerics(_1a9ece64e_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>> _1a9ed0809_identGenerics(_1a9ece64e_typeBuilder*);
inline jule::Ptr<_1c6299249_TypeDecl> _1a9ed0a90_buildIdent(_1a9ece64e_typeBuilder*);
inline jule::Ptr<_1c6299249_TypeDecl> _1a9ed0d26_buildCppLink(_1a9ece64e_typeBuilder*);
inline jule::Ptr<_1c6299249_TypeDecl> _1a9ed10ac_buildFn(_1a9ece64e_typeBuilder*);
inline jule::Ptr<_1c6299249_TypeDecl> _1a9ed1343_buildPtr(_1a9ece64e_typeBuilder*);
inline jule::Ptr<_1c6299249_TypeDecl> _1a9ed15c9_buildSptr(_1a9ece64e_typeBuilder*);
inline jule::Ptr<_1c6299249_TypeDecl> _1a9ed1860_buildSlc(_1a9ece64e_typeBuilder*);
inline jule::Ptr<_1c6299249_TypeDecl> _1a9ed1ae6_buildArr(_1a9ece64e_typeBuilder*);
inline jule::Ptr<_1c6299249_TypeDecl> _1a9ed1d7c_buildMap(_1a9ece64e_typeBuilder*);
inline jule::Ptr<_1c6299249_TypeDecl> _1a9ed2113_buildEnumerable(_1a9ece64e_typeBuilder*);
inline jule::Ptr<_1c6299249_TypeDecl> _1a9ed2399_step(_1a9ece64e_typeBuilder*);
inline __jule_tuple_x_1c6299249_TypeDecl__jule_tuple_bool _1a9ed2630_build(_1a9ece64e_typeBuilder*);
inline void _1c473013d_pushErr(_1c472eadd_directiveEval*, jule::Ptr<_1c6283a3b_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>> _1c4730539_splitOperans(_1c472eadd_directiveEval*, jule::U64, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Bool _1c473087a_evalDirectiveIdent(_1c472eadd_directiveEval*, jule::Str);
inline jule::Bool _1c4730bbb_evalDirectivePart(_1c472eadd_directiveEval*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline jule::Bool _1c4730e52_eval(_1c472eadd_directiveEval*);
inline jule::Ptr<_1a9ed3785_JuleImporter> static__1a9ed3b81_New(_1c472d636_CompileInfo);
inline jule::Slice<jule::Ptr<_1c63469de_ImportInfo>> _1a9ed3e17_AllPackages(_1a9ed3785_JuleImporter*);
inline void _1a9ed4357_SetModPath(_1a9ed3785_JuleImporter*, jule::Str);
inline jule::Str _1a9ed45dd_GetModPath(_1a9ed3785_JuleImporter*);
inline jule::Str _1a9ed492e_ModById(_1a9ed3785_JuleImporter*, jule::I64);
inline jule::Ptr<_1c63469de_ImportInfo> _1a9ed4c70_GetImport(_1a9ed3785_JuleImporter*, jule::Str);
inline __jule_tuple_sx_1c6297379_Ast__jule_tuple_s_221968cb9_Log _1a9ed516b_ImportPackage(_1a9ed3785_JuleImporter*, jule::Str, jule::Bool);
inline void _1a9ed5424_Imported(_1a9ed3785_JuleImporter*, jule::Ptr<_1c63469de_ImportInfo>);
inline __jule_tuple_bool__jule_tuple_s_221968cb9_Log _1a9ed5853_isPassBuildDirectives(_1a9ed3785_JuleImporter*, jule::Ptr<_1c6297379_Ast>*);
inline jule::Bool _1ad8b7396_isCommonOrdered(jule::Slice<jule::Ptr<_1c62b9d3b_Struct>>, jule::Ptr<_1c62b9d3b_Struct>);
inline jule::Bool _1ad8bc335_isCommonOrdered(jule::Slice<jule::Ptr<_1c6389da6_Var>>, jule::Ptr<_1c6389da6_Var>);
inline void _1ad8b3a35_orderCommon(jule::Slice<jule::Ptr<_1c62b9d3b_Struct>>*);
inline void _1ad8b7c37_orderCommon(jule::Slice<jule::Ptr<_1c6389da6_Var>>*);
inline void static__1a9ed9604_orderStructures(jule::Slice<jule::Ptr<_1c62b9d3b_Struct>>*);
inline void static__1a9ed9835_orderVars(jule::Slice<jule::Ptr<_1c6389da6_Var>>*);
inline void _1aa1353ba_optimizeChild(jule::Ptr<_1aa134e14_scopeDeadCode>, jule::Ptr<_1c6320754_Scope>*);
inline void _1aa135673_optimizeBodyChildExceptional(jule::Ptr<_1aa134e14_scopeDeadCode>, jule::Ptr<_1c6320754_Scope>*);
inline void _1aa13592b_optimizeBodyChild(jule::Ptr<_1aa134e14_scopeDeadCode>, jule::Ptr<_1c6320754_Scope>*);
inline void _1aa135bd4_optimizeExprModel(jule::Ptr<_1aa134e14_scopeDeadCode>, jule::Any*);
inline void _1aa135dd2_eliminateFollowed(_1aa134e14_scopeDeadCode*);
inline void _1aa13618a_pushGoto(jule::Ptr<_1aa134e14_scopeDeadCode>, jule::Ptr<_1c63234c1_GotoSt>);
inline void _1aa136443_pushLabel(jule::Ptr<_1aa134e14_scopeDeadCode>, jule::Ptr<_1c63230e7_Label>);
inline void _1aa1366eb_optimizeRangeIter(jule::Ptr<_1aa134e14_scopeDeadCode>, jule::Ptr<_1c632258b_RangeIter>);
inline void _1aa1369a4_optimizeWhileIter(jule::Ptr<_1aa134e14_scopeDeadCode>, jule::Ptr<_1c6321b40_WhileIter>);
inline void _1aa136c5c_optimizeInfIter(jule::Ptr<_1aa134e14_scopeDeadCode>, jule::Ptr<_1c6321689_InfIter>);
inline void _1aa137015_optimizeConditional(jule::Ptr<_1aa134e14_scopeDeadCode>, jule::Ptr<_1c632138c_Conditional>);
inline void _1aa1372bd_optimizeMatch(jule::Ptr<_1aa134e14_scopeDeadCode>, jule::Ptr<_1c632488a_Match>);
inline void _1aa137576_optimizeAssign(jule::Ptr<_1aa134e14_scopeDeadCode>, jule::Ptr<_1c6323d51_Assign>);
inline void _1aa13782e_optimizeMultiAssign(jule::Ptr<_1aa134e14_scopeDeadCode>, jule::Ptr<_1c632422a_MultiAssign>);
inline void _1aa137ad7_optimizeStmt(jule::Ptr<_1aa134e14_scopeDeadCode>, jule::Any);
inline void _1aa137cd5_optimizeStmts(jule::Ptr<_1aa134e14_scopeDeadCode>);
inline _1aa13916b_exprDeadCode static__1aa1397a9_new(jule::Ptr<_1aa134e14_scopeDeadCode>*);
inline void _1aa139a62_binary(_1aa13916b_exprDeadCode*, jule::Ptr<_1c62c1ea8_BinopExprModel>);
inline void _1aa139d1a_unary(_1aa13916b_exprDeadCode*, jule::Ptr<_1c62c2382_UnaryExprModel>);
inline void _1aa13a0c3_structureLit(_1aa13916b_exprDeadCode*, jule::Ptr<_1c62c2c56_StructLitExprModel>);
inline void _1aa13a37b_allocStructure(_1aa13916b_exprDeadCode*, jule::Ptr<_1c62c3053_AllocStructLitExprModel>);
inline void _1aa13a634_casting(_1aa13916b_exprDeadCode*, jule::Ptr<_1c62c35d6_CastingExprModel>);
inline void _1aa13a8dc_args(_1aa13916b_exprDeadCode*, jule::Slice<jule::Any>*);
inline void _1aa13ab95_funcCall(_1aa13916b_exprDeadCode*, jule::Ptr<_1c62c3e88_FnCallExprModel>);
inline void _1aa13ae4d_slice(_1aa13916b_exprDeadCode*, jule::Ptr<_1c62c4362_SliceExprModel>);
inline void _1aa13b206_array(_1aa13916b_exprDeadCode*, jule::Ptr<_1c62c73a9_ArrayExprModel>);
inline void _1aa13b4ae_indexing(_1aa13916b_exprDeadCode*, jule::Ptr<_1c62c4818_IndexingExprModel>);
inline void _1aa13b767_anonFunc(_1aa13916b_exprDeadCode*, jule::Ptr<_1c62c4be2_AnonFnExprModel>);
inline void _1aa13ba20_mapExpr(_1aa13916b_exprDeadCode*, jule::Ptr<_1c62c5572_MapExprModel>);
inline void _1aa13bcc8_slicing(_1aa13916b_exprDeadCode*, jule::Ptr<_1c62c5b05_SlicingExprModel>);
inline void _1aa13c081_traitSub(_1aa13916b_exprDeadCode*, jule::Ptr<_1c62c6188_TraitSubIdentExprModel>);
inline void _1aa13c339_structureSub(_1aa13916b_exprDeadCode*, jule::Ptr<_1c62c6a29_StructSubIdentExprModel>);
inline void _1aa13c5e2_tuple(_1aa13916b_exprDeadCode*, jule::Ptr<_1c62c76a6_TupleExprModel>);
inline void _1aa13c89a_newCall(_1aa13916b_exprDeadCode*, jule::Ptr<_1c62c8333_BuiltinNewCallExprModel>);
inline void _1aa13cb53_outCall(_1aa13916b_exprDeadCode*, jule::Ptr<_1c62c7a80_BuiltinOutCallExprModel>);
inline void _1aa13ce0b_outlnCall(_1aa13916b_exprDeadCode*, jule::Ptr<_1c62c7e59_BuiltinOutlnCallExprModel>);
inline void _1aa13d1b4_panicCall(_1aa13916b_exprDeadCode*, jule::Ptr<_1c62c870c_BuiltinPanicCallExprModel>);
inline void _1aa13d46c_assertCall(_1aa13916b_exprDeadCode*, jule::Ptr<_1c62c8bb3_BuiltinAssertCallExprModel>);
inline void _1aa13d725_errorCall(_1aa13916b_exprDeadCode*, jule::Ptr<_1c62ca7b9_BuiltinErrorCallExprModel>);
inline void _1aa13d9cd_makeCall(_1aa13916b_exprDeadCode*, jule::Ptr<_1c62c9169_BuiltinMakeCallExprModel>);
inline void _1c66351ea_appendCall(_1aa13916b_exprDeadCode*, jule::Ptr<_1c62c9543_BuiltinAppendCallExprModel>);
inline void _1c66353a4_lenCall(_1aa13916b_exprDeadCode*, jule::Ptr<_1c62c9840_BuiltinLenCallExprModel>);
inline void _1c663574a_capCall(_1aa13916b_exprDeadCode*, jule::Ptr<_1c62c9b3c_BuiltinCapCallExprModel>);
inline void _1c6635a03_deleteCall(_1aa13916b_exprDeadCode*, jule::Ptr<_1c62ca016_BuiltinDeleteCallExprModel>);
inline void _1c6635cab_sizeof(_1aa13916b_exprDeadCode*, jule::Ptr<_1c62c6375_SizeofExprModel>);
inline void _1c6636064_alignof(_1aa13916b_exprDeadCode*, jule::Ptr<_1c62caee5_AlignofExprModel>);
inline void _1c663631c_integratedToStr(_1aa13916b_exprDeadCode*, jule::Ptr<_1c62cb5de_IntegratedToStrExprModel>);
inline void _1c66365c5_free(_1aa13916b_exprDeadCode*, jule::Ptr<_1c62cbcb5_FreeExprModel>);
inline void _1c663687d_backendEmit(_1aa13916b_exprDeadCode*, jule::Ptr<_1c62cb9b8_BackendEmitExprModel>);
inline void _1c6636b36_optimize(_1aa13916b_exprDeadCode*, jule::Any*);
inline jule::Ptr<_1c651e2e3_scopeOptimizer> static__1c651e832_new(jule::Ptr<_1c6320754_Scope>);
inline void _1c651eada_setCurrentStmt(_1c651e2e3_scopeOptimizer*, jule::Any);
inline void _1c651ecd8_removeCurrent(_1c651e2e3_scopeOptimizer*);
inline void _1c6520091_optimizeData(_1c651e2e3_scopeOptimizer*, jule::Ptr<_1c63dd35a_Data>);
inline void _1c6520349_optimizeVar(_1c651e2e3_scopeOptimizer*, jule::Ptr<_1c6389da6_Var>);
inline void _1c6520602_optimizeConditional(_1c651e2e3_scopeOptimizer*, jule::Ptr<_1c632138c_Conditional>);
inline void _1c6520a20_buildDefaultConstantTrueCase(_1c651e2e3_scopeOptimizer*, jule::Ptr<_1c63254c3_Case>, jule::I64*, jule::Ptr<_1c632488a_Match>*);
inline void _1c6520cc8_optimizeMatch(_1c651e2e3_scopeOptimizer*, jule::Ptr<_1c632488a_Match>);
inline void _1c6521081_optimizeRangeIter(_1c651e2e3_scopeOptimizer*, jule::Ptr<_1c632258b_RangeIter>);
inline void _1c6521339_optimizeWhileIter(_1c651e2e3_scopeOptimizer*, jule::Ptr<_1c6321b40_WhileIter>);
inline jule::Bool _1c652167a_substr(_1c651e2e3_scopeOptimizer*, jule::Ptr<_1c6323d51_Assign>);
inline jule::Bool _1c65219bb_strAssign(_1c651e2e3_scopeOptimizer*, jule::Ptr<_1c6323d51_Assign>);
inline jule::Bool _1c6521d0c_sliceAssign(_1c651e2e3_scopeOptimizer*, jule::Ptr<_1c6323d51_Assign>);
inline void _1c65220b5_optimizeAssign(_1c651e2e3_scopeOptimizer*, jule::Ptr<_1c6323d51_Assign>);
inline jule::Bool _1c6522406_tryOptimizeSwap(_1c651e2e3_scopeOptimizer*, jule::Ptr<_1c632422a_MultiAssign>*);
inline void _1c65226ae_optimizeMultiAssign(_1c651e2e3_scopeOptimizer*, jule::Ptr<_1c632422a_MultiAssign>);
inline void _1c6522967_optimizeRet(_1c651e2e3_scopeOptimizer*, jule::Ptr<_1c6325e52_RetSt>);
inline void _1c6522c20_optimizeStmt(_1c651e2e3_scopeOptimizer*, jule::Any);
inline void _1c6522ec8_optimizeChild(_1c651e2e3_scopeOptimizer*, jule::Ptr<_1c6320754_Scope>);
inline void _1c65231c6_optimize(_1c651e2e3_scopeOptimizer*);
inline void static__1c6525a25_optimize(jule::Any*);
inline jule::Bool _1c6525d66_strCond(_1c65254c5_exprOptimizer*, jule::Ptr<_1c62c1ea8_BinopExprModel>);
inline void _1c652611e_binary(_1c65254c5_exprOptimizer*, jule::Ptr<_1c62c1ea8_BinopExprModel>);
inline void _1c65263c7_unary(_1c65254c5_exprOptimizer*, jule::Ptr<_1c62c2382_UnaryExprModel>);
inline void _1c6526680_structureLit(_1c65254c5_exprOptimizer*, jule::Ptr<_1c62c2c56_StructLitExprModel>);
inline void _1c6526938_allocStructure(_1c65254c5_exprOptimizer*, jule::Ptr<_1c62c3053_AllocStructLitExprModel>);
inline void _1c6526be1_casting(_1c65254c5_exprOptimizer*, jule::Ptr<_1c62c35d6_CastingExprModel>);
inline void _1c6526e99_args(_1c65254c5_exprOptimizer*, jule::Slice<jule::Any>*);
inline void _1c6527252_scope(_1c65254c5_exprOptimizer*, jule::Ptr<_1c6320754_Scope>*);
inline jule::Bool _1c6527593_optimizeSpecialFuncCalls(_1c65254c5_exprOptimizer*, jule::Ptr<_1c62c3e88_FnCallExprModel>*);
inline void _1c652784b_funcCall(_1c65254c5_exprOptimizer*, jule::Ptr<_1c62c3e88_FnCallExprModel>);
inline void _1c6527b04_slice(_1c65254c5_exprOptimizer*, jule::Ptr<_1c62c4362_SliceExprModel>);
inline void _1c6527dac_array(_1c65254c5_exprOptimizer*, jule::Ptr<_1c62c73a9_ArrayExprModel>);
inline void _1c6528165_indexing(_1c65254c5_exprOptimizer*, jule::Ptr<_1c62c4818_IndexingExprModel>);
inline void _1c652841d_anonFunc(_1c65254c5_exprOptimizer*, jule::Ptr<_1c62c4be2_AnonFnExprModel>);
inline void _1c65286c6_mapExpr(_1c65254c5_exprOptimizer*, jule::Ptr<_1c62c5572_MapExprModel>);
inline void _1c652897e_slicing(_1c65254c5_exprOptimizer*, jule::Ptr<_1c62c5b05_SlicingExprModel>);
inline void _1c6528c37_traitSub(_1c65254c5_exprOptimizer*, jule::Ptr<_1c62c6188_TraitSubIdentExprModel>);
inline void _1c6528ee0_structureSub(_1c65254c5_exprOptimizer*, jule::Ptr<_1c62c6a29_StructSubIdentExprModel>);
inline void _1c6529298_tuple(_1c65254c5_exprOptimizer*, jule::Ptr<_1c62c76a6_TupleExprModel>);
inline void _1c6529551_newCall(_1c65254c5_exprOptimizer*, jule::Ptr<_1c62c8333_BuiltinNewCallExprModel>);
inline void _1c6529809_outCall(_1c65254c5_exprOptimizer*, jule::Ptr<_1c62c7a80_BuiltinOutCallExprModel>);
inline void _1c6529ab2_outlnCall(_1c65254c5_exprOptimizer*, jule::Ptr<_1c62c7e59_BuiltinOutlnCallExprModel>);
inline void _1c6529d6a_panicCall(_1c65254c5_exprOptimizer*, jule::Ptr<_1c62c870c_BuiltinPanicCallExprModel>);
inline void _1c652a123_assertCall(_1c65254c5_exprOptimizer*, jule::Ptr<_1c62c8bb3_BuiltinAssertCallExprModel>);
inline void _1c652a3cb_errorCall(_1c65254c5_exprOptimizer*, jule::Ptr<_1c62ca7b9_BuiltinErrorCallExprModel>);
inline void _1c652a684_makeCall(_1c65254c5_exprOptimizer*, jule::Ptr<_1c62c9169_BuiltinMakeCallExprModel>);
inline void _1c652a93c_appendCall(_1c65254c5_exprOptimizer*, jule::Ptr<_1c62c9543_BuiltinAppendCallExprModel>);
inline void _1c652abe5_lenCall(_1c65254c5_exprOptimizer*, jule::Ptr<_1c62c9840_BuiltinLenCallExprModel>);
inline void _1c652ae9d_capCall(_1c65254c5_exprOptimizer*, jule::Ptr<_1c62c9b3c_BuiltinCapCallExprModel>);
inline void _1c652b256_deleteCall(_1c65254c5_exprOptimizer*, jule::Ptr<_1c62ca016_BuiltinDeleteCallExprModel>);
inline void _1c652b50e_sizeof(_1c65254c5_exprOptimizer*, jule::Ptr<_1c62c6375_SizeofExprModel>);
inline void _1c652b7b7_alignof(_1c65254c5_exprOptimizer*, jule::Ptr<_1c62caee5_AlignofExprModel>);
inline void _1c652ba70_integratedToStr(_1c65254c5_exprOptimizer*, jule::Ptr<_1c62cb5de_IntegratedToStrExprModel>);
inline void _1c652bd28_free(_1c65254c5_exprOptimizer*, jule::Ptr<_1c62cbcb5_FreeExprModel>);
inline void _1c652c0d1_backendEmit(_1c65254c5_exprOptimizer*, jule::Ptr<_1c62cb9b8_BackendEmitExprModel>);
inline void _1c652c2ce_do(_1c65254c5_exprOptimizer*);
inline jule::Ptr<_1c6637b37_Optimizer> static__1c6638077_New(jule::Ptr<_1a9ed6249_IR>*);
inline void _1c6638330_optimizeGlobal(_1c6637b37_Optimizer*, jule::Ptr<_1c6389da6_Var>*);
inline void _1c66385d8_optimizeFunction(_1c6637b37_Optimizer*, jule::Ptr<_1c62cebec_Fn>*);
inline void _1c6638891_optimizeStruct(_1c6637b37_Optimizer*, jule::Ptr<_1c62b9d3b_Struct>*);
inline void _1c6638b49_optimizeGlobals(_1c6637b37_Optimizer*, jule::Ptr<_1c6349915_Package>*);
inline void _1c6638e02_optimizeFunctions(_1c6637b37_Optimizer*, jule::Ptr<_1c6349915_Package>*);
inline void _1c66391aa_optimizeStructs(_1c6637b37_Optimizer*, jule::Ptr<_1c6349915_Package>*);
inline void _1c6639463_optimizePackage(_1c6637b37_Optimizer*, jule::Ptr<_1c6349915_Package>*);
inline void _1c6639661_Optimize(_1c6637b37_Optimizer*);
inline void static__1c665e7da_Reset(void);
inline void static__1c6639c7c_Print(jule::Str, jule::Str);
inline void static__1c66622e3_LogFlat(_221968cb9_Log*);
inline void static__1c6662524_LogError(_221968cb9_Log*);
inline void static__1c6662755_Log(_221968cb9_Log*);
inline void static__1c6662986_PrintLogs(jule::Slice<_221968cb9_Log>*);
inline _1aaa9a280_Time static__1aaa9a637_Unix(jule::U64);
inline _1aaa9a280_Time static__1aaa9a846_Now(void);
inline _1aaa99aa9_AbsTime _1aaa9c02e_Abs(_1aaa9a280_Time*);
inline jule::Ptr<_1aa9c4e9b_scopeCoder> static__1aa9c55b7_new(jule::Ptr<_1aaaa472e_ObjectCoder>*);
inline void _1adb941bc_iterHead(jule::Ptr<_1aa9c4e9b_scopeCoder>, jule::Ptr<_1c632258b_RangeIter>*, jule::Bool*, jule::Str*);
inline void _1aa9c5c8d_rangeIndexIter(jule::Ptr<_1aa9c4e9b_scopeCoder>, jule::Ptr<_1c632258b_RangeIter>*);
inline void _1aa9c6046_rangeHashmapIter(jule::Ptr<_1aa9c4e9b_scopeCoder>, jule::Ptr<_1c632258b_RangeIter>*);
inline void _1aa9c62ee_ifCase(jule::Ptr<_1aa9c4e9b_scopeCoder>, jule::Ptr<_1c6320b72_If>);
inline void _1aa9c65a7_conditional(jule::Ptr<_1aa9c4e9b_scopeCoder>, jule::Ptr<_1c632138c_Conditional>);
inline void _1aa9c6860_infIter(jule::Ptr<_1aa9c4e9b_scopeCoder>, jule::Ptr<_1c6321689_InfIter>);
inline void _1aa9c6b18_whileIter(jule::Ptr<_1aa9c4e9b_scopeCoder>, jule::Ptr<_1c6321b40_WhileIter>);
inline void _1aa9c6dc1_rangeIter(jule::Ptr<_1aa9c4e9b_scopeCoder>, jule::Ptr<_1c632258b_RangeIter>);
inline void _1aa9c7179_cont(jule::Ptr<_1aa9c4e9b_scopeCoder>, jule::Ptr<_1c6322921_ContSt>);
inline void _1aa9c7432_label(jule::Ptr<_1aa9c4e9b_scopeCoder>, jule::Ptr<_1c63230e7_Label>);
inline void _1aa9c76da_gotoSt(jule::Ptr<_1aa9c4e9b_scopeCoder>, jule::Ptr<_1c63234c1_GotoSt>);
inline void _1aa9c7993_postfix(jule::Ptr<_1aa9c4e9b_scopeCoder>, jule::Ptr<_1c632389a_Postfix>);
inline void _1aa9c7c4b_assign(jule::Ptr<_1aa9c4e9b_scopeCoder>, jule::Ptr<_1c6323d51_Assign>);
inline void _1aa9c8004_mapLookupAssign(jule::Ptr<_1aa9c4e9b_scopeCoder>, jule::Ptr<_1c632422a_MultiAssign>*);
inline void _1aa9c82ac_multiAssignTup(jule::Ptr<_1aa9c4e9b_scopeCoder>, jule::Ptr<_1c632422a_MultiAssign>*);
inline void _1aa9c8565_multiAssignFn(jule::Ptr<_1aa9c4e9b_scopeCoder>, jule::Ptr<_1c632422a_MultiAssign>*);
inline void _1aa9c881d_multiAssign(jule::Ptr<_1aa9c4e9b_scopeCoder>, jule::Ptr<_1c632422a_MultiAssign>);
inline jule::Fn<void(void)> _1aa9c8b5e_matchExpr(jule::Ptr<_1aa9c4e9b_scopeCoder>, jule::Ptr<_1c632488a_Match>);
inline void _1aa9c8ec2_case(jule::Ptr<_1aa9c4e9b_scopeCoder>, jule::Ptr<_1c632488a_Match>, jule::Ptr<_1c63254c3_Case>);
inline void _1aa9c927a_matchSt(jule::Ptr<_1aa9c4e9b_scopeCoder>, jule::Ptr<_1c632488a_Match>);
inline void _1aa9c9533_fallSt(jule::Ptr<_1aa9c4e9b_scopeCoder>, jule::Ptr<_1c6325abc_FallSt>);
inline void _1aa9c97db_breakSt(jule::Ptr<_1aa9c4e9b_scopeCoder>, jule::Ptr<_1c6322cea_BreakSt>);
inline void _1aa9c9a94_setResult(jule::Ptr<_1aa9c4e9b_scopeCoder>, jule::Ptr<_1c6325e52_RetSt>);
inline void _1aa9c9d4c_retSt(jule::Ptr<_1aa9c4e9b_scopeCoder>, jule::Ptr<_1c6325e52_RetSt>);
inline void _1aa9ca105_var(jule::Ptr<_1aa9c4e9b_scopeCoder>, jule::Ptr<_1c6389da6_Var>);
inline void _1aa9ca3ad_mutSlicing(jule::Ptr<_1aa9c4e9b_scopeCoder>, jule::Ptr<_1c651be4a_MutSlicingExprModel>);
inline void _1aa9ca666_swap(jule::Ptr<_1aa9c4e9b_scopeCoder>, jule::Ptr<_1c651ab6e_SwapExprModel>);
inline void _1aa9ca91e_st(jule::Ptr<_1aa9c4e9b_scopeCoder>, jule::Any);
inline void _1aa9cabc7_scopeStmts(jule::Ptr<_1aa9c4e9b_scopeCoder>, jule::Ptr<_1c6320754_Scope>*);
inline void _1aa9cae80_scope(jule::Ptr<_1aa9c4e9b_scopeCoder>, jule::Ptr<_1c6320754_Scope>);
inline void _1aa9cb238_funcScope(jule::Ptr<_1aa9c4e9b_scopeCoder>, jule::Ptr<_1c62d2b01_FnIns>);
inline jule::Ptr<_1aa9ce1b4_exprCoder> static__1aa9ce57c_new(jule::Ptr<_1aaaa472e_ObjectCoder>*);
inline void _1aa9ce835_string(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1dc260590_Const>*);
inline void _1aa9ceadd_boolean(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Bool);
inline void _1aa9cecdb_nilLit(jule::Ptr<_1aa9ce1b4_exprCoder>);
inline jule::Bool _1aa9d012c_ftoaSpecialCases(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::F64*);
inline void _1aa9d03d5_float32(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1dc260590_Const>*);
inline void _1aa9d068d_float64(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1dc260590_Const>*);
inline void _1aa9d0946_constant(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1dc260590_Const>);
inline void _1aa9d0d64_divByZeroBinary(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c6283a3b_Token>*, jule::Ptr<_1c62c19ad_OperandExprModel>*, jule::Ptr<_1c62c19ad_OperandExprModel>*);
inline void _1aa9d111c_unsafeBinary(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62c1ea8_BinopExprModel>);
inline void _1aa9d13c5_binary(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62c1ea8_BinopExprModel>);
inline void _1aa9d167d_var(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c6389da6_Var>);
inline void _1aa9d1936_structureIns(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62bcab9_StructIns>);
inline void _1aa9d1bde_unary(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62c2382_UnaryExprModel>);
inline void _1aa9d1e97_structureLit(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62c2c56_StructLitExprModel>);
inline void _1aa9d2250_allocStructure(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62c3053_AllocStructLitExprModel>);
inline void _1aa9d2508_possibleRefExpr(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Any);
inline void _1aa9d2926_castTraitFromTrait(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62c35d6_CastingExprModel>*, jule::Ptr<_1c62e2e96_Trait>, jule::Ptr<_1c62e2e96_Trait>);
inline void _1aa9d2bce_casting(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62c35d6_CastingExprModel>);
inline void _1aa9d2e87_models(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Slice<jule::Any>);
inline void _1aa9d3240_args(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62c3e88_FnCallExprModel>*);
inline void _1aa9d34e8_modelForCall(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Any);
inline void _1aa9d37a1_pushCallInf(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62c3e88_FnCallExprModel>*);
inline jule::Bool _1aa9d3ae2_isWrapped(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62c3e88_FnCallExprModel>*);
inline void _1aa9d3d9a_pureFuncCall(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62c3e88_FnCallExprModel>*);
inline void _1aa9d4153_coFuncCall(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62c3e88_FnCallExprModel>*);
inline void _1aa9d44b6_writeUseExpr(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62d2b01_FnIns>*, jule::Ptr<_1c63dd35a_Data>);
inline void _1aa9d476e_funcCall(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62c3e88_FnCallExprModel>);
inline void _1aa9d4a27_slice(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62c4362_SliceExprModel>);
inline void _1aa9d4cd0_indexing(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62c4818_IndexingExprModel>);
inline void _1aa9d5088_unsafeIndexing(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c651c544_UnsafeIndexingExprModel>);
inline void _1aa9d5341_anonFunc(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62c4be2_AnonFnExprModel>);
inline void _1aa9d55e9_mapExpr(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62c5572_MapExprModel>);
inline void _1aa9d58a2_slicing(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62c5b05_SlicingExprModel>);
inline void _1aa9d5b5a_traitSub(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62c6188_TraitSubIdentExprModel>);
inline void _1aa9d5e13_structureSub(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62c6a29_StructSubIdentExprModel>);
inline void _1aa9d61bb_array(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62c73a9_ArrayExprModel>);
inline void _1aa9d6474_funcInsCommon(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62d2b01_FnIns>);
inline void _1aa9d672c_funcIns(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62d2b01_FnIns>);
inline void _1aa9d69d5_tuple(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62c76a6_TupleExprModel>);
inline void _1aa9d6c8d_newCall(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62c8333_BuiltinNewCallExprModel>);
inline void _1aa9d7046_outCall(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62c7a80_BuiltinOutCallExprModel>);
inline void _1aa9d72ee_outlnCall(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62c7e59_BuiltinOutlnCallExprModel>);
inline void _1aa9d75a7_panicCall(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62c870c_BuiltinPanicCallExprModel>);
inline void _1aa9d7860_assertCall(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62c8bb3_BuiltinAssertCallExprModel>);
inline void _1aa9d7b18_errorCall(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62ca7b9_BuiltinErrorCallExprModel>);
inline void _1aa9d7dc1_copyCall(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62ca3e0_BuiltinCopyCallExprModel>);
inline void _1aa9d8179_lenCall(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62c9840_BuiltinLenCallExprModel>);
inline void _1aa9d8432_capCall(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62c9b3c_BuiltinCapCallExprModel>);
inline void _1aa9d86da_deleteCall(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62ca016_BuiltinDeleteCallExprModel>);
inline void _1aa9d8993_makeCallSlice(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62c9169_BuiltinMakeCallExprModel>*);
inline void _1aa9d8c4b_makeCallStr(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62c9169_BuiltinMakeCallExprModel>*);
inline void _1aa9d9004_makeCall(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62c9169_BuiltinMakeCallExprModel>);
inline void _1aa9d92ac_pushToSlice(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c651c973_PushToSliceExprModel>);
inline void _1aa9d9565_appendToSlice(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c651cd4c_AppendToSliceExprModel>);
inline void _1aa9d981d_appendCall(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62c9543_BuiltinAppendCallExprModel>);
inline void _1aa9d9ac6_sizeof(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62c6375_SizeofExprModel>);
inline void _1aa9d9d7e_alignof(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62caee5_AlignofExprModel>);
inline void _1aa9da137_runeLit(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62cb2e2_RuneExprModel>);
inline void _1aa9da3e0_structureStatic(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62c6ed0_StructStaticIdentExprModel>);
inline void _1aa9da698_integratedToStr(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62cb5de_IntegratedToStrExprModel>);
inline void _1aa9da951_backendEmit(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62cb9b8_BackendEmitExprModel>);
inline void _1aa9dac09_free(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c62cbcb5_FreeExprModel>);
inline void _1aa9daeb2_strComp(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c651b8b7_StrCompExprModel>);
inline void _1aa9db26a_inlineStdInternalNosafeStobs(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c651d149_InlineStdInternalNosafeStobs>);
inline void _1aa9db523_emptyCompare(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c651b08c_EmptyCompareExprModel>);
inline void _1aa9db7cb_model(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Any);
inline void _1aa9dba84_initExpr(jule::Ptr<_1aa9ce1b4_exprCoder>, jule::Ptr<_1c641d522_TypeKind>);
inline jule::Ptr<_1aa9deaed_TestCoder> static__1aa9e003d_New(jule::Ptr<_1aaaa472e_ObjectCoder>*);
inline jule::Ptr<_1c63469de_ImportInfo> _1aa9e02c4_findTestingPackage(jule::Ptr<_1aa9deaed_TestCoder>);
inline void _1aa9e057c_appendTest(jule::Ptr<_1aa9deaed_TestCoder>, jule::Ptr<_1c62d2b01_FnIns>);
inline void _1aa9e0835_appendPackageTests(jule::Ptr<_1aa9deaed_TestCoder>, jule::Ptr<_1c6349915_Package>*);
inline jule::Bool _1aa9e0abb_readyTestingPackage(jule::Ptr<_1aa9deaed_TestCoder>);
inline void _1aa9e0cb9_callTmReset(jule::Ptr<_1aa9deaed_TestCoder>);
inline void _1aa9e0eb7_callTmFailed(jule::Ptr<_1aa9deaed_TestCoder>);
inline void _1aa9e11b5_callTmSkipped(jule::Ptr<_1aa9deaed_TestCoder>);
inline void _1aa9e13b3_Serialize(jule::Ptr<_1aa9deaed_TestCoder>);
inline void static__1aa9e2d10_writeIdentTo(_2206c697e_StrBuilder*, jule::Str*);
inline jule::Str static__1aa9e3184_toOut(jule::Str*, jule::Uintptr);
inline jule::Str static__1aa9e35b3_toLocal(jule::I64, jule::I64, jule::Str*);
inline jule::Str static__1aa9e387c_func(jule::Ptr<_1c62cebec_Fn>*);
inline jule::Str static__1aa9e3b46_funcIns(jule::Ptr<_1c62d2b01_FnIns>*);
inline jule::Str static__1aa9e3e10_traitDecl(jule::Ptr<_1c62e2e96_Trait>);
inline jule::Str static__1aa9e41c9_param(jule::Ptr<_1c62cd228_Param>*);
inline jule::Str static__1aa9e4493_structure(jule::Ptr<_1c62b9d3b_Struct>*);
inline jule::Str static__1aa9e475c_structureIns(jule::Ptr<_1c62bcab9_StructIns>*);
inline jule::Str static__1aa9e4a26_field(jule::Ptr<_1c62b6e48_Field>*);
inline jule::Str static__1aa9e4ce0_var(jule::Ptr<_1c6389da6_Var>);
inline jule::Str static__1aa9e50a9_iterBegin(jule::Uintptr);
inline jule::Str static__1aa9e5373_iterEnd(jule::Uintptr);
inline jule::Str static__1aa9e563c_iterNext(jule::Uintptr);
inline jule::Str static__1aa9e5906_label(jule::Uintptr);
inline jule::Str static__1aa9e5bc0_matchEnd(jule::Uintptr);
inline jule::Str static__1aa9e5e89_caseBegin(jule::Uintptr);
inline jule::Str _1aaab8ac8_Str(_1aaab8743_customType*);
inline jule::Bool _1aaab8e19_Equal(jule::Ptr<_1aaab8743_customType>, jule::Ptr<_1c641d522_TypeKind>);
inline jule::Ptr<_1aaab9348_typeCoder> static__1aaab9887_new(jule::Ptr<_1aaaa472e_ObjectCoder>*);
inline jule::Str _1aaab9bc8_toType(_1aaab9348_typeCoder*, jule::Str);
inline jule::Str _1aaaba019_prim(_1aaab9348_typeCoder*, jule::Ptr<_1c64260eb_Prim>);
inline jule::Str _1aaaba35a_tuple(_1aaab9348_typeCoder*, jule::Ptr<_1c642b1de_Tuple>);
inline jule::Str _1aaaba69b_asSptr(_1aaab9348_typeCoder*, jule::Str);
inline jule::Str _1aaaba9dc_sptr(_1aaab9348_typeCoder*, jule::Ptr<_1c6429b27_Sptr>);
inline jule::Str _1aaabad2d_ptr(_1aaab9348_typeCoder*, jule::Ptr<_1c642d3de_Ptr>);
inline jule::Str _1aaabb16e_enumDecl(_1aaab9348_typeCoder*, jule::Ptr<_1c62e5691_Enum>);
inline jule::Str _1aaabb4b0_typeEnumDecl(_1aaab9348_typeCoder*, jule::Ptr<_1c62e6d9b_TypeEnum>);
inline jule::Str _1aaabb801_asSlice(_1aaab9348_typeCoder*, jule::Ptr<_1c641d522_TypeKind>);
inline jule::Str _1aaabbb42_slice(_1aaab9348_typeCoder*, jule::Ptr<_1c642a5ea_Slc>);
inline jule::Str _1aaabbe83_mapType(_1aaab9348_typeCoder*, jule::Ptr<_1c642bc8e_Map>);
inline jule::Str _1aaabc2c4_traitIdent(_1aaab9348_typeCoder*, jule::Str);
inline jule::Str _1aaabc615_traitDecl(_1aaab9348_typeCoder*, jule::Ptr<_1c62e2e96_Trait>);
inline jule::Str _1aaabc956_structure(_1aaab9348_typeCoder*, jule::Ptr<_1c62b9d3b_Struct>);
inline jule::Str _1aaabcc97_structureIns(_1aaab9348_typeCoder*, jule::Ptr<_1c62bcab9_StructIns>);
inline jule::Str _1aaabd0d8_array(_1aaab9348_typeCoder*, jule::Ptr<_1c642c91b_Arr>);
inline jule::Str _1aaabd76a_paramIns(_1aaab9348_typeCoder*, jule::Ptr<_1c62d1b55_ParamIns>*);
inline void _1aaabde1e_funcInsResult(_1aaab9348_typeCoder*, _2206c697e_StrBuilder*, jule::Ptr<_1c62d2b01_FnIns>*);
inline jule::Str _1aaabe260_anonFunc(_1aaab9348_typeCoder*, jule::Ptr<_1c62d2b01_FnIns>);
inline jule::Str _1aaabe5a1_func(_1aaab9348_typeCoder*, jule::Ptr<_1c62d2b01_FnIns>);
inline jule::Str _1aaabe8e2_kind(_1aaab9348_typeCoder*, jule::Ptr<_1c641d522_TypeKind>);
inline jule::Ptr<_1aaac2120_resultCoder> static__1aaac25e8_new(jule::Ptr<_1aaab9348_typeCoder>*);
inline void _1aaac295b_ptr(_1aaac2120_resultCoder*, _2206c697e_StrBuilder*, jule::Ptr<_1c642d3de_Ptr>);
inline void _1aaac2cbe_sptr(_1aaac2120_resultCoder*, _2206c697e_StrBuilder*, jule::Ptr<_1c6429b27_Sptr>);
inline void _1aaac3132_mapType(_1aaac2120_resultCoder*, _2206c697e_StrBuilder*, jule::Ptr<_1c642bc8e_Map>);
inline void _1aaac3495_slice(_1aaac2120_resultCoder*, _2206c697e_StrBuilder*, jule::Ptr<_1c642a5ea_Slc>);
inline void _1aaac3808_arr(_1aaac2120_resultCoder*, _2206c697e_StrBuilder*, jule::Ptr<_1c642c91b_Arr>);
inline void _1aaac3b6b_func(_1aaac2120_resultCoder*, _2206c697e_StrBuilder*, jule::Ptr<_1c62d2b01_FnIns>);
inline void _1aaac3ece_tup(_1aaac2120_resultCoder*, _2206c697e_StrBuilder*, jule::Ptr<_1c642b1de_Tuple>);
inline void _1aaac4342_codeMut(_1aaac2120_resultCoder*, _2206c697e_StrBuilder*, jule::Ptr<_1c641d522_TypeKind>*);
inline void _1aaac46a5_codeMut1(_1aaac2120_resultCoder*, _2206c697e_StrBuilder*, jule::Ptr<_1c641d522_TypeKind>*);
inline jule::Str _1aaac49b3_code(_1aaac2120_resultCoder*, jule::Ptr<_1c641d522_TypeKind>*);
inline jule::Str _1acbada67_Name(_1acbadc21_Flag*);
inline jule::Str _1acbae00c_What(_1acbadc21_Flag*);
inline void _1acbae150_Reset(_1acbadc21_Flag*);
inline jule::I32 _1acbae293_Short(_1acbadc21_Flag*);
inline jule::Str _1acbb21b9_Name(_1acbb2582_Flag*);
inline jule::Str _1acbb230c_What(_1acbb2582_Flag*);
inline void _1acbb286d_Reset(_1acbb2582_Flag*);
inline jule::I32 _1acbb29b1_Short(_1acbb2582_Flag*);
inline jule::Str _1acbb58b5_Name(_1acbb5c7d_Flag*);
inline jule::Str _1acbb5a08_What(_1acbb5c7d_Flag*);
inline void _1acbb6069_Reset(_1acbb5c7d_Flag*);
inline jule::I32 _1acbb61ac_Short(_1acbb5c7d_Flag*);
inline jule::Str _1acbb9105_Name(_1acbb94bd_Flag*);
inline jule::Str _1acbb9248_What(_1acbb94bd_Flag*);
inline void _1acbb97a9_Reset(_1acbb94bd_Flag*);
inline jule::I32 _1acbb98ec_Short(_1acbb94bd_Flag*);
inline jule::Str _1acbbc801_Name(_1acbbcbb9_Flag*);
inline jule::Str _1acbbc944_What(_1acbbcbb9_Flag*);
inline void _1acbbcea5_Reset(_1acbbcbb9_Flag*);
inline jule::I32 _1acbbd0e8_Short(_1acbbcbb9_Flag*);
inline jule::Ptr<_1aab3d961_FlagSet> static__1aab3dc4c_New(void);
inline jule::Trait<_1aab3bdb0_CommonFlag> _1aab3e1c0_FindFlag(_1aab3d961_FlagSet*, jule::Str);
inline jule::Trait<_1aab3bdb0_CommonFlag> _1aab3e511_FindFlagShort(_1aab3d961_FlagSet*, jule::I32);
inline jule::Exceptional<jule::Slice<jule::Str>> _1aab3ead8_Parse(_1aab3d961_FlagSet*, jule::Slice<jule::Str>);
inline jule::Ptr<_1acbbcbb9_Flag> _1acc3a297_addFlagCommon(_1aab3d961_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1acbb94bd_Flag> _1acc438aa_addFlagCommon(_1aab3d961_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1acc3821d_AddVar(_1aab3d961_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1acc41875_AddVar(_1aab3d961_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
inline __jule_tuple_i64__jule_tuple_bool _1acbd0b66_parseInteger(_1aab413e2_argParser*, jule::Str*, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>);
inline __jule_tuple_u64__jule_tuple_bool _1acbd8520_parseInteger(_1aab413e2_argParser*, jule::Str*, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>);
inline jule::Str _1aab41c0b_getData(_1aab413e2_argParser*);
inline jule::VoidExceptional _1aab41e81_processFlag(_1aab413e2_argParser*, jule::Trait<_1aab3bdb0_CommonFlag>*);
inline jule::VoidExceptional _1aab42239_singleDash(_1aab413e2_argParser*, jule::Str*);
inline jule::VoidExceptional _1aab424e2_doubleDash(_1aab413e2_argParser*, jule::Str*);
inline jule::VoidExceptional _1aab426e0_tryArg(_1aab413e2_argParser*);
inline jule::VoidExceptional _1aab428dd_parse(_1aab413e2_argParser*);
inline jule::Ptr<_1aaaa472e_ObjectCoder> static__1aaaa4b2a_New(jule::Ptr<_1a9ed6249_IR>*, _1aaaa2c16_SerializationInfo);
inline void _1aaaa4dd3_write(jule::Ptr<_1aaaa472e_ObjectCoder>, jule::Str);
inline void _1aaaa50d1_addIndent(jule::Ptr<_1aaaa472e_ObjectCoder>);
inline void _1aaaa52ce_doneIndent(jule::Ptr<_1aaaa472e_ObjectCoder>);
inline void _1aaaa54cc_indent(jule::Ptr<_1aaaa472e_ObjectCoder>);
inline jule::I64 _1aaaa581d_findAnyType(jule::Ptr<_1aaaa472e_ObjectCoder>, jule::Ptr<_1c641d522_TypeKind>*);
inline jule::I64 _1aaaa5b5e_pushAnyType(jule::Ptr<_1aaaa472e_ObjectCoder>, jule::Ptr<_1c641d522_TypeKind>);
inline void _1aaaa5e17_pushResultIns(jule::Ptr<_1aaaa472e_ObjectCoder>, jule::Ptr<_1c62d2b01_FnIns>*);
inline void _1aaaa61c0_pushResult(jule::Ptr<_1aaaa472e_ObjectCoder>, jule::Ptr<_1c62cebec_Fn>*);
inline jule::I64 _1aaaa65bb_findTypeOffsetS(_1aaaa472e_ObjectCoder*, jule::Ptr<_1c62e2e96_Trait>, jule::Ptr<_1c62bcab9_StructIns>);
inline jule::I64 _1aaaa69b7_findTypeOffset(_1aaaa472e_ObjectCoder*, jule::Ptr<_1c62e2e96_Trait>, jule::Ptr<_1c641d522_TypeKind>);
inline void _1aaaa6d2a_pushAndWriteMaskMapper(jule::Ptr<_1aaaa472e_ObjectCoder>, jule::Ptr<_1c62e2e96_Trait>, jule::Ptr<_1c62e2e96_Trait>);
inline void _1aaaa70d3_locInfo(jule::Ptr<_1aaaa472e_ObjectCoder>, jule::Ptr<_1c6283a3b_Token>*);
inline void _1aaaa72d1_head(jule::Ptr<_1aaaa472e_ObjectCoder>);
inline void _1aaaa74ce_links(jule::Ptr<_1aaaa472e_ObjectCoder>);
inline void _1aaaa7787_prepareStructure(_1aaaa472e_ObjectCoder*, jule::Ptr<_1c62b9d3b_Struct>*);
inline void _1aaaa7985_prepareStructures(jule::Ptr<_1aaaa472e_ObjectCoder>);
inline void _1aaaa7c3d_iterPackages(jule::Ptr<_1aaaa472e_ObjectCoder>, jule::Fn<void(jule::Ptr<_1c6349915_Package>*)>);
inline void _1aaaa7e3b_buildTraitMap(jule::Ptr<_1aaaa472e_ObjectCoder>);
inline void _1aaaa8139_traitDecls(jule::Ptr<_1aaaa472e_ObjectCoder>);
inline void _1aaaa83e2_structurePlainDecl(jule::Ptr<_1aaaa472e_ObjectCoder>, jule::Ptr<_1c62b9d3b_Struct>*);
inline void _1aaaa85e0_structurePlainDecls(jule::Ptr<_1aaaa472e_ObjectCoder>);
inline void _1aaaa8898_fieldDecl(jule::Ptr<_1aaaa472e_ObjectCoder>, jule::Ptr<_1c62bc019_FieldIns>*);
inline void _1aaaa8b51_structureDestructor(jule::Ptr<_1aaaa472e_ObjectCoder>, jule::Ptr<_1c62bcab9_StructIns>*);
inline void _1aaaa8eb4_structureOperatorEq(jule::Ptr<_1aaaa472e_ObjectCoder>, jule::Str*, jule::Ptr<_1c62bcab9_StructIns>*);
inline void _1aaaa9327_structureOperatorNotEq(jule::Ptr<_1aaaa472e_ObjectCoder>, jule::Str*, jule::Ptr<_1c62bcab9_StructIns>*);
inline void _1aaaa9745_structureOperator(jule::Ptr<_1aaaa472e_ObjectCoder>, jule::Str*, jule::Ptr<_1c62d2b01_FnIns>*, jule::Str);
inline void _1aaaa99ed_structureOperators(jule::Ptr<_1aaaa472e_ObjectCoder>, jule::Ptr<_1c62bcab9_StructIns>*);
inline void _1aaaa9ca6_structureInsDecl(jule::Ptr<_1aaaa472e_ObjectCoder>, jule::Ptr<_1c62bcab9_StructIns>*);
inline void _1aaaaa05e_structureDecl(jule::Ptr<_1aaaa472e_ObjectCoder>, jule::Ptr<_1c62b9d3b_Struct>*);
inline void _1aaaaa25c_structureDecls(jule::Ptr<_1aaaa472e_ObjectCoder>);
inline void _1aaaaa45a_structureMethodDecls(jule::Ptr<_1aaaa472e_ObjectCoder>);
inline void _1aaaaa713_paramsDecls(jule::Ptr<_1aaaa472e_ObjectCoder>, jule::Slice<jule::Ptr<_1c62d1b55_ParamIns>>*);
inline void _1aaaaaa76_funcHead(jule::Ptr<_1aaaa472e_ObjectCoder>, jule::Ptr<_1c62d2b01_FnIns>*, jule::Bool);
inline void _1aaaaadd9_funcDeclIns(jule::Ptr<_1aaaa472e_ObjectCoder>, jule::Ptr<_1c62d2b01_FnIns>*, jule::Bool);
inline void _1aaaab24c_funcDecl(jule::Ptr<_1aaaa472e_ObjectCoder>, jule::Ptr<_1c62cebec_Fn>*, jule::Bool);
inline void _1aaaab66a_funcDeclTrait(jule::Ptr<_1aaaa472e_ObjectCoder>, jule::Ptr<_1c62e2e96_Trait>*, jule::Ptr<_1c62cebec_Fn>*, jule::Bool);
inline void _1aaaab868_funcDecls(jule::Ptr<_1aaaa472e_ObjectCoder>);
inline void _1aaaabbcb_traitDataTypeMethods(jule::Ptr<_1aaaa472e_ObjectCoder>, jule::Ptr<_1c62e2e96_Trait>*, jule::Ptr<_1c62e2e96_Trait>*);
inline void _1aaaabdc9_traitDataTypes(jule::Ptr<_1aaaa472e_ObjectCoder>);
inline void _1aaaac182_paramIns(jule::Ptr<_1aaaa472e_ObjectCoder>, jule::Ptr<_1c62d1b55_ParamIns>*);
inline void _1aaaac43a_paramsIns(jule::Ptr<_1aaaa472e_ObjectCoder>, jule::Slice<jule::Ptr<_1c62d1b55_ParamIns>>*);
inline void _1aaaac79d_varInitExpr(jule::Ptr<_1aaaa472e_ObjectCoder>, jule::Ptr<_1c6389da6_Var>*, jule::Fn<void(void)>);
inline void _1aaab28b3_var(jule::Ptr<_1aaaa472e_ObjectCoder>, jule::Ptr<_1c6389da6_Var>);
inline void _1aaab2b6b_funcIns(jule::Ptr<_1aaaa472e_ObjectCoder>, jule::Ptr<_1c62d2b01_FnIns>*);
inline void _1aaab2e24_func(jule::Ptr<_1aaaa472e_ObjectCoder>, jule::Ptr<_1c62cebec_Fn>*);
inline void _1aaab3287_funcTrait(jule::Ptr<_1aaaa472e_ObjectCoder>, jule::Ptr<_1aaaa32dd_traitHash>*, jule::Ptr<_1c62cebec_Fn>*);
inline void _1aaab35ea_traitWrapper(jule::Ptr<_1aaaa472e_ObjectCoder>, jule::Ptr<_1c62cebec_Fn>*, jule::Ptr<_1aaaa32dd_traitHash>*);
inline void _1aaab37e8_traitWrappers(jule::Ptr<_1aaaa472e_ObjectCoder>);
inline void _1aaab3b5b_traitDataMethods(jule::Ptr<_1aaaa472e_ObjectCoder>, jule::Ptr<_1c62e2e96_Trait>*, jule::Ptr<_1aaaa32dd_traitHash>*);
inline void _1aaab3ebe_traitData(jule::Ptr<_1aaaa472e_ObjectCoder>, jule::Ptr<_1aaaa32dd_traitHash>*, jule::Ptr<_1c62e2e96_Trait>*);
inline void _1aaab41bc_traitDatas(jule::Ptr<_1aaaa472e_ObjectCoder>);
inline void _1aaab43ba_globals(jule::Ptr<_1aaaa472e_ObjectCoder>);
inline void _1aaab45b8_decls(jule::Ptr<_1aaaa472e_ObjectCoder>);
inline void _1aaab4871_structureMethods(jule::Ptr<_1aaaa472e_ObjectCoder>, jule::Ptr<_1c62bcab9_StructIns>*);
inline void _1aaab4b29_structureOstream(jule::Ptr<_1aaaa472e_ObjectCoder>, jule::Ptr<_1c62bcab9_StructIns>*);
inline void _1aaab4dd2_structureIns(jule::Ptr<_1aaaa472e_ObjectCoder>, jule::Ptr<_1c62bcab9_StructIns>*);
inline void _1aaab518a_structure(jule::Ptr<_1aaaa472e_ObjectCoder>, jule::Ptr<_1c62b9d3b_Struct>*);
inline void _1aaab5388_structures(jule::Ptr<_1aaaa472e_ObjectCoder>);
inline void _1aaab5586_funcs(jule::Ptr<_1aaaa472e_ObjectCoder>);
inline void _1aaab583e_pushInit(jule::Ptr<_1aaaa472e_ObjectCoder>, jule::Ptr<_1c6349915_Package>*);
inline void _1aaab5a3c_initCaller(jule::Ptr<_1aaaa472e_ObjectCoder>);
inline void _1aaab5c3a_end(jule::Ptr<_1aaaa472e_ObjectCoder>);
inline void _1aaab5e38_serializeHead(jule::Ptr<_1aaaa472e_ObjectCoder>);
inline void _1aaab6136_Serialize(jule::Ptr<_1aaaa472e_ObjectCoder>);
inline jule::Ptr<_1aa1279a6_ObjectDeadCode> static__1aa13175c_new(jule::Ptr<_1a9ed6249_IR>*);
inline jule::Bool _1ad8e51d7_isLive(jule::Ptr<_1aa1279a6_ObjectDeadCode>, jule::Ptr<_1c62e2e96_Trait>*);
inline jule::Bool _1ad8eac37_isLive(jule::Ptr<_1aa1279a6_ObjectDeadCode>, jule::Ptr<_1c62d2b01_FnIns>*);
inline jule::Bool _1ad9022c1_isLive(jule::Ptr<_1aa1279a6_ObjectDeadCode>, jule::Ptr<_1c62bcab9_StructIns>*);
inline jule::Bool _1ad909c68_isLive(jule::Ptr<_1aa1279a6_ObjectDeadCode>, jule::Ptr<_1c6389da6_Var>*);
inline void _1ad8e55a0_pushLive(jule::Ptr<_1aa1279a6_ObjectDeadCode>, jule::Ptr<_1c62e2e96_Trait>);
inline void _1ad8eb0bc_pushLive(jule::Ptr<_1aa1279a6_ObjectDeadCode>, jule::Ptr<_1c62d2b01_FnIns>);
inline void _1ad902854_pushLive(jule::Ptr<_1aa1279a6_ObjectDeadCode>, jule::Ptr<_1c62bcab9_StructIns>);
inline void _1ad90a131_pushLive(jule::Ptr<_1aa1279a6_ObjectDeadCode>, jule::Ptr<_1c6389da6_Var>);
inline void _1aa119019_setReferencesAsLive(jule::Ptr<_1aa1279a6_ObjectDeadCode>, jule::Ptr<_1c62d5c9c_ReferenceStack>*);
inline void _1aa1192c2_inits(jule::Ptr<_1aa1279a6_ObjectDeadCode>, jule::Ptr<_1c6349915_Package>*);
inline void _1aa131938_collectLivePackage(jule::Ptr<_1aa1279a6_ObjectDeadCode>, jule::Ptr<_1c6349915_Package>*);
inline void _1aa131b03_collectLive(jule::Ptr<_1aa1279a6_ObjectDeadCode>);
inline void _1aa131dab_removeDeadGlobals(jule::Ptr<_1aa1279a6_ObjectDeadCode>, jule::Slice<jule::Ptr<_1c6389da6_Var>>*);
inline void _1aa132164_removeDeadFns(jule::Ptr<_1aa1279a6_ObjectDeadCode>, jule::Slice<jule::Ptr<_1c62cebec_Fn>>*);
inline void _1aa13241c_removeDeadStructs(jule::Ptr<_1aa1279a6_ObjectDeadCode>, jule::Slice<jule::Ptr<_1c62b9d3b_Struct>>*);
inline void _1aa1326c5_removeDeadTraits(jule::Ptr<_1aa1279a6_ObjectDeadCode>, jule::Slice<jule::Ptr<_1c62e2e96_Trait>>*);
inline void _1aa13297d_removeDeadsFile(jule::Ptr<_1aa1279a6_ObjectDeadCode>, jule::Ptr<_1c63d8135_SymbolTable>*);
inline void _1aa132c36_removeDeadsPackage(jule::Ptr<_1aa1279a6_ObjectDeadCode>, jule::Ptr<_1c6349915_Package>*);
inline void _1aa132e34_removeDeads(jule::Ptr<_1aa1279a6_ObjectDeadCode>);
inline void _1aa133132_elimanate(jule::Ptr<_1aa1279a6_ObjectDeadCode>);
inline __jule_tuple_x_1a9ed6249_IR__jule_tuple_s_221968cb9_Log static__1a9ed66ab_Build(jule::Str, jule::I64);
inline void _1a9ed6b95_appendStructs(_1a9ed6249_IR*, jule::Ptr<_1c6349915_Package>*, jule::Slice<jule::Ptr<_1c62b9d3b_Struct>>*);
inline jule::Slice<jule::Ptr<_1c62b9d3b_Struct>> _1a9ed6e2b_GetAllStructures(_1a9ed6249_IR*);
inline void _1a9ed728e_appendGlobals(_1a9ed6249_IR*, jule::Ptr<_1c6349915_Package>*, jule::Slice<jule::Ptr<_1c6389da6_Var>>*);
inline jule::Slice<jule::Ptr<_1c6389da6_Var>> _1a9ed7525_GetAllGlobals(_1a9ed6249_IR*);
inline void _1a9ed7723_Order(_1a9ed6249_IR*);
inline jule::Str _1c62bce3d_Str(_1c62bcab9_StructIns*);
inline jule::Bool _1c62bd27e_Equal(jule::Ptr<_1c62bcab9_StructIns>, jule::Ptr<_1c641d522_TypeKind>);
inline jule::Bool _1c62bd735_Same(_1c62bcab9_StructIns*, jule::Ptr<_1c62bcab9_StructIns>);
inline jule::Ptr<_1c62cebec_Fn> _1c62bdb31_FindMethod(_1c62bcab9_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_1c62bc019_FieldIns> _1c62bde72_FindField(_1c62bcab9_StructIns*, jule::Str);
inline jule::Ptr<_1c6389da6_Var> _1c62be2b3_FindStatic(_1c62bcab9_StructIns*, jule::Str);
inline jule::Ptr<_221a270ec_Cmd> static__221a2751a_New(jule::Str);
inline jule::VoidExceptional _221a27718_Spawn(_221a270ec_Cmd*);
inline jule::Exceptional<jule::I64> _221a27b9c_Wait(_221a270ec_Cmd*);
inline jule::VoidExceptional _221a2b70b_spawn(_221a270ec_Cmd*);
inline jule::Exceptional<jule::I64> _221a2bb90_wait(_221a270ec_Cmd*);
inline jule::I32 _2204b400d_DecodeRune(jule::I32, jule::I32);
inline __jule_tuple_i32__jule_tuple_i32 _2204b42c7_EncodeRune(jule::I32);
inline jule::Slice<jule::U16> _2204b4618_Encode(jule::Slice<jule::I32>);
inline jule::Slice<jule::I32> _2204b48d2_Decode(jule::Slice<jule::U16>);
inline jule::Slice<jule::U16> _2204b4c23_AppendRune(jule::Slice<jule::U16>, jule::I32);
inline jule::Slice<jule::U16> _2204b4e76_Utf16FromStr(jule::Str);
inline jule::Str _2204b5284_Utf16ToStr(jule::Slice<jule::U16>);
inline jule::Str _2204b554d_U16PtrToStr(jule::U16*);
inline jule::I64 _21e490d54_GetLastErrno(void);
inline jule::Uintptr _2204de18c_GetStdHandle(jule::Uintptr);
inline jule::Bool _2204de456_CloseHandle(jule::Uintptr);
inline jule::I64 _2204de7ca_Wstat(jule::U16*, struct _stat*);
inline jule::I64 _2204dec09_Wopen(jule::U16*, jule::I64, jule::I64);
inline jule::U32 _2204dee18_GetLastError(void);
inline jule::U32 _2204e028c_GetCurrentDirectory(jule::U32, jule::U16*);
inline jule::Bool _2204e0820_DeleteFile(jule::U16*);
inline jule::Bool _2204e0ad9_CreateDirectory(jule::U16*);
inline jule::Bool _2204e0da3_RemoveDirectory(jule::U16*);
inline jule::U32 _2204e138c_GetFullPathName(jule::U16*, jule::U32, jule::U16*, jule::U16**);
inline jule::Bool _2204e1711_GetConsoleMode(jule::Uintptr, jule::I64*);
inline jule::Bool _2204e1cd8_SetConsoleMode(jule::Uintptr, jule::I64);
inline jule::Bool _2204e236b_WriteConsole(jule::Uintptr, jule::U16*, jule::I64, jule::I64*, void*);
inline jule::Bool _2204e2855_ReadConsole(jule::Uintptr, jule::U16*, jule::I64, jule::I64*);
inline jule::Uintptr _2204e2dd8_FindFirstFile(jule::U16*, WIN32_FIND_DATAW*);
inline jule::I64 _2204e325c_FindNextFile(jule::Uintptr, WIN32_FIND_DATAW*);
inline jule::I64 _2204e3526_FindClose(jule::Uintptr);
inline jule::I64 _2204e5638_Read(jule::I64, void*, jule::U64);
inline jule::I64 _2204e59ce_Close(jule::I64);
inline jule::I64 _2204e5e0d_Write(jule::I64, void*, jule::U64);
inline void _2204e613e_Exit(jule::I64);
inline jule::Slice<jule::U8> _22050c4b8_Stobs(jule::Str*);
inline __jule_tuple_i32__jule_tuple_int _22061dc39_DecodeRune(jule::Slice<jule::U8>);
inline __jule_tuple_i32__jule_tuple_int _22061e344_DecodeLastRune(jule::Slice<jule::U8>);
inline jule::I64 _22061e8c7_RuneLen(jule::I32);
inline jule::I64 _22061ed28_EncodeRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _22062019c_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _220620521_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _220620aa4_RuneCountStr(jule::Str);
inline jule::Bool _220620d6d_RuneStart(jule::U8);
inline jule::I64 _22070c399_getLastOsErrorWindows(void);
inline jule::Slice<jule::Str> _22070d433_Args(void);
inline jule::Exceptional<jule::Str> _22070d8c8_WorkingDir(void);
inline jule::Exceptional<jule::Str> _22070e80d_getwd(void);
inline jule::Bool _221810a84_IsLetter(jule::I32);
inline jule::Bool _22187d4a3_is16(jule::Slice<_22187b715_Range16>, jule::U16);
inline jule::Bool _22187d827_is32(jule::Slice<_22187bc43_Range32>, jule::U32);
inline jule::Bool _22187e130_isExcludingLatin(jule::Ptr<_22187c1e9_RangeTable>, jule::I32);
inline jule::Bool _22187e3e9_IsUpper(jule::I32);
inline jule::I64 _2218a9402_FindByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _2218bb8a9_FindLastByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _2218bbc61_FindByteStr(jule::Str*, jule::U8);
inline jule::I64 _2218bc0d5_FindLastByteStr(jule::Str*, jule::U8);
inline jule::Str _2218bc547_Repeat(jule::Str, jule::I64);
inline jule::Bool _2218bc9ba_hasPrefix(jule::Str*, jule::Str*, jule::I64);
inline jule::Bool _2218bcd3e_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _2218bd2e5_hasSuffix(jule::Str*, jule::Str*, jule::I64);
inline jule::Bool _2218bd636_HasSuffix(jule::Str, jule::Str);
inline jule::I64 _2218bda65_FindAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _2218be428_FindLastAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _2218be79c_FindLast(jule::Str, jule::Str);
inline jule::I64 _2218c0b77_findRune(jule::Slice<jule::U8>*, jule::I32);
inline jule::I64 _2218c1529_FindLastByte(jule::Str, jule::U8);
inline jule::I64 _2218c241a_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _2218c2bbd_Split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _2218c3042_Contains(jule::Str, jule::Str);
inline jule::Bool _2218c3aae_ContainsAny(jule::Str, jule::Str);
inline jule::I64 _2218c3e33_Count(jule::Str, jule::Str);
inline jule::Str _2218c441c_Replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline void _2218c11b6_trimLeft(jule::Slice<jule::U8>*, jule::Slice<jule::U8>*);
inline jule::Str _2218c55b6_TrimLeft(jule::Str, jule::Str);
inline void _2218c58a2_trimRight(jule::Slice<jule::U8>*, jule::Slice<jule::U8>*);
inline jule::Str _2218c609a_Trim(jule::Str, jule::Str);
inline jule::Bool _2206d2704_IsPathSep(jule::U8);
inline jule::Bool _2206d2a12_isSlash(jule::U8);
inline jule::U8 _2206d2ccb_toUpper(jule::U8);
inline jule::I64 _2206d33d6_volumeNameLen(jule::Str);
inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _2206d36a0_cutPath(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _2206d3969_fullPath(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _2206d3d10_abs(jule::Str);
inline jule::Str _2206d40c9_join(jule::Slice<jule::Str>);
inline jule::Str _2218c82cd_Clean(jule::Str);
inline jule::Str _2218c88a5_FromSlash(jule::Str);
inline jule::Str _2218c8be6_Join(jule::Slice<jule::Str>);
inline jule::Str _2218c8eb0_Ext(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _2218c9279_Abs(jule::Str);
inline jule::Str _2218c9543_Base(jule::Str);
inline jule::Str _2218c98d9_Dir(jule::Str);
inline jule::Str _2218c9ba3_VolumeName(jule::Str);
inline jule::I64 _2205064e5_getLastFsError(void);
inline jule::Bool _220622c82_isConsoleHandle(jule::Uintptr);
inline void _221a2c047_appendEscapeArg(_2206c697e_StrBuilder*, jule::Str);
inline jule::Str _221a2c311_makeCmdLine(jule::Slice<jule::Str>);
inline jule::Exceptional<jule::Slice<jule::U16>> _221a2c6da_createEnvBlock(jule::Slice<jule::Str>);
inline jule::I64 _221a2d71e_processErrorFromCode(jule::I64);
inline jule::I64 _221a2d93e_getLastProcessError(void);
inline void _221a2e258_Exit(jule::I64);
inline jule::Str _221a2e467_Executable(void);
inline jule::Bool _22195bb58_IsStdHeaderPath(jule::Str);
inline jule::Bool _22195be11_IsValidHeaderExt(jule::Str);
inline jule::Bool _22195c1ca_IsValidCppExt(jule::Str);
inline jule::Str _22196922b_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _221969539_argToStr(jule::Any);
inline jule::I64 _221969803_findNextFmt(jule::Str);
inline jule::Str _221969bbb_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _22196aa35_IsTopDirective(jule::Str);
inline jule::Bool _22196be87_IsWindows(jule::Str);
inline jule::Bool _22196c262_IsDarwin(jule::Str);
inline jule::Bool _22196c52b_IsLinux(jule::Str);
inline jule::Bool _22196c86c_IsI386(jule::Str);
inline jule::Bool _22196cb36_IsAmd64(jule::Str);
inline jule::Bool _22196ce00_IsArm64(jule::Str);
inline jule::Bool _22196d1b9_IsUnix(jule::Str);
inline jule::Bool _22196d560_Is32Bit(jule::Str);
inline jule::Bool _22196d829_Is64Bit(jule::Str);
inline void _221a30743_init(void);
inline jule::I64 _1dc1e1466_LeadingZeros64(jule::U64);
inline jule::I64 _1dc1e23bd_TrailingZeros(jule::U64);
inline jule::I64 _1dc1e2d2a_TrailingZeros32(jule::U32);
inline jule::I64 _1dc1e30e4_TrailingZeros64(jule::U64);
inline jule::I64 _1dc1e8a9a_Len32(jule::U32);
inline jule::I64 _1dc1e8d64_Len64(jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1dc1e9b01_Add64(jule::U64, jule::U64, jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1dc1eb40a_Mul64(jule::U64, jule::U64);
inline jule::U32 _206dc2946_F32Bits(jule::F32);
inline jule::F32 _206dc2c54_F32FromBits(jule::U32);
inline jule::U64 _206dc301d_F64Bits(jule::F64);
inline jule::F64 _206dc335e_F64FromBits(jule::U64);
inline __jule_tuple_f64__jule_tuple_int _206dc5916_Frexp(jule::F64);
inline jule::F64 _1dc2036ed_NaN(void);
inline jule::Bool _1dc203a0b_IsNaN(jule::F64);
inline jule::F64 _1dc203cc5_Inf(jule::I64);
inline jule::Bool _1dc204116_IsInf(jule::F64, jule::I64);
inline __jule_tuple_f64__jule_tuple_int _1dc2043d0_normalize(jule::F64);
inline jule::F64 _1dc205da4_Log(jule::F64);
inline jule::F64 _1dc206789_Abs(jule::F64);
inline __jule_tuple_f64__jule_tuple_f64 _1dc20d483_Modf(jule::F64);
inline jule::F64 _1dc20dc8b_Log2(jule::F64);
inline jule::Str _1dc2382c1_FmtFloat(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1dc2388a9_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1dc23902a_bigFtoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1dc23708e_floatInfo*);
inline jule::Slice<jule::U8> _1dc239701_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _1dc237c3d_decimalSlice, jule::I64, jule::U8);
inline void _1dc239b52_roundShortest(_1dc24aa31_decimal*, jule::U64, jule::I64, _1dc23708e_floatInfo*);
inline jule::Slice<jule::U8> _1dc23a1e6_fmtE(jule::Slice<jule::U8>, jule::Bool, _1dc237c3d_decimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _1dc23a6d0_fmtF(jule::Slice<jule::U8>, jule::Bool, _1dc237c3d_decimalSlice, jule::I64);
inline jule::Slice<jule::U8> _1dc23ad51_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _1dc23708e_floatInfo*);
inline jule::Slice<jule::U8> _1dc23b55a_fmtX(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1dc23708e_floatInfo*);
inline jule::I64 _1dc23b8ce_min(jule::I64, jule::I64);
inline jule::I64 _1dc23bc53_max(jule::I64, jule::I64);
inline jule::U8 _1dc23c88b_lower(jule::U8);
inline __jule_tuple_u64__jule_tuple__22257de2d_ConvError _1dc23cd0e_parseUint(jule::Str*, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _1dc23d23d_ParseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _1dc23d6e4_ParseInt(jule::Str, jule::I64, jule::I64);
inline __jule_tuple_f64__jule_tuple_bool _1dc23e3d7_eiselLemire64(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1dc23e827_eiselLemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _1dc241681_commonPrefixLenIgnoreCase(jule::Slice<jule::U8>*, jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1dc24198e_special(jule::Slice<jule::U8>);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1dc241c58_readFloat(jule::Str*);
inline __jule_tuple_f64__jule_tuple_bool _1dc2437d7_atof64exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1dc243c16_atof32exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f64__jule_tuple__22257de2d_ConvError _1dc2442aa_atofHex(_1dc23708e_floatInfo*, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__22257de2d_ConvError _1dc244684_atof32(jule::Str*);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__22257de2d_ConvError _1dc24494d_atof64(jule::Str*);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__22257de2d_ConvError _1dc244cc2_parseFloatPrefix(jule::Str*, jule::I64);
inline jule::Exceptional<jule::F64> _1dc245146_ParseFloat(jule::Str, jule::I64);
inline void _1dc24594e_ryuFtoaFixed32(_1dc237c3d_decimalSlice*, jule::U32, jule::I64, jule::I64);
inline void _1dc245de4_ryuFtoaFixed64(_1dc237c3d_decimalSlice*, jule::U64, jule::I64, jule::I64);
inline void _1dc246741_formatDecimal(_1dc237c3d_decimalSlice*, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _1dc246c19_ryuFtoaShortest(_1dc237c3d_decimalSlice*, jule::U64, jule::I64, _1dc23708e_floatInfo*);
inline jule::I64 _1dc246ed3_mulByLog2Log10(jule::I64);
inline jule::I64 _1dc24729c_mulByLog10Log2(jule::I64);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1dc2476cb_computeBounds(jule::U64, jule::I64, _1dc23708e_floatInfo*);
inline void _1dc247ce7_ryuDigits(_1dc237c3d_decimalSlice*, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _1dc248468_ryuDigits32(_1dc237c3d_decimalSlice*, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1dc248897_mult64bitPow10(jule::U32, jule::I64, jule::I64);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1dc248cc6_mult128bitPow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _1dc24914a_divisibleByPow5(jule::U64, jule::I64);
inline __jule_tuple_u32__jule_tuple_u32 _1dc249414_divmod1e9(jule::U64);
inline void _1dc24c37e_trim(_1dc24aa31_decimal*);
inline void _1dc24c66a_rightShift(_1dc24aa31_decimal*, jule::U64);
inline jule::Bool _1dc24cb21_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I64, jule::Str*);
inline void _1dc24cdc9_leftShift(_1dc24aa31_decimal*, jule::U64);
inline jule::Bool _1dc24d24d_shouldRoundUp(_1dc24aa31_decimal*, jule::I64);
inline jule::Str _1dc24e8d1_FmtUint(jule::U64, jule::I64);
inline jule::Str _1dc24ec99_FmtInt(jule::I64, jule::I64);
inline jule::Str _1dc250063_Itoa(jule::I64);
inline jule::Str _1dc2503a4_small(jule::I64);
inline jule::Bool _1dc25066d_isPowerOfTwo(jule::I64);
inline __jule_tuple_su8__jule_tuple_str _1dc250c12_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline jule::Str _1dc25220d_RealKindOf(jule::Str);
inline jule::I64 _1dc2524c7_BitsizeOf(jule::Str);
inline jule::Str _1dc252818_IntFromBits(jule::I64);
inline jule::Str _1dc252ad2_UintFromBits(jule::I64);
inline jule::Str _1dc252d9b_FloatFromBits(jule::I64);
inline jule::Bool _1dc2539e5_CheckBitFloat(jule::Str, jule::I64);
inline jule::I64 _1dc253cae_BitsizeOfFloat(jule::F64);
inline jule::I64 _1dc254078_BitsizeOfInt(jule::I64);
inline jule::I64 _1dc254342_BitsizeOfUint(jule::U64);
inline void _1dc2544b8_UpdateTarget(void);
inline void _1dc25463e_init(void);
inline jule::I64 _1dc25849a_MinI(jule::Str);
inline jule::I64 _1dc2587a8_MaxI(jule::Str);
inline jule::U64 _1dc258a72_MaxU(jule::Str);
inline jule::F64 _1dc258ca3_Min(jule::Str);
inline jule::F64 _1dc25906c_Max(jule::Str);
inline jule::Bool _1dc2594e0_IsI8Compatible(jule::Str);
inline jule::Bool _1dc2597ed_IsI16Compatible(jule::Str);
inline jule::Bool _1dc259ab7_IsI32Compatible(jule::Str);
inline jule::Bool _1dc259e08_IsI64Compatible(jule::Str);
inline jule::Bool _1dc25a1c2_IsU8Compatible(jule::Str);
inline jule::Bool _1dc25a48b_IsU16Compatible(jule::Str);
inline jule::Bool _1dc25a755_IsU32Compatible(jule::Str);
inline jule::Bool _1dc25aaeb_IsU64Compatible(jule::Str);
inline jule::Bool _1dc25adb5_IsF32Compatible(jule::Str);
inline jule::Bool _1dc25b17e_IsF64Compatible(jule::Str);
inline jule::Bool _1dc25b503_TypesAreCompatible(jule::Str, jule::Str);
inline jule::Bool _1dc25b7bc_IsI16Greater(jule::Str);
inline jule::Bool _1dc25ba86_IsI32Greater(jule::Str);
inline jule::Bool _1dc25bd50_IsI64Greater(jule::Str);
inline jule::Bool _1dc25c119_IsU16Greater(jule::Str);
inline jule::Bool _1dc25c58c_IsU32Greater(jule::Str);
inline jule::Bool _1dc25c856_IsU64Greater(jule::Str);
inline jule::Bool _1dc25cb20_IsF32Greater(jule::Str);
inline jule::Bool _1dc25cdd9_IsF64Greater(jule::Str);
inline jule::Bool _1dc25d25d_IsGreater(jule::Str, jule::Str);
inline jule::Bool _1dc25e2b4_IsSigInt(jule::Str);
inline jule::Bool _1dc25e5c2_IsUnsigInt(jule::Str);
inline jule::Bool _1dc25e88b_IsInt(jule::Str);
inline jule::Bool _1dc25ebcc_IsFloat(jule::Str);
inline jule::Bool _1dc25ee96_IsNum(jule::Str);
inline jule::Bool _1dc260260_IsSigNum(jule::Str);
inline void _1dc2695aa_lshiftUnsig(_1dc260590_Const*, _1dc260590_Const*);
inline void _1dc2698da_rshiftUnsig(_1dc260590_Const*, _1dc260590_Const*);
inline jule::Bool _1c6284278_IsUnaryOp(jule::U64);
inline jule::Bool _1c6284586_IsBinOp(jule::U64);
inline jule::Bool _1c6284b91_IsStr(jule::Str);
inline jule::Bool _1c6284e5a_IsRawStr(jule::Str);
inline jule::Bool _1c6285224_IsRune(jule::Str);
inline jule::Bool _1c6285b4d_IsFloat(jule::Str);
inline jule::Bool _1c6285e17_IsNum(jule::Str);
inline jule::Bool _1c628649a_IsIgnoreIdent(jule::Str);
inline jule::Bool _1c6286764_IsAnonIdent(jule::Str);
inline jule::Bool _1c6286ce7_IsSpace(jule::I32);
inline jule::Bool _1c628726a_IsLetter(jule::I32);
inline jule::Bool _1c62877ed_IsDecimal(jule::U8);
inline jule::Bool _1c6287ab7_IsBinary(jule::U8);
inline jule::Bool _1c6287d81_IsOctal(jule::U8);
inline jule::Bool _1c628814a_IsHex(jule::U8);
inline jule::Bool _1c6288414_IsAssign(jule::U64);
inline jule::Bool _1c62886cd_IsPostfixOp(jule::U64);
inline jule::Bool _1c6288997_IsAssignOp(jule::U64);
inline jule::Ptr<_1c6289305_File> _1c628a69c_NewFileSet(jule::Str);
inline _221968cb9_Log _1c628c1e8_makeErr(jule::I64, jule::I64, jule::Ptr<_1c6289305_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c628c5b1_bytesHasPrefix(jule::Slice<jule::U8>*, jule::Str);
inline jule::Str _1c628c935_floatFmtE(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1c628cced_floatFmtP(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1c628d172_floatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1c628d4e6_floatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1c628d86a_floatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1c628dcee_floatNum(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1c628e0b8_commonNum(jule::Slice<jule::U8>*);
inline jule::Str _1c628e382_binaryNum(jule::Slice<jule::U8>*);
inline jule::Bool _1c628e706_isFloatFmtE(jule::U8, jule::I64);
inline jule::Bool _1c628ea7a_isFloatFmtP(jule::U8, jule::I64);
inline jule::Bool _1c628edee_isFloatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _1c6290273_isFloatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _1c62905e7_isFloatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1c6290a6a_octalNum(jule::Slice<jule::U8>*);
inline jule::Str _1c6290d34_hexNum(jule::Slice<jule::U8>*);
inline jule::Str _1c62911a8_hexEscape(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1c6291472_bigUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _1c629173b_littleUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _1c6291a05_hexByteEscape(jule::Slice<jule::U8>*);
inline jule::Str _1c6291cbe_byteEscape(jule::Slice<jule::U8>*);
inline jule::Slice<_221968cb9_Log> _1c6296cb3_Lex(jule::Ptr<_1c6289305_File>, jule::I64);
inline jule::Bool _1c63639d9_FindModuleFile(jule::Slice<jule::Ptr<_220506a9a_DirEntry>>*);
inline jule::Str _1c6363cb4_FindModuleFileDeep(jule::Str);
inline jule::Slice<_221968cb9_Log> _1c636407d_CheckModuleFile(jule::Str*);
inline jule::Bool _1c6364ab7_IsPub(jule::Str*);
inline jule::Bool _1c63a9b95_IsAscii(jule::I32);
inline jule::I32 _1c63c252b_ToRune(jule::Slice<jule::U8>);
inline jule::Str _1c63c26d5_ToRawStr(jule::Slice<jule::U8>);
inline jule::Str _1c63c2a26_ToStr(jule::Slice<jule::U8>);
inline __jule_tuple_u8__jule_tuple_bool _1c63c2ce0_tryBtoaCommonEsq(jule::Slice<jule::U8>);
inline jule::I32 _1c63c3131_runeFromEsqSeq(jule::Slice<jule::U8>, jule::I64*);
inline jule::Slice<jule::U8> _1c63c34a5_strEsqSeq(jule::Slice<jule::U8>, jule::I64*);
inline jule::I64 _1c650451a_findFormatPrefix(jule::Slice<jule::U8>*, jule::I64*);
inline jule::Slice<jule::U8> _1c65048a0_getFormatRange(jule::I64*, jule::Slice<jule::U8>*);
inline void _1c6504b8b_FmtByDefault(_2206c697e_StrBuilder*, jule::Any*);
inline void _1c65050a9_applyFmtByDefault(_2206c697e_StrBuilder*, jule::I64*, jule::Slice<jule::Any>);
inline void _1c650550a_applyFmt(jule::Slice<jule::U8>*, _2206c697e_StrBuilder*, jule::I64*, jule::Slice<jule::Any>);
inline jule::Str _1c650584b_Format(jule::Str*, jule::Slice<jule::Any>);
inline jule::Str _1c65078c5_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c62d4dcd_parameterUsesGenerics(jule::Ptr<_1c62d1b55_ParamIns>*, jule::Slice<jule::Ptr<_1c62a6454_GenericDecl>>*);
inline jule::Ptr<_1c64256e4_TypeSymbol> _1c62d762d_buildType(jule::Ptr<_1c6299249_TypeDecl>);
inline jule::Ptr<_1c63de49e_Value> _1c62d793b_buildExpr(jule::Ptr<_1c629d57d_Expr>);
inline jule::Ptr<_1c641c730_TypeAlias> _1c62d7c05_buildTypeAlias(jule::Ptr<_1c62b0aac_TypeAliasDecl>);
inline jule::Ptr<_1c62b6e48_Field> _1c62d8046_buildField(jule::Ptr<_1c62b4385_FieldDecl>);
inline jule::Slice<jule::Ptr<_1c62b6e48_Field>> _1c62d8310_buildFields(jule::Slice<jule::Ptr<_1c62b4385_FieldDecl>>*);
inline jule::Ptr<_1c62b9d3b_Struct> _1c62d85c9_buildStruct(jule::Ptr<_1c62b4c7b_StructDecl>);
inline jule::Ptr<_1c62cd228_Param> _1c62d8893_buildParam(jule::Ptr<_1c62a99a7_ParamDecl>);
inline jule::Slice<jule::Ptr<_1c62cd228_Param>> _1c62d8c39_buildParams(jule::Slice<jule::Ptr<_1c62a99a7_ParamDecl>>*);
inline jule::Ptr<_1c62cc997_RetType> _1c62d9003_buildRetType(jule::Ptr<_1c629c13c_RetTypeDecl>);
inline jule::Ptr<_1c62cebec_Fn> _1c62d92bc_buildFunc(jule::Ptr<_1c62aae09_FnDecl>);
inline jule::Slice<jule::Ptr<_1c62cebec_Fn>> _1c62d9586_buildMethods(jule::Slice<jule::Ptr<_1c62aae09_FnDecl>>*);
inline jule::Slice<jule::Ptr<_1c64256e4_TypeSymbol>> _1c62d9850_buildTraitInherits(jule::Slice<jule::Ptr<_1c6299249_TypeDecl>>*);
inline jule::Ptr<_1c62e2e96_Trait> _1c62d9b19_buildTrait(jule::Ptr<_1c62b54b8_TraitDecl>);
inline jule::Ptr<_1c62e4b24_EnumItem> _1c62d9dd3_buildEnumItem(jule::Ptr<_1c62b2570_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1c62e4b24_EnumItem>> _1c62da19c_buildEnumItems(jule::Slice<jule::Ptr<_1c62b2570_EnumItemDecl>>*);
inline jule::Ptr<_1c62e5691_Enum> _1c62da620_buildEnum(jule::Ptr<_1c62b3131_EnumDecl>);
inline jule::Ptr<_1c62e67c4_TypeEnumItem> _1c62da8d9_buildTypeEnumItem(jule::Ptr<_1c62b395b_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_1c62e67c4_TypeEnumItem>> _1c62daba3_buildTypeEnumItems(jule::Slice<jule::Ptr<_1c62b395b_TypeEnumItemDecl>>*);
inline jule::Ptr<_1c62e6d9b_TypeEnum> _1c62dae6c_buildTypeEnum(jule::Ptr<_1c62b40bb_TypeEnumDecl>);
inline jule::Ptr<_1c6389da6_Var> _1c62db236_buildVar(jule::Ptr<_1c62abed7_VarDecl>);
inline jule::Slice<jule::Ptr<_1c6389da6_Var>> _1c62db500_buildVars(jule::Slice<jule::Ptr<_1c62abed7_VarDecl>>);
inline jule::Ptr<_1c631a320_Impl> _1c62db7b9_buildImpl(jule::Ptr<_1c62b5b28_Impl>);
inline jule::Ptr<_1c63dd35a_Data> _1c6315d10_buildAsComptimeMethodData(jule::Ptr<_1c62d2b01_FnIns>*);
inline jule::Ptr<_1c63469de_ImportInfo> _1c631611d_findComptimePackage(jule::Ptr<_1c63679bb_Sema>*);
inline jule::Ptr<_1c63dd35a_Data> _1c6316492_buildComptimeTypeInfoData(jule::Ptr<_1c63679bb_Sema>*, jule::Ptr<_1c641d522_TypeKind>*);
inline jule::Ptr<_1c63dd35a_Data> _1c63166c3_buildComptimeValue(jule::Ptr<_1c63dd35a_Data>*);
inline jule::Bool _1c6319693_matchConstraint(jule::Str*, jule::Ptr<_1c641d522_TypeKind>*);
inline jule::Bool _1c63199a1_isBuiltinConstraint(jule::Str*);
inline jule::Ptr<_1c6327a58_scopeChecker> _1c631c531_newScopeCheckerBase(jule::Ptr<_1c63679bb_Sema>*, jule::Ptr<_1c62d2b01_FnIns>);
inline jule::Ptr<_1c6327a58_scopeChecker> _1c631c8e9_newScopeChecker(jule::Ptr<_1c63679bb_Sema>*, jule::Ptr<_1c62d2b01_FnIns>);
inline jule::Ptr<_1c63265b2_scopeLabel> _1c631cc6d_findLabelParent(jule::Str*, jule::Ptr<_1c6327a58_scopeChecker>);
inline jule::Bool _1c631d136_modelIsGotoScope(jule::Any, jule::Ptr<_1c6320754_Scope>*);
inline jule::Bool _1c631d4aa_stmtIsGotoScope(jule::Any*, jule::Ptr<_1c6320754_Scope>*);
inline jule::I64 _1c631d82e_countMatchType(jule::Ptr<_1c632488a_Match>*, jule::Ptr<_1c641d522_TypeKind>*);
inline jule::Slice<jule::Ptr<_1c63dd35a_Data>> _1c631dae8_getDatasFromTupleData(jule::Ptr<_1c63dd35a_Data>*);
inline jule::Bool _1c631e4ab_checkMut(jule::Ptr<_1c63679bb_Sema>*, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c63dd35a_Data>, jule::Ptr<_1c6283a3b_Token>);
inline jule::Bool _1c631e995_checkAssign(jule::Ptr<_1c63679bb_Sema>*, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c63dd35a_Data>, jule::Ptr<_1c6283a3b_Token>);
inline jule::Bool _1c631ec5e_isValidAstStForNextSt(jule::Any*);
inline jule::Bool _1c6320028_isValidStForNextSt(jule::Any*);
inline jule::Bool _1c63202e2_stmtIsDef(jule::Any*);
inline jule::U64 _1c633e982_removeEqFromOp(jule::U64);
inline jule::Ptr<_1c6389da6_Var> _1c6343ec5_findVarInPackage(jule::Slice<jule::Ptr<_1c63d8135_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1c641c730_TypeAlias> _1c6344448_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1c63d8135_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1c62b9d3b_Struct> _1c6344877_findStructInPackage(jule::Slice<jule::Ptr<_1c63d8135_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1c62cebec_Fn> _1c6344d2d_findFnInPackage(jule::Slice<jule::Ptr<_1c63d8135_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1c62e2e96_Trait> _1c634516e_findTraitInPackage(jule::Slice<jule::Ptr<_1c63d8135_SymbolTable>>*, jule::Str*);
inline jule::Ptr<_1c62e5691_Enum> _1c63454e3_findEnumInPackage(jule::Slice<jule::Ptr<_1c63d8135_SymbolTable>>*, jule::Str*);
inline jule::Ptr<_1c62e6d9b_TypeEnum> _1c6345867_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1c63d8135_SymbolTable>>*, jule::Str*);
inline jule::Any _1c6345da6_defByIdentPackage(jule::Slice<jule::Ptr<_1c63d8135_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Bool _1c634bde0_isStdPackage(jule::Str*, jule::Str);
inline jule::Bool _1c636515b_isValidModelForRef(jule::Any*);
inline _221968cb9_Log _1c6365689_compilerErr(jule::Ptr<_1c6283a3b_Token>*, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c6365a0d_impIsLookupable(jule::Ptr<_1c63469de_ImportInfo>*, jule::Str*);
inline void _1c6365cb6_appendRetVars(jule::Slice<jule::Ptr<_1c6389da6_Var>>*, jule::Ptr<_1c62d2b01_FnIns>*);
inline void _1c63660a2_appendParamVars(jule::Slice<jule::Ptr<_1c6389da6_Var>>*, jule::Ptr<_1c62d2b01_FnIns>*);
inline void _1c636638d_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1c641c730_TypeAlias>>*, jule::Ptr<_1c62d2b01_FnIns>*);
inline jule::Ptr<_1c63d8135_SymbolTable> _1c6366712_findFile(jule::Slice<jule::Ptr<_1c63d8135_SymbolTable>>*, jule::Ptr<_1c6289305_File>*);
inline void _1c6366bb8_pushSuggestion(_221968cb9_Log*, jule::Str, jule::Slice<jule::Any>);
inline void _1c6388190_pushImplemented(jule::Ptr<_1c62e2e96_Trait>, jule::Ptr<_1c62b9d3b_Struct>*);
inline void _1c638847b_pushImplements(jule::Ptr<_1c62b9d3b_Struct>*, jule::Ptr<_1c62e2e96_Trait>);
inline jule::Bool _1c63c3c47_traitHasReferenceReceiver(jule::Ptr<_1c62e2e96_Trait>*);
inline jule::Bool _1c63c40cc_floatAssignable(jule::Str*, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Bool _1c63c4451_sigAssignable(jule::Str, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Bool _1c63c4819_unsigAssignable(jule::Str, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Bool _1c63c4b8d_intAssignable(jule::Str, jule::Ptr<_1c63dd35a_Data>*);
inline void _1c63d134d_checkMutRiskOfStructLit(jule::Ptr<_1c63679bb_Sema>*, jule::Ptr<_1c62c2c56_StructLitExprModel>*);
inline jule::Ptr<_1c641d522_TypeKind> _1c63d6de2_lenKind(void);
inline jule::Bool _1c63d7244_isGoodValueToInfer(jule::Ptr<_1c63dd35a_Data>*);
inline jule::Ptr<_1c6298666_Directive> _1c6416938_findDirective(jule::Slice<jule::Ptr<_1c6298666_Directive>>*, jule::Str);
inline jule::Any _1c6416d01_findBuiltinsImport(jule::Str*, jule::Ptr<_1c63469de_ImportInfo>);
inline void _1c6417032_fitBitsize(jule::Ptr<_1c63dd35a_Data>*);
inline void _1c6417362_makeStructLitAlloc(jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c62c2c56_StructLitExprModel>*);
inline jule::Ptr<_1c6389da6_Var> _1c64176d6_buildErrorVar(jule::Ptr<_1c6320754_Scope>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Any _1c6417a5a_findBuiltinsSema(jule::Str*, jule::Ptr<_1c63679bb_Sema>);
inline jule::Bool _1c6417d24_isOkForShifting(jule::Ptr<_1c63dd35a_Data>*);
inline jule::Bool _1c64181ed_isInstancedStruct(jule::Ptr<_1c62bcab9_StructIns>);
inline jule::Bool _1c6418572_isPtrArithmeticCompatible(jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c63dd35a_Data>*);
inline void _1c641885d_applyCastKindModel(jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c641d522_TypeKind>*);
inline void _1c6418b49_applyCastKind(jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c641d522_TypeKind>*);
inline jule::Ptr<_1c63dd35a_Data> _1c6418d58_buildVoidData(void);
inline jule::Str _1c6419122_checkDataForIntegerIndexing(jule::Ptr<_1c63dd35a_Data>*);
inline void _1c641940d_applyCastModelByEnum(jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c62e5691_Enum>);
inline void _1c64196e9_castConstByType(jule::Str*, jule::Ptr<_1c63dd35a_Data>*);
inline void _1c6419b8e_updateModelToGenericIns(jule::Any*, jule::Ptr<_1c62d2b01_FnIns>*);
inline jule::Bool _1c641a013_pushSubIdentFromExpr(jule::Any, jule::Ptr<_1c6299b51_SubIdentTypeDecl>*);
inline jule::Str _1c641a2cc_constoa(jule::Ptr<_1dc260590_Const>*);
inline jule::Ptr<_1c63dd35a_Data> _1c641a651_evalEnumStatic(jule::Ptr<_1c62e5691_Enum>*, jule::Ptr<_1c62e4b24_EnumItem>*);
inline jule::Ptr<_1c62c2c56_StructLitExprModel> _1c641a91a_isLitBased(jule::Any*);
inline void _1c641ac06_makeImplicitDeref(jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c6283a3b_Token>);
inline jule::Bool _1c6438c79_kindUsesGenerics(jule::Ptr<_1c641d522_TypeKind>*, jule::Slice<jule::Ptr<_1c62a6454_GenericDecl>>*);
inline jule::Bool _1c6439142_hasDirective(jule::Slice<jule::Ptr<_1c6298666_Directive>>*, jule::Str);
inline jule::Bool _1c643940b_canGetPtr(jule::Ptr<_1c63dd35a_Data>*);
inline jule::Bool _1c643974c_isValidForSptrType(jule::Ptr<_1c641d522_TypeKind>*);
inline jule::Bool _1c6439a16_isValidForRef(jule::Ptr<_1c641d522_TypeKind>*);
inline jule::Bool _1c6439cd0_isBuiltinStrConvertable(jule::Ptr<_1c641d522_TypeKind>*);
inline jule::Str _1c643a099_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Ptr<_1c64260eb_Prim> _1c643a440_buildPrimType(jule::Str);
inline void _1c643a9e5_applyImplicitCast(jule::Ptr<_1c641d522_TypeKind>*, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Bool _1c643acae_validTypeForXof(jule::Ptr<_1c641d522_TypeKind>*);
inline __jule_tuple_x_1c63d8135_SymbolTable__jule_tuple_s_221968cb9_Log _1c643dd4a_buildSymbols(jule::Ptr<_1c6297379_Ast>*, jule::Trait<_1c6343ac9_Importer>*, jule::Ptr<_1c62dbd80_symbolBuilder>);
inline __jule_tuple_x_1c6349915_Package__jule_tuple_s_221968cb9_Log _1c643e2bd_analyzePackage(jule::Slice<jule::Ptr<_1c6297379_Ast>>*, jule::Trait<_1c6343ac9_Importer>*, jule::I64*);
inline __jule_tuple_x_1c6349915_Package__jule_tuple_s_221968cb9_Log _1c643e6ec_AnalyzePackage(jule::Slice<jule::Ptr<_1c6297379_Ast>>, jule::Trait<_1c6343ac9_Importer>, jule::I64);
inline jule::Ptr<_1c62d2b01_FnIns> _1c6508354_findBuiltinFunc(jule::Str*);
inline jule::Ptr<_1c641c730_TypeAlias> _1c6508662_primTypeAlias(jule::Ptr<_1c641d522_TypeKind>*);
inline jule::Ptr<_1c6389da6_Var> _1c650c26a_findBuiltinVar(jule::Str*);
inline jule::Ptr<_1c641c730_TypeAlias> _1c650c49b_findBuiltinTypeAlias(jule::Str);
inline jule::Any _1c650c765_findBuiltinDef(jule::Str*);
inline jule::Any _1c650ca2e_findBuiltinDefStdDebug(jule::Str*);
inline jule::Any _1c650cce8_findBuiltinDefStdMem(jule::Str*);
inline jule::Any _1c650d18e_findBuiltinDefStdComptime(jule::Str*);
inline jule::Any _1c650d458_findBuiltinDefStdJuleIntegrated(jule::Str*);
inline jule::Any _1c650d7cc_findPackageBuiltinDef(jule::Str*, jule::Str*);
inline jule::Ptr<_1c63dd35a_Data> _1c650dc0b_builtinCallerCommonPlain(jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Ptr<_1c63dd35a_Data> _1c650e080_builtinCallerError(jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*);
inline jule::Ptr<_1c63dd35a_Data> _1c650e4ae_builtinCallerOut(jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Ptr<_1c63dd35a_Data> _1c650e8dd_builtinCallerOutln(jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Ptr<_1c63dd35a_Data> _1c650ed1c_builtinCallerNew(jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Ptr<_1c63dd35a_Data> _1c6510405_builtinCallerPanic(jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Ptr<_1c63dd35a_Data> _1c6510834_builtinCallerMake(jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Ptr<_1c63dd35a_Data> _1c6510c63_builtinCallerAppend(jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Ptr<_1c63dd35a_Data> _1c651124c_callerCopySlice(jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Ptr<_1c63dd35a_Data> _1c651167b_builtinCallerCopy(jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Ptr<_1c63dd35a_Data> _1c6511a00_callerLenSlice(jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Ptr<_1c63dd35a_Data> _1c6511d74_callerLenMap(jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Ptr<_1c63dd35a_Data> _1c65121e8_callerLenArr(jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Ptr<_1c63dd35a_Data> _1c651256c_callerLenStr(jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Ptr<_1c63dd35a_Data> _1c65128e1_callerLenComptime(jule::Ptr<_1c63dd35a_Data>*, jule::I64);
inline jule::Ptr<_1c63dd35a_Data> _1c6512d20_builtinCallerLen(jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Ptr<_1c63dd35a_Data> _1c6513194_callerCapSlice(jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Ptr<_1c63dd35a_Data> _1c65135c3_builtinCallerCap(jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Ptr<_1c63dd35a_Data> _1c6513aac_callerDeleteMap(jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*, jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Ptr<_1c63dd35a_Data> _1c6513edb_builtinCallerDelete(jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Ptr<_1c63dd35a_Data> _1c651441a_builtinCallerAssert(jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Ptr<_1c63dd35a_Data> _1c65149e2_builtinCallerStdComptimeTypeOf(jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Ptr<_1c63dd35a_Data> _1c6514daa_builtinCallerStdComptimeValueOf(jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Ptr<_1c63dd35a_Data> _1c6515174_rangeData(jule::Trait<_1c62e9057_comptimeRangeKind>);
inline jule::Ptr<_1c63dd35a_Data> _1c65155a3_builtinCallerStdComptimeRange(jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Ptr<_1c63dd35a_Data> _1c65159d2_builtinCallerStdComptimeLine(jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Ptr<_1c63dd35a_Data> _1c6515e11_builtinCallerStdComptimeFile(jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Ptr<_1c63dd35a_Data> _1c6516340_builtinCallerStdComptimeFiles(jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Ptr<_1c63dd35a_Data> _1c651676e_builtinCallerStdComptimeTypeAlias(jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Ptr<_1c63dd35a_Data> _1c6516b9d_builtinCallerStdMemSizeOf(jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Ptr<_1c63dd35a_Data> _1c65170cc_builtinCallerStdMemAlignOf(jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Ptr<_1c63dd35a_Data> _1c651750b_builtinCallerStdMemFree(jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Ptr<_1c63dd35a_Data> _1c651793a_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Ptr<_1c63dd35a_Data> _1c6517d69_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Ptr<_1c63dd35a_Data> _1c6518298_builtinCallerStdDebugOut(jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Ptr<_1c63dd35a_Data> _1c65186c7_builtinCallerStdDebugOutln(jule::Ptr<_1c63e004e_Eval>*, jule::Ptr<_1c62a22a7_FnCallExpr>*, jule::Ptr<_1c63dd35a_Data>*);
inline jule::Ptr<_1c6c84904_FileInfo> _1c6cc7edb_ParseFile(jule::Ptr<_1c6289305_File>);
inline __jule_tuple_x_1c6297379_Ast__jule_tuple_s_221968cb9_Log _1c6cc85b3_parseFileset(jule::Ptr<_1c6289305_File>);
inline jule::Ptr<_1c62a926a_ScopeTree> _1c6cc9042_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1c6cc93b6_isSt(jule::Ptr<_1c6283a3b_Token>, jule::Ptr<_1c6283a3b_Token>);
inline jule::Bool _1c6cc973a_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1c6283a3b_Token>>*, jule::I64*);
inline __jule_tuple_int__jule_tuple_bool _1c6cc9b03_nextStPos(jule::Slice<jule::Ptr<_1c6283a3b_Token>>*, jule::I64);
inline __jule_tuple_sx_1c6283a3b_Token__jule_tuple_bool _1c6cc9e77_skipSt(jule::I64*, jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline jule::Slice<jule::Ptr<_1c6cca2a7_stmt>> _1c6cca65e_splitStmts(jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Bool _1a9eb7406_isTypeOp(jule::U64*);
inline jule::Bool _1a9eb7714_isTypeRange(jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Slice<jule::Ptr<_1c6283a3b_Token>> _1a9eb79cd_getBlockExpr(jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline __jule_tuple_sx_1c6283a3b_Token__jule_tuple_sx_1c6283a3b_Token _1a9eb7d96_splitDelim(jule::Slice<jule::Ptr<_1c6283a3b_Token>>*, jule::U64);
inline jule::I64 _1a9eb8160_findLowestPrecOp(jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Ptr<_1c629eea8_IdentExpr> _1a9eb8429_buildIdentExpr(jule::Ptr<_1c6283a3b_Token>*);
inline __jule_tuple_sx_1c6283a3b_Token__jule_tuple_int _1a9eb86e3_getRangeExprTokens(jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Bool _1a9eb94e6_checkAssignTokens(jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline _221968cb9_Log _1a9eba6c3_makeErr(jule::I64, jule::I64, jule::Ptr<_1c6289305_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1c6283a3b_Token>> _1a9ebabbd_range(jule::I64*, jule::U64, jule::U64, jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline __jule_tuple_sx_1c6283a3b_Token__jule_tuple_sx_1c6283a3b_Token _1a9ebae87_rangeLast(jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline __jule_tuple_ssx_1c6283a3b_Token__jule_tuple_s_221968cb9_Log _1a9ebb43d_parts(jule::Slice<jule::Ptr<_1c6283a3b_Token>>*, jule::U64, jule::Bool);
inline jule::U64 _1a9ebb707_getCloseOfBrace(jule::U64);
inline _221968cb9_Log _1a9ebbb36_compilerErr(jule::Ptr<_1c6283a3b_Token>*, jule::Str*, jule::Slice<jule::Any>);
inline void _1a9ebbecc_pushSuggestion(_221968cb9_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1a9ebc373_tokstoa(jule::Slice<jule::Ptr<_1c6283a3b_Token>>*);
inline jule::Ptr<_1c6299249_TypeDecl> _1a9ecdd9b_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _1c4712c03_checkOs(jule::Str);
inline __jule_tuple_bool__jule_tuple_bool _1c472c426_checkArch(jule::Str);
inline jule::Bool _1c472c6bd_isPassFileAnnotation(jule::Str);
inline void _1c472d955_setOsVars(jule::Slice<jule::Str>*);
inline void _1c472dbca_setArchVars(jule::Slice<jule::Str>*);
inline void _1c472deb6_initVars(jule::Slice<jule::Str>*, _1c472d636_CompileInfo*);
inline jule::Slice<jule::U8> _1a9ed2ec1_readBuff(jule::Str);
inline _221968cb9_Log _1a9ed329b_flatCompilerErr(jule::Str);
inline void _1a9ed7ab9_pushPasses(jule::Ptr<_1c6349915_Package>*, jule::Slice<jule::Str>*);
inline jule::Slice<jule::Str> _1a9ed7e82_getAllUniquePasses(jule::Ptr<_1c6349915_Package>*, jule::Slice<jule::Ptr<_1c63469de_ImportInfo>>);
inline _1c472d636_CompileInfo _1a9ed8191_buildCompileInfo(void);
inline void _1aa133462_EliminateDefines(jule::Ptr<_1a9ed6249_IR>*);
inline jule::Ptr<_1c6298666_Directive> _1aa13382a_findDirective(jule::Slice<jule::Ptr<_1c6298666_Directive>>*, jule::Str);
inline jule::Bool _1aa133b9e_hasDirective(jule::Slice<jule::Ptr<_1c6298666_Directive>>*, jule::Str);
inline jule::Bool _1aa134067_isTraitMethod(jule::Ptr<_1c62bcab9_StructIns>*, jule::Ptr<_1c62d2b01_FnIns>*);
inline void _1aa138115_eliminateDeadCodeOfScope(jule::Ptr<_1c6320754_Scope>);
inline void _1aa13838a_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1c62cebec_Fn>>*);
inline void _1aa1385bb_eliminateFunctionsScopePackage(jule::Ptr<_1c6349915_Package>*);
inline void _1aa138874_eliminateScopePackage(jule::Ptr<_1c6349915_Package>*);
inline void _1aa138aa5_EliminateScopes(jule::Ptr<_1a9ed6249_IR>*);
inline jule::Uintptr _1c651896e_typeData(jule::Any*);
inline jule::Bool _1c6518d04_equalConst(jule::Ptr<_1dc260590_Const>, jule::Ptr<_1dc260590_Const>);
inline jule::Bool _1c6519178_equalCasting(jule::Ptr<_1c62c35d6_CastingExprModel>, jule::Ptr<_1c62c35d6_CastingExprModel>);
inline jule::Bool _1c6519541_equalUnary(jule::Ptr<_1c62c2382_UnaryExprModel>, jule::Ptr<_1c62c2382_UnaryExprModel>);
inline jule::Bool _1c65198b5_equalIndexing(jule::Ptr<_1c62c4818_IndexingExprModel>, jule::Ptr<_1c62c4818_IndexingExprModel>);
inline jule::Bool _1c6519c39_equalBinary(jule::Ptr<_1c62c1ea8_BinopExprModel>, jule::Ptr<_1c62c1ea8_BinopExprModel>);
inline jule::Bool _1c651a0ad_equalModels(jule::Any, jule::Any);
inline jule::Bool _1c6523649_isStdPackage(jule::Str*, jule::Str);
inline jule::Bool _1c6523957_isConstantValidConditionalCase(jule::Ptr<_1c6320b72_If>*);
inline jule::Bool _1c6523c21_isUnreachableExpr(jule::Any*);
inline jule::Bool _1c6524062_isConstantValidMatchCase(jule::Ptr<_1c63254c3_Case>*);
inline jule::Bool _1c652432b_isUnreachableConditionalCase(jule::Ptr<_1c6320b72_If>*);
inline jule::Bool _1c65245e5_isUnreachableMatchCase(jule::Ptr<_1c63254c3_Case>*);
inline __jule_tuple_bool__jule_tuple_u64 _1c652c752_checkForBitShiftOpt(jule::Ptr<_1c62c19ad_OperandExprModel>*, jule::Ptr<_1c62c19ad_OperandExprModel>*);
inline jule::Bool _1c652cb1a_areSameLvalueExprModel(jule::Any*, jule::Any*);
inline void _1c652d357_doInternalNosafeStobs(_1c65254c5_exprOptimizer*, _1a9eda5a0_stdCacheData*, jule::Ptr<_1c62c3e88_FnCallExprModel>*);
inline void _1a9edac43_buildCache(jule::Ptr<_1a9ed6249_IR>*);
inline void _1a9edae85_buildStdInternalNosafeCache(jule::Ptr<_1a9ed6249_IR>*);
inline void _1a9edb32b_pushCache(jule::Ptr<_1c6349915_Package>*, jule::Str, jule::Fn<void(_1c65254c5_exprOptimizer*,_1a9eda5a0_stdCacheData*,jule::Ptr<_1c62c3e88_FnCallExprModel>*)>);
inline jule::Ptr<_1c62d2b01_FnIns> _1a9edb6e4_getFunc(jule::Ptr<_1c6349915_Package>*, jule::Str*);
inline jule::Ptr<_1c6349915_Package> _1a9edba68_getPackage(jule::Ptr<_1a9ed6249_IR>*, jule::Str*);
inline void _1a9ede75d_PushOptLevel(jule::I64);
inline void _1c66398d6_detectEnabled(void);
inline void _1c6663459_Throw(jule::Str);
inline jule::U64 _1aaa9c370_unix(void);
inline jule::Bool _1aa9cb601_isCopyOptimizable(jule::Ptr<_1c63dd35a_Data>*);
inline jule::Bool _1aa9cb9b9_isIterCopyOptimizable(jule::Ptr<_1c63dd35a_Data>*, jule::Ptr<_1c6389da6_Var>*);
inline jule::Str _1aa9dbe4c_decomposeCommonEsq(jule::U8);
inline jule::Str _1aa9dc25a_sbtoa(jule::U8);
inline void _1aa9dc546_cstrBytes(_2206c697e_StrBuilder*, jule::Str);
inline void _1aa9dc876_cstrLit(_2206c697e_StrBuilder*, jule::Str);
inline void _1aa9dcc1c_ftoa(_2206c697e_StrBuilder*, jule::F64, jule::I64);
inline void _1aa9dd008_itoa(_2206c697e_StrBuilder*, jule::I64);
inline void _1aa9dd2e4_utoa(_2206c697e_StrBuilder*, jule::U64);
inline jule::Bool _1aa9dd6bd_isForwarded(jule::Ptr<_1c6320754_Scope>*);
inline jule::Bool _1aa9dd987_isExprComesFromBind(jule::Ptr<_1c63dd35a_Data>*);
inline jule::Bool _1aa9ddc51_isAny(jule::Ptr<_1c641d522_TypeKind>*);
inline void _1aaab6521_iterFiles(jule::Ptr<_1c6349915_Package>*, jule::Fn<void(jule::Ptr<_1c63d8135_SymbolTable>*)>);
inline jule::Str _1aaab682e_concatAllParts(jule::Slice<jule::Ptr<_1c6283a3b_Token>>);
inline jule::Bool _1aaab6ba3_containsTraitMethod(jule::Ptr<_1c62e2e96_Trait>*, jule::Str*);
inline void _1aaab6ed3_pushMethodsFromInherit(jule::Ptr<_1c62e2e96_Trait>*, jule::Ptr<_1c62e2e96_Trait>*);
inline void _1aaab72be_pushMethodsFromInherits(jule::Ptr<_1c62e2e96_Trait>*, jule::Ptr<_1c62e2e96_Trait>*);
inline jule::Bool _1aaab7588_isOpMethod(jule::Ptr<_1c62cebec_Fn>*);
inline jule::Bool _1aaab7852_isHeadDecl(jule::Ptr<_1c62cebec_Fn>*);
inline jule::Ptr<_1c6298666_Directive> _1aaac6421_findDirective(jule::Slice<jule::Ptr<_1c6298666_Directive>>*, jule::Str);
inline jule::Bool _1aaac67d9_hasDirective(jule::Slice<jule::Ptr<_1c6298666_Directive>>*, jule::Str);
inline jule::Bool _1aaac6aa3_shouldInitialized(jule::Ptr<_1c641d522_TypeKind>*);
inline void _221a33757_printErrorMessage(jule::Str);
inline void _221a339cc_help(jule::Slice<jule::Str>*);
inline void _221a33c0d_version(jule::Slice<jule::Str>*);
inline void _221a33e0b_toolDistos(void);
inline void _221a34082_toolDistarch(void);
inline void _221a342b3_tool(jule::Slice<jule::Str>*);
inline void _221a344e4_julenv(jule::Slice<jule::Str>*);
inline void _221a34802_mod(jule::Slice<jule::Str>*);
inline jule::Bool _221a34abb_processCommand(jule::Slice<jule::Str>*);
inline void _221a34c42_showInfo(void);
void entry_point(void);
inline void _221a3565a_enableVtp(void);
inline void _221a35825_init(void);
inline void _1aab4412b_init(void);
inline jule::Ptr<_2205120d3_File> _1aab44406_openOutput(jule::Str*);
inline void _1aab4457c_clearObjects(void);
inline void _1aab448ac_compileIr(jule::Str, jule::Str);
inline jule::Bool _1aab44b76_isCppSourceFile(jule::Str);
inline void _1aab44da7_pushCompCmdClang(_2206c697e_StrBuilder*);
inline void _1aab450d8_pushCompCmdGcc(_2206c697e_StrBuilder*);
inline __jule_tuple_str__jule_tuple_str _1aab4556c_genCompileCmd(jule::Str, jule::Ptr<_1a9ed6249_IR>*);
inline jule::Str _1aab4577b_getCompilePath(void);
inline void _1aab459ac_applyTargetIndependentOptimizations(jule::Ptr<_1a9ed6249_IR>*);
inline void _1aab45b33_checkCompilerFlag(void);
inline void _1aab45d64_checkTargetArch(jule::Str);
inline void _1aab46095_checkTargetOs(jule::Str);
inline void _1aab462c6_checkTargetFlag(jule::Str*);
inline void _1aab46507_checkOptFlag(jule::Str*);
inline void _1aab4688c_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1aab46b01_checkFlags(jule::Slice<jule::Str>*);
inline void _1aab46d32_setupSemaFlags(jule::I64*);
inline jule::Ptr<_1a9ed6249_IR> _1aab470eb_buildIr(jule::Slice<jule::Str>*);
inline void _1aab4732c_compileCommand(jule::Slice<jule::Str>*);


struct _1c62e9057_comptimeRangeKindMptrData {
	void(*_1c62e874e_ready)(jule::Trait<_1c62e9057_comptimeRangeKind>, jule::Ptr<_1c6389da6_Var>*, jule::Ptr<_1c6389da6_Var>*);
	void(*_1c62e8b6c_step)(jule::Trait<_1c62e9057_comptimeRangeKind>, jule::I64, jule::Ptr<_1c6389da6_Var>*, jule::Ptr<_1c6389da6_Var>*);
	jule::I64(*_1c62e8e03_len)(jule::Trait<_1c62e9057_comptimeRangeKind>);
};

struct _1c6343ac9_ImporterMptrData {
	void(*_1c63428a8_SetModPath)(jule::Trait<_1c6343ac9_Importer>, jule::Str);
	jule::Str(*_1c6342b3e_GetModPath)(jule::Trait<_1c6343ac9_Importer>);
	jule::Str(*_1c6342e80_ModById)(jule::Trait<_1c6343ac9_Importer>, jule::I64);
	jule::Ptr<_1c63469de_ImportInfo>(*_1c63432c1_GetImport)(jule::Trait<_1c6343ac9_Importer>, jule::Str);
	__jule_tuple_sx_1c6297379_Ast__jule_tuple_s_221968cb9_Log(*_1c63436bc_ImportPackage)(jule::Trait<_1c6343ac9_Importer>, jule::Str, jule::Bool);
	void(*_1c6343975_Imported)(jule::Trait<_1c6343ac9_Importer>, jule::Ptr<_1c63469de_ImportInfo>);
};

struct _1c641d06b_KindMptrData {
	jule::Str(*_1c641cac6_Str)(jule::Trait<_1c641d06b_Kind>);
	jule::Bool(*_1c641ce17_Equal)(jule::Trait<_1c641d06b_Kind>, jule::Ptr<_1c641d522_TypeKind>);
};

struct _1c643d058_LookupMptrData {
	jule::Ptr<_1c63469de_ImportInfo>(*_1c643b342_SelectPackage)(jule::Trait<_1c643d058_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_1c63469de_ImportInfo>)>);
	jule::Ptr<_1c6389da6_Var>(*_1c643b73d_FindVar)(jule::Trait<_1c643d058_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1c641c730_TypeAlias>(*_1c643bb39_FindTypeAlias)(jule::Trait<_1c643d058_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1c62b9d3b_Struct>(*_1c643c035_FindStruct)(jule::Trait<_1c643d058_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1c62cebec_Fn>(*_1c643c431_FindFn)(jule::Trait<_1c643d058_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1c62e2e96_Trait>(*_1c643c772_FindTrait)(jule::Trait<_1c643d058_Lookup>, jule::Str);
	jule::Ptr<_1c62e5691_Enum>(*_1c643cab3_FindEnum)(jule::Trait<_1c643d058_Lookup>, jule::Str);
	jule::Ptr<_1c62e6d9b_TypeEnum>(*_1c643ce04_FindTypeEnum)(jule::Trait<_1c643d058_Lookup>, jule::Str);
};

struct _1aab3bdb0_CommonFlagMptrData {
	jule::Str(*_1aab0ac4c_Name)(jule::Trait<_1aab3bdb0_CommonFlag>);
	jule::I32(*_1aab0ade5_Short)(jule::Trait<_1aab3bdb0_CommonFlag>);
	jule::Str(*_1aab3bb29_What)(jule::Trait<_1aab3bdb0_CommonFlag>);
	void(*_1aab3bc6c_Reset)(jule::Trait<_1aab3bdb0_CommonFlag>);
};



inline void _1c62e874e_ready_comptimeRangeKind_0(jule::Trait<_1c62e9057_comptimeRangeKind> _self_, jule::Ptr<_1c6389da6_Var>* _1329_keyA, jule::Ptr<_1c6389da6_Var>* _1346_keyB) {
	_1c62ec599_ready(_self_.safe_ptr<_1c62eb950_comptimeStructFields>(), _1329_keyA, _1346_keyB);
}
inline void _1c62e8b6c_step_comptimeRangeKind_0(jule::Trait<_1c62e9057_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1c6389da6_Var>* _1436_keyA, jule::Ptr<_1c6389da6_Var>* _1453_keyB) {
	_1c62ec9b7_step(_self_.safe_ptr<_1c62eb950_comptimeStructFields>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1c62e8e03_len_comptimeRangeKind_0(jule::Trait<_1c62e9057_comptimeRangeKind> _self_) {
	return _1c62ecc4d_len(_self_.safe_ptr<_1c62eb950_comptimeStructFields>());
}
inline void _1c62e874e_ready_comptimeRangeKind_1(jule::Trait<_1c62e9057_comptimeRangeKind> _self_, jule::Ptr<_1c6389da6_Var>* _1329_keyA, jule::Ptr<_1c6389da6_Var>* _1346_keyB) {
	_1c6300855_ready(_self_.safe_ptr<_1c62eec1c_comptimeStatics>(), _1329_keyA, _1346_keyB);
}
inline void _1c62e8b6c_step_comptimeRangeKind_1(jule::Trait<_1c62e9057_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1c6389da6_Var>* _1436_keyA, jule::Ptr<_1c6389da6_Var>* _1453_keyB) {
	_1c6300c73_step(_self_.safe_ptr<_1c62eec1c_comptimeStatics>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1c62e8e03_len_comptimeRangeKind_1(jule::Trait<_1c62e9057_comptimeRangeKind> _self_) {
	return _1c6301009_len(_self_.safe_ptr<_1c62eec1c_comptimeStatics>());
}
inline void _1c62e874e_ready_comptimeRangeKind_2(jule::Trait<_1c62e9057_comptimeRangeKind> _self_, jule::Ptr<_1c6389da6_Var>* _1329_keyA, jule::Ptr<_1c6389da6_Var>* _1346_keyB) {
	_1c63032e7_ready(_self_.safe_ptr<_1c6302626_comptimeEnumFields>(), _1329_keyA, _1346_keyB);
}
inline void _1c62e8b6c_step_comptimeRangeKind_2(jule::Trait<_1c62e9057_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1c6389da6_Var>* _1436_keyA, jule::Ptr<_1c6389da6_Var>* _1453_keyB) {
	_1c6303715_step(_self_.safe_ptr<_1c6302626_comptimeEnumFields>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1c62e8e03_len_comptimeRangeKind_2(jule::Trait<_1c62e9057_comptimeRangeKind> _self_) {
	return _1c630399b_len(_self_.safe_ptr<_1c6302626_comptimeEnumFields>());
}
inline void _1c62e874e_ready_comptimeRangeKind_3(jule::Trait<_1c62e9057_comptimeRangeKind> _self_, jule::Ptr<_1c6389da6_Var>* _1329_keyA, jule::Ptr<_1c6389da6_Var>* _1346_keyB) {
	_1c6306b58_ready(_self_.safe_ptr<_1c6306020_comptimeParams>(), _1329_keyA, _1346_keyB);
}
inline void _1c62e8b6c_step_comptimeRangeKind_3(jule::Trait<_1c62e9057_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1c6389da6_Var>* _1436_keyA, jule::Ptr<_1c6389da6_Var>* _1453_keyB) {
	_1c6307076_step(_self_.safe_ptr<_1c6306020_comptimeParams>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1c62e8e03_len_comptimeRangeKind_3(jule::Trait<_1c62e9057_comptimeRangeKind> _self_) {
	return _1c630730c_len(_self_.safe_ptr<_1c6306020_comptimeParams>());
}
inline void _1c62e874e_ready_comptimeRangeKind_4(jule::Trait<_1c62e9057_comptimeRangeKind> _self_, jule::Ptr<_1c6389da6_Var>* _1329_keyA, jule::Ptr<_1c6389da6_Var>* _1346_keyB) {
	_1c6308253_ready(_self_.safe_ptr<_1c630761a_comptimeTypeInfos>(), _1329_keyA, _1346_keyB);
}
inline void _1c62e8b6c_step_comptimeRangeKind_4(jule::Trait<_1c62e9057_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1c6389da6_Var>* _1436_keyA, jule::Ptr<_1c6389da6_Var>* _1453_keyB) {
	_1c6308671_step(_self_.safe_ptr<_1c630761a_comptimeTypeInfos>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1c62e8e03_len_comptimeRangeKind_4(jule::Trait<_1c62e9057_comptimeRangeKind> _self_) {
	return _1c6308907_len(_self_.safe_ptr<_1c630761a_comptimeTypeInfos>());
}
inline void _1c62e874e_ready_comptimeRangeKind_5(jule::Trait<_1c62e9057_comptimeRangeKind> _self_, jule::Ptr<_1c6389da6_Var>* _1329_keyA, jule::Ptr<_1c6389da6_Var>* _1346_keyB) {
	_1c63136ae_ready(_self_.safe_ptr<_1c6312a76_comptimeFiles>(), _1329_keyA, _1346_keyB);
}
inline void _1c62e8b6c_step_comptimeRangeKind_5(jule::Trait<_1c62e9057_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1c6389da6_Var>* _1436_keyA, jule::Ptr<_1c6389da6_Var>* _1453_keyB) {
	_1c6313acc_step(_self_.safe_ptr<_1c6312a76_comptimeFiles>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1c62e8e03_len_comptimeRangeKind_5(jule::Trait<_1c62e9057_comptimeRangeKind> _self_) {
	return _1c6313d63_len(_self_.safe_ptr<_1c6312a76_comptimeFiles>());
}
inline void _1c63428a8_SetModPath_Importer_0(jule::Trait<_1c6343ac9_Importer> _self_, jule::Str _1729_path) {
	_1a9ed4357_SetModPath(_self_.safe_ptr<_1a9ed3785_JuleImporter>(), _1729_path);
}
inline jule::Str _1c6342b3e_GetModPath_Importer_0(jule::Trait<_1c6343ac9_Importer> _self_) {
	return _1a9ed45dd_GetModPath(_self_.safe_ptr<_1a9ed3785_JuleImporter>());
}
inline jule::Str _1c6342e80_ModById_Importer_0(jule::Trait<_1c6343ac9_Importer> _self_, jule::I64 _2522_id) {
	return _1a9ed492e_ModById(_self_.safe_ptr<_1a9ed3785_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_1c63469de_ImportInfo> _1c63432c1_GetImport_Importer_0(jule::Trait<_1c6343ac9_Importer> _self_, jule::Str _3128_path) {
	return _1a9ed4c70_GetImport(_self_.safe_ptr<_1a9ed3785_JuleImporter>(), _3128_path);
}
inline __jule_tuple_sx_1c6297379_Ast__jule_tuple_s_221968cb9_Log _1c63436bc_ImportPackage_Importer_0(jule::Trait<_1c6343ac9_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _1a9ed516b_ImportPackage(_self_.safe_ptr<_1a9ed3785_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _1c6343975_Imported_Importer_0(jule::Trait<_1c6343ac9_Importer> _self_, jule::Ptr<_1c63469de_ImportInfo> _4131__0) {
	_1a9ed5424_Imported(_self_.safe_ptr<_1a9ed3785_JuleImporter>(), _4131__0);
}
inline jule::Str _1c641cac6_Str_Kind_0(jule::Trait<_1c641d06b_Kind> _self_) {
	return _1c62bce3d_Str(_self_.safe_ptr<_1c62bcab9_StructIns>());
}
inline jule::Bool _1c641ce17_Equal_Kind_0(jule::Trait<_1c641d06b_Kind> _self_, jule::Ptr<_1c641d522_TypeKind> _5621_other) {
	return _1c62bd27e_Equal(_self_.data.as<_1c62bcab9_StructIns>(), _5621_other);
}
inline jule::Str _1c641cac6_Str_Kind_1(jule::Trait<_1c641d06b_Kind> _self_) {
	return _1c62d2e42_Str(_self_.safe_ptr<_1c62d2b01_FnIns>());
}
inline jule::Bool _1c641ce17_Equal_Kind_1(jule::Trait<_1c641d06b_Kind> _self_, jule::Ptr<_1c641d522_TypeKind> _5621_other) {
	return _1c62d3283_Equal(_self_.data.as<_1c62d2b01_FnIns>(), _5621_other);
}
inline jule::Str _1c641cac6_Str_Kind_2(jule::Trait<_1c641d06b_Kind> _self_) {
	return _1c62e335e_Str(_self_.safe_ptr<_1c62e2e96_Trait>());
}
inline jule::Bool _1c641ce17_Equal_Kind_2(jule::Trait<_1c641d06b_Kind> _self_, jule::Ptr<_1c641d522_TypeKind> _5621_other) {
	return _1c62e36a0_Equal(_self_.data.as<_1c62e2e96_Trait>(), _5621_other);
}
inline jule::Str _1c641cac6_Str_Kind_3(jule::Trait<_1c641d06b_Kind> _self_) {
	return _1c62e5a15_Str(_self_.safe_ptr<_1c62e5691_Enum>());
}
inline jule::Bool _1c641ce17_Equal_Kind_3(jule::Trait<_1c641d06b_Kind> _self_, jule::Ptr<_1c641d522_TypeKind> _5621_other) {
	return _1c62e5d56_Equal(_self_.data.as<_1c62e5691_Enum>(), _5621_other);
}
inline jule::Str _1c641cac6_Str_Kind_4(jule::Trait<_1c641d06b_Kind> _self_) {
	return _1c62e71dc_Str(_self_.safe_ptr<_1c62e6d9b_TypeEnum>());
}
inline jule::Bool _1c641ce17_Equal_Kind_4(jule::Trait<_1c641d06b_Kind> _self_, jule::Ptr<_1c641d522_TypeKind> _5621_other) {
	return _1c62e752d_Equal(_self_.data.as<_1c62e6d9b_TypeEnum>(), _5621_other);
}
inline jule::Str _1c641cac6_Str_Kind_5(jule::Trait<_1c641d06b_Kind> _self_) {
	return _1c62e960c_Str(_self_.safe_ptr<_1c62e9244_comptimeRange>());
}
inline jule::Bool _1c641ce17_Equal_Kind_5(jule::Trait<_1c641d06b_Kind> _self_, jule::Ptr<_1c641d522_TypeKind> _5621_other) {
	return _1c62e994d_Equal(_self_.data.as<_1c62e9244_comptimeRange>(), _5621_other);
}
inline jule::Str _1c641cac6_Str_Kind_6(jule::Trait<_1c641d06b_Kind> _self_) {
	return _1c62ea124_Str(_self_.safe_ptr<_1c62e9ca0_comptimeStructField>());
}
inline jule::Bool _1c641ce17_Equal_Kind_6(jule::Trait<_1c641d06b_Kind> _self_, jule::Ptr<_1c641d522_TypeKind> _5621_other) {
	return _1c62ea465_Equal(_self_.data.as<_1c62e9ca0_comptimeStructField>(), _5621_other);
}
inline jule::Str _1c641cac6_Str_Kind_7(jule::Trait<_1c641d06b_Kind> _self_) {
	return _1c62ebcd5_Str(_self_.safe_ptr<_1c62eb950_comptimeStructFields>());
}
inline jule::Bool _1c641ce17_Equal_Kind_7(jule::Trait<_1c641d06b_Kind> _self_, jule::Ptr<_1c641d522_TypeKind> _5621_other) {
	return _1c62ec126_Equal(_self_.data.as<_1c62eb950_comptimeStructFields>(), _5621_other);
}
inline jule::Str _1c641cac6_Str_Kind_8(jule::Trait<_1c641d06b_Kind> _self_) {
	return _1c62ed3d0_Str(_self_.safe_ptr<_1c62ed05b_comptimeStatic>());
}
inline jule::Bool _1c641ce17_Equal_Kind_8(jule::Trait<_1c641d06b_Kind> _self_, jule::Ptr<_1c641d522_TypeKind> _5621_other) {
	return _1c62ed721_Equal(_self_.data.as<_1c62ed05b_comptimeStatic>(), _5621_other);
}
inline jule::Str _1c641cac6_Str_Kind_9(jule::Trait<_1c641d06b_Kind> _self_) {
	return _1c6300091_Str(_self_.safe_ptr<_1c62eec1c_comptimeStatics>());
}
inline jule::Bool _1c641ce17_Equal_Kind_9(jule::Trait<_1c641d06b_Kind> _self_, jule::Ptr<_1c641d522_TypeKind> _5621_other) {
	return _1c63003d2_Equal(_self_.data.as<_1c62eec1c_comptimeStatics>(), _5621_other);
}
inline jule::Str _1c641cac6_Str_Kind_10(jule::Trait<_1c641d06b_Kind> _self_) {
	return _1c630168b_Str(_self_.safe_ptr<_1c6301317_comptimeEnumField>());
}
inline jule::Bool _1c641ce17_Equal_Kind_10(jule::Trait<_1c641d06b_Kind> _self_, jule::Ptr<_1c641d522_TypeKind> _5621_other) {
	return _1c63019cc_Equal(_self_.data.as<_1c6301317_comptimeEnumField>(), _5621_other);
}
inline jule::Str _1c641cac6_Str_Kind_11(jule::Trait<_1c641d06b_Kind> _self_) {
	return _1c6302aaa_Str(_self_.safe_ptr<_1c6302626_comptimeEnumFields>());
}
inline jule::Bool _1c641ce17_Equal_Kind_11(jule::Trait<_1c641d06b_Kind> _self_, jule::Ptr<_1c641d522_TypeKind> _5621_other) {
	return _1c6302deb_Equal(_self_.data.as<_1c6302626_comptimeEnumFields>(), _5621_other);
}
inline jule::Str _1c641cac6_Str_Kind_12(jule::Trait<_1c641d06b_Kind> _self_) {
	return _1c630412d_Str(_self_.safe_ptr<_1c6303ca9_comptimeParam>());
}
inline jule::Bool _1c641ce17_Equal_Kind_12(jule::Trait<_1c641d06b_Kind> _self_, jule::Ptr<_1c641d522_TypeKind> _5621_other) {
	return _1c630446e_Equal(_self_.data.as<_1c6303ca9_comptimeParam>(), _5621_other);
}
inline jule::Str _1c641cac6_Str_Kind_13(jule::Trait<_1c641d06b_Kind> _self_) {
	return _1c6306394_Str(_self_.safe_ptr<_1c6306020_comptimeParams>());
}
inline jule::Bool _1c641ce17_Equal_Kind_13(jule::Trait<_1c641d06b_Kind> _self_, jule::Ptr<_1c641d522_TypeKind> _5621_other) {
	return _1c63066d5_Equal(_self_.data.as<_1c6306020_comptimeParams>(), _5621_other);
}
inline jule::Str _1c641cac6_Str_Kind_14(jule::Trait<_1c641d06b_Kind> _self_) {
	return _1c630798e_Str(_self_.safe_ptr<_1c630761a_comptimeTypeInfos>());
}
inline jule::Bool _1c641ce17_Equal_Kind_14(jule::Trait<_1c641d06b_Kind> _self_, jule::Ptr<_1c641d522_TypeKind> _5621_other) {
	return _1c6307cd0_Equal(_self_.data.as<_1c630761a_comptimeTypeInfos>(), _5621_other);
}
inline jule::Str _1c641cac6_Str_Kind_15(jule::Trait<_1c641d06b_Kind> _self_) {
	return _1c6309089_Str(_self_.safe_ptr<_1c6308c15_comptimeTypeInfo>());
}
inline jule::Bool _1c641ce17_Equal_Kind_15(jule::Trait<_1c641d06b_Kind> _self_, jule::Ptr<_1c641d522_TypeKind> _5621_other) {
	return _1c63093ca_Equal(_self_.data.as<_1c6308c15_comptimeTypeInfo>(), _5621_other);
}
inline jule::Str _1c641cac6_Str_Kind_16(jule::Trait<_1c641d06b_Kind> _self_) {
	return _1c631059b_Str(_self_.safe_ptr<_1c6310227_comptimeValue>());
}
inline jule::Bool _1c641ce17_Equal_Kind_16(jule::Trait<_1c641d06b_Kind> _self_, jule::Ptr<_1c641d522_TypeKind> _5621_other) {
	return _1c63108dc_Equal(_self_.data.as<_1c6310227_comptimeValue>(), _5621_other);
}
inline jule::Str _1c641cac6_Str_Kind_17(jule::Trait<_1c641d06b_Kind> _self_) {
	return _1c6312dea_Str(_self_.safe_ptr<_1c6312a76_comptimeFiles>());
}
inline jule::Bool _1c641ce17_Equal_Kind_17(jule::Trait<_1c641d06b_Kind> _self_, jule::Ptr<_1c641d522_TypeKind> _5621_other) {
	return _1c631323b_Equal(_self_.data.as<_1c6312a76_comptimeFiles>(), _5621_other);
}
inline jule::Str _1c641cac6_Str_Kind_18(jule::Trait<_1c641d06b_Kind> _self_) {
	return _1c63144e5_Str(_self_.safe_ptr<_1c6314171_comptimeFile>());
}
inline jule::Bool _1c641ce17_Equal_Kind_18(jule::Trait<_1c641d06b_Kind> _self_, jule::Ptr<_1c641d522_TypeKind> _5621_other) {
	return _1c6314836_Equal(_self_.data.as<_1c6314171_comptimeFile>(), _5621_other);
}
inline jule::Str _1c641cac6_Str_Kind_19(jule::Trait<_1c641d06b_Kind> _self_) {
	return _1c641d8da_Str(_self_.safe_ptr<_1c641d522_TypeKind>());
}
inline jule::Bool _1c641ce17_Equal_Kind_19(jule::Trait<_1c641d06b_Kind> _self_, jule::Ptr<_1c641d522_TypeKind> _5621_other) {
	return _1c641dc2b_Equal(_self_.data.as<_1c641d522_TypeKind>(), _5621_other);
}
inline jule::Str _1c641cac6_Str_Kind_20(jule::Trait<_1c641d06b_Kind> _self_) {
	return _1c642643c_Str(_self_.safe_ptr<_1c64260eb_Prim>());
}
inline jule::Bool _1c641ce17_Equal_Kind_20(jule::Trait<_1c641d06b_Kind> _self_, jule::Ptr<_1c641d522_TypeKind> _5621_other) {
	return _1c642677d_Equal(_self_.data.as<_1c64260eb_Prim>(), _5621_other);
}
inline jule::Str _1c641cac6_Str_Kind_21(jule::Trait<_1c641d06b_Kind> _self_) {
	return _1c6429e9b_Str(_self_.safe_ptr<_1c6429b27_Sptr>());
}
inline jule::Bool _1c641ce17_Equal_Kind_21(jule::Trait<_1c641d06b_Kind> _self_, jule::Ptr<_1c641d522_TypeKind> _5621_other) {
	return _1c642a2dc_Equal(_self_.data.as<_1c6429b27_Sptr>(), _5621_other);
}
inline jule::Str _1c641cac6_Str_Kind_22(jule::Trait<_1c641d06b_Kind> _self_) {
	return _1c642aa7e_Str(_self_.safe_ptr<_1c642a5ea_Slc>());
}
inline jule::Bool _1c641ce17_Equal_Kind_22(jule::Trait<_1c641d06b_Kind> _self_, jule::Ptr<_1c641d522_TypeKind> _5621_other) {
	return _1c642adc0_Equal(_self_.data.as<_1c642a5ea_Slc>(), _5621_other);
}
inline jule::Str _1c641cac6_Str_Kind_23(jule::Trait<_1c641d06b_Kind> _self_) {
	return _1c642b563_Str(_self_.safe_ptr<_1c642b1de_Tuple>());
}
inline jule::Bool _1c641ce17_Equal_Kind_23(jule::Trait<_1c641d06b_Kind> _self_, jule::Ptr<_1c641d522_TypeKind> _5621_other) {
	return _1c642b8a4_Equal(_self_.data.as<_1c642b1de_Tuple>(), _5621_other);
}
inline jule::Str _1c641cac6_Str_Kind_24(jule::Trait<_1c641d06b_Kind> _self_) {
	return _1c642c113_Str(_self_.safe_ptr<_1c642bc8e_Map>());
}
inline jule::Bool _1c641ce17_Equal_Kind_24(jule::Trait<_1c641d06b_Kind> _self_, jule::Ptr<_1c641d522_TypeKind> _5621_other) {
	return _1c642c454_Equal(_self_.data.as<_1c642bc8e_Map>(), _5621_other);
}
inline jule::Str _1c641cac6_Str_Kind_25(jule::Trait<_1c641d06b_Kind> _self_) {
	return _1c642cc90_Str(_self_.safe_ptr<_1c642c91b_Arr>());
}
inline jule::Bool _1c641ce17_Equal_Kind_25(jule::Trait<_1c641d06b_Kind> _self_, jule::Ptr<_1c641d522_TypeKind> _5621_other) {
	return _1c642d0d1_Equal(_self_.data.as<_1c642c91b_Arr>(), _5621_other);
}
inline jule::Str _1c641cac6_Str_Kind_26(jule::Trait<_1c641d06b_Kind> _self_) {
	return _1c642d763_Str(_self_.safe_ptr<_1c642d3de_Ptr>());
}
inline jule::Bool _1c641ce17_Equal_Kind_26(jule::Trait<_1c641d06b_Kind> _self_, jule::Ptr<_1c641d522_TypeKind> _5621_other) {
	return _1c642daa4_Equal(_self_.data.as<_1c642d3de_Ptr>(), _5621_other);
}
inline jule::Str _1c641cac6_Str_Kind_27(jule::Trait<_1c641d06b_Kind> _self_) {
	return _1aaab8ac8_Str(_self_.safe_ptr<_1aaab8743_customType>());
}
inline jule::Bool _1c641ce17_Equal_Kind_27(jule::Trait<_1c641d06b_Kind> _self_, jule::Ptr<_1c641d522_TypeKind> _5621_other) {
	return _1aaab8e19_Equal(_self_.data.as<_1aaab8743_customType>(), _5621_other);
}
inline jule::Ptr<_1c63469de_ImportInfo> _1c643b342_SelectPackage_Lookup_0(jule::Trait<_1c643d058_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1c63469de_ImportInfo>)> _932_selector) {
	return _1c6327eed_SelectPackage(_self_.safe_ptr<_1c6327a58_scopeChecker>(), _932_selector);
}
inline jule::Ptr<_1c6389da6_Var> _1c643b73d_FindVar_Lookup_0(jule::Trait<_1c643d058_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1c63283e9_FindVar(_self_.safe_ptr<_1c6327a58_scopeChecker>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1c641c730_TypeAlias> _1c643bb39_FindTypeAlias_Lookup_0(jule::Trait<_1c643d058_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1c63287e5_FindTypeAlias(_self_.safe_ptr<_1c6327a58_scopeChecker>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1c62b9d3b_Struct> _1c643c035_FindStruct_Lookup_0(jule::Trait<_1c643d058_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1c6328be1_FindStruct(_self_.safe_ptr<_1c6327a58_scopeChecker>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1c62cebec_Fn> _1c643c431_FindFn_Lookup_0(jule::Trait<_1c643d058_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1c63290dc_FindFn(_self_.safe_ptr<_1c6327a58_scopeChecker>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1c62e2e96_Trait> _1c643c772_FindTrait_Lookup_0(jule::Trait<_1c643d058_Lookup> _self_, jule::Str _2928_ident) {
	return _1c632942d_FindTrait(_self_.safe_ptr<_1c6327a58_scopeChecker>(), _2928_ident);
}
inline jule::Ptr<_1c62e5691_Enum> _1c643cab3_FindEnum_Lookup_0(jule::Trait<_1c643d058_Lookup> _self_, jule::Str _3327_ident) {
	return _1c632976e_FindEnum(_self_.safe_ptr<_1c6327a58_scopeChecker>(), _3327_ident);
}
inline jule::Ptr<_1c62e6d9b_TypeEnum> _1c643ce04_FindTypeEnum_Lookup_0(jule::Trait<_1c643d058_Lookup> _self_, jule::Str _3731_ident) {
	return _1c6329ab0_FindTypeEnum(_self_.safe_ptr<_1c6327a58_scopeChecker>(), _3731_ident);
}
inline jule::Ptr<_1c63469de_ImportInfo> _1c643b342_SelectPackage_Lookup_1(jule::Trait<_1c643d058_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1c63469de_ImportInfo>)> _932_selector) {
	return _1c6346ec8_SelectPackage(_self_.safe_ptr<_1c63469de_ImportInfo>(), _932_selector);
}
inline jule::Ptr<_1c6389da6_Var> _1c643b73d_FindVar_Lookup_1(jule::Trait<_1c643d058_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1c63473c4_FindVar(_self_.safe_ptr<_1c63469de_ImportInfo>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1c641c730_TypeAlias> _1c643bb39_FindTypeAlias_Lookup_1(jule::Trait<_1c643d058_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1c63477c0_FindTypeAlias(_self_.safe_ptr<_1c63469de_ImportInfo>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1c62b9d3b_Struct> _1c643c035_FindStruct_Lookup_1(jule::Trait<_1c643d058_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1c6347bbb_FindStruct(_self_.safe_ptr<_1c63469de_ImportInfo>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1c62cebec_Fn> _1c643c431_FindFn_Lookup_1(jule::Trait<_1c643d058_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1c63480b7_FindFn(_self_.safe_ptr<_1c63469de_ImportInfo>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1c62e2e96_Trait> _1c643c772_FindTrait_Lookup_1(jule::Trait<_1c643d058_Lookup> _self_, jule::Str _2928_ident) {
	return _1c6348408_FindTrait(_self_.safe_ptr<_1c63469de_ImportInfo>(), _2928_ident);
}
inline jule::Ptr<_1c62e5691_Enum> _1c643cab3_FindEnum_Lookup_1(jule::Trait<_1c643d058_Lookup> _self_, jule::Str _3327_ident) {
	return _1c6348749_FindEnum(_self_.safe_ptr<_1c63469de_ImportInfo>(), _3327_ident);
}
inline jule::Ptr<_1c62e6d9b_TypeEnum> _1c643ce04_FindTypeEnum_Lookup_1(jule::Trait<_1c643d058_Lookup> _self_, jule::Str _3731_ident) {
	return _1c6348a8a_FindTypeEnum(_self_.safe_ptr<_1c63469de_ImportInfo>(), _3731_ident);
}
inline jule::Ptr<_1c63469de_ImportInfo> _1c643b342_SelectPackage_Lookup_2(jule::Trait<_1c643d058_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1c63469de_ImportInfo>)> _932_selector) {
	return _1c6349daa_SelectPackage(_self_.safe_ptr<_1c6349915_Package>(), _932_selector);
}
inline jule::Ptr<_1c6389da6_Var> _1c643b73d_FindVar_Lookup_2(jule::Trait<_1c643d058_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1c634a2a6_FindVar(_self_.safe_ptr<_1c6349915_Package>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1c641c730_TypeAlias> _1c643bb39_FindTypeAlias_Lookup_2(jule::Trait<_1c643d058_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1c634a6a2_FindTypeAlias(_self_.safe_ptr<_1c6349915_Package>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1c62b9d3b_Struct> _1c643c035_FindStruct_Lookup_2(jule::Trait<_1c643d058_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1c634aa9d_FindStruct(_self_.safe_ptr<_1c6349915_Package>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1c62cebec_Fn> _1c643c431_FindFn_Lookup_2(jule::Trait<_1c643d058_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1c634ae99_FindFn(_self_.safe_ptr<_1c6349915_Package>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1c62e2e96_Trait> _1c643c772_FindTrait_Lookup_2(jule::Trait<_1c643d058_Lookup> _self_, jule::Str _2928_ident) {
	return _1c634b2da_FindTrait(_self_.safe_ptr<_1c6349915_Package>(), _2928_ident);
}
inline jule::Ptr<_1c62e5691_Enum> _1c643cab3_FindEnum_Lookup_2(jule::Trait<_1c643d058_Lookup> _self_, jule::Str _3327_ident) {
	return _1c634b62b_FindEnum(_self_.safe_ptr<_1c6349915_Package>(), _3327_ident);
}
inline jule::Ptr<_1c62e6d9b_TypeEnum> _1c643ce04_FindTypeEnum_Lookup_2(jule::Trait<_1c643d058_Lookup> _self_, jule::Str _3731_ident) {
	return _1c634b96c_FindTypeEnum(_self_.safe_ptr<_1c6349915_Package>(), _3731_ident);
}
inline jule::Ptr<_1c63469de_ImportInfo> _1c643b342_SelectPackage_Lookup_3(jule::Trait<_1c643d058_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1c63469de_ImportInfo>)> _932_selector) {
	return _1c6367e61_SelectPackage(_self_.safe_ptr<_1c63679bb_Sema>(), _932_selector);
}
inline jule::Ptr<_1c6389da6_Var> _1c643b73d_FindVar_Lookup_3(jule::Trait<_1c643d058_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1c636835c_FindVar(_self_.safe_ptr<_1c63679bb_Sema>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1c641c730_TypeAlias> _1c643bb39_FindTypeAlias_Lookup_3(jule::Trait<_1c643d058_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1c6368758_FindTypeAlias(_self_.safe_ptr<_1c63679bb_Sema>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1c62b9d3b_Struct> _1c643c035_FindStruct_Lookup_3(jule::Trait<_1c643d058_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1c6368b54_FindStruct(_self_.safe_ptr<_1c63679bb_Sema>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1c62cebec_Fn> _1c643c431_FindFn_Lookup_3(jule::Trait<_1c643d058_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1c6369050_FindFn(_self_.safe_ptr<_1c63679bb_Sema>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1c62e2e96_Trait> _1c643c772_FindTrait_Lookup_3(jule::Trait<_1c643d058_Lookup> _self_, jule::Str _2928_ident) {
	return _1c6369391_FindTrait(_self_.safe_ptr<_1c63679bb_Sema>(), _2928_ident);
}
inline jule::Ptr<_1c62e5691_Enum> _1c643cab3_FindEnum_Lookup_3(jule::Trait<_1c643d058_Lookup> _self_, jule::Str _3327_ident) {
	return _1c63696d2_FindEnum(_self_.safe_ptr<_1c63679bb_Sema>(), _3327_ident);
}
inline jule::Ptr<_1c62e6d9b_TypeEnum> _1c643ce04_FindTypeEnum_Lookup_3(jule::Trait<_1c643d058_Lookup> _self_, jule::Str _3731_ident) {
	return _1c6369a23_FindTypeEnum(_self_.safe_ptr<_1c63679bb_Sema>(), _3731_ident);
}
inline jule::Ptr<_1c63469de_ImportInfo> _1c643b342_SelectPackage_Lookup_4(jule::Trait<_1c643d058_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1c63469de_ImportInfo>)> _932_selector) {
	return _1c63d861e_SelectPackage(_self_.safe_ptr<_1c63d8135_SymbolTable>(), _932_selector);
}
inline jule::Ptr<_1c6389da6_Var> _1c643b73d_FindVar_Lookup_4(jule::Trait<_1c643d058_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1c63d8a1a_FindVar(_self_.safe_ptr<_1c63d8135_SymbolTable>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1c641c730_TypeAlias> _1c643bb39_FindTypeAlias_Lookup_4(jule::Trait<_1c643d058_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1c63d8e16_FindTypeAlias(_self_.safe_ptr<_1c63d8135_SymbolTable>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1c62b9d3b_Struct> _1c643c035_FindStruct_Lookup_4(jule::Trait<_1c643d058_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1c63d9312_FindStruct(_self_.safe_ptr<_1c63d8135_SymbolTable>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1c62cebec_Fn> _1c643c431_FindFn_Lookup_4(jule::Trait<_1c643d058_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1c63d970d_FindFn(_self_.safe_ptr<_1c63d8135_SymbolTable>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1c62e2e96_Trait> _1c643c772_FindTrait_Lookup_4(jule::Trait<_1c643d058_Lookup> _self_, jule::Str _2928_ident) {
	return _1c63d9a4e_FindTrait(_self_.safe_ptr<_1c63d8135_SymbolTable>(), _2928_ident);
}
inline jule::Ptr<_1c62e5691_Enum> _1c643cab3_FindEnum_Lookup_4(jule::Trait<_1c643d058_Lookup> _self_, jule::Str _3327_ident) {
	return _1c63d9d90_FindEnum(_self_.safe_ptr<_1c63d8135_SymbolTable>(), _3327_ident);
}
inline jule::Ptr<_1c62e6d9b_TypeEnum> _1c643ce04_FindTypeEnum_Lookup_4(jule::Trait<_1c643d058_Lookup> _self_, jule::Str _3731_ident) {
	return _1c63da1d1_FindTypeEnum(_self_.safe_ptr<_1c63d8135_SymbolTable>(), _3731_ident);
}
inline jule::Str _1aab0ac4c_Name_CommonFlag_0(jule::Trait<_1aab3bdb0_CommonFlag> _self_) {
	return _1acbada67_Name(_self_.safe_ptr<_1acbadc21_Flag>());
}
inline jule::I32 _1aab0ade5_Short_CommonFlag_0(jule::Trait<_1aab3bdb0_CommonFlag> _self_) {
	return _1acbae293_Short(_self_.safe_ptr<_1acbadc21_Flag>());
}
inline jule::Str _1aab3bb29_What_CommonFlag_0(jule::Trait<_1aab3bdb0_CommonFlag> _self_) {
	return _1acbae00c_What(_self_.safe_ptr<_1acbadc21_Flag>());
}
inline void _1aab3bc6c_Reset_CommonFlag_0(jule::Trait<_1aab3bdb0_CommonFlag> _self_) {
	_1acbae150_Reset(_self_.safe_ptr<_1acbadc21_Flag>());
}
inline jule::Str _1aab0ac4c_Name_CommonFlag_1(jule::Trait<_1aab3bdb0_CommonFlag> _self_) {
	return _1acbb21b9_Name(_self_.safe_ptr<_1acbb2582_Flag>());
}
inline jule::I32 _1aab0ade5_Short_CommonFlag_1(jule::Trait<_1aab3bdb0_CommonFlag> _self_) {
	return _1acbb29b1_Short(_self_.safe_ptr<_1acbb2582_Flag>());
}
inline jule::Str _1aab3bb29_What_CommonFlag_1(jule::Trait<_1aab3bdb0_CommonFlag> _self_) {
	return _1acbb230c_What(_self_.safe_ptr<_1acbb2582_Flag>());
}
inline void _1aab3bc6c_Reset_CommonFlag_1(jule::Trait<_1aab3bdb0_CommonFlag> _self_) {
	_1acbb286d_Reset(_self_.safe_ptr<_1acbb2582_Flag>());
}
inline jule::Str _1aab0ac4c_Name_CommonFlag_2(jule::Trait<_1aab3bdb0_CommonFlag> _self_) {
	return _1acbb58b5_Name(_self_.safe_ptr<_1acbb5c7d_Flag>());
}
inline jule::I32 _1aab0ade5_Short_CommonFlag_2(jule::Trait<_1aab3bdb0_CommonFlag> _self_) {
	return _1acbb61ac_Short(_self_.safe_ptr<_1acbb5c7d_Flag>());
}
inline jule::Str _1aab3bb29_What_CommonFlag_2(jule::Trait<_1aab3bdb0_CommonFlag> _self_) {
	return _1acbb5a08_What(_self_.safe_ptr<_1acbb5c7d_Flag>());
}
inline void _1aab3bc6c_Reset_CommonFlag_2(jule::Trait<_1aab3bdb0_CommonFlag> _self_) {
	_1acbb6069_Reset(_self_.safe_ptr<_1acbb5c7d_Flag>());
}
inline jule::Str _1aab0ac4c_Name_CommonFlag_3(jule::Trait<_1aab3bdb0_CommonFlag> _self_) {
	return _1acbb9105_Name(_self_.safe_ptr<_1acbb94bd_Flag>());
}
inline jule::I32 _1aab0ade5_Short_CommonFlag_3(jule::Trait<_1aab3bdb0_CommonFlag> _self_) {
	return _1acbb98ec_Short(_self_.safe_ptr<_1acbb94bd_Flag>());
}
inline jule::Str _1aab3bb29_What_CommonFlag_3(jule::Trait<_1aab3bdb0_CommonFlag> _self_) {
	return _1acbb9248_What(_self_.safe_ptr<_1acbb94bd_Flag>());
}
inline void _1aab3bc6c_Reset_CommonFlag_3(jule::Trait<_1aab3bdb0_CommonFlag> _self_) {
	_1acbb97a9_Reset(_self_.safe_ptr<_1acbb94bd_Flag>());
}
inline jule::Str _1aab0ac4c_Name_CommonFlag_4(jule::Trait<_1aab3bdb0_CommonFlag> _self_) {
	return _1acbbc801_Name(_self_.safe_ptr<_1acbbcbb9_Flag>());
}
inline jule::I32 _1aab0ade5_Short_CommonFlag_4(jule::Trait<_1aab3bdb0_CommonFlag> _self_) {
	return _1acbbd0e8_Short(_self_.safe_ptr<_1acbbcbb9_Flag>());
}
inline jule::Str _1aab3bb29_What_CommonFlag_4(jule::Trait<_1aab3bdb0_CommonFlag> _self_) {
	return _1acbbc944_What(_self_.safe_ptr<_1acbbcbb9_Flag>());
}
inline void _1aab3bc6c_Reset_CommonFlag_4(jule::Trait<_1aab3bdb0_CommonFlag> _self_) {
	_1acbbcea5_Reset(_self_.safe_ptr<_1acbbcbb9_Flag>());
}


static _1c62e9057_comptimeRangeKindMptrData _1c62e9057_comptimeRangeKind_mptr_data[] = {
	{
		._1c62e874e_ready=_1c62e874e_ready_comptimeRangeKind_0,
		._1c62e8b6c_step=_1c62e8b6c_step_comptimeRangeKind_0,
		._1c62e8e03_len=_1c62e8e03_len_comptimeRangeKind_0,
	},
	{
		._1c62e874e_ready=_1c62e874e_ready_comptimeRangeKind_1,
		._1c62e8b6c_step=_1c62e8b6c_step_comptimeRangeKind_1,
		._1c62e8e03_len=_1c62e8e03_len_comptimeRangeKind_1,
	},
	{
		._1c62e874e_ready=_1c62e874e_ready_comptimeRangeKind_2,
		._1c62e8b6c_step=_1c62e8b6c_step_comptimeRangeKind_2,
		._1c62e8e03_len=_1c62e8e03_len_comptimeRangeKind_2,
	},
	{
		._1c62e874e_ready=_1c62e874e_ready_comptimeRangeKind_3,
		._1c62e8b6c_step=_1c62e8b6c_step_comptimeRangeKind_3,
		._1c62e8e03_len=_1c62e8e03_len_comptimeRangeKind_3,
	},
	{
		._1c62e874e_ready=_1c62e874e_ready_comptimeRangeKind_4,
		._1c62e8b6c_step=_1c62e8b6c_step_comptimeRangeKind_4,
		._1c62e8e03_len=_1c62e8e03_len_comptimeRangeKind_4,
	},
	{
		._1c62e874e_ready=_1c62e874e_ready_comptimeRangeKind_5,
		._1c62e8b6c_step=_1c62e8b6c_step_comptimeRangeKind_5,
		._1c62e8e03_len=_1c62e8e03_len_comptimeRangeKind_5,
	},
};
static _1c6343ac9_ImporterMptrData _1c6343ac9_Importer_mptr_data[] = {
	{
		._1c63428a8_SetModPath=_1c63428a8_SetModPath_Importer_0,
		._1c6342b3e_GetModPath=_1c6342b3e_GetModPath_Importer_0,
		._1c6342e80_ModById=_1c6342e80_ModById_Importer_0,
		._1c63432c1_GetImport=_1c63432c1_GetImport_Importer_0,
		._1c63436bc_ImportPackage=_1c63436bc_ImportPackage_Importer_0,
		._1c6343975_Imported=_1c6343975_Imported_Importer_0,
	},
};
static _1c641d06b_KindMptrData _1c641d06b_Kind_mptr_data[] = {
	{
		._1c641cac6_Str=_1c641cac6_Str_Kind_0,
		._1c641ce17_Equal=_1c641ce17_Equal_Kind_0,
	},
	{
		._1c641cac6_Str=_1c641cac6_Str_Kind_1,
		._1c641ce17_Equal=_1c641ce17_Equal_Kind_1,
	},
	{
		._1c641cac6_Str=_1c641cac6_Str_Kind_2,
		._1c641ce17_Equal=_1c641ce17_Equal_Kind_2,
	},
	{
		._1c641cac6_Str=_1c641cac6_Str_Kind_3,
		._1c641ce17_Equal=_1c641ce17_Equal_Kind_3,
	},
	{
		._1c641cac6_Str=_1c641cac6_Str_Kind_4,
		._1c641ce17_Equal=_1c641ce17_Equal_Kind_4,
	},
	{
		._1c641cac6_Str=_1c641cac6_Str_Kind_5,
		._1c641ce17_Equal=_1c641ce17_Equal_Kind_5,
	},
	{
		._1c641cac6_Str=_1c641cac6_Str_Kind_6,
		._1c641ce17_Equal=_1c641ce17_Equal_Kind_6,
	},
	{
		._1c641cac6_Str=_1c641cac6_Str_Kind_7,
		._1c641ce17_Equal=_1c641ce17_Equal_Kind_7,
	},
	{
		._1c641cac6_Str=_1c641cac6_Str_Kind_8,
		._1c641ce17_Equal=_1c641ce17_Equal_Kind_8,
	},
	{
		._1c641cac6_Str=_1c641cac6_Str_Kind_9,
		._1c641ce17_Equal=_1c641ce17_Equal_Kind_9,
	},
	{
		._1c641cac6_Str=_1c641cac6_Str_Kind_10,
		._1c641ce17_Equal=_1c641ce17_Equal_Kind_10,
	},
	{
		._1c641cac6_Str=_1c641cac6_Str_Kind_11,
		._1c641ce17_Equal=_1c641ce17_Equal_Kind_11,
	},
	{
		._1c641cac6_Str=_1c641cac6_Str_Kind_12,
		._1c641ce17_Equal=_1c641ce17_Equal_Kind_12,
	},
	{
		._1c641cac6_Str=_1c641cac6_Str_Kind_13,
		._1c641ce17_Equal=_1c641ce17_Equal_Kind_13,
	},
	{
		._1c641cac6_Str=_1c641cac6_Str_Kind_14,
		._1c641ce17_Equal=_1c641ce17_Equal_Kind_14,
	},
	{
		._1c641cac6_Str=_1c641cac6_Str_Kind_15,
		._1c641ce17_Equal=_1c641ce17_Equal_Kind_15,
	},
	{
		._1c641cac6_Str=_1c641cac6_Str_Kind_16,
		._1c641ce17_Equal=_1c641ce17_Equal_Kind_16,
	},
	{
		._1c641cac6_Str=_1c641cac6_Str_Kind_17,
		._1c641ce17_Equal=_1c641ce17_Equal_Kind_17,
	},
	{
		._1c641cac6_Str=_1c641cac6_Str_Kind_18,
		._1c641ce17_Equal=_1c641ce17_Equal_Kind_18,
	},
	{
		._1c641cac6_Str=_1c641cac6_Str_Kind_19,
		._1c641ce17_Equal=_1c641ce17_Equal_Kind_19,
	},
	{
		._1c641cac6_Str=_1c641cac6_Str_Kind_20,
		._1c641ce17_Equal=_1c641ce17_Equal_Kind_20,
	},
	{
		._1c641cac6_Str=_1c641cac6_Str_Kind_21,
		._1c641ce17_Equal=_1c641ce17_Equal_Kind_21,
	},
	{
		._1c641cac6_Str=_1c641cac6_Str_Kind_22,
		._1c641ce17_Equal=_1c641ce17_Equal_Kind_22,
	},
	{
		._1c641cac6_Str=_1c641cac6_Str_Kind_23,
		._1c641ce17_Equal=_1c641ce17_Equal_Kind_23,
	},
	{
		._1c641cac6_Str=_1c641cac6_Str_Kind_24,
		._1c641ce17_Equal=_1c641ce17_Equal_Kind_24,
	},
	{
		._1c641cac6_Str=_1c641cac6_Str_Kind_25,
		._1c641ce17_Equal=_1c641ce17_Equal_Kind_25,
	},
	{
		._1c641cac6_Str=_1c641cac6_Str_Kind_26,
		._1c641ce17_Equal=_1c641ce17_Equal_Kind_26,
	},
	{
		._1c641cac6_Str=_1c641cac6_Str_Kind_27,
		._1c641ce17_Equal=_1c641ce17_Equal_Kind_27,
	},
};
static _1c643d058_LookupMptrData _1c643d058_Lookup_mptr_data[] = {
	{
		._1c643b342_SelectPackage=_1c643b342_SelectPackage_Lookup_0,
		._1c643b73d_FindVar=_1c643b73d_FindVar_Lookup_0,
		._1c643bb39_FindTypeAlias=_1c643bb39_FindTypeAlias_Lookup_0,
		._1c643c035_FindStruct=_1c643c035_FindStruct_Lookup_0,
		._1c643c431_FindFn=_1c643c431_FindFn_Lookup_0,
		._1c643c772_FindTrait=_1c643c772_FindTrait_Lookup_0,
		._1c643cab3_FindEnum=_1c643cab3_FindEnum_Lookup_0,
		._1c643ce04_FindTypeEnum=_1c643ce04_FindTypeEnum_Lookup_0,
	},
	{
		._1c643b342_SelectPackage=_1c643b342_SelectPackage_Lookup_1,
		._1c643b73d_FindVar=_1c643b73d_FindVar_Lookup_1,
		._1c643bb39_FindTypeAlias=_1c643bb39_FindTypeAlias_Lookup_1,
		._1c643c035_FindStruct=_1c643c035_FindStruct_Lookup_1,
		._1c643c431_FindFn=_1c643c431_FindFn_Lookup_1,
		._1c643c772_FindTrait=_1c643c772_FindTrait_Lookup_1,
		._1c643cab3_FindEnum=_1c643cab3_FindEnum_Lookup_1,
		._1c643ce04_FindTypeEnum=_1c643ce04_FindTypeEnum_Lookup_1,
	},
	{
		._1c643b342_SelectPackage=_1c643b342_SelectPackage_Lookup_2,
		._1c643b73d_FindVar=_1c643b73d_FindVar_Lookup_2,
		._1c643bb39_FindTypeAlias=_1c643bb39_FindTypeAlias_Lookup_2,
		._1c643c035_FindStruct=_1c643c035_FindStruct_Lookup_2,
		._1c643c431_FindFn=_1c643c431_FindFn_Lookup_2,
		._1c643c772_FindTrait=_1c643c772_FindTrait_Lookup_2,
		._1c643cab3_FindEnum=_1c643cab3_FindEnum_Lookup_2,
		._1c643ce04_FindTypeEnum=_1c643ce04_FindTypeEnum_Lookup_2,
	},
	{
		._1c643b342_SelectPackage=_1c643b342_SelectPackage_Lookup_3,
		._1c643b73d_FindVar=_1c643b73d_FindVar_Lookup_3,
		._1c643bb39_FindTypeAlias=_1c643bb39_FindTypeAlias_Lookup_3,
		._1c643c035_FindStruct=_1c643c035_FindStruct_Lookup_3,
		._1c643c431_FindFn=_1c643c431_FindFn_Lookup_3,
		._1c643c772_FindTrait=_1c643c772_FindTrait_Lookup_3,
		._1c643cab3_FindEnum=_1c643cab3_FindEnum_Lookup_3,
		._1c643ce04_FindTypeEnum=_1c643ce04_FindTypeEnum_Lookup_3,
	},
	{
		._1c643b342_SelectPackage=_1c643b342_SelectPackage_Lookup_4,
		._1c643b73d_FindVar=_1c643b73d_FindVar_Lookup_4,
		._1c643bb39_FindTypeAlias=_1c643bb39_FindTypeAlias_Lookup_4,
		._1c643c035_FindStruct=_1c643c035_FindStruct_Lookup_4,
		._1c643c431_FindFn=_1c643c431_FindFn_Lookup_4,
		._1c643c772_FindTrait=_1c643c772_FindTrait_Lookup_4,
		._1c643cab3_FindEnum=_1c643cab3_FindEnum_Lookup_4,
		._1c643ce04_FindTypeEnum=_1c643ce04_FindTypeEnum_Lookup_4,
	},
};
static _1aab3bdb0_CommonFlagMptrData _1aab3bdb0_CommonFlag_mptr_data[] = {
	{
		._1aab0ac4c_Name=_1aab0ac4c_Name_CommonFlag_0,
		._1aab0ade5_Short=_1aab0ade5_Short_CommonFlag_0,
		._1aab3bb29_What=_1aab3bb29_What_CommonFlag_0,
		._1aab3bc6c_Reset=_1aab3bc6c_Reset_CommonFlag_0,
	},
	{
		._1aab0ac4c_Name=_1aab0ac4c_Name_CommonFlag_1,
		._1aab0ade5_Short=_1aab0ade5_Short_CommonFlag_1,
		._1aab3bb29_What=_1aab3bb29_What_CommonFlag_1,
		._1aab3bc6c_Reset=_1aab3bc6c_Reset_CommonFlag_1,
	},
	{
		._1aab0ac4c_Name=_1aab0ac4c_Name_CommonFlag_2,
		._1aab0ade5_Short=_1aab0ade5_Short_CommonFlag_2,
		._1aab3bb29_What=_1aab3bb29_What_CommonFlag_2,
		._1aab3bc6c_Reset=_1aab3bc6c_Reset_CommonFlag_2,
	},
	{
		._1aab0ac4c_Name=_1aab0ac4c_Name_CommonFlag_3,
		._1aab0ade5_Short=_1aab0ade5_Short_CommonFlag_3,
		._1aab3bb29_What=_1aab3bb29_What_CommonFlag_3,
		._1aab3bc6c_Reset=_1aab3bc6c_Reset_CommonFlag_3,
	},
	{
		._1aab0ac4c_Name=_1aab0ac4c_Name_CommonFlag_4,
		._1aab0ade5_Short=_1aab0ade5_Short_CommonFlag_4,
		._1aab3bb29_What=_1aab3bb29_What_CommonFlag_4,
		._1aab3bc6c_Reset=_1aab3bc6c_Reset_CommonFlag_4,
	},
};


void __jule_any_type0_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_any_type0_dealloc, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
void __jule_any_type1_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_any_type1_dealloc, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
void __jule_any_type2_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_any_type2_dealloc, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
void __jule_any_type3_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_any_type3_dealloc, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
void __jule_any_type4_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_any_type4_dealloc, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
void __jule_any_type5_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_any_type5_dealloc, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
void __jule_any_type6_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_any_type6_dealloc, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
void __jule_any_type7_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62d2b01_FnIns>().dealloc(); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_any_type7_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1c62d2b01_FnIns> &other) { return any.type == &__jule_any_type7 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type8_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6389da6_Var>().dealloc(); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_any_type8_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1c6389da6_Var> &other) { return any.type == &__jule_any_type8 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type9_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62bcab9_StructIns>().dealloc(); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_any_type9_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1c62bcab9_StructIns> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type10_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62e2e96_Trait>().dealloc(); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_any_type10_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1c62e2e96_Trait> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type11_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62b5b28_Impl>().dealloc(); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_any_type11_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1c62b5b28_Impl> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type12_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62b0aac_TypeAliasDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_any_type12_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1c62b0aac_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type13_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62b4c7b_StructDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_any_type13_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1c62b4c7b_StructDecl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type14_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62aae09_FnDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_any_type14_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1c62aae09_FnDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type15_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62b54b8_TraitDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_any_type15_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1c62b54b8_TraitDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type16_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62abed7_VarDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_any_type16_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1c62abed7_VarDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type17_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62b3131_EnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_any_type17_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1c62b3131_EnumDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type18_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62b40bb_TypeEnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_any_type18_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1c62b40bb_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type19_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dc260590_Const>().dealloc(); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_any_type19_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_1dc260590_Const> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type20_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6299854_IdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_any_type20_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1c6299854_IdentTypeDecl> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type21_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c63230e7_Label>().dealloc(); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_any_type21_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1c63230e7_Label> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type22_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6320754_Scope>().dealloc(); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_any_type22_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1c6320754_Scope> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type23_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62ca7b9_BuiltinErrorCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_any_type23_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1c62ca7b9_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type24_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c63dd35a_Data>().dealloc(); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_any_type24_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1c63dd35a_Data> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type25_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62cb9b8_BackendEmitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_any_type25_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1c62cb9b8_BackendEmitExprModel> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type26_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62c9543_BuiltinAppendCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_any_type26_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1c62c9543_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type27_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62c7a80_BuiltinOutCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_any_type27_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1c62c7a80_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type28_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62c7e59_BuiltinOutlnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_any_type28_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1c62c7e59_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type29_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62c870c_BuiltinPanicCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_any_type29_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1c62c870c_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type30_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62c8bb3_BuiltinAssertCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_any_type30_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1c62c8bb3_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type31_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62ca3e0_BuiltinCopyCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_any_type31_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1c62ca3e0_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type32_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62ca016_BuiltinDeleteCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_any_type32_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1c62ca016_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type33_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62cbcb5_FreeExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_any_type33_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1c62cbcb5_FreeExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type34_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62c3e88_FnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_any_type34_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1c62c3e88_FnCallExprModel> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type35_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c632138c_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_any_type35_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1c632138c_Conditional> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type36_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6321689_InfIter>().dealloc(); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_any_type36_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1c6321689_InfIter> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type37_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62ad37e_WhileKind>().dealloc(); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_any_type37_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1c62ad37e_WhileKind> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type38_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6321b40_WhileIter>().dealloc(); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_any_type38_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1c6321b40_WhileIter> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type39_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62adc86_RangeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_any_type39_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1c62adc86_RangeKind> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type40_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c632258b_RangeIter>().dealloc(); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_any_type40_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1c632258b_RangeIter> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type41_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6322921_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_any_type41_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1c6322921_ContSt> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type42_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c63234c1_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_any_type42_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1c63234c1_GotoSt> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type43_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c632389a_Postfix>().dealloc(); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_any_type43_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1c632389a_Postfix> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type44_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6323d51_Assign>().dealloc(); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_any_type44_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1c6323d51_Assign> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type45_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62c4818_IndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_any_type45_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1c62c4818_IndexingExprModel> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type46_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c632422a_MultiAssign>().dealloc(); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_any_type46_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1c632422a_MultiAssign> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type47_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c632488a_Match>().dealloc(); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_any_type47_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1c632488a_Match> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type48_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6325abc_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_any_type48_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1c6325abc_FallSt> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type49_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6322cea_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_any_type49_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1c6322cea_BreakSt> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type50_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6325e52_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_any_type50_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1c6325e52_RetSt> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type51_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62a926a_ScopeTree>().dealloc(); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_any_type51_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1c62a926a_ScopeTree> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type52_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c629d57d_Expr>().dealloc(); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_any_type52_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1c629d57d_Expr> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type53_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62b0370_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_any_type53_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1c62b0370_Conditional> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type54_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62aca54_Iter>().dealloc(); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_any_type54_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1c62aca54_Iter> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type55_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62ae539_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_any_type55_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1c62ae539_ContSt> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type56_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62a682d_LabelSt>().dealloc(); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_any_type56_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1c62a682d_LabelSt> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type57_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62a6c07_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_any_type57_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1c62a6c07_GotoSt> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type58_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62a7be7_AssignSt>().dealloc(); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_any_type58_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1c62a7be7_AssignSt> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type59_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62b17a0_MatchCase>().dealloc(); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_any_type59_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1c62b17a0_MatchCase> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type60_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62a7004_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_any_type60_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1c62a7004_FallSt> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type61_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62ae160_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_any_type61_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1c62ae160_BreakSt> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type62_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62ac3b1_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_any_type62_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1c62ac3b1_RetSt> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type63_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c629de52_UseExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_any_type63_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1c629de52_UseExpr> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type64_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62cebec_Fn>().dealloc(); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_any_type64_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1c62cebec_Fn> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type65_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62b9d3b_Struct>().dealloc(); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_any_type65_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1c62b9d3b_Struct> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type66_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c641c730_TypeAlias>().dealloc(); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_any_type66_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1c641c730_TypeAlias> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type67_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62e5691_Enum>().dealloc(); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_any_type67_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1c62e5691_Enum> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type68_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62e6d9b_TypeEnum>().dealloc(); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_any_type68_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1c62e6d9b_TypeEnum> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type69_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c629b515_ArrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_any_type69_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1c629b515_ArrTypeDecl> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type70_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c629a679_SlcTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_any_type70_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1c629a679_SlcTypeDecl> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type71_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c629ac73_PtrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_any_type71_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1c629ac73_PtrTypeDecl> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type72_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c629a2e4_SptrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_any_type72_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1c629a2e4_SptrTypeDecl> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type73_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c629bc63_MapTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_any_type73_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1c629bc63_MapTypeDecl> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type74_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c629a976_TupleTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_any_type74_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1c629a976_TupleTypeDecl> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type75_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62a0a14_VariadicExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_any_type75_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1c62a0a14_VariadicExpr> &other) { return any.type == &__jule_any_type75 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type76_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62c4362_SliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_any_type76_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1c62c4362_SliceExprModel> &other) { return any.type == &__jule_any_type76 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type77_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62a2c9c_FieldExprPair>().dealloc(); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_any_type77_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1c62a2c9c_FieldExprPair> &other) { return any.type == &__jule_any_type77 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type78_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62a43a8_KeyValPair>().dealloc(); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_any_type78_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1c62a43a8_KeyValPair> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type79_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c629eea8_IdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_any_type79_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1c629eea8_IdentExpr> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type80_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c629e24e_TupleExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_any_type80_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1c629e24e_TupleExpr> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type81_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62c76a6_TupleExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_any_type81_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1c62c76a6_TupleExprModel> &other) { return any.type == &__jule_any_type81 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type82_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62cb2e2_RuneExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_any_type82_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1c62cb2e2_RuneExprModel> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type83_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c641d522_TypeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_any_type83_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1c641d522_TypeKind> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type84_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62c73a9_ArrayExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_any_type84_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1c62c73a9_ArrayExprModel> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type85_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62a1691_SubIdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_any_type85_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1c62a1691_SubIdentExpr> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type86_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6299b51_SubIdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_any_type86_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1c6299b51_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type87_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62a063a_UnaryExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_any_type87_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1c62a063a_UnaryExpr> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type88_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6299249_TypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_any_type88_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1c6299249_TypeDecl> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type89_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62a12b7_NsSelectionExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_any_type89_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1c62a12b7_NsSelectionExpr> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type90_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6299ee7_NamespaceTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_any_type90_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1c6299ee7_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type91_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62c5b05_SlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_any_type91_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1c62c5b05_SlicingExprModel> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type92_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62c35d6_CastingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_any_type92_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1c62c35d6_CastingExprModel> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type93_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62a4aa1_SliceExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_any_type93_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1c62a4aa1_SliceExpr> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type94_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62c2c56_StructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_any_type94_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1c62c2c56_StructLitExprModel> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type95_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62c6ed0_StructStaticIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_any_type95_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1c62c6ed0_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type96_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62c6188_TraitSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_any_type96_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1c62c6188_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type97_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62c6a29_StructSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_any_type97_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1c62c6a29_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type98_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62c5572_MapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_any_type98_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1c62c5572_MapExprModel> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type99_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62c4be2_AnonFnExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_any_type99_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1c62c4be2_AnonFnExprModel> &other) { return any.type == &__jule_any_type99 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type100_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c629d87a_RangeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_any_type100_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1c629d87a_RangeExpr> &other) { return any.type == &__jule_any_type100 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type101_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c629e628_LitExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_any_type101_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1c629e628_LitExpr> &other) { return any.type == &__jule_any_type101 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type102_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c629ea02_UnsafeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_any_type102_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1c629ea02_UnsafeExpr> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type103_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62a5541_IndexingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_any_type103_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1c62a5541_IndexingExpr> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type104_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62a5ba1_SlicingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_any_type104_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1c62a5ba1_SlicingExpr> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type105_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62a0ddd_CastExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_any_type105_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1c62a0ddd_CastExpr> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type106_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62a35c7_StructLit>().dealloc(); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_any_type106_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1c62a35c7_StructLit> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type107_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62a22a7_FnCallExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_any_type107_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1c62a22a7_FnCallExpr> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type108_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62a3a7d_BraceLit>().dealloc(); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_any_type108_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1c62a3a7d_BraceLit> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type109_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62a1b47_BinopExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_any_type109_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1c62a1b47_BinopExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type110_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62c2382_UnaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_any_type110_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1c62c2382_UnaryExprModel> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type111_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62c1ea8_BinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_any_type111_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1c62c1ea8_BinopExprModel> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type112_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62c3053_AllocStructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_any_type112_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1c62c3053_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type113_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62c8333_BuiltinNewCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_any_type113_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1c62c8333_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type114_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62c9169_BuiltinMakeCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_any_type114_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1c62c9169_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type115_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62c9840_BuiltinLenCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_any_type115_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1c62c9840_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type116_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62c9b3c_BuiltinCapCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_any_type116_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1c62c9b3c_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type116 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type117_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62c6375_SizeofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_any_type117_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1c62c6375_SizeofExprModel> &other) { return any.type == &__jule_any_type117 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type118_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62caee5_AlignofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_any_type118_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1c62caee5_AlignofExprModel> &other) { return any.type == &__jule_any_type118 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type119_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c62cb5de_IntegratedToStrExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_any_type119_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1c62cb5de_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type120_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c651be4a_MutSlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_any_type120_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1c651be4a_MutSlicingExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type121_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c651c973_PushToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_any_type121_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1c651c973_PushToSliceExprModel> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type122_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c651cd4c_AppendToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_any_type122_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1c651cd4c_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type123_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c651ab6e_SwapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_any_type123_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1c651ab6e_SwapExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type124_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c651b08c_EmptyCompareExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_any_type124_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1c651b08c_EmptyCompareExprModel> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type125_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c651b8b7_StrCompExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_any_type125_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1c651b8b7_StrCompExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type126_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c651c247_UnsafeBinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_any_type126_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1c651c247_UnsafeBinopExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type127_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c651b389_RefExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_any_type127_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1c651b389_RefExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type128_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c651c544_UnsafeIndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_any_type128_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1c651c544_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type129_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c651d149_InlineStdInternalNosafeStobs>().dealloc(); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_any_type129_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_1c651d149_InlineStdInternalNosafeStobs> &other) { return any.type == &__jule_any_type129 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type130_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
jule::Bool __jule_any_type130_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other); }
jule::Str __jule_any_type130_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_any_type130_dealloc, .eq=__jule_any_type130_eq, .to_str=__jule_any_type130_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type130 && __jule_any_type130_eq(any.data.alloc, (void*)&other); }
void __jule_any_type131_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
jule::Bool __jule_any_type131_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other); }
jule::Str __jule_any_type131_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_any_type131_dealloc, .eq=__jule_any_type131_eq, .to_str=__jule_any_type131_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type131 && __jule_any_type131_eq(any.data.alloc, (void*)&other); }
void __jule_any_type132_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
jule::Bool __jule_any_type132_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other); }
jule::Str __jule_any_type132_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_any_type132_dealloc, .eq=__jule_any_type132_eq, .to_str=__jule_any_type132_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type132 && __jule_any_type132_eq(any.data.alloc, (void*)&other); }
void __jule_any_type133_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
jule::Bool __jule_any_type133_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other); }
jule::Str __jule_any_type133_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_any_type133_dealloc, .eq=__jule_any_type133_eq, .to_str=__jule_any_type133_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type133 && __jule_any_type133_eq(any.data.alloc, (void*)&other); }
void __jule_any_type134_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
jule::Bool __jule_any_type134_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other); }
jule::Str __jule_any_type134_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_any_type134_dealloc, .eq=__jule_any_type134_eq, .to_str=__jule_any_type134_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type134 && __jule_any_type134_eq(any.data.alloc, (void*)&other); }
void __jule_any_type135_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
jule::Bool __jule_any_type135_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other); }
jule::Str __jule_any_type135_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_any_type135_dealloc, .eq=__jule_any_type135_eq, .to_str=__jule_any_type135_to_str};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type135 && __jule_any_type135_eq(any.data.alloc, (void*)&other); }
jule::Array<jule::Array<jule::Str,2>,5> _221a3356a_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Str _1aab438cd_OutDir = jule::Str("dist", 4);
jule::Str _1aab43ba8_OutName = jule::Str("ir.cpp", 6);
jule::Str _1aab43e72_Out = jule::Str();
jule::Str _21e48e3a2_Compiler = jule::Str();
jule::Str _21e48e5c2_CompilerPath = jule::Str();
jule::Str _21e48e7e2_CppStd = jule::Str("cpp17", 5);
jule::Bool _21e48ea12_Shadowing = false;
jule::Bool _21e48ec76_Transpilation = false;
jule::Bool _21e490040_Test = false;
jule::Bool _21e490309_RC = true;
jule::Bool _21e4906d3_Safety = true;
jule::Bool _21e49099c_Production = false;
jule::Uintptr _2204dd8b7_STDIN = _2204de18c_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551606LLU));
jule::Uintptr _2204ddb81_STDOUT = _2204de18c_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551605LLU));
jule::Uintptr _2204dde17_STDERR = _2204de18c_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551604LLU));
jule::Array<jule::U8,256> _22061ca90_first = jule::Array<jule::U8,256>({});
jule::Array<_22061d123_acceptRange,16> _22061d431_acceptRanges = jule::Array<_22061d123_acceptRange,16>({_22061d123_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_22061d123_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_22061d123_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_22061d123_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_22061d123_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Ptr<_22187c1e9_RangeTable> _221812b52__L = jule::new_ptr<_22187c1e9_RangeTable>(_22187c1e9_RangeTable{._field_R16=jule::Slice<_22187b715_Range16>::make({_22187b715_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_22187b715_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_22187b715_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_22187b715_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_22187b715_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_22187b715_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_22187b715_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_22187b715_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_22187b715_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_22187b715_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_22187b715_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_22187b715_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_22187b715_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_22187b715_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_22187b715_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_22187b715_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_22187b715_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_22187b715_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_22187b715_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_22187b715_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_22187b715_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_22187b715_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_22187b715_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_22187b715_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_22187b715_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_22187b715_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_22187b715_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_22187b715_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_22187b715_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_22187b715_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_22187b715_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_22187b715_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_22187b715_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_22187b715_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_22187b715_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_22187b715_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_22187b715_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_22187b715_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_22187b715_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_22187b715_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_22187b715_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_22187b715_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_22187b715_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_22187b715_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_22187b715_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_22187b715_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_22187b715_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_22187b715_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_22187b715_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_22187b715_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_22187b715_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_22187b715_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_22187b715_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_22187b715_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_22187b715_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_22187b715_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_22187b715_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_22187b715_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_22187b715_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_22187b715_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_22187bc43_Range32>::make({_22187bc43_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_22187bc43_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_22187bc43_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_22187bc43_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_22187bc43_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_22187bc43_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_22187bc43_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_22187bc43_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_22187bc43_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_22187bc43_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_22187bc43_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_22187bc43_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_22187bc43_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_22187bc43_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_22187bc43_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_22187bc43_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_22187bc43_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_22187bc43_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_22187bc43_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_22187bc43_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_22187bc43_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_22187bc43_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_22187bc43_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_22187bc43_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_22187bc43_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_22187bc43_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_22187bc43_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_22187bc43_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_22187bc43_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_22187bc43_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_22187bc43_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_22187bc43_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_22187bc43_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_22187bc43_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_22187bc43_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_22187bc43_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_22187bc43_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_22187bc43_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_22187bc43_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_22187bc43_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_22187bc43_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_22187bc43_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_22187bc43_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_22187c1e9_RangeTable> _221813b42__LU = jule::new_ptr<_22187c1e9_RangeTable>(_22187c1e9_RangeTable{._field_R16=jule::Slice<_22187b715_Range16>::make({_22187b715_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_22187b715_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_22187b715_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_22187b715_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_22187b715_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_22187b715_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_22187b715_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_22187b715_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_22187b715_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_22187b715_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_22187b715_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_22187b715_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_22187b715_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_22187b715_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_22187b715_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_22187b715_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_22187b715_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_22187bc43_Range32>::make({_22187bc43_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_22187bc43_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_22187bc43_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_22187bc43_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_22187bc43_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_22187bc43_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_22187bc43_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::U8,256> _221875a2d__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::Str,4> _22195a78e_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _221959dba_CppExts = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _22195ba59_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Str _221a2e764_PathStdlib = jule::Str();
jule::Str _221a2e9b7_PathExec = jule::Str();
jule::Str _221a2ec70_PathWd = jule::Str();
jule::Str _221a3007d_PathApi = jule::Str();
jule::Str _221a30347_Os = jule::Str("windows", 7);
jule::Str _221a30611_Arch = jule::Str("amd64", 5);
jule::Array<jule::U8,32> _1dc1e1a82__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1dc1e2148__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_1dc23708e_floatInfo _1dc23748a_f32info = _1dc23708e_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_1dc23708e_floatInfo _1dc237798_f64info = _1dc23708e_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _1dc240240_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _1dc2420aa_powtab = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1dc242b7c_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1dc242ebd_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _1dc246235_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1dc24a008_leftCheat> _1dc24a437_leftCheats = jule::Slice<_1dc24a008_leftCheat>::make({_1dc24a008_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_1dc24a008_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_1dc24a008_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_1dc24a008_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_1dc24a008_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_1dc24a008_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_1dc24a008_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_1dc24a008_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_1dc24a008_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_1dc24a008_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_1dc24a008_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_1dc24a008_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_1dc24a008_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_1dc24a008_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_1dc24a008_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_1dc24a008_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_1dc24a008_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_1dc24a008_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_1dc24a008_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_1dc24a008_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_1dc24a008_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_1dc24a008_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_1dc24a008_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_1dc24a008_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_1dc24a008_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_1dc24a008_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_1dc24a008_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_1dc24a008_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_1dc24a008_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_1dc24a008_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_1dc24a008_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_1dc24a008_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_1dc24a008_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_1dc24a008_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_1dc24a008_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_1dc24a008_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_1dc24a008_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_1dc24a008_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_1dc24a008_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_1dc24a008_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_1dc24a008_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_1dc24a008_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_1dc24a008_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_1dc24a008_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_1dc24a008_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_1dc24a008_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_1dc24a008_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_1dc24a008_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_1dc24a008_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_1dc24a008_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_1dc24a008_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_1dc24a008_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_1dc24a008_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_1dc24a008_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_1dc24a008_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_1dc24a008_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_1dc24a008_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_1dc24a008_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_1dc24a008_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_1dc24a008_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_1dc24a008_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I64 _1dc2513e9_BitSize = 0LL;
jule::Str _1dc251707_SysInt = jule::Str();
jule::Str _1dc2519c1_SysUint = jule::Str();
jule::Array<jule::I32,5> _1c61d973e_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::U64,6> _1c61d99b4_UnaryOps = jule::Array<jule::U64,6>({static_cast<jule::U64>(61LLU),static_cast<jule::U64>(60LLU),static_cast<jule::U64>(67LLU),static_cast<jule::U64>(68LLU),static_cast<jule::U64>(62LLU),static_cast<jule::U64>(65LLU)});
jule::Array<jule::U64,18> _1c61d9d05_BinOps = jule::Array<jule::U64,18>({static_cast<jule::U64>(60LLU),static_cast<jule::U64>(61LLU),static_cast<jule::U64>(62LLU),static_cast<jule::U64>(63LLU),static_cast<jule::U64>(64LLU),static_cast<jule::U64>(65LLU),static_cast<jule::U64>(66LLU),static_cast<jule::U64>(67LLU),static_cast<jule::U64>(56LLU),static_cast<jule::U64>(57LLU),static_cast<jule::U64>(69LLU),static_cast<jule::U64>(70LLU),static_cast<jule::U64>(53LLU),static_cast<jule::U64>(52LLU),static_cast<jule::U64>(54LLU),static_cast<jule::U64>(55LLU),static_cast<jule::U64>(50LLU),static_cast<jule::U64>(51LLU)});
jule::Array<jule::U64,2> _1c627ceec_PostfixOps = jule::Array<jule::U64,2>({static_cast<jule::U64>(58LLU),static_cast<jule::U64>(59LLU)});
jule::Array<jule::U64,11> _1c627d2e9_AssignOps = jule::Array<jule::U64,11>({static_cast<jule::U64>(71LLU),static_cast<jule::U64>(40LLU),static_cast<jule::U64>(41LLU),static_cast<jule::U64>(43LLU),static_cast<jule::U64>(42LLU),static_cast<jule::U64>(44LLU),static_cast<jule::U64>(46LLU),static_cast<jule::U64>(45LLU),static_cast<jule::U64>(49LLU),static_cast<jule::U64>(48LLU),static_cast<jule::U64>(47LLU)});
jule::Array<_1c628b428_kindPair,28> _1c628b857_keywords = jule::Array<_1c628b428_kindPair,28>({_1c628b428_kindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U64>(6LLU)},_1c628b428_kindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U64>(2LLU)},_1c628b428_kindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U64>(7LLU)},_1c628b428_kindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U64>(9LLU)},_1c628b428_kindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U64>(10LLU)},_1c628b428_kindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U64>(11LLU)},_1c628b428_kindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U64>(12LLU)},_1c628b428_kindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U64>(13LLU)},_1c628b428_kindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U64>(14LLU)},_1c628b428_kindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U64>(16LLU)},_1c628b428_kindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U64>(18LLU)},_1c628b428_kindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U64>(20LLU)},_1c628b428_kindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U64>(21LLU)},_1c628b428_kindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U64>(22LLU)},_1c628b428_kindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U64>(23LLU)},_1c628b428_kindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U64>(24LLU)},_1c628b428_kindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U64>(25LLU)},_1c628b428_kindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U64>(26LLU)},_1c628b428_kindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U64>(27LLU)},_1c628b428_kindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U64>(28LLU)},_1c628b428_kindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U64>(29LLU)},_1c628b428_kindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U64>(30LLU)},_1c628b428_kindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U64>(31LLU)},_1c628b428_kindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U64>(32LLU)},_1c628b428_kindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U64>(33LLU)},_1c628b428_kindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U64>(34LLU)},_1c628b428_kindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U64>(36LLU)},_1c628b428_kindPair{._field_kind=jule::Str("map", 3), ._field_id=static_cast<jule::U64>(37LLU)}});
jule::Array<_1c628b428_kindPair,46> _1c628bb98_basicOps = jule::Array<_1c628b428_kindPair,46>({_1c628b428_kindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U64>(19LLU)},_1c628b428_kindPair{._field_kind=jule::Str(":=", 2), ._field_id=static_cast<jule::U64>(38LLU)},_1c628b428_kindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U64>(8LLU)},_1c628b428_kindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U64>(3LLU)},_1c628b428_kindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U64>(5LLU)},_1c628b428_kindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U64>(39LLU)},_1c628b428_kindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U64>(17LLU)},_1c628b428_kindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U64>(40LLU)},_1c628b428_kindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U64>(41LLU)},_1c628b428_kindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U64>(42LLU)},_1c628b428_kindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U64>(43LLU)},_1c628b428_kindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U64>(44LLU)},_1c628b428_kindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U64>(45LLU)},_1c628b428_kindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U64>(46LLU)},_1c628b428_kindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U64>(47LLU)},_1c628b428_kindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U64>(48LLU)},_1c628b428_kindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U64>(49LLU)},_1c628b428_kindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U64>(50LLU)},_1c628b428_kindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U64>(51LLU)},_1c628b428_kindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U64>(52LLU)},_1c628b428_kindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U64>(53LLU)},_1c628b428_kindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U64>(54LLU)},_1c628b428_kindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U64>(55LLU)},_1c628b428_kindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U64>(56LLU)},_1c628b428_kindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U64>(57LLU)},_1c628b428_kindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U64>(58LLU)},_1c628b428_kindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U64>(59LLU)},_1c628b428_kindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U64>(60LLU)},_1c628b428_kindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U64>(61LLU)},_1c628b428_kindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U64>(62LLU)},_1c628b428_kindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U64>(63LLU)},_1c628b428_kindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U64>(64LLU)},_1c628b428_kindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U64>(65LLU)},_1c628b428_kindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U64>(66LLU)},_1c628b428_kindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U64>(67LLU)},_1c628b428_kindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U64>(68LLU)},_1c628b428_kindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U64>(69LLU)},_1c628b428_kindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U64>(70LLU)},_1c628b428_kindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U64>(71LLU)},_1c628b428_kindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U64>(35LLU)},_1c628b428_kindPair{._field_kind=jule::Str("{", 1), ._field_id=static_cast<jule::U64>(72LLU)},_1c628b428_kindPair{._field_kind=jule::Str("}", 1), ._field_id=static_cast<jule::U64>(73LLU)},_1c628b428_kindPair{._field_kind=jule::Str("[", 1), ._field_id=static_cast<jule::U64>(76LLU)},_1c628b428_kindPair{._field_kind=jule::Str("]", 1), ._field_id=static_cast<jule::U64>(77LLU)},_1c628b428_kindPair{._field_kind=jule::Str("(", 1), ._field_id=static_cast<jule::U64>(74LLU)},_1c628b428_kindPair{._field_kind=jule::Str(")", 1), ._field_id=static_cast<jule::U64>(75LLU)}});
jule::Slice<jule::Str> _1c631798d_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str("signed", 6),jule::Str("unsigned", 8),jule::Str("float", 5),jule::Str("numeric", 7),jule::Str("mutable", 7),jule::Str("immutable", 9),jule::Str("ordered", 7),jule::Str("comparable", 10)});
jule::Ptr<_1c641d522_TypeKind> _1c6508970_primNil = jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=nullptr});
jule::Ptr<_1c641d522_TypeKind> _1c6508c7d_primVoid = jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(_1c643a440_buildPrimType(jule::Str("void", 4)), 20)});
jule::Ptr<_1c641d522_TypeKind> _1c6509047_primAny = jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(_1c643a440_buildPrimType(jule::Str("any", 3)), 20)});
jule::Ptr<_1c641d522_TypeKind> _1c6509355_primStr = jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(_1c643a440_buildPrimType(jule::Str("str", 3)), 20)});
jule::Ptr<_1c641d522_TypeKind> _1c650961e_primBool = jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(_1c643a440_buildPrimType(jule::Str("bool", 4)), 20)});
jule::Ptr<_1c641d522_TypeKind> _1c65098d8_primUintptr = jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(_1c643a440_buildPrimType(jule::Str("uintptr", 7)), 20)});
jule::Ptr<_1c641d522_TypeKind> _1c6509ba2_primUint = jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(_1c643a440_buildPrimType(jule::Str("uint", 4)), 20)});
jule::Ptr<_1c641d522_TypeKind> _1c650a07b_primInt = jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(_1c643a440_buildPrimType(jule::Str("int", 3)), 20)});
jule::Ptr<_1c641d522_TypeKind> _1c650a345_primI8 = jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(_1c643a440_buildPrimType(jule::Str("i8", 2)), 20)});
jule::Ptr<_1c641d522_TypeKind> _1c650a60e_primI16 = jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(_1c643a440_buildPrimType(jule::Str("i16", 3)), 20)});
jule::Ptr<_1c641d522_TypeKind> _1c650a8c8_primI32 = jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(_1c643a440_buildPrimType(jule::Str("i32", 3)), 20)});
jule::Ptr<_1c641d522_TypeKind> _1c650ab92_primI64 = jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(_1c643a440_buildPrimType(jule::Str("i64", 3)), 20)});
jule::Ptr<_1c641d522_TypeKind> _1c650ae5b_primU8 = jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(_1c643a440_buildPrimType(jule::Str("u8", 2)), 20)});
jule::Ptr<_1c641d522_TypeKind> _1c650b225_primU16 = jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(_1c643a440_buildPrimType(jule::Str("u16", 3)), 20)});
jule::Ptr<_1c641d522_TypeKind> _1c650b4de_primU32 = jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(_1c643a440_buildPrimType(jule::Str("u32", 3)), 20)});
jule::Ptr<_1c641d522_TypeKind> _1c650b962_primU64 = jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(_1c643a440_buildPrimType(jule::Str("u64", 3)), 20)});
jule::Ptr<_1c641d522_TypeKind> _1c650bc2b_primF32 = jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(_1c643a440_buildPrimType(jule::Str("f32", 3)), 20)});
jule::Ptr<_1c641d522_TypeKind> _1c650bee5_primF64 = jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(_1c643a440_buildPrimType(jule::Str("f64", 3)), 20)});
jule::Str _1a9eda160_stdPackageInternalNosafe = jule::Str("std::internal::nosafe", 21);
jule::Map<jule::Uintptr,_1a9eda5a0_stdCacheData> _1a9eda9ce_stdCache = nullptr;
jule::Bool _1a9edc34e_Copy = false;
jule::Bool _1a9edc65c_Deadcode = false;
jule::Bool _1a9edc926_Append = false;
jule::Bool _1a9edcc34_Math = false;
jule::Bool _1a9edceed_Access = false;
jule::Bool _1a9edd2b7_Inline = false;
jule::Bool _1a9edd581_Ptr = false;
jule::Bool _1a9edd95a_Cond = false;
jule::Bool _1a9eddc24_Str = false;
jule::Bool _1a9eddedd_Slice = false;
jule::Bool _1a9ede2a7_Assign = false;
jule::Bool _1a9ede571_StdInternalNosafe = false;
jule::Bool _1c663730c_exprEnabled = false;
jule::Bool _1c66375d7_scopeEnabled = false;
jule::Bool _1c66378a1_stdEnabled = false;
jule::Array<jule::U64,12> _1aaa99081_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _1aa9c486e_assignArgName = jule::Str("__jule_assign_arg", 17);
jule::Ptr<_22187c1e9_RangeTable> _221821347_Upper = _221813b42__LU;
jule::Ptr<_22187c1e9_RangeTable> _221819ce1_Letter = _221812b52__L;



std::ostream &operator<<(std::ostream &_Stream, _22061d123_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline _2206c697e_StrBuilder static__2206c6c9d_New(jule::I64 _1519_cap) {
	if ((_1519_cap < 0LL)) {
		jule::panic(jule::Str("std::strings: StrBuilder.New: cap < 0", 37) + jule::Str("\nlocation: std/internal/strings/builder.jule:17:13"));;
	};
	return _2206c697e_StrBuilder{._field_buf=jule::Slice<jule::U8>::alloc(0LL, _1519_cap, 0)};;
}



inline void _2206d036c_Write(_2206c697e_StrBuilder* _self_, jule::Slice<jule::U8> _2524_b) {
	((*(_self_))._field_buf).append(_2524_b);;
}



inline void _2206d0625_WriteStr(_2206c697e_StrBuilder* _self_, jule::Str _3027_s) {
	((*(_self_))._field_buf).append(_22050c4b8_Stobs(&(_3027_s)));;
}



inline void _2206d08cd_WriteByte(_2206c697e_StrBuilder* _self_, jule::U8 _3528_b) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(_3528_b); };
}



inline jule::Str _2206d0e1c_Str(_2206c697e_StrBuilder* _self_) {
	return static_cast<jule::Str>((*(_self_))._field_buf);;
}



inline void _2206d111a_Clear(_2206c697e_StrBuilder* _self_) {
	(*(_self_))._field_buf=(*(_self_))._field_buf.slice(0LL, 0LL);
}



inline jule::I64 _2206d13a1_Len(_2206c697e_StrBuilder* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_buf.len());;
}



inline jule::Slice<jule::U8> _2206d18bd_Buf(_2206c697e_StrBuilder* _self_) {
	return (*(_self_))._field_buf;;
}



inline void _2206d1b76_SetBuf(_2206c697e_StrBuilder* _self_, jule::Slice<jule::U8> _7536_buf) {
	(*(_self_))._field_buf=_7536_buf;
}





std::ostream &operator<<(std::ostream &_Stream, _2206c697e_StrBuilder _Src) {
	_Stream << _2206d0e1c_Str(&_Src);
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _22187b715_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _22187bc43_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _22187c1e9_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _2218c78c6_index(_2218c7475_lazyBuff* _self_, jule::I64 _5524_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5524_i];;
	};
	return (*(_self_))._field_path[_5524_i];;
}



inline void _2218c7b7e_append(_2218c7475_lazyBuff* _self_, jule::U8 _6225_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6225_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len(), 0);
		jule::copy(((*(_self_))._field_buff), ((*(_self_))._field_path.slice(0LL, (*(_self_))._field_w)));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6225_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _2218c7e15_string(_2218c7475_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + static_cast<jule::Str>((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}





std::ostream &operator<<(std::ostream &_Stream, _2218c7475_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _220506a9a_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_220506a9a_DirEntry>>> static__2218ca1ae_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_220506a9a_DirEntry>> __jule_func_result;
	jule::Slice<jule::U16> _1613_utf16Path = _2204b4e76_Utf16FromStr(_2218c8be6_Join(jule::Slice<jule::Str>::make({_1520_path,jule::Str("*", 1)})));;
	WIN32_FIND_DATAW _1717_data = (WIN32_FIND_DATAW){};;
	jule::Uintptr _1813_handle = _2204e2dd8_FindFirstFile((&(_1613_utf16Path[0LL])), (&(_1717_data)));;
	if ((_1813_handle == jule::MAX_U64)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_220506a9a_DirEntry>>>(jule::Any(), __jule_func_result);;
	};
	for (;;) {
		{
			jule::Ptr<_220506a9a_DirEntry> _2321_entry = jule::new_ptr<_220506a9a_DirEntry>(_220506a9a_DirEntry{._field_Name=_2204b554d_U16PtrToStr(((jule::U16*)(_1717_data.cFileName))), });;
			(*(_2321_entry))._field_Stat=({
				auto except = static__2218cb017_Of(_2218c8be6_Join(jule::Slice<jule::Str>::make({_1520_path,(*(_2321_entry))._field_Name})));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_220506a9a_DirEntry>>>(except.error);
				} jule::Ptr<_220514921_Status>(nullptr);});
			});
			{ jule::Slice<jule::Ptr<_220506a9a_DirEntry>> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(_2321_entry); };
			if ((_2204e325c_FindNextFile(_1813_handle, (&(_1717_data))) == 0LL)) {
				goto _iter_end_1ab99a239;
			};
		}
	_iter_next_1ab99a239:;
	}
	_iter_end_1ab99a239:;;
	_2204e3526_FindClose(_1813_handle);
	return jule::Exceptional<jule::Slice<jule::Ptr<_220506a9a_DirEntry>>>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional static__2218ca3e0_Create(jule::Str _3922_path) {
	jule::Slice<jule::U16> _4413_utf16Path = _2204b4e76_Utf16FromStr(_3922_path);;
	if ((!(_2204e0ad9_CreateDirectory((&(_4413_utf16Path[0LL])))))) {
		return jule::VoidExceptional(jule::Any(_2205064e5_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional static__2218ca621_Remove(jule::Str _5322_path) {
	jule::Slice<jule::U16> _5413_utf16Path = _2204b4e76_Utf16FromStr(_5322_path);;
	if ((!(_2204e0da3_RemoveDirectory((&(_5413_utf16Path[0LL])))))) {
		return jule::VoidExceptional(jule::Any(_2205064e5_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}





std::ostream &operator<<(std::ostream &_Stream, _220506d0e_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2205120d3_File> static__220512512_New(jule::Uintptr _4619_handle) {
	return jule::new_ptr<_2205120d3_File>(_2205120d3_File{._field_handle=_4619_handle});;
}



inline jule::Exceptional<jule::Ptr<_2205120d3_File>> static__2205127cb_Create(jule::Str _5622_path) {
	return jule::Exceptional<jule::Ptr<_2205120d3_File>>(jule::Any(), ({
		auto except = static__220621e07_Open(_5622_path, static_cast<jule::I64>(770LL), 438LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Ptr<_2205120d3_File>>(except.error);
		} jule::Ptr<_2205120d3_File>(nullptr);});
	}));;
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__220512a95_Read(jule::Str _6820_path) {
	jule::Ptr<_220514921_Status> _6913_s = ({
		auto except = static__2218cb017_Of(_6820_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_220514921_Status>(nullptr);});
	});;
	if ((!(_220515081_IsReg(_6913_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(static_cast<jule::I64>(14LL), &__jule_any_type0));
	};
	if ((_220515317_Size(_6913_s.ptr()) == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), jule::Slice<jule::U8>::alloc(0LL, 0LL, 0));;
	};
	jule::Ptr<_2205120d3_File> _7917_f = ({
		auto except = static__220621e07_Open(_6820_path, static_cast<jule::I64>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_2205120d3_File>(nullptr);});
	});;
	__JULE_DEFER({
		({
			auto except = _220513d71_Close(_7917_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:80:17"));
		});
	});;
	jule::Slice<jule::U8> _8217_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_220515317_Size(_6913_s.ptr())), static_cast<jule::I64>(_220515317_Size(_6913_s.ptr())), 0);;
	jule::I64 _8313_n = ({
		auto except = _22062290d_Read(_7917_f.ptr(), _8217_buff);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} 0;});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), _8217_buff.slice(0LL, _8313_n));;
}



inline jule::VoidExceptional static__220512e3b_Write(jule::Str _9221_path, jule::Slice<jule::U8> _9232_data, jule::I64 _9246_perm) {
	jule::Ptr<_2205120d3_File> _9317_f = ({
		auto except = static__220621e07_Open(_9221_path, static_cast<jule::I64>(769LL), _9246_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional(except.error);
		} jule::Ptr<_2205120d3_File>(nullptr);});
	});;
	({
		auto except = _2206225bc_Write(_9317_f.ptr(), _9232_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _220513d71_Close(_9317_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _220513d71_Close(_2205120d3_File* _self_) {
	if ((_2204e59ce_Close(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(_2205064e5_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::Ptr<_2205120d3_File>> static__220621e07_Open(jule::Str _2120_path, jule::I64 _2131_flag, jule::I64 _2144_mode) {
	jule::Slice<jule::U16> _2213_utf16Path = _2204b4e76_Utf16FromStr(_2120_path);;
	jule::I64 _2313_handle = _2204dec09_Wopen((&(_2213_utf16Path[0LL])), static_cast<jule::I64>(_2131_flag), _2144_mode);;
	if ((_2313_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_2205120d3_File>>(jule::Any(_2205064e5_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::Ptr<_2205120d3_File>>(jule::Any(), static__220512512_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_2313_handle))));;
}



inline jule::VoidExceptional static__220622138_Remove(jule::Str _3422_path) {
	jule::Slice<jule::U16> _3513_utf16Path = _2204b4e76_Utf16FromStr(_3422_path);;
	if ((!(_2204e0820_DeleteFile((&(_3513_utf16Path[0LL])))))) {
		return jule::VoidExceptional(jule::Any(_2205064e5_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _2206225bc_Write(_2205120d3_File* _self_, jule::Slice<jule::U8> _4924_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_4924_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	if (_220622c82_isConsoleHandle((*(_self_))._field_handle)) {
		jule::Slice<jule::U16> _5517_utf16Buff = _2204b4e76_Utf16FromStr(static_cast<jule::Str>(_4924_buff));;
		jule::Bool _5617_ok = _2204e236b_WriteConsole((*(_self_))._field_handle, (&(_5517_utf16Buff[0LL])), static_cast<jule::I64>(_5517_utf16Buff.len()), &(__jule_func_result), nullptr);;
		if ((!(_5617_ok))) {
			return jule::Exceptional<jule::I64>(jule::Any(_2205064e5_getLastFsError(), &__jule_any_type0));
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_2204e5e0d_Write(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), (&(_4924_buff[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_4924_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_2205064e5_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::Exceptional<jule::I64> _22062290d_Read(_2205120d3_File* _self_, jule::Slice<jule::U8> _7927_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_7927_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	if (_220622c82_isConsoleHandle((*(_self_))._field_handle)) {
		jule::Slice<jule::U16> _8521_codepage = jule::Slice<jule::U16>::alloc(_7927_buff.len(), _7927_buff.len(), 0);;
		jule::Bool _8617_ok = _2204e2855_ReadConsole((*(_self_))._field_handle, (&(_8521_codepage[0LL])), static_cast<jule::I64>(_7927_buff.len()), &(__jule_func_result));;
		if ((!(_8617_ok))) {
			return jule::Exceptional<jule::I64>(jule::Any(_2205064e5_getLastFsError(), &__jule_any_type0));
		};
		jule::Slice<jule::I32> _9117_runes = _2204b48d2_Decode(_8521_codepage.slice(0LL, __jule_func_result));;
		__jule_func_result=0LL;
		{
			auto expr = &(_9117_runes);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab9b4143:;
			if (it != expr_end) {
				jule::I32 *_9320_r = it;
				{
					jule::I64 _9421_size = _22061e8c7_RuneLen((*(_9320_r)));;
					if (((__jule_func_result + _9421_size) > _7927_buff.len())) {
						goto _iter_end_1ab9b4143;
					};
					_22061ed28_EncodeRune(_7927_buff.slice(__jule_func_result), (*(_9320_r)));
					__jule_func_result+=_9421_size;
				}
				_iter_next_1ab9b4143:;
				++it;
				goto _iter_begin_1ab9b4143;
			}
			_iter_end_1ab9b4143:;
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_2204e5638_Read(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), (&(_7927_buff[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_7927_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_2205064e5_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}





std::ostream &operator<<(std::ostream &_Stream, _2205120d3_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _220514cea_IsDir(_220514921_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL));;
}



inline jule::Bool _220515081_IsReg(_220514921_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(2LL)) == static_cast<jule::I64>(2LL));;
}



inline jule::U64 _220515317_Size(_220514921_Status* _self_) {
	return (*(_self_))._field_size;;
}



inline jule::Exceptional<jule::Ptr<_220514921_Status>> static__2218cb017_Of(jule::Str _1218_path) {
	if ((_1218_path).empty()) {
		return jule::Exceptional<jule::Ptr<_220514921_Status>>(jule::Any(static_cast<jule::I64>(4LL), &__jule_any_type0));
	};
	jule::Slice<jule::U16> _1613_utf16Path = _2204b4e76_Utf16FromStr(_1218_path);;
	struct _stat _1717_handle = (struct _stat){};;
	jule::I64 _1813_code = _2204de7ca_Wstat((&(_1613_utf16Path[0LL])), (&(_1717_handle)));;
	if ((_1813_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_220514921_Status>>(jule::Any(_2205064e5_getLastFsError(), &__jule_any_type0));
	};
	jule::Ptr<_220514921_Status> _2217_stat = jule::new_ptr<_220514921_Status>();;
	(*(_2217_stat))._field_size=_1717_handle.st_size;
	if (((_1717_handle.st_mode & 16384LLU) == 16384LLU)) {
		(*(_2217_stat))._field_mode|=static_cast<jule::I64>(1LL);
	} else if (((_1717_handle.st_mode & 32768LLU) == 32768LLU)) {
		(*(_2217_stat))._field_mode|=static_cast<jule::I64>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_220514921_Status>>(jule::Any(), _2217_stat);;
}





std::ostream &operator<<(std::ostream &_Stream, _220514921_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _221a2b387_cmdAttrs _Src) {
	_Stream << "cmdAttrs{";
	_Stream << "hProcess:" << _Src._field_hProcess << ", ";
	_Stream << "hThread:" << _Src._field_hThread;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _221968cb9_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1dc23708e_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1dc237c3d_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1dc24a008_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dc2423eb_set(_1dc24aa31_decimal* _self_, jule::Slice<jule::U8> _23822_s) {
	jule::Bool __jule_func_result = false;
	jule::I64 _23917_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_23917_i >= _23822_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23822_s[_23917_i] == '+')) {
			_case_begin_1abe743a0:;
			{
				(_23917_i)++;
			}
		}
		else if ((_23822_s[_23917_i] == '-')) {
			_case_begin_1abe7459d:;
			{
				(*(_self_))._field_neg=true;
				(_23917_i)++;
			}
		}
		_match_end_1abe744b0:;
	};
	jule::Bool _25617_sawdot = false;;
	jule::Bool _25717_sawdigits = false;;
	for (; (_23917_i < _23822_s.len()); (_23917_i)++) {
		{
			{
				
				if ((_23822_s[_23917_i] == '_')) {
					_case_begin_1abe76050:;
					{
						goto _iter_next_1abe758ac;
					}
				}
				else if ((_23822_s[_23917_i] == '.')) {
					_case_begin_1abe760c7:;
					{
						if (_25617_sawdot) {
							return __jule_func_result;;
						};
						_25617_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1abe758ac;
					}
				}
				else if ((('0' <= _23822_s[_23917_i]) && (_23822_s[_23917_i] <= '9'))) {
					_case_begin_1abe7614e:;
					{
						_25717_sawdigits=true;
						if (((_23822_s[_23917_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1abe758ac;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23822_s[_23917_i];
							((*(_self_))._field_nd)++;
						} else if ((_23822_s[_23917_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1abe758ac;
					}
				}
				_match_end_1abe75e2e:;
			};
			goto _iter_end_1abe758ac;
		}
	_iter_next_1abe758ac:;
	}
	_iter_end_1abe758ac:;;
	if ((!(_25717_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_25617_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_23917_i < _23822_s.len()) && (_1dc23c88b_lower(_23822_s[_23917_i]) == 'e'))) {
		(_23917_i)++;
		if ((_23917_i >= _23822_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _30221_esign = 1LL;;
		if ((_23822_s[_23917_i] == '+')) {
			(_23917_i)++;
		} else if ((_23822_s[_23917_i] == '-')) {
			(_23917_i)++;
			_30221_esign=-1LL;
		};
		if ((((_23917_i >= _23822_s.len()) || (_23822_s[_23917_i] < '0')) || (_23822_s[_23917_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _31221_e = 0LL;;
		for (; ((_23917_i < _23822_s.len()) && ((('0' <= _23822_s[_23917_i]) && (_23822_s[_23917_i] <= '9')) || (_23822_s[_23917_i] == '_'))); (_23917_i)++) {
			{
				if ((_23822_s[_23917_i] == '_')) {
					goto _iter_next_1abe7bd14;
				};
				if ((_31221_e < 10000LL)) {
					_31221_e=static_cast<jule::I64>((((_31221_e * 10LL) + static_cast<jule::I64>(_23822_s[_23917_i])) - '0'));
				};
			}
		_iter_next_1abe7bd14:;
		}
		_iter_end_1abe7bd14:;;
		(*(_self_))._field_dp+=(_31221_e * _30221_esign);
	};
	if ((_23917_i != _23822_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1dc24273c_floatBits(_1dc24aa31_decimal* _self_, _1dc23708e_floatInfo* _33229_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _33317_exp = 0LL;;
	jule::U64 _33417_mant = 0LLU;;
	if (((*(_self_))._field_nd == 0LL)) {
		_33417_mant=0LLU;
		_33317_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_1abe8b6c5;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_1abe82d09;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_33417_mant=0LLU;
		_33317_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_1abe8b6c5;
	};
	_33317_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I64 _35921_n = 0LL;;
			if (((*(_self_))._field_dp >= _1dc2420aa_powtab.len())) {
				_35921_n=27LL;
			} else {
				_35921_n=_1dc2420aa_powtab[(*(_self_))._field_dp];
			};
			_1dc24b191_shift(_self_, static_cast<jule::I64>((-(_35921_n))));
			_33317_exp+=_35921_n;
		}
	_iter_next_1abe82842:;
	}
	_iter_end_1abe82842:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I64 _36921_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _1dc2420aa_powtab.len())) {
				_36921_n=27LL;
			} else {
				_36921_n=_1dc2420aa_powtab[(-((*(_self_))._field_dp))];
			};
			_1dc24b191_shift(_self_, _36921_n);
			_33317_exp-=_36921_n;
		}
	_iter_next_1abe83d93:;
	}
	_iter_end_1abe83d93:;;
	(_33317_exp)--;
	if ((_33317_exp < ((*(_33229_flt))._field_bias + 1LL))) {
		jule::I64 _38617_n = (((*(_33229_flt))._field_bias + 1LL) - _33317_exp);;
		_1dc24b191_shift(_self_, static_cast<jule::I64>((-(_38617_n))));
		_33317_exp+=_38617_n;
	};
	if (((_33317_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
		goto _julec_label_1abe82d09;
	};
	_1dc24b191_shift(_self_, static_cast<jule::I64>(static_cast<jule::I64>((1LL + (*(_33229_flt))._field_mantbits))));
	_33417_mant=static_cast<jule::U64>(_1dc24bc41_roundedInteger(_self_));
	if ((_33417_mant == (2LLU << (*(_33229_flt))._field_mantbits))) {
		_33417_mant>>=1LLU;
		(_33317_exp)++;
		if (((_33317_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
			goto _julec_label_1abe82d09;
		};
	};
	if (((_33417_mant & (1LLU << (*(_33229_flt))._field_mantbits)) == 0LLU)) {
		_33317_exp=(*(_33229_flt))._field_bias;
	};
	goto _julec_label_1abe8b6c5;
	_julec_label_1abe82d09:;
	_33417_mant=0LLU;
	_33317_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << (*(_33229_flt))._field_expbits) - 1LLU) + static_cast<jule::U64>((*(_33229_flt))._field_bias))));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_1abe8b6c5:;
	jule::U64 _42217_bits = (_33417_mant & ((1LLU << (*(_33229_flt))._field_mantbits) - 1LLU));;
	_42217_bits|=(static_cast<jule::U64>(((_33317_exp - (*(_33229_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) << (*(_33229_flt))._field_mantbits);
	if ((*(_self_))._field_neg) {
		_42217_bits|=((1LLU << (*(_33229_flt))._field_mantbits) << (*(_33229_flt))._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _42217_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1dc24add8_assign(_1dc24aa31_decimal* _self_, jule::U64 _15129_v) {
	jule::Array<jule::U8,24> _15217_buf = jule::Array<jule::U8,24>();;
	jule::I64 _15517_n = 0LL;;
	while ((_15129_v > 0LLU)) {
		{
			jule::U64 _15717_v1 = (_15129_v / 10LLU);;
			_15129_v-=(10LLU * _15717_v1);
			_15217_buf[_15517_n]=static_cast<jule::U8>(static_cast<jule::U8>((_15129_v + '0')));
			(_15517_n)++;
			_15129_v=_15717_v1;
		}
	_iter_next_1abe90322:;
	}
	_iter_end_1abe90322:;;
	(*(_self_))._field_nd=0LL;
	(_15517_n)--;
	for (; (_15517_n >= 0LL); (_15517_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15217_buf[_15517_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1abe90c7e:;
	}
	_iter_end_1abe90c7e:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_1dc24c37e_trim(_self_);
}



inline void _1dc24b191_shift(_1dc24aa31_decimal* _self_, jule::I64 _17628_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1abe92c3c:;
		}
		else if ((_17628_k > 0LL)) {
			_case_begin_1abe92cb4:;
			{
				while ((_17628_k > 60LL)) {
					{
						_1dc24cdc9_leftShift(_self_, 60LLU);
						_17628_k-=60LL;
					}
				_iter_next_1abe9390d:;
				}
				_iter_end_1abe9390d:;;
				_1dc24cdc9_leftShift(_self_, static_cast<jule::U64>(static_cast<jule::U64>(_17628_k)));
			}
		}
		else if ((_17628_k < 0LL)) {
			_case_begin_1abe92d3b:;
			{
				while ((_17628_k < -60LL)) {
					{
						_1dc24c66a_rightShift(_self_, 60LLU);
						_17628_k+=60LL;
					}
				_iter_next_1abe93886:;
				}
				_iter_end_1abe93886:;;
				_1dc24c66a_rightShift(_self_, static_cast<jule::U64>(static_cast<jule::U64>((-(_17628_k)))));
			}
		}
		_match_end_1abe92b1b:;
	};
}



inline void _1dc24b449_roundDown(_1dc24aa31_decimal* _self_, jule::I64 _19628_nd) {
	if (((_19628_nd < 0LL) || (_19628_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19628_nd;
	_1dc24c37e_trim(_self_);
}



inline void _1dc24b702_roundUp(_1dc24aa31_decimal* _self_, jule::I64 _20526_nd) {
	if (((_20526_nd < 0LL) || (_20526_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I64 _21117_i = (_20526_nd - 1LL);;
	for (; (_21117_i >= 0LL); (_21117_i)--) {
		{
			jule::U8 _21317_c = (*(_self_))._field_d[_21117_i];;
			if ((_21317_c < '9')) {
				((*(_self_))._field_d[_21117_i])++;
				(*(_self_))._field_nd=static_cast<jule::I64>((_21117_i + 1LL));
				return;;
			};
		}
	_iter_next_1abe96dd9:;
	}
	_iter_end_1abe96dd9:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _1dc24b9aa_round(_1dc24aa31_decimal* _self_, jule::I64 _23224_nd) {
	if (((_23224_nd < 0LL) || (_23224_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_1dc24d24d_shouldRoundUp(_self_, _23224_nd)) {
		_1dc24b702_roundUp(_self_, _23224_nd);
	} else {
		_1dc24b449_roundDown(_self_, _23224_nd);
	};
}



inline jule::U64 _1dc24bc41_roundedInteger(_1dc24aa31_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I64 _24917_i = 0LL;;
	jule::U64 _25017_n = 0LLU;;
	for (; ((_24917_i < (*(_self_))._field_dp) && (_24917_i < (*(_self_))._field_nd)); (_24917_i)++) {
		{
			_25017_n=static_cast<jule::U64>(((_25017_n * 10LLU) + static_cast<jule::U64>(((*(_self_))._field_d[_24917_i] - '0'))));
		}
	_iter_next_1abe99d10:;
	}
	_iter_end_1abe99d10:;;
	for (; (_24917_i < (*(_self_))._field_dp); (_24917_i)++) {
		{
			_25017_n*=10LLU;
		}
	_iter_next_1abe9b2b7:;
	}
	_iter_end_1abe9b2b7:;;
	if (_1dc24d24d_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_25017_n)++;
	};
	return _25017_n;;
}





std::ostream &operator<<(std::ostream &_Stream, _1dc24aa31_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dc260590_Const> static__1dc2609d0_NewI64(jule::I64 _1622_x) {
	return jule::new_ptr<_1dc260590_Const>(_1dc260590_Const{._field_data=jule::Any(_1622_x, &__jule_any_type1)});;
}



inline jule::Ptr<_1dc260590_Const> static__1dc260c99_NewU64(jule::U64 _1922_x) {
	return jule::new_ptr<_1dc260590_Const>(_1dc260590_Const{._field_data=jule::Any(_1922_x, &__jule_any_type2)});;
}



inline jule::Ptr<_1dc260590_Const> static__1dc261063_NewBool(jule::Bool _2223_x) {
	return jule::new_ptr<_1dc260590_Const>(_1dc260590_Const{._field_data=jule::Any(_2223_x, &__jule_any_type3)});;
}



inline jule::Ptr<_1dc260590_Const> static__1dc26132c_NewStr(jule::Str _2522_x) {
	return jule::new_ptr<_1dc260590_Const>(_1dc260590_Const{._field_data=jule::Any(_2522_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1dc260590_Const> static__1dc2615e6_NewF64(jule::F64 _2822_x) {
	return jule::new_ptr<_1dc260590_Const>(_1dc260590_Const{._field_data=jule::Any(_2822_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1dc260590_Const> static__1dc261805_NewNil(void) {
	return jule::new_ptr<_1dc260590_Const>(_1dc260590_Const{._field_data=nullptr});;
}



inline jule::I64 _1dc261e65_ReadI64(_1dc260590_Const* _self_) {
	if ((!(_1dc264561_IsI64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1));;
}



inline jule::U64 _1dc2621eb_ReadU64(_1dc260590_Const* _self_) {
	if ((!(_1dc2647e7_IsU64(_self_)))) {
		return 0LLU;;
	};
	return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2));;
}



inline jule::Bool _1dc262482_ReadBool(_1dc260590_Const* _self_) {
	if ((!(_1dc264a7d_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type3);;
}



inline jule::Str _1dc262718_ReadStr(_1dc260590_Const* _self_) {
	if ((!(_1dc264d14_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type4);;
}



inline jule::F64 _1dc26299e_ReadF64(_1dc260590_Const* _self_) {
	if ((!(_1dc26509a_IsF64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5));;
}



inline jule::I64 _1dc262c35_AsI64(_1dc260590_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ac023a7b:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ac02473b:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ac0247a2:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5)));;
			}
		}
		else {
			_case_begin_1ac0246c5:;
			{
				return 0LL;;
			}
		}
		_match_end_1ac024670:;
	};
}



inline jule::U64 _1dc262ebb_AsU64(_1dc260590_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ac025143:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2));;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ac026056:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ac0260bc:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5)));;
			}
		}
		else {
			_case_begin_1ac024e56:;
			{
				return 0LLU;;
			}
		}
		_match_end_1ac024e01:;
	};
}



inline jule::F64 _1dc263252_AsF64(_1dc260590_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ac027d27:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5));;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ac0268c5:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ac0277d8:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2)));;
			}
		}
		else {
			_case_begin_1ac0266d8:;
			{
				return 0LL;;
			}
		}
		_match_end_1ac026683:;
	};
}



inline void _1dc26350a_SetI64(_1dc260590_Const* _self_, jule::I64 _13825_x) {
	(*(_self_))._field_data=jule::Any(_13825_x, &__jule_any_type1);
}



inline void _1dc2637b3_SetU64(_1dc260590_Const* _self_, jule::U64 _14125_x) {
	(*(_self_))._field_data=jule::Any(_14125_x, &__jule_any_type2);
}



inline void _1dc263a6b_SetBool(_1dc260590_Const* _self_, jule::Bool _14426_x) {
	(*(_self_))._field_data=jule::Any(_14426_x, &__jule_any_type3);
}



inline void _1dc263d24_SetStr(_1dc260590_Const* _self_, jule::Str _14725_x) {
	(*(_self_))._field_data=jule::Any(_14725_x, &__jule_any_type4);
}



inline void _1dc2640cc_SetF64(_1dc260590_Const* _self_, jule::F64 _15025_x) {
	(*(_self_))._field_data=jule::Any(_15025_x, &__jule_any_type5);
}



inline jule::Bool _1dc264561_IsI64(_1dc260590_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ac02b567:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ac02b7ed:;
			{
				return false;;
			}
		}
		_match_end_1ac02b798:;
	};
}



inline jule::Bool _1dc2647e7_IsU64(_1dc260590_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ac02be5d:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ac02c1b1:;
			{
				return false;;
			}
		}
		_match_end_1ac02c15b:;
	};
}



inline jule::Bool _1dc264a7d_IsBool(_1dc260590_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1ac02c8ba:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ac02cb1d:;
			{
				return false;;
			}
		}
		_match_end_1ac02cab8:;
	};
}



inline jule::Bool _1dc264d14_IsStr(_1dc260590_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1ac02d327:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ac02d57a:;
			{
				return false;;
			}
		}
		_match_end_1ac02d525:;
	};
}



inline jule::Bool _1dc26509a_IsF64(_1dc260590_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ac02dc84:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ac02ded7:;
			{
				return false;;
			}
		}
		_match_end_1ac02de82:;
	};
}



inline jule::Bool _1dc265331_IsNil(_1dc260590_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _1dc2659b3_And(_1dc260590_Const* _self_, _1dc260590_Const _23818_x) {
	{
		
		if ((_1dc264a7d_IsBool(_self_) && _1dc264a7d_IsBool(&_23818_x))) {
			_case_begin_1ac0332d8:;
			{
				return (_1dc262482_ReadBool(_self_) && _1dc262482_ReadBool(&_23818_x));;
			}
		}
		else {
			_case_begin_1ac03322d:;
			{
				return false;;
			}
		}
		_match_end_1ac032d43:;
	};
}



inline jule::Bool _1dc265d04_Or(_1dc260590_Const* _self_, _1dc260590_Const _24917_x) {
	{
		
		if ((_1dc264a7d_IsBool(_self_) && _1dc264a7d_IsBool(&_24917_x))) {
			_case_begin_1ac0345e7:;
			{
				return (_1dc262482_ReadBool(_self_) || _1dc262482_ReadBool(&_24917_x));;
			}
		}
		else {
			_case_begin_1ac033c89:;
			{
				return false;;
			}
		}
		_match_end_1ac033be0:;
	};
}



inline jule::Bool _1dc266145_Eq(_1dc260590_Const* _self_, _1dc260590_Const _26017_x) {
	{
		
		if (_1dc265331_IsNil(_self_)) {
			_case_begin_1ac035928:;
			{
				return _1dc265331_IsNil(&_26017_x);;
			}
		}
		else if (_1dc264a7d_IsBool(_self_)) {
			_case_begin_1ac0359a0:;
			{
				return (_1dc264a7d_IsBool(&_26017_x) && (_1dc262482_ReadBool(_self_) == _1dc262482_ReadBool(&_26017_x)));;
			}
		}
		else if (_1dc264d14_IsStr(_self_)) {
			_case_begin_1ac035c25:;
			{
				return (_1dc264d14_IsStr(&_26017_x) && (_1dc262718_ReadStr(_self_) == _1dc262718_ReadStr(&_26017_x)));;
			}
		}
		else if (_1dc264561_IsI64(_self_)) {
			_case_begin_1ac035c8b:;
			{
				return (_1dc261e65_ReadI64(_self_) == _1dc262c35_AsI64(&_26017_x));;
			}
		}
		else if (_1dc2647e7_IsU64(_self_)) {
			_case_begin_1ac035d02:;
			{
				return (_1dc2621eb_ReadU64(_self_) == _1dc262ebb_AsU64(&_26017_x));;
			}
		}
		else if (_1dc26509a_IsF64(_self_)) {
			_case_begin_1ac035d68:;
			{
				return (_1dc26299e_ReadF64(_self_) == _1dc263252_AsF64(&_26017_x));;
			}
		}
		else {
			_case_begin_1ac035065:;
			{
				return false;;
			}
		}
		_match_end_1ac034ebb:;
	};
}



inline jule::Bool _1dc266486_Lt(_1dc260590_Const* _self_, _1dc260590_Const _28717_x) {
	{
		
		if (_1dc264d14_IsStr(_self_)) {
			_case_begin_1ac0395db:;
			{
				return (_1dc264d14_IsStr(&_28717_x) && (_1dc262718_ReadStr(_self_) < _1dc262718_ReadStr(&_28717_x)));;
			}
		}
		else if (_1dc264561_IsI64(_self_)) {
			_case_begin_1ac039652:;
			{
				return (_1dc261e65_ReadI64(_self_) < _1dc262c35_AsI64(&_28717_x));;
			}
		}
		else if (_1dc2647e7_IsU64(_self_)) {
			_case_begin_1ac0396c9:;
			{
				return (_1dc2621eb_ReadU64(_self_) < _1dc262ebb_AsU64(&_28717_x));;
			}
		}
		else if (_1dc26509a_IsF64(_self_)) {
			_case_begin_1ac03990a:;
			{
				return (_1dc26299e_ReadF64(_self_) < _1dc263252_AsF64(&_28717_x));;
			}
		}
		else {
			_case_begin_1ac03630d:;
			{
				return false;;
			}
		}
		_match_end_1ac036242:;
	};
}



inline jule::Bool _1dc2667c7_LtEq(_1dc260590_Const* _self_, _1dc260590_Const _31019_x) {
	{
		
		if (_1dc264d14_IsStr(_self_)) {
			_case_begin_1ac03c29d:;
			{
				return (_1dc264d14_IsStr(&_31019_x) && (_1dc262718_ReadStr(_self_) <= _1dc262718_ReadStr(&_31019_x)));;
			}
		}
		else if (_1dc264561_IsI64(_self_)) {
			_case_begin_1ac03c314:;
			{
				return (_1dc261e65_ReadI64(_self_) <= _1dc262c35_AsI64(&_31019_x));;
			}
		}
		else if (_1dc2647e7_IsU64(_self_)) {
			_case_begin_1ac03c38b:;
			{
				return (_1dc2621eb_ReadU64(_self_) <= _1dc262ebb_AsU64(&_31019_x));;
			}
		}
		else if (_1dc26509a_IsF64(_self_)) {
			_case_begin_1ac03c5bc:;
			{
				return (_1dc26299e_ReadF64(_self_) <= _1dc263252_AsF64(&_31019_x));;
			}
		}
		else {
			_case_begin_1ac039e49:;
			{
				return false;;
			}
		}
		_match_end_1ac039d7d:;
	};
}



inline jule::Bool _1dc266b18_Gt(_1dc260590_Const* _self_, _1dc260590_Const _33317_x) {
	{
		
		if (_1dc264d14_IsStr(_self_)) {
			_case_begin_1ac03ee60:;
			{
				return (_1dc264d14_IsStr(&_33317_x) && (_1dc262718_ReadStr(_self_) > _1dc262718_ReadStr(&_33317_x)));;
			}
		}
		else if (_1dc264561_IsI64(_self_)) {
			_case_begin_1ac03eec6:;
			{
				return (_1dc261e65_ReadI64(_self_) > _1dc262c35_AsI64(&_33317_x));;
			}
		}
		else if (_1dc2647e7_IsU64(_self_)) {
			_case_begin_1ac04004d:;
			{
				return (_1dc2621eb_ReadU64(_self_) > _1dc262ebb_AsU64(&_33317_x));;
			}
		}
		else if (_1dc26509a_IsF64(_self_)) {
			_case_begin_1ac04027e:;
			{
				return (_1dc26299e_ReadF64(_self_) > _1dc263252_AsF64(&_33317_x));;
			}
		}
		else {
			_case_begin_1ac03cb0b:;
			{
				return false;;
			}
		}
		_match_end_1ac03ca40:;
	};
}



inline jule::Bool _1dc266e59_GtEq(_1dc260590_Const* _self_, _1dc260590_Const _35619_x) {
	{
		
		if (_1dc264d14_IsStr(_self_)) {
			_case_begin_1ac042b22:;
			{
				return (_1dc264d14_IsStr(&_35619_x) && (_1dc262718_ReadStr(_self_) >= _1dc262718_ReadStr(&_35619_x)));;
			}
		}
		else if (_1dc264561_IsI64(_self_)) {
			_case_begin_1ac042b88:;
			{
				return (_1dc261e65_ReadI64(_self_) >= _1dc262c35_AsI64(&_35619_x));;
			}
		}
		else if (_1dc2647e7_IsU64(_self_)) {
			_case_begin_1ac042c10:;
			{
				return (_1dc2621eb_ReadU64(_self_) >= _1dc262ebb_AsU64(&_35619_x));;
			}
		}
		else if (_1dc26509a_IsF64(_self_)) {
			_case_begin_1ac042e41:;
			{
				return (_1dc26299e_ReadF64(_self_) >= _1dc263252_AsF64(&_35619_x));;
			}
		}
		else {
			_case_begin_1ac0407bd:;
			{
				return false;;
			}
		}
		_match_end_1ac040702:;
	};
}



inline jule::Bool _1dc26729a_Add(_1dc260590_Const* _self_, _1dc260590_Const _37722_x) {
	{
		
		if (_1dc264d14_IsStr(_self_)) {
			_case_begin_1ac0457d4:;
			{
				if ((!(_1dc264d14_IsStr(&_37722_x)))) {
					return false;;
				};
				_1dc263d24_SetStr(_self_, (_1dc262718_ReadStr(_self_) + _1dc262718_ReadStr(&_37722_x)));
			}
		}
		else if (_1dc26509a_IsF64(_self_)) {
			_case_begin_1ac04584a:;
			{
				_1dc2640cc_SetF64(_self_, static_cast<jule::F64>((_1dc26299e_ReadF64(_self_) + _1dc263252_AsF64(&_37722_x))));
			}
		}
		else if (_1dc264561_IsI64(_self_)) {
			_case_begin_1ac0458c2:;
			{
				if (_1dc26509a_IsF64(&_37722_x)) {
					_1dc2640cc_SetF64(_self_, static_cast<jule::F64>((_1dc263252_AsF64(_self_) + _1dc26299e_ReadF64(&_37722_x))));
				} else {
					_1dc26350a_SetI64(_self_, static_cast<jule::I64>((_1dc261e65_ReadI64(_self_) + _1dc262c35_AsI64(&_37722_x))));
				};
			}
		}
		else if (_1dc2647e7_IsU64(_self_)) {
			_case_begin_1ac045b03:;
			{
				if (_1dc26509a_IsF64(&_37722_x)) {
					_1dc2640cc_SetF64(_self_, static_cast<jule::F64>((_1dc263252_AsF64(_self_) + _1dc26299e_ReadF64(&_37722_x))));
				} else {
					_1dc2637b3_SetU64(_self_, static_cast<jule::U64>((_1dc2621eb_ReadU64(_self_) + _1dc262ebb_AsU64(&_37722_x))));
				};
			}
		}
		else {
			_case_begin_1ac043480:;
			{
				return false;;
			}
		}
		_match_end_1ac0433b4:;
	};
	return true;;
}



inline jule::Bool _1dc2675db_Sub(_1dc260590_Const* _self_, _1dc260590_Const _40622_x) {
	{
		
		if (_1dc26509a_IsF64(_self_)) {
			_case_begin_1ac04a70c:;
			{
				_1dc2640cc_SetF64(_self_, static_cast<jule::F64>((_1dc26299e_ReadF64(_self_) - _1dc263252_AsF64(&_40622_x))));
			}
		}
		else if (_1dc264561_IsI64(_self_)) {
			_case_begin_1ac04a784:;
			{
				if (_1dc26509a_IsF64(&_40622_x)) {
					_1dc2640cc_SetF64(_self_, static_cast<jule::F64>((_1dc263252_AsF64(_self_) - _1dc26299e_ReadF64(&_40622_x))));
				} else {
					_1dc26350a_SetI64(_self_, static_cast<jule::I64>((_1dc261e65_ReadI64(_self_) - _1dc262c35_AsI64(&_40622_x))));
				};
			}
		}
		else if (_1dc2647e7_IsU64(_self_)) {
			_case_begin_1ac04a80b:;
			{
				if (_1dc26509a_IsF64(&_40622_x)) {
					_1dc2640cc_SetF64(_self_, static_cast<jule::F64>((_1dc263252_AsF64(_self_) - _1dc26299e_ReadF64(&_40622_x))));
				} else {
					_1dc2637b3_SetU64(_self_, static_cast<jule::U64>((_1dc2621eb_ReadU64(_self_) - _1dc262ebb_AsU64(&_40622_x))));
				};
			}
		}
		else {
			_case_begin_1ac049ed1:;
			{
				return false;;
			}
		}
		_match_end_1ac049e15:;
	};
	return true;;
}



inline jule::Bool _1dc26792c_Mul(_1dc260590_Const* _self_, _1dc260590_Const _43022_x) {
	{
		
		if (_1dc26509a_IsF64(_self_)) {
			_case_begin_1ac04e7aa:;
			{
				_1dc2640cc_SetF64(_self_, static_cast<jule::F64>((_1dc26299e_ReadF64(_self_) * _1dc263252_AsF64(&_43022_x))));
			}
		}
		else if (_1dc264561_IsI64(_self_)) {
			_case_begin_1ac04e832:;
			{
				if (_1dc26509a_IsF64(&_43022_x)) {
					_1dc2640cc_SetF64(_self_, static_cast<jule::F64>((_1dc263252_AsF64(_self_) * _1dc26299e_ReadF64(&_43022_x))));
				} else {
					_1dc26350a_SetI64(_self_, static_cast<jule::I64>((_1dc261e65_ReadI64(_self_) * _1dc262c35_AsI64(&_43022_x))));
				};
			}
		}
		else if (_1dc2647e7_IsU64(_self_)) {
			_case_begin_1ac04e8a9:;
			{
				if (_1dc26509a_IsF64(&_43022_x)) {
					_1dc2640cc_SetF64(_self_, static_cast<jule::F64>((_1dc263252_AsF64(_self_) * _1dc26299e_ReadF64(&_43022_x))));
				} else {
					_1dc2637b3_SetU64(_self_, static_cast<jule::U64>((_1dc2621eb_ReadU64(_self_) * _1dc262ebb_AsU64(&_43022_x))));
				};
			}
		}
		else {
			_case_begin_1ac04de3b:;
			{
				return false;;
			}
		}
		_match_end_1ac04dd70:;
	};
	return true;;
}



inline jule::Bool _1dc267c6d_Div(_1dc260590_Const* _self_, _1dc260590_Const _45822_x) {
	{
		
		if (_1dc26509a_IsF64(_self_)) {
			_case_begin_1ac053858:;
			{
				jule::F64 _46117_l = _1dc263252_AsF64(&_45822_x);;
				if ((_46117_l == 0LL)) {
					return false;;
				};
				_1dc2640cc_SetF64(_self_, static_cast<jule::F64>(jule::div(_1dc26299e_ReadF64(_self_),_46117_l)));
			}
		}
		else if (_1dc264561_IsI64(_self_)) {
			_case_begin_1ac0538d0:;
			{
				jule::F64 _46717_l = _1dc263252_AsF64(&_45822_x);;
				if ((_46717_l == 0LL)) {
					return false;;
				};
				_1dc2640cc_SetF64(_self_, static_cast<jule::F64>(jule::div(_1dc263252_AsF64(_self_),_46717_l)));
			}
		}
		else if (_1dc2647e7_IsU64(_self_)) {
			_case_begin_1ac053957:;
			{
				jule::F64 _47317_l = _1dc263252_AsF64(&_45822_x);;
				if ((_47317_l == 0LL)) {
					return false;;
				};
				_1dc2640cc_SetF64(_self_, static_cast<jule::F64>(jule::div(_1dc263252_AsF64(_self_),_47317_l)));
			}
		}
		else {
			_case_begin_1ac052ed9:;
			{
				return false;;
			}
		}
		_match_end_1ac052e1d:;
	};
	return true;;
}



inline jule::Bool _1dc2680ae_Mod(_1dc260590_Const* _self_, _1dc260590_Const _48722_x) {
	{
		
		if (_1dc264561_IsI64(_self_)) {
			_case_begin_1ac057a38:;
			{
				jule::I64 _49017_l = _1dc262c35_AsI64(&_48722_x);;
				if ((_49017_l == 0LL)) {
					return false;;
				};
				_1dc26350a_SetI64(_self_, static_cast<jule::I64>(jule::mod(_1dc261e65_ReadI64(_self_),_49017_l)));
			}
		}
		else if (_1dc2647e7_IsU64(_self_)) {
			_case_begin_1ac057ab0:;
			{
				jule::U64 _49617_l = _1dc262ebb_AsU64(&_48722_x);;
				if ((_49617_l == 0LLU)) {
					return false;;
				};
				_1dc2637b3_SetU64(_self_, static_cast<jule::U64>(jule::mod(_1dc2621eb_ReadU64(_self_),_49617_l)));
			}
		}
		else {
			_case_begin_1ac05797d:;
			{
				return false;;
			}
		}
		_match_end_1ac05664c:;
	};
	return true;;
}



inline jule::Bool _1dc268400_BitwiseAnd(_1dc260590_Const* _self_, _1dc260590_Const _50929_x) {
	{
		
		if (_1dc264561_IsI64(_self_)) {
			_case_begin_1ac05a95e:;
			{
				_1dc26350a_SetI64(_self_, static_cast<jule::I64>((_1dc261e65_ReadI64(_self_) & _1dc262c35_AsI64(&_50929_x))));
			}
		}
		else if (_1dc2647e7_IsU64(_self_)) {
			_case_begin_1ac05a9d6:;
			{
				_1dc2637b3_SetU64(_self_, static_cast<jule::U64>((_1dc2621eb_ReadU64(_self_) & _1dc262ebb_AsU64(&_50929_x))));
			}
		}
		else {
			_case_begin_1ac05a8a4:;
			{
				return false;;
			}
		}
		_match_end_1ac059573:;
	};
	return true;;
}



inline jule::Bool _1dc268741_BitwiseOr(_1dc260590_Const* _self_, _1dc260590_Const _52328_x) {
	{
		
		if (_1dc264561_IsI64(_self_)) {
			_case_begin_1ac05c7da:;
			{
				_1dc26350a_SetI64(_self_, static_cast<jule::I64>((_1dc261e65_ReadI64(_self_) | _1dc262c35_AsI64(&_52328_x))));
			}
		}
		else if (_1dc2647e7_IsU64(_self_)) {
			_case_begin_1ac05c862:;
			{
				_1dc2637b3_SetU64(_self_, static_cast<jule::U64>((_1dc2621eb_ReadU64(_self_) | _1dc262ebb_AsU64(&_52328_x))));
			}
		}
		else {
			_case_begin_1ac05c71e:;
			{
				return false;;
			}
		}
		_match_end_1ac05c653:;
	};
	return true;;
}



inline jule::Bool _1dc268a82_Xor(_1dc260590_Const* _self_, _1dc260590_Const _53722_x) {
	{
		
		if (_1dc264561_IsI64(_self_)) {
			_case_begin_1ac05e666:;
			{
				_1dc26350a_SetI64(_self_, static_cast<jule::I64>((_1dc261e65_ReadI64(_self_) ^ _1dc262c35_AsI64(&_53722_x))));
			}
		}
		else if (_1dc2647e7_IsU64(_self_)) {
			_case_begin_1ac05e6dd:;
			{
				_1dc2637b3_SetU64(_self_, static_cast<jule::U64>((_1dc2621eb_ReadU64(_self_) ^ _1dc262ebb_AsU64(&_53722_x))));
			}
		}
		else {
			_case_begin_1ac05e59a:;
			{
				return false;;
			}
		}
		_match_end_1ac05e4ce:;
	};
	return true;;
}



inline jule::Bool _1dc268dc3_Lshift(_1dc260590_Const* _self_, _1dc260590_Const _55125_x) {
	{
		
		if (_1dc264561_IsI64(_self_)) {
			_case_begin_1ac0614e2:;
			{
				jule::I64 _55417_l = _1dc262c35_AsI64(_self_);;
				if ((_55417_l < 0LL)) {
					jule::U64 _55621_r = _1dc262ebb_AsU64(&_55125_x);;
					_1dc26350a_SetI64(_self_, static_cast<jule::I64>((_55417_l << _55621_r)));
				} else {
					_1dc2695aa_lshiftUnsig(_self_, &(_55125_x));
				};
			}
		}
		else if (_1dc2647e7_IsU64(_self_)) {
			_case_begin_1ac061569:;
			{
				_1dc2695aa_lshiftUnsig(_self_, &(_55125_x));
			}
		}
		else {
			_case_begin_1ac061426:;
			{
				return false;;
			}
		}
		_match_end_1ac06135a:;
	};
	return true;;
}



inline jule::Bool _1dc269214_Rshift(_1dc260590_Const* _self_, _1dc260590_Const _57125_x) {
	{
		
		if (_1dc264561_IsI64(_self_)) {
			_case_begin_1ac063abb:;
			{
				jule::I64 _57417_l = _1dc262c35_AsI64(_self_);;
				if ((_57417_l < 0LL)) {
					jule::U64 _57621_r = _1dc262ebb_AsU64(&_57125_x);;
					_1dc26350a_SetI64(_self_, static_cast<jule::I64>((_57417_l >> _57621_r)));
				} else {
					_1dc2698da_rshiftUnsig(_self_, &(_57125_x));
				};
			}
		}
		else if (_1dc2647e7_IsU64(_self_)) {
			_case_begin_1ac063b43:;
			{
				_1dc2698da_rshiftUnsig(_self_, &(_57125_x));
			}
		}
		else {
			_case_begin_1ac063a00:;
			{
				return false;;
			}
		}
		_match_end_1ac063934:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1dc260590_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1c6283db0_Prec(_1c6283a3b_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(57LLU) || _match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ac19922e:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1ac1993b6:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(71LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1ac19942c:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1ac1994a4:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1ac19952b:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1ac198aad:;
			{
				return 0LLU;;
			}
		}
		_match_end_1ac198a14:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c6283a3b_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline void _1c62896e0_Fill(_1c6289305_File* _self_, jule::Slice<jule::U8> _1727_data) {
	(*(_self_))._field_Data=_1727_data;
}



inline jule::Str _1c6289976_Dir(_1c6289305_File* _self_) {
	return _2218c98d9_Dir((*(_self_))._field_Path);;
}



inline jule::Str _1c6289c0c_Name(_1c6289305_File* _self_) {
	return _2218c9543_Base((*(_self_))._field_Path);;
}



inline jule::Str _1c628a2d4_GetRow(_1c6289305_File* _self_, jule::I64 _3821_row) {
	jule::I64 _3917_n = 0LL;;
	jule::I64 _4017_lineStart = 0LL;;
	jule::I64 _4117_i = 0LL;;
	for (; (_4117_i < (*(_self_))._field_Data.len()); (_4117_i)++) {
		{
			if (((*(_self_))._field_Data[_4117_i] != '\n')) {
				goto _iter_next_1ac19e6a7;
			};
			(_3917_n)++;
			if ((_3917_n == _3821_row)) {
				return static_cast<jule::Str>((*(_self_))._field_Data.slice(_4017_lineStart, _4117_i));;
			};
			_4017_lineStart=static_cast<jule::I64>((_4117_i + 1LL));
		}
	_iter_next_1ac19e6a7:;
	}
	_iter_end_1ac19e6a7:;;
	return jule::Str();;
}





std::ostream &operator<<(std::ostream &_Stream, _1c6289305_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c628b428_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1c6292ac2_pushErr(_1c629253e_lex* _self_, jule::Str _44726_fmt, jule::Slice<jule::Any> _44739_args) {
	{ jule::Slice<_221968cb9_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1c628c1e8_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44726_fmt, _44739_args)); };
}



inline void _1c6293133_lex(_1c629253e_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_1c6295355_newLine(_self_);
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::Ptr<_1c6283a3b_Token> _46221_token = _1c6296840_token(_self_);;
			if (((*(_46221_token))._field_Id != static_cast<jule::U64>(0LLU))) {
				{ jule::Slice<jule::Ptr<_1c6283a3b_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_46221_token); };
			};
		}
	_iter_next_1ac1cd52c:;
	}
	_iter_end_1ac1cd52c:;;
}



inline jule::Str _1c6293474_id(_1c629253e_lex* _self_, jule::Slice<jule::U8>* _47122_ln) {
	if (((*(_47122_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _47514_r = 0;;
	jule::I64 _47521_i = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22061dc39_DecodeRune((*(_47122_ln)));
		_47514_r = __jule_assign_result.__jule_result_arg0;
		_47521_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_47514_r != '_') && (!(_1c628726a_IsLetter(_47514_r))))) {
		return jule::Str();;
	};
	while ((_47521_i < (*(_47122_ln)).len())) {
		{
			jule::I32 _48118_pr = 0;;
			jule::I64 _48122_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22061dc39_DecodeRune((*(_47122_ln)).slice(_47521_i));
				_48118_pr = __jule_assign_result.__jule_result_arg0;
				_48122_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_48118_pr != '_') && (!(_1c62877ed_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_48118_pr)))))) && (!(_1c628726a_IsLetter(_48118_pr))))) {
				(*(_self_))._field_pos+=_47521_i;
				return static_cast<jule::Str>((*(_47122_ln)).slice(0LL, _47521_i));;
			};
			_47521_i+=_48122_n;
		}
	_iter_next_1ac1d1d5a:;
	}
	_iter_end_1ac1d1d5a:;;
	(*(_self_))._field_pos+=(*(_47122_ln)).len();
	return static_cast<jule::Str>((*(_47122_ln)));;
}



inline jule::Slice<jule::U8> _1c629370a_resume(_1c629253e_lex* _self_) {
	jule::I64 _49617_i = (*(_self_))._field_pos;;
	for (; (_49617_i < (*((*(_self_))._field_file))._field_Data.len()); (_49617_i)++) {
		{
			jule::I32 _49817_r = static_cast<jule::I32>((*((*(_self_))._field_file))._field_Data[_49617_i]);;
			if (_1c6286ce7_IsSpace(_49817_r)) {
				;
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _49817_r };
					
					if (_match_expr == '\n') {
						_case_begin_1ac1d5ea2:;
						{
							_1c6295355_newLine(_self_);
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1ac1d6018:;
						{
							(*(_self_))._field_column+=8LL;
						}
					}
					else {
						_case_begin_1ac1d5875:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1ac1d590d:;
				};
				goto _iter_next_1ac1d1a80;
			};
			jule::I64 _51321_j = _49617_i;;
			for (; (_51321_j < (*((*(_self_))._field_file))._field_Data.len()); (_51321_j)++) {
				{
					if (((*((*(_self_))._field_file))._field_Data[_51321_j] == '\n')) {
						goto _iter_end_1ac1d49d9;
					};
				}
			_iter_next_1ac1d49d9:;
			}
			_iter_end_1ac1d49d9:;;
			return (*((*(_self_))._field_file))._field_Data.slice(_49617_i, _51321_j);;
		}
	_iter_next_1ac1d1a80:;
	}
	_iter_end_1ac1d1a80:;;
	return nullptr;;
}



inline void _1c62939b3_lexLineComment(_1c629253e_lex* _self_, jule::Ptr<_1c6283a3b_Token>* _52438_token) {
	jule::I64 _52513_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _52817_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if (((_52817_r == '\n') || (_52817_r == '\r'))) {
				goto _iter_end_1ac1d8a32;
			};
		}
	_iter_next_1ac1d8a32:;
	}
	_iter_end_1ac1d8a32:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		(*((*(_52438_token))))._field_Id=static_cast<jule::U64>(15LLU);
		(*((*(_52438_token))))._field_Kind=static_cast<jule::Str>((*((*(_self_))._field_file))._field_Data.slice(_52513_start, (*(_self_))._field_pos));
	};
}



inline void _1c6293c6b_lexRangeComment(_1c629253e_lex* _self_, jule::Ptr<_1c6283a3b_Token>* _53939_token) {
	jule::I64 _54013_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _54317_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_54317_r == '\r')) {
				goto _iter_next_1ac1dc074;
			};
			if ((_54317_r == '\n')) {
				_1c6295355_newLine(_self_);
				goto _iter_next_1ac1dc074;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*((*(_self_))._field_file))._field_Data.len()) && (_54317_r == '*')) && ((*((*(_self_))._field_file))._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					(*((*(_53939_token))))._field_Id=static_cast<jule::U64>(15LLU);
					(*((*(_53939_token))))._field_Kind=static_cast<jule::Str>((*((*(_self_))._field_file))._field_Data.slice(_54013_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1ac1dc074:;
	}
	_iter_end_1ac1dc074:;;
	_1c6292ac2_pushErr(_self_, jule::Str("missing block comment close", 27), jule::Slice<jule::Any>());
}



inline jule::Str _1c62940ac_num(_1c629253e_lex* _self_, jule::Slice<jule::U8>* _56723_txt) {
	jule::Str __jule_func_result;
	if (((*(_56723_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_1c6290d34_hexNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1ac1e4840;
	};
	__jule_func_result=_1c6290a6a_octalNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1ac1e4840;
	};
	__jule_func_result=_1c628e382_binaryNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1ac1e4840;
	};
	__jule_func_result=_1c628e0b8_commonNum(_56723_txt);
	_julec_label_1ac1e4840:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1c62943ed_escapeSeq(_1c629253e_lex* _self_, jule::Slice<jule::U8>* _58929_txt) {
	jule::Str _59017_seq = jule::Str();;
	if (((*(_58929_txt)).len() < 2LL)) {
		goto _julec_label_1ac1e78ba;
	};
	{
		auto &_match_expr{ (*(_58929_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1ac1e6820:;
			{
				(*(_self_))._field_pos+=2LL;
				return static_cast<jule::Str>((*(_58929_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1ac1e6886:;
			{
				_59017_seq=_1c6291472_bigUnicodePointEscape(_58929_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1ac1e690d:;
			{
				_59017_seq=_1c629173b_littleUnicodePointEscape(_58929_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1ac1e6567:;
			{
				_59017_seq=_1c6291a05_hexByteEscape(_58929_txt);
			}
		}
		else {
			_case_begin_1ac1e5de6:;
			{
				_59017_seq=_1c6291cbe_byteEscape(_58929_txt);
			}
		}
		_match_end_1ac1e6457:;
	};
	_julec_label_1ac1e78ba:;
	if ((_59017_seq).empty()) {
		((*(_self_))._field_pos)++;
		_1c6292ac2_pushErr(_self_, jule::Str("invalid escape sequence", 23), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_59017_seq.len();
	return _59017_seq;;
}



inline jule::Str _1c62947e9_getRune(_1c629253e_lex* _self_, jule::Slice<jule::U8>* _61927_txt, jule::Bool _61940_raw) {
	if (((!(_61940_raw)) && ((*(_61927_txt))[0LL] == '\\'))) {
		return _1c62943ed_escapeSeq(_self_, _61927_txt);;
	};
	jule::I32 _62314_r = 0;;
	jule::I64 _62317_n = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22061dc39_DecodeRune((*(_61927_txt)));
		_62314_r = __jule_assign_result.__jule_result_arg0;
		_62317_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_62317_n;
	return jule::Str::from_rune(_62314_r);;
}



inline jule::Str _1c6294b3a_lexRune(_1c629253e_lex* _self_, jule::Slice<jule::U8>* _62827_txt) {
	_2206c697e_StrBuilder _62917_run = static__2206c6c9d_New(8LL);;
	_2206d08cd_WriteByte(&_62917_run, '\'');
	((*(_self_))._field_column)++;
	jule::I64 _63217_n = 0LL;;
	jule::I64 _63317_i = 1LL;;
	for (; (_63317_i < (*(_62827_txt)).len()); (_63317_i)++) {
		{
			if (((*(_62827_txt))[_63317_i] == '\r')) {
				goto _iter_next_1ac1ecaac;
			};
			if (((*(_62827_txt))[_63317_i] == '\n')) {
				_1c6292ac2_pushErr(_self_, jule::Str("rune is not finished", 20), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_1c6295355_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _64517_part = (*(_62827_txt)).slice(_63317_i);;
			jule::Str _64617_r = _1c62947e9_getRune(_self_, &(_64517_part), false);;
			_2206d0625_WriteStr(&_62917_run, _64617_r);
			(*(_self_))._field_column+=_220620aa4_RuneCountStr(_64617_r);
			if (_64617_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1ac1ecaac;
			};
			if ((_64617_r.len() > 1LL)) {
				_63317_i+=(_64617_r.len() - 1LL);
			};
			(_63217_n)++;
		}
	_iter_next_1ac1ecaac:;
	}
	_iter_end_1ac1ecaac:;;
	if ((_63217_n == 0LL)) {
		_1c6292ac2_pushErr(_self_, jule::Str("rune is cannot empty", 20), jule::Slice<jule::Any>());
	} else if ((_63217_n > 1LL)) {
		_1c6292ac2_pushErr(_self_, jule::Str("rune is should be single", 24), jule::Slice<jule::Any>());
	};
	return _2206d0e1c_Str(&_62917_run);;
}



inline jule::Str _1c6294dc1_lexStr(_1c629253e_lex* _self_) {
	_2206c697e_StrBuilder _66917_s = static__2206c6c9d_New(16LL);;
	jule::U8 _67013_mark = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _67213_raw = (_67013_mark == '`');;
	_2206d08cd_WriteByte(&_66917_s, _67013_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::U8 _67717_ch = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_67717_ch == '\r')) {
				goto _iter_next_1ac202c38;
			};
			if ((_67717_ch == '\n')) {
				_1c6295355_newLine(_self_);
				if ((!(_67213_raw))) {
					_1c6292ac2_pushErr(_self_, jule::Str("string is not finished", 22), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _68921_part = (*((*(_self_))._field_file))._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _69017_r = _1c62947e9_getRune(_self_, &(_68921_part), _67213_raw);;
			_2206d0625_WriteStr(&_66917_s, _69017_r);
			(*(_self_))._field_column+=_220620aa4_RuneCountStr(_69017_r);
			if ((_67717_ch == _67013_mark)) {
				goto _iter_end_1ac202c38;
			};
		}
	_iter_next_1ac202c38:;
	}
	_iter_end_1ac202c38:;;
	return _2206d0e1c_Str(&_66917_s);;
}



inline void _1c6295355_newLine(_1c629253e_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _1c62958b6_isOp(_1c629253e_lex* _self_, jule::Slice<jule::U8>* _71024_txt, jule::Str _71037_kind, jule::U64 _71048_id, jule::Ptr<_1c6283a3b_Token>* _71066_t) {
	if ((!(_1c628c5b1_bytesHasPrefix(_71024_txt, _71037_kind)))) {
		return false;;
	};
	(*((*(_71066_t))))._field_Kind=_71037_kind;
	(*((*(_71066_t))))._field_Id=_71048_id;
	(*(_self_))._field_pos+=_71037_kind.len();
	return true;;
}



inline jule::Bool _1c6295cb2_lexBasicOps(_1c629253e_lex* _self_, jule::Slice<jule::U8> _72030_txt, jule::Ptr<_1c6283a3b_Token>* _72048_tok) {
	{
		auto expr = &(_1c628bb98_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac209c1d:;
		if (it != expr_end) {
			_1c628b428_kindPair *_72116_pair = it;
			{
				if (_1c62958b6_isOp(_self_, &(_72030_txt), (*(_72116_pair))._field_kind, (*(_72116_pair))._field_id, _72048_tok)) {
					return true;;
				};
			}
			_iter_next_1ac209c1d:;
			++it;
			goto _iter_begin_1ac209c1d;
		}
		_iter_end_1ac209c1d:;
	};
	return false;;
}



inline jule::Bool _1c62961ad_lexId(_1c629253e_lex* _self_, jule::Slice<jule::U8>* _72925_txt, jule::Ptr<_1c6283a3b_Token>* _72943_t) {
	jule::Str _73013_lex = _1c6293474_id(_self_, _72925_txt);;
	if ((_73013_lex).empty()) {
		return false;;
	};
	(*((*(_72943_t))))._field_Kind=_73013_lex;
	(*((*(_72943_t))))._field_Id=static_cast<jule::U64>(1LLU);
	return true;;
}



inline jule::Bool _1c62965a9_lexNum(_1c629253e_lex* _self_, jule::Slice<jule::U8>* _73926_txt, jule::Ptr<_1c6283a3b_Token>* _73944_t) {
	jule::Str _74013_lex = _1c62940ac_num(_self_, _73926_txt);;
	if ((_74013_lex).empty()) {
		return false;;
	};
	(*((*(_73944_t))))._field_Kind=_74013_lex;
	(*((*(_73944_t))))._field_Id=static_cast<jule::U64>(4LLU);
	return true;;
}



inline jule::Ptr<_1c6283a3b_Token> _1c6296840_token(_1c629253e_lex* _self_) {
	jule::Ptr<_1c6283a3b_Token> _75117_t = jule::new_ptr<_1c6283a3b_Token>(_1c6283a3b_Token{._field_File=(*(_self_))._field_file, ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _75613_txt = _1c629370a_resume(_self_);;
	if ((_75613_txt == nullptr)) {
		return _75117_t;;
	};
	(*(_75117_t))._field_Column=(*(_self_))._field_column;
	(*(_75117_t))._field_Row=(*(_self_))._field_row;
	{
		
		if (_1c62965a9_lexNum(_self_, &(_75613_txt), &(_75117_t))) {
			_case_begin_1ac211c9c:;
			{
				goto _match_end_1ac20ebbd;
			}
		}
		else if ((_75613_txt[0LL] == '\'')) {
			_case_begin_1ac211351:;
			{
				(*(_75117_t))._field_Kind=_1c6294b3a_lexRune(_self_, &(_75613_txt));
				(*(_75117_t))._field_Id=static_cast<jule::U64>(4LLU);
				return _75117_t;;
			}
		}
		else if (((_75613_txt[0LL] == '\"') || (_75613_txt[0LL] == '`'))) {
			_case_begin_1ac2113b7:;
			{
				(*(_75117_t))._field_Kind=_1c6294dc1_lexStr(_self_);
				(*(_75117_t))._field_Id=static_cast<jule::U64>(4LLU);
				return _75117_t;;
			}
		}
		else if (_1c628c5b1_bytesHasPrefix(&(_75613_txt), jule::Str("//", 2))) {
			_case_begin_1ac21142d:;
			{
				_1c62939b3_lexLineComment(_self_, &(_75117_t));
				return _75117_t;;
			}
		}
		else if (_1c628c5b1_bytesHasPrefix(&(_75613_txt), jule::Str("/*", 2))) {
			_case_begin_1ac2107c3:;
			{
				_1c6293c6b_lexRangeComment(_self_, &(_75117_t));
				return _75117_t;;
			}
		}
		else if (_1c6295cb2_lexBasicOps(_self_, _75613_txt, &(_75117_t))) {
			_case_begin_1ac210839:;
			{
				goto _match_end_1ac20ebbd;
			}
		}
		else if (_1c62961ad_lexId(_self_, &(_75613_txt), &(_75117_t))) {
			_case_begin_1ac2108a0:;
			{
				{
					auto expr = &(_1c628b857_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac2156eb:;
					if (it != expr_end) {
						_1c628b428_kindPair *_78820_pair = it;
						{
							if (((*(_78820_pair))._field_kind == (*(_75117_t))._field_Kind)) {
								(*(_75117_t))._field_Id=(*(_78820_pair))._field_id;
								goto _iter_end_1ac2156eb;
							};
						}
						_iter_next_1ac2156eb:;
						++it;
						goto _iter_begin_1ac2156eb;
					}
					_iter_end_1ac2156eb:;
				};
			}
		}
		else {
			_case_begin_1ac21075c:;
			{
				jule::I32 _79518_r = 0;;
				jule::I64 _79521_sz = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22061dc39_DecodeRune(_75613_txt);
					_79518_r = __jule_assign_result.__jule_result_arg0;
					_79521_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1c6292ac2_pushErr(_self_, jule::Str("undefined token: @", 18), jule::Slice<jule::Any>::make({jule::Any(_79518_r, &__jule_any_type6)}));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_79521_sz;
				return _75117_t;;
			}
		}
		_match_end_1ac20ebbd:;
	};
	(*(_self_))._field_column+=_220620aa4_RuneCountStr((*(_75117_t))._field_Kind);
	return _75117_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c629253e_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c6297379_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c6298248_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c6298666_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c6299249_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c6299854_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c6299b51_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c6299ee7_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c629a2e4_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c629a679_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c629a976_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c629b0d6_IsUnsafe(_1c629ac73_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c629ac73_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c629b878_AutoSized(_1c629b515_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c629b515_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c629bc63_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c629c13c_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c629d57d_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c629d87a_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c629de52_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c629e24e_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c629e628_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c629ea02_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c629eea8_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62a063a_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62a0a14_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62a0ddd_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62a12b7_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62a1691_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62a1b47_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c62a262b_Unhandled(_1c62a22a7_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1c62a28b2_Ignored(_1c62a22a7_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*((*(_self_))._field_Exception))._field_Deferred);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62a22a7_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62a2c9c_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62a35c7_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62a3a7d_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62a43a8_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62a4aa1_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62a5541_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62a5ba1_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62a5e9d_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62a6454_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62a682d_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62a6c07_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62a7004_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62a7664_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62a7be7_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62a8b0a_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62a926a_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c62a9d2b_IsSelf(_1c62a99a7_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62a99a7_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c62ab26c_IsAnon(_1c62aae09_FnDecl* _self_) {
	return (*(_self_))._field_Ident.equal("<anonymous>", 11);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62aae09_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62abed7_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62ac3b1_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c62acdb7_IsInf(_1c62aca54_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62aca54_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c62ad6e2_IsWhileNext(_1c62ad37e_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62ad37e_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62adc86_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62ae160_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62ae539_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62ae9e0_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62aedb9_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62b0370_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62b0aac_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62b1063_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62b17a0_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62b20b9_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62b2570_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62b3131_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62b395b_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62b40bb_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62b4385_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62b4c7b_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62b54b8_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Inherits:" << _Src._field_Inherits << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62b5b28_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c62bc019_FieldIns> _1c62b72bc_instance(jule::Ptr<_1c62b6e48_Field> _self_) {
	return jule::new_ptr<_1c62bc019_FieldIns>(_1c62bc019_FieldIns{._field_Decl=_self_, });;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62b6e48_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62b8e28_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c62bcab9_StructIns> _1c62ba29d_instance(jule::Ptr<_1c62b9d3b_Struct> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	jule::Ptr<_1c62bcab9_StructIns> _10017_ins = jule::new_ptr<_1c62bcab9_StructIns>(_1c62bcab9_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_1c62bc019_FieldIns>>::alloc(0LL, (*(_self_))._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_1c6389da6_Var>>::alloc(0LL, (*(_self_))._field_Statics.len()), ._field_Refers=static__1c62d6099_new(), });;
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4e8a89:;
		if (it != expr_end) {
			jule::Ptr<_1c6389da6_Var> _10721_s = *it;
			{
				{ jule::Slice<jule::Ptr<_1c6389da6_Var>> &__jule_push_dest = (*(_10017_ins))._field_Statics; __jule_push_dest.push(jule::new_ptr<_1c6389da6_Var>((*(_10721_s)))); };
			}
			_iter_next_1ac4e8a89:;
			++it;
			goto _iter_begin_1ac4e8a89;
		}
		_iter_end_1ac4e8a89:;
	};
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4ea6d4:;
		if (it != expr_end) {
			jule::Ptr<_1c62b6e48_Field> _11121_f = *it;
			{
				{ jule::Slice<jule::Ptr<_1c62bc019_FieldIns>> &__jule_push_dest = (*(_10017_ins))._field_Fields; __jule_push_dest.push(_1c62b72bc_instance(_11121_f)); };
				if ((((!((*(_11121_f))._field_Mutable)) && ((*((*(_11121_f))._field_Kind))._field_Kind != nullptr)) && _1c641eda3_Mutable((*((*(_11121_f))._field_Kind))._field_Kind.ptr()))) {
					(*(_10017_ins))._field_Mutable=true;
				};
			}
			_iter_next_1ac4ea6d4:;
			++it;
			goto _iter_begin_1ac4ea6d4;
		}
		_iter_end_1ac4ea6d4:;
	};
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		(*(_10017_ins))._field_Methods=(*(_self_))._field_Methods;
	} else {
		(*(_10017_ins))._field_Methods=jule::Slice<jule::Ptr<_1c62cebec_Fn>>::alloc(0LL, (*(_self_))._field_Methods.len());
		{
			auto expr = &((*(_self_))._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac4ed94b:;
			if (it != expr_end) {
				jule::Ptr<_1c62cebec_Fn> _12225_f = *it;
				{
					jule::Ptr<_1c62cebec_Fn> _12325_fins = jule::new_ptr<_1c62cebec_Fn>((*(_12225_f)));;
					(*(_12325_fins))._field_Instances=nullptr;
					{ jule::Slice<jule::Ptr<_1c62cebec_Fn>> &__jule_push_dest = (*(_10017_ins))._field_Methods; __jule_push_dest.push(_12325_fins); };
				}
				_iter_next_1ac4ed94b:;
				++it;
				goto _iter_begin_1ac4ed94b;
			}
			_iter_end_1ac4ed94b:;
		};
	};
	return _10017_ins;;
}



inline jule::Ptr<_1c62bcab9_StructIns> _1c62ba5ab_appendInstance(_1c62b9d3b_Struct* _self_, jule::Ptr<_1c62bcab9_StructIns>* _13438_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac50072d:;
		if (it != expr_end) {
			jule::Ptr<_1c62bcab9_StructIns> _14021_ains = *it;
			{
				if (_1c62bd735_Same(_14021_ains.ptr(), (*(_13438_ins)))) {
					return _14021_ains;;
				};
			}
			_iter_next_1ac50072d:;
			++it;
			goto _iter_begin_1ac50072d;
		}
		_iter_end_1ac50072d:;
	};
	{ jule::Slice<jule::Ptr<_1c62bcab9_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13438_ins))); };
	return nullptr;;
}



inline jule::Ptr<_1c62cebec_Fn> _1c62ba9a7_FindMethod(_1c62b9d3b_Struct* _self_, jule::Str _15229_ident, jule::Bool _15241_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac502730:;
		if (it != expr_end) {
			jule::Ptr<_1c62cebec_Fn> _15321_f = *it;
			{
				if ((((*(_15321_f))._field_Statically == _15241_statically) && ((*(_15321_f))._field_Ident == _15229_ident))) {
					return _15321_f;;
				};
			}
			_iter_next_1ac502730:;
			++it;
			goto _iter_begin_1ac502730;
		}
		_iter_end_1ac502730:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c6389da6_Var> _1c62bace8_FindStatic(_1c62b9d3b_Struct* _self_, jule::Str _16329_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac503a50:;
		if (it != expr_end) {
			jule::Ptr<_1c6389da6_Var> _16421_v = *it;
			{
				if (((*(_16421_v))._field_Ident == _16329_ident)) {
					return _16421_v;;
				};
			}
			_iter_next_1ac503a50:;
			++it;
			goto _iter_begin_1ac503a50;
		}
		_iter_end_1ac503a50:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c62b6e48_Field> _1c62bb139_FindField(_1c62b9d3b_Struct* _self_, jule::Str _17428_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac504226:;
		if (it != expr_end) {
			jule::Ptr<_1c62b6e48_Field> _17521_f = *it;
			{
				if (((*(_17521_f))._field_Ident == _17428_ident)) {
					return _17521_f;;
				};
			}
			_iter_next_1ac504226:;
			++it;
			goto _iter_begin_1ac504226;
		}
		_iter_end_1ac504226:;
	};
	return nullptr;;
}



inline jule::Bool _1c62bb47a_IsImplements(_1c62b9d3b_Struct* _self_, jule::Ptr<_1c62e2e96_Trait> _18427_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac505227:;
		if (it != expr_end) {
			jule::Ptr<_1c62e2e96_Trait> *_18516_it = it;
			{
				if ((_18427_t == (*(_18516_it)))) {
					return true;;
				};
			}
			_iter_next_1ac505227:;
			++it;
			goto _iter_begin_1ac505227;
		}
		_iter_end_1ac505227:;
	};
	return false;;
}



inline jule::Bool _1c62bb7bb_IsUses(_1c62b9d3b_Struct* _self_, jule::Ptr<_1c62b9d3b_Struct> _19421_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac506877:;
		if (it != expr_end) {
			jule::Ptr<_1c62b9d3b_Struct> *_19516_u = it;
			{
				while ((_19421_s == (*(_19516_u)))) {
					{
						return true;;
					}
				_iter_next_1ac50716e:;
				}
				_iter_end_1ac50716e:;;
			}
			_iter_next_1ac506877:;
			++it;
			goto _iter_begin_1ac506877;
		}
		_iter_end_1ac506877:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62b9d3b_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62bc019_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62c19ad_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62c1ea8_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62c2382_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62c28b0_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62c2c56_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62c3053_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62c35d6_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62c3e88_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62c4362_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62c4818_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62c4be2_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62c50bb_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62c5572_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62c5b05_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62c6188_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62c6a29_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62c6ed0_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62c73a9_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62c76a6_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62c7a80_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62c7e59_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62c8333_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62c870c_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62c8bb3_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62c9169_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62c9543_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62c9840_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62c9b3c_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62ca016_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62ca3e0_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62ca7b9_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62c6375_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62caee5_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62cb2e2_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62cb5de_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62cb9b8_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62cbcb5_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62cc997_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c62d1b55_ParamIns> _1c62cd5ad_instance(jule::Ptr<_1c62cd228_Param> _self_) {
	return jule::new_ptr<_1c62d1b55_ParamIns>(_1c62d1b55_ParamIns{._field_Decl=_self_, });;
}



inline jule::Bool _1c62cd844_IsSelf(_1c62cd228_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1c62cdaca_IsRef(_1c62cd228_Param* _self_) {
	return (!((*(_self_))._field_Ident).empty() && ((*(_self_))._field_Ident[0LL] == '&'));;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62cd228_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c62d0170_IsVoid(_1c62cebec_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1c62d0406_IsMethod(_1c62cebec_Fn* _self_) {
	return ((*(_self_))._field_Owner != nullptr);;
}



inline jule::Bool _1c62d068c_IsEntryPoint(_1c62cebec_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1c62d0923_IsInit(_1c62cebec_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1c62d0ba9_IsAnon(_1c62cebec_Fn* _self_) {
	return _1c6286764_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1c62d0e40_AnyVar(_1c62cebec_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*((*(_self_))._field_Result))._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1c62d2b01_FnIns> _1c62d11c6_instanceForce(jule::Ptr<_1c62cebec_Fn> _self_) {
	jule::Ptr<_1c62d2b01_FnIns> _10117_ins = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_1c6320754_Scope>(), ._field_Refers=static__1c62d6099_new(), });;
	(*(_10117_ins))._field_Params=jule::Slice<jule::Ptr<_1c62d1b55_ParamIns>>::alloc(0LL, (*(_self_))._field_Params.len());
	{
		auto expr = &((*(_self_))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac51da04:;
		if (it != expr_end) {
			jule::Ptr<_1c62cd228_Param> _10821_p = *it;
			{
				{ jule::Slice<jule::Ptr<_1c62d1b55_ParamIns>> &__jule_push_dest = (*(_10117_ins))._field_Params; __jule_push_dest.push(_1c62cd5ad_instance(_10821_p)); };
			}
			_iter_next_1ac51da04:;
			++it;
			goto _iter_begin_1ac51da04;
		}
		_iter_end_1ac51da04:;
	};
	if (((*((*(_10117_ins))._field_Decl))._field_Result != nullptr)) {
		(*(_10117_ins))._field_Result=(*((*((*((*(_10117_ins))._field_Decl))._field_Result))._field_Kind))._field_Kind;
	};
	return _10117_ins;;
}



inline jule::Ptr<_1c62d2b01_FnIns> _1c62d145c_instance(jule::Ptr<_1c62cebec_Fn> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	return _1c62d11c6_instanceForce(_self_);;
}



inline jule::Ptr<_1c62d2b01_FnIns> _1c62d176a_appendInstance(_1c62cebec_Fn* _self_, jule::Ptr<_1c62d2b01_FnIns>* _12938_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_1c62d2b01_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_1c62d2b01_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac523c07:;
		if (it != expr_end) {
			jule::Ptr<_1c62d2b01_FnIns> _14521_ains = *it;
			{
				if (_1c62d465d_Same(_14521_ains.ptr(), (*(_12938_ins)))) {
					return _14521_ains;;
				};
			}
			_iter_next_1ac523c07:;
			++it;
			goto _iter_begin_1ac523c07;
		}
		_iter_end_1ac523c07:;
	};
	{ jule::Slice<jule::Ptr<_1c62d2b01_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62cebec_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c62d1eb8_Str(_1c62d1b55_ParamIns* _self_) {
	_2206c697e_StrBuilder _16717_s = static__2206c6c9d_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Mutable) {
		_2206d0625_WriteStr(&_16717_s, jule::Str("mut ", 4));
	};
	if ((*((*(_self_))._field_Decl))._field_Reference) {
		_2206d0625_WriteStr(&_16717_s, jule::Str("&_:", 3));
	};
	if (_1c62cd844_IsSelf((*(_self_))._field_Decl.ptr())) {
		if (_1c62cdaca_IsRef((*(_self_))._field_Decl.ptr())) {
			_2206d08cd_WriteByte(&_16717_s, '&');
		};
		_2206d0625_WriteStr(&_16717_s, jule::Str("self", 4));
		return _2206d0e1c_Str(&_16717_s);;
	};
	if ((*((*(_self_))._field_Decl))._field_Variadic) {
		_2206d0625_WriteStr(&_16717_s, jule::Str("...", 3));
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_2206d0625_WriteStr(&_16717_s, _1c641d8da_Str((*(_self_))._field_Kind.ptr()));
	};
	return _2206d0e1c_Str(&_16717_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62d1b55_ParamIns _Src) {
	_Stream << _1c62d1eb8_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c62d2e42_Str(_1c62d2b01_FnIns* _self_) {
	;
	return _1c62d499e_GetKindStr(_self_, false);;
}



inline jule::Bool _1c62d3283_Equal(jule::Ptr<_1c62d2b01_FnIns> _self_, jule::Ptr<_1c641d522_TypeKind> _21821_other) {
	jule::Ptr<_1c62d2b01_FnIns> _21913_f = _1c6421e60_Fn(_21821_other.ptr());;
	if ((_21913_f == nullptr)) {
		return false;;
	};
	return _1c62d3728_EqualFn(_self_, &(_21913_f));;
}



inline jule::Bool _1c62d3728_EqualFn(jule::Ptr<_1c62d2b01_FnIns> _self_, jule::Ptr<_1c62d2b01_FnIns>* _22924_f) {
	if (((*((*(_self_))._field_Decl))._field_Exceptional != (*((*((*(_22924_f))))._field_Decl))._field_Exceptional)) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Unsafety != (*((*((*(_22924_f))))._field_Decl))._field_Unsafety)) {
		return false;;
	};
	if ((_1c62d0170_IsVoid((*(_self_))._field_Decl.ptr()) != _1c62d0170_IsVoid((*((*(_22924_f))))._field_Decl.ptr()))) {
		return false;;
	};
	jule::Fn<jule::Bool(jule::Ptr<_1c62d1b55_ParamIns>,jule::Ptr<_1c62d1b55_ParamIns>)> _23913_checkParams = jule::Fn<jule::Bool(jule::Ptr<_1c62d1b55_ParamIns>,jule::Ptr<_1c62d1b55_ParamIns>)>([=](jule::Ptr<_1c62d1b55_ParamIns> _23930_p1, jule::Ptr<_1c62d1b55_ParamIns> _23945_p2) mutable -> jule::Bool {
		if (((*((*(_23930_p1))._field_Decl))._field_Mutable != (*((*(_23945_p2))._field_Decl))._field_Mutable)) {
			return false;;
		};
		if (_1c62cd844_IsSelf((*(_23930_p1))._field_Decl.ptr())) {
			if ((!(_1c62cd844_IsSelf((*(_23945_p2))._field_Decl.ptr())))) {
				return false;;
			};
			if ((_1c62cdaca_IsRef((*(_23930_p1))._field_Decl.ptr()) != _1c62cdaca_IsRef((*(_23945_p2))._field_Decl.ptr()))) {
				return false;;
			};
			return true;;
		};
		if (((*((*(_23930_p1))._field_Decl))._field_Reference != (*((*(_23945_p2))._field_Decl))._field_Reference)) {
			return false;;
		};
		if (((*((*(_23930_p1))._field_Decl))._field_Variadic != (*((*(_23945_p2))._field_Decl))._field_Variadic)) {
			return false;;
		};
		return _1c641dc2b_Equal((*(_23930_p1))._field_Kind, (*(_23945_p2))._field_Kind);;
	});;
	if (((*((*(_22924_f))))._field_Params.len() != (*(_self_))._field_Params.len())) {
		return false;;
	};
	jule::I64 _27117_i = 0LL;;
	for (; (_27117_i < (*(_self_))._field_Params.len()); (_27117_i)++) {
		{
			if ((!(_23913_checkParams((*(_self_))._field_Params[_27117_i], (*((*(_22924_f))))._field_Params[_27117_i])))) {
				return false;;
			};
		}
	_iter_next_1ac535411:;
	}
	_iter_end_1ac535411:;;
	if ((!(_1c62d0170_IsVoid((*(_self_))._field_Decl.ptr())))) {
		if ((!(_1c641dc2b_Equal((*(_self_))._field_Result, (*((*(_22924_f))))._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1c62d3a69_equalTrait(jule::Ptr<_1c62d2b01_FnIns> _self_, jule::Ptr<_1c62d2b01_FnIns>* _28827_other) {
	if (((*((*(_self_))._field_Decl))._field_Public != (*((*((*(_28827_other))))._field_Decl))._field_Public)) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Ident != (*((*((*(_28827_other))))._field_Decl))._field_Ident)) {
		return false;;
	};
	if ((!(_1c62d3728_EqualFn(_self_, _28827_other)))) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Generics.len() != (*((*((*(_28827_other))))._field_Decl))._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1c641d522_TypeKind>> _1c62d3d00_Types(_1c62d2b01_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1ac53aacb:;
			{
				return nullptr;;
			}
		}
		else if ((_1c6422999_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1ac53ab42:;
			{
				return jule::Slice<jule::Ptr<_1c641d522_TypeKind>>::make({(*(_self_))._field_Result});;
			}
		}
		else {
			_case_begin_1ac53aa65:;
			{
				return (*(_1c6422999_Tup((*(_self_))._field_Result.ptr())))._field_Types;;
			}
		}
		_match_end_1ac53a999:;
	};
}



inline jule::Bool _1c62d4086_IsBuiltin(_1c62d2b01_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1c62d431c_IsAnon(_1c62d2b01_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1c62d0ba9_IsAnon((*(_self_))._field_Decl.ptr())));;
}



inline jule::Bool _1c62d465d_Same(_1c62d2b01_FnIns* _self_, jule::Ptr<_1c62d2b01_FnIns> _33119_f) {
	if ((((*(_self_))._field_Decl != (*(_33119_f))._field_Decl) || ((*(_33119_f))._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac53d8ae:;
		if (it != expr_end) {
			jule::I64 _33613_i = it - expr->begin();
			jule::Ptr<_1c641bb3b_InsGeneric> *_33616_g = it;
			{
				jule::Ptr<_1c641bb3b_InsGeneric> _33717_g2 = (*(_33119_f))._field_Generics[_33613_i];;
				if ((((*((*((*(_33616_g))))._field_Kind))._field_BindIdent != (*((*(_33717_g2))._field_Kind))._field_BindIdent) || (!(_1c641dc2b_Equal((*((*(_33616_g))))._field_Kind, (*(_33717_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1ac53d8ae:;
			++it;
			_33613_i++;
			goto _iter_begin_1ac53d8ae;
		}
		_iter_end_1ac53d8ae:;
	};
	return true;;
}



inline jule::Str _1c62d499e_GetKindStr(_1c62d2b01_FnIns* _self_, jule::Bool _34825_ident) {
	_2206c697e_StrBuilder _34917_s = static__2206c6c9d_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Unsafety) {
		_2206d0625_WriteStr(&_34917_s, jule::Str("unsafe ", 7));
	};
	_2206d0625_WriteStr(&_34917_s, jule::Str("fn", 2));
	if ((_34825_ident && ((*(_self_))._field_Decl != nullptr))) {
		_2206d08cd_WriteByte(&_34917_s, ' ');
		_2206d0625_WriteStr(&_34917_s, (*((*(_self_))._field_Decl))._field_Ident);
	};
	_2206d08cd_WriteByte(&_34917_s, '(');
	jule::I64 _36313_n = (*(_self_))._field_Params.len();;
	if ((_36313_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac5447b6:;
			if (it != expr_end) {
				jule::I64 _36517_i = it - expr->begin();
				jule::Ptr<_1c62d1b55_ParamIns> *_36520_p = it;
				{
					_2206d0625_WriteStr(&_34917_s, _1c62d1eb8_Str((*(_36520_p)).ptr()));
					if ((_36517_i < ((*(_self_))._field_Params.len() - 1LL))) {
						_2206d08cd_WriteByte(&_34917_s, ',');
					};
				}
				_iter_next_1ac5447b6:;
				++it;
				_36517_i++;
				goto _iter_begin_1ac5447b6;
			}
			_iter_end_1ac5447b6:;
		};
	};
	_2206d08cd_WriteByte(&_34917_s, ')');
	if ((*((*(_self_))._field_Decl))._field_Exceptional) {
		_2206d08cd_WriteByte(&_34917_s, '!');
	};
	if ((!(_1c62d0170_IsVoid((*(_self_))._field_Decl.ptr())))) {
		_2206d08cd_WriteByte(&_34917_s, ':');
		_2206d0625_WriteStr(&_34917_s, _1c641d8da_Str((*(_self_))._field_Result.ptr()));
	};
	return _2206d0e1c_Str(&_34917_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62d2b01_FnIns _Src) {
	_Stream << _1c62d2e42_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1c62d5c9c_ReferenceStack> static__1c62d6099_new(void) {
	return jule::new_ptr<_1c62d5c9c_ReferenceStack>(_1c62d5c9c_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});;
}



inline jule::I64 _1c62d6495_Len(_1c62d5c9c_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_buffer.len());;
}



inline jule::Any _1c62d67d6_At(_1c62d5c9c_ReferenceStack* _self_, jule::I64 _6821_i) {
	return (*(_self_))._field_buffer[_6821_i];;
}



inline void _1c62d6a8e_Push(_1c62d5c9c_ReferenceStack* _self_, jule::Any _7327_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_7327_ref); };
}



inline jule::Bool _1acda05d8_Exist(_1c62d5c9c_ReferenceStack* _self_, jule::Ptr<_1c62d2b01_FnIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acda17d7:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type7_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1acda17d7:;
			++it;
			goto _iter_begin_1acda17d7;
		}
		_iter_end_1acda17d7:;
	};
	return false;;
}

inline jule::Bool _1acdb7da3_Exist(_1c62d5c9c_ReferenceStack* _self_, jule::Ptr<_1c6389da6_Var> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acdb905d:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type8_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1acdb905d:;
			++it;
			goto _iter_begin_1acdb905d;
		}
		_iter_end_1acdb905d:;
	};
	return false;;
}

inline jule::Bool _1ace7d9e6_Exist(_1c62d5c9c_ReferenceStack* _self_, jule::Ptr<_1c62bcab9_StructIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace7ebe5:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type9_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1ace7ebe5:;
			++it;
			goto _iter_begin_1ace7ebe5;
		}
		_iter_end_1ace7ebe5:;
	};
	return false;;
}

inline jule::Bool _1ad2ac550_Exist(_1c62d5c9c_ReferenceStack* _self_, jule::Ptr<_1c62e2e96_Trait> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad2ad6c7:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type10_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1ad2ad6c7:;
			++it;
			goto _iter_begin_1ad2ad6c7;
		}
		_iter_end_1ad2ad6c7:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62d5c9c_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62d72ba_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline void _1c62dc721_pushErr(_1c62dbd80_symbolBuilder* _self_, jule::Ptr<_1c6283a3b_Token>* _33227_token, jule::Str _33242_fmt, jule::Slice<jule::Any> _33255_args) {
	{ jule::Slice<_221968cb9_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1c6365689_compilerErr(_33227_token, true, _33242_fmt, _33255_args)); };
}



inline void _1c62dcea2_pushSuggestion(_1c62dbd80_symbolBuilder* _self_, jule::Str _34133_fmt, jule::Slice<jule::Any> _34146_args) {
	{
		_1c6366bb8_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _34133_fmt, _34146_args);
	};
}



inline jule::Bool _1c62dd39d_checkCppUseDeclPath(_1c62dbd80_symbolBuilder* _self_, jule::Ptr<_1c62b20b9_UseDecl>* _34539_decl, jule::Str* _34556_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _34613_ext = _2218c8eb0_Ext((*(_34556_path)));;
	if (((!(_22195be11_IsValidHeaderExt(_34613_ext))) && (!(_22195c1ca_IsValidCppExt(_34613_ext))))) {
		_1c62dc721_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str("invalid C++ extension: @", 24), jule::Slice<jule::Any>::make({jule::Any(_34613_ext, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_220514921_Status> _35313_info = ({
		auto except = static__2218cb017_Of((*(_34556_path)));
		(except.ok()) ? (except.result) : ({{
			_1c62dc721_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_34539_decl))))._field_LinkPath, &__jule_any_type4)}));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_220514921_Status>(nullptr);});
	});;
	if (_220514cea_IsDir(_35313_info.ptr())) {
		_1c62dc721_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_34539_decl))))._field_LinkPath, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1c63469de_ImportInfo> _1c62dd6ab_buildCppHeaderImport(_1c62dbd80_symbolBuilder* _self_, jule::Ptr<_1c62b20b9_UseDecl>* _36544_decl) {
	jule::Str _36617_path = (*((*(_36544_decl))))._field_LinkPath;;
	if ((!(_22195bb58_IsStdHeaderPath((*((*(_36544_decl))))._field_LinkPath)))) {
		_36617_path=_2218c8be6_Join(jule::Slice<jule::Str>::make({_1c6289976_Dir((*((*((*(_36544_decl))))._field_Token))._field_File.ptr()),(*((*(_36544_decl))))._field_LinkPath}));
		jule::Bool _37021_ok = _1c62dd39d_checkCppUseDeclPath(_self_, _36544_decl, &(_36617_path));;
		if ((!(_37021_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2218c9279_Abs(_36617_path);
			_36617_path = __jule_assign_result.__jule_result_arg0;
			_37021_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_37021_ok))) {
			_1c62dc721_pushErr(_self_, &((*((*(_36544_decl))))._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_36544_decl))))._field_LinkPath, &__jule_any_type4)}));
		};
	};
	return jule::new_ptr<_1c63469de_ImportInfo>(_1c63469de_ImportInfo{._field_Token=(*((*(_36544_decl))))._field_Token, ._field_Path=_36617_path, ._field_LinkPath=(*((*(_36544_decl))))._field_LinkPath, ._field_Ident=jule::Str(), ._field_Binded=true, ._field_Std=false, ._field_Package=nullptr, });;
}



inline jule::Ptr<_1c63469de_ImportInfo> _1c62dd9ec_buildStdImport(_1c62dbd80_symbolBuilder* _self_, jule::Ptr<_1c62b20b9_UseDecl>* _39338_decl) {
	jule::Str _39417_path = (*((*(_39338_decl))))._field_LinkPath.slice(5LL);;
	_39417_path=_2218c441c_Replace(_39417_path, jule::Str("::", 2), jule::Str("\\", 1), -1LL);
	_39417_path=_2218c8be6_Join(jule::Slice<jule::Str>::make({_221a2e764_PathStdlib,_39417_path}));
	jule::Bool _39720_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2218c9279_Abs(_39417_path);
		_39417_path = __jule_assign_result.__jule_result_arg0;
		_39720_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_39720_ok))) {
		_1c62dc721_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_220514921_Status> _40413_info = ({
		auto except = static__2218cb017_Of(_39417_path);
		(except.ok()) ? (except.result) : ({{
			_1c62dc721_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
			return nullptr;;
		} jule::Ptr<_220514921_Status>(nullptr);});
	});;
	if ((!(_220514cea_IsDir(_40413_info.ptr())))) {
		_1c62dc721_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _41413_i = (_2218be79c_FindLast((*((*(_39338_decl))))._field_LinkPath, jule::Str("::", 2)) + 1LL);;
	jule::Str _41513_ident = (*((*(_39338_decl))))._field_LinkPath.slice(_41413_i);;
	return jule::new_ptr<_1c63469de_ImportInfo>(_1c63469de_ImportInfo{._field_Token=(*((*(_39338_decl))))._field_Token, ._field_Path=_39417_path, ._field_LinkPath=(*((*(_39338_decl))))._field_LinkPath, ._field_Ident=_41513_ident, ._field_Alias=(*((*(_39338_decl))))._field_Alias, ._field_Binded=false, ._field_Std=true, ._field_ImportAll=(*((*(_39338_decl))))._field_Full, ._field_Package=jule::new_ptr<_1c6349915_Package>(_1c6349915_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1c63469de_ImportInfo> _1c62ddd3d_buildIdentImport(jule::Ptr<_1c62dbd80_symbolBuilder> _self_, jule::Ptr<_1c62b20b9_UseDecl>* _43241_decl) {
	jule::Str _43313_modPath = _1c6343ac9_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1c6342b3e_GetModPath((*(_self_))._field_importer);;
	if ((_43313_modPath.len() == 0LL)) {
		_1c62dc721_pushErr(_self_.ptr(), &((*((*(_43241_decl))))._field_Token), jule::Str("no module file found in current directory or any parent directory", 65), jule::Slice<jule::Any>());
		_1c62dcea2_pushSuggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _44017_path = (*((*(_43241_decl))))._field_LinkPath;;
	_44017_path=_2218c441c_Replace(_44017_path, jule::Str("::", 2), jule::Str("\\", 1), -1LL);
	_44017_path=_2218c8be6_Join(jule::Slice<jule::Str>::make({_43313_modPath,_44017_path}));
	jule::Bool _44420_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2218c9279_Abs(_44017_path);
		_44017_path = __jule_assign_result.__jule_result_arg0;
		_44420_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_44420_ok))) {
		_1c62dc721_pushErr(_self_.ptr(), &((*((*(_43241_decl))))._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43241_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_220514921_Status> _45113_info = ({
		auto except = static__2218cb017_Of(_44017_path);
		(except.ok()) ? (except.result) : ({{
			_1c62dc721_pushErr(_self_.ptr(), &((*((*(_43241_decl))))._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43241_decl))))._field_LinkPath, &__jule_any_type4)}));
			return nullptr;;
		} jule::Ptr<_220514921_Status>(nullptr);});
	});;
	if ((!(_220514cea_IsDir(_45113_info.ptr())))) {
		_1c62dc721_pushErr(_self_.ptr(), &((*((*(_43241_decl))))._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43241_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _46113_i = (_2218be79c_FindLast((*((*(_43241_decl))))._field_LinkPath, jule::Str("::", 2)) + 1LL);;
	jule::Str _46213_ident = (*((*(_43241_decl))))._field_LinkPath.slice(_46113_i);;
	return jule::new_ptr<_1c63469de_ImportInfo>(_1c63469de_ImportInfo{._field_Token=(*((*(_43241_decl))))._field_Token, ._field_Path=_44017_path, ._field_LinkPath=(*((*(_43241_decl))))._field_LinkPath, ._field_Ident=_46213_ident, ._field_Alias=(*((*(_43241_decl))))._field_Alias, ._field_Binded=false, ._field_Std=false, ._field_ImportAll=(*((*(_43241_decl))))._field_Full, ._field_Package=jule::new_ptr<_1c6349915_Package>(_1c6349915_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1c63469de_ImportInfo> _1c62de17e_buildImport(jule::Ptr<_1c62dbd80_symbolBuilder> _self_, jule::Ptr<_1c62b20b9_UseDecl>* _47936_decl) {
	{
		
		if ((*((*(_47936_decl))))._field_Binded) {
			_case_begin_1ac582c44:;
			{
				return _1c62dd6ab_buildCppHeaderImport(_self_.ptr(), _47936_decl);;
			}
		}
		else if ((*((*(_47936_decl))))._field_Std) {
			_case_begin_1ac582606:;
			{
				return _1c62dd9ec_buildStdImport(_self_.ptr(), _47936_decl);;
			}
		}
		else {
			_case_begin_1ac582590:;
			{
				return _1c62ddd3d_buildIdentImport(_self_, _47936_decl);;
			}
		}
		_match_end_1ac5824c4:;
	};
}



inline jule::Bool _1c62de4c0_checkDuplicateUseDecl(_1c62dbd80_symbolBuilder* _self_, jule::Ptr<_1c63469de_ImportInfo>* _49041_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c63469de_ImportInfo> _49213_lpkg = _1c63d861e_SelectPackage((*(_self_))._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1c63469de_ImportInfo>)>([=](jule::Ptr<_1c63469de_ImportInfo> _49248_spkg) mutable -> jule::Bool {
		return ((*((*(_49041_pkg))))._field_Path == (*(_49248_spkg))._field_Path);;
	}));;
	if ((_49213_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1c62dc721_pushErr(_self_, &((*((*(_49041_pkg))))._field_Token), jule::Str("use declaration duplication: @ is already used above", 52), jule::Slice<jule::Any>::make({jule::Any((*((*(_49041_pkg))))._field_LinkPath, &__jule_any_type4)}));
	_1c62dcea2_pushSuggestion(_self_, jule::Str("remove this use declaration, already used, it is safe", 53), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _1c62de833_implImportSelections(_1c62dbd80_symbolBuilder* _self_, jule::Ptr<_1c63469de_ImportInfo>* _50444_imp, jule::Ptr<_1c62b20b9_UseDecl>* _50467_decl) {
	(*((*(_50444_imp))))._field_Selected=(*((*(_50467_decl))))._field_Selected;
	{
		auto expr = &((*((*(_50444_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac587133:;
		if (it != expr_end) {
			jule::Ptr<_1c6283a3b_Token> _50616_item = *it;
			{
				{
					auto expr = &((*((*(_50444_imp))))._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac587c9e:;
					if (it != expr_end) {
						jule::Ptr<_1c6283a3b_Token> _50720_citem = *it;
						{
							if ((_50616_item == _50720_citem)) {
								goto _iter_end_1ac587c9e;
							} else if (((*(_50616_item))._field_Kind == (*(_50720_citem))._field_Kind)) {
								_1c62dc721_pushErr(_self_, &(_50616_item), jule::Str("duplicated selection: @ is already selected", 43), jule::Slice<jule::Any>::make({jule::Any((*(_50616_item))._field_Kind, &__jule_any_type4)}));
								_1c62dcea2_pushSuggestion(_self_, jule::Str("remove this use selection, already selected, it is safe", 55), jule::Slice<jule::Any>());
								goto _iter_end_1ac587c9e;
							};
						}
						_iter_next_1ac587c9e:;
						++it;
						goto _iter_begin_1ac587c9e;
					}
					_iter_end_1ac587c9e:;
				};
			}
			_iter_next_1ac587133:;
			++it;
			goto _iter_begin_1ac587133;
		}
		_iter_end_1ac587133:;
	};
}



inline jule::Str _1c62deb74_getAsLinkPath(jule::Ptr<_1c62dbd80_symbolBuilder> _self_, jule::Str _51937_path) {
	if (_2218bcd3e_HasPrefix(_51937_path, _221a2e764_PathStdlib)) {
		(_51937_path).mut_slice(_221a2e764_PathStdlib.len());;
		return (jule::Str("std", 3) + _2218c441c_Replace(_51937_path, jule::Str("\\", 1), jule::Str("::", 2), -1LL));;
	};
	jule::Str _52514_root;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2218c9279_Abs(_1c6343ac9_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1c6342b3e_GetModPath((*(_self_))._field_importer));
		_52514_root = __jule_assign_result.__jule_result_arg0;
	});
	(_51937_path).mut_slice(_52514_root.len());;
	if ((_51937_path[0LL] == 92LLU)) {
		(_51937_path).mut_slice(1LL);;
	};
	return _2218c441c_Replace(_51937_path, jule::Str("\\", 1), jule::Str("::", 2), -1LL);;
}



inline void _1c62e0092_pushCycleError(jule::Ptr<_1c62dbd80_symbolBuilder> _self_, jule::Ptr<_1c62dbd80_symbolBuilder>* _53335_sb, jule::Str _53355_path, _2206c697e_StrBuilder* _53371_message) {
	;
	jule::Str _53513_refersTo = _22196922b_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_1c62deb74_getAsLinkPath(_self_, _1c6289976_Dir((*((*((*(_53335_sb))))._field_table))._field_File.ptr())), &__jule_any_type4),jule::Any(_1c62deb74_getAsLinkPath(_self_, _53355_path), &__jule_any_type4)}));;
	jule::Slice<jule::U8> _53913_buf = _2206d18bd_Buf(_53371_message);;
	_2206d0625_WriteStr(_53371_message, _2218bc547_Repeat(jule::Str(" ", 1), 7LL));
	_2206d0625_WriteStr(_53371_message, _53513_refersTo);
	_2206d08cd_WriteByte(_53371_message, '\n');
	_2206d036c_Write(_53371_message, _53913_buf);
}



inline void _1c62e04b0_pushCrossCycleError(jule::Ptr<_1c62dbd80_symbolBuilder> _self_, jule::Ptr<_1c62dbd80_symbolBuilder>* _54640_target, jule::Ptr<_1c63469de_ImportInfo>* _54665_imp, jule::Ptr<_1c6283a3b_Token>* _54684_errorToken) {
	_2206c697e_StrBuilder _54717_message = static__2206c6c9d_New(32LL);;
	_1c62e0092_pushCycleError(_self_, &(_self_), (*((*(_54665_imp))))._field_Path, &(_54717_message));
	jule::Ptr<_1c62dbd80_symbolBuilder> _55117_owner = (*(_self_))._field_owner;;
	jule::Ptr<_1c62dbd80_symbolBuilder> _55217_old = _self_;;
	while (((*(_55117_owner))._field_owner != nullptr)) {
		{
			_1c62e0092_pushCycleError(_self_, &((*(_55217_old))._field_owner), _1c6289976_Dir((*((*(_55217_old))._field_table))._field_File.ptr()), &(_54717_message));
			if (((*(_55117_owner))._field_owner == (*(_54640_target)))) {
				_1c62e0092_pushCycleError(_self_, _54640_target, _1c6289976_Dir((*((*(_55117_owner))._field_table))._field_File.ptr()), &(_54717_message));
				goto _iter_end_1ac59588e;
			};
			_55217_old=_55117_owner;
			_55117_owner=(*(_55117_owner))._field_owner;
		}
	_iter_next_1ac59588e:;
	}
	_iter_end_1ac59588e:;;
	_1c62dc721_pushErr(_self_.ptr(), _54684_errorToken, jule::Str("illegal cross cycle in use declarations;\n@", 42), jule::Slice<jule::Any>::make({jule::Any(_2206d0e1c_Str(&_54717_message), &__jule_any_type4)}));
}



inline jule::Bool _1c62e08ab_checkImportCycles(jule::Ptr<_1c62dbd80_symbolBuilder> _self_, jule::Ptr<_1c63469de_ImportInfo> _56937_imp, jule::Ptr<_1c62b20b9_UseDecl>* _56956_decl) {
	if (((*(_56937_imp))._field_Path == _1c6289976_Dir((*((*(_self_))._field_table))._field_File.ptr()))) {
		_1c62dc721_pushErr(_self_.ptr(), &((*((*(_56956_decl))))._field_Token), jule::Str("illegal cycle in use declaration, package @ refers to itself", 60), jule::Slice<jule::Any>::make({jule::Any(_1c62deb74_getAsLinkPath(_self_, (*(_56937_imp))._field_Path), &__jule_any_type4)}));
		return false;;
	};
	if (((*(_self_))._field_owner == nullptr)) {
		return true;;
	};
	if ((_1c6289976_Dir((*((*((*(_self_))._field_owner))._field_table))._field_File.ptr()) == (*(_56937_imp))._field_Path)) {
		_1c62e04b0_pushCrossCycleError(_self_, &((*(_self_))._field_owner), &(_56937_imp), &((*((*(_56956_decl))))._field_Token));
		return false;;
	};
	jule::Ptr<_1c62dbd80_symbolBuilder> _58417_owner = (*(_self_))._field_owner;;
	_julec_label_1ac59b730:;
	if ((_1c6289976_Dir((*((*(_58417_owner))._field_table))._field_File.ptr()) == (*(_56937_imp))._field_Path)) {
		_1c62e04b0_pushCrossCycleError(_self_, &(_58417_owner), &(_56937_imp), &((*((*(_56956_decl))))._field_Token));
		return false;;
	};
	if (((*(_58417_owner))._field_owner != nullptr)) {
		_58417_owner=(*(_58417_owner))._field_owner;
		goto _julec_label_1ac59b730;
	};
	return true;;
}



inline void _1c62e0cc9_checkPackageAccessibility(_1c62dbd80_symbolBuilder* _self_, jule::Ptr<_1c62b20b9_UseDecl>* _60545_decl, jule::Str* _60562_mod, jule::Str* _60573_path) {
	if (((_1c6343ac9_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1c6342b3e_GetModPath((*(_self_))._field_importer) != (*(_60562_mod))) && _2218c3042_Contains((*(_60573_path)), jule::Str("internal", 8)))) {
		_1c62dc721_pushErr(_self_, &((*((*(_60545_decl))))._field_Token), jule::Str("you cannot access to internal packages", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1c62e11c5_importPackage(jule::Ptr<_1c62dbd80_symbolBuilder> _self_, jule::Ptr<_1c63469de_ImportInfo>* _61138_imp, jule::Ptr<_1c62b20b9_UseDecl>* _61161_decl) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_61138_imp))))._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1c63469de_ImportInfo> _61617_port = _1c6343ac9_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1c63432c1_GetImport((*(_self_))._field_importer, (*((*(_61138_imp))))._field_Path);;
	if ((_61617_port != nullptr)) {
		(*((*(_61138_imp))))._field_Package=(*(_61617_port))._field_Package;
		(*((*(_61138_imp))))._field_Duplicate=true;
		jule::Str _62117_oldMod = _1c6343ac9_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1c6342b3e_GetModPath((*(_self_))._field_importer);;
		_1c6343ac9_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1c63428a8_SetModPath((*(_self_))._field_importer, _1c6343ac9_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1c6342e80_ModById((*(_self_))._field_importer, (*((*(_61138_imp))))._field_ModId));
		_1c62e0cc9_checkPackageAccessibility(_self_.ptr(), _61161_decl, &(_62117_oldMod), &((*(_61617_port))._field_Path));
		_1c6343ac9_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1c63428a8_SetModPath((*(_self_))._field_importer, _62117_oldMod);
	} else {
		if ((!(_1c62e08ab_checkImportCycles(_self_, (*(_61138_imp)), _61161_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _63017_oldMod = _1c6343ac9_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1c6342b3e_GetModPath((*(_self_))._field_importer);;
		__JULE_DEFER({
			_1c6343ac9_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1c63428a8_SetModPath((*(_self_))._field_importer, _63017_oldMod);
		});;
		if ((*((*(_61138_imp))))._field_Std) {
			_1c6343ac9_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1c63428a8_SetModPath((*(_self_))._field_importer, _221a2e764_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1c6297379_Ast>> _63522_asts;;
		jule::Slice<_221968cb9_Log> _63532_errors;;
		({
			__jule_tuple_sx_1c6297379_Ast__jule_tuple_s_221968cb9_Log __jule_assign_result = _1c6343ac9_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1c63436bc_ImportPackage((*(_self_))._field_importer, (*((*(_61138_imp))))._field_Path, (!((*((*(_61138_imp))))._field_Std)));
			_63522_asts = __jule_assign_result.__jule_result_arg0;
			_63532_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_63532_errors.len() > 0LL)) {
			((*(_self_))._field_errors).append(_63532_errors);;
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1c62e0cc9_checkPackageAccessibility(_self_.ptr(), _61161_decl, &(_63017_oldMod), &((*((*(_61138_imp))))._field_Path));
		{
			auto expr = &(_63522_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac59edd7:;
			if (it != expr_end) {
				jule::Ptr<_1c6297379_Ast> _64325_ast = *it;
				{
					jule::Ptr<_1c63d8135_SymbolTable> _64425_table = nullptr;;
					({
						__jule_tuple_x_1c63d8135_SymbolTable__jule_tuple_s_221968cb9_Log __jule_assign_result = _1c643dd4a_buildSymbols(&(_64325_ast), &((*(_self_))._field_importer), _self_);
						_64425_table = __jule_assign_result.__jule_result_arg0;
						_63532_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_63532_errors.len() > 0LL)) {
						((*(_self_))._field_errors).append(_63532_errors);;
						__jule_func_result = false;
						return __jule_func_result;;
					};
					{ jule::Slice<jule::Ptr<_1c63d8135_SymbolTable>> &__jule_push_dest = (*((*((*(_61138_imp))))._field_Package))._field_Files; __jule_push_dest.push(_64425_table); };
				}
				_iter_next_1ac59edd7:;
				++it;
				goto _iter_begin_1ac59edd7;
			}
			_iter_end_1ac59edd7:;
		};
	};
	_1c62de833_implImportSelections(_self_.ptr(), _61138_imp, _61161_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1c63469de_ImportInfo> _1c62e1516_importUseDecl(jule::Ptr<_1c62dbd80_symbolBuilder> _self_, jule::Ptr<_1c62b20b9_UseDecl>* _65838_decl) {
	jule::Ptr<_1c63469de_ImportInfo> _65917_imp = _1c62de17e_buildImport(_self_, _65838_decl);;
	if ((_65917_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _66517_ok = _1c62de4c0_checkDuplicateUseDecl(_self_.ptr(), &(_65917_imp));;
	if ((!(_66517_ok))) {
		return nullptr;;
	};
	_66517_ok=_1c62e11c5_importPackage(_self_, &(_65917_imp), _65838_decl);
	{ jule::Slice<jule::Ptr<_1c63469de_ImportInfo>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Imports; __jule_push_dest.push(_65917_imp); };
	if (_66517_ok) {
		_1c6343ac9_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1c6343975_Imported((*(_self_))._field_importer, _65917_imp);
		return _65917_imp;;
	};
	return nullptr;;
}



inline void _1c62e1714_importUseDecls(jule::Ptr<_1c62dbd80_symbolBuilder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5a53c6:;
		if (it != expr_end) {
			jule::Ptr<_1c62b20b9_UseDecl> _68021_decl = *it;
			{
				_1c62e1516_importUseDecl(_self_, &(_68021_decl));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					goto _iter_end_1ac5a53c6;
				};
			}
			_iter_next_1ac5a53c6:;
			++it;
			goto _iter_begin_1ac5a53c6;
		}
		_iter_end_1ac5a53c6:;
	};
}



inline void _1c62e19bc_appendNode(_1c62dbd80_symbolBuilder* _self_, _1c6298248_Node* _68934_node) {
	{
		auto &_match_expr{ (*(_68934_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1ac5a76d6:;
			{
				{ jule::Slice<jule::Ptr<_1c631a320_Impl>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Impls; __jule_push_dest.push(_1c62db7b9_buildImpl((*(_68934_node))._field_Data.cast_ptr<_1c62b5b28_Impl>(&__jule_any_type11))); };
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1ac5a7939:;
			{
				jule::Ptr<_1c641c730_TypeAlias> _69421_ta = _1c62d7c05_buildTypeAlias((*(_68934_node))._field_Data.cast_ptr<_1c62b0aac_TypeAliasDecl>(&__jule_any_type12));;
				{ jule::Slice<jule::Ptr<_1c641c730_TypeAlias>> &__jule_push_dest = (*((*(_self_))._field_table))._field_TypeAliases; __jule_push_dest.push(_69421_ta); };
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1ac5a79a0:;
			{
				jule::Ptr<_1c62b9d3b_Struct> _69721_srct = _1c62d85c9_buildStruct((*(_68934_node))._field_Data.cast_ptr<_1c62b4c7b_StructDecl>(&__jule_any_type13));;
				{ jule::Slice<jule::Ptr<_1c62b9d3b_Struct>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Structs; __jule_push_dest.push(_69721_srct); };
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ac5a7a16:;
			{
				jule::Ptr<_1c62cebec_Fn> _70021_f = _1c62d92bc_buildFunc((*(_68934_node))._field_Data.cast_ptr<_1c62aae09_FnDecl>(&__jule_any_type14));;
				{ jule::Slice<jule::Ptr<_1c62cebec_Fn>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Funcs; __jule_push_dest.push(_70021_f); };
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1ac5a7a7c:;
			{
				jule::Ptr<_1c62e2e96_Trait> _70321_t = _1c62d9b19_buildTrait((*(_68934_node))._field_Data.cast_ptr<_1c62b54b8_TraitDecl>(&__jule_any_type15));;
				{ jule::Slice<jule::Ptr<_1c62e2e96_Trait>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Traits; __jule_push_dest.push(_70321_t); };
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1ac5a82ec:;
			{
				jule::Ptr<_1c6389da6_Var> _70621_v = _1c62db236_buildVar((*(_68934_node))._field_Data.cast_ptr<_1c62abed7_VarDecl>(&__jule_any_type16));;
				{ jule::Slice<jule::Ptr<_1c6389da6_Var>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Vars; __jule_push_dest.push(_70621_v); };
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1ac5a8363:;
			{
				jule::Ptr<_1c62e5691_Enum> _70921_e = _1c62da620_buildEnum((*(_68934_node))._field_Data.cast_ptr<_1c62b3131_EnumDecl>(&__jule_any_type17));;
				{ jule::Slice<jule::Ptr<_1c62e5691_Enum>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Enums; __jule_push_dest.push(_70921_e); };
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1ac5a83c9:;
			{
				jule::Ptr<_1c62e6d9b_TypeEnum> _71221_e = _1c62dae6c_buildTypeEnum((*(_68934_node))._field_Data.cast_ptr<_1c62b40bb_TypeEnumDecl>(&__jule_any_type18));;
				{ jule::Slice<jule::Ptr<_1c62e6d9b_TypeEnum>> &__jule_push_dest = (*((*(_self_))._field_table))._field_TypeEnums; __jule_push_dest.push(_71221_e); };
			}
		}
		else {
			_case_begin_1ac5a78c3:;
			{
				_1c62dc721_pushErr(_self_, &((*(_68934_node))._field_Token), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ac5a6a15:;
	};
}



inline void _1c62e1bba_appendNodes(_1c62dbd80_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5a84a6:;
		if (it != expr_end) {
			_1c6298248_Node _72021_node = *it;
			{
				_1c62e19bc_appendNode(_self_, &(_72021_node));
			}
			_iter_next_1ac5a84a6:;
			++it;
			goto _iter_begin_1ac5a84a6;
		}
		_iter_end_1ac5a84a6:;
	};
}



inline void _1c62e1e73_pushDirectivePass(_1c62dbd80_symbolBuilder* _self_, jule::Ptr<_1c6298666_Directive>* _72541_d) {
	if (((*((*(_72541_d))))._field_Args.len() == 0LL)) {
		_1c62dc721_pushErr(_self_, &((*((*(_72541_d))))._field_Tag), jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_72541_d))))._field_Args.len() > 1LL)) {
		jule::Ptr<_1c6283a3b_Token> _73017_arg = (*((*(_72541_d))))._field_Args[1LL];;
		_1c62dc721_pushErr(_self_, &(_73017_arg), jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_72541_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1c6283a3b_Token> _73413_arg = (*((*(_72541_d))))._field_Args[0LL];;
	if (((*(_73413_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1c62dc721_pushErr(_self_, &(_73413_arg), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_73413_arg))._field_Kind[0LL] != '\"')) {
		_1c62dc721_pushErr(_self_, &(_73413_arg), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<_1c62d72ba_Pass> &__jule_push_dest = (*((*(_self_))._field_table))._field_Passes; __jule_push_dest.push(_1c62d72ba_Pass{._field_Token=(*((*(_72541_d))))._field_Tag, ._field_Text=(*(_73413_arg))._field_Kind.slice(1LL, ((*(_73413_arg))._field_Kind.len() - 1LL))}); };
}



inline void _1c62e2171_appendTopDirectives(_1c62dbd80_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5b7383:;
		if (it != expr_end) {
			jule::Ptr<_1c6298666_Directive> _75221_d = *it;
			{
				{
					auto &_match_expr{ (*((*(_75221_d))._field_Tag))._field_Kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_1ac5b94d9:;
						{
							_1c62e1e73_pushDirectivePass(_self_, &(_75221_d));
						}
					}
					_match_end_1ac5b942e:;
				};
			}
			_iter_next_1ac5b7383:;
			++it;
			goto _iter_begin_1ac5b7383;
		}
		_iter_end_1ac5b7383:;
	};
}



inline void _1c62e236e_build(jule::Ptr<_1c62dbd80_symbolBuilder> _self_) {
	(*(_self_))._field_table=jule::new_ptr<_1c63d8135_SymbolTable>(_1c63d8135_SymbolTable{._field_File=(*((*(_self_))._field_ast))._field_File, });
	_1c62e2171_appendTopDirectives(_self_.ptr());
	_1c62e1714_importUseDecls(_self_);
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
	_1c62e1bba_appendNodes(_self_.ptr());
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c62dbd80_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c62e335e_Str(_1c62e2e96_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1c62e36a0_Equal(jule::Ptr<_1c62e2e96_Trait> _self_, jule::Ptr<_1c641d522_TypeKind> _2521_other) {
	jule::Ptr<_1c62e2e96_Trait> _2613_trt = _1c642247c_Trait(_2521_other.ptr());;
	return (_self_ == _2613_trt);;
}



inline jule::Ptr<_1c62cebec_Fn> _1c62e3b45_FindMethod(_1c62e2e96_Trait* _self_, jule::Str _3429_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5bd301:;
		if (it != expr_end) {
			jule::Ptr<_1c62cebec_Fn> _3521_f = *it;
			{
				if (((*(_3521_f))._field_Ident == _3429_ident)) {
					return _3521_f;;
				};
			}
			_iter_next_1ac5bd301:;
			++it;
			goto _iter_begin_1ac5bd301;
		}
		_iter_end_1ac5bd301:;
	};
	return _1c62e42c7_findMethodInherit(_self_, &(_3429_ident));;
}



inline jule::Ptr<_1c62cebec_Fn> _1c62e42c7_findMethodInherit(_1c62e2e96_Trait* _self_, jule::Str* _5537_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5c0e80:;
		if (it != expr_end) {
			jule::Ptr<_1c64256e4_TypeSymbol> _5621_i = *it;
			{
				if (((*(_5621_i))._field_Kind == nullptr)) {
					goto _iter_next_1ac5c0e80;
				};
				jule::Ptr<_1c62e2e96_Trait> _6021_t = _1c642247c_Trait((*(_5621_i))._field_Kind.ptr());;
				if ((_6021_t != nullptr)) {
					jule::Ptr<_1c62cebec_Fn> _6225_f2 = _1c62e3b45_FindMethod(_6021_t.ptr(), (*(_5537_ident)));;
					if ((_6225_f2 != nullptr)) {
						return _6225_f2;;
					};
				};
			}
			_iter_next_1ac5c0e80:;
			++it;
			goto _iter_begin_1ac5c0e80;
		}
		_iter_end_1ac5c0e80:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62e2e96_Trait _Src) {
	_Stream << _1c62e335e_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1c62e4ecb_AutoExpr(_1c62e4b24_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62e4b24_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c62e5a15_Str(_1c62e5691_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1c62e5d56_Equal(jule::Ptr<_1c62e5691_Enum> _self_, jule::Ptr<_1c641d522_TypeKind> _3821_other) {
	jule::Ptr<_1c62e5691_Enum> _3913_enm = _1c6421426_Enum(_3821_other.ptr());;
	return (_self_ == _3913_enm);;
}



inline jule::Ptr<_1c62e4b24_EnumItem> _1c62e6285_FindItem(_1c62e5691_Enum* _self_, jule::Str _4727_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5c4d52:;
		if (it != expr_end) {
			jule::Ptr<_1c62e4b24_EnumItem> _4821_item = *it;
			{
				if (((*(_4821_item))._field_Ident == _4727_ident)) {
					return _4821_item;;
				};
			}
			_iter_next_1ac5c4d52:;
			++it;
			goto _iter_begin_1ac5c4d52;
		}
		_iter_end_1ac5c4d52:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62e5691_Enum _Src) {
	_Stream << _1c62e5a15_Str(&_Src);
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62e67c4_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c62e71dc_Str(_1c62e6d9b_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1c62e752d_Equal(jule::Ptr<_1c62e6d9b_TypeEnum> _self_, jule::Ptr<_1c641d522_TypeKind> _8021_other) {
	jule::Ptr<_1c62e6d9b_TypeEnum> _8113_tenm = _1c64216ac_TypeEnum(_8021_other.ptr());;
	return (_self_ == _8113_tenm);;
}



inline jule::Ptr<_1c62e67c4_TypeEnumItem> _1c62e795c_FindItem(_1c62e6d9b_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5c7151:;
		if (it != expr_end) {
			jule::Ptr<_1c62e67c4_TypeEnumItem> _9021_item = *it;
			{
				if (((*(_9021_item))._field_Ident == _8927_ident)) {
					return _9021_item;;
				};
			}
			_iter_next_1ac5c7151:;
			++it;
			goto _iter_begin_1ac5c7151;
		}
		_iter_end_1ac5c7151:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62e6d9b_TypeEnum _Src) {
	_Stream << _1c62e71dc_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c62e960c_Str(_1c62e9244_comptimeRange* _self_) {
	return jule::Str("comptimeRange", 13);;
}



inline jule::Bool _1c62e994d_Equal(jule::Ptr<_1c62e9244_comptimeRange> _self_, jule::Ptr<_1c641d522_TypeKind> _2521_other) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62e9244_comptimeRange _Src) {
	_Stream << _1c62e960c_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c62ea124_Str(_1c62e9ca0_comptimeStructField* _self_) {
	return jule::Str("comptimeStructField", 19);;
}



inline jule::Bool _1c62ea465_Equal(jule::Ptr<_1c62e9ca0_comptimeStructField> _self_, jule::Ptr<_1c641d522_TypeKind> _3521_other) {
	return false;;
}



inline jule::Ptr<_1c63dd35a_Data> _1c62ea982__Name(jule::Ptr<_1c62e9ca0_comptimeStructField> _self_, jule::Ptr<_1c63e004e_Eval>* _3926_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _3941_fc) {
	if (((*((*(_3941_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_3926_e)).ptr(), (*((*((*(_3941_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1dc260590_Const> _4417_constant = static__1dc26132c_NewStr((*((*((*(_self_))._field_field))._field_Decl))._field_Ident);;
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c6509355_primStr, ._field_Model=jule::Any(_4417_constant, &__jule_any_type19), ._field_Constant=_4417_constant});;
}



inline jule::Ptr<_1c63dd35a_Data> _1c62ead7d__Type(jule::Ptr<_1c62e9ca0_comptimeStructField> _self_, jule::Ptr<_1c63e004e_Eval>* _5230_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _5245_fc) {
	if (((*((*(_5245_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_5230_e)).ptr(), (*((*((*(_5245_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1c6316492_buildComptimeTypeInfoData(&((*((*(_5230_e))))._field_s), &((*((*(_self_))._field_field))._field_Kind));;
}



inline jule::Ptr<_1c63dd35a_Data> _1c62eb279__Public(jule::Ptr<_1c62e9ca0_comptimeStructField> _self_, jule::Ptr<_1c63e004e_Eval>* _6032_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _6047_fc) {
	if (((*((*(_6047_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_6032_e)).ptr(), (*((*((*(_6047_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1dc260590_Const> _6517_constant = static__1dc261063_NewBool((*((*((*(_self_))._field_field))._field_Decl))._field_Public);;
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650961e_primBool, ._field_Model=jule::Any(_6517_constant, &__jule_any_type19), ._field_Constant=_6517_constant});;
}



inline jule::Ptr<_1c63dd35a_Data> _1c62eb5ba_subIdent(jule::Ptr<_1c62e9ca0_comptimeStructField> _self_, jule::Str* _7329_ident) {
	{
		auto &_match_expr{ (*(_7329_ident)) };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1ac5d447c:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _7621_method = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>([=](jule::Ptr<_1c63e004e_Eval>* _7733_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _7748_fc, jule::Ptr<_1c63dd35a_Data>* ) mutable -> jule::Ptr<_1c63dd35a_Data> {
					return _1c62ea982__Name(_self_, _7733_e, _7748_fc);;
				}), });;
				return _1c6315d10_buildAsComptimeMethodData(&(_7621_method));;
			}
		}
		else if (_match_expr == jule::Str("Public", 6)) {
			_case_begin_1ac5d44e3:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _8321_method = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>([=](jule::Ptr<_1c63e004e_Eval>* _8433_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _8448_fc, jule::Ptr<_1c63dd35a_Data>* ) mutable -> jule::Ptr<_1c63dd35a_Data> {
					return _1c62eb279__Public(_self_, _8433_e, _8448_fc);;
				}), });;
				return _1c6315d10_buildAsComptimeMethodData(&(_8321_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_1ac5d4559:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _9021_method = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>([=](jule::Ptr<_1c63e004e_Eval>* _9133_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _9148_fc, jule::Ptr<_1c63dd35a_Data>* ) mutable -> jule::Ptr<_1c63dd35a_Data> {
					return _1c62ead7d__Type(_self_, _9133_e, _9148_fc);;
				}), });;
				return _1c6315d10_buildAsComptimeMethodData(&(_9021_method));;
			}
		}
		else {
			_case_begin_1ac5d4416:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac5d438e:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c62e9ca0_comptimeStructField _Src) {
	_Stream << _1c62ea124_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c62ebcd5_Str(_1c62eb950_comptimeStructFields* _self_) {
	return jule::Str("comptimeStructFields", 20);;
}



inline jule::Bool _1c62ec126_Equal(jule::Ptr<_1c62eb950_comptimeStructFields> _self_, jule::Ptr<_1c641d522_TypeKind> _10921_other) {
	return false;;
}



inline void _1c62ec599_ready(_1c62eb950_comptimeStructFields* _self_, jule::Ptr<_1c6389da6_Var>* _11329_keyA, jule::Ptr<_1c6389da6_Var>* _11346_keyB) {
	if (((*(_11329_keyA)) != nullptr)) {
		(*((*(_11329_keyA))))._field_Constant=true;
		(*((*(_11329_keyA))))._field_Value=jule::new_ptr<_1c63de49e_Value>(_1c63de49e_Value{._field_Data=jule::new_ptr<_1c63dd35a_Data>()});
		(*((*((*((*(_11329_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_11329_keyA))))._field_Kind=(*(_1c650c49b_findBuiltinTypeAlias(jule::Str("int", 3))))._field_Kind;
	};
	if (((*(_11346_keyB)) != nullptr)) {
		(*((*(_11346_keyB))))._field_Constant=true;
		(*((*(_11346_keyB))))._field_Value=jule::new_ptr<_1c63de49e_Value>(_1c63de49e_Value{._field_Data=jule::new_ptr<_1c63dd35a_Data>()});
		(*((*(_11346_keyB))))._field_Kind=jule::new_ptr<_1c64256e4_TypeSymbol>(_1c64256e4_TypeSymbol{._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(jule::new_ptr<_1c62e9ca0_comptimeStructField>(), 6)})});
	};
}



inline void _1c62ec9b7_step(_1c62eb950_comptimeStructFields* _self_, jule::I64 _13523_i, jule::Ptr<_1c6389da6_Var>* _13536_keyA, jule::Ptr<_1c6389da6_Var>* _13553_keyB) {
	if (((*(_13536_keyA)) != nullptr)) {
		(*((*((*((*(_13536_keyA))))._field_Value))._field_Data))._field_Constant=static__1dc2609d0_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_13523_i)));
		(*((*((*((*(_13536_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_13536_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_13553_keyB)) != nullptr)) {
		(*(_1c642324c_comptimeStructField((*((*((*(_13553_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_13523_i];
	};
}



inline jule::I64 _1c62ecc4d_len(_1c62eb950_comptimeStructFields* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62eb950_comptimeStructFields _Src) {
	_Stream << _1c62ebcd5_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c62ed3d0_Str(_1c62ed05b_comptimeStatic* _self_) {
	return jule::Str("comptimeStatic", 14);;
}



inline jule::Bool _1c62ed721_Equal(jule::Ptr<_1c62ed05b_comptimeStatic> _self_, jule::Ptr<_1c641d522_TypeKind> _15921_other) {
	return false;;
}



inline jule::Ptr<_1c63dd35a_Data> _1c62edc3d__Name(jule::Ptr<_1c62ed05b_comptimeStatic> _self_, jule::Ptr<_1c63e004e_Eval>* _16326_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _16341_fc) {
	if (((*((*(_16341_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_16326_e)).ptr(), (*((*((*(_16341_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1dc260590_Const> _16817_constant = static__1dc26132c_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c6509355_primStr, ._field_Model=jule::Any(_16817_constant, &__jule_any_type19), ._field_Constant=_16817_constant});;
}



inline jule::Ptr<_1c63dd35a_Data> _1c62ee139__Type(jule::Ptr<_1c62ed05b_comptimeStatic> _self_, jule::Ptr<_1c63e004e_Eval>* _17630_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _17645_fc) {
	if (((*((*(_17645_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_17630_e)).ptr(), (*((*((*(_17645_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1c6316492_buildComptimeTypeInfoData(&((*((*(_17630_e))))._field_s), &((*((*((*(_self_))._field_field))._field_Kind))._field_Kind));;
}



inline jule::Ptr<_1c63dd35a_Data> _1c62ee535__Public(jule::Ptr<_1c62ed05b_comptimeStatic> _self_, jule::Ptr<_1c63e004e_Eval>* _18432_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _18447_fc) {
	if (((*((*(_18447_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_18432_e)).ptr(), (*((*((*(_18447_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1dc260590_Const> _18917_constant = static__1dc261063_NewBool((*((*(_self_))._field_field))._field_Public);;
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650961e_primBool, ._field_Model=jule::Any(_18917_constant, &__jule_any_type19), ._field_Constant=_18917_constant});;
}



inline jule::Ptr<_1c63dd35a_Data> _1c62ee876_subIdent(jule::Ptr<_1c62ed05b_comptimeStatic> _self_, jule::Str* _19729_ident) {
	{
		auto &_match_expr{ (*(_19729_ident)) };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1ac5ea680:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _20021_method = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>([=](jule::Ptr<_1c63e004e_Eval>* _20133_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _20148_fc, jule::Ptr<_1c63dd35a_Data>* ) mutable -> jule::Ptr<_1c63dd35a_Data> {
					return _1c62edc3d__Name(_self_, _20133_e, _20148_fc);;
				}), });;
				return _1c6315d10_buildAsComptimeMethodData(&(_20021_method));;
			}
		}
		else if (_match_expr == jule::Str("Public", 6)) {
			_case_begin_1ac5ea6e6:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _20721_method = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>([=](jule::Ptr<_1c63e004e_Eval>* _20833_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _20848_fc, jule::Ptr<_1c63dd35a_Data>* ) mutable -> jule::Ptr<_1c63dd35a_Data> {
					return _1c62ee535__Public(_self_, _20833_e, _20848_fc);;
				}), });;
				return _1c6315d10_buildAsComptimeMethodData(&(_20721_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_1ac5ea75c:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _21421_method = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>([=](jule::Ptr<_1c63e004e_Eval>* _21533_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _21548_fc, jule::Ptr<_1c63dd35a_Data>* ) mutable -> jule::Ptr<_1c63dd35a_Data> {
					return _1c62ee139__Type(_self_, _21533_e, _21548_fc);;
				}), });;
				return _1c6315d10_buildAsComptimeMethodData(&(_21421_method));;
			}
		}
		else {
			_case_begin_1ac5ea619:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac5ea592:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c62ed05b_comptimeStatic _Src) {
	_Stream << _1c62ed3d0_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c6300091_Str(_1c62eec1c_comptimeStatics* _self_) {
	return jule::Str("comptimeStatics", 15);;
}



inline jule::Bool _1c63003d2_Equal(jule::Ptr<_1c62eec1c_comptimeStatics> _self_, jule::Ptr<_1c641d522_TypeKind> _23321_other) {
	return false;;
}



inline void _1c6300855_ready(_1c62eec1c_comptimeStatics* _self_, jule::Ptr<_1c6389da6_Var>* _23729_keyA, jule::Ptr<_1c6389da6_Var>* _23746_keyB) {
	if (((*(_23729_keyA)) != nullptr)) {
		(*((*(_23729_keyA))))._field_Constant=true;
		(*((*(_23729_keyA))))._field_Value=jule::new_ptr<_1c63de49e_Value>(_1c63de49e_Value{._field_Data=jule::new_ptr<_1c63dd35a_Data>()});
		(*((*((*((*(_23729_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_23729_keyA))))._field_Kind=(*(_1c650c49b_findBuiltinTypeAlias(jule::Str("int", 3))))._field_Kind;
	};
	if (((*(_23746_keyB)) != nullptr)) {
		(*((*(_23746_keyB))))._field_Constant=true;
		(*((*(_23746_keyB))))._field_Value=jule::new_ptr<_1c63de49e_Value>(_1c63de49e_Value{._field_Data=jule::new_ptr<_1c63dd35a_Data>()});
		(*((*(_23746_keyB))))._field_Kind=jule::new_ptr<_1c64256e4_TypeSymbol>(_1c64256e4_TypeSymbol{._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(jule::new_ptr<_1c62ed05b_comptimeStatic>(), 8)})});
	};
}



inline void _1c6300c73_step(_1c62eec1c_comptimeStatics* _self_, jule::I64 _25923_i, jule::Ptr<_1c6389da6_Var>* _25936_keyA, jule::Ptr<_1c6389da6_Var>* _25953_keyB) {
	if (((*(_25936_keyA)) != nullptr)) {
		(*((*((*((*(_25936_keyA))))._field_Value))._field_Data))._field_Constant=static__1dc2609d0_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_25923_i)));
		(*((*((*((*(_25936_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_25936_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_25953_keyB)) != nullptr)) {
		(*(_1c6424a56_comptimeStatic((*((*((*(_25953_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_25923_i];
	};
}



inline jule::I64 _1c6301009_len(_1c62eec1c_comptimeStatics* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62eec1c_comptimeStatics _Src) {
	_Stream << _1c6300091_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c630168b_Str(_1c6301317_comptimeEnumField* _self_) {
	return jule::Str("comptimeEnumField", 17);;
}



inline jule::Bool _1c63019cc_Equal(jule::Ptr<_1c6301317_comptimeEnumField> _self_, jule::Ptr<_1c641d522_TypeKind> _28321_other) {
	return false;;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6301ec7__Name(jule::Ptr<_1c6301317_comptimeEnumField> _self_, jule::Ptr<_1c63e004e_Eval>* _28726_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _28741_fc) {
	if (((*((*(_28741_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_28726_e)).ptr(), (*((*((*(_28741_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1dc260590_Const> _29217_constant = static__1dc26132c_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c6509355_primStr, ._field_Model=jule::Any(_29217_constant, &__jule_any_type19), ._field_Constant=_29217_constant});;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6302318_subIdent(jule::Ptr<_1c6301317_comptimeEnumField> _self_, jule::Str* _30029_ident) {
	{
		auto &_match_expr{ (*(_30029_ident)) };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1ac60bb8b:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _30321_method = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>([=](jule::Ptr<_1c63e004e_Eval>* _30433_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _30448_fc, jule::Ptr<_1c63dd35a_Data>* ) mutable -> jule::Ptr<_1c63dd35a_Data> {
					return _1c6301ec7__Name(_self_, _30433_e, _30448_fc);;
				}), });;
				return _1c6315d10_buildAsComptimeMethodData(&(_30321_method));;
			}
		}
		else {
			_case_begin_1ac60bb25:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac60ba9d:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c6301317_comptimeEnumField _Src) {
	_Stream << _1c630168b_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c6302aaa_Str(_1c6302626_comptimeEnumFields* _self_) {
	return jule::Str("comptimeEnumFields", 18);;
}



inline jule::Bool _1c6302deb_Equal(jule::Ptr<_1c6302626_comptimeEnumFields> _self_, jule::Ptr<_1c641d522_TypeKind> _32221_other) {
	return false;;
}



inline void _1c63032e7_ready(_1c6302626_comptimeEnumFields* _self_, jule::Ptr<_1c6389da6_Var>* _32629_keyA, jule::Ptr<_1c6389da6_Var>* _32646_keyB) {
	if (((*(_32629_keyA)) != nullptr)) {
		(*((*(_32629_keyA))))._field_Constant=true;
		(*((*(_32629_keyA))))._field_Value=jule::new_ptr<_1c63de49e_Value>(_1c63de49e_Value{._field_Data=jule::new_ptr<_1c63dd35a_Data>()});
		(*((*((*((*(_32629_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_32629_keyA))))._field_Kind=(*(_1c650c49b_findBuiltinTypeAlias(jule::Str("int", 3))))._field_Kind;
	};
	if (((*(_32646_keyB)) != nullptr)) {
		(*((*(_32646_keyB))))._field_Constant=true;
		(*((*(_32646_keyB))))._field_Value=jule::new_ptr<_1c63de49e_Value>(_1c63de49e_Value{._field_Data=jule::new_ptr<_1c63dd35a_Data>()});
		(*((*(_32646_keyB))))._field_Kind=jule::new_ptr<_1c64256e4_TypeSymbol>(_1c64256e4_TypeSymbol{._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(jule::new_ptr<_1c6301317_comptimeEnumField>(), 10)})});
	};
}



inline void _1c6303715_step(_1c6302626_comptimeEnumFields* _self_, jule::I64 _34823_i, jule::Ptr<_1c6389da6_Var>* _34836_keyA, jule::Ptr<_1c6389da6_Var>* _34853_keyB) {
	if (((*(_34836_keyA)) != nullptr)) {
		(*((*((*((*(_34836_keyA))))._field_Value))._field_Data))._field_Constant=static__1dc2609d0_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_34823_i)));
		(*((*((*((*(_34836_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_34836_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_34853_keyB)) != nullptr)) {
		(*(_1c6423769_comptimeEnumField((*((*((*(_34853_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_34823_i];
	};
}



inline jule::I64 _1c630399b_len(_1c6302626_comptimeEnumFields* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1c6302626_comptimeEnumFields _Src) {
	_Stream << _1c6302aaa_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c630412d_Str(_1c6303ca9_comptimeParam* _self_) {
	return jule::Str("comptimeParam", 13);;
}



inline jule::Bool _1c630446e_Equal(jule::Ptr<_1c6303ca9_comptimeParam> _self_, jule::Ptr<_1c641d522_TypeKind> _37221_other) {
	return false;;
}



inline jule::Ptr<_1c63dd35a_Data> _1c630499c__Name(jule::Ptr<_1c6303ca9_comptimeParam> _self_, jule::Ptr<_1c63e004e_Eval>* _37626_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _37641_fc) {
	if (((*((*(_37641_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_37626_e)).ptr(), (*((*((*(_37641_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1dc260590_Const> _38117_constant = static__1dc26132c_NewStr((*((*((*(_self_))._field_param))._field_Decl))._field_Ident);;
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c6509355_primStr, ._field_Model=jule::Any(_38117_constant, &__jule_any_type19), ._field_Constant=_38117_constant});;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6304d98__Type(jule::Ptr<_1c6303ca9_comptimeParam> _self_, jule::Ptr<_1c63e004e_Eval>* _38930_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _38945_fc) {
	if (((*((*(_38945_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_38930_e)).ptr(), (*((*((*(_38945_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1c6316492_buildComptimeTypeInfoData(&((*((*(_38930_e))))._field_s), &((*((*(_self_))._field_param))._field_Kind));;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6305294__Variadic(jule::Ptr<_1c6303ca9_comptimeParam> _self_, jule::Ptr<_1c63e004e_Eval>* _39734_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _39749_fc) {
	if (((*((*(_39749_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_39734_e)).ptr(), (*((*((*(_39749_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Variadic", 8), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1dc260590_Const> _40217_constant = static__1dc261063_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Variadic);;
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650961e_primBool, ._field_Model=jule::Any(_40217_constant, &__jule_any_type19), ._field_Constant=_40217_constant});;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6305690__Reference(jule::Ptr<_1c6303ca9_comptimeParam> _self_, jule::Ptr<_1c63e004e_Eval>* _41035_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _41050_fc) {
	if (((*((*(_41050_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_41035_e)).ptr(), (*((*((*(_41050_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Reference", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1dc260590_Const> _41517_constant = static__1dc261063_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Reference);;
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650961e_primBool, ._field_Model=jule::Any(_41517_constant, &__jule_any_type19), ._field_Constant=_41517_constant});;
}



inline jule::Ptr<_1c63dd35a_Data> _1c63059d1_subIdent(jule::Ptr<_1c6303ca9_comptimeParam> _self_, jule::Str* _42329_ident) {
	{
		auto &_match_expr{ (*(_42329_ident)) };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1ac621a80:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _42621_method = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>([=](jule::Ptr<_1c63e004e_Eval>* _42733_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _42748_fc, jule::Ptr<_1c63dd35a_Data>* ) mutable -> jule::Ptr<_1c63dd35a_Data> {
					return _1c630499c__Name(_self_, _42733_e, _42748_fc);;
				}), });;
				return _1c6315d10_buildAsComptimeMethodData(&(_42621_method));;
			}
		}
		else if (_match_expr == jule::Str("Variadic", 8)) {
			_case_begin_1ac621ae6:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _43321_method = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>([=](jule::Ptr<_1c63e004e_Eval>* _43433_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _43448_fc, jule::Ptr<_1c63dd35a_Data>* ) mutable -> jule::Ptr<_1c63dd35a_Data> {
					return _1c6305294__Variadic(_self_, _43433_e, _43448_fc);;
				}), });;
				return _1c6315d10_buildAsComptimeMethodData(&(_43321_method));;
			}
		}
		else if (_match_expr == jule::Str("Reference", 9)) {
			_case_begin_1ac621b6d:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _44021_method = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>([=](jule::Ptr<_1c63e004e_Eval>* _44133_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _44148_fc, jule::Ptr<_1c63dd35a_Data>* ) mutable -> jule::Ptr<_1c63dd35a_Data> {
					return _1c6305690__Reference(_self_, _44133_e, _44148_fc);;
				}), });;
				return _1c6315d10_buildAsComptimeMethodData(&(_44021_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_1ac621be5:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _44721_method = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>([=](jule::Ptr<_1c63e004e_Eval>* _44833_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _44848_fc, jule::Ptr<_1c63dd35a_Data>* ) mutable -> jule::Ptr<_1c63dd35a_Data> {
					return _1c6304d98__Type(_self_, _44833_e, _44848_fc);;
				}), });;
				return _1c6315d10_buildAsComptimeMethodData(&(_44721_method));;
			}
		}
		else {
			_case_begin_1ac621a19:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac621992:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c6303ca9_comptimeParam _Src) {
	_Stream << _1c630412d_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c6306394_Str(_1c6306020_comptimeParams* _self_) {
	return jule::Str("comptimeParams", 14);;
}



inline jule::Bool _1c63066d5_Equal(jule::Ptr<_1c6306020_comptimeParams> _self_, jule::Ptr<_1c641d522_TypeKind> _46621_other) {
	return false;;
}



inline void _1c6306b58_ready(_1c6306020_comptimeParams* _self_, jule::Ptr<_1c6389da6_Var>* _47029_keyA, jule::Ptr<_1c6389da6_Var>* _47046_keyB) {
	if (((*(_47029_keyA)) != nullptr)) {
		(*((*(_47029_keyA))))._field_Constant=true;
		(*((*(_47029_keyA))))._field_Value=jule::new_ptr<_1c63de49e_Value>(_1c63de49e_Value{._field_Data=jule::new_ptr<_1c63dd35a_Data>()});
		(*((*((*((*(_47029_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_47029_keyA))))._field_Kind=(*(_1c650c49b_findBuiltinTypeAlias(jule::Str("int", 3))))._field_Kind;
	};
	if (((*(_47046_keyB)) != nullptr)) {
		(*((*(_47046_keyB))))._field_Constant=true;
		(*((*(_47046_keyB))))._field_Value=jule::new_ptr<_1c63de49e_Value>(_1c63de49e_Value{._field_Data=jule::new_ptr<_1c63dd35a_Data>()});
		(*((*(_47046_keyB))))._field_Kind=jule::new_ptr<_1c64256e4_TypeSymbol>(_1c64256e4_TypeSymbol{._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(jule::new_ptr<_1c6303ca9_comptimeParam>(), 12)})});
	};
}



inline void _1c6307076_step(_1c6306020_comptimeParams* _self_, jule::I64 _49223_i, jule::Ptr<_1c6389da6_Var>* _49236_keyA, jule::Ptr<_1c6389da6_Var>* _49253_keyB) {
	if (((*(_49236_keyA)) != nullptr)) {
		(*((*((*((*(_49236_keyA))))._field_Value))._field_Data))._field_Constant=static__1dc2609d0_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_49223_i)));
		(*((*((*((*(_49236_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_49236_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_49253_keyB)) != nullptr)) {
		(*(_1c6423c86_comptimeParam((*((*((*(_49253_keyB))))._field_Kind))._field_Kind.ptr())))._field_param=(*(_self_))._field_params[_49223_i];
	};
}



inline jule::I64 _1c630730c_len(_1c6306020_comptimeParams* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_params.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1c6306020_comptimeParams _Src) {
	_Stream << _1c6306394_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c630798e_Str(_1c630761a_comptimeTypeInfos* _self_) {
	return jule::Str("comptimeTypeInfos", 17);;
}



inline jule::Bool _1c6307cd0_Equal(jule::Ptr<_1c630761a_comptimeTypeInfos> _self_, jule::Ptr<_1c641d522_TypeKind> _51621_other) {
	return false;;
}



inline void _1c6308253_ready(_1c630761a_comptimeTypeInfos* _self_, jule::Ptr<_1c6389da6_Var>* _52029_keyA, jule::Ptr<_1c6389da6_Var>* _52046_keyB) {
	if (((*(_52029_keyA)) != nullptr)) {
		(*((*(_52029_keyA))))._field_Constant=true;
		(*((*(_52029_keyA))))._field_Value=jule::new_ptr<_1c63de49e_Value>(_1c63de49e_Value{._field_Data=jule::new_ptr<_1c63dd35a_Data>()});
		(*((*((*((*(_52029_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_52029_keyA))))._field_Kind=(*(_1c650c49b_findBuiltinTypeAlias(jule::Str("int", 3))))._field_Kind;
	};
	if (((*(_52046_keyB)) != nullptr)) {
		(*((*(_52046_keyB))))._field_Constant=true;
		(*((*(_52046_keyB))))._field_Value=jule::new_ptr<_1c63de49e_Value>(_1c63de49e_Value{._field_Data=jule::new_ptr<_1c63dd35a_Data>()});
		(*((*(_52046_keyB))))._field_Kind=jule::new_ptr<_1c64256e4_TypeSymbol>(_1c64256e4_TypeSymbol{._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(jule::new_ptr<_1c6308c15_comptimeTypeInfo>(), 15)})});
	};
}



inline void _1c6308671_step(_1c630761a_comptimeTypeInfos* _self_, jule::I64 _54223_i, jule::Ptr<_1c6389da6_Var>* _54236_keyA, jule::Ptr<_1c6389da6_Var>* _54253_keyB) {
	if (((*(_54236_keyA)) != nullptr)) {
		(*((*((*((*(_54236_keyA))))._field_Value))._field_Data))._field_Constant=static__1dc2609d0_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_54223_i)));
		(*((*((*((*(_54236_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_54236_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_54253_keyB)) != nullptr)) {
		(*((*((*((*(_54253_keyB))))._field_Kind))._field_Kind))._field_Kind=jule::Trait<_1c641d06b_Kind>((*(_self_))._field_types[_54223_i], 15);
	};
}



inline jule::I64 _1c6308907_len(_1c630761a_comptimeTypeInfos* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_types.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1c630761a_comptimeTypeInfos _Src) {
	_Stream << _1c630798e_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c6309089_Str(_1c6308c15_comptimeTypeInfo* _self_) {
	return ((jule::Str("comptimeTypeInfo[", 17) + _1c641d8da_Str((*(_self_))._field_base.ptr())) + jule::Str("]", 1));;
}



inline jule::Bool _1c63093ca_Equal(jule::Ptr<_1c6308c15_comptimeTypeInfo> _self_, jule::Ptr<_1c641d522_TypeKind> _56621_other) {
	return false;;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6309a29__Str(jule::Ptr<_1c6308c15_comptimeTypeInfo> _self_, jule::Ptr<_1c63e004e_Eval>* _57025_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _57040_fc) {
	if (((*((*(_57040_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_57025_e)).ptr(), (*((*((*(_57040_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Str", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1dc260590_Const> _57517_constant = static__1dc26132c_NewStr(_1c641d8da_Str((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c6509355_primStr, ._field_Model=jule::Any(_57517_constant, &__jule_any_type19), ._field_Constant=_57517_constant});;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6309e25__Kind(jule::Ptr<_1c6308c15_comptimeTypeInfo> _self_, jule::Ptr<_1c63e004e_Eval>* _58330_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _58345_fc) {
	if (((*((*(_58345_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_58330_e)).ptr(), (*((*((*(_58345_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Kind", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c62e5691_Enum> _58817_enm = _1c6348749_FindEnum(_1c631611d_findComptimePackage(&((*((*(_58330_e))))._field_s)).ptr(), jule::Str("Kind", 4));;
	jule::Ptr<_1c62e4b24_EnumItem> _58917_item = nullptr;;
	{
		
		if (_1c641e886_Void((*(_self_))._field_base.ptr())) {
			_case_begin_1ac640373:;
			{
				_58917_item=_1c62e6285_FindItem(_58817_enm.ptr(), jule::Str("Void", 4));
			}
		}
		else if ((_1c64221e6_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ac64052c:;
			{
				_58917_item=_1c62e6285_FindItem(_58817_enm.ptr(), jule::Str("Struct", 6));
			}
		}
		else if ((_1c642247c_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ac640296:;
			{
				_58917_item=_1c62e6285_FindItem(_58817_enm.ptr(), jule::Str("Trait", 5));
			}
		}
		else if ((_1c6421190_Ptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ac640087:;
			{
				if (_1c642de28_IsUnsafe(_1c6421190_Ptr((*(_self_))._field_base.ptr()).ptr())) {
					_58917_item=_1c62e6285_FindItem(_58817_enm.ptr(), jule::Str("UnsafePtr", 9));
				} else {
					_58917_item=_1c62e6285_FindItem(_58817_enm.ptr(), jule::Str("Ptr", 3));
				};
			}
		}
		else if ((_1c6420e09_Sptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ac6400ed:;
			{
				_58917_item=_1c62e6285_FindItem(_58817_enm.ptr(), jule::Str("Ref", 3));
			}
		}
		else if ((_1c6421426_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ac640b6a:;
			{
				_58917_item=_1c62e6285_FindItem(_58817_enm.ptr(), jule::Str("Enum", 4));
			}
		}
		else if ((_1c6422713_Map((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ac640bd1:;
			{
				_58917_item=_1c62e6285_FindItem(_58817_enm.ptr(), jule::Str("Map", 3));
			}
		}
		else if ((_1c6421bc9_Slc((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ac640c47:;
			{
				_58917_item=_1c62e6285_FindItem(_58817_enm.ptr(), jule::Str("Slice", 5));
			}
		}
		else if ((_1c6421943_Arr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ac640cbe:;
			{
				_58917_item=_1c62e6285_FindItem(_58817_enm.ptr(), jule::Str("Array", 5));
			}
		}
		else if ((_1c6421e60_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ac640d46:;
			{
				_58917_item=_1c62e6285_FindItem(_58817_enm.ptr(), jule::Str("Func", 4));
			}
		}
		else if ((_1c6422999_Tup((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ac640dbd:;
			{
				_58917_item=_1c62e6285_FindItem(_58817_enm.ptr(), jule::Str("Tuple", 5));
			}
		}
		else if ((_1c6420b73_Prim((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ac640e45:;
			{
				jule::Ptr<_1c64260eb_Prim> _61817_prim = _1c6420b73_Prim((*(_self_))._field_base.ptr());;
				{
					
					if (_1c6429819_IsAny(_61817_prim.ptr())) {
						_case_begin_1ac64be40:;
						{
							_58917_item=_1c62e6285_FindItem(_58817_enm.ptr(), jule::Str("Any", 3));
						}
					}
					else if (_1c64292ec_IsBool(_61817_prim.ptr())) {
						_case_begin_1ac64bd52:;
						{
							_58917_item=_1c62e6285_FindItem(_58817_enm.ptr(), jule::Str("Bool", 4));
						}
					}
					else if (_1c6429583_IsStr(_61817_prim.ptr())) {
						_case_begin_1ac64bb54:;
						{
							_58917_item=_1c62e6285_FindItem(_58817_enm.ptr(), jule::Str("Str", 3));
						}
					}
					else if (_1c642852c_IsF32(_61817_prim.ptr())) {
						_case_begin_1ac64c748:;
						{
							_58917_item=_1c62e6285_FindItem(_58817_enm.ptr(), jule::Str("F32", 3));
						}
					}
					else if (_1c64287b3_IsF64(_61817_prim.ptr())) {
						_case_begin_1ac64c7ae:;
						{
							_58917_item=_1c62e6285_FindItem(_58817_enm.ptr(), jule::Str("F64", 3));
						}
					}
					else if (_1c6426ea9_IsI8(_61817_prim.ptr())) {
						_case_begin_1ac64c825:;
						{
							_58917_item=_1c62e6285_FindItem(_58817_enm.ptr(), jule::Str("I8", 2));
						}
					}
					else if (_1c6427240_IsI16(_61817_prim.ptr())) {
						_case_begin_1ac64c88b:;
						{
							_58917_item=_1c62e6285_FindItem(_58817_enm.ptr(), jule::Str("I16", 3));
						}
					}
					else if (_1c64274c6_IsI32(_61817_prim.ptr())) {
						_case_begin_1ac64c902:;
						{
							_58917_item=_1c62e6285_FindItem(_58817_enm.ptr(), jule::Str("I32", 3));
						}
					}
					else if (_1c642775c_IsI64(_61817_prim.ptr())) {
						_case_begin_1ac64c968:;
						{
							_58917_item=_1c62e6285_FindItem(_58817_enm.ptr(), jule::Str("I64", 3));
						}
					}
					else if (_1c64279e3_IsU8(_61817_prim.ptr())) {
						_case_begin_1ac64c9ce:;
						{
							_58917_item=_1c62e6285_FindItem(_58817_enm.ptr(), jule::Str("U8", 2));
						}
					}
					else if (_1c6427c79_IsU16(_61817_prim.ptr())) {
						_case_begin_1ac64ca45:;
						{
							_58917_item=_1c62e6285_FindItem(_58817_enm.ptr(), jule::Str("U16", 3));
						}
					}
					else if (_1c6428010_IsU32(_61817_prim.ptr())) {
						_case_begin_1ac64caab:;
						{
							_58917_item=_1c62e6285_FindItem(_58817_enm.ptr(), jule::Str("U32", 3));
						}
					}
					else if (_1c6428296_IsU64(_61817_prim.ptr())) {
						_case_begin_1ac64cb22:;
						{
							_58917_item=_1c62e6285_FindItem(_58817_enm.ptr(), jule::Str("U64", 3));
						}
					}
					else if (_1c6428a49_IsInt(_61817_prim.ptr())) {
						_case_begin_1ac64cb88:;
						{
							_58917_item=_1c62e6285_FindItem(_58817_enm.ptr(), jule::Str("Int", 3));
						}
					}
					else if (_1c6428cd0_IsUint(_61817_prim.ptr())) {
						_case_begin_1ac64cbee:;
						{
							_58917_item=_1c62e6285_FindItem(_58817_enm.ptr(), jule::Str("Uint", 4));
						}
					}
					else if (_1c6429066_IsUintptr(_61817_prim.ptr())) {
						_case_begin_1ac64cc65:;
						{
							_58917_item=_1c62e6285_FindItem(_58817_enm.ptr(), jule::Str("Uintptr", 7));
						}
					}
					else {
						_case_begin_1ac64b9ab:;
						{
							jule::panic((jule::Str("Kind(): unimplemented type for std::comptime: ", 46) + _1c641d8da_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:653:17"));;
						}
					}
					_match_end_1ac64b956:;
				};
			}
		}
		else {
			_case_begin_1ac63ee33:;
			{
				jule::panic((jule::Str("Kind(): unimplemented type for std::comptime: ", 46) + _1c641d8da_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:656:13"));;
			}
		}
		_match_end_1ac63eaae:;
	};
	return _1c641a651_evalEnumStatic(&(_58817_enm), &(_58917_item));;
}



inline jule::Ptr<_1c63dd35a_Data> _1c630a321__Bits(jule::Ptr<_1c6308c15_comptimeTypeInfo> _self_, jule::Ptr<_1c63e004e_Eval>* _66130_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _66145_fc) {
	if (((*((*(_66145_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_66130_e)).ptr(), (*((*((*(_66145_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c64260eb_Prim> _66613_prim = _1c6420b73_Prim((*(_self_))._field_base.ptr());;
	if ((_66613_prim == nullptr)) {
		_1c63e059e_pushErr((*(_66130_e)).ptr(), (*((*(_66145_fc))))._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _67113_n = _1dc2524c7_BitsizeOf((*(_66613_prim))._field_Kind);;
	if ((_67113_n == -1LL)) {
		_1c63e059e_pushErr((*(_66130_e)).ptr(), (*((*(_66145_fc))))._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1dc260590_Const> _67617_constant = static__1dc2609d0_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_67113_n)));;
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c6509355_primStr, ._field_Model=jule::Any(_67617_constant, &__jule_any_type19), ._field_Constant=_67617_constant});;
}



inline jule::Ptr<_1c63dd35a_Data> _1c630a71c__Elem(jule::Ptr<_1c6308c15_comptimeTypeInfo> _self_, jule::Ptr<_1c63e004e_Eval>* _68430_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _68445_fc) {
	if (((*((*(_68445_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_68430_e)).ptr(), (*((*((*(_68445_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Elem", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c642d3de_Ptr> _68917_ptr = _1c6421190_Ptr((*(_self_))._field_base.ptr());;
	if ((_68917_ptr != nullptr)) {
		if (_1c642de28_IsUnsafe(_68917_ptr.ptr())) {
			_1c63e059e_pushErr((*(_68430_e)).ptr(), (*((*(_68445_fc))))._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str("Elem", 4), &__jule_any_type4)}));
			return nullptr;;
		};
		return _1c6316492_buildComptimeTypeInfoData(&((*((*(_68430_e))))._field_s), &((*(_68917_ptr))._field_Elem));;
	};
	jule::Ptr<_1c6429b27_Sptr> _69717_sptr = _1c6420e09_Sptr((*(_self_))._field_base.ptr());;
	if ((_69717_sptr != nullptr)) {
		return _1c6316492_buildComptimeTypeInfoData(&((*((*(_68430_e))))._field_s), &((*(_69717_sptr))._field_Elem));;
	};
	jule::Ptr<_1c642a5ea_Slc> _70117_slice = _1c6421bc9_Slc((*(_self_))._field_base.ptr());;
	if ((_70117_slice != nullptr)) {
		return _1c6316492_buildComptimeTypeInfoData(&((*((*(_68430_e))))._field_s), &((*(_70117_slice))._field_Elem));;
	};
	jule::Ptr<_1c642c91b_Arr> _70517_array = _1c6421943_Arr((*(_self_))._field_base.ptr());;
	if ((_70517_array != nullptr)) {
		return _1c6316492_buildComptimeTypeInfoData(&((*((*(_68430_e))))._field_s), &((*(_70517_array))._field_Elem));;
	};
	jule::Ptr<_1c62e5691_Enum> _70917_enm = _1c6421426_Enum((*(_self_))._field_base.ptr());;
	if ((_70917_enm != nullptr)) {
		return _1c6316492_buildComptimeTypeInfoData(&((*((*(_68430_e))))._field_s), &((*((*(_70917_enm))._field_Kind))._field_Kind));;
	};
	_1c63e059e_pushErr((*(_68430_e)).ptr(), (*((*(_68445_fc))))._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str("Elem", 4), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1c63dd35a_Data> _1c630ab18__Size(jule::Ptr<_1c6308c15_comptimeTypeInfo> _self_, jule::Ptr<_1c63e004e_Eval>* _71730_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _71745_fc) {
	if (((*((*(_71745_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_71730_e)).ptr(), (*((*((*(_71745_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Size", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c642c91b_Arr> _72217_arr = _1c6421943_Arr((*(_self_))._field_base.ptr());;
	if ((_72217_arr == nullptr)) {
		_1c63e059e_pushErr((*(_71730_e)).ptr(), (*((*(_71745_fc))))._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str("Size", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1dc260590_Const> _72717_constant = static__1dc2609d0_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_72217_arr))._field_N)));;
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650a07b_primInt, ._field_Model=jule::Any(_72717_constant, &__jule_any_type19), ._field_Constant=_72717_constant});;
}



inline jule::Ptr<_1c63dd35a_Data> _1c630b014__Key(jule::Ptr<_1c6308c15_comptimeTypeInfo> _self_, jule::Ptr<_1c63e004e_Eval>* _73529_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _73544_fc) {
	if (((*((*(_73544_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_73529_e)).ptr(), (*((*((*(_73544_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Key", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c642bc8e_Map> _74017_m = _1c6422713_Map((*(_self_))._field_base.ptr());;
	if ((_74017_m == nullptr)) {
		_1c63e059e_pushErr((*(_73529_e)).ptr(), (*((*(_73544_fc))))._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str("Key", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1c6316492_buildComptimeTypeInfoData(&((*((*(_73529_e))))._field_s), &((*(_74017_m))._field_Key));;
}



inline jule::Ptr<_1c63dd35a_Data> _1c630b410__Value(jule::Ptr<_1c6308c15_comptimeTypeInfo> _self_, jule::Ptr<_1c63e004e_Eval>* _74831_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _74846_fc) {
	if (((*((*(_74846_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_74831_e)).ptr(), (*((*((*(_74846_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Value", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c642bc8e_Map> _75317_m = _1c6422713_Map((*(_self_))._field_base.ptr());;
	if ((_75317_m == nullptr)) {
		_1c63e059e_pushErr((*(_74831_e)).ptr(), (*((*(_74846_fc))))._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str("Value", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1c6316492_buildComptimeTypeInfoData(&((*((*(_74831_e))))._field_s), &((*(_75317_m))._field_Val));;
}



inline jule::Ptr<_1c63dd35a_Data> _1c630b80b__Fields(jule::Ptr<_1c6308c15_comptimeTypeInfo> _self_, jule::Ptr<_1c63e004e_Eval>* _76132_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _76147_fc) {
	if (((*((*(_76147_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_76132_e)).ptr(), (*((*((*(_76147_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Fields", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c62bcab9_StructIns> _76617_s = _1c64221e6_Struct((*(_self_))._field_base.ptr());;
	if ((_76617_s != nullptr)) {
		return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(jule::new_ptr<_1c62eb950_comptimeStructFields>(_1c62eb950_comptimeStructFields{._field_fields=(*(_76617_s))._field_Fields}), 7)}), });;
	};
	jule::Ptr<_1c62e5691_Enum> _77617_enm = _1c6421426_Enum((*(_self_))._field_base.ptr());;
	if ((_77617_enm != nullptr)) {
		return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(jule::new_ptr<_1c6302626_comptimeEnumFields>(_1c6302626_comptimeEnumFields{._field_fields=(*(_77617_enm))._field_Items}), 11)}), });;
	};
	_1c63e059e_pushErr((*(_76132_e)).ptr(), (*((*(_76147_fc))))._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str("Fields", 6), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1c63dd35a_Data> _1c630bc07__Statics(jule::Ptr<_1c6308c15_comptimeTypeInfo> _self_, jule::Ptr<_1c63e004e_Eval>* _79033_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _79048_fc) {
	if (((*((*(_79048_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_79033_e)).ptr(), (*((*((*(_79048_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Statics", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c62bcab9_StructIns> _79517_s = _1c64221e6_Struct((*(_self_))._field_base.ptr());;
	if ((_79517_s == nullptr)) {
		_1c63e059e_pushErr((*(_79033_e)).ptr(), (*((*(_79048_fc))))._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str("Fields", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(jule::new_ptr<_1c62eec1c_comptimeStatics>(_1c62eec1c_comptimeStatics{._field_fields=(*(_79517_s))._field_Statics}), 9)}), });;
}



inline jule::Ptr<_1c63dd35a_Data> _1c630c103__Public(jule::Ptr<_1c6308c15_comptimeTypeInfo> _self_, jule::Ptr<_1c63e004e_Eval>* _80932_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _80947_fc) {
	if (((*((*(_80947_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_80932_e)).ptr(), (*((*((*(_80947_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Bool _81417_public = false;;
	{
		
		if ((_1c64221e6_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ac680281:;
			{
				_81417_public=(*((*(_1c64221e6_Struct((*(_self_))._field_base.ptr())))._field_Decl))._field_Public;
			}
		}
		else if ((_1c642247c_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ac67e25d:;
			{
				_81417_public=(*(_1c642247c_Trait((*(_self_))._field_base.ptr())))._field_Public;
			}
		}
		else if ((_1c6421426_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ac67e2c4:;
			{
				_81417_public=(*(_1c6421426_Enum((*(_self_))._field_base.ptr())))._field_Public;
			}
		}
		else if ((_1c64216ac_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ac67e33a:;
			{
				_81417_public=(*(_1c64216ac_TypeEnum((*(_self_))._field_base.ptr())))._field_Public;
			}
		}
		else {
			_case_begin_1ac67ddea:;
			{
				_1c63e059e_pushErr((*(_80932_e)).ptr(), (*((*(_80947_fc))))._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str("Public", 6), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ac67dcc9:;
	};
	jule::Ptr<_1dc260590_Const> _82817_constant = static__1dc261063_NewBool(_81417_public);;
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650961e_primBool, ._field_Model=jule::Any(_82817_constant, &__jule_any_type19), ._field_Constant=_82817_constant});;
}



inline jule::Ptr<_1c63dd35a_Data> _1c630c4ee__Binded(jule::Ptr<_1c6308c15_comptimeTypeInfo> _self_, jule::Ptr<_1c63e004e_Eval>* _83632_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _83647_fc) {
	if (((*((*(_83647_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_83632_e)).ptr(), (*((*((*(_83647_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Binded", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1dc260590_Const> _84117_constant = static__1dc261063_NewBool(_1c641e369_Binded((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650961e_primBool, ._field_Model=jule::Any(_84117_constant, &__jule_any_type19), ._field_Constant=_84117_constant});;
}



inline jule::Ptr<_1c63dd35a_Data> _1c630c8ea__Ordered(jule::Ptr<_1c6308c15_comptimeTypeInfo> _self_, jule::Ptr<_1c63e004e_Eval>* _84929_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _84944_fc) {
	if (((*((*(_84944_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_84929_e)).ptr(), (*((*((*(_84944_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Ordered", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1dc260590_Const> _85417_constant = static__1dc261063_NewBool(_1c6420139_Ordered((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c6509355_primStr, ._field_Model=jule::Any(_85417_constant, &__jule_any_type19), ._field_Constant=_85417_constant});;
}



inline jule::Ptr<_1c63dd35a_Data> _1c630cce6__Comparable(jule::Ptr<_1c6308c15_comptimeTypeInfo> _self_, jule::Ptr<_1c63e004e_Eval>* _86232_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _86247_fc) {
	if (((*((*(_86247_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_86232_e)).ptr(), (*((*((*(_86247_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Comparable", 10), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1dc260590_Const> _86717_constant = static__1dc261063_NewBool(_1c641eb1c_Comparable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c6509355_primStr, ._field_Model=jule::Any(_86717_constant, &__jule_any_type19), ._field_Constant=_86717_constant});;
}



inline jule::Ptr<_1c63dd35a_Data> _1c630d1e2__Mutable(jule::Ptr<_1c6308c15_comptimeTypeInfo> _self_, jule::Ptr<_1c63e004e_Eval>* _87529_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _87544_fc) {
	if (((*((*(_87544_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_87529_e)).ptr(), (*((*((*(_87544_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Mutable", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1dc260590_Const> _88017_constant = static__1dc261063_NewBool(_1c641eda3_Mutable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650961e_primBool, ._field_Model=jule::Any(_88017_constant, &__jule_any_type19), ._field_Constant=_88017_constant});;
}



inline jule::Ptr<_1c63dd35a_Data> _1c630d5dd__Types(jule::Ptr<_1c6308c15_comptimeTypeInfo> _self_, jule::Ptr<_1c63e004e_Eval>* _88831_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _88846_fc) {
	if (((*((*(_88846_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_88831_e)).ptr(), (*((*((*(_88846_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Types", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c642b1de_Tuple> _89317_tup = _1c6422999_Tup((*(_self_))._field_base.ptr());;
	if ((_89317_tup == nullptr)) {
		_1c63e059e_pushErr((*(_88831_e)).ptr(), (*((*(_88846_fc))))._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str("Types", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c630761a_comptimeTypeInfos> _89817_infos = jule::new_ptr<_1c630761a_comptimeTypeInfos>(_1c630761a_comptimeTypeInfos{._field_types=jule::Slice<jule::Ptr<_1c6308c15_comptimeTypeInfo>>::alloc(0LL, (*(_89317_tup))._field_Types.len())});;
	{
		auto expr = &((*(_89317_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6939e2:;
		if (it != expr_end) {
			jule::Ptr<_1c641d522_TypeKind> _90121_t = *it;
			{
				{ jule::Slice<jule::Ptr<_1c6308c15_comptimeTypeInfo>> &__jule_push_dest = (*(_89817_infos))._field_types; __jule_push_dest.push(_1c6367306_pushComptimeTypeInfo((*((*((*(_88831_e))))._field_s))._field_meta.ptr(), &(_90121_t))); };
			}
			_iter_next_1ac6939e2:;
			++it;
			goto _iter_begin_1ac6939e2;
		}
		_iter_end_1ac6939e2:;
	};
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(_89817_infos, 14)}), });;
}



inline jule::Ptr<_1c63dd35a_Data> _1c630d9d9__Exceptional(jule::Ptr<_1c6308c15_comptimeTypeInfo> _self_, jule::Ptr<_1c63e004e_Eval>* _91137_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _91152_fc) {
	if (((*((*(_91152_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_91137_e)).ptr(), (*((*((*(_91152_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Exceptional", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c62d2b01_FnIns> _91617_f = _1c6421e60_Fn((*(_self_))._field_base.ptr());;
	if ((_91617_f == nullptr)) {
		_1c63e059e_pushErr((*(_91137_e)).ptr(), (*((*(_91152_fc))))._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str("Exceptional", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1dc260590_Const> _92117_constant = static__1dc261063_NewBool((((*(_91617_f))._field_Decl != nullptr) && (*((*(_91617_f))._field_Decl))._field_Exceptional));;
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650961e_primBool, ._field_Model=jule::Any(_92117_constant, &__jule_any_type19), ._field_Constant=_92117_constant});;
}



inline jule::Ptr<_1c63dd35a_Data> _1c630ddd5__CanNil(jule::Ptr<_1c6308c15_comptimeTypeInfo> _self_, jule::Ptr<_1c63e004e_Eval>* _92932_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _92947_fc) {
	if (((*((*(_92947_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_92932_e)).ptr(), (*((*((*(_92947_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("CanNil", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1dc260590_Const> _93417_constant = static__1dc261063_NewBool(_1c64203c0_NilCompatible((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650961e_primBool, ._field_Model=jule::Any(_93417_constant, &__jule_any_type19), ._field_Constant=_93417_constant});;
}



inline jule::Ptr<_1c63dd35a_Data> _1c630e2d1__RC(jule::Ptr<_1c6308c15_comptimeTypeInfo> _self_, jule::Ptr<_1c63e004e_Eval>* _94228_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _94243_fc) {
	if (((*((*(_94243_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_94228_e)).ptr(), (*((*((*(_94243_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("RC", 2), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1dc260590_Const> _94717_constant = static__1dc261063_NewBool(_1c6420656_PerformsRC((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650961e_primBool, ._field_Model=jule::Any(_94717_constant, &__jule_any_type19), ._field_Constant=_94717_constant});;
}



inline jule::Ptr<_1c63dd35a_Data> _1c630e6cc__Result(jule::Ptr<_1c6308c15_comptimeTypeInfo> _self_, jule::Ptr<_1c63e004e_Eval>* _95532_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _95547_fc) {
	if (((*((*(_95547_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_95532_e)).ptr(), (*((*((*(_95547_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Result", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c62d2b01_FnIns> _96017_f = _1c6421e60_Fn((*(_self_))._field_base.ptr());;
	if ((_96017_f == nullptr)) {
		_1c63e059e_pushErr((*(_95532_e)).ptr(), (*((*(_95547_fc))))._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str("Result", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*(_96017_f))._field_Result == nullptr)) {
		return _1c6316492_buildComptimeTypeInfoData(&((*((*(_95532_e))))._field_s), &(_1c6508c7d_primVoid));;
	};
	return _1c6316492_buildComptimeTypeInfoData(&((*((*(_95532_e))))._field_s), &((*(_96017_f))._field_Result));;
}



inline jule::Ptr<_1c63dd35a_Data> _1c630eac8__Params(jule::Ptr<_1c6308c15_comptimeTypeInfo> _self_, jule::Ptr<_1c63e004e_Eval>* _97132_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _97147_fc) {
	if (((*((*(_97147_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_97132_e)).ptr(), (*((*((*(_97147_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Params", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c62d2b01_FnIns> _97617_f = _1c6421e60_Fn((*(_self_))._field_base.ptr());;
	if ((_97617_f == nullptr)) {
		_1c63e059e_pushErr((*(_97132_e)).ptr(), (*((*(_97147_fc))))._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str("Params", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(jule::new_ptr<_1c6306020_comptimeParams>(_1c6306020_comptimeParams{._field_params=(*(_97617_f))._field_Params}), 13)}), });;
}



inline jule::Ptr<_1c63dd35a_Data> _1c630ee19_subIdent(jule::Ptr<_1c6308c15_comptimeTypeInfo> _self_, jule::Str* _98829_ident) {
	{
		auto &_match_expr{ (*(_98829_ident)) };
		
		if (_match_expr == jule::Str("Str", 3)) {
			_case_begin_1ac6a8782:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _99121_method = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>([=](jule::Ptr<_1c63e004e_Eval>* _99233_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _99248_fc, jule::Ptr<_1c63dd35a_Data>* ) mutable -> jule::Ptr<_1c63dd35a_Data> {
					return _1c6309a29__Str(_self_, _99233_e, _99248_fc);;
				}), });;
				return _1c6315d10_buildAsComptimeMethodData(&(_99121_method));;
			}
		}
		else if (_match_expr == jule::Str("Bits", 4)) {
			_case_begin_1ac6a8d15:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _99821_method = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>([=](jule::Ptr<_1c63e004e_Eval>* _99933_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _99948_fc, jule::Ptr<_1c63dd35a_Data>* ) mutable -> jule::Ptr<_1c63dd35a_Data> {
					return _1c630a321__Bits(_self_, _99933_e, _99948_fc);;
				}), });;
				return _1c6315d10_buildAsComptimeMethodData(&(_99821_method));;
			}
		}
		else if (_match_expr == jule::Str("Elem", 4)) {
			_case_begin_1ac6a8d7b:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _100521_method = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>([=](jule::Ptr<_1c63e004e_Eval>* _100633_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _100648_fc, jule::Ptr<_1c63dd35a_Data>* ) mutable -> jule::Ptr<_1c63dd35a_Data> {
					return _1c630a71c__Elem(_self_, _100633_e, _100648_fc);;
				}), });;
				return _1c6315d10_buildAsComptimeMethodData(&(_100521_method));;
			}
		}
		else if (_match_expr == jule::Str("Size", 4)) {
			_case_begin_1ac6a8de2:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _101221_method = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>([=](jule::Ptr<_1c63e004e_Eval>* _101333_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _101348_fc, jule::Ptr<_1c63dd35a_Data>* ) mutable -> jule::Ptr<_1c63dd35a_Data> {
					return _1c630ab18__Size(_self_, _101333_e, _101348_fc);;
				}), });;
				return _1c6315d10_buildAsComptimeMethodData(&(_101221_method));;
			}
		}
		else if (_match_expr == jule::Str("Key", 3)) {
			_case_begin_1ac6a8e58:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _101921_method = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>([=](jule::Ptr<_1c63e004e_Eval>* _102033_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _102048_fc, jule::Ptr<_1c63dd35a_Data>* ) mutable -> jule::Ptr<_1c63dd35a_Data> {
					return _1c630b014__Key(_self_, _102033_e, _102048_fc);;
				}), });;
				return _1c6315d10_buildAsComptimeMethodData(&(_101921_method));;
			}
		}
		else if (_match_expr == jule::Str("Value", 5)) {
			_case_begin_1ac6a9068:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _102621_method = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>([=](jule::Ptr<_1c63e004e_Eval>* _102733_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _102748_fc, jule::Ptr<_1c63dd35a_Data>* ) mutable -> jule::Ptr<_1c63dd35a_Data> {
					return _1c630b410__Value(_self_, _102733_e, _102748_fc);;
				}), });;
				return _1c6315d10_buildAsComptimeMethodData(&(_102621_method));;
			}
		}
		else if (_match_expr == jule::Str("Fields", 6)) {
			_case_begin_1ac6a90ce:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _103321_method = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>([=](jule::Ptr<_1c63e004e_Eval>* _103433_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _103448_fc, jule::Ptr<_1c63dd35a_Data>* ) mutable -> jule::Ptr<_1c63dd35a_Data> {
					return _1c630b80b__Fields(_self_, _103433_e, _103448_fc);;
				}), });;
				return _1c6315d10_buildAsComptimeMethodData(&(_103321_method));;
			}
		}
		else if (_match_expr == jule::Str("Statics", 7)) {
			_case_begin_1ac6a9145:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _104021_method = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>([=](jule::Ptr<_1c63e004e_Eval>* _104133_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _104148_fc, jule::Ptr<_1c63dd35a_Data>* ) mutable -> jule::Ptr<_1c63dd35a_Data> {
					return _1c630bc07__Statics(_self_, _104133_e, _104148_fc);;
				}), });;
				return _1c6315d10_buildAsComptimeMethodData(&(_104021_method));;
			}
		}
		else if (_match_expr == jule::Str("Params", 6)) {
			_case_begin_1ac6a91ab:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _104721_method = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>([=](jule::Ptr<_1c63e004e_Eval>* _104833_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _104848_fc, jule::Ptr<_1c63dd35a_Data>* ) mutable -> jule::Ptr<_1c63dd35a_Data> {
					return _1c630eac8__Params(_self_, _104833_e, _104848_fc);;
				}), });;
				return _1c6315d10_buildAsComptimeMethodData(&(_104721_method));;
			}
		}
		else if (_match_expr == jule::Str("Types", 5)) {
			_case_begin_1ac6a9222:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _105421_method = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>([=](jule::Ptr<_1c63e004e_Eval>* _105533_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _105548_fc, jule::Ptr<_1c63dd35a_Data>* ) mutable -> jule::Ptr<_1c63dd35a_Data> {
					return _1c630d5dd__Types(_self_, _105533_e, _105548_fc);;
				}), });;
				return _1c6315d10_buildAsComptimeMethodData(&(_105421_method));;
			}
		}
		else if (_match_expr == jule::Str("Public", 6)) {
			_case_begin_1ac6a9288:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _106121_method = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>([=](jule::Ptr<_1c63e004e_Eval>* _106233_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _106248_fc, jule::Ptr<_1c63dd35a_Data>* ) mutable -> jule::Ptr<_1c63dd35a_Data> {
					return _1c630c103__Public(_self_, _106233_e, _106248_fc);;
				}), });;
				return _1c6315d10_buildAsComptimeMethodData(&(_106121_method));;
			}
		}
		else if (_match_expr == jule::Str("Binded", 6)) {
			_case_begin_1ac6a92ee:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _106821_method = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>([=](jule::Ptr<_1c63e004e_Eval>* _106933_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _106948_fc, jule::Ptr<_1c63dd35a_Data>* ) mutable -> jule::Ptr<_1c63dd35a_Data> {
					return _1c630c4ee__Binded(_self_, _106933_e, _106948_fc);;
				}), });;
				return _1c6315d10_buildAsComptimeMethodData(&(_106821_method));;
			}
		}
		else if (_match_expr == jule::Str("Ordered", 7)) {
			_case_begin_1ac6a9376:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _107521_method = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>([=](jule::Ptr<_1c63e004e_Eval>* _107633_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _107648_fc, jule::Ptr<_1c63dd35a_Data>* ) mutable -> jule::Ptr<_1c63dd35a_Data> {
					return _1c630c8ea__Ordered(_self_, _107633_e, _107648_fc);;
				}), });;
				return _1c6315d10_buildAsComptimeMethodData(&(_107521_method));;
			}
		}
		else if (_match_expr == jule::Str("Comparable", 10)) {
			_case_begin_1ac6a93ed:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _108221_method = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>([=](jule::Ptr<_1c63e004e_Eval>* _108333_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _108348_fc, jule::Ptr<_1c63dd35a_Data>* ) mutable -> jule::Ptr<_1c63dd35a_Data> {
					return _1c630cce6__Comparable(_self_, _108333_e, _108348_fc);;
				}), });;
				return _1c6315d10_buildAsComptimeMethodData(&(_108221_method));;
			}
		}
		else if (_match_expr == jule::Str("Mutable", 7)) {
			_case_begin_1ac6a9475:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _108921_method = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>([=](jule::Ptr<_1c63e004e_Eval>* _109033_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _109048_fc, jule::Ptr<_1c63dd35a_Data>* ) mutable -> jule::Ptr<_1c63dd35a_Data> {
					return _1c630d1e2__Mutable(_self_, _109033_e, _109048_fc);;
				}), });;
				return _1c6315d10_buildAsComptimeMethodData(&(_108921_method));;
			}
		}
		else if (_match_expr == jule::Str("Exceptional", 11)) {
			_case_begin_1ac6a94ec:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _109621_method = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>([=](jule::Ptr<_1c63e004e_Eval>* _109733_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _109748_fc, jule::Ptr<_1c63dd35a_Data>* ) mutable -> jule::Ptr<_1c63dd35a_Data> {
					return _1c630d9d9__Exceptional(_self_, _109733_e, _109748_fc);;
				}), });;
				return _1c6315d10_buildAsComptimeMethodData(&(_109621_method));;
			}
		}
		else if (_match_expr == jule::Str("CanNil", 6)) {
			_case_begin_1ac6a9574:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _110321_method = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>([=](jule::Ptr<_1c63e004e_Eval>* _110433_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _110448_fc, jule::Ptr<_1c63dd35a_Data>* ) mutable -> jule::Ptr<_1c63dd35a_Data> {
					return _1c630ddd5__CanNil(_self_, _110433_e, _110448_fc);;
				}), });;
				return _1c6315d10_buildAsComptimeMethodData(&(_110321_method));;
			}
		}
		else if (_match_expr == jule::Str("RC", 2)) {
			_case_begin_1ac6a95eb:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _111021_method = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>([=](jule::Ptr<_1c63e004e_Eval>* _111133_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _111148_fc, jule::Ptr<_1c63dd35a_Data>* ) mutable -> jule::Ptr<_1c63dd35a_Data> {
					return _1c630e2d1__RC(_self_, _111133_e, _111148_fc);;
				}), });;
				return _1c6315d10_buildAsComptimeMethodData(&(_111021_method));;
			}
		}
		else if (_match_expr == jule::Str("Result", 6)) {
			_case_begin_1ac6a9673:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _111721_method = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>([=](jule::Ptr<_1c63e004e_Eval>* _111833_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _111848_fc, jule::Ptr<_1c63dd35a_Data>* ) mutable -> jule::Ptr<_1c63dd35a_Data> {
					return _1c630e6cc__Result(_self_, _111833_e, _111848_fc);;
				}), });;
				return _1c6315d10_buildAsComptimeMethodData(&(_111721_method));;
			}
		}
		else if (_match_expr == jule::Str("Kind", 4)) {
			_case_begin_1ac6a96ea:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _112421_method = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>([=](jule::Ptr<_1c63e004e_Eval>* _112533_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _112548_fc, jule::Ptr<_1c63dd35a_Data>* ) mutable -> jule::Ptr<_1c63dd35a_Data> {
					return _1c6309e25__Kind(_self_, _112533_e, _112548_fc);;
				}), });;
				return _1c6315d10_buildAsComptimeMethodData(&(_112421_method));;
			}
		}
		else {
			_case_begin_1ac6a88e7:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac6a85c8:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c6308c15_comptimeTypeInfo _Src) {
	_Stream << _1c6309089_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c631059b_Str(_1c6310227_comptimeValue* _self_) {
	return jule::Str("comptimeValue", 13);;
}



inline jule::Bool _1c63108dc_Equal(jule::Ptr<_1c6310227_comptimeValue> _self_, jule::Ptr<_1c641d522_TypeKind> _114321_other) {
	return false;;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6310e3c__Unwrap(jule::Ptr<_1c6310227_comptimeValue> _self_, jule::Ptr<_1c63e004e_Eval>* _114732_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _114747_fc) {
	if (((*((*(_114747_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_114732_e)).ptr(), (*((*((*(_114747_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Unwrap", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_self_))._field_data;;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6311338__Type(jule::Ptr<_1c6310227_comptimeValue> _self_, jule::Ptr<_1c63e004e_Eval>* _115530_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _115545_fc) {
	if (((*((*(_115545_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_115530_e)).ptr(), (*((*((*(_115545_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1c6316492_buildComptimeTypeInfoData(&((*((*(_115530_e))))._field_s), &((*((*(_self_))._field_data))._field_Kind));;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6311734__Lvalue(jule::Ptr<_1c6310227_comptimeValue> _self_, jule::Ptr<_1c63e004e_Eval>* _116332_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _116347_fc) {
	if (((*((*(_116347_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_116332_e)).ptr(), (*((*((*(_116347_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Lvalue", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1dc260590_Const> _116817_constant = static__1dc261063_NewBool((*((*(_self_))._field_data))._field_Lvalue);;
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650961e_primBool, ._field_Model=jule::Any(_116817_constant, &__jule_any_type19), ._field_Constant=_116817_constant});;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6311b30__Mutable(jule::Ptr<_1c6310227_comptimeValue> _self_, jule::Ptr<_1c63e004e_Eval>* _117633_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _117648_fc) {
	if (((*((*(_117648_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_117633_e)).ptr(), (*((*((*(_117648_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Mutable", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1dc260590_Const> _118117_constant = static__1dc261063_NewBool((*((*(_self_))._field_data))._field_Mutable);;
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650961e_primBool, ._field_Model=jule::Any(_118117_constant, &__jule_any_type19), ._field_Constant=_118117_constant});;
}



inline jule::Ptr<_1c63dd35a_Data> _1c631202b__Const(jule::Ptr<_1c6310227_comptimeValue> _self_, jule::Ptr<_1c63e004e_Eval>* _118931_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _118946_fc) {
	if (((*((*(_118946_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_118931_e)).ptr(), (*((*((*(_118946_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Const", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1dc260590_Const> _119417_constant = static__1dc261063_NewBool(_1c63ddc2e_IsConst((*(_self_))._field_data.ptr()));;
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650961e_primBool, ._field_Model=jule::Any(_119417_constant, &__jule_any_type19), ._field_Constant=_119417_constant});;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6312427__Field(jule::Ptr<_1c6310227_comptimeValue> _self_, jule::Ptr<_1c63e004e_Eval>* _120231_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _120246_fc) {
	if (((*((*(_120246_fc))))._field_Args.len() > 1LL)) {
		_1c63e059e_pushErr((*(_120231_e)).ptr(), (*((*((*(_120246_fc))))._field_Args[1LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Field", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c62bcab9_StructIns> _120717_s = _1c64221e6_Struct((*((*(_self_))._field_data))._field_Kind.ptr());;
	if ((_120717_s == nullptr)) {
		_1c63e059e_pushErr((*(_120231_e)).ptr(), (*((*(_120246_fc))))._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*((*(_self_))._field_data))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str("Field", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c629d57d_Expr> _121217_arg = (*((*(_120246_fc))))._field_Args[0LL];;
	jule::Ptr<_1c63dd35a_Data> _121317_d = _1c640d028_evalExpr((*(_120231_e)), _121217_arg);;
	if ((_121317_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c63ddc2e_IsConst(_121317_d.ptr())))) {
		_1c63e059e_pushErr((*(_120231_e)).ptr(), (*(_121217_arg))._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c64260eb_Prim> _122113_prim = _1c6420b73_Prim((*(_121317_d))._field_Kind.ptr());;
	if (((_122113_prim == nullptr) || (!(_1c6429583_IsStr(_122113_prim.ptr()))))) {
		_1c63e059e_pushErr((*(_120231_e)).ptr(), (*(_121217_arg))._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type4),jule::Any(_1c641d8da_Str((*(_121317_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Str _122613_ident = _1dc262718_ReadStr((*(_121317_d))._field_Constant.ptr());;
	jule::Ptr<_1c62bc019_FieldIns> _122717_f = _1c62bde72_FindField(_120717_s.ptr(), _122613_ident);;
	if ((_122717_f == nullptr)) {
		_1c63e059e_pushErr((*(_120231_e)).ptr(), (*(_121217_arg))._field_Token, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_120717_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any(_122613_ident, &__jule_any_type4)}));
		return nullptr;;
	};
	_121317_d=jule::new_ptr<_1c63dd35a_Data>((*((*(_self_))._field_data)));
	_121317_d=_1c640632e_evalStructSubIdentField((*(_120231_e)).ptr(), &(_121317_d), &(_120717_s), &((*(_121217_arg))._field_Token), &(_122717_f));
	return _1c63166c3_buildComptimeValue(&(_121317_d));;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6312768_subIdent(jule::Ptr<_1c6310227_comptimeValue> _self_, jule::Str* _123729_ident) {
	{
		auto &_match_expr{ (*(_123729_ident)) };
		
		if (_match_expr == jule::Str("Unwrap", 6)) {
			_case_begin_1ac700eb1:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _124021_method = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>([=](jule::Ptr<_1c63e004e_Eval>* _124133_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _124148_fc, jule::Ptr<_1c63dd35a_Data>* ) mutable -> jule::Ptr<_1c63dd35a_Data> {
					return _1c6310e3c__Unwrap(_self_, _124133_e, _124148_fc);;
				}), });;
				return _1c6315d10_buildAsComptimeMethodData(&(_124021_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_1ac701038:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _124721_method = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>([=](jule::Ptr<_1c63e004e_Eval>* _124833_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _124848_fc, jule::Ptr<_1c63dd35a_Data>* ) mutable -> jule::Ptr<_1c63dd35a_Data> {
					return _1c6311338__Type(_self_, _124833_e, _124848_fc);;
				}), });;
				return _1c6315d10_buildAsComptimeMethodData(&(_124721_method));;
			}
		}
		else if (_match_expr == jule::Str("Lvalue", 6)) {
			_case_begin_1ac7010b0:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _125421_method = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>([=](jule::Ptr<_1c63e004e_Eval>* _125533_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _125548_fc, jule::Ptr<_1c63dd35a_Data>* ) mutable -> jule::Ptr<_1c63dd35a_Data> {
					return _1c6311734__Lvalue(_self_, _125533_e, _125548_fc);;
				}), });;
				return _1c6315d10_buildAsComptimeMethodData(&(_125421_method));;
			}
		}
		else if (_match_expr == jule::Str("Mutable", 7)) {
			_case_begin_1ac701137:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _126121_method = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>([=](jule::Ptr<_1c63e004e_Eval>* _126233_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _126248_fc, jule::Ptr<_1c63dd35a_Data>* ) mutable -> jule::Ptr<_1c63dd35a_Data> {
					return _1c6311b30__Mutable(_self_, _126233_e, _126248_fc);;
				}), });;
				return _1c6315d10_buildAsComptimeMethodData(&(_126121_method));;
			}
		}
		else if (_match_expr == jule::Str("Const", 5)) {
			_case_begin_1ac70138a:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _126821_method = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>([=](jule::Ptr<_1c63e004e_Eval>* _126933_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _126948_fc, jule::Ptr<_1c63dd35a_Data>* ) mutable -> jule::Ptr<_1c63dd35a_Data> {
					return _1c631202b__Const(_self_, _126933_e, _126948_fc);;
				}), });;
				return _1c6315d10_buildAsComptimeMethodData(&(_126821_method));;
			}
		}
		else if (_match_expr == jule::Str("Field", 5)) {
			_case_begin_1ac701412:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _127521_method = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>([=](jule::Ptr<_1c63e004e_Eval>* _127633_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _127648_fc, jule::Ptr<_1c63dd35a_Data>* ) mutable -> jule::Ptr<_1c63dd35a_Data> {
					return _1c6312427__Field(_self_, _127633_e, _127648_fc);;
				}), });;
				return _1c6315d10_buildAsComptimeMethodData(&(_127521_method));;
			}
		}
		else {
			_case_begin_1ac700e39:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac700db2:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c6310227_comptimeValue _Src) {
	_Stream << _1c631059b_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c6312dea_Str(_1c6312a76_comptimeFiles* _self_) {
	return jule::Str("comptimeFiles", 13);;
}



inline jule::Bool _1c631323b_Equal(jule::Ptr<_1c6312a76_comptimeFiles> _self_, jule::Ptr<_1c641d522_TypeKind> _129421_other) {
	return false;;
}



inline void _1c63136ae_ready(_1c6312a76_comptimeFiles* _self_, jule::Ptr<_1c6389da6_Var>* _129829_keyA, jule::Ptr<_1c6389da6_Var>* _129846_keyB) {
	if (((*(_129829_keyA)) != nullptr)) {
		(*((*(_129829_keyA))))._field_Constant=true;
		(*((*(_129829_keyA))))._field_Value=jule::new_ptr<_1c63de49e_Value>(_1c63de49e_Value{._field_Data=jule::new_ptr<_1c63dd35a_Data>()});
		(*((*((*((*(_129829_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_129829_keyA))))._field_Kind=(*(_1c650c49b_findBuiltinTypeAlias(jule::Str("int", 3))))._field_Kind;
	};
	if (((*(_129846_keyB)) != nullptr)) {
		(*((*(_129846_keyB))))._field_Constant=true;
		(*((*(_129846_keyB))))._field_Value=jule::new_ptr<_1c63de49e_Value>(_1c63de49e_Value{._field_Data=jule::new_ptr<_1c63dd35a_Data>()});
		(*((*(_129846_keyB))))._field_Kind=jule::new_ptr<_1c64256e4_TypeSymbol>(_1c64256e4_TypeSymbol{._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(jule::new_ptr<_1c6314171_comptimeFile>(), 18)})});
	};
}



inline void _1c6313acc_step(_1c6312a76_comptimeFiles* _self_, jule::I64 _132023_i, jule::Ptr<_1c6389da6_Var>* _132036_keyA, jule::Ptr<_1c6389da6_Var>* _132053_keyB) {
	if (((*(_132036_keyA)) != nullptr)) {
		(*((*((*((*(_132036_keyA))))._field_Value))._field_Data))._field_Constant=static__1dc2609d0_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_132023_i)));
		(*((*((*((*(_132036_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_132036_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_132053_keyB)) != nullptr)) {
		(*((*((*((*((*(_132053_keyB))))._field_Kind))._field_Kind))._field_Kind.cast_ptr<_1c6314171_comptimeFile>(18)))._field_file=(*(_self_))._field_files[_132023_i];
	};
}



inline jule::I64 _1c6313d63_len(_1c6312a76_comptimeFiles* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_files.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1c6312a76_comptimeFiles _Src) {
	_Stream << _1c6312dea_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c63144e5_Str(_1c6314171_comptimeFile* _self_) {
	return jule::Str("comptimeFile", 12);;
}



inline jule::Bool _1c6314836_Equal(jule::Ptr<_1c6314171_comptimeFile> _self_, jule::Ptr<_1c641d522_TypeKind> _134421_other) {
	return false;;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6314d53__Path(jule::Ptr<_1c6314171_comptimeFile> _self_, jule::Ptr<_1c63e004e_Eval>* _134830_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _134845_fc) {
	if (((*((*(_134845_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_134830_e)).ptr(), (*((*((*(_134845_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Path", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1dc260590_Const> _135317_constant = static__1dc26132c_NewStr((*((*((*(_self_))._field_file))._field_File))._field_Path);;
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c6509355_primStr, ._field_Model=jule::Any(_135317_constant, &__jule_any_type19), ._field_Constant=_135317_constant});;
}



inline jule::Ptr<_1c63dd35a_Data> _1c631524e__Name(jule::Ptr<_1c6314171_comptimeFile> _self_, jule::Ptr<_1c63e004e_Eval>* _136130_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _136145_fc) {
	if (((*((*(_136145_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_136130_e)).ptr(), (*((*((*(_136145_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1dc260590_Const> _136617_constant = static__1dc26132c_NewStr(_1c6289c0c_Name((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c6509355_primStr, ._field_Model=jule::Any(_136617_constant, &__jule_any_type19), ._field_Constant=_136617_constant});;
}



inline jule::Ptr<_1c63dd35a_Data> _1c631564a__Dir(jule::Ptr<_1c6314171_comptimeFile> _self_, jule::Ptr<_1c63e004e_Eval>* _137429_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _137444_fc) {
	if (((*((*(_137444_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_137429_e)).ptr(), (*((*((*(_137444_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Dir", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1dc260590_Const> _137917_constant = static__1dc26132c_NewStr(_1c6289976_Dir((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c6509355_primStr, ._field_Model=jule::Any(_137917_constant, &__jule_any_type19), ._field_Constant=_137917_constant});;
}



inline jule::Ptr<_1c63dd35a_Data> _1c631598b_subIdent(jule::Ptr<_1c6314171_comptimeFile> _self_, jule::Str* _138729_ident) {
	{
		auto &_match_expr{ (*(_138729_ident)) };
		
		if (_match_expr == jule::Str("Path", 4)) {
			_case_begin_1ac71dd69:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _139021_method = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>([=](jule::Ptr<_1c63e004e_Eval>* _139133_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _139148_fc, jule::Ptr<_1c63dd35a_Data>* ) mutable -> jule::Ptr<_1c63dd35a_Data> {
					return _1c6314d53__Path(_self_, _139133_e, _139148_fc);;
				}), });;
				return _1c6315d10_buildAsComptimeMethodData(&(_139021_method));;
			}
		}
		else if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1ac71ddd0:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _139721_method = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>([=](jule::Ptr<_1c63e004e_Eval>* _139833_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _139848_fc, jule::Ptr<_1c63dd35a_Data>* ) mutable -> jule::Ptr<_1c63dd35a_Data> {
					return _1c631524e__Name(_self_, _139833_e, _139848_fc);;
				}), });;
				return _1c6315d10_buildAsComptimeMethodData(&(_139721_method));;
			}
		}
		else if (_match_expr == jule::Str("Dir", 3)) {
			_case_begin_1ac71de46:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _140421_method = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>([=](jule::Ptr<_1c63e004e_Eval>* _140533_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _140548_fc, jule::Ptr<_1c63dd35a_Data>* ) mutable -> jule::Ptr<_1c63dd35a_Data> {
					return _1c631564a__Dir(_self_, _140533_e, _140548_fc);;
				}), });;
				return _1c6315d10_buildAsComptimeMethodData(&(_140421_method));;
			}
		}
		else {
			_case_begin_1ac71dd03:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac71dc9d:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c6314171_comptimeFile _Src) {
	_Stream << _1c63144e5_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_1c63679bb_Sema>*,jule::Slice<jule::Ptr<_1c641c730_TypeAlias>>*)> _1c63186d6_readyFn(jule::Ptr<_1c63182da_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_1c63679bb_Sema>*,jule::Slice<jule::Ptr<_1c641c730_TypeAlias>>*)>([=](jule::Ptr<_1c63679bb_Sema>* _6321_sema, jule::Slice<jule::Ptr<_1c641c730_TypeAlias>>* _6339_generics) mutable -> jule::Bool {
		{
			auto expr = &((*(_self_))._field_genericsD);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac72d5d7:;
			if (it != expr_end) {
				jule::I64 _6418_i = it - expr->begin();
				jule::Ptr<_1c62a6454_GenericDecl> _6425_g = *it;
				{
					jule::Ptr<_1c641bb3b_InsGeneric> _6525_generic = (*(_self_))._field_generics[_6418_i];;
					if ((((*(_6425_g))._field_Constraint == nullptr) || ((*((*(_6425_g))._field_Constraint))._field_Mask.len() == 0LL))) {
						goto _iter_next_1ac72d5d7;
					};
					(*(_6525_generic))._field_Constraint=jule::Slice<jule::Ptr<_1c641d522_TypeKind>>::alloc(0LL, (*((*(_6425_g))._field_Constraint))._field_Mask.len());
					{
						auto expr = &((*((*(_6425_g))._field_Constraint))._field_Mask);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac72e95c:;
						if (it != expr_end) {
							jule::Ptr<_1c6299249_TypeDecl> _7029_mask = *it;
							{
								jule::I64 _7125_n = (*((*(_6321_sema))))._field_errors.len();;
								jule::Ptr<_1c641d522_TypeKind> _7229_kind = _1c6370584_buildTypeWithRefers((*(_6321_sema)), &(_7029_mask), jule::Trait<_1c643d058_Lookup>((*(_6321_sema)), 3), (*(_6339_generics)), nullptr);;
								if ((_7229_kind == nullptr)) {
									{
										auto &_match_expr{ (*(_7029_mask))._field_Kind };
										
										if (_match_expr.type == &__jule_any_type20) {
											_case_begin_1ac7333de:;
											{
												jule::Ptr<_1c6299854_IdentTypeDecl> _7637_itd = (*(_7029_mask))._field_Kind.cast_ptr<_1c6299854_IdentTypeDecl>(&__jule_any_type20);;
												if ((((*(_7637_itd))._field_Generics.len() == 0LL) && _1c63199a1_isBuiltinConstraint(&((*(_7637_itd))._field_Ident)))) {
													_7229_kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(_1c643a440_buildPrimType((*(_7637_itd))._field_Ident), 20)});
													(*((*(_6321_sema))))._field_errors=(*((*(_6321_sema))))._field_errors.slice(0LL, _7125_n);
													goto _julec_label_1ac734599;
												};
											}
										}
										_match_end_1ac733389:;
									};
									return false;;
								};
								_julec_label_1ac734599:;
								{ jule::Slice<jule::Ptr<_1c641d522_TypeKind>> &__jule_push_dest = (*(_6525_generic))._field_Constraint; __jule_push_dest.push(_7229_kind); };
							}
							_iter_next_1ac72e95c:;
							++it;
							goto _iter_begin_1ac72e95c;
						}
						_iter_end_1ac72e95c:;
					};
				}
				_iter_next_1ac72d5d7:;
				++it;
				_6418_i++;
				goto _iter_begin_1ac72d5d7;
			}
			_iter_end_1ac72d5d7:;
		};
		return true;;
	});;
}



inline jule::Bool _1c631896c_readyFi(jule::Ptr<_1c63182da_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*(_self_))._field_fi))._field_Decl))._field_Generics;
	(*(_self_))._field_generics=(*((*(_self_))._field_fi))._field_Generics;
	return ((!((*(_self_))._field_uniq)) || _1c6375116_fnEnvironment((*(_self_))._field_s, &((*(_self_))._field_fi), _1c63186d6_readyFn(_self_)));;
}



inline jule::Bool _1c6318c03_readySi(jule::Ptr<_1c63182da_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*(_self_))._field_si))._field_Decl))._field_Generics;
	(*(_self_))._field_generics=(*((*(_self_))._field_si))._field_Generics;
	return ((!((*(_self_))._field_uniq)) || _1c63186d6_readyFn(_self_)(&((*(_self_))._field_s), &((*(_self_))._field_genericsA)));;
}



inline jule::Bool _1c6318e89_ready(jule::Ptr<_1c63182da_constraintChecker> _self_) {
	if (((*(_self_))._field_fi != nullptr)) {
		return _1c631896c_readyFi(_self_);;
	};
	return _1c6318c03_readySi(_self_);;
}



inline jule::Bool _1c6319220_check(jule::Ptr<_1c63182da_constraintChecker> _self_) {
	if ((!(_1c6318e89_ready(_self_)))) {
		return false;;
	};
	_julec_label_1ac73bd43:;
	{
		auto expr = &((*(_self_))._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac73c4e7:;
		if (it != expr_end) {
			jule::I64 _11914_i = it - expr->begin();
			jule::Ptr<_1c641bb3b_InsGeneric> _11921_g = *it;
			{
				if (((*(_11921_g))._field_Constraint == nullptr)) {
					goto _iter_next_1ac73c4e7;
				};
				{
					auto expr = &((*(_11921_g))._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac73d5d6:;
					if (it != expr_end) {
						jule::Ptr<_1c641d522_TypeKind> _12325_c2 = *it;
						{
							jule::Ptr<_1c64260eb_Prim> _12425_prim = _1c6420b73_Prim(_12325_c2.ptr());;
							if (((_12425_prim != nullptr) && _1c6426c23_IsConstraint(_12425_prim.ptr()))) {
								if (_1c6319693_matchConstraint(&((*(_12425_prim))._field_Kind), &((*(_11921_g))._field_Kind))) {
									goto _iter_next_1ac73c4e7;
								};
								goto _iter_next_1ac73d5d6;
							};
							if (_1c641dc2b_Equal(_12325_c2, (*(_11921_g))._field_Kind)) {
								goto _iter_next_1ac73c4e7;
							};
						}
						_iter_next_1ac73d5d6:;
						++it;
						goto _iter_begin_1ac73d5d6;
					}
					_iter_end_1ac73d5d6:;
				};
				_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_et, jule::Str("type @ is not matched with @'s constraint", 41), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_11921_g))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*(_self_))._field_genericsD[_11914_i]))._field_Ident, &__jule_any_type4)}));
				return false;;
			}
			_iter_next_1ac73c4e7:;
			++it;
			_11914_i++;
			goto _iter_begin_1ac73c4e7;
		}
		_iter_end_1ac73c4e7:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c63182da_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c631a6d8_IsTraitImpl(_1c631a320_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1c631a96e_IsStructImpl(_1c631a320_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c631a320_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c6320754_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c6320b72_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c6320e6e_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c632138c_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c6321689_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c6321b40_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c632258b_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c6322921_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c6322cea_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c63230e7_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c63234c1_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c632389a_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c6323d51_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c632422a_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c632488a_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c63254c3_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c6325abc_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c6325e52_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c63265b2_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c6326b45_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "st:" << _Src._field_st << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c63469de_ImportInfo> _1c6327eed_SelectPackage(_1c6327a58_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_1c63469de_ImportInfo>)> _45832_selector) {
	return _1c6367e61_SelectPackage((*(_self_))._field_s.ptr(), _45832_selector);;
}



inline jule::Ptr<_1c6389da6_Var> _1c63283e9_FindVar(_1c6327a58_scopeChecker* _self_, jule::Str _46926_ident, jule::Bool _46938_binded) {
	;
	jule::Ptr<_1c6389da6_Var> _47217_v = _1c63da7ec_findVar((*(_self_))._field_table.ptr(), &(_46926_ident), _46938_binded, true);;
	if ((_47217_v != nullptr)) {
		return _47217_v;;
	};
	jule::Ptr<_1c6327a58_scopeChecker> _47717_parent = (*(_self_))._field_parent;;
	while ((_47717_parent != nullptr)) {
		{
			_47217_v=_1c63da7ec_findVar((*(_47717_parent))._field_table.ptr(), &(_46926_ident), _46938_binded, true);
			if ((_47217_v != nullptr)) {
				return _47217_v;;
			};
			_47717_parent=(*(_47717_parent))._field_parent;
		}
	_iter_next_1ac770173:;
	}
	_iter_end_1ac770173:;;
	return _1c636835c_FindVar((*(_self_))._field_s.ptr(), _46926_ident, _46938_binded);;
}



inline jule::Ptr<_1c641c730_TypeAlias> _1c63287e5_FindTypeAlias(_1c6327a58_scopeChecker* _self_, jule::Str _49632_ident, jule::Bool _49644_binded) {
	;
	jule::Ptr<_1c641c730_TypeAlias> _49917_ta = _1c63daca3_findTypeAlias((*(_self_))._field_table.ptr(), &(_49632_ident), _49644_binded, true);;
	if ((_49917_ta != nullptr)) {
		return _49917_ta;;
	};
	jule::Ptr<_1c6327a58_scopeChecker> _50417_parent = (*(_self_))._field_parent;;
	while ((_50417_parent != nullptr)) {
		{
			_49917_ta=_1c63daca3_findTypeAlias((*(_50417_parent))._field_table.ptr(), &(_49632_ident), _49644_binded, true);
			if ((_49917_ta != nullptr)) {
				return _49917_ta;;
			};
			_50417_parent=(*(_50417_parent))._field_parent;
		}
	_iter_next_1ac773187:;
	}
	_iter_end_1ac773187:;;
	return _1c6368758_FindTypeAlias((*(_self_))._field_s.ptr(), _49632_ident, _49644_binded);;
}



inline jule::Ptr<_1c62b9d3b_Struct> _1c6328be1_FindStruct(_1c6327a58_scopeChecker* _self_, jule::Str _52129_ident, jule::Bool _52141_binded) {
	return _1c6368b54_FindStruct((*(_self_))._field_s.ptr(), _52129_ident, _52141_binded);;
}



inline jule::Ptr<_1c62cebec_Fn> _1c63290dc_FindFn(_1c6327a58_scopeChecker* _self_, jule::Str _53025_ident, jule::Bool _53037_binded) {
	return _1c6369050_FindFn((*(_self_))._field_s.ptr(), _53025_ident, _53037_binded);;
}



inline jule::Ptr<_1c62e2e96_Trait> _1c632942d_FindTrait(_1c6327a58_scopeChecker* _self_, jule::Str _53928_ident) {
	return _1c6369391_FindTrait((*(_self_))._field_s.ptr(), _53928_ident);;
}



inline jule::Ptr<_1c62e5691_Enum> _1c632976e_FindEnum(_1c6327a58_scopeChecker* _self_, jule::Str _54827_ident) {
	return _1c63696d2_FindEnum((*(_self_))._field_s.ptr(), _54827_ident);;
}



inline jule::Ptr<_1c62e6d9b_TypeEnum> _1c6329ab0_FindTypeEnum(_1c6327a58_scopeChecker* _self_, jule::Str _55731_ident) {
	return _1c6369a23_FindTypeEnum((*(_self_))._field_s.ptr(), _55731_ident);;
}



inline jule::Bool _1c6329e12_isUnsafe(jule::Ptr<_1c6327a58_scopeChecker> _self_) {
	jule::Ptr<_1c6327a58_scopeChecker> _56517_scope = _self_;;
	_julec_label_1ac777ce6:;
	if ((*((*(_56517_scope))._field_scope))._field_Unsafety) {
		return true;;
	};
	if (((*(_56517_scope))._field_parent != nullptr)) {
		_56517_scope=(*(_56517_scope))._field_parent;
		goto _julec_label_1ac777ce6;
	};
	return false;;
}



inline jule::Bool _1c632a198_isRoot(_1c6327a58_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1c632a396_stop(_1c6327a58_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1c632a62c_stopped(_1c6327a58_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1c632a8b3_isDeferred(jule::Ptr<_1c6327a58_scopeChecker> _self_) {
	jule::Ptr<_1c6327a58_scopeChecker> _59817_scope = _self_;;
	_julec_label_1ac77b16d:;
	if ((*((*(_59817_scope))._field_scope))._field_Deferred) {
		return true;;
	};
	if (((*(_59817_scope))._field_parent != nullptr)) {
		_59817_scope=(*(_59817_scope))._field_parent;
		goto _julec_label_1ac77b16d;
	};
	return false;;
}



inline jule::Ptr<_1c6327a58_scopeChecker> _1c632ab49_getRoot(jule::Ptr<_1c6327a58_scopeChecker> _self_) {
	jule::Ptr<_1c6327a58_scopeChecker> _61617_root = _self_;;
	while ((((*(_61617_root))._field_parent != nullptr) && ((*(_61617_root))._field_owner == nullptr))) {
		{
			_61617_root=(*(_61617_root))._field_parent;
		}
	_iter_next_1ac77d109:;
	}
	_iter_end_1ac77d109:;;
	return _61617_root;;
}



inline jule::Ptr<_1c6327a58_scopeChecker> _1c632add0_getHardRoot(jule::Ptr<_1c6327a58_scopeChecker> _self_) {
	jule::Ptr<_1c6327a58_scopeChecker> _62617_root = _self_;;
	while (((*(_62617_root))._field_parent != nullptr)) {
		{
			_62617_root=(*(_62617_root))._field_parent;
		}
	_iter_next_1ac77e45c:;
	}
	_iter_end_1ac77e45c:;;
	return _62617_root;;
}



inline jule::Ptr<_1c63230e7_Label> _1c632b221_findLabel(_1c6327a58_scopeChecker* _self_, jule::Str* _63629_ident) {
	{
		auto expr = &((*((*(_self_))._field_scope))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7802d7:;
		if (it != expr_end) {
			jule::Any _63721_st = *it;
			{
				{
					auto &_match_expr{ _63721_st };
					
					if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1ac780e20:;
						{
							jule::Ptr<_1c63230e7_Label> _64025_label = _63721_st.cast_ptr<_1c63230e7_Label>(&__jule_any_type21);;
							if (((*(_64025_label))._field_Ident == (*(_63629_ident)))) {
								return _64025_label;;
							};
						}
					}
					_match_end_1ac780dba:;
				};
			}
			_iter_next_1ac7802d7:;
			++it;
			goto _iter_begin_1ac7802d7;
		}
		_iter_end_1ac7802d7:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c63265b2_scopeLabel> _1c632b562_findLabelScope(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Str* _65235_ident) {
	jule::Ptr<_1c63265b2_scopeLabel> _65317_label = _1c632b8a3_findLabelAll(_self_.ptr(), _65235_ident);;
	if (((_65317_label != nullptr) && ((*(_65317_label))._field_scope == _self_))) {
		return _65317_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1c63265b2_scopeLabel> _1c632b8a3_findLabelAll(_1c6327a58_scopeChecker* _self_, jule::Str* _66432_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7832c9:;
		if (it != expr_end) {
			jule::Ptr<_1c63265b2_scopeLabel> _66521_lbl = *it;
			{
				if (((*((*(_66521_lbl))._field_label))._field_Ident == (*(_66432_ident)))) {
					return _66521_lbl;;
				};
			}
			_iter_next_1ac7832c9:;
			++it;
			goto _iter_begin_1ac7832c9;
		}
		_iter_end_1ac7832c9:;
	};
	return nullptr;;
}



inline jule::Bool _1c632bc9e_isDuplicatedIdent(_1c6327a58_scopeChecker* _self_, jule::Uintptr _67636_itself, jule::Str* _67654_ident) {
	jule::Ptr<_1c6389da6_Var> _67713_v = _1c63283e9_FindVar(_self_, (*(_67654_ident)), false);;
	if (((_67713_v != nullptr) && (static_cast<jule::Uintptr>(_67713_v) != _67636_itself))) {
		if (((*(_67713_v))._field_Scope == nullptr)) {
			return false;;
		};
		return (((*(_67713_v))._field_Scope == (*(_self_))._field_scope) || (!(_1c6369e30_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	jule::Ptr<_1c641c730_TypeAlias> _68513_ta = _1c63287e5_FindTypeAlias(_self_, (*(_67654_ident)), false);;
	if (((_68513_ta != nullptr) && (static_cast<jule::Uintptr>(_68513_ta) != _67636_itself))) {
		if (((*(_68513_ta))._field_Scope == nullptr)) {
			return false;;
		};
		return (((*(_68513_ta))._field_Scope == (*(_self_))._field_tree) || (!(_1c6369e30_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	return false;;
}



inline void _1c632c057_checkVarDecl(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c62abed7_VarDecl> _69636_decl) {
	jule::Ptr<_1c6389da6_Var> _69717_v = _1c62db236_buildVar(_69636_decl);;
	(*(_69717_v))._field_Scope=(*(_self_))._field_scope;
	__JULE_DEFER({
		{ jule::Slice<jule::Ptr<_1c6389da6_Var>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Vars; __jule_push_dest.push(_69717_v); };
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_69717_v, &__jule_any_type8)); };
	});;
	if (_1c632bc9e_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_69717_v)), &((*(_69717_v))._field_Ident))) {
		_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_69717_v))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_69717_v))._field_Ident, &__jule_any_type4)}));
		_1c636a969_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1c632a396_stop(_self_.ptr());
		return;;
	};
	_1c637cd00_checkVarDecl((*(_self_))._field_s, &(_69717_v), jule::Trait<_1c643d058_Lookup>(_self_, 0));
	if (((!(_1c638a4c2_IsTypeInferred(_69717_v.ptr()))) && (((*(_69717_v))._field_Kind == nullptr) || ((*((*(_69717_v))._field_Kind))._field_Kind == nullptr)))) {
		return;;
	};
	_1c6381595_evalVarValue((*(_self_))._field_s, &(_69717_v), jule::Trait<_1c643d058_Lookup>(_self_, 0));
	if (((!(_1c638a23b_IsInitialized(_69717_v.ptr()))) || ((*((*(_69717_v))._field_Value))._field_Data == nullptr))) {
		return;;
	};
	_1c63332c2_removeInteriorMutRisk(_self_, &((*((*(_69717_v))._field_Value))._field_Data));
	_1c6381232_checkVarValue((*(_self_))._field_s, &(_69717_v));
}



inline void _1c632c310_checkTypeAlias(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c641c730_TypeAlias>* _72739_ta) {
	if (_1c632bc9e_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_72739_ta)))), &((*((*(_72739_ta))))._field_Ident))) {
		_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*(_72739_ta))))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_72739_ta))))._field_Ident, &__jule_any_type4)}));
		_1c636a969_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1c632a396_stop(_self_.ptr());
		return;;
	};
	_1c6376d82_checkTypeAliasDecl((*(_self_))._field_s, _72739_ta, jule::Trait<_1c643d058_Lookup>(_self_, 0));
	{ jule::Slice<jule::Ptr<_1c641c730_TypeAlias>> &__jule_push_dest = (*((*(_self_))._field_table))._field_TypeAliases; __jule_push_dest.push((*(_72739_ta))); };
	if (((*((*((*(_72739_ta))))._field_Kind))._field_Kind == nullptr)) {
		_1c632a396_stop(_self_.ptr());
	};
}



inline void _1c632c5b8_checkTypeAliasDecl(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c62b0aac_TypeAliasDecl> _74342_decl) {
	jule::Ptr<_1c641c730_TypeAlias> _74417_ta = _1c62d7c05_buildTypeAlias(_74342_decl);;
	_1c632c310_checkTypeAlias(_self_, &(_74417_ta));
}



inline jule::Ptr<_1c6320754_Scope> _1c632c84e_getChild(_1c6327a58_scopeChecker* _self_) {
	return jule::new_ptr<_1c6320754_Scope>(_1c6320754_Scope{._field_Parent=(*(_self_))._field_scope, });;
}



inline void _1c632cc6c_checkChildSsc(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c62a926a_ScopeTree>* _75438_tree, jule::Ptr<_1c6320754_Scope>* _75461_s, jule::Ptr<_1c6327a58_scopeChecker>* _75477_ssc) {
	(*((*(_75477_ssc))))._field_parent=_self_;
	_1c633e377_check((*(_75477_ssc)), _75438_tree, _75461_s);
}



inline jule::Ptr<_1c6320754_Scope> _1c632d168_checkChildSc(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c62a926a_ScopeTree>* _75937_tree, jule::Ptr<_1c6327a58_scopeChecker>* _75960_ssc) {
	jule::Ptr<_1c6320754_Scope> _76017_s = _1c632c84e_getChild(_self_.ptr());;
	_1c632cc6c_checkChildSsc(_self_, _75937_tree, &(_76017_s), _75960_ssc);
	return _76017_s;;
}



inline jule::Ptr<_1c6320754_Scope> _1c632d4a9_checkChild(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c62a926a_ScopeTree>* _76535_tree) {
	jule::Ptr<_1c6327a58_scopeChecker> _76617_ssc = _1c633e60d_newChildChecker(_self_);;
	return _1c632d168_checkChildSc(_self_, _76535_tree, &(_76617_ssc));;
}



inline void _1c632d762_checkAnonScope(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c62a926a_ScopeTree> _77038_tree) {
	jule::Ptr<_1c6320754_Scope> _77117_s = _1c632d4a9_checkChild(_self_, &(_77038_tree));;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_77117_s, &__jule_any_type22)); };
}



inline void _1c632dac5_processErrorCall(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c62ca7b9_BuiltinErrorCallExprModel>* _77541_m, jule::Ptr<_1c6283a3b_Token> _77572_err) {
	if (_1c632a8b3_isDeferred(_self_)) {
		_1c636a606_pushErr((*(_self_))._field_s.ptr(), _77572_err, jule::Str("deferred scopes are not supports error calls", 44), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c6327a58_scopeChecker> _78017_root = _1c632ab49_getRoot(_self_);;
	if ((!((*((*((*(_78017_root))._field_owner))._field_Decl))._field_Exceptional))) {
		_1c636a606_pushErr((*(_self_))._field_s.ptr(), _77572_err, jule::Str("error call can only useable for exceptional functions", 53), jule::Slice<jule::Any>());
		_1c636a969_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57), jule::Slice<jule::Any>());
	};
	(*((*(_77541_m))))._field_Func=(*(_78017_root))._field_owner;
}



inline void _1c632dd7d_checkExpr(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c629d57d_Expr> _78833_expr) {
	jule::Ptr<_1c63e004e_Eval> _78917_eval = _1c6372aa3_eval((*(_self_))._field_s, jule::Trait<_1c643d058_Lookup>(_self_, 0));;
	(*(_78917_eval))._field_ignored=true;
	jule::Ptr<_1c63dd35a_Data> _79117_d = _1c640d028_evalExpr(_78917_eval, _78833_expr);;
	if (((_79117_d == nullptr) || ((*(_79117_d))._field_Model == nullptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_79117_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ac7a09ab:;
			{
				jule::Ptr<_1c62ca7b9_BuiltinErrorCallExprModel> _80021_m = (*(_79117_d))._field_Model.cast_ptr<_1c62ca7b9_BuiltinErrorCallExprModel>(&__jule_any_type23);;
				_1c632dac5_processErrorCall(_self_, &(_80021_m), (*(_78833_expr))._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_79117_d, &__jule_any_type24)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33 || _match_expr.type == &__jule_any_type34) {
			_case_begin_1ac7a146d:;
			{
				{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_79117_d, &__jule_any_type24)); };
			}
		}
		else {
			_case_begin_1ac7a110a:;
			{
				_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_78833_expr))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ac7a10a5:;
	};
}



inline jule::Ptr<_1c6320b72_If> _1c632e1be_checkIf(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c62ae9e0_If> _81931_i) {
	jule::Ptr<_1c6320754_Scope> _82017_s = _1c632d4a9_checkChild(_self_, &((*(_81931_i))._field_Scope));;
	jule::Ptr<_1c63dd35a_Data> _82217_d = _1c640d028_evalExpr(_1c6372aa3_eval((*(_self_))._field_s, jule::Trait<_1c643d058_Lookup>(_self_, 0)), (*(_81931_i))._field_Expr);;
	if ((_82217_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c64260eb_Prim> _82717_prim = _1c6420b73_Prim((*(_82217_d))._field_Kind.ptr());;
	if (((_82717_prim == nullptr) || (!(_1c64292ec_IsBool(_82717_prim.ptr()))))) {
		_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*(_81931_i))._field_Expr))._field_Token, jule::Str("if conditions must be have boolean expression", 45), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1c6320b72_If>(_1c6320b72_If{._field_Expr=(*(_82217_d))._field_Model, ._field_Scope=_82017_s});;
}



inline jule::Ptr<_1c6320e6e_Else> _1c632e510_checkElse(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c62aedb9_Else> _83933_e) {
	return jule::new_ptr<_1c6320e6e_Else>(_1c6320e6e_Else{._field_Scope=_1c632d4a9_checkChild(_self_, &((*(_83933_e))._field_Scope))});;
}



inline void _1c632e7b8_checkConditional(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c62b0370_Conditional> _84540_conditional) {
	jule::Ptr<_1c632138c_Conditional> _84617_c = jule::new_ptr<_1c632138c_Conditional>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_84617_c, &__jule_any_type35)); };
	(*(_84617_c))._field_Elifs=jule::Slice<jule::Ptr<_1c6320b72_If>>::alloc(0LL, ((*(_84540_conditional))._field_Tail.len() + 1LL));
	{ jule::Slice<jule::Ptr<_1c6320b72_If>> &__jule_push_dest = (*(_84617_c))._field_Elifs; __jule_push_dest.push(_1c632e1be_checkIf(_self_, (*(_84540_conditional))._field_Head)); };
	{
		auto expr = &((*(_84540_conditional))._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa14099c:;
		if (it != expr_end) {
			jule::Ptr<_1c62ae9e0_If> _85221_elif = *it;
			{
				{ jule::Slice<jule::Ptr<_1c6320b72_If>> &__jule_push_dest = (*(_84617_c))._field_Elifs; __jule_push_dest.push(_1c632e1be_checkIf(_self_, _85221_elif)); };
			}
			_iter_next_1aa14099c:;
			++it;
			goto _iter_begin_1aa14099c;
		}
		_iter_end_1aa14099c:;
	};
	if (((*(_84540_conditional))._field_Default != nullptr)) {
		(*(_84617_c))._field_Default=_1c632e510_checkElse(_self_, (*(_84540_conditional))._field_Default);
	};
}



inline void _1c632ec91_checkIterScopeSsc(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Uintptr _86137_it, jule::Ptr<_1c62a926a_ScopeTree> _86154_tree, jule::Ptr<_1c6320754_Scope>* _86177_s, jule::Ptr<_1c6327a58_scopeChecker> _86192_ssc) {
	(*(_86192_ssc))._field_it=_86137_it;
	_1c632cc6c_checkChildSsc(_self_, &(_86154_tree), _86177_s, &(_86192_ssc));
}



inline jule::Ptr<_1c6320754_Scope> _1c6330247_checkIterScopeSc(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Uintptr _86636_it, jule::Ptr<_1c62a926a_ScopeTree> _86653_tree, jule::Ptr<_1c6327a58_scopeChecker> _86675_ssc) {
	jule::Ptr<_1c6320754_Scope> _86717_scope = _1c632c84e_getChild(_self_.ptr());;
	_1c632ec91_checkIterScopeSsc(_self_, _86636_it, _86653_tree, &(_86717_scope), _86675_ssc);
	return _86717_scope;;
}



inline jule::Ptr<_1c6320754_Scope> _1c6330643_checkIterScope(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Uintptr _87234_it, jule::Ptr<_1c62a926a_ScopeTree>* _87252_tree) {
	jule::Ptr<_1c6327a58_scopeChecker> _87317_ssc = _1c633e60d_newChildChecker(_self_);;
	return _1c6330247_checkIterScopeSc(_self_, _87234_it, (*(_87252_tree)), _87317_ssc);;
}



inline void _1c63308eb_checkInfIter(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c62aca54_Iter>* _87737_it) {
	jule::Ptr<_1c6321689_InfIter> _87817_kind = jule::new_ptr<_1c6321689_InfIter>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_87817_kind, &__jule_any_type36)); };
	(*(_87817_kind))._field_Scope=_1c6330643_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_87817_kind)), &((*((*(_87737_it))))._field_Scope));
}



inline void _1c6330ba4_checkWhileIter(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c62aca54_Iter>* _88339_it) {
	jule::Ptr<_1c62ad37e_WhileKind> _88417_wh = (*((*(_88339_it))))._field_Kind.cast_ptr<_1c62ad37e_WhileKind>(&__jule_any_type37);;
	if ((((*(_88417_wh))._field_Expr == nullptr) && ((*(_88417_wh))._field_Next == nullptr))) {
		_1c63308eb_checkInfIter(_self_, _88339_it);
		return;;
	};
	jule::Ptr<_1c6321b40_WhileIter> _89017_kind = jule::new_ptr<_1c6321b40_WhileIter>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_89017_kind, &__jule_any_type38)); };
	(*(_89017_kind))._field_Scope=_1c6330643_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_89017_kind)), &((*((*(_88339_it))))._field_Scope));
	if (((*(_88417_wh))._field_Expr != nullptr)) {
		jule::Ptr<_1c63dd35a_Data> _89521_d = _1c640d028_evalExpr(_1c6372aa3_eval((*(_self_))._field_s, jule::Trait<_1c643d058_Lookup>(_self_, 0)), (*(_88417_wh))._field_Expr);;
		if ((_89521_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1c64260eb_Prim> _90017_prim = _1c6420b73_Prim((*(_89521_d))._field_Kind.ptr());;
		if ((_90017_prim == nullptr)) {
			_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*(_88339_it))))._field_Token, jule::Str("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1c64292ec_IsBool(_90017_prim.ptr())))) {
			_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*(_88339_it))))._field_Token, jule::Str("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		(*(_89017_kind))._field_Expr=(*(_89521_d))._field_Model;
	};
	if (_1c62ad6e2_IsWhileNext(_88417_wh.ptr())) {
		if ((!(_1c631ec5e_isValidAstStForNextSt(&((*(_88417_wh))._field_Next))))) {
			_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_88417_wh))._field_NextToken, jule::Str("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _92017_n = (*((*(_self_))._field_scope))._field_Stmts.len();;
		_1c633cead_checkNode(_self_, &((*(_88417_wh))._field_Next));
		if ((_92017_n < (*((*(_self_))._field_scope))._field_Stmts.len())) {
			jule::Any _92325_st = (*((*(_self_))._field_scope))._field_Stmts[_92017_n];;
			(*((*(_self_))._field_scope))._field_Stmts=(*((*(_self_))._field_scope))._field_Stmts.slice(0LL, _92017_n);
			if ((!(_1c6320028_isValidStForNextSt(&(_92325_st))))) {
				_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_88417_wh))._field_NextToken, jule::Str("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			};
			(*(_89017_kind))._field_Next=_92325_st;
		};
	};
}



inline void _1c63310c2_checkComptimeRangeIter(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c62aca54_Iter>* _93347_it, jule::Ptr<_1c632258b_RangeIter>* _93363_kind, jule::Ptr<_1c63dd35a_Data>* _93386_d) {
	if (((*((*(_93363_kind))))._field_KeyA != nullptr)) {
		if (((!(_1c6369e30_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1c632bc9e_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*((*(_93363_kind))))._field_KeyA))._field_Ident)))) {
			_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_93363_kind))))._field_KeyA))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_93363_kind))))._field_KeyA))._field_Ident, &__jule_any_type4)}));
			_1c636a969_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	if (((*((*(_93363_kind))))._field_KeyB != nullptr)) {
		if (((!(_1c6369e30_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1c632bc9e_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*((*(_93363_kind))))._field_KeyB))._field_Ident)))) {
			_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_93363_kind))))._field_KeyB))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_93363_kind))))._field_KeyB))._field_Ident, &__jule_any_type4)}));
			_1c636a969_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_1c62e9244_comptimeRange> _94717_comptime = _1c642401c_comptimeRange((*((*(_93386_d))))._field_Kind.ptr());;
	_1c62e9057_comptimeRangeKind_mptr_data[((*(_94717_comptime))._field_kind).type_offset]._1c62e874e_ready((*(_94717_comptime))._field_kind, &((*((*(_93363_kind))))._field_KeyA), &((*((*(_93363_kind))))._field_KeyB));
	jule::I64 _94917_i = 0LL;;
	jule::I64 _95013_errors = (*((*(_self_))._field_s))._field_errors.len();;
	for (; (_94917_i < _1c62e9057_comptimeRangeKind_mptr_data[((*(_94717_comptime))._field_kind).type_offset]._1c62e8e03_len((*(_94717_comptime))._field_kind)); (_94917_i)++) {
		{
			jule::Ptr<_1c6327a58_scopeChecker> _95221_ssc = _1c633e60d_newChildChecker(_self_);;
			jule::Ptr<_1c6320754_Scope> _95321_scope = _1c632c84e_getChild(_self_.ptr());;
			if (((*((*(_93363_kind))))._field_KeyA != nullptr)) {
				(*((*((*(_93363_kind))))._field_KeyA))._field_Scope=_95321_scope;
				{ jule::Slice<jule::Ptr<_1c6389da6_Var>> &__jule_push_dest = (*((*(_95221_ssc))._field_table))._field_Vars; __jule_push_dest.push((*((*(_93363_kind))))._field_KeyA); };
			};
			if (((*((*(_93363_kind))))._field_KeyB != nullptr)) {
				(*((*((*(_93363_kind))))._field_KeyB))._field_Scope=_95321_scope;
				{ jule::Slice<jule::Ptr<_1c6389da6_Var>> &__jule_push_dest = (*((*(_95221_ssc))._field_table))._field_Vars; __jule_push_dest.push((*((*(_93363_kind))))._field_KeyB); };
			};
			_1c62e9057_comptimeRangeKind_mptr_data[((*(_94717_comptime))._field_kind).type_offset]._1c62e8b6c_step((*(_94717_comptime))._field_kind, _94917_i, &((*((*(_93363_kind))))._field_KeyA), &((*((*(_93363_kind))))._field_KeyB));
			_1c632cc6c_checkChildSsc(_self_, &((*((*(_93347_it))))._field_Scope), &(_95321_scope), &(_95221_ssc));
			if ((_95013_errors != (*((*(_self_))._field_s))._field_errors.len())) {
				goto _iter_end_1ac340c44;
			};
			{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_95321_scope, &__jule_any_type22)); };
		}
	_iter_next_1ac340c44:;
	}
	_iter_end_1ac340c44:;;
}



inline void _1c633137a_checkRangeIter(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c62aca54_Iter>* _97239_it) {
	jule::Ptr<_1c62adc86_RangeKind> _97317_rang = (*((*(_97239_it))))._field_Kind.cast_ptr<_1c62adc86_RangeKind>(&__jule_any_type39);;
	jule::Ptr<_1c63dd35a_Data> _97517_d = _1c640cbd7_evalExpr1(_1c6372aa3_eval((*(_self_))._field_s, jule::Trait<_1c643d058_Lookup>(_self_, 0)), (*(_97317_rang))._field_Expr);;
	if ((_97517_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1c632258b_RangeIter> _98017_kind = jule::new_ptr<_1c632258b_RangeIter>(_1c632258b_RangeIter{._field_Expr=_97517_d, });;
	_1c63d3619_rangeChecker _98417_rc = _1c63d3619_rangeChecker{._field_sc=_self_, ._field_rang=_97317_rang, ._field_Kind=_98017_kind, ._field_d=_97517_d};;
	jule::Bool _99013_ok = _1c63d562c_check(&_98417_rc);;
	if ((!(_99013_ok))) {
		return;;
	};
	jule::Ptr<_1c62e9244_comptimeRange> _99517_comptimeRange = _1c642401c_comptimeRange((*(_97517_d))._field_Kind.ptr());;
	if ((_99517_comptimeRange != nullptr)) {
		_1c63310c2_checkComptimeRangeIter(_self_, _97239_it, &(_98017_kind), &(_97517_d));
		return;;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_98017_kind, &__jule_any_type40)); };
	jule::Ptr<_1c6327a58_scopeChecker> _100317_ssc = _1c633e60d_newChildChecker(_self_);;
	jule::Ptr<_1c6320754_Scope> _100417_scope = _1c632c84e_getChild(_self_.ptr());;
	if (((*(_98017_kind))._field_KeyA != nullptr)) {
		if (((!(_1c6369e30_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1c632bc9e_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*(_98017_kind))._field_KeyA))._field_Ident)))) {
			_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*(_98017_kind))._field_KeyA))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_98017_kind))._field_KeyA))._field_Ident, &__jule_any_type4)}));
			_1c636a969_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*((*(_98017_kind))._field_KeyA))._field_Scope=_100417_scope;
		{ jule::Slice<jule::Ptr<_1c6389da6_Var>> &__jule_push_dest = (*((*(_100317_ssc))._field_table))._field_Vars; __jule_push_dest.push((*(_98017_kind))._field_KeyA); };
	};
	if (((*(_98017_kind))._field_KeyB != nullptr)) {
		if (((!(_1c6369e30_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1c632bc9e_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*(_98017_kind))._field_KeyB))._field_Ident)))) {
			_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*(_98017_kind))._field_KeyB))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_98017_kind))._field_KeyB))._field_Ident, &__jule_any_type4)}));
			_1c636a969_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*((*(_98017_kind))._field_KeyB))._field_Scope=_100417_scope;
		{ jule::Slice<jule::Ptr<_1c6389da6_Var>> &__jule_push_dest = (*((*(_100317_ssc))._field_table))._field_Vars; __jule_push_dest.push((*(_98017_kind))._field_KeyB); };
	};
	_1c632ec91_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_98017_kind)), (*((*(_97239_it))))._field_Scope, &(_100417_scope), _100317_ssc);
	(*(_98017_kind))._field_Scope=_100417_scope;
}



inline void _1c6331633_checkIter(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c62aca54_Iter> _102833_it) {
	if (_1c62acdb7_IsInf(_102833_it.ptr())) {
		_1c63308eb_checkInfIter(_self_, &(_102833_it));
		return;;
	};
	{
		auto &_match_expr{ (*(_102833_it))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1ac357321:;
			{
				_1c6330ba4_checkWhileIter(_self_, &(_102833_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1ac358036:;
			{
				_1c633137a_checkRangeIter(_self_, &(_102833_it));
			}
		}
		else {
			_case_begin_1ac357aa2:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1ac357a4c:;
	};
}



inline jule::Bool _1c6331974_checkValidContLabel(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Uintptr _104439_it) {
	jule::Ptr<_1c6327a58_scopeChecker> _104517_scope = _self_;;
	_julec_label_1ac359499:;
	if (((*(_104517_scope))._field_it == _104439_it)) {
		return true;;
	};
	if (((*(_104517_scope))._field_parent != nullptr)) {
		_104517_scope=(*(_104517_scope))._field_parent;
		goto _julec_label_1ac359499;
	};
	return false;;
}



inline jule::Bool _1c6331cb5_checkValidBreakLabel(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Uintptr _106040_ptr) {
	jule::Ptr<_1c6327a58_scopeChecker> _106117_scope = _self_;;
	_julec_label_1ac35b556:;
	if (((*(_106117_scope))._field_it == _106040_ptr)) {
		return true;;
	};
	if (((*(_106117_scope))._field_cse != 0LLU)) {
		jule::Uintptr _106917_mtch = static_cast<jule::Uintptr>((*(((_1c63254c3_Case*)((*(_106117_scope))._field_cse))))._field_Owner);;
		if ((_106917_mtch == _106040_ptr)) {
			return true;;
		};
	};
	if (((*(_106117_scope))._field_parent != nullptr)) {
		_106117_scope=(*(_106117_scope))._field_parent;
		goto _julec_label_1ac35b556;
	};
	return false;;
}



inline jule::Ptr<_1c6322921_ContSt> _1c6332106_checkContValidScope(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c62ae539_ContSt> _108339_c) {
	if (_1c632a8b3_isDeferred(_self_)) {
		_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_108339_c))._field_Token, jule::Str("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_108339_c))._field_Label != nullptr)) {
		return jule::new_ptr<_1c6322921_ContSt>();;
	};
	jule::Ptr<_1c6327a58_scopeChecker> _109317_scope = _self_;;
	_julec_label_1ac35e34a:;
	{
		
		if (((((*(_109317_scope))._field_it == 0LLU) && ((*(_109317_scope))._field_parent != nullptr)) && ((*(_109317_scope))._field_owner == nullptr))) {
			_case_begin_1ac36114e:;
			{
				_109317_scope=(*(_109317_scope))._field_parent;
				goto _julec_label_1ac35e34a;
			}
		}
		else if (((*(_109317_scope))._field_it != 0LLU)) {
			_case_begin_1ac3611c6:;
			{
				return jule::new_ptr<_1c6322921_ContSt>(_1c6322921_ContSt{._field_It=(*(_109317_scope))._field_it});;
			}
		}
		_match_end_1ac361094:;
	};
	_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_108339_c))._field_Token, jule::Str("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1c63323ae_checkCont(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c62ae539_ContSt> _110729_c) {
	jule::Ptr<_1c6322921_ContSt> _110817_cont = _1c6332106_checkContValidScope(_self_, _110729_c);;
	if ((_110817_cont == nullptr)) {
		return;;
	};
	if (((*(_110729_c))._field_Label != nullptr)) {
		jule::Ptr<_1c63265b2_scopeLabel> _111421_label = _1c631cc6d_findLabelParent(&((*((*(_110729_c))._field_Label))._field_Kind), (*(_self_))._field_parent);;
		if ((_111421_label == nullptr)) {
			_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_110729_c))._field_Label, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*((*(_110729_c))._field_Label))._field_Kind, &__jule_any_type4)}));
			return;;
		};
		(*(_111421_label))._field_used=true;
		if ((((*(_111421_label))._field_pos + 1LL) >= (*((*((*(_111421_label))._field_scope))._field_scope))._field_Stmts.len())) {
			_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_110729_c))._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_110729_c))._field_Label))._field_Kind, &__jule_any_type4)}));
			return;;
		};
		jule::I64 _112717_i = ((*(_111421_label))._field_pos + 1LL);;
		if ((_112717_i >= (*((*((*(_111421_label))._field_scope))._field_scope))._field_Stmts.len())) {
			_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_110729_c))._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>());
		} else {
			jule::Any _113125_st = (*((*((*(_111421_label))._field_scope))._field_scope))._field_Stmts[_112717_i];;
			{
				auto &_match_expr{ _113125_st };
				
				if (_match_expr.type == &__jule_any_type36) {
					_case_begin_1ac36bcb4:;
					{
						(*(_110817_cont))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_113125_st.cast_ptr<_1c6321689_InfIter>(&__jule_any_type36)));
					}
				}
				else if (_match_expr.type == &__jule_any_type40) {
					_case_begin_1ac36b9b7:;
					{
						(*(_110817_cont))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_113125_st.cast_ptr<_1c632258b_RangeIter>(&__jule_any_type40)));
					}
				}
				else if (_match_expr.type == &__jule_any_type38) {
					_case_begin_1ac36ba2d:;
					{
						(*(_110817_cont))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_113125_st.cast_ptr<_1c6321b40_WhileIter>(&__jule_any_type38)));
					}
				}
				else {
					_case_begin_1ac36b951:;
					{
						_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_110729_c))._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_110729_c))._field_Label))._field_Kind, &__jule_any_type4)}));
					}
				}
				_match_end_1ac36b8eb:;
			};
		};
	};
	if (((*(_110817_cont))._field_It != 0LLU)) {
		if ((!(_1c6331974_checkValidContLabel(_self_, (*(_110817_cont))._field_It)))) {
			_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_110729_c))._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_110729_c))._field_Label))._field_Kind, &__jule_any_type4)}));
		};
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_110817_cont, &__jule_any_type41)); };
}



inline void _1c6332667_checkLabel(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c62a682d_LabelSt> _115434_l) {
	if ((_1c632b221_findLabel(_self_.ptr(), &((*(_115434_l))._field_Ident)) != nullptr)) {
		_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_115434_l))._field_Token, jule::Str("label is already exist in this identifier: @", 44), jule::Slice<jule::Any>::make({jule::Any((*(_115434_l))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1c63230e7_Label> _116017_label = jule::new_ptr<_1c63230e7_Label>(_1c63230e7_Label{._field_Ident=(*(_115434_l))._field_Ident});;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_116017_label, &__jule_any_type21)); };
	{ jule::Slice<jule::Ptr<_1c63265b2_scopeLabel>> &__jule_push_dest = (*((*(_self_))._field_labels)); __jule_push_dest.push(jule::new_ptr<_1c63265b2_scopeLabel>(_1c63265b2_scopeLabel{._field_token=(*(_115434_l))._field_Token, ._field_label=_116017_label, ._field_pos=static_cast<jule::I64>(((*((*(_self_))._field_scope))._field_Stmts.len() - 1LL)), ._field_scope=_self_, })); };
}



inline void _1c6332920_pushGoto(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c62a6c07_GotoSt> _117332_gt) {
	jule::Ptr<_1c63234c1_GotoSt> _117417_st = jule::new_ptr<_1c63234c1_GotoSt>(_1c63234c1_GotoSt{._field_Ident=(*((*(_117332_gt))._field_Label))._field_Kind, });;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_117417_st, &__jule_any_type42)); };
	{ jule::Slice<jule::Ptr<_1c6326b45_scopeGoto>> &__jule_push_dest = (*((*(_self_))._field_gotos)); __jule_push_dest.push(jule::new_ptr<_1c6326b45_scopeGoto>(_1c6326b45_scopeGoto{._field_st=_117417_st, ._field_gt=_117332_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>(((*((*(_self_))._field_scope))._field_Stmts.len() - 1LL))})); };
}



inline void _1c6332bc8_checkPostfix(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c62a7be7_AssignSt> _118736_a) {
	if (((*(_118736_a))._field_Left.len() > 1LL)) {
		_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_118736_a))._field_Setter, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c629d57d_Expr> _119317_expr = (*((*(_118736_a))._field_Left[0LL]))._field_Expr;;
	jule::Ptr<_1c63dd35a_Data> _119417_d = _1c640d028_evalExpr(_1c6372aa3_eval((*(_self_))._field_s, jule::Trait<_1c643d058_Lookup>(_self_, 0)), _119317_expr);;
	if ((_119417_d == nullptr)) {
		return;;
	};
	_1c631e995_checkAssign(&((*(_self_))._field_s), &(_119417_d), nullptr, (*(_118736_a))._field_Setter);
	if ((_1c6421190_Ptr((*(_119417_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c642d3de_Ptr> _120221_ptr = _1c6421190_Ptr((*(_119417_d))._field_Kind.ptr());;
		if (_1c642de28_IsUnsafe(_120221_ptr.ptr())) {
			_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_118736_a))._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_118736_a))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1c641d8da_Str((*(_119417_d))._field_Kind.ptr()), &__jule_any_type4)}));
			return;;
		};
	} else {
		if (((_1c6420b73_Prim((*(_119417_d))._field_Kind.ptr()) == nullptr) || (!(_1dc25ee96_IsNum((*(_1c6420b73_Prim((*(_119417_d))._field_Kind.ptr())))._field_Kind))))) {
			_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_118736_a))._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_118736_a))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1c641d8da_Str((*(_119417_d))._field_Kind.ptr()), &__jule_any_type4)}));
			return;;
		};
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1c632389a_Postfix>(_1c632389a_Postfix{._field_Expr=(*(_119417_d))._field_Model, ._field_Op=(*((*(_118736_a))._field_Setter))._field_Kind}), &__jule_any_type43)); };
}



inline jule::Bool _1c6333019_isNewAssignIdent(_1c6327a58_scopeChecker* _self_, jule::Str _122035_ident) {
	if ((_1c628649a_IsIgnoreIdent(_122035_ident) || (_122035_ident).empty())) {
		return false;;
	};
	return (_1c63db19e_defByIdent((*(_self_))._field_table.ptr(), &(_122035_ident), false) == nullptr);;
}



inline void _1c63332c2_removeInteriorMutRisk(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c63dd35a_Data>* _123346_d) {
	jule::Ptr<_1c62bcab9_StructIns> _123413_s = _1c64221e6_Struct((*((*(_123346_d))))._field_Kind.ptr());;
	if ((_123413_s == nullptr)) {
		return;;
	};
	jule::Ptr<_1c6327a58_scopeChecker> _123813_root = _1c632add0_getHardRoot(_self_);;
	if (((*((*(_123813_root))._field_owner))._field_Owner != _123413_s)) {
		return;;
	};
	(*((*(_123346_d))))._field_Mutable=true;
}



inline jule::Bool _1c6333778_checkStructureAssignOp(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c62bcab9_StructIns>* _124747_s, jule::Ptr<_1c62a7be7_AssignSt>* _124767_a, jule::Ptr<_1c63dd35a_Data>* _124786_r) {
	jule::Ptr<_1c62d2b01_FnIns> _125017_overload = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_124767_a))))._field_Setter))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1ac3871ec:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1ac388dbe:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1ac388e35:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1ac38783a:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1ac3878a1:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1ac387917:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1ac38797d:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1ac389023:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1ac389089:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1ac389100:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1ac3877c4:;
			{
				_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*(_124767_a))))._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_124767_a))))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1c62bce3d_Str((*(_124747_s)).ptr()), &__jule_any_type4)}));
				return false;;
			}
		}
		_match_end_1ac38776e:;
	};
	if ((_125017_overload == nullptr)) {
		_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*(_124767_a))))._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_124767_a))))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1c62bce3d_Str((*(_124747_s)).ptr()), &__jule_any_type4)}));
		return false;;
	};
	jule::Ptr<_1c62d1b55_ParamIns> _128217_p = (*(_125017_overload))._field_Params[1LL];;
	return _1c6373114_checkAssignType((*(_self_))._field_s, (*((*(_128217_p))._field_Decl))._field_Reference, &((*(_128217_p))._field_Kind), _124786_r, (*((*(_124767_a))))._field_Setter);;
}



inline void _1c633888d_checkSingleAssign(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c62a7be7_AssignSt>* _128642_a) {
	jule::Ptr<_1c63dd35a_Data> _128717_l = nullptr;;
	if ((!(_1c628649a_IsIgnoreIdent((*((*((*(_128642_a))))._field_Left[0LL]))._field_Ident)))) {
		jule::Ptr<_1c629d57d_Expr> _129021_expr = (*((*((*(_128642_a))))._field_Left[0LL]))._field_Expr;;
		_128717_l=_1c640d028_evalExpr(_1c6372aa3_eval((*(_self_))._field_s, jule::Trait<_1c643d058_Lookup>(_self_, 0)), _129021_expr);
		if ((_128717_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1c63e004e_Eval> _129717_eval = nullptr;;
	if ((_128717_l != nullptr)) {
		_129717_eval=_1c6372762_evalp((*(_self_))._field_s, jule::Trait<_1c643d058_Lookup>(_self_, 0), (*(_128717_l))._field_Kind);
	} else {
		_129717_eval=_1c6372aa3_eval((*(_self_))._field_s, jule::Trait<_1c643d058_Lookup>(_self_, 0));
	};
	(*(_129717_eval))._field_unsafety=_1c6329e12_isUnsafe(_self_);
	jule::Ptr<_1c63dd35a_Data> _130417_r = _1c640d028_evalExpr(_129717_eval, (*((*(_128642_a))))._field_Right);;
	if ((_130417_r == nullptr)) {
		return;;
	};
	_1c63332c2_removeInteriorMutRisk(_self_, &(_130417_r));
	if ((_128717_l == nullptr)) {
		if (_1c641e886_Void((*(_130417_r))._field_Kind.ptr())) {
			_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_128642_a))))._field_Right))._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_130417_r, &__jule_any_type24)); };
		return;;
	};
	if ((!(_1c631e995_checkAssign(&((*(_self_))._field_s), &(_128717_l), _130417_r, (*((*(_128642_a))))._field_Setter)))) {
		return;;
	};
	if ((_1c6422999_Tup((*(_130417_r))._field_Kind.ptr()) != nullptr)) {
		_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*(_128642_a))))._field_Setter, jule::Str("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c62c19ad_OperandExprModel> _132817_lm = jule::new_ptr<_1c62c19ad_OperandExprModel>(_1c62c19ad_OperandExprModel{._field_Kind=(*(_128717_l))._field_Kind, ._field_Model=(*(_128717_l))._field_Model});;
	jule::Ptr<_1c62c19ad_OperandExprModel> _133217_rm = jule::new_ptr<_1c62c19ad_OperandExprModel>(_1c62c19ad_OperandExprModel{._field_Kind=(*(_130417_r))._field_Kind, ._field_Model=(*(_130417_r))._field_Model});;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1c6323d51_Assign>(_1c6323d51_Assign{._field_L=_132817_lm, ._field_R=_133217_rm, ._field_Op=(*((*(_128642_a))))._field_Setter}), &__jule_any_type44)); };
	if (((*((*((*(_128642_a))))._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
		jule::Ptr<_1c62bcab9_StructIns> _133921_strct = _1c64221e6_Struct((*(_128717_l))._field_Kind.ptr());;
		if ((_133921_strct != nullptr)) {
			_1c6333778_checkStructureAssignOp(_self_, &(_133921_strct), _128642_a, &(_130417_r));
			return;;
		};
		jule::U64 _134417_id = (*((*((*(_128642_a))))._field_Setter))._field_Id;;
		(*((*((*(_128642_a))))._field_Setter))._field_Id=_1c633e982_removeEqFromOp((*((*((*(_128642_a))))._field_Setter))._field_Id);
		_1c641047b_binaryEval _134621_solver = static__1c6410da5_new(_129717_eval, (*((*(_128642_a))))._field_Setter);;
		_130417_r=_1c64161b8_solveExplicit(&_134621_solver, &(_128717_l), &(_130417_r));
		(*((*((*(_128642_a))))._field_Setter))._field_Id=_134417_id;
		if ((_130417_r == nullptr)) {
			return;;
		};
		return;;
	};
	_1c63c6e26_assignTypeChecker _135517_checker = _1c63c6e26_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_128717_l))._field_Kind, ._field_d=_130417_r, ._field_errorToken=(*((*(_128642_a))))._field_Setter};;
	if (_1c63c818b_check(&_135517_checker)) {
		(*(_133217_rm))._field_Model=(*(_130417_r))._field_Model;
		(*(_132817_lm))._field_Model=(*(_128717_l))._field_Model;
	};
}



inline void _1c6338e21_processEndPartOfMultiAssign(_1c6327a58_scopeChecker* _self_, jule::Ptr<_1c632422a_MultiAssign>* _136751_st, jule::Ptr<_1c62a7be7_AssignSt>* _136814_a, jule::Ptr<_1c62a7664_AssignLeft>* _136833_lexpr, jule::Ptr<_1c63dd35a_Data>* _136858_l, jule::Ptr<_1c63dd35a_Data>* _136873_r) {
	if (((!((*((*(_136833_lexpr))))._field_Reference)) && _1c628649a_IsIgnoreIdent((*((*(_136833_lexpr))))._field_Ident))) {
		if (_1c641e886_Void((*((*(_136873_r))))._field_Kind.ptr())) {
			_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_136814_a))))._field_Right))._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_1c63dd35a_Data>> &__jule_push_dest = (*((*(_136751_st))))._field_L; __jule_push_dest.push(nullptr); };
		return;;
	};
	if (((*((*(_136814_a))))._field_Declarative && ((*((*(_136833_lexpr))))._field_Reference || _1c6333019_isNewAssignIdent(_self_, (*((*(_136833_lexpr))))._field_Ident)))) {
		if (_1c632bc9e_isDuplicatedIdent(_self_, 0LLU, &((*((*(_136833_lexpr))))._field_Ident))) {
			_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*(_136833_lexpr))))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_136833_lexpr))))._field_Ident, &__jule_any_type4)}));
			_1c636a969_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
			_1c632a396_stop(_self_);
			return;;
		};
		if (_1c628649a_IsIgnoreIdent((*((*(_136833_lexpr))))._field_Ident)) {
			_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*(_136833_lexpr))))._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1c6389da6_Var> _138921_v = jule::new_ptr<_1c6389da6_Var>(_1c6389da6_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*((*(_136833_lexpr))))._field_Token, ._field_Ident=(*((*(_136833_lexpr))))._field_Ident, ._field_Mutable=(*((*(_136833_lexpr))))._field_Mutable, ._field_Reference=(*((*(_136833_lexpr))))._field_Reference, ._field_Value=jule::new_ptr<_1c63de49e_Value>(_1c63de49e_Value{._field_Expr=(*((*(_136814_a))))._field_Right, ._field_Data=(*(_136873_r))}), });;
		_1c6381232_checkVarValue((*(_self_))._field_s, &(_138921_v));
		(*(_138921_v))._field_Value=nullptr;
		{ jule::Slice<jule::Ptr<_1c63dd35a_Data>> &__jule_push_dest = (*((*(_136751_st))))._field_L; __jule_push_dest.push(jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=(*((*(_138921_v))._field_Kind))._field_Kind, ._field_Mutable=(*(_138921_v))._field_Mutable, ._field_Reference=(*(_138921_v))._field_Reference, ._field_Lvalue=(!((*(_138921_v))._field_Constant)), ._field_Model=jule::Any(_138921_v, &__jule_any_type8), })); };
		{ jule::Slice<jule::Ptr<_1c6389da6_Var>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Vars; __jule_push_dest.push(_138921_v); };
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_138921_v, &__jule_any_type8)); };
		return;;
	};
	if (((*((*(_136833_lexpr))))._field_Mutable || (*((*(_136833_lexpr))))._field_Reference)) {
		_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*(_136833_lexpr))))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_136833_lexpr))))._field_Ident, &__jule_any_type4)}));
		_1c636a969_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if ((!(_1c631e995_checkAssign(&((*(_self_))._field_s), _136858_l, (*(_136873_r)), (*((*(_136833_lexpr))))._field_Token)))) {
		return;;
	};
	;
	_1c6376623_checkValidityForInitExpr((*(_self_))._field_s, (*((*(_136858_l))))._field_Mutable, false, &((*((*(_136858_l))))._field_Kind), _136873_r, &((*((*(_136814_a))))._field_Setter));
	_1c63c6e26_assignTypeChecker _143217_checker = _1c63c6e26_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*((*(_136858_l))))._field_Kind, ._field_d=(*(_136873_r)), ._field_errorToken=(*((*(_136814_a))))._field_Setter};;
	_1c63c818b_check(&_143217_checker);
	{ jule::Slice<jule::Ptr<_1c63dd35a_Data>> &__jule_push_dest = (*((*(_136751_st))))._field_L; __jule_push_dest.push((*(_136858_l))); };
}



inline void _1c63391c9_checkMultiAssign(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c62a7be7_AssignSt>* _144241_a) {
	jule::Ptr<_1c63dd35a_Data> _144317_rd = _1c640d028_evalExpr(_1c6372aa3_eval((*(_self_))._field_s, jule::Trait<_1c643d058_Lookup>(_self_, 0)), (*((*(_144241_a))))._field_Right);;
	if ((_144317_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1c63dd35a_Data>> _144717_right = _1c631dae8_getDatasFromTupleData(&(_144317_rd));;
	if ((_144717_right.len() == 1LL)) {
		{
			auto &_match_expr{ (*(_144717_right[0LL]))._field_Model };
			
			if (_match_expr.type == &__jule_any_type45) {
				_case_begin_1ac3b5868:;
				{
					jule::Ptr<_1c62c4818_IndexingExprModel> _145125_iem = (*(_144717_right[0LL]))._field_Model.cast_ptr<_1c62c4818_IndexingExprModel>(&__jule_any_type45);;
					if ((_1c6422713_Map((*((*(_145125_iem))._field_Expr))._field_Kind.ptr()) != nullptr)) {
						_144717_right=jule::Slice<jule::Ptr<_1c63dd35a_Data>>::make({jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=(*(_1c6422713_Map((*((*(_145125_iem))._field_Expr))._field_Kind.ptr())))._field_Val, }),jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650961e_primBool, })});
					};
				}
			}
			_match_end_1ac3b57be:;
		};
	};
	{
		
		if (((*((*(_144241_a))))._field_Left.len() > _144717_right.len())) {
			_case_begin_1ac3b5cca:;
			{
				_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*(_144241_a))))._field_Setter, jule::Str("overflow multi assignment identifers", 36), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*((*(_144241_a))))._field_Left.len() < _144717_right.len())) {
			_case_begin_1ac3b512b:;
			{
				_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*(_144241_a))))._field_Setter, jule::Str("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1ac3b478a:;
	};
	jule::Ptr<_1c632422a_MultiAssign> _147017_st = jule::new_ptr<_1c632422a_MultiAssign>(_1c632422a_MultiAssign{._field_R=(*(_144317_rd))._field_Model});;
	{
		auto expr = &((*((*(_144241_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac3ba4b6:;
		if (it != expr_end) {
			jule::I64 _147313_i = it - expr->begin();
			{
				jule::Ptr<_1c62a7664_AssignLeft> _147421_lexpr = (*((*(_144241_a))))._field_Left[_147313_i];;
				jule::Ptr<_1c63dd35a_Data> _147521_l = nullptr;;
				if (((!(_1c628649a_IsIgnoreIdent((*(_147421_lexpr))._field_Ident))) && ((!((*((*(_144241_a))))._field_Declarative)) || (!(_1c6333019_isNewAssignIdent(_self_.ptr(), (*(_147421_lexpr))._field_Ident)))))) {
					_147521_l=_1c640d028_evalExpr(_1c6372aa3_eval((*(_self_))._field_s, jule::Trait<_1c643d058_Lookup>(_self_, 0)), (*(_147421_lexpr))._field_Expr);
					if ((_147521_l == nullptr)) {
						goto _iter_next_1ac3ba4b6;
					};
				};
				jule::Ptr<_1c63dd35a_Data> _148321_r = _144717_right[_147313_i];;
				_1c63332c2_removeInteriorMutRisk(_self_, &(_148321_r));
				_1c6338e21_processEndPartOfMultiAssign(_self_.ptr(), &(_147017_st), _144241_a, &(_147421_lexpr), &(_147521_l), &(_148321_r));
			}
			_iter_next_1ac3ba4b6:;
			++it;
			_147313_i++;
			goto _iter_begin_1ac3ba4b6;
		}
		_iter_end_1ac3ba4b6:;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_147017_st, &__jule_any_type46)); };
}



inline void _1c6339482_singleDeclAssign(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c62a7be7_AssignSt>* _149041_a) {
	jule::Ptr<_1c62a7664_AssignLeft> _149117_lexpr = (*((*(_149041_a))))._field_Left[0LL];;
	if (_1c632bc9e_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*(_149117_lexpr))._field_Ident))) {
		_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_149117_lexpr))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_149117_lexpr))._field_Ident, &__jule_any_type4)}));
		_1c636a969_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1c632a396_stop(_self_.ptr());
		return;;
	};
	if (_1c628649a_IsIgnoreIdent((*(_149117_lexpr))._field_Ident)) {
		_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_149117_lexpr))._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c63dd35a_Data> _150217_r = _1c640d028_evalExpr(_1c6372aa3_eval((*(_self_))._field_s, jule::Trait<_1c643d058_Lookup>(_self_, 0)), (*((*(_149041_a))))._field_Right);;
	if ((_150217_r == nullptr)) {
		return;;
	};
	_1c63332c2_removeInteriorMutRisk(_self_, &(_150217_r));
	jule::Ptr<_1c6389da6_Var> _151017_v = jule::new_ptr<_1c6389da6_Var>(_1c6389da6_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*(_149117_lexpr))._field_Token, ._field_Ident=(*(_149117_lexpr))._field_Ident, ._field_Mutable=(*(_149117_lexpr))._field_Mutable, ._field_Reference=(*(_149117_lexpr))._field_Reference, ._field_Value=jule::new_ptr<_1c63de49e_Value>(_1c63de49e_Value{._field_Expr=(*((*(_149041_a))))._field_Right, ._field_Data=_150217_r}), });;
	_1c6381232_checkVarValue((*(_self_))._field_s, &(_151017_v));
	{ jule::Slice<jule::Ptr<_1c6389da6_Var>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Vars; __jule_push_dest.push(_151017_v); };
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_151017_v, &__jule_any_type8)); };
}



inline void _1c633973a_checkAssignSt(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c62a7be7_AssignSt> _152637_a) {
	{
		
		if (_1c62886cd_IsPostfixOp((*((*(_152637_a))._field_Setter))._field_Id)) {
			_case_begin_1ac3c921c:;
			{
				_1c6332bc8_checkPostfix(_self_, _152637_a);
			}
		}
		else if (((*(_152637_a))._field_Left.len() == 1LL)) {
			_case_begin_1ac3c7d86:;
			{
				if ((*(_152637_a))._field_Declarative) {
					_1c6339482_singleDeclAssign(_self_, &(_152637_a));
				} else {
					_1c633888d_checkSingleAssign(_self_, &(_152637_a));
				};
			}
		}
		else {
			_case_begin_1ac3c7d20:;
			{
				_1c63391c9_checkMultiAssign(_self_, &(_152637_a));
			}
		}
		_match_end_1ac3c7c54:;
	};
}



inline jule::Ptr<_1c6320754_Scope> _1c6339b36_checkCaseScope(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c63254c3_Case>* _154135_c, jule::Ptr<_1c62a926a_ScopeTree>* _154150_tree) {
	jule::Ptr<_1c6327a58_scopeChecker> _154217_ssc = _1c633e60d_newChildChecker(_self_);;
	(*(_154217_ssc))._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_154135_c))));
	return _1c632d168_checkChildSc(_self_, _154150_tree, &(_154217_ssc));;
}



inline jule::Ptr<_1c63254c3_Case> _1c633a197_checkCase(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c632488a_Match> _154733_m, jule::I64 _154744_i, jule::Ptr<_1c62b1063_Case> _154756_c, jule::Ptr<_1c63dd35a_Data> _154775_expr) {
	jule::Ptr<_1c63254c3_Case> _154817_case = (*(_154733_m))._field_Cases[_154744_i];;
	(*(_154817_case))._field_Exprs=jule::Slice<jule::Ptr<_1c63dd35a_Data>>::alloc(0LL, (*(_154756_c))._field_Exprs.len());
	jule::Bool _155017_constMatched = false;;
	jule::Ptr<_1c63e004e_Eval> _155117_eval = _1c6372aa3_eval((*(_self_))._field_s, jule::Trait<_1c643d058_Lookup>(_self_, 0));;
	{
		auto expr = &((*(_154756_c))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac3d00ad:;
		if (it != expr_end) {
			jule::Ptr<_1c629d57d_Expr> _155221_e = *it;
			{
				jule::Ptr<_1c63dd35a_Data> _155321_d = _1c640c214_evalExprKind(_155117_eval, (*(_155221_e))._field_Kind);;
				if ((_155321_d == nullptr)) {
					goto _iter_next_1ac3d00ad;
				};
				if ((*(_154733_m))._field_TypeMatch) {
					{ jule::Slice<jule::Ptr<_1c63dd35a_Data>> &__jule_push_dest = (*(_154817_case))._field_Exprs; __jule_push_dest.push(_155321_d); };
					if ((_1c631d82e_countMatchType(&(_154733_m), &((*(_155321_d))._field_Kind)) > 1LL)) {
						_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_155221_e))._field_Token, jule::Str("duplicated pattern: type @ is already matched", 45), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_155321_d))._field_Kind.ptr()), &__jule_any_type4)}));
					};
					if ((*((*(_154775_expr))._field_Kind))._field_Generic) {
						_155017_constMatched=(_155017_constMatched || _1c641dc2b_Equal((*(_154775_expr))._field_Kind, (*(_155321_d))._field_Kind));
					} else {
						if ((_1c64216ac_TypeEnum((*(_154775_expr))._field_Kind.ptr()) != nullptr)) {
							_1c63735ba_checkTypeCompatibility((*(_self_))._field_s, &((*(_154775_expr))._field_Kind), &((*(_155321_d))._field_Kind), &((*(_155221_e))._field_Token));
						} else {
							jule::Ptr<_1c62e2e96_Trait> _156829_trt = _1c642247c_Trait((*(_154775_expr))._field_Kind.ptr());;
							if ((_156829_trt != nullptr)) {
								_1c63735ba_checkTypeCompatibility((*(_self_))._field_s, &((*(_154775_expr))._field_Kind), &((*(_155321_d))._field_Kind), &((*(_155221_e))._field_Token));
							};
						};
					};
					goto _iter_next_1ac3d00ad;
				} else if ((*(_154733_m))._field_Comptime) {
					if ((!(_1c63ddc2e_IsConst(_155321_d.ptr())))) {
						_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_155221_e))._field_Token, jule::Str("const-matching requires constant expression", 43), jule::Slice<jule::Any>());
					} else {
						_155017_constMatched=(_155017_constMatched || _1dc262482_ReadBool((*(_155321_d))._field_Constant.ptr()));
					};
				};
				if ((*(_155321_d))._field_Decl) {
					_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_155221_e))._field_Token, jule::Str("expecting expression, found type declaration", 44), jule::Slice<jule::Any>());
					_1c636a969_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49), jule::Slice<jule::Any>());
					goto _iter_next_1ac3d00ad;
				};
				{ jule::Slice<jule::Ptr<_1c63dd35a_Data>> &__jule_push_dest = (*(_154817_case))._field_Exprs; __jule_push_dest.push(_155321_d); };
				_1c63c6e26_assignTypeChecker _159121_checker = _1c63c6e26_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_154775_expr))._field_Kind, ._field_d=_155321_d, ._field_errorToken=(*(_155221_e))._field_Token};;
				_1c63c818b_check(&_159121_checker);
			}
			_iter_next_1ac3d00ad:;
			++it;
			goto _iter_begin_1ac3d00ad;
		}
		_iter_end_1ac3d00ad:;
	};
	if (((!((*(_154733_m))._field_Comptime)) || _155017_constMatched)) {
		(*(_154817_case))._field_Scope=_1c6339b36_checkCaseScope(_self_, &(_154817_case), &((*(_154756_c))._field_Scope));
	};
	return _154817_case;;
}



inline void _1c633a5b5_checkCases(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c62b17a0_MatchCase>* _160535_m, jule::Ptr<_1c632488a_Match> _160554_rm, jule::Ptr<_1c63dd35a_Data> _160570_expr) {
	(*(_160554_rm))._field_Cases=jule::Slice<jule::Ptr<_1c63254c3_Case>>::alloc(0LL, (*((*(_160535_m))))._field_Cases.len());
	{
		auto expr = &((*((*(_160535_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac3dd2b9:;
		if (it != expr_end) {
			jule::I64 _160713_i = it - expr->begin();
			{
				jule::Ptr<_1c63254c3_Case> _160821_case = jule::new_ptr<_1c63254c3_Case>(_1c63254c3_Case{._field_Owner=_160554_rm, });;
				if ((_160713_i > 0LL)) {
					(*((*(_160554_rm))._field_Cases[(_160713_i - 1LL)]))._field_Next=_160821_case;
				};
				{ jule::Slice<jule::Ptr<_1c63254c3_Case>> &__jule_push_dest = (*(_160554_rm))._field_Cases; __jule_push_dest.push(_160821_case); };
			}
			_iter_next_1ac3dd2b9:;
			++it;
			_160713_i++;
			goto _iter_begin_1ac3dd2b9;
		}
		_iter_end_1ac3dd2b9:;
	};
	if ((((*(_160554_rm))._field_Default != nullptr) && ((*((*(_160535_m))))._field_Cases.len() > 0LL))) {
		(*((*(_160554_rm))._field_Cases[((*(_160554_rm))._field_Cases.len() - 1LL)]))._field_Next=(*(_160554_rm))._field_Default;
	};
	{
		auto expr = &((*((*(_160535_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac3ddbc1:;
		if (it != expr_end) {
			jule::I64 _162114_i = it - expr->begin();
			jule::Ptr<_1c62b1063_Case> _162121_c = *it;
			{
				_1c633a197_checkCase(_self_, _160554_rm, _162114_i, _162121_c, _160570_expr);
			}
			_iter_next_1ac3ddbc1:;
			++it;
			_162114_i++;
			goto _iter_begin_1ac3ddbc1;
		}
		_iter_end_1ac3ddbc1:;
	};
}



inline jule::Ptr<_1c63254c3_Case> _1c633a9b1_checkDefault(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c632488a_Match> _162636_m, jule::Ptr<_1c62aedb9_Else> _162651_d) {
	jule::Ptr<_1c63254c3_Case> _162717_def = jule::new_ptr<_1c63254c3_Case>(_1c63254c3_Case{._field_Owner=_162636_m, });;
	(*(_162717_def))._field_Scope=_1c6339b36_checkCaseScope(_self_, &(_162717_def), &((*(_162651_d))._field_Scope));
	return _162717_def;;
}



inline void _1c633ad24_checkComptimePanic(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c6283a3b_Token> _163438_callToken, jule::Ptr<_1c6320754_Scope>* _163458_s) {
	if (((*((*(_163458_s))))._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _163813_stmt = (*((*(_163458_s))))._field_Stmts[0LL];;
	{
		auto &_match_expr{ _163813_stmt };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1ac3e5634:;
			{
				jule::Ptr<_1c63dd35a_Data> _164117_d = _163813_stmt.cast_ptr<_1c63dd35a_Data>(&__jule_any_type24);;
				{
					auto &_match_expr{ (*(_164117_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type29) {
						_case_begin_1ac3e659c:;
						{
							jule::Ptr<_1c62c870c_BuiltinPanicCallExprModel> _164421_m = (*(_164117_d))._field_Model.cast_ptr<_1c62c870c_BuiltinPanicCallExprModel>(&__jule_any_type29);;
							{
								auto &_match_expr{ (*(_164421_m))._field_Expr };
								
								if (_match_expr.type == &__jule_any_type19) {
									_case_begin_1ac3e7724:;
									{
										jule::Ptr<_1dc260590_Const> _164725_c = (*(_164421_m))._field_Expr.cast_ptr<_1dc260590_Const>(&__jule_any_type19);;
										if (_1dc264d14_IsStr(_164725_c.ptr())) {
											if ((_163438_callToken == nullptr)) {
												jule::Ptr<_1c6327a58_scopeChecker> _165037_root = _1c632add0_getHardRoot(_self_);;
												_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_165037_root))._field_calledFrom, jule::Str("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_1dc262718_ReadStr(_164725_c.ptr()), &__jule_any_type4)}));
											} else {
												_1c636a606_pushErr((*(_self_))._field_s.ptr(), _163438_callToken, jule::Str("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_1dc262718_ReadStr(_164725_c.ptr()), &__jule_any_type4)}));
											};
											_1c632a396_stop(_self_.ptr());
										};
									}
								}
								_match_end_1ac3e76be:;
							};
						}
					}
					_match_end_1ac3e6547:;
				};
			}
		}
		_match_end_1ac3e55ce:;
	};
}



inline void _1c633b187_processConstMatch(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c632488a_Match>* _166242_tm, jule::Ptr<_1c62b17a0_MatchCase>* _166259_m) {
	{
		auto expr = &((*((*(_166242_tm))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac3e90b6:;
		if (it != expr_end) {
			jule::I64 _166314_i = it - expr->begin();
			jule::Ptr<_1c63254c3_Case> _166321_c = *it;
			{
				if (((*(_166321_c))._field_Scope != nullptr)) {
					jule::Ptr<_1c6283a3b_Token> _166525_token = nullptr;;
					if (((!((*((*(_166242_tm))))._field_TypeMatch)) && ((*((*(_166321_c))._field_Scope))._field_Stmts.len() > 0LL))) {
						_166525_token=(*((*((*((*(_166259_m))))._field_Cases[_166314_i]))._field_Scope))._field_Stmts[0LL]._field_Token;
					};
					_1c633ad24_checkComptimePanic(_self_, _166525_token, &((*(_166321_c))._field_Scope));
					(*((*(_166242_tm))))._field_Default=_166321_c;
					(*((*(_166242_tm))))._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1ac3e90b6:;
			++it;
			_166314_i++;
			goto _iter_begin_1ac3e90b6;
		}
		_iter_end_1ac3e90b6:;
	};
	if (((*((*(_166259_m))))._field_Default != nullptr)) {
		(*((*(_166242_tm))))._field_Cases=nullptr;
		(*((*(_166242_tm))))._field_Default=_1c633a9b1_checkDefault(_self_, (*(_166242_tm)), (*((*(_166259_m))))._field_Default);
		if (((*((*(_166242_tm))))._field_Default != nullptr)) {
			jule::Ptr<_1c6283a3b_Token> _167925_token = nullptr;;
			if ((!((*((*(_166242_tm))))._field_TypeMatch))) {
				_167925_token=(*((*((*((*(_166259_m))))._field_Default))._field_Scope))._field_Stmts[0LL]._field_Token;
			};
			_1c633ad24_checkComptimePanic(_self_, _167925_token, &((*((*((*(_166242_tm))))._field_Default))._field_Scope));
		};
	} else {
		(*((*(_166242_tm))))._field_Cases=nullptr;
	};
}



inline void _1c633b440_checkTypeMatch(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c62b17a0_MatchCase>* _169139_m) {
	jule::Ptr<_1c63dd35a_Data> _169217_d = _1c640c896_eval(_1c6372aa3_eval((*(_self_))._field_s, jule::Trait<_1c643d058_Lookup>(_self_, 0)), (*((*(_169139_m))))._field_Expr);;
	if ((_169217_d == nullptr)) {
		return;;
	};
	if (((!((*((*(_169217_d))._field_Kind))._field_Generic)) && (!(((((_1c6420b73_Prim((*(_169217_d))._field_Kind.ptr()) != nullptr) && _1c6429819_IsAny(_1c6420b73_Prim((*(_169217_d))._field_Kind.ptr()).ptr())) || (_1c642247c_Trait((*(_169217_d))._field_Kind.ptr()) != nullptr)) || (_1c64216ac_TypeEnum((*(_169217_d))._field_Kind.ptr()) != nullptr)))))) {
		_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_169139_m))))._field_Expr))._field_Token, jule::Str("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c632488a_Match> _170317_tm = jule::new_ptr<_1c632488a_Match>(_1c632488a_Match{._field_Expr=_169217_d, ._field_TypeMatch=true, });;
	(*(_170317_tm))._field_Comptime=(*((*((*(_170317_tm))._field_Expr))._field_Kind))._field_Generic;
	if (((!((*(_170317_tm))._field_Comptime)) && ((*((*(_169139_m))))._field_Default != nullptr))) {
		(*(_170317_tm))._field_Default=_1c633a9b1_checkDefault(_self_, _170317_tm, (*((*(_169139_m))))._field_Default);
	};
	_1c633a5b5_checkCases(_self_, _169139_m, _170317_tm, _169217_d);
	if ((*(_170317_tm))._field_Comptime) {
		_1c633b187_processConstMatch(_self_, &(_170317_tm), _169139_m);
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_170317_tm, &__jule_any_type47)); };
}



inline void _1c633b6e8_checkCommonMatch(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c62b17a0_MatchCase>* _172441_m) {
	jule::Ptr<_1c63dd35a_Data> _172517_d = nullptr;;
	if (((*((*(_172441_m))))._field_Expr == nullptr)) {
		_172517_d=jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650961e_primBool, ._field_Constant=static__1dc261063_NewBool(true)});
		(*(_172517_d))._field_Model=jule::Any((*(_172517_d))._field_Constant, &__jule_any_type19);
	} else {
		_172517_d=_1c640d028_evalExpr(_1c6372aa3_eval((*(_self_))._field_s, jule::Trait<_1c643d058_Lookup>(_self_, 0)), (*((*(_172441_m))))._field_Expr);
		if ((_172517_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1c632488a_Match> _173917_mc = jule::new_ptr<_1c632488a_Match>(_1c632488a_Match{._field_Expr=_172517_d, ._field_Comptime=(((((*((*(_172441_m))))._field_Expr != nullptr) && _1c63ddc2e_IsConst(_172517_d.ptr())) && _1dc264a7d_IsBool((*(_172517_d))._field_Constant.ptr())) && _1dc262482_ReadBool((*(_172517_d))._field_Constant.ptr())), });;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_173917_mc, &__jule_any_type47)); };
	if (((!((*(_173917_mc))._field_Comptime)) && ((*((*(_172441_m))))._field_Default != nullptr))) {
		(*(_173917_mc))._field_Default=_1c633a9b1_checkDefault(_self_, _173917_mc, (*((*(_172441_m))))._field_Default);
	};
	_1c633a5b5_checkCases(_self_, _172441_m, _173917_mc, _172517_d);
	if ((*(_173917_mc))._field_Comptime) {
		_1c633b187_processConstMatch(_self_, &(_173917_mc), _172441_m);
	};
}



inline void _1c633b9a1_checkMatch(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c62b17a0_MatchCase> _176234_m) {
	if ((*(_176234_m))._field_TypeMatch) {
		_1c633b440_checkTypeMatch(_self_, &(_176234_m));
		return;;
	};
	_1c633b6e8_checkCommonMatch(_self_, &(_176234_m));
}



inline void _1c633bc59_checkFall(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c62a7004_FallSt> _177029_f) {
	if (((((*(_self_))._field_cse == 0LLU) || (((*((*(_self_))._field_scope))._field_Stmts.len() + 1LL) < (*((*(_self_))._field_scope))._field_Stmts.len())) || _1c632a8b3_isDeferred(_self_))) {
		_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_177029_f))._field_Token, jule::Str("fall keyword can only useable at end of the case scopes", 55), jule::Slice<jule::Any>());
		return;;
	};
	_1c63254c3_Case* _177817_case = ((_1c63254c3_Case*)((*(_self_))._field_cse));;
	if ((*((*(_177817_case))._field_Owner))._field_Comptime) {
		_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_177029_f))._field_Token, jule::Str("the fall statement is not allowed for comptime-matching", 55), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_177817_case))._field_Next == nullptr)) {
		_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_177029_f))._field_Token, jule::Str("fall cannot useable at final case", 33), jule::Slice<jule::Any>());
		_1c636a969_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1c6325abc_FallSt>(_1c6325abc_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_177817_case))._field_Next))}), &__jule_any_type48)); };
}



inline jule::Ptr<_1c6322cea_BreakSt> _1c633c09a_checkBreakWithLabel(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c62ae160_BreakSt> _179339_b) {
	jule::Ptr<_1c6322cea_BreakSt> _179417_brk = _1c633c3db_checkPlainBreak(_self_, _179339_b);;
	if ((_179417_brk == nullptr)) {
		return nullptr;;
	};
	(*(_179417_brk))._field_It=0LLU;
	(*(_179417_brk))._field_Mtch=0LLU;
	jule::Ptr<_1c63265b2_scopeLabel> _180417_label = _1c631cc6d_findLabelParent(&((*((*(_179339_b))._field_Label))._field_Kind), (*(_self_))._field_parent);;
	if ((_180417_label == nullptr)) {
		_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_179339_b))._field_Label, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*((*(_179339_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	(*(_180417_label))._field_used=true;
	if ((((*(_180417_label))._field_pos + 1LL) >= (*((*((*(_180417_label))._field_scope))._field_scope))._field_Stmts.len())) {
		_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_179339_b))._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_179339_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _181713_i = ((*(_180417_label))._field_pos + 1LL);;
	if ((_181713_i >= (*((*((*(_180417_label))._field_scope))._field_scope))._field_Stmts.len())) {
		_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_179339_b))._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_179339_b))._field_Label))._field_Kind, &__jule_any_type4)}));
	} else {
		jule::Any _182121_st = (*((*((*(_180417_label))._field_scope))._field_scope))._field_Stmts[_181713_i];;
		{
			auto &_match_expr{ _182121_st };
			
			if (_match_expr.type == &__jule_any_type36) {
				_case_begin_1ac423178:;
				{
					(*(_179417_brk))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_182121_st.cast_ptr<_1c6321689_InfIter>(&__jule_any_type36)));
				}
			}
			else if (_match_expr.type == &__jule_any_type40) {
				_case_begin_1ac422d7b:;
				{
					(*(_179417_brk))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_182121_st.cast_ptr<_1c632258b_RangeIter>(&__jule_any_type40)));
				}
			}
			else if (_match_expr.type == &__jule_any_type38) {
				_case_begin_1ac422de2:;
				{
					(*(_179417_brk))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_182121_st.cast_ptr<_1c6321b40_WhileIter>(&__jule_any_type38)));
				}
			}
			else if (_match_expr.type == &__jule_any_type47) {
				_case_begin_1ac422e58:;
				{
					(*(_179417_brk))._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_182121_st.cast_ptr<_1c632488a_Match>(&__jule_any_type47)));
				}
			}
			else {
				_case_begin_1ac422d15:;
				{
					_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_179339_b))._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_179339_b))._field_Label))._field_Kind, &__jule_any_type4)}));
				}
			}
			_match_end_1ac422cb0:;
		};
	};
	if (((*(_179417_brk))._field_It != 0LLU)) {
		if ((!(_1c6331cb5_checkValidBreakLabel(_self_, (*(_179417_brk))._field_It)))) {
			_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_179339_b))._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_179339_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		};
	};
	if (((*(_179417_brk))._field_Mtch != 0LLU)) {
		if ((!(_1c6331cb5_checkValidBreakLabel(_self_, (*(_179417_brk))._field_Mtch)))) {
			_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_179339_b))._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_179339_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		};
	};
	return _179417_brk;;
}



inline jule::Ptr<_1c6322cea_BreakSt> _1c633c3db_checkPlainBreak(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c62ae160_BreakSt> _185135_b) {
	if (_1c632a8b3_isDeferred(_self_)) {
		_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_185135_b))._field_Token, jule::Str("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c6327a58_scopeChecker> _185717_scope = _self_;;
	_julec_label_1ac42a735:;
	{
		
		if ((((((*(_185717_scope))._field_it == 0LLU) && ((*(_185717_scope))._field_cse == 0LLU)) && ((*(_185717_scope))._field_parent != nullptr)) && ((*(_185717_scope))._field_owner == nullptr))) {
			_case_begin_1ac42ac96:;
			{
				_185717_scope=(*(_185717_scope))._field_parent;
				goto _julec_label_1ac42a735;
			}
		}
		else if (((*(_185717_scope))._field_it != 0LLU)) {
			_case_begin_1ac42ad1d:;
			{
				return jule::new_ptr<_1c6322cea_BreakSt>(_1c6322cea_BreakSt{._field_It=(*(_185717_scope))._field_it, });;
			}
		}
		else if (((*(_185717_scope))._field_cse != 0LLU)) {
			_case_begin_1ac42ad95:;
			{
				return jule::new_ptr<_1c6322cea_BreakSt>(_1c6322cea_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(((_1c63254c3_Case*)((*(_185717_scope))._field_cse))))._field_Owner))});;
			}
		}
		_match_end_1ac42abca:;
	};
	_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_185135_b))._field_Token, jule::Str("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1c633c694_checkBreak(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c62ae160_BreakSt> _187330_b) {
	if (((*(_187330_b))._field_Label != nullptr)) {
		jule::Ptr<_1c6322cea_BreakSt> _187521_brk = _1c633c09a_checkBreakWithLabel(_self_, _187330_b);;
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_187521_brk, &__jule_any_type49)); };
		return;;
	};
	jule::Ptr<_1c6322cea_BreakSt> _188017_brk = _1c633c3db_checkPlainBreak(_self_, _187330_b);;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_188017_brk, &__jule_any_type49)); };
}



inline void _1c633c94c_checkRet(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c62ac3b1_RetSt> _188432_r) {
	if (_1c632a8b3_isDeferred(_self_)) {
		_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_188432_r))._field_Token, jule::Str("deferred scopes are not supports return statements", 50), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c6325e52_RetSt> _188917_rt = jule::new_ptr<_1c6325e52_RetSt>(_1c6325e52_RetSt{._field_Func=(*(_1c632ab49_getRoot(_self_)))._field_owner, });;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_188917_rt, &__jule_any_type50)); };
	jule::Ptr<_1c63d5d7a_retTypeChecker> _189417_rtc = jule::new_ptr<_1c63d5d7a_retTypeChecker>(_1c63d5d7a_retTypeChecker{._field_sc=_self_, ._field_f=(*(_188917_rt))._field_Func, ._field_errorToken=(*(_188432_r))._field_Token, });;
	jule::Bool _189913_ok = _1c63d6a90_check(_189417_rtc.ptr(), &((*(_188432_r))._field_Expr));;
	if ((!(_189913_ok))) {
		return;;
	};
	if (((*(_188432_r))._field_Expr != nullptr)) {
		(*(_188917_rt))._field_Expr=(*(_189417_rtc))._field_model;
	};
}



inline void _1c633cc05_checkUseExpr(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c629de52_UseExpr> _190932_ue) {
	if (((*(_self_))._field_result == nullptr)) {
		_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_190932_ue))._field_Token, jule::Str("use expressions cannot useable out of exceptional handler scopes", 64), jule::Slice<jule::Any>());
		return;;
	};
	if (_1c632a8b3_isDeferred(_self_)) {
		_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_190932_ue))._field_Token, jule::Str("use expressions cannot useable in deferred scopes", 49), jule::Slice<jule::Any>());
	};
	if ((((*(_self_))._field_i + 1LL) < (*((*(_self_))._field_tree))._field_Stmts.len())) {
		_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_190932_ue))._field_Token, jule::Str("use expressions must be last statement of scope", 47), jule::Slice<jule::Any>());
	};
}



inline void _1c633cead_checkNode(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Any* _192534_node) {
	{
		auto &_match_expr{ (*(_192534_node)) };
		
		if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1ac863244:;
			{
				_1c632d762_checkAnonScope(_self_, (*(_192534_node)).cast_ptr<_1c62a926a_ScopeTree>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1ac8637a5:;
			{
				_1c632c057_checkVarDecl(_self_, (*(_192534_node)).cast_ptr<_1c62abed7_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1ac863574:;
			{
				_1c632c5b8_checkTypeAliasDecl(_self_, (*(_192534_node)).cast_ptr<_1c62b0aac_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1ac863a2a:;
			{
				_1c632dd7d_checkExpr(_self_, (*(_192534_node)).cast_ptr<_1c629d57d_Expr>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1ac863a91:;
			{
				_1c632e7b8_checkConditional(_self_, (*(_192534_node)).cast_ptr<_1c62b0370_Conditional>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1ac863b07:;
			{
				_1c6331633_checkIter(_self_, (*(_192534_node)).cast_ptr<_1c62aca54_Iter>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1ac863b6d:;
			{
				_1c63323ae_checkCont(_self_, (*(_192534_node)).cast_ptr<_1c62ae539_ContSt>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1ac863bd4:;
			{
				_1c6332667_checkLabel(_self_, (*(_192534_node)).cast_ptr<_1c62a682d_LabelSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1ac863c4a:;
			{
				_1c6332920_pushGoto(_self_, (*(_192534_node)).cast_ptr<_1c62a6c07_GotoSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1ac863cb1:;
			{
				_1c633973a_checkAssignSt(_self_, (*(_192534_node)).cast_ptr<_1c62a7be7_AssignSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1ac863d27:;
			{
				_1c633b9a1_checkMatch(_self_, (*(_192534_node)).cast_ptr<_1c62b17a0_MatchCase>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1ac863d8d:;
			{
				_1c633bc59_checkFall(_self_, (*(_192534_node)).cast_ptr<_1c62a7004_FallSt>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1ac863e04:;
			{
				_1c633c694_checkBreak(_self_, (*(_192534_node)).cast_ptr<_1c62ae160_BreakSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1ac863e6a:;
			{
				_1c633c94c_checkRet(_self_, (*(_192534_node)).cast_ptr<_1c62ac3b1_RetSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1ac863ed1:;
			{
				_1c633cc05_checkUseExpr(_self_, (*(_192534_node)).cast_ptr<_1c629de52_UseExpr>(&__jule_any_type63));
			}
		}
		else {
			_case_begin_1ac8633dc:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1ac863387:;
	};
}



inline void _1c633d1ab_checkResult(jule::Ptr<_1c6327a58_scopeChecker> _self_) {
	_1c62a8b0a_Stmt _196317_stmt = (*((*(_self_))._field_tree))._field_Stmts[((*((*(_self_))._field_tree))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _196317_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1ac86d2a4:;
			{
				jule::Ptr<_1c629de52_UseExpr> _196621_ue = _196317_stmt._field_Data.cast_ptr<_1c629de52_UseExpr>(&__jule_any_type63);;
				jule::Ptr<_1c63dd35a_Data> _196721_d = _1c640d028_evalExpr(_1c6372aa3_eval((*(_self_))._field_s, jule::Trait<_1c643d058_Lookup>(_self_, 0)), (*(_196621_ue))._field_Expr);;
				if ((_196721_d == nullptr)) {
					return;;
				};
				{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_196721_d, &__jule_any_type24)); };
				jule::Ptr<_1c63d5d7a_retTypeChecker> _197221_rtc = jule::new_ptr<_1c63d5d7a_retTypeChecker>(_1c63d5d7a_retTypeChecker{._field_sc=_self_, ._field_types=_1c62d3d00_Types((*(_self_))._field_result.ptr()), ._field_errorToken=(*((*(_196621_ue))._field_Expr))._field_Token, });;
				_1c63d6a90_check(_197221_rtc.ptr(), &((*(_196621_ue))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1ac86c957:;
			{
				jule::Ptr<_1c629d57d_Expr> _197921_expr = _196317_stmt._field_Data.cast_ptr<_1c629d57d_Expr>(&__jule_any_type52);;
				jule::Ptr<_1c63dd35a_Data> _198021_d = _1c640d028_evalExpr(_1c6372aa3_eval((*(_self_))._field_s, jule::Trait<_1c643d058_Lookup>(_self_, 0)), _197921_expr);;
				if ((_198021_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ (*(_198021_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1ac873a4b:;
						{
							jule::Ptr<_1c62ca7b9_BuiltinErrorCallExprModel> _198625_m = (*(_198021_d))._field_Model.cast_ptr<_1c62ca7b9_BuiltinErrorCallExprModel>(&__jule_any_type23);;
							_1c632dac5_processErrorCall(_self_, &(_198625_m), (*(_197921_expr))._field_Token);
							{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_198021_d, &__jule_any_type24)); };
						}
					}
					else {
						_case_begin_1ac873c6b:;
						{
							return;;
						}
					}
					_match_end_1ac873c16:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type57 || _match_expr.type == &__jule_any_type61 || _match_expr.type == &__jule_any_type55 || _match_expr.type == &__jule_any_type62) {
			_case_begin_1ac86c9bd:;
			{
				_1c633cead_checkNode(_self_, &(_196317_stmt._field_Data));
			}
		}
		else {
			_case_begin_1ac86c8e1:;
			{
				_1c633cead_checkNode(_self_, &(_196317_stmt._field_Data));
				return;;
			}
		}
		_match_end_1ac86b967:;
	};
	(*(_self_))._field_result=nullptr;
}



inline void _1c633d3a9_checkTree(jule::Ptr<_1c6327a58_scopeChecker> _self_) {
	(*(_self_))._field_i=0LL;
	jule::I64 _200817_n = (*((*(_self_))._field_tree))._field_Stmts.len();;
	if (((*(_self_))._field_result != nullptr)) {
		(_200817_n)--;
	};
	for (; ((*(_self_))._field_i < _200817_n); ((*(_self_))._field_i)++) {
		{
			_1c62a8b0a_Stmt _201621_stmt = (*((*(_self_))._field_tree))._field_Stmts[(*(_self_))._field_i];;
			_1c633cead_checkNode(_self_, &(_201621_stmt._field_Data));
			if (_1c632a62c_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1ac877a94:;
	}
	_iter_end_1ac877a94:;;
	if ((((*(_self_))._field_result != nullptr) && ((*((*(_self_))._field_tree))._field_Stmts.len() != 0LL))) {
		_1c633d1ab_checkResult(_self_);
	};
}



inline void _1c633d71c_checkGoto(_1c6327a58_scopeChecker* _self_, jule::Ptr<_1c6326b45_scopeGoto>* _202733_gt, jule::Ptr<_1c63265b2_scopeLabel>* _202754_label) {
	jule::Ptr<_1c6327a58_scopeChecker> _202817_gtsc = (*((*(_202733_gt))))._field_scope;;
	while ((((*(_202817_gtsc))._field_childIndex - 1LL) > (*((*((*(_202754_label))))._field_scope))._field_childIndex)) {
		{
			_202817_gtsc=(*(_202817_gtsc))._field_parent;
		}
	_iter_next_1ac87b1b3:;
	}
	_iter_end_1ac87b1b3:;;
	jule::I64 _203317_n = 0LL;;
	if (((*(_202817_gtsc))._field_scope == (*((*((*(_202754_label))))._field_scope))._field_scope)) {
		if (((*((*(_202733_gt))))._field_pos > (*((*(_202754_label))))._field_pos)) {
			return;;
		};
		_203317_n=(*((*(_202733_gt))))._field_pos;
	};
	jule::I64 _204617_i = ((*((*(_202754_label))))._field_pos - 1LL);;
	if ((_203317_n == 0LL)) {
		{
			auto expr = &((*((*((*((*(_202754_label))))._field_scope))._field_scope))._field_Stmts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac87e529:;
			if (it != expr_end) {
				jule::I64 _204917_j = it - expr->begin();
				jule::Any _204920_stmt = *it;
				{
					if (_1c631d4aa_stmtIsGotoScope(&(_204920_stmt), &((*(_202817_gtsc))._field_scope))) {
						_203317_n=_204917_j;
						goto _iter_end_1ac87e529;
					};
				}
				_iter_next_1ac87e529:;
				++it;
				_204917_j++;
				goto _iter_begin_1ac87e529;
			}
			_iter_end_1ac87e529:;
		};
	};
	for (; (_204617_i >= _203317_n); (_204617_i)--) {
		{
			jule::Any _205921_stmt = (*((*((*((*(_202754_label))))._field_scope))._field_scope))._field_Stmts[_204617_i];;
			if (_1c63202e2_stmtIsDef(&(_205921_stmt))) {
				_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_202733_gt))))._field_gt))._field_Token, jule::Str("goto @ jumps over declaration(s)", 32), jule::Slice<jule::Any>::make({jule::Any((*((*((*((*(_202733_gt))))._field_gt))._field_Label))._field_Kind, &__jule_any_type4)}));
				return;;
			};
		}
	_iter_next_1ac880629:;
	}
	_iter_end_1ac880629:;;
}



inline void _1c633d91a_checkGotos(_1c6327a58_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac881927:;
		if (it != expr_end) {
			jule::Ptr<_1c6326b45_scopeGoto> _206821_gt = *it;
			{
				jule::Ptr<_1c63265b2_scopeLabel> _206921_label = _1c632b8a3_findLabelAll(_self_, &((*((*((*(_206821_gt))._field_gt))._field_Label))._field_Kind));;
				if ((_206921_label == nullptr)) {
					_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*(_206821_gt))._field_gt))._field_Token, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_206821_gt))._field_gt))._field_Label))._field_Kind, &__jule_any_type4)}));
					goto _iter_next_1ac881927;
				};
				(*((*(_206821_gt))._field_st))._field_Label=(*(_206921_label))._field_label;
				(*(_206921_label))._field_used=true;
				_1c633d71c_checkGoto(_self_, &(_206821_gt), &(_206921_label));
			}
			_iter_next_1ac881927:;
			++it;
			goto _iter_begin_1ac881927;
		}
		_iter_end_1ac881927:;
	};
}



inline void _1c633db18_checkLabels(_1c6327a58_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac884562:;
		if (it != expr_end) {
			jule::Ptr<_1c63265b2_scopeLabel> _208116_l = *it;
			{
				if ((!((*(_208116_l))._field_used))) {
					_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_208116_l))._field_token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_208116_l))._field_label))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1ac884562:;
			++it;
			goto _iter_begin_1ac884562;
		}
		_iter_end_1ac884562:;
	};
}



inline void _1c633dd16_checkVars(_1c6327a58_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac88694e:;
		if (it != expr_end) {
			jule::Ptr<_1c6389da6_Var> _208916_v = *it;
			{
				if (((((!((*(_208916_v))._field_Used)) && (!((*(_208916_v))._field_Constant))) && (!(_1c628649a_IsIgnoreIdent((*(_208916_v))._field_Ident)))) && (!(_1c6286764_IsAnonIdent((*(_208916_v))._field_Ident))))) {
					_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_208916_v))._field_Token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*(_208916_v))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1ac88694e:;
			++it;
			goto _iter_begin_1ac88694e;
		}
		_iter_end_1ac88694e:;
	};
}



inline void _1c633e014_checkAliases(_1c6327a58_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac888511:;
		if (it != expr_end) {
			jule::Ptr<_1c641c730_TypeAlias> _209716_a = *it;
			{
				if ((((!((*(_209716_a))._field_Used)) && (!(_1c628649a_IsIgnoreIdent((*(_209716_a))._field_Ident)))) && (!(_1c6286764_IsAnonIdent((*(_209716_a))._field_Ident))))) {
					_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_209716_a))._field_Token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*(_209716_a))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1ac888511:;
			++it;
			goto _iter_begin_1ac888511;
		}
		_iter_end_1ac888511:;
	};
}



inline void _1c633e377_check(jule::Ptr<_1c6327a58_scopeChecker> _self_, jule::Ptr<_1c62a926a_ScopeTree>* _210530_tree, jule::Ptr<_1c6320754_Scope>* _210553_s) {
	(*((*(_210553_s))))._field_Deferred=(*((*(_210530_tree))))._field_Deferred;
	(*((*(_210553_s))))._field_Unsafety=(*((*(_210530_tree))))._field_Unsafety;
	jule::I64 _210913_errors = (*((*(_self_))._field_s))._field_errors.len();;
	(*(_self_))._field_tree=(*(_210530_tree));
	(*(_self_))._field_scope=(*(_210553_s));
	_1c633d3a9_checkTree(_self_);
	if ((_210913_errors == (*((*(_self_))._field_s))._field_errors.len())) {
		_1c633dd16_checkVars(_self_.ptr());
		_1c633e014_checkAliases(_self_.ptr());
		if (_1c632a198_isRoot(_self_.ptr())) {
			_1c633d91a_checkGotos(_self_.ptr());
			_1c633db18_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_1c6327a58_scopeChecker> _1c633e60d_newChildChecker(jule::Ptr<_1c6327a58_scopeChecker> _self_) {
	jule::Ptr<_1c6327a58_scopeChecker> _212917_base = _1c631c531_newScopeCheckerBase(&((*(_self_))._field_s), nullptr);;
	(*(_212917_base))._field_parent=_self_;
	(*(_212917_base))._field_labels=(*(_self_))._field_labels;
	(*(_212917_base))._field_gotos=(*(_self_))._field_gotos;
	(*(_212917_base))._field_childIndex=static_cast<jule::I64>(((*(_self_))._field_childIndex + 1LL));
	return _212917_base;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c6327a58_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1c6340972_checkCdef(_1c6340565_directiveChecker* _self_, jule::Ptr<_1c6298666_Directive>* _1629_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ac89343e:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_1c62cebec_Fn>(&__jule_any_type64)))._field_Binded) {
					goto _match_end_1ac893681;
				};
				goto _case_begin_1ac8936d6;
			}
		}
		else {
			_case_begin_1ac8936d6:;
			{
				_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*(_1629_d))))._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_1629_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1ac893681:;
	};
	if (((*((*(_1629_d))))._field_Args.len() > 0LL)) {
		_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*(_1629_d))))._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1c6340c2a_checkTypedef(_1c6340565_directiveChecker* _self_, jule::Ptr<_1c6298666_Directive>* _3232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ac896299:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_1c62b9d3b_Struct>(&__jule_any_type65)))._field_Binded) {
					goto _match_end_1ac8964db;
				};
				goto _case_begin_1ac896541;
			}
		}
		else {
			_case_begin_1ac896541:;
			{
				_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*(_3232_d))))._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_3232_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1ac8964db:;
	};
	if (((*((*(_3232_d))))._field_Args.len() > 0LL)) {
		_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*(_3232_d))))._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1c6340ed3_checkNamespace(_1c6340565_directiveChecker* _self_, jule::Ptr<_1c6298666_Directive>* _4838_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ac8996ba:;
			{
				if ((!((*((*(_self_))._field_o.cast_ptr<_1c62b9d3b_Struct>(&__jule_any_type65)))._field_Binded))) {
					_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ac899412:;
			{
				if ((!((*((*(_self_))._field_o.cast_ptr<_1c62cebec_Fn>(&__jule_any_type64)))._field_Binded))) {
					_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ac899478:;
			{
				if ((!((*((*(_self_))._field_o.cast_ptr<_1c6389da6_Var>(&__jule_any_type8)))._field_Binded))) {
					_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else {
			_case_begin_1ac89939b:;
			{
				_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1ac899346:;
	};
	if (((*((*(_4838_d))))._field_Args.len() == 0LL)) {
		_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_4838_d))))._field_Args.len() > 1LL)) {
		_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1c6283a3b_Token> _7313_arg = (*((*(_4838_d))))._field_Args[0LL];;
	if (((*(_7313_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1c636a606_pushErr((*(_self_))._field_s.ptr(), _7313_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_7313_arg))._field_Kind[0LL] != '\"')) {
		_1c636a606_pushErr((*(_self_))._field_s.ptr(), _7313_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_4838_d))))._field_Args[0LL]))._field_Kind=(*(_7313_arg))._field_Kind.slice(1LL, ((*(_7313_arg))._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ac8a48c3:;
			{
				if ((_1c6416938_findDirective(&((*((*(_self_))._field_d))), jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_1c6298666_Directive> _9025_typedef = jule::new_ptr<_1c6298666_Directive>(_1c6298666_Directive{._field_Tag=(*((*(_4838_d))))._field_Tag, });;
					(*((*(_9025_typedef))._field_Tag))._field_Kind=jule::Str("typedef", 7);
					{ jule::Slice<jule::Ptr<_1c6298666_Directive>> &__jule_push_dest = (*((*(_self_))._field_d)); __jule_push_dest.push(_9025_typedef); };
				};
			}
		}
		_match_end_1ac8a486d:;
	};
}



inline void _1c634128b_checkDeprecated(_1c6340565_directiveChecker* _self_, jule::Ptr<_1c6298666_Directive>* _9939_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ac8a5be3:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_1c62b9d3b_Struct>(&__jule_any_type65)))._field_Binded) {
					_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ac8a6dd1:;
			{
				jule::Ptr<_1c62cebec_Fn> _10621_f = (*(_self_))._field_o.cast_ptr<_1c62cebec_Fn>(&__jule_any_type64);;
				if ((((*(_10621_f))._field_Binded || _1c62d068c_IsEntryPoint(_10621_f.ptr())) || _1c62d0923_IsInit(_10621_f.ptr()))) {
					_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ac8a6e47:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_1c6389da6_Var>(&__jule_any_type8)))._field_Binded) {
					_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else {
			_case_begin_1ac8a696e:;
			{
				_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1ac8a6919:;
	};
	if (((*((*(_9939_d))))._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*((*(_9939_d))))._field_Args.len() > 1LL)) {
		_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1c6283a3b_Token> _12513_arg = (*((*(_9939_d))))._field_Args[0LL];;
	if (((*(_12513_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1c636a606_pushErr((*(_self_))._field_s.ptr(), _12513_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_12513_arg))._field_Kind[0LL] != '\"')) {
		_1c636a606_pushErr((*(_self_))._field_s.ptr(), _12513_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_9939_d))))._field_Args[0LL]))._field_Kind=(*(_12513_arg))._field_Kind.slice(1LL, ((*(_12513_arg))._field_Kind.len() - 1LL));
}



inline void _1c6341544_checkTest(_1c6340565_directiveChecker* _self_, jule::Ptr<_1c6298666_Directive>* _13929_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ac8ad019:;
			{
				jule::Ptr<_1c62cebec_Fn> _14217_f = (*(_self_))._field_o.cast_ptr<_1c62cebec_Fn>(&__jule_any_type64);;
				if ((((!((*(_14217_f))._field_Binded)) && (!(_1c62d0923_IsInit(_14217_f.ptr())))) && (!(_1c62d068c_IsEntryPoint(_14217_f.ptr()))))) {
					goto _match_end_1ac8b28e2;
				};
				if (_1c62d0406_IsMethod(_14217_f.ptr())) {
					_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_14217_f))._field_Token, jule::Str("you cannot declare test methods", 31), jule::Slice<jule::Any>());
					goto _match_end_1ac8b28e2;
				};
				goto _case_begin_1ac8b2947;
			}
		}
		else {
			_case_begin_1ac8b2947:;
			{
				_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*(_13929_d))))._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_13929_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1ac8b28e2:;
	};
	if (((*((*(_13929_d))))._field_Args.len() > 0LL)) {
		_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*(_13929_d))))._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1c63417ec_checkDirective(_1c6340565_directiveChecker* _self_, jule::Ptr<_1c6298666_Directive>* _16038_d) {
	{
		auto &_match_expr{ (*((*((*(_16038_d))))._field_Tag))._field_Kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_1ac8b782b:;
			{
				_1c6340972_checkCdef(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_1ac8b74da:;
			{
				_1c6340c2a_checkTypedef(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_1ac8b7551:;
			{
				_1c6340ed3_checkNamespace(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_1ac8b75b7:;
			{
				_1c634128b_checkDeprecated(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_1ac8b762d:;
			{
				_1c6341544_checkTest(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_1ac8b861d:;
			{
				_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*(_16038_d))))._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_16038_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		else {
			_case_begin_1ac8b7474:;
			{
				_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*(_16038_d))))._field_Tag, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_16038_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1ac8b73ec:;
	};
}



inline void _1c63419ea_check(_1c6340565_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8ba356:;
		if (it != expr_end) {
			jule::Ptr<_1c6298666_Directive> _18121_d = *it;
			{
				_1c63417ec_checkDirective(_self_, &(_18121_d));
			}
			_iter_next_1ac8ba356:;
			++it;
			goto _iter_begin_1ac8ba356;
		}
		_iter_end_1ac8ba356:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c6340565_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c63469de_ImportInfo> _1c6346ec8_SelectPackage(_1c63469de_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_1c63469de_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1c6389da6_Var> _1c63473c4_FindVar(_1c63469de_ImportInfo* _self_, jule::Str _18926_ident, jule::Bool ) {
	if ((!(_1c6349030_isLookupable(_self_, &(_18926_ident))))) {
		return nullptr;;
	};
	return _1c6343ec5_findVarInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_18926_ident), false);;
}



inline jule::Ptr<_1c641c730_TypeAlias> _1c63477c0_FindTypeAlias(_1c63469de_ImportInfo* _self_, jule::Str _20132_ident, jule::Bool ) {
	if ((!(_1c6349030_isLookupable(_self_, &(_20132_ident))))) {
		return nullptr;;
	};
	return _1c6344448_findTypeAliasInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_20132_ident), false);;
}



inline jule::Ptr<_1c62b9d3b_Struct> _1c6347bbb_FindStruct(_1c63469de_ImportInfo* _self_, jule::Str _21329_ident, jule::Bool ) {
	if ((!(_1c6349030_isLookupable(_self_, &(_21329_ident))))) {
		return nullptr;;
	};
	return _1c6344877_findStructInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_21329_ident), false);;
}



inline jule::Ptr<_1c62cebec_Fn> _1c63480b7_FindFn(_1c63469de_ImportInfo* _self_, jule::Str _22525_ident, jule::Bool ) {
	if ((!(_1c6349030_isLookupable(_self_, &(_22525_ident))))) {
		return nullptr;;
	};
	return _1c6344d2d_findFnInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_22525_ident), false);;
}



inline jule::Ptr<_1c62e2e96_Trait> _1c6348408_FindTrait(_1c63469de_ImportInfo* _self_, jule::Str _23628_ident) {
	if ((!(_1c6349030_isLookupable(_self_, &(_23628_ident))))) {
		return nullptr;;
	};
	return _1c634516e_findTraitInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_23628_ident));;
}



inline jule::Ptr<_1c62e5691_Enum> _1c6348749_FindEnum(_1c63469de_ImportInfo* _self_, jule::Str _24727_ident) {
	if ((!(_1c6349030_isLookupable(_self_, &(_24727_ident))))) {
		return nullptr;;
	};
	return _1c63454e3_findEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_24727_ident));;
}



inline jule::Ptr<_1c62e6d9b_TypeEnum> _1c6348a8a_FindTypeEnum(_1c63469de_ImportInfo* _self_, jule::Str _25831_ident) {
	if ((!(_1c6349030_isLookupable(_self_, &(_25831_ident))))) {
		return nullptr;;
	};
	return _1c6345867_findTypeEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_25831_ident));;
}



inline jule::Bool _1c6349030_isLookupable(_1c63469de_ImportInfo* _self_, jule::Str* _26728_ident) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _1c6349371_existIdent(_self_, jule::Str("self", 4)))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_1c6349371_existIdent(_self_, (*(_26728_ident)))))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _1c6349371_existIdent(_1c63469de_ImportInfo* _self_, jule::Str _28725_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8d158c:;
		if (it != expr_end) {
			jule::Ptr<_1c6283a3b_Token> *_28816_sident = it;
			{
				if (((*((*(_28816_sident))))._field_Kind == _28725_ident)) {
					return true;;
				};
			}
			_iter_next_1ac8d158c:;
			++it;
			goto _iter_begin_1ac8d158c;
		}
		_iter_end_1ac8d158c:;
	};
	return false;;
}



inline jule::Bool _1c6349607_isAccessibleViaSelection(_1c63469de_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _1c6349371_existIdent(_self_, jule::Str("self", 4)));;
}





std::ostream &operator<<(std::ostream &_Stream, _1c63469de_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c63469de_ImportInfo> _1c6349daa_SelectPackage(_1c6349915_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_1c63469de_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1c6389da6_Var> _1c634a2a6_FindVar(_1c6349915_Package* _self_, jule::Str _31426_ident, jule::Bool _31438_binded) {
	return _1c6343ec5_findVarInPackage(&((*(_self_))._field_Files), &(_31426_ident), _31438_binded);;
}



inline jule::Ptr<_1c641c730_TypeAlias> _1c634a6a2_FindTypeAlias(_1c6349915_Package* _self_, jule::Str _32032_ident, jule::Bool _32044_binded) {
	return _1c6344448_findTypeAliasInPackage(&((*(_self_))._field_Files), &(_32032_ident), _32044_binded);;
}



inline jule::Ptr<_1c62b9d3b_Struct> _1c634aa9d_FindStruct(_1c6349915_Package* _self_, jule::Str _32629_ident, jule::Bool _32641_binded) {
	return _1c6344877_findStructInPackage(&((*(_self_))._field_Files), &(_32629_ident), _32641_binded);;
}



inline jule::Ptr<_1c62cebec_Fn> _1c634ae99_FindFn(_1c6349915_Package* _self_, jule::Str _33225_ident, jule::Bool _33237_binded) {
	return _1c6344d2d_findFnInPackage(&((*(_self_))._field_Files), &(_33225_ident), _33237_binded);;
}



inline jule::Ptr<_1c62e2e96_Trait> _1c634b2da_FindTrait(_1c6349915_Package* _self_, jule::Str _33828_ident) {
	return _1c634516e_findTraitInPackage(&((*(_self_))._field_Files), &(_33828_ident));;
}



inline jule::Ptr<_1c62e5691_Enum> _1c634b62b_FindEnum(_1c6349915_Package* _self_, jule::Str _34427_ident) {
	return _1c63454e3_findEnumInPackage(&((*(_self_))._field_Files), &(_34427_ident));;
}



inline jule::Ptr<_1c62e6d9b_TypeEnum> _1c634b96c_FindTypeEnum(_1c6349915_Package* _self_, jule::Str _35031_ident) {
	return _1c6345867_findTypeEnumInPackage(&((*(_self_))._field_Files), &(_35031_ident));;
}





std::ostream &operator<<(std::ostream &_Stream, _1c6349915_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c6308c15_comptimeTypeInfo> _1c6367306_pushComptimeTypeInfo(_1c6366d94_commonSemaMeta* _self_, jule::Ptr<_1c641d522_TypeKind>* _21744_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac913965:;
		if (it != expr_end) {
			jule::Ptr<_1c6308c15_comptimeTypeInfo> _21821_t2 = *it;
			{
				if ((((*((*(_21821_t2))._field_base))._field_BindIdent == (*((*(_21744_t))))._field_BindIdent) && _1c641dc2b_Equal((*(_21821_t2))._field_base, (*(_21744_t))))) {
					return _21821_t2;;
				};
			}
			_iter_next_1ac913965:;
			++it;
			goto _iter_begin_1ac913965;
		}
		_iter_end_1ac913965:;
	};
	jule::Ptr<_1c6308c15_comptimeTypeInfo> _22317_t1 = jule::new_ptr<_1c6308c15_comptimeTypeInfo>(_1c6308c15_comptimeTypeInfo{._field_base=(*(_21744_t))});;
	{ jule::Slice<jule::Ptr<_1c6308c15_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_22317_t1); };
	return _22317_t1;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c6366d94_commonSemaMeta _Src) {
	_Stream << "commonSemaMeta{";
	_Stream << "comptimeTypeInfos:" << _Src._field_comptimeTypeInfos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c63469de_ImportInfo> _1c6367e61_SelectPackage(_1c63679bb_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_1c63469de_ImportInfo>)> _24632_selector) {
	return _1c63d861e_SelectPackage((*(_self_))._field_file.ptr(), _24632_selector);;
}



inline jule::Ptr<_1c6389da6_Var> _1c636835c_FindVar(_1c63679bb_Sema* _self_, jule::Str _25626_ident, jule::Bool _25638_binded) {
	jule::Ptr<_1c6389da6_Var> _25817_v = _1c6343ec5_findVarInPackage(&((*(_self_))._field_files), &(_25626_ident), _25638_binded);;
	if ((_25817_v != nullptr)) {
		return _25817_v;;
	};
	if ((!(_1c6364ab7_IsPub(&(_25626_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9177d2:;
		if (it != expr_end) {
			jule::Ptr<_1c63469de_ImportInfo> _26921_imp = *it;
			{
				if ((!(_1c6365a0d_impIsLookupable(&(_26921_imp), &(_25626_ident))))) {
					goto _iter_next_1ac9177d2;
				};
				_25817_v=_1c63473c4_FindVar(_26921_imp.ptr(), _25626_ident, _25638_binded);
				if (((_25817_v != nullptr) && _1c636ad65_isAccessibleDefine(_self_, (*(_25817_v))._field_Public, (*(_25817_v))._field_Token))) {
					return _25817_v;;
				};
			}
			_iter_next_1ac9177d2:;
			++it;
			goto _iter_begin_1ac9177d2;
		}
		_iter_end_1ac9177d2:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c641c730_TypeAlias> _1c6368758_FindTypeAlias(_1c63679bb_Sema* _self_, jule::Str _28832_ident, jule::Bool _28844_binded) {
	jule::Ptr<_1c641c730_TypeAlias> _29017_ta = _1c6344448_findTypeAliasInPackage(&((*(_self_))._field_files), &(_28832_ident), _28844_binded);;
	if ((_29017_ta != nullptr)) {
		return _29017_ta;;
	};
	if ((!(_1c6364ab7_IsPub(&(_28832_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac91a73b:;
		if (it != expr_end) {
			jule::Ptr<_1c63469de_ImportInfo> _30121_imp = *it;
			{
				if ((!(_1c6365a0d_impIsLookupable(&(_30121_imp), &(_28832_ident))))) {
					goto _iter_next_1ac91a73b;
				};
				_29017_ta=_1c63477c0_FindTypeAlias(_30121_imp.ptr(), _28832_ident, _28844_binded);
				if (((_29017_ta != nullptr) && _1c636ad65_isAccessibleDefine(_self_, (*(_29017_ta))._field_Public, (*(_29017_ta))._field_Token))) {
					return _29017_ta;;
				};
			}
			_iter_next_1ac91a73b:;
			++it;
			goto _iter_begin_1ac91a73b;
		}
		_iter_end_1ac91a73b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c62b9d3b_Struct> _1c6368b54_FindStruct(_1c63679bb_Sema* _self_, jule::Str _32029_ident, jule::Bool _32041_binded) {
	jule::Ptr<_1c62b9d3b_Struct> _32217_s = _1c6344877_findStructInPackage(&((*(_self_))._field_files), &(_32029_ident), _32041_binded);;
	if ((_32217_s != nullptr)) {
		return _32217_s;;
	};
	if ((!(_1c6364ab7_IsPub(&(_32029_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac91d695:;
		if (it != expr_end) {
			jule::Ptr<_1c63469de_ImportInfo> _33321_imp = *it;
			{
				if ((!(_1c6365a0d_impIsLookupable(&(_33321_imp), &(_32029_ident))))) {
					goto _iter_next_1ac91d695;
				};
				_32217_s=_1c6347bbb_FindStruct(_33321_imp.ptr(), _32029_ident, _32041_binded);
				if (((_32217_s != nullptr) && _1c636ad65_isAccessibleDefine(_self_, (*(_32217_s))._field_Public, (*(_32217_s))._field_Token))) {
					return _32217_s;;
				};
			}
			_iter_next_1ac91d695:;
			++it;
			goto _iter_begin_1ac91d695;
		}
		_iter_end_1ac91d695:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c62cebec_Fn> _1c6369050_FindFn(_1c63679bb_Sema* _self_, jule::Str _35125_ident, jule::Bool _35137_binded) {
	jule::Ptr<_1c62cebec_Fn> _35317_f = _1c6344d2d_findFnInPackage(&((*(_self_))._field_files), &(_35125_ident), _35137_binded);;
	if ((_35317_f != nullptr)) {
		return _35317_f;;
	};
	if ((!(_1c6364ab7_IsPub(&(_35125_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9215ee:;
		if (it != expr_end) {
			jule::Ptr<_1c63469de_ImportInfo> _36421_imp = *it;
			{
				if ((!(_1c6365a0d_impIsLookupable(&(_36421_imp), &(_35125_ident))))) {
					goto _iter_next_1ac9215ee;
				};
				_35317_f=_1c63480b7_FindFn(_36421_imp.ptr(), _35125_ident, _35137_binded);
				if (((_35317_f != nullptr) && _1c636ad65_isAccessibleDefine(_self_, (*(_35317_f))._field_Public, (*(_35317_f))._field_Token))) {
					return _35317_f;;
				};
			}
			_iter_next_1ac9215ee:;
			++it;
			goto _iter_begin_1ac9215ee;
		}
		_iter_end_1ac9215ee:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c62e2e96_Trait> _1c6369391_FindTrait(_1c63679bb_Sema* _self_, jule::Str _38328_ident) {
	jule::Ptr<_1c62e2e96_Trait> _38517_t = _1c634516e_findTraitInPackage(&((*(_self_))._field_files), &(_38328_ident));;
	if ((_38517_t != nullptr)) {
		return _38517_t;;
	};
	if ((!(_1c6364ab7_IsPub(&(_38328_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac924305:;
		if (it != expr_end) {
			jule::Ptr<_1c63469de_ImportInfo> _39621_imp = *it;
			{
				if ((!(_1c6365a0d_impIsLookupable(&(_39621_imp), &(_38328_ident))))) {
					goto _iter_next_1ac924305;
				};
				_38517_t=_1c6348408_FindTrait(_39621_imp.ptr(), _38328_ident);
				if (((_38517_t != nullptr) && _1c636ad65_isAccessibleDefine(_self_, (*(_38517_t))._field_Public, (*(_38517_t))._field_Token))) {
					return _38517_t;;
				};
			}
			_iter_next_1ac924305:;
			++it;
			goto _iter_begin_1ac924305;
		}
		_iter_end_1ac924305:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c62e5691_Enum> _1c63696d2_FindEnum(_1c63679bb_Sema* _self_, jule::Str _41527_ident) {
	jule::Ptr<_1c62e5691_Enum> _41717_e = _1c63454e3_findEnumInPackage(&((*(_self_))._field_files), &(_41527_ident));;
	if ((_41717_e != nullptr)) {
		return _41717_e;;
	};
	if ((!(_1c6364ab7_IsPub(&(_41527_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac92700b:;
		if (it != expr_end) {
			jule::Ptr<_1c63469de_ImportInfo> _42821_imp = *it;
			{
				if ((!(_1c6365a0d_impIsLookupable(&(_42821_imp), &(_41527_ident))))) {
					goto _iter_next_1ac92700b;
				};
				_41717_e=_1c6348749_FindEnum(_42821_imp.ptr(), _41527_ident);
				if (((_41717_e != nullptr) && _1c636ad65_isAccessibleDefine(_self_, (*(_41717_e))._field_Public, (*(_41717_e))._field_Token))) {
					return _41717_e;;
				};
			}
			_iter_next_1ac92700b:;
			++it;
			goto _iter_begin_1ac92700b;
		}
		_iter_end_1ac92700b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c62e6d9b_TypeEnum> _1c6369a23_FindTypeEnum(_1c63679bb_Sema* _self_, jule::Str _44731_ident) {
	jule::Ptr<_1c62e6d9b_TypeEnum> _44917_e = _1c6345867_findTypeEnumInPackage(&((*(_self_))._field_files), &(_44731_ident));;
	if ((_44917_e != nullptr)) {
		return _44917_e;;
	};
	if ((!(_1c6364ab7_IsPub(&(_44731_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac929c12:;
		if (it != expr_end) {
			jule::Ptr<_1c63469de_ImportInfo> _46021_imp = *it;
			{
				if ((!(_1c6365a0d_impIsLookupable(&(_46021_imp), &(_44731_ident))))) {
					goto _iter_next_1ac929c12;
				};
				_44917_e=_1c6348a8a_FindTypeEnum(_46021_imp.ptr(), _44731_ident);
				if (((_44917_e != nullptr) && _1c636ad65_isAccessibleDefine(_self_, (*(_44917_e))._field_Public, (*(_44917_e))._field_Token))) {
					return _44917_e;;
				};
			}
			_iter_next_1ac929c12:;
			++it;
			goto _iter_begin_1ac929c12;
		}
		_iter_end_1ac929c12:;
	};
	return nullptr;;
}



inline jule::Bool _1c6369e30_isFlag(_1c63679bb_Sema* _self_, jule::I64 _47621_flags) {
	return (((*(_self_))._field_flags & _47621_flags) == _47621_flags);;
}



inline void _1c636a1d8_setCurrentFile(_1c63679bb_Sema* _self_, jule::Ptr<_1c63d8135_SymbolTable> _47837_f) {
	(*(_self_))._field_file=_47837_f;
}



inline void _1c636a606_pushErr(_1c63679bb_Sema* _self_, jule::Ptr<_1c6283a3b_Token> _48026_token, jule::Str _48041_fmt, jule::Slice<jule::Any> _48054_args) {
	{ jule::Slice<_221968cb9_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1c6365689_compilerErr(&(_48026_token), true, _48041_fmt, _48054_args)); };
}



inline void _1c636a969_pushSuggestion(_1c63679bb_Sema* _self_, jule::Str _48533_fmt, jule::Slice<jule::Any> _48546_args) {
	{
		_1c6366bb8_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _48533_fmt, _48546_args);
	};
}



inline jule::Bool _1c636ad65_isAccessibleDefine(_1c63679bb_Sema* _self_, jule::Bool _49033_public, jule::Ptr<_1c6283a3b_Token> _49047_token) {
	return ((_49033_public || ((*(_49047_token))._field_File == nullptr)) || (_1c6289976_Dir((*((*(_self_))._field_file))._field_File.ptr()) == _1c6289976_Dir((*(_49047_token))._field_File.ptr())));;
}



inline jule::Bool _1c636b31b_isDuplicatedIdent(_1c63679bb_Sema* _self_, jule::Uintptr _49732_itself, jule::Str* _49750_ident, jule::Bool _49762_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac931796:;
		if (it != expr_end) {
			jule::Ptr<_1c63d8135_SymbolTable> *_49816_f = it;
			{
				if (_1c63db655_isDuplicatedIdent((*(_49816_f)).ptr(), _49732_itself, _49750_ident, _49762_binded)) {
					return true;;
				};
				{
					auto expr = &((*((*(_49816_f))))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac93218c:;
					if (it != expr_end) {
						jule::Ptr<_1c63469de_ImportInfo> *_50320_imp = it;
						{
							{
								auto expr = &((*((*(_50320_imp))))._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ac93308e:;
								if (it != expr_end) {
									jule::Ptr<_1c6283a3b_Token> *_50424_selected = it;
									{
										if (((*((*(_50424_selected))))._field_Kind == (*(_49750_ident)))) {
											return true;;
										};
									}
									_iter_next_1ac93308e:;
									++it;
									goto _iter_begin_1ac93308e;
								}
								_iter_end_1ac93308e:;
							};
						}
						_iter_next_1ac93218c:;
						++it;
						goto _iter_begin_1ac93218c;
					}
					_iter_end_1ac93218c:;
				};
			}
			_iter_next_1ac931796:;
			++it;
			goto _iter_begin_1ac931796;
		}
		_iter_end_1ac931796:;
	};
	return false;;
}



inline void _1c636b67e_checkDirectives(jule::Ptr<_1c63679bb_Sema> _self_, jule::Slice<jule::Ptr<_1c6298666_Directive>>* _51440_d, jule::Any _51466_o) {
	_1c6340565_directiveChecker _51517_dc = _1c6340565_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1c6298666_Directive>>>)(_51440_d)), ._field_o=_51466_o};;
	_1c63419ea_check(&_51517_dc);
}



inline jule::Bool _1c636bb35_checkGenericQuantity(_1c63679bb_Sema* _self_, jule::I64 _52339_required, jule::I64 _52354_given, jule::Ptr<_1c6283a3b_Token> _52366_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_52339_required == 0LL) && (_52354_given > 0LL))) {
			_case_begin_1ac935888:;
			{
				_1c636a606_pushErr(_self_, _52366_token, jule::Str("type have not generics but instantiate like generics", 52), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_52339_required > 0LL) && (_52354_given == 0LL))) {
			_case_begin_1ac935910:;
			{
				_1c636a606_pushErr(_self_, _52366_token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52339_required < _52354_given)) {
			_case_begin_1ac935987:;
			{
				_1c636a606_pushErr(_self_, _52366_token, jule::Str("overflow generics", 17), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52339_required > _52354_given)) {
			_case_begin_1ac935ba7:;
			{
				_1c636a606_pushErr(_self_, _52366_token, jule::Str("missing generics", 16), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ac93579a:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ac9356ce:;
	};
}



inline jule::Bool _1c636c031_isDuplicatedImportSelection(_1c63679bb_Sema* _self_, jule::Uintptr _54242_itself, jule::Str* _54260_ident) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac937e2e:;
		if (it != expr_end) {
			jule::Ptr<_1c63469de_ImportInfo> *_54316_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_54316_imp))) == _54242_itself)) {
					goto _iter_end_1ac937e2e;
				};
				if (_1c6349371_existIdent((*(_54316_imp)).ptr(), (*(_54260_ident)))) {
					return true;;
				};
			}
			_iter_next_1ac937e2e:;
			++it;
			goto _iter_begin_1ac937e2e;
		}
		_iter_end_1ac937e2e:;
	};
	return false;;
}



inline jule::Any _1c636c42c_getImportDef(_1c63679bb_Sema* _self_, jule::Str* _55528_ident, jule::Ptr<_1c63469de_ImportInfo>* _55545_imp) {
	if ((_1c650d7cc_findPackageBuiltinDef(&((*((*(_55545_imp))))._field_LinkPath), _55528_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type3);;
	};
	{
		auto expr = &((*((*((*(_55545_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac939d21:;
		if (it != expr_end) {
			jule::Ptr<_1c63d8135_SymbolTable> _55921_f = *it;
			{
				;
				jule::Any _56221_def = _1c63db19e_defByIdent(_55921_f.ptr(), _55528_ident, false);;
				if ((_56221_def != nullptr)) {
					return _56221_def;;
				};
			}
			_iter_next_1ac939d21:;
			++it;
			goto _iter_begin_1ac939d21;
		}
		_iter_end_1ac939d21:;
	};
	return nullptr;;
}



inline jule::Bool _1ac941c4b_checkImportSelection(_1c63679bb_Sema* _self_, jule::Ptr<_1c6283a3b_Token>* _57043_ident, jule::Ptr<_1c6389da6_Var>* _57059_s) {
	if ((!(_1c636ad65_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1c636a606_pushErr(_self_, (*(_57043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1c636a969_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c6345da6_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1c636a606_pushErr(_self_, (*(_57043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ac945d93_checkImportSelection(_1c63679bb_Sema* _self_, jule::Ptr<_1c6283a3b_Token>* _57043_ident, jule::Ptr<_1c641c730_TypeAlias>* _57059_s) {
	if ((!(_1c636ad65_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1c636a606_pushErr(_self_, (*(_57043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1c636a969_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c6345da6_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1c636a606_pushErr(_self_, (*(_57043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ac949e96_checkImportSelection(_1c63679bb_Sema* _self_, jule::Ptr<_1c6283a3b_Token>* _57043_ident, jule::Ptr<_1c62b9d3b_Struct>* _57059_s) {
	if ((!(_1c636ad65_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1c636a606_pushErr(_self_, (*(_57043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1c636a969_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c6345da6_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1c636a606_pushErr(_self_, (*(_57043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ac94e385_checkImportSelection(_1c63679bb_Sema* _self_, jule::Ptr<_1c6283a3b_Token>* _57043_ident, jule::Ptr<_1c62e2e96_Trait>* _57059_s) {
	if ((!(_1c636ad65_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1c636a606_pushErr(_self_, (*(_57043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1c636a969_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c6345da6_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1c636a606_pushErr(_self_, (*(_57043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ac9534aa_checkImportSelection(_1c63679bb_Sema* _self_, jule::Ptr<_1c6283a3b_Token>* _57043_ident, jule::Ptr<_1c62e5691_Enum>* _57059_s) {
	if ((!(_1c636ad65_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1c636a606_pushErr(_self_, (*(_57043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1c636a969_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c6345da6_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1c636a606_pushErr(_self_, (*(_57043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ac9575d0_checkImportSelection(_1c63679bb_Sema* _self_, jule::Ptr<_1c6283a3b_Token>* _57043_ident, jule::Ptr<_1c62e6d9b_TypeEnum>* _57059_s) {
	if ((!(_1c636ad65_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1c636a606_pushErr(_self_, (*(_57043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1c636a969_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c6345da6_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1c636a606_pushErr(_self_, (*(_57043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ac95b6d3_checkImportSelection(_1c63679bb_Sema* _self_, jule::Ptr<_1c6283a3b_Token>* _57043_ident, jule::Ptr<_1c62cebec_Fn>* _57059_s) {
	if ((!(_1c636ad65_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1c636a606_pushErr(_self_, (*(_57043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1c636a969_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c6345da6_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1c636a606_pushErr(_self_, (*(_57043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}



inline jule::Bool _1c636cb69_checkImportSelectedSelections(_1c63679bb_Sema* _self_, jule::Ptr<_1c63469de_ImportInfo>* _58453_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_58453_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac93c164:;
		if (it != expr_end) {
			jule::Ptr<_1c6283a3b_Token> _58616_ident = *it;
			{
				if ((*(_58616_ident))._field_Kind.equal("self", 4)) {
					goto _iter_next_1ac93c164;
				};
				if (_1c636c031_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_58453_imp)))), &((*(_58616_ident))._field_Kind))) {
					_1c636a606_pushErr(_self_, _58616_ident, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_58616_ident))._field_Kind, &__jule_any_type4)}));
					_1c636a969_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1ac93c164;
				};
				jule::Any _59821_def = _1c636c42c_getImportDef(_self_, &((*(_58616_ident))._field_Kind), _58453_imp);;
				{
					auto &_match_expr{ _59821_def };
					
					if (_match_expr.type == &__jule_any_type3) {
						_case_begin_1ac93e8d6:;
						{
							goto _iter_next_1ac93c164;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1ac93ee58:;
						{
							jule::Ptr<_1c6389da6_Var> _60425_v = _59821_def.cast_ptr<_1c6389da6_Var>(&__jule_any_type8);;
							__jule_func_result=(_1ac941c4b_checkImportSelection(_self_, &(_58616_ident), &(_60425_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1ac93eebe:;
						{
							jule::Ptr<_1c641c730_TypeAlias> _60725_ta = _59821_def.cast_ptr<_1c641c730_TypeAlias>(&__jule_any_type66);;
							__jule_func_result=(_1ac945d93_checkImportSelection(_self_, &(_58616_ident), &(_60725_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1ac940a80:;
						{
							jule::Ptr<_1c62b9d3b_Struct> _61025_s = _59821_def.cast_ptr<_1c62b9d3b_Struct>(&__jule_any_type65);;
							__jule_func_result=(_1ac949e96_checkImportSelection(_self_, &(_58616_ident), &(_61025_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1ac940ae6:;
						{
							jule::Ptr<_1c62e2e96_Trait> _61325_t = _59821_def.cast_ptr<_1c62e2e96_Trait>(&__jule_any_type10);;
							__jule_func_result=(_1ac94e385_checkImportSelection(_self_, &(_58616_ident), &(_61325_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type67) {
						_case_begin_1ac940b5c:;
						{
							jule::Ptr<_1c62e5691_Enum> _61625_e = _59821_def.cast_ptr<_1c62e5691_Enum>(&__jule_any_type67);;
							__jule_func_result=(_1ac9534aa_checkImportSelection(_self_, &(_58616_ident), &(_61625_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type68) {
						_case_begin_1ac940bc3:;
						{
							jule::Ptr<_1c62e6d9b_TypeEnum> _61925_e = _59821_def.cast_ptr<_1c62e6d9b_TypeEnum>(&__jule_any_type68);;
							__jule_func_result=(_1ac9575d0_checkImportSelection(_self_, &(_58616_ident), &(_61925_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type64) {
						_case_begin_1ac940c39:;
						{
							jule::Ptr<_1c62cebec_Fn> _62225_f = _59821_def.cast_ptr<_1c62cebec_Fn>(&__jule_any_type64);;
							__jule_func_result=(_1ac95b6d3_checkImportSelection(_self_, &(_58616_ident), &(_62225_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_1ac93ed48:;
						{
							_1c636a606_pushErr(_self_, _58616_ident, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_58616_ident))._field_Kind, &__jule_any_type4)}));
							__jule_func_result=false;
							goto _iter_next_1ac93c164;
						}
					}
					_match_end_1ac93ece3:;
				};
			}
			_iter_next_1ac93c164:;
			++it;
			goto _iter_begin_1ac93c164;
		}
		_iter_end_1ac93c164:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ac960dad_checkImportsAllSelectionsFromCollection(_1c63679bb_Sema* _self_, jule::Slice<jule::Ptr<_1c6389da6_Var>>* _63362_s, jule::Ptr<_1c6283a3b_Token>* _63371_et) {
	jule::Bool _63417_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9629a3:;
		if (it != expr_end) {
			jule::Ptr<_1c6389da6_Var> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63417_ok=(_1ac941c4b_checkImportSelection(_self_, _63371_et, _63516_d) && _63417_ok);
				};
			}
			_iter_next_1ac9629a3:;
			++it;
			goto _iter_begin_1ac9629a3;
		}
		_iter_end_1ac9629a3:;
	};
	return _63417_ok;;
}

inline jule::Bool _1ac962002_checkImportsAllSelectionsFromCollection(_1c63679bb_Sema* _self_, jule::Slice<jule::Ptr<_1c641c730_TypeAlias>>* _63362_s, jule::Ptr<_1c6283a3b_Token>* _63371_et) {
	jule::Bool _63417_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac965577:;
		if (it != expr_end) {
			jule::Ptr<_1c641c730_TypeAlias> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63417_ok=(_1ac945d93_checkImportSelection(_self_, _63371_et, _63516_d) && _63417_ok);
				};
			}
			_iter_next_1ac965577:;
			++it;
			goto _iter_begin_1ac965577;
		}
		_iter_end_1ac965577:;
	};
	return _63417_ok;;
}

inline jule::Bool _1aa146de3_checkImportsAllSelectionsFromCollection(_1c63679bb_Sema* _self_, jule::Slice<jule::Ptr<_1c62b9d3b_Struct>>* _63362_s, jule::Ptr<_1c6283a3b_Token>* _63371_et) {
	jule::Bool _63417_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9661e3:;
		if (it != expr_end) {
			jule::Ptr<_1c62b9d3b_Struct> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63417_ok=(_1ac949e96_checkImportSelection(_self_, _63371_et, _63516_d) && _63417_ok);
				};
			}
			_iter_next_1ac9661e3:;
			++it;
			goto _iter_begin_1ac9661e3;
		}
		_iter_end_1ac9661e3:;
	};
	return _63417_ok;;
}

inline jule::Bool _1ac08e18a_checkImportsAllSelectionsFromCollection(_1c63679bb_Sema* _self_, jule::Slice<jule::Ptr<_1c62cebec_Fn>>* _63362_s, jule::Ptr<_1c6283a3b_Token>* _63371_et) {
	jule::Bool _63417_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac090c5d:;
		if (it != expr_end) {
			jule::Ptr<_1c62cebec_Fn> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63417_ok=(_1ac95b6d3_checkImportSelection(_self_, _63371_et, _63516_d) && _63417_ok);
				};
			}
			_iter_next_1ac090c5d:;
			++it;
			goto _iter_begin_1ac090c5d;
		}
		_iter_end_1ac090c5d:;
	};
	return _63417_ok;;
}

inline jule::Bool _1ac090301_checkImportsAllSelectionsFromCollection(_1c63679bb_Sema* _self_, jule::Slice<jule::Ptr<_1c62e2e96_Trait>>* _63362_s, jule::Ptr<_1c6283a3b_Token>* _63371_et) {
	jule::Bool _63417_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac093b2e:;
		if (it != expr_end) {
			jule::Ptr<_1c62e2e96_Trait> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63417_ok=(_1ac94e385_checkImportSelection(_self_, _63371_et, _63516_d) && _63417_ok);
				};
			}
			_iter_next_1ac093b2e:;
			++it;
			goto _iter_begin_1ac093b2e;
		}
		_iter_end_1ac093b2e:;
	};
	return _63417_ok;;
}

inline jule::Bool _1ac0931c2_checkImportsAllSelectionsFromCollection(_1c63679bb_Sema* _self_, jule::Slice<jule::Ptr<_1c62e5691_Enum>>* _63362_s, jule::Ptr<_1c6283a3b_Token>* _63371_et) {
	jule::Bool _63417_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac096a00:;
		if (it != expr_end) {
			jule::Ptr<_1c62e5691_Enum> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63417_ok=(_1ac9534aa_checkImportSelection(_self_, _63371_et, _63516_d) && _63417_ok);
				};
			}
			_iter_next_1ac096a00:;
			++it;
			goto _iter_begin_1ac096a00;
		}
		_iter_end_1ac096a00:;
	};
	return _63417_ok;;
}

inline jule::Bool _1ac096093_checkImportsAllSelectionsFromCollection(_1c63679bb_Sema* _self_, jule::Slice<jule::Ptr<_1c62e6d9b_TypeEnum>>* _63362_s, jule::Ptr<_1c6283a3b_Token>* _63371_et) {
	jule::Bool _63417_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0999e2:;
		if (it != expr_end) {
			jule::Ptr<_1c62e6d9b_TypeEnum> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63417_ok=(_1ac9575d0_checkImportSelection(_self_, _63371_et, _63516_d) && _63417_ok);
				};
			}
			_iter_next_1ac0999e2:;
			++it;
			goto _iter_begin_1ac0999e2;
		}
		_iter_end_1ac0999e2:;
	};
	return _63417_ok;;
}



inline jule::Bool _1c636d3a6_checkImportAllSelections(_1c63679bb_Sema* _self_, jule::Ptr<_1c63469de_ImportInfo>* _64344_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*((*(_64344_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac940dd2:;
		if (it != expr_end) {
			jule::Ptr<_1c63d8135_SymbolTable> *_64516_file = it;
			{
				__jule_func_result=(_1ac960dad_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Vars), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ac962002_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_TypeAliases), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1aa146de3_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Structs), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ac08e18a_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Funcs), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ac090301_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Traits), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ac0931c2_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Enums), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ac096093_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_TypeEnums), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
			}
			_iter_next_1ac940dd2:;
			++it;
			goto _iter_begin_1ac940dd2;
		}
		_iter_end_1ac940dd2:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c636d6e7_checkImportSelections(_1c63679bb_Sema* _self_, jule::Ptr<_1c63469de_ImportInfo>* _65745_imp) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_65745_imp))))._field_Selected.len() > 0LL)) {
		__jule_func_result = _1c636cb69_checkImportSelectedSelections(_self_, _65745_imp);
		return __jule_func_result;;
	} else if ((*((*(_65745_imp))))._field_ImportAll) {
		__jule_func_result = _1c636d3a6_checkImportAllSelections(_self_, _65745_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c636da38_isUseAliasDuplication(_1c63679bb_Sema* _self_, jule::Ptr<_1c63469de_ImportInfo>* _66641_imp) {
	if (((*((*(_66641_imp))))._field_Alias.len() == 0LL)) {
		return false;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac09c96d:;
		if (it != expr_end) {
			jule::Ptr<_1c63469de_ImportInfo> _67121_imp2 = *it;
			{
				if ((_67121_imp2 == (*(_66641_imp)))) {
					goto _iter_end_1ac09c96d;
				};
				if (((*(_67121_imp2))._field_Alias == (*((*(_66641_imp))))._field_Alias)) {
					return true;;
				};
				if ((((*(_67121_imp2))._field_Ident == (*(_67121_imp2))._field_LinkPath) && ((*(_67121_imp2))._field_Ident == (*((*(_66641_imp))))._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1ac09c96d:;
			++it;
			goto _iter_begin_1ac09c96d;
		}
		_iter_end_1ac09c96d:;
	};
	return false;;
}



inline jule::Bool _1c636dd79_checkImport(_1c63679bb_Sema* _self_, jule::Ptr<_1c63469de_ImportInfo>* _68635_imp) {
	if (((*((*(_68635_imp))))._field_Binded || ((*((*((*(_68635_imp))))._field_Package))._field_Files.len() == 0LL))) {
		return true;;
	};
	if (_1c636da38_isUseAliasDuplication(_self_, _68635_imp)) {
		_1c636a606_pushErr(_self_, (*((*(_68635_imp))))._field_Token, jule::Str("identifier duplication: @ is already used for another use declaration above", 75), jule::Slice<jule::Any>::make({jule::Any((*((*(_68635_imp))))._field_Alias, &__jule_any_type4)}));
		_1c636a969_pushSuggestion(_self_, jule::Str("rename alias for this use declaration to avoid duplication", 58), jule::Slice<jule::Any>());
	};
	if ((!((*((*(_68635_imp))))._field_Duplicate))) {
		jule::Ptr<_1c63679bb_Sema> _69721_sema = jule::new_ptr<_1c63679bb_Sema>(_1c63679bb_Sema{._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_1c63863d0_check(_69721_sema, &((*((*((*(_68635_imp))))._field_Package))._field_Files));
		if (((*(_69721_sema))._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append((*(_69721_sema))._field_errors);;
			(*(_69721_sema))._field_errors=nullptr;
			return false;;
		};
	};
	return _1c636d6e7_checkImportSelections(_self_, _68635_imp);;
}



inline void _1c636e077_checkImports(_1c63679bb_Sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0a4766:;
		if (it != expr_end) {
			jule::Ptr<_1c63d8135_SymbolTable> _71221_file = *it;
			{
				_1c636a1d8_setCurrentFile(_self_, _71221_file);
				{
					auto expr = &((*(_71221_file))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac0a5426:;
					if (it != expr_end) {
						jule::Ptr<_1c63469de_ImportInfo> _71425_imp = *it;
						{
							jule::Bool _71521_ok = _1c636dd79_checkImport(_self_, &(_71425_imp));;
							if ((!(_71521_ok))) {
								return;;
							};
						}
						_iter_next_1ac0a5426:;
						++it;
						goto _iter_begin_1ac0a5426;
					}
					_iter_end_1ac0a5426:;
				};
			}
			_iter_next_1ac0a4766:;
			++it;
			goto _iter_begin_1ac0a4766;
		}
		_iter_end_1ac0a4766:;
	};
}



inline void _1c636e275_implFileImpls(jule::Ptr<_1c63679bb_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0a536b:;
		if (it != expr_end) {
			jule::Ptr<_1c631a320_Impl> _72521_imp = *it;
			{
				_1c637c98c_implImpl(_self_, &(_72521_imp));
			}
			_iter_next_1ac0a536b:;
			++it;
			goto _iter_begin_1ac0a536b;
		}
		_iter_end_1ac0a536b:;
	};
}



inline void _1c636e473_implImpls(jule::Ptr<_1c63679bb_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0a7082:;
		if (it != expr_end) {
			jule::Ptr<_1c63d8135_SymbolTable> _73121_file = *it;
			{
				_1c636a1d8_setCurrentFile(_self_.ptr(), _73121_file);
				_1c636e275_implFileImpls(_self_);
			}
			_iter_next_1ac0a7082:;
			++it;
			goto _iter_begin_1ac0a7082;
		}
		_iter_end_1ac0a7082:;
	};
}



inline void _1c636e671_checkEnums(jule::Ptr<_1c63679bb_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0a7cca:;
		if (it != expr_end) {
			jule::Ptr<_1c63d8135_SymbolTable> _73821_file = *it;
			{
				_1c636a1d8_setCurrentFile(_self_.ptr(), _73821_file);
				{
					
					if ((!(_1c6378dc8_checkEnumDecls(_self_)))) {
						_case_begin_1ac0a955c:;
					}
					else if ((!(_1c637915e_checkTypeEnumDecls(_self_)))) {
						_case_begin_1ac0a95d4:;
					}
					_match_end_1ac0a94c4:;
				};
			}
			_iter_next_1ac0a7cca:;
			++it;
			goto _iter_begin_1ac0a7cca;
		}
		_iter_end_1ac0a7cca:;
	};
}



inline void _1c636e86e_checkFileInherits(jule::Ptr<_1c63679bb_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0a8b77:;
		if (it != expr_end) {
			jule::Ptr<_1c62e2e96_Trait> _74821_t = *it;
			{
				jule::Bool _74917_ok = _1c637aa23__checkTraitDeclInherits(_self_, &(_74821_t));;
				if ((!(_74917_ok))) {
					return;;
				};
			}
			_iter_next_1ac0a8b77:;
			++it;
			goto _iter_begin_1ac0a8b77;
		}
		_iter_end_1ac0a8b77:;
	};
}



inline void _1c636ea6c_checkInherits(jule::Ptr<_1c63679bb_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0aa7d3:;
		if (it != expr_end) {
			jule::Ptr<_1c63d8135_SymbolTable> _75721_file = *it;
			{
				_1c636a1d8_setCurrentFile(_self_.ptr(), _75721_file);
				_1c636e86e_checkFileInherits(_self_);
			}
			_iter_next_1ac0aa7d3:;
			++it;
			goto _iter_begin_1ac0aa7d3;
		}
		_iter_end_1ac0aa7d3:;
	};
}



inline _1c64303d0_typeChecker _1c6370023_typeChecker(jule::Ptr<_1c63679bb_Sema> _self_, jule::Trait<_1c643d058_Lookup> _76335_l, jule::Slice<jule::Ptr<_1c641c730_TypeAlias>> _76350_generics, jule::Ptr<_1c642e3e0_referencer> _76413_referencer) {
	_1c64303d0_typeChecker _76517_tc = _1c64303d0_typeChecker{._field_s=_self_, ._field_rootLookup=_76335_l, ._field_lookup=_76335_l, ._field_referencer=_76413_referencer, ._field_useGenerics=_76350_generics, };;
	{
		auto &_match_expr{ _76335_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1ac0ad671:;
			{
				jule::Ptr<_1c6327a58_scopeChecker> _77421_hard = _1c632add0_getHardRoot(_76335_l.cast_ptr<_1c6327a58_scopeChecker>(0));;
				_76517_tc._field_refers=(*((*(_77421_hard))._field_owner))._field_Refers;
			}
		}
		_match_end_1ac0ad61b:;
	};
	if (((_76413_referencer != nullptr) && ((*(_76413_referencer))._field_refs != nullptr))) {
		{
			auto &_match_expr{ (*(_76413_referencer))._field_owner };
			
			if (_match_expr.type == &__jule_any_type66) {
				_case_begin_1ac0aeed0:;
				{
					_76517_tc._field_ownerAlias=(*(_76413_referencer))._field_owner.cast_ptr<_1c641c730_TypeAlias>(&__jule_any_type66);
				}
			}
			_match_end_1ac0aee7a:;
		};
	};
	return _76517_tc;;
}



inline jule::Ptr<_1c641d522_TypeKind> _1c6370584_buildTypeWithRefers(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c6299249_TypeDecl>* _79044_t, jule::Trait<_1c643d058_Lookup> _79067_l, jule::Slice<jule::Ptr<_1c641c730_TypeAlias>> _79113_generics, jule::Ptr<_1c642e3e0_referencer> _79141_referencer) {
	return ({ auto _wrap_copy = _1c6370023_typeChecker(_self_, _79067_l, _79113_generics, _79141_referencer); _1c6437a7a_checkDecl(&_wrap_copy, _79044_t); });;
}



inline jule::Bool _1c6370ae5_checkTypeWithRefers(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c64256e4_TypeSymbol>* _79744_t, jule::Trait<_1c643d058_Lookup> _79764_l, jule::Slice<jule::Ptr<_1c641c730_TypeAlias>> _79813_generics, jule::Ptr<_1c642e3e0_referencer> _79841_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1c6425a68_checked((*(_79744_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_79744_t))))._field_Kind=_1c6370584_buildTypeWithRefers(_self_, &((*((*(_79744_t))))._field_Decl), _79764_l, _79813_generics, _79841_referencer);
	__jule_func_result = _1c6425a68_checked((*(_79744_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1c63182da_constraintChecker> _1c6370d7b_constraintChecker(jule::Ptr<_1c63679bb_Sema> _self_) {
	return jule::new_ptr<_1c63182da_constraintChecker>(_1c63182da_constraintChecker{._field_s=_self_, });;
}



inline jule::Bool _1c6371277_checkType(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c64256e4_TypeSymbol>* _81234_t, jule::Trait<_1c643d058_Lookup> _81254_l) {
	return _1c6370ae5_checkTypeWithRefers(_self_, _81234_t, _81254_l, nullptr, nullptr);;
}



inline jule::Ptr<_1c641d522_TypeKind> _1c637172d_buildTypeWithGenerics(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c6299249_TypeDecl>* _81846_t, jule::Slice<jule::Ptr<_1c641c730_TypeAlias>> _81913_generics, jule::Ptr<_1c62d5c9c_ReferenceStack> _81941_refers) {
	jule::Ptr<_1c64303d0_typeChecker> _82017_tc = jule::new_ptr<_1c64303d0_typeChecker>(_1c64303d0_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1c643d058_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1c643d058_Lookup>(_self_, 3), ._field_refers=_81941_refers, ._field_useGenerics=_81913_generics, });;
	return _1c6437a7a_checkDecl(_82017_tc.ptr(), _81846_t);;
}



inline jule::Ptr<_1c641d522_TypeKind> _1c6371db0_selectType(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c6299249_TypeDecl>* _83635_t) {
	jule::Ptr<_1c64303d0_typeChecker> _83717_tc = jule::new_ptr<_1c64303d0_typeChecker>(_1c64303d0_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1c643d058_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1c643d058_Lookup>(_self_, 3), ._field_selection=true, });;
	return _1c6437a7a_checkDecl(_83717_tc.ptr(), _83635_t);;
}



inline jule::Ptr<_1c63e004e_Eval> _1c6372366_evalpd(jule::Ptr<_1c63679bb_Sema> _self_, jule::Trait<_1c643d058_Lookup> _84830_l, jule::Ptr<_1c641d522_TypeKind> _84845_p, jule::Ptr<_1c6389da6_Var> _84863_owner) {
	jule::Ptr<_1c63e004e_Eval> _84917_e = jule::new_ptr<_1c63e004e_Eval>(_1c63e004e_Eval{._field_s=_self_, ._field_lookup=_84830_l, ._field_owner=_84863_owner, });;
	{
		auto &_match_expr{ _84830_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1ac0b935d:;
			{
				(*(_84917_e))._field_unsafety=_1c6329e12_isUnsafe(_84830_l.cast_ptr<_1c6327a58_scopeChecker>(0));
			}
		}
		_match_end_1ac0b9308:;
	};
	(*(_84917_e))._field_prefix=_84845_p;
	return _84917_e;;
}



inline jule::Ptr<_1c63e004e_Eval> _1c6372762_evalp(jule::Ptr<_1c63679bb_Sema> _self_, jule::Trait<_1c643d058_Lookup> _86329_l, jule::Ptr<_1c641d522_TypeKind> _86344_p) {
	return _1c6372366_evalpd(_self_, _86329_l, _86344_p, nullptr);;
}



inline jule::Ptr<_1c63e004e_Eval> _1c6372aa3_eval(jule::Ptr<_1c63679bb_Sema> _self_, jule::Trait<_1c643d058_Lookup> _86828_l) {
	return _1c6372762_evalp(_self_, _86828_l, nullptr);;
}



inline jule::Bool _1c6373114_checkAssignType(jule::Ptr<_1c63679bb_Sema> _self_, jule::Bool _87235_destIsRef, jule::Ptr<_1c641d522_TypeKind>* _87257_dest, jule::Ptr<_1c63dd35a_Data>* _87314_d, jule::Ptr<_1c6283a3b_Token> _87328_errorToken) {
	if ((*((*(_87314_d))))._field_Decl) {
		_1c636a606_pushErr(_self_.ptr(), _87328_errorToken, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return false;;
	};
	if (_87235_destIsRef) {
		if ((!(_1c641dc2b_Equal((*(_87257_dest)), (*((*(_87314_d))))._field_Kind)))) {
			_1c636a606_pushErr(_self_.ptr(), _87328_errorToken, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_87257_dest)).ptr()), &__jule_any_type4),jule::Any(_1c641d8da_Str((*((*(_87314_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
	} else {
		jule::Ptr<_1c63c6e26_assignTypeChecker> _88421_atc = jule::new_ptr<_1c63c6e26_assignTypeChecker>(_1c63c6e26_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_87257_dest)), ._field_d=(*(_87314_d)), ._field_errorToken=_87328_errorToken});;
		jule::Bool _89017_ok = _1c63c818b_check(_88421_atc.ptr());;
		if ((!(_89017_ok))) {
			return false;;
		};
	};
	if (((!(_1c63ddc2e_IsConst((*(_87314_d)).ptr()))) || (_1c6420b73_Prim((*(_87257_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _90017_kind = (*(_1c6420b73_Prim((*(_87257_dest)).ptr())))._field_Kind;;
	{
		
		if (_1dc25e2b4_IsSigInt(_90017_kind)) {
			_case_begin_1ac0c1ad5:;
			{
				_1dc26350a_SetI64((*((*(_87314_d))))._field_Constant.ptr(), static_cast<jule::I64>(_1dc262c35_AsI64((*((*(_87314_d))))._field_Constant.ptr())));
			}
		}
		else if (_1dc25e5c2_IsUnsigInt(_90017_kind)) {
			_case_begin_1ac0c1b5c:;
			{
				_1dc2637b3_SetU64((*((*(_87314_d))))._field_Constant.ptr(), static_cast<jule::U64>(_1dc262ebb_AsU64((*((*(_87314_d))))._field_Constant.ptr())));
			}
		}
		else if (_1dc25ebcc_IsFloat(_90017_kind)) {
			_case_begin_1ac0c1bd4:;
			{
				_1dc2640cc_SetF64((*((*(_87314_d))))._field_Constant.ptr(), static_cast<jule::F64>(_1dc263252_AsF64((*((*(_87314_d))))._field_Constant.ptr())));
			}
		}
		_match_end_1ac0c1a19:;
	};
	return true;;
}



inline jule::Bool _1c63735ba_checkTypeCompatibility(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c641d522_TypeKind>* _91447_dest, jule::Ptr<_1c641d522_TypeKind>* _91514_src, jule::Ptr<_1c6283a3b_Token>* _91535_errorToken) {
	if (((*(_91514_src)) == nullptr)) {
		_1c636a606_pushErr(_self_.ptr(), (*(_91535_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_91447_dest)).ptr()), &__jule_any_type4),jule::Any(_1c641d8da_Str((*(_91514_src)).ptr()), &__jule_any_type4)}));
		return false;;
	};
	if ((_1c6422999_Tup((*(_91514_src)).ptr()) != nullptr)) {
		_1c636a606_pushErr(_self_.ptr(), (*(_91535_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_91447_dest)).ptr()), &__jule_any_type4),jule::Any(_1c641d8da_Str((*(_91514_src)).ptr()), &__jule_any_type4)}));
		return false;;
	};
	_1c63c5177_typeCompatibilityChecker _92917_tcc = _1c63c5177_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_91447_dest)), ._field_src=(*(_91514_src)), ._field_errorToken=(*(_91535_errorToken))};;
	if (_1c63c683d_check(&_92917_tcc)) {
		return true;;
	};
	_1c636a606_pushErr(_self_.ptr(), (*(_91535_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_91447_dest)).ptr()), &__jule_any_type4),jule::Any(_1c641d8da_Str((*(_91514_src)).ptr()), &__jule_any_type4)}));
	return false;;
}



inline jule::Ptr<_1c641d522_TypeKind> _1c6373a71_buildNonGenericTypeKind(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c6299249_TypeDecl>* _95048_ast, jule::Slice<jule::Ptr<_1c62a6454_GenericDecl>>* _95114_generics, jule::Slice<jule::Ptr<_1c641d522_TypeKind>>* _95150_ignored) {
	jule::Ptr<_1c64303d0_typeChecker> _95217_tc = jule::new_ptr<_1c64303d0_typeChecker>(_1c64303d0_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1c643d058_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1c643d058_Lookup>(_self_, 3), ._field_ignoreGenerics=(*(_95114_generics)), ._field_ignoredGenerics=_95150_ignored, });;
	return _1c6437a7a_checkDecl(_95217_tc.ptr(), _95048_ast);;
}



inline jule::Bool _1c6373e6c_buildFnNonGenericTypeKinds(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c62d2b01_FnIns>* _96251_f, jule::Slice<jule::Ptr<_1c641d522_TypeKind>>* _96267_ignored) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Slice<jule::Ptr<_1c62a6454_GenericDecl>> _96417_generics = nullptr;;
	if (_1c62d0406_IsMethod((*((*(_96251_f))))._field_Decl.ptr())) {
		_96417_generics=jule::append((*((*((*(_96251_f))))._field_Decl))._field_Generics,(*((*((*((*(_96251_f))))._field_Decl))._field_Owner))._field_Generics);
	} else {
		_96417_generics=(*((*((*(_96251_f))))._field_Decl))._field_Generics;
	};
	{
		auto expr = &((*((*(_96251_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0cc041:;
		if (it != expr_end) {
			jule::Ptr<_1c62d1b55_ParamIns> _97121_p = *it;
			{
				if ((!(_1c62cd844_IsSelf((*(_97121_p))._field_Decl.ptr())))) {
					(*(_97121_p))._field_Kind=_1c6373a71_buildNonGenericTypeKind(_self_, &((*((*((*(_97121_p))._field_Decl))._field_Kind))._field_Decl), &(_96417_generics), _96267_ignored);
					__jule_func_result=(__jule_func_result && ((*(_97121_p))._field_Kind != nullptr));
				};
			}
			_iter_next_1ac0cc041:;
			++it;
			goto _iter_begin_1ac0cc041;
		}
		_iter_end_1ac0cc041:;
	};
	if ((!(_1c62d0170_IsVoid((*((*(_96251_f))))._field_Decl.ptr())))) {
		(*((*(_96251_f))))._field_Result=_1c6373a71_buildNonGenericTypeKind(_self_, &((*((*((*((*((*(_96251_f))))._field_Decl))._field_Result))._field_Kind))._field_Decl), &(_96417_generics), _96267_ignored);
		__jule_func_result=(__jule_func_result && ((*((*(_96251_f))))._field_Result != nullptr));
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1c62d2b01_FnIns> _1c63742ad_getTraitCheckFnKind(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c62cebec_Fn>* _98444_f) {
	if (((*((*(_98444_f))))._field_Instances.len() == 1LL)) {
		return (*((*(_98444_f))))._field_Instances[0LL];;
	};
	jule::Ptr<_1c62d2b01_FnIns> _98817_ins = _1c62d11c6_instanceForce((*(_98444_f)));;
	jule::Ptr<_1c64303d0_typeChecker> _99017_tc = jule::new_ptr<_1c64303d0_typeChecker>(_1c64303d0_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1c643d058_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1c643d058_Lookup>(_self_, 3), });;
	{
		auto expr = &((*(_98817_ins))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0d1d48:;
		if (it != expr_end) {
			jule::Ptr<_1c62d1b55_ParamIns> _99521_p = *it;
			{
				if ((!(_1c62cd844_IsSelf((*(_99521_p))._field_Decl.ptr())))) {
					(*(_99521_p))._field_Kind=_1c6437a7a_checkDecl(_99017_tc.ptr(), &((*((*((*(_99521_p))._field_Decl))._field_Kind))._field_Decl));
				};
			}
			_iter_next_1ac0d1d48:;
			++it;
			goto _iter_begin_1ac0d1d48;
		}
		_iter_end_1ac0d1d48:;
	};
	if ((!(_1c62d0170_IsVoid((*(_98444_f)).ptr())))) {
		(*(_98817_ins))._field_Result=_1c6437a7a_checkDecl(_99017_tc.ptr(), &((*((*((*((*(_98444_f))))._field_Result))._field_Kind))._field_Decl));
	};
	return _98817_ins;;
}



inline jule::Bool _1c6374764_checkConstraintsFn(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c62d2b01_FnIns>* _100743_f, jule::Ptr<_1c6283a3b_Token>* _100759_et, jule::Ptr<_1c62d2b01_FnIns> _100775_exist) {
	jule::Ptr<_1c63182da_constraintChecker> _100817_cc = _1c6370d7b_constraintChecker(_self_);;
	(*(_100817_cc))._field_et=(*(_100759_et));
	(*(_100817_cc))._field_fi=(*(_100743_f));
	if ((_100775_exist != nullptr)) {
		{
			auto expr = &((*(_100775_exist))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac0d7ea3:;
			if (it != expr_end) {
				jule::I64 _101218_i = it - expr->begin();
				jule::Ptr<_1c641bb3b_InsGeneric> _101225_g = *it;
				{
					(*((*((*(_100743_f))))._field_Generics[_101218_i]))._field_Constraint=(*(_101225_g))._field_Constraint;
				}
				_iter_next_1ac0d7ea3:;
				++it;
				_101218_i++;
				goto _iter_begin_1ac0d7ea3;
			}
			_iter_end_1ac0d7ea3:;
		};
	} else {
		(*(_100817_cc))._field_uniq=true;
	};
	return _1c6319220_check(_100817_cc);;
}



inline jule::Bool _1c6374c1a_checkConstraintsStruct(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c62bcab9_StructIns>* _102147_s, jule::Ptr<_1c6283a3b_Token>* _102167_et, jule::Ptr<_1c62bcab9_StructIns> _102183_exist) {
	jule::Ptr<_1c63182da_constraintChecker> _102217_cc = _1c6370d7b_constraintChecker(_self_);;
	(*(_102217_cc))._field_et=(*(_102167_et));
	(*(_102217_cc))._field_si=(*(_102147_s));
	if ((_102183_exist != nullptr)) {
		{
			auto expr = &((*(_102183_exist))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac0db1b5:;
			if (it != expr_end) {
				jule::I64 _102618_i = it - expr->begin();
				jule::Ptr<_1c641bb3b_InsGeneric> _102625_g = *it;
				{
					(*((*((*(_102147_s))))._field_Generics[_102618_i]))._field_Constraint=(*(_102625_g))._field_Constraint;
				}
				_iter_next_1ac0db1b5:;
				++it;
				_102618_i++;
				goto _iter_begin_1ac0db1b5;
			}
			_iter_end_1ac0db1b5:;
		};
	} else {
		(*(_102217_cc))._field_uniq=true;
	};
	return _1c6319220_check(_102217_cc);;
}



inline jule::Bool _1c6375116_fnEnvironment(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c62d2b01_FnIns>* _103838_f, jule::Fn<jule::Bool(jule::Ptr<_1c63679bb_Sema>*,jule::Slice<jule::Ptr<_1c641c730_TypeAlias>>*)> _103849_algo) {
	jule::Ptr<_1c63679bb_Sema> _103917_sema = (*((*((*(_103838_f))))._field_Decl))._field_sema;;
	jule::Ptr<_1c63d8135_SymbolTable> _104017_old = (*((*((*((*(_103838_f))))._field_Decl))._field_sema))._field_file;;
	__JULE_DEFER({
		_1c636a1d8_setCurrentFile((*((*((*(_103838_f))))._field_Decl))._field_sema.ptr(), _104017_old);
	});;
	jule::Ptr<_1c63d8135_SymbolTable> _104217_file = _1c6366712_findFile(&((*((*((*((*(_103838_f))))._field_Decl))._field_sema))._field_files), &((*((*((*((*(_103838_f))))._field_Decl))._field_Token))._field_File));;
	if ((_104217_file != nullptr)) {
		_1c636a1d8_setCurrentFile((*((*((*(_103838_f))))._field_Decl))._field_sema.ptr(), _104217_file);
	};
	jule::I64 _104717_size = (*((*(_103838_f))))._field_Generics.len();;
	if ((((*((*(_103838_f))))._field_Decl != nullptr) && ((*((*((*(_103838_f))))._field_Decl))._field_Owner != nullptr))) {
		_104717_size+=(*((*((*((*(_103838_f))))._field_Decl))._field_Owner))._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1c641c730_TypeAlias>> _105217_generics = jule::Slice<jule::Ptr<_1c641c730_TypeAlias>>::alloc(0LL, _104717_size);;
	_1c636638d_appendGenericTypeAliases(&(_105217_generics), _103838_f);
	jule::Bool _105513_ok = _103849_algo(&(_103917_sema), &(_105217_generics));;
	if ((_103917_sema != _self_)) {
		((*(_self_))._field_errors).append((*(_103917_sema))._field_errors);;
		(*(_103917_sema))._field_errors=nullptr;
	};
	return _105513_ok;;
}



inline void _1c63753be_checkFnParamKind(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c62d1b55_ParamIns>* _106541_p) {
	(*((*((*(_106541_p))))._field_Kind))._field_Variadic=(*((*((*(_106541_p))))._field_Decl))._field_Variadic;
	if (((*((*((*(_106541_p))))._field_Decl))._field_Reference && (!(_1c6439a16_isValidForRef(&((*((*(_106541_p))))._field_Kind)))))) {
		_1c636a606_pushErr(_self_.ptr(), (*((*((*(_106541_p))))._field_Decl))._field_Token, jule::Str("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*((*(_106541_p))))._field_Kind.ptr()), &__jule_any_type4)}));
	};
}



inline jule::Bool _1c6375710_reloadFnInsTypes(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c62d2b01_FnIns> _107240_f) {
	if ((_1c62d4086_IsBuiltin(_107240_f.ptr()) || _1c62d431c_IsAnon(_107240_f.ptr()))) {
		return true;;
	};
	return _1c6375116_fnEnvironment(_self_, &(_107240_f), jule::Fn<jule::Bool(jule::Ptr<_1c63679bb_Sema>*,jule::Slice<jule::Ptr<_1c641c730_TypeAlias>>*)>([=](jule::Ptr<_1c63679bb_Sema>* _107643_sema, jule::Slice<jule::Ptr<_1c641c730_TypeAlias>>* _107661_generics) mutable -> jule::Bool {
		jule::Bool _107721_ok = true;;
		{
			auto expr = &((*(_107240_f))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac0e9d94:;
			if (it != expr_end) {
				jule::Ptr<_1c62d1b55_ParamIns> _107825_p = *it;
				{
					if (_1c62cd844_IsSelf((*(_107825_p))._field_Decl.ptr())) {
						if (_1c62cdaca_IsRef((*(_107825_p))._field_Decl.ptr())) {
							(*(_107825_p))._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(jule::new_ptr<_1c6429b27_Sptr>(_1c6429b27_Sptr{._field_Elem=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>((*(_107240_f))._field_Owner, 0)})}), 21)});
						} else {
							(*(_107825_p))._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>((*(_107240_f))._field_Owner, 0)});
						};
					} else {
						(*(_107825_p))._field_Kind=_1c637172d_buildTypeWithGenerics((*(_107643_sema)), &((*((*((*(_107825_p))._field_Decl))._field_Kind))._field_Decl), (*(_107661_generics)), (*(_107240_f))._field_Refers);
						if (((*(_107825_p))._field_Kind != nullptr)) {
							_1c63753be_checkFnParamKind(_self_, &(_107825_p));
						} else {
							_107721_ok=false;
						};
					};
				}
				_iter_next_1ac0e9d94:;
				++it;
				goto _iter_begin_1ac0e9d94;
			}
			_iter_end_1ac0e9d94:;
		};
		if ((!(_1c62d0170_IsVoid((*(_107240_f))._field_Decl.ptr())))) {
			(*(_107240_f))._field_Result=_1c637172d_buildTypeWithGenerics((*(_107643_sema)), &((*((*((*((*(_107240_f))._field_Decl))._field_Result))._field_Kind))._field_Decl), (*(_107661_generics)), (*(_107240_f))._field_Refers);
			_107721_ok=(((*(_107240_f))._field_Result != nullptr) && _107721_ok);
		};
		return _107721_ok;;
	}));;
}



inline jule::Bool _1c6375bb6_checkRefValidityForInitExpr(jule::Ptr<_1c63679bb_Sema> _self_, jule::Bool _110847_leftMut, jule::Ptr<_1c63dd35a_Data>* _110867_d, jule::Ptr<_1c6283a3b_Token>* _110882_errorToken) {
	if ((!(_1c636515b_isValidModelForRef(&((*((*(_110867_d))))._field_Model))))) {
		_1c636a606_pushErr(_self_.ptr(), (*(_110882_errorToken)), jule::Str("references requires variable based expression for assignment", 60), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_110847_leftMut && (!((*((*(_110867_d))))._field_Mutable)))) {
		_1c636a606_pushErr(_self_.ptr(), (*(_110882_errorToken)), jule::Str("mutable reference cannot point to immutable data", 48), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1c6376007_isMutRiskyStruct(_1c63679bb_Sema* _self_, jule::Ptr<_1c62bcab9_StructIns>* _112532_s) {
	{
		auto expr = &((*((*(_112532_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac103232:;
		if (it != expr_end) {
			jule::Ptr<_1c62bc019_FieldIns> *_112616_f = it;
			{
				if ((((*((*((*(_112616_f))))._field_Decl))._field_Mutable && _1c641eda3_Mutable((*((*(_112616_f))))._field_Kind.ptr())) && _1c636ad65_isAccessibleDefine(_self_, (*((*((*(_112616_f))))._field_Decl))._field_Public, (*((*((*(_112616_f))))._field_Decl))._field_Token))) {
					return true;;
				};
			}
			_iter_next_1ac103232:;
			++it;
			goto _iter_begin_1ac103232;
		}
		_iter_end_1ac103232:;
	};
	return false;;
}



inline jule::Bool _1c6376623_checkValidityForInitExpr(jule::Ptr<_1c63679bb_Sema> _self_, jule::Bool _115244_leftMut, jule::Bool _115259_leftRef, jule::Ptr<_1c641d522_TypeKind>* _115310_leftKind, jule::Ptr<_1c63dd35a_Data>* _115336_d, jule::Ptr<_1c6283a3b_Token>* _115351_errorToken) {
	if ((_115244_leftMut && (!((*((*(_115336_d))))._field_Mutable)))) {
		if (_1c641eda3_Mutable((*((*(_115336_d))))._field_Kind.ptr())) {
			_1c636a606_pushErr(_self_.ptr(), (*(_115351_errorToken)), jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*((*(_115336_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
		jule::Ptr<_1c62bcab9_StructIns> _116117_s = _1c64221e6_Struct((*((*(_115336_d))))._field_Kind.ptr());;
		if (((_116117_s != nullptr) && _1c6376007_isMutRiskyStruct(_self_.ptr(), &(_116117_s)))) {
			_1c636a606_pushErr(_self_.ptr(), (*(_115351_errorToken)), jule::Str("struct @ cannot copied due to field which is stores mutable data", 64), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*((*(_115336_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
	};
	if (_115259_leftRef) {
		if ((!(_1c6375bb6_checkRefValidityForInitExpr(_self_, _115244_leftMut, _115336_d, _115351_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1c63c6e26_assignTypeChecker> _117217_atc = jule::new_ptr<_1c63c6e26_assignTypeChecker>(_1c63c6e26_assignTypeChecker{._field_s=_self_, ._field_d=(*(_115336_d)), ._field_errorToken=(*(_115351_errorToken))});;
	return _1c63c7652_checkValidity(_117217_atc.ptr());;
}



inline jule::Bool _1c6376a1e_checkTypeAliasDeclKind(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c641c730_TypeAlias>* _118047_ta, jule::Trait<_1c643d058_Lookup> _118067_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c63d8135_SymbolTable> _118117_old = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1c636a1d8_setCurrentFile(_self_.ptr(), _118117_old);
	});;
	if (((*((*(_118047_ta))))._field_Token != nullptr)) {
		jule::Ptr<_1c63d8135_SymbolTable> _118621_file = _1c6366712_findFile(&((*(_self_))._field_files), &((*((*((*(_118047_ta))))._field_Token))._field_File));;
		if ((_118621_file != nullptr)) {
			_1c636a1d8_setCurrentFile(_self_.ptr(), _118621_file);
		};
	};
	__jule_func_result=_1c6370ae5_checkTypeWithRefers(_self_, &((*((*(_118047_ta))))._field_Kind), _118067_l, nullptr, jule::new_ptr<_1c642e3e0_referencer>(_1c642e3e0_referencer{._field_ident=(*((*(_118047_ta))))._field_Ident, ._field_owner=jule::Any((*(_118047_ta)), &__jule_any_type66), ._field_refs=(&((*((*(_118047_ta))))._field_Refers))}));
	if (((__jule_func_result && (_1c6421943_Arr((*((*((*(_118047_ta))))._field_Kind))._field_Kind.ptr()) != nullptr)) && (*(_1c6421943_Arr((*((*((*(_118047_ta))))._field_Kind))._field_Kind.ptr())))._field_Auto)) {
		_1c636a606_pushErr(_self_.ptr(), (*((*((*((*(_118047_ta))))._field_Kind))._field_Decl))._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1c6376d82_checkTypeAliasDecl(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c641c730_TypeAlias>* _120343_ta, jule::Trait<_1c643d058_Lookup> _120363_l) {
	if (_1c628649a_IsIgnoreIdent((*((*(_120343_ta))))._field_Ident)) {
		_1c636a606_pushErr(_self_.ptr(), (*((*(_120343_ta))))._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_1c6376a1e_checkTypeAliasDeclKind(_self_, _120343_ta, _120363_l);
}



inline void _1c637713a_checkTypeAliasDeclDup(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c641c730_TypeAlias>* _121146_ta) {
	if (_1c628649a_IsIgnoreIdent((*((*(_121146_ta))))._field_Ident)) {
		_1c636a606_pushErr(_self_.ptr(), (*((*(_121146_ta))))._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1c636b31b_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_121146_ta)))), &((*((*(_121146_ta))))._field_Ident), (*((*(_121146_ta))))._field_Binded)) {
		_1c636a606_pushErr(_self_.ptr(), (*((*(_121146_ta))))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_121146_ta))))._field_Ident, &__jule_any_type4)}));
		_1c636a969_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1c6376a1e_checkTypeAliasDeclKind(_self_, _121146_ta, jule::Trait<_1c643d058_Lookup>(_self_, 3));
}



inline jule::Bool _1c63773c1_checkTypeAliasDecls(jule::Ptr<_1c63679bb_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac115a80:;
		if (it != expr_end) {
			jule::Ptr<_1c641c730_TypeAlias> _122421_ta = *it;
			{
				_1c637713a_checkTypeAliasDeclDup(_self_, &(_122421_ta));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ac115a80:;
			++it;
			goto _iter_begin_1ac115a80;
		}
		_iter_end_1ac115a80:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1ac14431c_checkEnumItemsDup(_1c63679bb_Sema* _self_, jule::Slice<jule::Ptr<_1c62e4b24_EnumItem>> _123539_items) {
	{
		auto expr = &(_123539_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1455e8:;
		if (it != expr_end) {
			jule::Ptr<_1c62e4b24_EnumItem> *_123616_item = it;
			{
				if (((*((*(_123616_item))))._field_Ident).empty()) {
					goto _iter_next_1ac1455e8;
				} else if (_1c628649a_IsIgnoreIdent((*((*(_123616_item))))._field_Ident)) {
					_1c636a606_pushErr(_self_, (*((*(_123616_item))))._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_123539_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac1468e6:;
						if (it != expr_end) {
							jule::Ptr<_1c62e4b24_EnumItem> *_124224_citem = it;
							{
								if (((*(_123616_item)) == (*(_124224_citem)))) {
									goto _iter_end_1ac1468e6;
								} else if (((*((*(_123616_item))))._field_Ident == (*((*(_124224_citem))))._field_Ident)) {
									_1c636a606_pushErr(_self_, (*((*(_123616_item))))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_123616_item))))._field_Ident, &__jule_any_type4)}));
									_1c636a969_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1ac1468e6;
								};
							}
							_iter_next_1ac1468e6:;
							++it;
							goto _iter_begin_1ac1468e6;
						}
						_iter_end_1ac1468e6:;
					};
				};
			}
			_iter_next_1ac1455e8:;
			++it;
			goto _iter_begin_1ac1455e8;
		}
		_iter_end_1ac1455e8:;
	};
}

inline void _1ac151417_checkEnumItemsDup(_1c63679bb_Sema* _self_, jule::Slice<jule::Ptr<_1c62e67c4_TypeEnumItem>> _123539_items) {
	{
		auto expr = &(_123539_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1526c1:;
		if (it != expr_end) {
			jule::Ptr<_1c62e67c4_TypeEnumItem> *_123616_item = it;
			{
				if (((*((*(_123616_item))))._field_Ident).empty()) {
					goto _iter_next_1ac1526c1;
				} else if (_1c628649a_IsIgnoreIdent((*((*(_123616_item))))._field_Ident)) {
					_1c636a606_pushErr(_self_, (*((*(_123616_item))))._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_123539_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac1539be:;
						if (it != expr_end) {
							jule::Ptr<_1c62e67c4_TypeEnumItem> *_124224_citem = it;
							{
								if (((*(_123616_item)) == (*(_124224_citem)))) {
									goto _iter_end_1ac1539be;
								} else if (((*((*(_123616_item))))._field_Ident == (*((*(_124224_citem))))._field_Ident)) {
									_1c636a606_pushErr(_self_, (*((*(_123616_item))))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_123616_item))))._field_Ident, &__jule_any_type4)}));
									_1c636a969_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1ac1539be;
								};
							}
							_iter_next_1ac1539be:;
							++it;
							goto _iter_begin_1ac1539be;
						}
						_iter_end_1ac1539be:;
					};
				};
			}
			_iter_next_1ac1526c1:;
			++it;
			goto _iter_begin_1ac1526c1;
		}
		_iter_end_1ac1526c1:;
	};
}



inline void _1c6377932_checkEnumItemsStr(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c62e5691_Enum>* _125542_e) {
	jule::Ptr<_1c63e004e_Eval> _125617_eval = _1c6372aa3_eval(_self_, jule::Trait<_1c643d058_Lookup>(_self_, 3));;
	{
		auto expr = &((*((*(_125542_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac117a2c:;
		if (it != expr_end) {
			jule::Ptr<_1c62e4b24_EnumItem> _125721_item = *it;
			{
				if (_1c62e4ecb_AutoExpr(_125721_item.ptr())) {
					(*(_125721_item))._field_Value=jule::new_ptr<_1c63de49e_Value>(_1c63de49e_Value{._field_Data=jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Constant=static__1dc26132c_NewStr((*(_125721_item))._field_Ident)})});
					(*((*((*(_125721_item))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*(_125721_item))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
				} else {
					jule::Ptr<_1c63dd35a_Data> _126625_d = _1c640d028_evalExpr(_125617_eval, (*((*(_125721_item))._field_Value))._field_Expr);;
					if ((_126625_d == nullptr)) {
						goto _iter_next_1ac117a2c;
					};
					if ((!(_1c63ddc2e_IsConst(_126625_d.ptr())))) {
						_1c636a606_pushErr(_self_.ptr(), (*((*((*(_125721_item))._field_Value))._field_Expr))._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
					};
					_1c6373114_checkAssignType(_self_, false, &((*((*((*(_125542_e))))._field_Kind))._field_Kind), &(_126625_d), (*(_125721_item))._field_Token);
					(*((*(_125721_item))._field_Value))._field_Data=_126625_d;
				};
			}
			_iter_next_1ac117a2c:;
			++it;
			goto _iter_begin_1ac117a2c;
		}
		_iter_end_1ac117a2c:;
	};
}



inline void _1ac12354e_checkEnumItemInt(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c63e004e_Eval>* _128146_eval, jule::Ptr<_1c62e5691_Enum>* _128164_e, jule::Ptr<_1c64260eb_Prim>* _128175_prim, jule::Ptr<_1c62e4b24_EnumItem>* _128193_item, jule::U64* _1281115_n) {
	if (_1c62e4ecb_AutoExpr((*(_128193_item)).ptr())) {
		(*((*(_128193_item))))._field_Value=jule::new_ptr<_1c63de49e_Value>(_1c63de49e_Value{._field_Data=jule::new_ptr<_1c63dd35a_Data>()});
		{
			
{
				_case_begin_1ac126398:;
				{
					(*((*((*((*(_128193_item))))._field_Value))._field_Data))._field_Constant=static__1dc260c99_NewU64((*(_1281115_n)));
				}
			}
			_match_end_1ac1262bb:;
		};
		(*((*((*((*(_128193_item))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_128193_item))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1c63dd35a_Data> _129621_d = _1c640d028_evalExpr((*(_128146_eval)), (*((*((*(_128193_item))))._field_Value))._field_Expr);;
		if ((_129621_d == nullptr)) {
			return;;
		};
		if ((!(_1c63ddc2e_IsConst(_129621_d.ptr())))) {
			_1c636a606_pushErr(_self_.ptr(), (*((*((*((*(_128193_item))))._field_Value))._field_Expr))._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1c6373114_checkAssignType(_self_, false, &((*((*((*(_128164_e))))._field_Kind))._field_Kind), &(_129621_d), (*((*(_128193_item))))._field_Token);
		(*((*((*(_128193_item))))._field_Value))._field_Data=_129621_d;
		{
			
{
				_case_begin_1ac12b1b1:;
				{
					(*(_1281115_n))=static_cast<jule::U64>(_1dc2621eb_ReadU64((*((*((*((*(_128193_item))))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_1ac12b0c3:;
		};
	};
}

inline void _1ac134296_checkEnumItemInt(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c63e004e_Eval>* _128146_eval, jule::Ptr<_1c62e5691_Enum>* _128164_e, jule::Ptr<_1c64260eb_Prim>* _128175_prim, jule::Ptr<_1c62e4b24_EnumItem>* _128193_item, jule::I64* _1281115_n) {
	if (_1c62e4ecb_AutoExpr((*(_128193_item)).ptr())) {
		(*((*(_128193_item))))._field_Value=jule::new_ptr<_1c63de49e_Value>(_1c63de49e_Value{._field_Data=jule::new_ptr<_1c63dd35a_Data>()});
		{
			
{
				_case_begin_1ac137002:;
				{
					(*((*((*((*(_128193_item))))._field_Value))._field_Data))._field_Constant=static__1dc2609d0_NewI64((*(_1281115_n)));
				}
			}
			_match_end_1ac136e9c:;
		};
		(*((*((*((*(_128193_item))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_128193_item))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1c63dd35a_Data> _129621_d = _1c640d028_evalExpr((*(_128146_eval)), (*((*((*(_128193_item))))._field_Value))._field_Expr);;
		if ((_129621_d == nullptr)) {
			return;;
		};
		if ((!(_1c63ddc2e_IsConst(_129621_d.ptr())))) {
			_1c636a606_pushErr(_self_.ptr(), (*((*((*((*(_128193_item))))._field_Value))._field_Expr))._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1c6373114_checkAssignType(_self_, false, &((*((*((*(_128164_e))))._field_Kind))._field_Kind), &(_129621_d), (*((*(_128193_item))))._field_Token);
		(*((*((*(_128193_item))))._field_Value))._field_Data=_129621_d;
		{
			
{
				_case_begin_1ac13bea2:;
				{
					(*(_1281115_n))=static_cast<jule::I64>(_1dc261e65_ReadI64((*((*((*((*(_128193_item))))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_1ac13be3b:;
		};
	};
}



inline void _1ac11e6d2_checkEnumItemsInt1(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c64260eb_Prim>* _131644_prim, jule::Ptr<_1c62e5691_Enum>* _131662_e) {
	jule::U64 _131717_max = 0LLU;;
	{
		
{
			_case_begin_1ac1215c4:;
			{
				_131717_max=static_cast<jule::U64>(_1dc258a72_MaxU(_1c642643c_Str((*(_131644_prim)).ptr())));
			}
		}
		_match_end_1ac1213b5:;
	};
	jule::Ptr<_1c63e004e_Eval> _132717_eval = _1c6372aa3_eval(_self_, jule::Trait<_1c643d058_Lookup>(_self_, 3));;
	jule::U64 _132817_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1c62e4b24_EnumItem> _132917_first = (*((*(_131662_e))))._field_Items[0LL];;
	_1ac12354e_checkEnumItemInt(_self_, &(_132717_eval), _131662_e, _131644_prim, &(_132917_first), &(_132817_n));
	if (((*((*(_132917_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1ac1224c6:;
				{
					_132817_n=static_cast<jule::U64>(_1dc262ebb_AsU64((*((*((*(_132917_first))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_1ac122bbe:;
		};
	};
	{
		auto expr = (*((*(_131662_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ac127eb0:;
		if (it != expr_end) {
			jule::Ptr<_1c62e4b24_EnumItem> _134121_item = *it;
			{
				if (((_1c62e4ecb_AutoExpr(_134121_item.ptr()) && (_132817_n > 0LLU)) && ((_131717_max - _132817_n) <= 0LLU))) {
					_1c636a606_pushErr(_self_.ptr(), (*(_134121_item))._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1ac127eb0;
				};
				(_132817_n)++;
				_1ac12354e_checkEnumItemInt(_self_, &(_132717_eval), _131662_e, _131644_prim, &(_134121_item), &(_132817_n));
			}
			_iter_next_1ac127eb0:;
			++it;
			goto _iter_begin_1ac127eb0;
		}
		_iter_end_1ac127eb0:;
	};
}

inline void _1ac12cdc7_checkEnumItemsInt1(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c64260eb_Prim>* _131644_prim, jule::Ptr<_1c62e5691_Enum>* _131662_e) {
	jule::I64 _131717_max = 0LL;;
	{
		
{
			_case_begin_1ac13210c:;
			{
				_131717_max=static_cast<jule::I64>(_1dc2587a8_MaxI(_1c642643c_Str((*(_131644_prim)).ptr())));
			}
		}
		_match_end_1ac131e75:;
	};
	jule::Ptr<_1c63e004e_Eval> _132717_eval = _1c6372aa3_eval(_self_, jule::Trait<_1c643d058_Lookup>(_self_, 3));;
	jule::I64 _132817_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1c62e4b24_EnumItem> _132917_first = (*((*(_131662_e))))._field_Items[0LL];;
	_1ac134296_checkEnumItemInt(_self_, &(_132717_eval), _131662_e, _131644_prim, &(_132917_first), &(_132817_n));
	if (((*((*(_132917_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1ac1331a7:;
				{
					_132817_n=static_cast<jule::I64>(_1dc262c35_AsI64((*((*((*(_132917_first))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_1ac133916:;
		};
	};
	{
		auto expr = (*((*(_131662_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ac13db52:;
		if (it != expr_end) {
			jule::Ptr<_1c62e4b24_EnumItem> _134121_item = *it;
			{
				if (((_1c62e4ecb_AutoExpr(_134121_item.ptr()) && (_132817_n > 0LL)) && ((_131717_max - _132817_n) <= 0LL))) {
					_1c636a606_pushErr(_self_.ptr(), (*(_134121_item))._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1ac13db52;
				};
				(_132817_n)++;
				_1ac134296_checkEnumItemInt(_self_, &(_132717_eval), _131662_e, _131644_prim, &(_134121_item), &(_132817_n));
			}
			_iter_next_1ac13db52:;
			++it;
			goto _iter_begin_1ac13db52;
		}
		_iter_end_1ac13db52:;
	};
}



inline void _1c63785d1_checkEnumItemsInt(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c62e5691_Enum>* _135142_e) {
	jule::Ptr<_1c64260eb_Prim> _135213_prim = _1c6420b73_Prim((*((*((*(_135142_e))))._field_Kind))._field_Kind.ptr());;
	{
		
		if (_1dc25e2b4_IsSigInt((*(_135213_prim))._field_Kind)) {
			_case_begin_1ac12eb98:;
			{
				_1ac12cdc7_checkEnumItemsInt1(_self_, &(_135213_prim), _135142_e);
			}
		}
		else {
			_case_begin_1ac11de1d:;
			{
				_1ac11e6d2_checkEnumItemsInt1(_self_, &(_135213_prim), _135142_e);
			}
		}
		_match_end_1ac11dda7:;
	};
}



inline void _1c6378889_checkEnumDecl(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c62e5691_Enum>* _136138_e) {
	if (_1c628649a_IsIgnoreIdent((*((*(_136138_e))))._field_Ident)) {
		_1c636a606_pushErr(_self_.ptr(), (*((*(_136138_e))))._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1c636b31b_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_136138_e)))), &((*((*(_136138_e))))._field_Ident), false)) {
		_1c636a606_pushErr(_self_.ptr(), (*((*(_136138_e))))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_136138_e))))._field_Ident, &__jule_any_type4)}));
		_1c636a969_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_136138_e))))._field_Items.len() == 0LL)) {
		_1c636a606_pushErr(_self_.ptr(), (*((*(_136138_e))))._field_Token, jule::Str("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*((*(_136138_e))))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	_1ac14431c_checkEnumItemsDup(_self_.ptr(), (*((*(_136138_e))))._field_Items);
	if (((*((*(_136138_e))))._field_Kind != nullptr)) {
		if ((!(_1c6371277_checkType(_self_, &((*((*(_136138_e))))._field_Kind), jule::Trait<_1c643d058_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		(*((*(_136138_e))))._field_Kind=(*(_1c650c49b_findBuiltinTypeAlias(jule::Str("int", 3))))._field_Kind;
	};
	jule::Ptr<_1c64260eb_Prim> _138517_t = _1c6420b73_Prim((*((*((*(_136138_e))))._field_Kind))._field_Kind.ptr());;
	if ((_138517_t == nullptr)) {
		_1c636a606_pushErr(_self_.ptr(), (*((*(_136138_e))))._field_Token, jule::Str("invalid type source", 19), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1c6429583_IsStr(_138517_t.ptr())) {
			_case_begin_1ac14b049:;
			{
				_1c6377932_checkEnumItemsStr(_self_, _136138_e);
			}
		}
		else if (_1dc25e88b_IsInt(_1c642643c_Str(_138517_t.ptr()))) {
			_case_begin_1ac14ac4c:;
			{
				_1c63785d1_checkEnumItemsInt(_self_, _136138_e);
			}
		}
		else {
			_case_begin_1ac14abd6:;
			{
				_1c636a606_pushErr(_self_.ptr(), (*((*(_136138_e))))._field_Token, jule::Str("invalid type source", 19), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ac14a323:;
	};
}



inline void _1c6378b42_checkTypeEnumDecl(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c62e6d9b_TypeEnum>* _140242_e) {
	if (_1c628649a_IsIgnoreIdent((*((*(_140242_e))))._field_Ident)) {
		_1c636a606_pushErr(_self_.ptr(), (*((*(_140242_e))))._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1c636b31b_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_140242_e)))), &((*((*(_140242_e))))._field_Ident), false)) {
		_1c636a606_pushErr(_self_.ptr(), (*((*(_140242_e))))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_140242_e))))._field_Ident, &__jule_any_type4)}));
		_1c636a969_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_140242_e))))._field_Items.len() == 0LL)) {
		_1c636a606_pushErr(_self_.ptr(), (*((*(_140242_e))))._field_Token, jule::Str("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*((*(_140242_e))))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	_1ac151417_checkEnumItemsDup(_self_.ptr(), (*((*(_140242_e))))._field_Items);
	{
		auto expr = &((*((*(_140242_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac14ccb5:;
		if (it != expr_end) {
			jule::Ptr<_1c62e67c4_TypeEnumItem> _141621_item = *it;
			{
				if (((*(_141621_item))._field_Kind == nullptr)) {
					_1c636a606_pushErr(_self_.ptr(), (*(_141621_item))._field_Token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
					goto _iter_next_1ac14ccb5;
				};
				jule::Bool _142117_ok = _1c6371277_checkType(_self_, &((*(_141621_item))._field_Kind), jule::Trait<_1c643d058_Lookup>(_self_, 3));;
				if ((!(_142117_ok))) {
					goto _iter_next_1ac14ccb5;
				};
				jule::Ptr<_1c64260eb_Prim> _142517_p = _1c6420b73_Prim((*((*(_141621_item))._field_Kind))._field_Kind.ptr());;
				if (((_142517_p != nullptr) && _1c6429819_IsAny(_142517_p.ptr()))) {
					_1c636a606_pushErr(_self_.ptr(), (*(_141621_item))._field_Token, jule::Str("the <any> type is not allowed for type-enum declarations", 56), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1ac14ccb5:;
			++it;
			goto _iter_begin_1ac14ccb5;
		}
		_iter_end_1ac14ccb5:;
	};
	if (((*((*(_140242_e))))._field_Items.len() == 1LL)) {
		jule::Ptr<_1c62e67c4_TypeEnumItem> _143121_item = (*((*(_140242_e))))._field_Items[0LL];;
		_1c641d522_TypeKind _143217_tk = _1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>((*(_140242_e)), 4)};;
		if ((((*((*(_143121_item))._field_Kind))._field_Kind != nullptr) && _1c641dc2b_Equal((*((*(_143121_item))._field_Kind))._field_Kind, ((jule::Ptr<_1c641d522_TypeKind>)((&(_143217_tk))))))) {
			_1c636a606_pushErr(_self_.ptr(), (*(_143121_item))._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_1c62e71dc_Str((*(_140242_e)).ptr()), &__jule_any_type4)}));
		};
	};
}



inline jule::Bool _1c6378dc8_checkEnumDecls(jule::Ptr<_1c63679bb_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac15c027:;
		if (it != expr_end) {
			jule::Ptr<_1c62e5691_Enum> _144321_e = *it;
			{
				_1c6378889_checkEnumDecl(_self_, &(_144321_e));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ac15c027:;
			++it;
			goto _iter_begin_1ac15c027;
		}
		_iter_end_1ac15c027:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c637915e_checkTypeEnumDecls(jule::Ptr<_1c63679bb_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac15ca1c:;
		if (it != expr_end) {
			jule::Ptr<_1c62e6d9b_TypeEnum> _145521_e = *it;
			{
				_1c6378b42_checkTypeEnumDecl(_self_, &(_145521_e));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ac15ca1c:;
			++it;
			goto _iter_begin_1ac15ca1c;
		}
		_iter_end_1ac15ca1c:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c63794a0_checkDeclGenerics(_1c63679bb_Sema* _self_, jule::Slice<jule::Ptr<_1c62a6454_GenericDecl>>* _146537_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _146537_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac16014b:;
		if (it != expr_end) {
			jule::I64 _146713_i = it - expr->begin();
			jule::Ptr<_1c62a6454_GenericDecl> *_146716_g = it;
			{
				if (_1c628649a_IsIgnoreIdent((*((*(_146716_g))))._field_Ident)) {
					_1c636a606_pushErr(_self_, (*((*(_146716_g))))._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1ac16014b;
				};
				_julec_label_1ac1617e0:;
				{
					auto expr = _146537_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac1619dd:;
					if (it != expr_end) {
						jule::I64 _147617_j = it - expr->begin();
						jule::Ptr<_1c62a6454_GenericDecl> *_147620_ct = it;
						{
							{
								
								if ((_147617_j >= _146713_i)) {
									_case_begin_1ac162626:;
									{
										goto _iter_end_1ac1619dd;
									}
								}
								else if (((*((*(_146716_g))))._field_Ident == (*((*(_147620_ct))))._field_Ident)) {
									_case_begin_1ac16269d:;
									{
										_1c636a606_pushErr(_self_, (*((*(_146716_g))))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_146716_g))))._field_Ident, &__jule_any_type4)}));
										_1c636a969_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1ac1619dd;
									}
								}
								_match_end_1ac162527:;
							};
						}
						_iter_next_1ac1619dd:;
						++it;
						_147617_j++;
						goto _iter_begin_1ac1619dd;
					}
					_iter_end_1ac1619dd:;
				};
			}
			_iter_next_1ac16014b:;
			++it;
			_146713_i++;
			goto _iter_begin_1ac16014b;
		}
		_iter_end_1ac16014b:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c63797e1_checkFnDeclParamsDup(_1c63679bb_Sema* _self_, jule::Ptr<_1c62cebec_Fn>* _149240_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_1ac16336e:;
	{
		auto expr = &((*((*(_149240_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac16499c:;
		if (it != expr_end) {
			jule::I64 _149513_i = it - expr->begin();
			jule::Ptr<_1c62cd228_Param> *_149516_p = it;
			{
				{
					auto expr = &((*((*(_149240_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac164947:;
					if (it != expr_end) {
						jule::Ptr<_1c62a6454_GenericDecl> *_149720_g = it;
						{
							if (((*((*(_149516_p))))._field_Ident == (*((*(_149720_g))))._field_Ident)) {
								__jule_func_result=false;
								_1c636a606_pushErr(_self_, (*((*(_149516_p))))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_149516_p))))._field_Ident, &__jule_any_type4)}));
								_1c636a969_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								goto _iter_next_1ac16499c;
							};
						}
						_iter_next_1ac164947:;
						++it;
						goto _iter_begin_1ac164947;
					}
					_iter_end_1ac164947:;
				};
				_julec_label_1ac1655c4:;
				{
					auto expr = &((*((*(_149240_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac166251:;
					if (it != expr_end) {
						jule::I64 _150717_j = it - expr->begin();
						jule::Ptr<_1c62cd228_Param> *_150720_jp = it;
						{
							{
								
								if ((_150717_j >= _149513_i)) {
									_case_begin_1ac9b210c:;
									{
										goto _iter_end_1ac166251;
									}
								}
								else if (_1c628649a_IsIgnoreIdent((*((*(_149516_p))))._field_Ident) || _1c628649a_IsIgnoreIdent((*((*(_150720_jp))))._field_Ident) || _1c6286764_IsAnonIdent((*((*(_149516_p))))._field_Ident) || _1c6286764_IsAnonIdent((*((*(_150720_jp))))._field_Ident)) {
									_case_begin_1ac9b2184:;
									{
										goto _iter_end_1ac166251;
									}
								}
								else if (((*((*(_149516_p))))._field_Ident == (*((*(_150720_jp))))._field_Ident)) {
									_case_begin_1ac9b220b:;
									{
										__jule_func_result=false;
										_1c636a606_pushErr(_self_, (*((*(_149516_p))))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_149516_p))))._field_Ident, &__jule_any_type4)}));
										_1c636a969_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_next_1ac16499c;
									}
								}
								_match_end_1ac167e89:;
							};
						}
						_iter_next_1ac166251:;
						++it;
						_150717_j++;
						goto _iter_begin_1ac166251;
					}
					_iter_end_1ac166251:;
				};
			}
			_iter_next_1ac16499c:;
			++it;
			_149513_i++;
			goto _iter_begin_1ac16499c;
		}
		_iter_end_1ac16499c:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c6379b32_checkFnDeclResultDup(_1c63679bb_Sema* _self_, jule::Ptr<_1c62cebec_Fn>* _152940_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1c62d0170_IsVoid((*(_152940_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*((*((*(_152940_f))))._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9b5583:;
		if (it != expr_end) {
			jule::I64 _153613_i = it - expr->begin();
			jule::Ptr<_1c6283a3b_Token> *_153616_v = it;
			{
				if ((_1c628649a_IsIgnoreIdent((*((*(_153616_v))))._field_Kind) || _1c6286764_IsAnonIdent((*((*(_153616_v))))._field_Kind))) {
					goto _iter_next_1ac9b5583;
				};
				{
					auto expr = &((*((*(_152940_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac9b671b:;
					if (it != expr_end) {
						jule::Ptr<_1c62a6454_GenericDecl> *_154120_g = it;
						{
							if (((*((*(_153616_v))))._field_Kind == (*((*(_154120_g))))._field_Ident)) {
								goto _julec_label_1ac9b7d6b;
							};
						}
						_iter_next_1ac9b671b:;
						++it;
						goto _iter_begin_1ac9b671b;
					}
					_iter_end_1ac9b671b:;
				};
				{
					auto expr = &((*((*(_152940_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac9b81ce:;
					if (it != expr_end) {
						jule::Ptr<_1c62cd228_Param> *_154720_p = it;
						{
							if (((*((*(_153616_v))))._field_Kind == (*((*(_154720_p))))._field_Ident)) {
								goto _julec_label_1ac9b7d6b;
							};
						}
						_iter_next_1ac9b81ce:;
						++it;
						goto _iter_begin_1ac9b81ce;
					}
					_iter_end_1ac9b81ce:;
				};
				_julec_label_1ac9b9433:;
				{
					auto expr = &((*((*((*(_152940_f))))._field_Result))._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac9b9356:;
					if (it != expr_end) {
						jule::I64 _155517_j = it - expr->begin();
						jule::Ptr<_1c6283a3b_Token> *_155520_jv = it;
						{
							{
								
								if ((_155517_j >= _153613_i)) {
									_case_begin_1ac9ba962:;
									{
										goto _iter_end_1ac9b9356;
									}
								}
								else if (((*((*(_155520_jv))))._field_Kind == (*((*(_153616_v))))._field_Kind)) {
									_case_begin_1ac9ba9d9:;
									{
										goto _julec_label_1ac9b7d6b;
									}
								}
								_match_end_1ac9ba852:;
							};
						}
						_iter_next_1ac9b9356:;
						++it;
						_155517_j++;
						goto _iter_begin_1ac9b9356;
					}
					_iter_end_1ac9b9356:;
				};
				goto _iter_next_1ac9b5583;
				_julec_label_1ac9b7d6b:;
				_1c636a606_pushErr(_self_, (*(_153616_v)), jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_153616_v))))._field_Kind, &__jule_any_type4)}));
				_1c636a969_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1ac9b5583:;
			++it;
			_153613_i++;
			goto _iter_begin_1ac9b5583;
		}
		_iter_end_1ac9b5583:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c6379e73_checkFnVariadicParam(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c62cebec_Fn>* _157445_f) {
	if (((*((*(_157445_f))))._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_1c62cd228_Param> _157817_param = (*((*(_157445_f))))._field_Params[((*((*(_157445_f))))._field_Params.len() - 1LL)];;
	if (((*(_157817_param))._field_Variadic && (*(_157817_param))._field_Reference)) {
		_1c636a606_pushErr(_self_.ptr(), (*(_157817_param))._field_Token, jule::Str("variadic storage cannot be reference", 36), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _1c637a22b_checkFnDeclPrototype(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c62cebec_Fn>* _158745_f) {
	if (((*((*(_158745_f))))._field_Exceptional && (*((*(_158745_f))))._field_Binded)) {
		_1c636a606_pushErr(_self_.ptr(), (*((*(_158745_f))))._field_Token, jule::Str("binded defines cannot be exceptional", 36), jule::Slice<jule::Any>());
		return;;
	};
	if ((*((*(_158745_f))))._field_Exceptional) {
		if (_1c62d068c_IsEntryPoint((*(_158745_f)).ptr())) {
			_1c636a606_pushErr(_self_.ptr(), (*((*(_158745_f))))._field_Token, jule::Str("entry point cannot be exceptional", 33), jule::Slice<jule::Any>());
		} else if (_1c62d0923_IsInit((*(_158745_f)).ptr())) {
			_1c636a606_pushErr(_self_.ptr(), (*((*(_158745_f))))._field_Token, jule::Str("initializer function cannot be exceptional", 42), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1c63794a0_checkDeclGenerics(_self_.ptr(), &((*((*(_158745_f))))._field_Generics))))) {
			_case_begin_1ac9c2e31:;
		}
		else if ((!(_1c63797e1_checkFnDeclParamsDup(_self_.ptr(), _158745_f)))) {
			_case_begin_1ac9c2ea8:;
		}
		else if ((!(_1c6379b32_checkFnDeclResultDup(_self_.ptr(), _158745_f)))) {
			_case_begin_1ac9c3030:;
		}
		else if ((!(_1c6379e73_checkFnVariadicParam(_self_, _158745_f)))) {
			_case_begin_1ac9c30a7:;
		}
		_match_end_1ac9c15a0:;
	};
}



inline jule::Bool _1c637a6d2_catchTraitInheritCycle(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c62e2e96_Trait> _160942_t1, jule::Ptr<_1c62e2e96_Trait> _160958_t2, _2206c697e_StrBuilder* _160975_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_160958_t2))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9c5351:;
		if (it != expr_end) {
			jule::Ptr<_1c64256e4_TypeSymbol> _161121_i = *it;
			{
				if (((*(_161121_i))._field_Kind == nullptr)) {
					goto _iter_next_1ac9c5351;
				};
				jule::Ptr<_1c62e2e96_Trait> _161521_t3 = _1c642247c_Trait((*(_161121_i))._field_Kind.ptr());;
				if ((_160942_t1 == _161521_t3)) {
					_1c6380462_pushCycleError(_self_.ptr(), &((*(_160958_t2))._field_Ident), &((*(_161521_t3))._field_Ident), _160975_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1c637a6d2_catchTraitInheritCycle(_self_, _160942_t1, _161521_t3, _160975_message)))) {
					_1c6380462_pushCycleError(_self_.ptr(), &((*(_160958_t2))._field_Ident), &((*(_161521_t3))._field_Ident), _160975_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ac9c5351:;
			++it;
			goto _iter_begin_1ac9c5351;
		}
		_iter_end_1ac9c5351:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c637aa23__checkTraitDeclInherits(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c62e2e96_Trait>* _162848_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_162848_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9c8b29:;
		if (it != expr_end) {
			jule::I64 _163014_i = it - expr->begin();
			jule::Ptr<_1c64256e4_TypeSymbol> _163021_it = *it;
			{
				if ((!(_1c6371277_checkType(_self_, &(_163021_it), jule::Trait<_1c643d058_Lookup>(_self_, 3))))) {
					__jule_func_result=false;
					goto _iter_next_1ac9c8b29;
				};
				jule::Ptr<_1c62e2e96_Trait> _163521_t2 = _1c642247c_Trait((*(_163021_it))._field_Kind.ptr());;
				if ((_163521_t2 == nullptr)) {
					_1c636a606_pushErr(_self_.ptr(), (*((*(_163021_it))._field_Decl))._field_Token, jule::Str("trait @ cannot implement @, type should be trait", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_162848_t))))._field_Ident, &__jule_any_type4),jule::Any(_1c641d8da_Str((*(_163021_it))._field_Kind.ptr()), &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1ac9c8b29;
				};
				{
					auto expr = &((*((*(_162848_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac9cab92:;
					if (it != expr_end) {
						jule::I64 _164117_j = it - expr->begin();
						jule::Ptr<_1c64256e4_TypeSymbol> _164120_it2 = *it;
						{
							if ((_164117_j >= _163014_i)) {
								goto _iter_end_1ac9cab92;
							};
							if ((((*(_164120_it2))._field_Kind != nullptr) && _1c641dc2b_Equal((*(_163021_it))._field_Kind, (*(_164120_it2))._field_Kind))) {
								_1c636a606_pushErr(_self_.ptr(), (*((*(_163021_it))._field_Decl))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_163521_t2))._field_Ident, &__jule_any_type4)}));
								__jule_func_result=false;
								goto _iter_end_1ac9cab92;
							};
						}
						_iter_next_1ac9cab92:;
						++it;
						_164117_j++;
						goto _iter_begin_1ac9cab92;
					}
					_iter_end_1ac9cab92:;
				};
				if (((*(_162848_t)) == _163521_t2)) {
					_1c636a606_pushErr(_self_.ptr(), (*((*(_163021_it))._field_Decl))._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_162848_t))))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
				} else {
					_2206c697e_StrBuilder _165525_message = static__2206c6c9d_New(64LL);;
					__jule_func_result=(__jule_func_result && _1c637a6d2_catchTraitInheritCycle(_self_, (*(_162848_t)), _163521_t2, &(_165525_message)));
					if ((_2206d13a1_Len(&_165525_message) > 0LL)) {
						jule::Str _165829_errMsg = _2206d0e1c_Str(&_165525_message);;
						_2206d111a_Clear(&_165525_message);
						_1c6380462_pushCycleError(_self_.ptr(), &((*((*(_162848_t))))._field_Ident), &((*(_163521_t2))._field_Ident), &(_165525_message));
						_165829_errMsg+=_2206d0e1c_Str(&_165525_message);
						_1c636a606_pushErr(_self_.ptr(), (*((*(_163021_it))._field_Decl))._field_Token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_165829_errMsg, &__jule_any_type4)}));
					};
				};
			}
			_iter_next_1ac9c8b29:;
			++it;
			_163014_i++;
			goto _iter_begin_1ac9c8b29;
		}
		_iter_end_1ac9c8b29:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1c637accb_checkTraitDeclInherits(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c62e2e96_Trait>* _166947_t) {
	{
		auto expr = &((*((*(_166947_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9d09dd:;
		if (it != expr_end) {
			jule::I64 _167014_i = it - expr->begin();
			jule::Ptr<_1c64256e4_TypeSymbol> _167021_it = *it;
			{
				jule::Ptr<_1c62e2e96_Trait> _167121_t1 = _1c642247c_Trait((*(_167021_it))._field_Kind.ptr());;
				{
					auto expr = &((*((*(_166947_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac9d4d99:;
					if (it != expr_end) {
						jule::I64 _167218_j = it - expr->begin();
						jule::Ptr<_1c64256e4_TypeSymbol> _167225_it2 = *it;
						{
							if ((_167218_j == _167014_i)) {
								goto _iter_next_1ac9d4d99;
							};
							jule::Ptr<_1c62e2e96_Trait> _167625_t2 = _1c642247c_Trait((*(_167225_it2))._field_Kind.ptr());;
							{
								auto expr = &((*(_167121_t1))._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ac9d651b:;
								if (it != expr_end) {
									jule::Ptr<_1c62cebec_Fn> _167729_t1m = *it;
									{
										jule::Ptr<_1c62cebec_Fn> _167829_t2m = _1c62e3b45_FindMethod(_167625_t2.ptr(), (*(_167729_t1m))._field_Ident);;
										if ((_167829_t2m == nullptr)) {
											goto _iter_next_1ac9d651b;
										};
										jule::Ptr<_1c62d2b01_FnIns> _168225_t1f = _1c63742ad_getTraitCheckFnKind(_self_, &(_167729_t1m));;
										jule::Ptr<_1c62d2b01_FnIns> _168325_t2f = _1c63742ad_getTraitCheckFnKind(_self_, &(_167829_t2m));;
										if ((!(_1c62d3a69_equalTrait(_168225_t1f, &(_168325_t2f))))) {
											_1c636a606_pushErr(_self_.ptr(), (*((*(_167021_it))._field_Decl))._field_Token, jule::Str("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87), jule::Slice<jule::Any>::make({jule::Any((*((*(_166947_t))))._field_Ident, &__jule_any_type4),jule::Any((*(_167625_t2))._field_Ident, &__jule_any_type4),jule::Any(_1c62d499e_GetKindStr(_168225_t1f.ptr(), true), &__jule_any_type4),jule::Any(_1c62d499e_GetKindStr(_168325_t2f.ptr(), true), &__jule_any_type4)}));
											return;;
										};
									}
									_iter_next_1ac9d651b:;
									++it;
									goto _iter_begin_1ac9d651b;
								}
								_iter_end_1ac9d651b:;
							};
						}
						_iter_next_1ac9d4d99:;
						++it;
						_167218_j++;
						goto _iter_begin_1ac9d4d99;
					}
					_iter_end_1ac9d4d99:;
				};
			}
			_iter_next_1ac9d09dd:;
			++it;
			_167014_i++;
			goto _iter_begin_1ac9d09dd;
		}
		_iter_end_1ac9d09dd:;
	};
}



inline void _1c637b084_checkTraitDeclMethod(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c62cebec_Fn>* _169445_f) {
	if (_1c628649a_IsIgnoreIdent((*((*(_169445_f))))._field_Ident)) {
		_1c636a606_pushErr(_self_.ptr(), (*((*(_169445_f))))._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1c6286764_IsAnonIdent((*((*(_169445_f))))._field_Ident)) {
		_1c636a606_pushErr(_self_.ptr(), (*((*(_169445_f))))._field_Token, jule::Str("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	(*((*(_169445_f))))._field_sema=_self_;
	_1c637a22b_checkFnDeclPrototype(_self_, _169445_f);
	jule::Ptr<_1c62d2b01_FnIns> _170217_ins = _1c62d145c_instance((*(_169445_f)));;
	_1c6375710_reloadFnInsTypes(_self_, _170217_ins);
	(*(_170217_ins))._field_reloaded=true;
	_1c62d176a_appendInstance((*(_169445_f)).ptr(), &(_170217_ins));
}



inline void _1c637b33c_checkTraitDeclMethods(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c62e2e96_Trait>* _170846_t) {
	{
		auto expr = &((*((*(_170846_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9dd600:;
		if (it != expr_end) {
			jule::I64 _170914_i = it - expr->begin();
			jule::Ptr<_1c62cebec_Fn> _170921_f = *it;
			{
				_1c637b084_checkTraitDeclMethod(_self_, &(_170921_f));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1c62e42c7_findMethodInherit((*(_170846_t)).ptr(), &((*(_170921_f))._field_Ident)) != nullptr)) {
					_1c636a606_pushErr(_self_.ptr(), (*(_170921_f))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_170921_f))._field_Ident, &__jule_any_type4)}));
					_1c636a969_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					goto _iter_next_1ac9dd600;
				};
				_julec_label_1ac9e0e71:;
				{
					auto expr = &((*((*(_170846_t))))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac9deb51:;
					if (it != expr_end) {
						jule::I64 _172517_j = it - expr->begin();
						jule::Ptr<_1c62cebec_Fn> _172520_jf = *it;
						{
							{
								
								if ((_172517_j >= _170914_i)) {
									_case_begin_1ac9e233a:;
									{
										goto _iter_end_1ac9deb51;
									}
								}
								else if (((*(_170921_f))._field_Ident == (*(_172520_jf))._field_Ident)) {
									_case_begin_1ac9e23b2:;
									{
										_1c636a606_pushErr(_self_.ptr(), (*(_170921_f))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_170921_f))._field_Ident, &__jule_any_type4)}));
										_1c636a969_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_end_1ac9deb51;
									}
								}
								_match_end_1ac9e222a:;
							};
						}
						_iter_next_1ac9deb51:;
						++it;
						_172517_j++;
						goto _iter_begin_1ac9deb51;
					}
					_iter_end_1ac9deb51:;
				};
			}
			_iter_next_1ac9dd600:;
			++it;
			_170914_i++;
			goto _iter_begin_1ac9dd600;
		}
		_iter_end_1ac9dd600:;
	};
}



inline void _1c637b5e5_checkTraitDecl(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c62e2e96_Trait>* _174439_t) {
	if (_1c628649a_IsIgnoreIdent((*((*(_174439_t))))._field_Ident)) {
		_1c636a606_pushErr(_self_.ptr(), (*((*(_174439_t))))._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1c636b31b_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_174439_t)))), &((*((*(_174439_t))))._field_Ident), false)) {
		_1c636a606_pushErr(_self_.ptr(), (*((*(_174439_t))))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_174439_t))))._field_Ident, &__jule_any_type4)}));
		_1c636a969_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1c637accb_checkTraitDeclInherits(_self_, _174439_t);
	_1c637b33c_checkTraitDeclMethods(_self_, _174439_t);
}



inline jule::Bool _1c637b87b_checkTraitDecls(jule::Ptr<_1c63679bb_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9e7197:;
		if (it != expr_end) {
			jule::Ptr<_1c62e2e96_Trait> _175821_t = *it;
			{
				_1c637b5e5_checkTraitDecl(_self_, &(_175821_t));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ac9e7197:;
			++it;
			goto _iter_begin_1ac9e7197;
		}
		_iter_end_1ac9e7197:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c637bc77_checkTraitImplMethods(_1c63679bb_Sema* _self_, jule::Ptr<_1c62e2e96_Trait>* _176845_base, jule::Ptr<_1c631a320_Impl>* _176860_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_176860_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9e8cd1:;
		if (it != expr_end) {
			jule::Ptr<_1c62cebec_Fn> *_177016_f = it;
			{
				if ((_1c62e3b45_FindMethod((*(_176845_base)).ptr(), (*((*(_177016_f))))._field_Ident) == nullptr)) {
					_1c636a606_pushErr(_self_, (*((*(_177016_f))))._field_Token, jule::Str("undefined identifier: trait @ has no define @", 45), jule::Slice<jule::Any>::make({jule::Any((*((*(_176845_base))))._field_Ident, &__jule_any_type4),jule::Any((*((*(_177016_f))))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1ac9e8cd1:;
			++it;
			goto _iter_begin_1ac9e8cd1;
		}
		_iter_end_1ac9e8cd1:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c637c173_implToStruct(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c62b9d3b_Struct>* _177937_dest, jule::Ptr<_1c631a320_Impl>* _177957_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_177957_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9eb432:;
		if (it != expr_end) {
			jule::Ptr<_1c62cebec_Fn> _178321_f = *it;
			{
				if (((_1c62ba9a7_FindMethod((*(_177937_dest)).ptr(), (*(_178321_f))._field_Ident, (*(_178321_f))._field_Statically) != nullptr) || (_1c62bb139_FindField((*(_177937_dest)).ptr(), (*(_178321_f))._field_Ident) != nullptr))) {
					_1c636a606_pushErr(_self_.ptr(), (*(_178321_f))._field_Token, jule::Str("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*((*(_177937_dest))))._field_Ident, &__jule_any_type4),jule::Any((*(_178321_f))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1ac9eb432;
				};
				if ((((*((*(_177937_dest))))._field_Generics.len() > 0LL) && ((*(_178321_f))._field_Generics.len() > 0LL))) {
					{
						auto expr = &((*(_178321_f))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac9ee325:;
						if (it != expr_end) {
							jule::Ptr<_1c62a6454_GenericDecl> _179124_fg = *it;
							{
								{
									auto expr = &((*((*(_177937_dest))))._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1ac9eebe9:;
									if (it != expr_end) {
										jule::Ptr<_1c62a6454_GenericDecl> _179228_dg = *it;
										{
											if (((*(_179124_fg))._field_Ident == (*(_179228_dg))._field_Ident)) {
												_1c636a606_pushErr(_self_.ptr(), (*(_179124_fg))._field_Token, jule::Str("methods cannot have same generic identifier with owner same time", 64), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1ac9eebe9:;
										++it;
										goto _iter_begin_1ac9eebe9;
									}
									_iter_end_1ac9eebe9:;
								};
							}
							_iter_next_1ac9ee325:;
							++it;
							goto _iter_begin_1ac9ee325;
						}
						_iter_end_1ac9ee325:;
					};
				};
				_1c636b67e_checkDirectives(_self_, &((*(_178321_f))._field_Directives), jule::Any(_178321_f, &__jule_any_type64));
				(*(_178321_f))._field_sema=_self_;
				(*(_178321_f))._field_Owner=(*(_177937_dest));
				{ jule::Slice<jule::Ptr<_1c62cebec_Fn>> &__jule_push_dest = (*((*(_177937_dest))))._field_Methods; __jule_push_dest.push(_178321_f); };
			}
			_iter_next_1ac9eb432:;
			++it;
			goto _iter_begin_1ac9eb432;
		}
		_iter_end_1ac9eb432:;
	};
	{
		auto expr = &((*((*(_177957_ipl))))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9eb311:;
		if (it != expr_end) {
			jule::Ptr<_1c6389da6_Var> _180821_v = *it;
			{
				;
				if (((_1c62ba9a7_FindMethod((*(_177937_dest)).ptr(), (*(_180821_v))._field_Ident, true) != nullptr) || (_1c62bace8_FindStatic((*(_177937_dest)).ptr(), (*(_180821_v))._field_Ident) != nullptr))) {
					_1c636a606_pushErr(_self_.ptr(), (*(_180821_v))._field_Token, jule::Str("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*((*(_177937_dest))))._field_Ident, &__jule_any_type4),jule::Any((*(_180821_v))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1ac9eb311;
				};
				{ jule::Slice<jule::Ptr<_1c6389da6_Var>> &__jule_push_dest = (*((*(_177937_dest))))._field_Statics; __jule_push_dest.push(_180821_v); };
			}
			_iter_next_1ac9eb311:;
			++it;
			goto _iter_begin_1ac9eb311;
		}
		_iter_end_1ac9eb311:;
	};
	return __jule_func_result;;
}



inline void _1c637c42b_implTrait(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c631a320_Impl>* _182134_decl) {
	jule::Ptr<_1c641d522_TypeKind> _182217_base_t = _1c6371db0_selectType(_self_, &((*((*(_182134_decl))))._field_Base));;
	if ((_182217_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1c62e2e96_Trait> _182617_base = _1c642247c_Trait(_182217_base_t.ptr());;
	if ((_182617_base == nullptr)) {
		_1c636a606_pushErr(_self_.ptr(), (*((*((*(_182134_decl))))._field_Base))._field_Token, jule::Str("invalid base type for impl: @", 29), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str(_182217_base_t.ptr()), &__jule_any_type4)}));
		_1c636a969_pushSuggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c641d522_TypeKind> _183317_destT = _1c6371db0_selectType(_self_, &((*((*(_182134_decl))))._field_Dest));;
	if ((_183317_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1c62bcab9_StructIns> _183717_destS = _1c64221e6_Struct(_183317_destT.ptr());;
	if ((_183717_destS == nullptr)) {
		_1c636a606_pushErr(_self_.ptr(), (*((*((*(_182134_decl))))._field_Dest))._field_Token, jule::Str("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str(_183317_destT.ptr()), &__jule_any_type4)}));
		_1c636a969_pushSuggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c62b9d3b_Struct> _184417_dest = (*(_183717_destS))._field_Decl;;
	if ((_1c6289976_Dir((*((*(_184417_dest))._field_Token))._field_File.ptr()) != _1c6289976_Dir((*((*(_self_))._field_file))._field_File.ptr()))) {
		_1c636a606_pushErr(_self_.ptr(), (*((*((*(_182134_decl))))._field_Dest))._field_Token, jule::Str("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	_1c6388190_pushImplemented(_182617_base, &(_184417_dest));
	_1c638847b_pushImplements(&(_184417_dest), _182617_base);
	if (((*((*(_182134_decl))))._field_Statics.len() > 0LL)) {
		_1c636a606_pushErr(_self_.ptr(), (*((*((*(_182134_decl))))._field_Statics[0LL]))._field_Token, jule::Str("trait implementations cannot implement static field", 51), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1c637bc77_checkTraitImplMethods(_self_.ptr(), &(_182617_base), _182134_decl)))) {
			_case_begin_1aca0de06:;
		}
		else if ((!(_1c637c173_implToStruct(_self_, &(_184417_dest), _182134_decl)))) {
			_case_begin_1aca0de7d:;
		}
		_match_end_1aca0b453:;
	};
}



inline void _1c637c6d4_implStruct(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c631a320_Impl>* _186435_decl) {
	jule::Ptr<_1c641d522_TypeKind> _186517_destT = _1c6371db0_selectType(_self_, &((*((*(_186435_decl))))._field_Dest));;
	if ((_186517_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1c62bcab9_StructIns> _186917_destS = _1c64221e6_Struct(_186517_destT.ptr());;
	if ((_186917_destS == nullptr)) {
		_1c636a606_pushErr(_self_.ptr(), (*((*((*(_186435_decl))))._field_Dest))._field_Token, jule::Str("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str(_186517_destT.ptr()), &__jule_any_type4)}));
		_1c636a969_pushSuggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c62b9d3b_Struct> _187617_dest = (*(_186917_destS))._field_Decl;;
	if ((_1c6289976_Dir((*((*(_187617_dest))._field_Token))._field_File.ptr()) != _1c6289976_Dir((*((*(_self_))._field_file))._field_File.ptr()))) {
		_1c636a606_pushErr(_self_.ptr(), (*((*((*(_186435_decl))))._field_Dest))._field_Token, jule::Str("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1c637c173_implToStruct(_self_, &(_187617_dest), _186435_decl)))) {
			_case_begin_1aca14a66:;
		}
		_match_end_1aca1325c:;
	};
}



inline void _1c637c98c_implImpl(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c631a320_Impl>* _188833_decl) {
	{
		
		if (_1c631a6d8_IsTraitImpl((*(_188833_decl)).ptr())) {
			_case_begin_1aca15649:;
			{
				_1c637c42b_implTrait(_self_, _188833_decl);
			}
		}
		else if (_1c631a96e_IsStructImpl((*(_188833_decl)).ptr())) {
			_case_begin_1aca156c1:;
			{
				_1c637c6d4_implStruct(_self_, _188833_decl);
			}
		}
		_match_end_1aca15539:;
	};
}



inline void _1c637cd00_checkVarDecl(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c6389da6_Var>* _189937_decl, jule::Trait<_1c643d058_Lookup> _189953_l) {
	if (_1c628649a_IsIgnoreIdent((*((*(_189937_decl))))._field_Ident)) {
		_1c636a606_pushErr(_self_.ptr(), (*((*(_189937_decl))))._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1c638a4c2_IsTypeInferred((*(_189937_decl)).ptr())) {
		if ((!(_1c638a23b_IsInitialized((*(_189937_decl)).ptr())))) {
			_1c636a606_pushErr(_self_.ptr(), (*((*(_189937_decl))))._field_Token, jule::Str("type inferred declarations should have a initializer expression", 63), jule::Slice<jule::Any>());
		};
	} else {
		_1c6371277_checkType(_self_, &((*((*(_189937_decl))))._field_Kind), _189953_l);
	};
	if ((*((*(_189937_decl))))._field_Reference) {
		if ((*((*(_189937_decl))))._field_Constant) {
			_1c636a606_pushErr(_self_.ptr(), (*((*(_189937_decl))))._field_Token, jule::Str("references cannot be constant", 29), jule::Slice<jule::Any>());
		};
		if ((*((*(_189937_decl))))._field_Statically) {
			_1c636a606_pushErr(_self_.ptr(), (*((*(_189937_decl))))._field_Token, jule::Str("static variables cannot be reference", 36), jule::Slice<jule::Any>());
		};
	};
	if ((!(_1c638a23b_IsInitialized((*(_189937_decl)).ptr())))) {
		if ((*((*(_189937_decl))))._field_Constant) {
			_1c636a606_pushErr(_self_.ptr(), (*((*(_189937_decl))))._field_Token, jule::Str("missing expression for constant variable initialization", 55), jule::Slice<jule::Any>());
		};
		if ((*((*(_189937_decl))))._field_Statically) {
			_1c636a606_pushErr(_self_.ptr(), (*((*(_189937_decl))))._field_Token, jule::Str("static variables must be have initialize expression", 51), jule::Slice<jule::Any>());
		};
		if ((*((*(_189937_decl))))._field_Reference) {
			_1c636a606_pushErr(_self_.ptr(), (*((*(_189937_decl))))._field_Token, jule::Str("reference variables must be have lvalue initialize expression", 61), jule::Slice<jule::Any>());
		};
	};
}



inline void _1c637d0a8_checkGlobalVarDecl(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c6389da6_Var>* _193643_decl) {
	if (_1c636b31b_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_193643_decl)))), &((*((*(_193643_decl))))._field_Ident), (*((*(_193643_decl))))._field_Binded)) {
		_1c636a606_pushErr(_self_.ptr(), (*((*(_193643_decl))))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_193643_decl))))._field_Ident, &__jule_any_type4)}));
		_1c636a969_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_193643_decl))))._field_Binded && (*((*(_193643_decl))))._field_Constant)) {
		_1c636a606_pushErr(_self_.ptr(), (*((*(_193643_decl))))._field_Token, jule::Str("binded variables cannot be constant", 35), jule::Slice<jule::Any>());
	};
	if ((((!((*((*(_193643_decl))))._field_Binded)) && (!((*((*(_193643_decl))))._field_Constant))) && (!((*((*(_193643_decl))))._field_Statically)))) {
		_1c636a606_pushErr(_self_.ptr(), (*((*(_193643_decl))))._field_Token, jule::Str("global variables must be static", 31), jule::Slice<jule::Any>());
		_1c636a969_pushSuggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30), jule::Slice<jule::Any>());
	};
	_1c636b67e_checkDirectives(_self_, &((*((*(_193643_decl))))._field_Directives), jule::Any((*(_193643_decl)), &__jule_any_type8));
	_1c637cd00_checkVarDecl(_self_, _193643_decl, jule::Trait<_1c643d058_Lookup>(_self_, 3));
}



inline jule::Bool _1c637d33e_checkGlobalDecls(jule::Ptr<_1c63679bb_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca2326c:;
		if (it != expr_end) {
			jule::Ptr<_1c6389da6_Var> _195421_decl = *it;
			{
				_1c637d0a8_checkGlobalVarDecl(_self_, &(_195421_decl));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1aca2326c:;
			++it;
			goto _iter_begin_1aca2326c;
		}
		_iter_end_1aca2326c:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c637d73a_checkStructTraitImpl(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c62b9d3b_Struct>* _196445_strct, jule::Ptr<_1c62e2e96_Trait>* _196466_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_196466_trt))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca24d95:;
		if (it != expr_end) {
			jule::Ptr<_1c62cebec_Fn> _196521_tf = *it;
			{
				jule::Bool _196621_exist = false;;
				jule::Ptr<_1c62cebec_Fn> _196721_sf = _1c62ba9a7_FindMethod((*(_196445_strct)).ptr(), (*(_196521_tf))._field_Ident, (*(_196521_tf))._field_Statically);;
				jule::Ptr<_1c62d2b01_FnIns> _196817_tfK = _1c63742ad_getTraitCheckFnKind(_self_, &(_196521_tf));;
				if ((_196721_sf != nullptr)) {
					jule::Ptr<_1c62d2b01_FnIns> _197025_sfK = _1c63742ad_getTraitCheckFnKind(_self_, &(_196721_sf));;
					_196621_exist=_1c62d3a69_equalTrait(_196817_tfK, &(_197025_sfK));
				};
				if (_196621_exist) {
					jule::Ptr<_1c6298666_Directive> _197421_d = _1c6416938_findDirective(&((*(_196721_sf))._field_Directives), jule::Str("deprecated", 10));;
					if ((_197421_d != nullptr)) {
						_1c636a606_pushErr(_self_.ptr(), (*(_197421_d))._field_Tag, jule::Str("trait implementations cannot have deprecated code", 49), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1c636a606_pushErr(_self_.ptr(), (*((*(_196445_strct))))._field_Token, jule::Str("trait @ derived but not implemented define @", 44), jule::Slice<jule::Any>::make({jule::Any((*((*(_196466_trt))))._field_Ident, &__jule_any_type4),jule::Any(_1c62d499e_GetKindStr(_196817_tfK.ptr(), true), &__jule_any_type4)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1aca24d95:;
			++it;
			goto _iter_begin_1aca24d95;
		}
		_iter_end_1aca24d95:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c637da7b_checkStructImpls(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c62b9d3b_Struct>* _198841_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_198841_s))))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca2a9d3:;
		if (it != expr_end) {
			jule::Ptr<_1c62e2e96_Trait> _199021_trt = *it;
			{
				__jule_func_result=(_1c637d73a_checkStructTraitImpl(_self_, _198841_s, &(_199021_trt)) && __jule_func_result);
			}
			_iter_next_1aca2a9d3:;
			++it;
			goto _iter_begin_1aca2a9d3;
		}
		_iter_end_1aca2a9d3:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1c637ddbc_checkStructFields(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c62b9d3b_Struct>* _199642_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_199642_st))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca2be57:;
		if (it != expr_end) {
			jule::Ptr<_1c62b6e48_Field> _199821_f = *it;
			{
				(*(_199821_f))._field_Owner=(*(_199642_st));
				{
					auto expr = &((*((*(_199642_st))))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aca2cba0:;
					if (it != expr_end) {
						jule::Ptr<_1c62b6e48_Field> _200020_cf = *it;
						{
							if ((_199821_f == _200020_cf)) {
								goto _iter_end_1aca2cba0;
							} else if (((*(_199821_f))._field_Ident == (*(_200020_cf))._field_Ident)) {
								_1c636a606_pushErr(_self_.ptr(), (*(_199821_f))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_199821_f))._field_Ident, &__jule_any_type4)}));
								_1c636a969_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1aca2cba0:;
						++it;
						goto _iter_begin_1aca2cba0;
					}
					_iter_end_1aca2cba0:;
				};
			}
			_iter_next_1aca2be57:;
			++it;
			goto _iter_begin_1aca2be57;
		}
		_iter_end_1aca2be57:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1c637e175_checkStructDecl(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c62b9d3b_Struct>* _201340_s) {
	if (_1c628649a_IsIgnoreIdent((*((*(_201340_s))))._field_Ident)) {
		_1c636a606_pushErr(_self_.ptr(), (*((*(_201340_s))))._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1c636b31b_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_201340_s)))), &((*((*(_201340_s))))._field_Ident), (*((*(_201340_s))))._field_Binded)) {
		_1c636a606_pushErr(_self_.ptr(), (*((*(_201340_s))))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_201340_s))))._field_Ident, &__jule_any_type4)}));
		_1c636a969_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1c636b67e_checkDirectives(_self_, &((*((*(_201340_s))))._field_Directives), jule::Any((*(_201340_s)), &__jule_any_type65));
	{
		
		if ((!(_1c63794a0_checkDeclGenerics(_self_.ptr(), &((*((*(_201340_s))))._field_Generics))))) {
			_case_begin_1aca32a40:;
		}
		else if ((!(_1c637ddbc_checkStructFields(_self_, _201340_s)))) {
			_case_begin_1aca32aa6:;
		}
		else if ((!(_1c637da7b_checkStructImpls(_self_, _201340_s)))) {
			_case_begin_1aca32b1c:;
		}
		else if ((!(_1c637ecad_checkFuncDeclsBy(_self_, &((*((*(_201340_s))))._field_Methods))))) {
			_case_begin_1aca32b94:;
		}
		_match_end_1aca32567:;
	};
}



inline jule::Bool _1c637e40b_checkStructDecls(jule::Ptr<_1c63679bb_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca34943:;
		if (it != expr_end) {
			jule::Ptr<_1c62b9d3b_Struct> _203321_s = *it;
			{
				_1c637e175_checkStructDecl(_self_, &(_203321_s));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1aca34943:;
			++it;
			goto _iter_begin_1aca34943;
		}
		_iter_end_1aca34943:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1c637e6b4_checkAnonFuncDecl(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c62cebec_Fn>* _204342_f) {
	(*((*(_204342_f))))._field_sema=_self_;
	_1c637a22b_checkFnDeclPrototype(_self_, _204342_f);
}



inline void _1c637e96c_checkFuncDecl(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c62cebec_Fn>* _204838_f) {
	if (_1c628649a_IsIgnoreIdent((*((*(_204838_f))))._field_Ident)) {
		_1c636a606_pushErr(_self_.ptr(), (*((*(_204838_f))))._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1c62d0ba9_IsAnon((*(_204838_f)).ptr())) {
		_1c636a606_pushErr(_self_.ptr(), (*((*(_204838_f))))._field_Token, jule::Str("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	_1c636b67e_checkDirectives(_self_, &((*((*(_204838_f))))._field_Directives), jule::Any((*(_204838_f)), &__jule_any_type64));
	_1c637e6b4_checkAnonFuncDecl(_self_, _204838_f);
	if ((((*((*(_204838_f))))._field_Owner == nullptr) && _1c636b31b_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_204838_f)))), &((*((*(_204838_f))))._field_Ident), (*((*(_204838_f))))._field_Binded))) {
		if ((*((*(_204838_f))))._field_Ident.equal("init", 4)) {
			jule::Ptr<_1c62cebec_Fn> _206021_init = _1c6369050_FindFn(_self_.ptr(), jule::Str("init", 4), false);;
			if ((_206021_init != nullptr)) {
				return;;
			};
		};
		_1c636a606_pushErr(_self_.ptr(), (*((*(_204838_f))))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_204838_f))))._field_Ident, &__jule_any_type4)}));
		_1c636a969_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1c637ecad_checkFuncDeclsBy(jule::Ptr<_1c63679bb_Sema> _self_, jule::Slice<jule::Ptr<_1c62cebec_Fn>>* _207041_funcs) {
	{
		auto expr = _207041_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca3c055:;
		if (it != expr_end) {
			jule::Ptr<_1c62cebec_Fn> _207121_f = *it;
			{
				_1c637e96c_checkFuncDecl(_self_, &(_207121_f));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_1aca3c055:;
			++it;
			goto _iter_begin_1aca3c055;
		}
		_iter_end_1aca3c055:;
	};
	return true;;
}



inline jule::Bool _1c6380044_checkFuncDecls(jule::Ptr<_1c63679bb_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1c637ecad_checkFuncDeclsBy(_self_, &((*((*(_self_))._field_file))._field_Funcs));
	return __jule_func_result;;
}



inline void _1c6380462_pushCycleError(_1c63679bb_Sema* _self_, jule::Str* _208630_st1, jule::Str* _208641_st2, _2206c697e_StrBuilder* _208656_message) {
	;
	jule::Str _208813_refersTo = _22196922b_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_208630_st1)), &__jule_any_type4),jule::Any((*(_208641_st2)), &__jule_any_type4)}));;
	jule::Slice<jule::U8> _208917_buf = _2206d18bd_Buf(_208656_message);;
	_2206d0625_WriteStr(_208656_message, _2218bc547_Repeat(jule::Str(" ", 1), 7LL));
	_2206d0625_WriteStr(_208656_message, _208813_refersTo);
	_2206d08cd_WriteByte(_208656_message, '\n');
	_2206d036c_Write(_208656_message, _208917_buf);
}



inline void _1c6380b16_checkPackageDecls(jule::Ptr<_1c63679bb_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca42478:;
		if (it != expr_end) {
			jule::Ptr<_1c63d8135_SymbolTable> _211321_f = *it;
			{
				_1c636a1d8_setCurrentFile(_self_.ptr(), _211321_f);
				if ((!(_1c63773c1_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1aca42478:;
			++it;
			goto _iter_begin_1aca42478;
		}
		_iter_end_1aca42478:;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca44a52:;
		if (it != expr_end) {
			jule::Ptr<_1c63d8135_SymbolTable> _212021_f = *it;
			{
				_1c636a1d8_setCurrentFile(_self_.ptr(), _212021_f);
				if ((!(_1c637b87b_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1aca44a52:;
			++it;
			goto _iter_begin_1aca44a52;
		}
		_iter_end_1aca44a52:;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca44315:;
		if (it != expr_end) {
			jule::Ptr<_1c63d8135_SymbolTable> _212721_f = *it;
			{
				_1c636a1d8_setCurrentFile(_self_.ptr(), _212721_f);
				if ((!(_1c637d33e_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1aca44315:;
			++it;
			goto _iter_begin_1aca44315;
		}
		_iter_end_1aca44315:;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca469dd:;
		if (it != expr_end) {
			jule::Ptr<_1c63d8135_SymbolTable> _213421_f = *it;
			{
				_1c636a1d8_setCurrentFile(_self_.ptr(), _213421_f);
				{
					
					if ((!(_1c6380044_checkFuncDecls(_self_)))) {
						_case_begin_1aca47835:;
					}
					else if ((!(_1c637e40b_checkStructDecls(_self_)))) {
						_case_begin_1aca4789b:;
					}
					else {
						_case_begin_1aca477be:;
						{
							goto _iter_next_1aca469dd;
						}
					}
					_match_end_1aca47769:;
				};
				return;;
			}
			_iter_next_1aca469dd:;
			++it;
			goto _iter_begin_1aca469dd;
		}
		_iter_end_1aca469dd:;
	};
}



inline void _1c6380e79_checkDataForTypeInference(_1c63679bb_Sema* _self_, jule::Ptr<_1c63dd35a_Data>* _214645_d, jule::Ptr<_1c6283a3b_Token>* _214656_err_token) {
	{
		
		if (_1c63dd712_IsNil((*(_214645_d)).ptr())) {
			_case_begin_1aca48979:;
			{
				_1c636a606_pushErr(_self_, (*(_214656_err_token)), jule::Str("nil is cannot use with type inferred definitions", 48), jule::Slice<jule::Any>());
			}
		}
		else if (_1c63dd998_IsVoid((*(_214645_d)).ptr())) {
			_case_begin_1aca48a01:;
			{
				_1c636a606_pushErr(_self_, (*(_214656_err_token)), jule::Str("void data is cannot use for type inferred definitions", 53), jule::Slice<jule::Any>());
			}
		}
		else if ((*((*((*(_214645_d))))._field_Kind))._field_Variadic) {
			_case_begin_1aca48a78:;
			{
				_1c636a606_pushErr(_self_, (*(_214656_err_token)), jule::Str("invalid expression for type inference", 37), jule::Slice<jule::Any>());
			}
		}
		_match_end_1aca48858:;
	};
}



inline void _1c6381232_checkVarValue(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c6389da6_Var>* _215838_v) {
	if (_1c638a4c2_IsTypeInferred((*(_215838_v)).ptr())) {
		(*((*(_215838_v))))._field_Kind=jule::new_ptr<_1c64256e4_TypeSymbol>(_1c64256e4_TypeSymbol{._field_Kind=(*((*((*((*(_215838_v))))._field_Value))._field_Data))._field_Kind});
		_1c6380e79_checkDataForTypeInference(_self_.ptr(), &((*((*((*(_215838_v))))._field_Value))._field_Data), &((*((*((*((*(_215838_v))))._field_Value))._field_Expr))._field_Token));
		_1c6376623_checkValidityForInitExpr(_self_, (*((*(_215838_v))))._field_Mutable, (*((*(_215838_v))))._field_Reference, &((*((*((*(_215838_v))))._field_Kind))._field_Kind), &((*((*((*(_215838_v))))._field_Value))._field_Data), &((*((*((*((*(_215838_v))))._field_Value))._field_Expr))._field_Token));
	} else {
		jule::Ptr<_1c642c91b_Arr> _217121_arr = _1c6421943_Arr((*((*((*(_215838_v))))._field_Kind))._field_Kind.ptr());;
		if ((_217121_arr != nullptr)) {
			if ((*(_217121_arr))._field_Auto) {
				jule::Ptr<_1c642c91b_Arr> _217425_dataArr = _1c6421943_Arr((*((*((*((*(_215838_v))))._field_Value))._field_Data))._field_Kind.ptr());;
				if ((_217425_dataArr != nullptr)) {
					(*(_217121_arr))._field_N=(*(_217425_dataArr))._field_N;
				};
			};
		};
		if (_1c6373114_checkAssignType(_self_, (*((*(_215838_v))))._field_Reference, &((*((*((*(_215838_v))))._field_Kind))._field_Kind), &((*((*((*(_215838_v))))._field_Value))._field_Data), (*((*((*((*(_215838_v))))._field_Value))._field_Expr))._field_Token)) {
			_1c6376623_checkValidityForInitExpr(_self_, (*((*(_215838_v))))._field_Mutable, (*((*(_215838_v))))._field_Reference, &((*((*((*(_215838_v))))._field_Kind))._field_Kind), &((*((*((*(_215838_v))))._field_Value))._field_Data), &((*((*((*((*(_215838_v))))._field_Value))._field_Expr))._field_Token));
		};
	};
	if (((*((*(_215838_v))))._field_Reference && (!(_1c6439a16_isValidForRef(&((*((*((*(_215838_v))))._field_Kind))._field_Kind)))))) {
		_1c636a606_pushErr(_self_.ptr(), (*((*(_215838_v))))._field_Token, jule::Str("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*((*((*(_215838_v))))._field_Kind))._field_Kind.ptr()), &__jule_any_type4)}));
	};
	if ((*((*(_215838_v))))._field_Constant) {
		jule::Bool _219617_comptime = _1c6422c30_comptime((*((*((*((*(_215838_v))))._field_Value))._field_Data))._field_Kind.ptr());;
		if (((!(_1c63ddc2e_IsConst((*((*((*(_215838_v))))._field_Value))._field_Data.ptr()))) && (!(_219617_comptime)))) {
			_1c636a606_pushErr(_self_.ptr(), (*((*((*((*(_215838_v))))._field_Value))._field_Expr))._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		if ((_219617_comptime && (_1c642401c_comptimeRange((*((*((*((*(_215838_v))))._field_Value))._field_Data))._field_Kind.ptr()) != nullptr))) {
			_1c636a606_pushErr(_self_.ptr(), (*((*((*((*(_215838_v))))._field_Value))._field_Expr))._field_Token, jule::Str("@ is invalid data-type for constant", 35), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*((*((*((*(_215838_v))))._field_Value))._field_Data))._field_Kind.ptr()), &__jule_any_type4)}));
		};
	} else {
		(*((*((*((*(_215838_v))))._field_Value))._field_Data))._field_Constant=nullptr;
	};
	if ((_1c6422999_Tup((*((*((*(_215838_v))))._field_Kind))._field_Kind.ptr()) != nullptr)) {
		(*((*((*(_215838_v))))._field_Kind))._field_Kind=nullptr;
	};
}



inline void _1c6381595_evalVarValue(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c6389da6_Var>* _221437_decl, jule::Trait<_1c643d058_Lookup> _221453_l) {
	if ((!(_1c638a23b_IsInitialized((*(_221437_decl)).ptr())))) {
		return;;
	};
	jule::Ptr<_1c63e004e_Eval> _221917_eval = nullptr;;
	if (((*((*(_221437_decl))))._field_Kind != nullptr)) {
		_221917_eval=_1c6372366_evalpd(_self_, _221453_l, (*((*((*(_221437_decl))))._field_Kind))._field_Kind, (*(_221437_decl)));
	} else {
		_221917_eval=_1c6372366_evalpd(_self_, _221453_l, nullptr, (*(_221437_decl)));
	};
	(*(_221917_eval))._field_immutable=(!((*((*(_221437_decl))))._field_Mutable));
	(*((*((*(_221437_decl))))._field_Value))._field_Data=_1c640d028_evalExpr(_221917_eval, (*((*((*(_221437_decl))))._field_Value))._field_Expr);
}



inline void _1c6381908_checkVar(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c6389da6_Var>* _223133_decl, jule::Trait<_1c643d058_Lookup> _223149_l) {
	_1c6381595_evalVarValue(_self_, _223133_decl, _223149_l);
	if (((*((*((*(_223133_decl))))._field_Value))._field_Data == nullptr)) {
		return;;
	};
	_1c6381232_checkVarValue(_self_, _223133_decl);
}



inline void _1c6381b06_checkGlobals(jule::Ptr<_1c63679bb_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca61e04:;
		if (it != expr_end) {
			jule::Ptr<_1c6389da6_Var> _224121_decl = *it;
			{
				if ((*(_224121_decl))._field_Binded) {
					goto _iter_next_1aca61e04;
				};
				if (((_1c638a23b_IsInitialized(_224121_decl.ptr()) && ((*((*(_224121_decl))._field_Value))._field_Data == nullptr)) || (_1c638a4c2_IsTypeInferred(_224121_decl.ptr()) && ((*((*(_224121_decl))._field_Kind))._field_Kind == nullptr)))) {
					_1c6381908_checkVar(_self_, &(_224121_decl), jule::Trait<_1c643d058_Lookup>(_self_, 3));
				};
			}
			_iter_next_1aca61e04:;
			++it;
			goto _iter_begin_1aca61e04;
		}
		_iter_end_1aca61e04:;
	};
}



inline jule::Ptr<_1c62d2b01_FnIns> _1c6382002_readyToCheckFn(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c62bcab9_StructIns>* _225539_s, jule::Ptr<_1c62cebec_Fn>* _225559_f) {
	jule::Ptr<_1c62d2b01_FnIns> _225617_ins = _1c62d145c_instance((*(_225559_f)));;
	if (((*((*(_225559_f))))._field_Instances.len() != 0LL)) {
		return _225617_ins;;
	};
	(*(_225617_ins))._field_Owner=(*(_225539_s));
	_1c62d176a_appendInstance((*(_225559_f)).ptr(), &(_225617_ins));
	(*(_225617_ins))._field_reloaded=true;
	if (_1c6375710_reloadFnInsTypes(_self_, _225617_ins)) {
		return _225617_ins;;
	};
	return nullptr;;
}



inline void _1c6382365_checkTypeMethod(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c62bcab9_StructIns>* _226940_s, jule::Ptr<_1c62cebec_Fn>* _226960_f) {
	if (((*((*(_226960_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1c62d2b01_FnIns> _227417_ins = (*((*(_226960_f))))._field_Instances[0LL];;
	if (((*((*(_227417_ins))._field_Scope))._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1c6384d18_checkFnIns(_self_, &(_227417_ins));
}



inline jule::Ptr<_1c62d2b01_FnIns> _1c638281b_checkStructInsOp(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c62bcab9_StructIns>* _228241_s, jule::Ptr<_1c62cebec_Fn>* _228261_f, jule::Fn<jule::Bool(jule::Ptr<_1c62cebec_Fn>)> _228269_p) {
	if (((((*(_228261_f)) == nullptr) || ((*((*(_228261_f))))._field_Generics.len() > 0LL)) || (!(_228269_p((*(_228261_f))))))) {
		return nullptr;;
	};
	return (*((*(_228261_f))))._field_Instances[0LL];;
}



inline jule::Bool _1c6382c17_checkStructEnv(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c62bcab9_StructIns>* _229239_s, jule::Ptr<_1c6283a3b_Token> _229258_errorToken) {
	jule::Bool __jule_func_result = false;
	_1c64303d0_typeChecker _229317_tc = _1c64303d0_typeChecker{._field_s=(*((*((*(_229239_s))))._field_Decl))._field_sema, ._field_rootLookup=jule::Trait<_1c643d058_Lookup>((*((*((*(_229239_s))))._field_Decl))._field_sema, 3), ._field_lookup=jule::Trait<_1c643d058_Lookup>((*((*((*(_229239_s))))._field_Decl))._field_sema, 3), ._field_referencer=jule::new_ptr<_1c642e3e0_referencer>(_1c642e3e0_referencer{._field_ident=(*((*((*(_229239_s))))._field_Decl))._field_Ident, ._field_owner=jule::Any((*((*(_229239_s))))._field_Decl, &__jule_any_type65), }), ._field_refers=(*((*(_229239_s))))._field_Refers, };;
	if (((*((*(_229239_s))))._field_Generics.len() > 0LL)) {
		_229317_tc._field_useGenerics=jule::Slice<jule::Ptr<_1c641c730_TypeAlias>>::alloc(0LL, (*((*(_229239_s))))._field_Generics.len());
		{
			auto expr = &((*((*(_229239_s))))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aca6d3a5:;
			if (it != expr_end) {
				jule::I64 _230618_i = it - expr->begin();
				jule::Ptr<_1c641bb3b_InsGeneric> _230625_g = *it;
				{
					jule::Ptr<_1c62a6454_GenericDecl> _230725_decl = (*((*((*(_229239_s))))._field_Decl))._field_Generics[_230618_i];;
					{ jule::Slice<jule::Ptr<_1c641c730_TypeAlias>> &__jule_push_dest = _229317_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_1c641c730_TypeAlias>(_1c641c730_TypeAlias{._field_Token=(*(_230725_decl))._field_Token, ._field_Ident=(*(_230725_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1c64256e4_TypeSymbol>(_1c64256e4_TypeSymbol{._field_Kind=(*(_230625_g))._field_Kind}), })); };
				}
				_iter_next_1aca6d3a5:;
				++it;
				_230618_i++;
				goto _iter_begin_1aca6d3a5;
			}
			_iter_end_1aca6d3a5:;
		};
	};
	jule::Ptr<_1c63d8135_SymbolTable> _231617_oldFile = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1c636a1d8_setCurrentFile(_self_.ptr(), _231617_oldFile);
	});;
	if (((*((*(_self_))._field_file))._field_File != (*((*((*((*(_229239_s))))._field_Decl))._field_Token))._field_File)) {
		jule::Ptr<_1c63d8135_SymbolTable> _232021_file = _1c6366712_findFile(&((*(_self_))._field_files), &((*((*((*((*(_229239_s))))._field_Decl))._field_Token))._field_File));;
		if ((_232021_file != nullptr)) {
			_1c636a1d8_setCurrentFile(_self_.ptr(), _232021_file);
		};
	};
	if (((*((*(_229239_s))))._field_Generics.len() > 0LL)) {
		jule::Ptr<_1c63182da_constraintChecker> _232721_cc = _1c6370d7b_constraintChecker(_self_);;
		(*(_232721_cc))._field_et=_229258_errorToken;
		(*(_232721_cc))._field_si=(*(_229239_s));
		(*(_232721_cc))._field_genericsA=_229317_tc._field_useGenerics;
		(*(_232721_cc))._field_uniq=true;
		if ((!(_1c6319220_check(_232721_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*((*(_229239_s))))._field_Statics.len() > 0LL)) {
		jule::I64 _234021_n = (*(_self_))._field_errors.len();;
		(*((*(_self_))._field_files[0LL]))._field_TypeAliases=jule::append(_229317_tc._field_useGenerics,(*((*(_self_))._field_files[0LL]))._field_TypeAliases);
		{
			auto expr = &((*((*(_229239_s))))._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aca76787:;
			if (it != expr_end) {
				jule::Ptr<_1c6389da6_Var> _234225_v = *it;
				{
					_1c637cd00_checkVarDecl(_self_, &(_234225_v), jule::Trait<_1c643d058_Lookup>(_self_, 3));
					_1c6381908_checkVar(_self_, &(_234225_v), jule::Trait<_1c643d058_Lookup>(_self_, 3));
					__jule_func_result=((((*(_self_))._field_errors.len() - _234021_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1aca76787:;
				++it;
				goto _iter_begin_1aca76787;
			}
			_iter_end_1aca76787:;
		};
		(*((*(_self_))._field_files[0LL]))._field_TypeAliases=(*((*(_self_))._field_files[0LL]))._field_TypeAliases.slice(_229317_tc._field_useGenerics.len());
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1c63e004e_Eval> _235317_eval = _1c6372aa3_eval(_self_, jule::Trait<_1c643d058_Lookup>(_self_, 3));;
	(*((*(_229239_s))))._field_Comparable=(!((*((*((*(_229239_s))))._field_Decl))._field_Binded));
	{
		auto expr = &((*((*(_229239_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca7a36d:;
		if (it != expr_end) {
			jule::Ptr<_1c62bc019_FieldIns> _235521_f = *it;
			{
				jule::Ptr<_1c641d522_TypeKind> _235621_kind = _1c6437a7a_checkDecl(&_229317_tc, &((*((*((*(_235521_f))._field_Decl))._field_Kind))._field_Decl));;
				__jule_func_result=((_235621_kind != nullptr) && __jule_func_result);
				if ((_235621_kind == nullptr)) {
					if (((_self_ != (*((*((*(_229239_s))))._field_Decl))._field_sema) && ((*((*((*((*(_229239_s))))._field_Decl))._field_sema))._field_errors.len() > 0LL))) {
						((*(_self_))._field_errors).append((*((*((*((*(_229239_s))))._field_Decl))._field_sema))._field_errors);;
						(*((*((*((*(_229239_s))))._field_Decl))._field_sema))._field_errors=nullptr;
					};
					goto _iter_next_1aca7a36d;
				};
				(*(_235521_f))._field_Kind=_235621_kind;
				(*((*(_229239_s))))._field_Mutable=((*((*(_229239_s))))._field_Mutable || ((!((*((*(_235521_f))._field_Decl))._field_Mutable)) && _1c641eda3_Mutable((*(_235521_f))._field_Kind.ptr())));
				(*((*(_229239_s))))._field_Comparable=((*((*(_229239_s))))._field_Comparable && _1c641eb1c_Comparable((*(_235521_f))._field_Kind.ptr()));
				if (((*((*(_235521_f))._field_Decl))._field_Default == nullptr)) {
					goto _iter_next_1aca7a36d;
				};
				(*(_235317_eval))._field_prefix=(*(_235521_f))._field_Kind;
				(*(_235317_eval))._field_field=_235521_f;
				(*(_235521_f))._field_Default=_1c640d028_evalExpr(_235317_eval, (*((*(_235521_f))._field_Decl))._field_Default);
				if (((*(_235521_f))._field_Default == nullptr)) {
					goto _iter_next_1aca7a36d;
				};
				;
				_1c6373114_checkAssignType(_self_, false, &((*(_235521_f))._field_Kind), &((*(_235521_f))._field_Default), (*((*((*(_235521_f))._field_Decl))._field_Default))._field_Token);
			}
			_iter_next_1aca7a36d:;
			++it;
			goto _iter_begin_1aca7a36d;
		}
		_iter_end_1aca7a36d:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c6383113_precheckStructIns(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c62bcab9_StructIns>* _238942_s, jule::Ptr<_1c6283a3b_Token> _238961_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1c6382c17_checkStructEnv(_self_, _238942_s, _238961_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*((*(_238942_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca857a7:;
		if (it != expr_end) {
			jule::Ptr<_1c62cebec_Fn> _239421_f = *it;
			{
				if (((*(_239421_f))._field_Generics.len() == 0LL)) {
					if ((_1c6382002_readyToCheckFn(_self_, _238942_s, &(_239421_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1aca857a7:;
			++it;
			goto _iter_begin_1aca857a7;
		}
		_iter_end_1aca857a7:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1c63833bb_checkStructIns(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c62bcab9_StructIns>* _240439_s) {
	{
		auto expr = &((*((*(_240439_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca8618c:;
		if (it != expr_end) {
			jule::Ptr<_1c62cebec_Fn> _240521_f = *it;
			{
				_1c6382365_checkTypeMethod(_self_, _240439_s, &(_240521_f));
			}
			_iter_next_1aca8618c:;
			++it;
			goto _iter_begin_1aca8618c;
		}
		_iter_end_1aca8618c:;
	};
}



inline void _1c6383674_checkTypeStruct(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c62b9d3b_Struct>* _241040_s) {
	if ((*((*(_241040_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_241040_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_241040_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca88227:;
		if (it != expr_end) {
			jule::Ptr<_1c62bcab9_StructIns> _242321_ins = *it;
			{
				_1c63833bb_checkStructIns(_self_, &(_242321_ins));
			}
			_iter_next_1aca88227:;
			++it;
			goto _iter_begin_1aca88227;
		}
		_iter_end_1aca88227:;
	};
}



inline void _1c6383872_checkStructTypes(jule::Ptr<_1c63679bb_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca89602:;
		if (it != expr_end) {
			jule::Ptr<_1c62b9d3b_Struct> _242921_s = *it;
			{
				_1c6383674_checkTypeStruct(_self_, &(_242921_s));
			}
			_iter_next_1aca89602:;
			++it;
			goto _iter_begin_1aca89602;
		}
		_iter_end_1aca89602:;
	};
}



inline void _1c6383b2a_checkStructInsOperators(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c62bcab9_StructIns> _243447_s) {
	{
		auto expr = &((*(_243447_s))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca8ab53:;
		if (it != expr_end) {
			jule::Ptr<_1c62cebec_Fn> _243521_m = *it;
			{
				{
					auto &_match_expr{ (*(_243521_m))._field_Ident };
					
					if (_match_expr == jule::Str("Eq", 2)) {
						_case_begin_1aca8badd:;
						{
							(*(_243447_s))._field_Operators._field_Eq=_1c638281b_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c638bc10_Eq);
							(*(_243447_s))._field_Comparable=((*(_243447_s))._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str("Gt", 2)) {
						_case_begin_1aca8bb65:;
						{
							(*(_243447_s))._field_Operators._field_Gt=_1c638281b_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c638bec9_Gt);
						}
					}
					else if (_match_expr == jule::Str("GtEq", 4)) {
						_case_begin_1aca8bbdc:;
						{
							(*(_243447_s))._field_Operators._field_GtEq=_1c638281b_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c638c293_GtEq);
						}
					}
					else if (_match_expr == jule::Str("Lt", 2)) {
						_case_begin_1aca8bc64:;
						{
							(*(_243447_s))._field_Operators._field_Lt=_1c638281b_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c638c55c_Lt);
						}
					}
					else if (_match_expr == jule::Str("LtEq", 4)) {
						_case_begin_1aca8bcdb:;
						{
							(*(_243447_s))._field_Operators._field_LtEq=_1c638281b_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c638c826_LtEq);
						}
					}
					else if (_match_expr == jule::Str("Shl", 3)) {
						_case_begin_1aca8bd63:;
						{
							(*(_243447_s))._field_Operators._field_Shl=_1c638281b_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c638ce64_Shl);
						}
					}
					else if (_match_expr == jule::Str("Shr", 3)) {
						_case_begin_1aca8bdda:;
						{
							(*(_243447_s))._field_Operators._field_Shr=_1c638281b_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c638d22d_Shr);
						}
					}
					else if (_match_expr == jule::Str("Add", 3)) {
						_case_begin_1aca8be62:;
						{
							(*(_243447_s))._field_Operators._field_Add=_1c638281b_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c638d4e7_Add);
						}
					}
					else if (_match_expr == jule::Str("Sub", 3)) {
						_case_begin_1aca8bed9:;
						{
							(*(_243447_s))._field_Operators._field_Sub=_1c638281b_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c638d7b1_Sub);
						}
					}
					else if (_match_expr == jule::Str("Div", 3)) {
						_case_begin_1aca8c061:;
						{
							(*(_243447_s))._field_Operators._field_Div=_1c638281b_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c638da7a_Div);
						}
					}
					else if (_match_expr == jule::Str("Mul", 3)) {
						_case_begin_1aca8c0d8:;
						{
							(*(_243447_s))._field_Operators._field_Mul=_1c638281b_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c638dd44_Mul);
						}
					}
					else if (_match_expr == jule::Str("Mod", 3)) {
						_case_begin_1aca8c160:;
						{
							(*(_243447_s))._field_Operators._field_Mod=_1c638281b_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c638e10d_Mod);
						}
					}
					else if (_match_expr == jule::Str("BitAnd", 6)) {
						_case_begin_1aca8c1d7:;
						{
							(*(_243447_s))._field_Operators._field_BitAnd=_1c638281b_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c638e3c7_BitAnd);
						}
					}
					else if (_match_expr == jule::Str("BitOr", 5)) {
						_case_begin_1aca8c25e:;
						{
							(*(_243447_s))._field_Operators._field_BitOr=_1c638281b_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c638e691_BitOr);
						}
					}
					else if (_match_expr == jule::Str("BitXor", 6)) {
						_case_begin_1aca8c2d6:;
						{
							(*(_243447_s))._field_Operators._field_BitXor=_1c638281b_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c638e95a_BitXor);
						}
					}
					else if (_match_expr == jule::Str("Neg", 3)) {
						_case_begin_1aca8c35d:;
						{
							(*(_243447_s))._field_Operators._field_Neg=_1c638281b_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c6390098_Neg);
						}
					}
					else if (_match_expr == jule::Str("Pos", 3)) {
						_case_begin_1aca8c3d5:;
						{
							(*(_243447_s))._field_Operators._field_Pos=_1c638281b_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c6390362_Pos);
						}
					}
					else if (_match_expr == jule::Str("BitNot", 6)) {
						_case_begin_1aca8c45c:;
						{
							(*(_243447_s))._field_Operators._field_BitNot=_1c638281b_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c639062b_BitNot);
						}
					}
					else if (_match_expr == jule::Str("AddAssign", 9)) {
						_case_begin_1aca8c4d4:;
						{
							(*(_243447_s))._field_Operators._field_AddAssign=_1c638281b_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c6390c69_AddAssign);
						}
					}
					else if (_match_expr == jule::Str("SubAssign", 9)) {
						_case_begin_1aca8c55b:;
						{
							(*(_243447_s))._field_Operators._field_SubAssign=_1c638281b_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c6391033_SubAssign);
						}
					}
					else if (_match_expr == jule::Str("DivAssign", 9)) {
						_case_begin_1aca8c5d3:;
						{
							(*(_243447_s))._field_Operators._field_DivAssign=_1c638281b_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c63912ec_DivAssign);
						}
					}
					else if (_match_expr == jule::Str("MulAssign", 9)) {
						_case_begin_1aca8c65a:;
						{
							(*(_243447_s))._field_Operators._field_MulAssign=_1c638281b_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c63915b6_MulAssign);
						}
					}
					else if (_match_expr == jule::Str("ModAssign", 9)) {
						_case_begin_1aca8c6d2:;
						{
							(*(_243447_s))._field_Operators._field_ModAssign=_1c638281b_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c6391880_ModAssign);
						}
					}
					else if (_match_expr == jule::Str("ShlAssign", 9)) {
						_case_begin_1aca8c759:;
						{
							(*(_243447_s))._field_Operators._field_ShlAssign=_1c638281b_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c6391b49_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str("ShrAssign", 9)) {
						_case_begin_1aca8c7d1:;
						{
							(*(_243447_s))._field_Operators._field_ShrAssign=_1c638281b_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c6391e13_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str("BitOrAssign", 11)) {
						_case_begin_1aca8c858:;
						{
							(*(_243447_s))._field_Operators._field_BitOrAssign=_1c638281b_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c63921cc_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str("BitAndAssign", 12)) {
						_case_begin_1aca8c8d0:;
						{
							(*(_243447_s))._field_Operators._field_BitAndAssign=_1c638281b_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c6392496_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str("BitXorAssign", 12)) {
						_case_begin_1aca8c957:;
						{
							(*(_243447_s))._field_Operators._field_BitXorAssign=_1c638281b_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c6392760_BitXorAssign);
						}
					}
					_match_end_1aca8b846:;
				};
			}
			_iter_next_1aca8ab53:;
			++it;
			goto _iter_begin_1aca8ab53;
		}
		_iter_end_1aca8ab53:;
	};
}



inline void _1c6383dd3_precheckStructType(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c62b9d3b_Struct>* _249843_s) {
	if ((*((*(_249843_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_249843_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_249843_s))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1c62bcab9_StructIns> _250921_ins = _1c62ba29d_instance((*(_249843_s)));;
		(*(_250921_ins))._field_Checked=true;
		_1c62ba5ab_appendInstance((*(_249843_s)).ptr(), &(_250921_ins));
		_1c6383113_precheckStructIns(_self_, &(_250921_ins), nullptr);
	};
	_1c6383b2a_checkStructInsOperators(_self_, (*((*(_249843_s))))._field_Instances[0LL]);
}



inline void _1c63840d1_precheckStructTypes(jule::Ptr<_1c63679bb_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acaa3918:;
		if (it != expr_end) {
			jule::Ptr<_1c62b9d3b_Struct> _251921_s = *it;
			{
				_1c6383dd3_precheckStructType(_self_, &(_251921_s));
			}
			_iter_next_1acaa3918:;
			++it;
			goto _iter_begin_1acaa3918;
		}
		_iter_end_1acaa3918:;
	};
}



inline void _1c6384389_checkRets(_1c63679bb_Sema* _self_, jule::Ptr<_1c62d2b01_FnIns>* _252433_f) {
	if (_1c62d0170_IsVoid((*((*(_252433_f))))._field_Decl.ptr())) {
		return;;
	};
	_1c638680e_missingRetChecker _252813_mrc = static__1c6386bc7_new();;
	jule::Bool _252913_ok = _1c6387ce9_check(&_252813_mrc, (*((*(_252433_f))))._field_Scope);;
	if ((!(_252913_ok))) {
		_1c636a606_pushErr(_self_, (*((*((*(_252433_f))))._field_Decl))._field_Token, jule::Str("missing return at end of function", 33), jule::Slice<jule::Any>());
	};
}



inline void _1c63846ec_checkFnInsSc(_1c63679bb_Sema* _self_, jule::Ptr<_1c62d2b01_FnIns>* _253536_f, jule::Ptr<_1c6327a58_scopeChecker>* _253552_sc) {
	_1c6365cb6_appendRetVars(&((*((*((*(_253552_sc))))._field_table))._field_Vars), _253536_f);
	_1c63660a2_appendParamVars(&((*((*((*(_253552_sc))))._field_table))._field_Vars), _253536_f);
	_1c636638d_appendGenericTypeAliases(&((*((*((*(_253552_sc))))._field_table))._field_TypeAliases), _253536_f);
	_1c633e377_check((*(_253552_sc)), &((*((*((*(_253536_f))))._field_Decl))._field_Scope), &((*((*(_253536_f))))._field_Scope));
	if ((!(_1c632a62c_stopped((*(_253552_sc)).ptr())))) {
		_1c6384389_checkRets(_self_, _253536_f);
	};
}



inline void _1c6384a60_checkFnInsCaller(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c62d2b01_FnIns>* _254841_f, jule::Ptr<_1c6283a3b_Token> _254856_caller) {
	if ((*((*((*(_254841_f))))._field_Decl))._field_Binded) {
		return;;
	};
	jule::Ptr<_1c63d8135_SymbolTable> _255317_old = (*((*((*((*(_254841_f))))._field_Decl))._field_sema))._field_file;;
	__JULE_DEFER({
		_1c636a1d8_setCurrentFile((*((*((*(_254841_f))))._field_Decl))._field_sema.ptr(), _255317_old);
	});;
	jule::Ptr<_1c63d8135_SymbolTable> _255517_file = _1c6366712_findFile(&((*((*((*((*(_254841_f))))._field_Decl))._field_sema))._field_files), &((*((*((*((*(_254841_f))))._field_Decl))._field_Token))._field_File));;
	if ((_255517_file != nullptr)) {
		_1c636a1d8_setCurrentFile((*((*((*(_254841_f))))._field_Decl))._field_sema.ptr(), _255517_file);
	};
	jule::Ptr<_1c6327a58_scopeChecker> _256017_sc = _1c631c8e9_newScopeChecker(&((*((*((*(_254841_f))))._field_Decl))._field_sema), (*(_254841_f)));;
	(*(_256017_sc))._field_calledFrom=_254856_caller;
	_1c63846ec_checkFnInsSc(_self_.ptr(), _254841_f, &(_256017_sc));
	if (((*((*((*(_254841_f))))._field_Decl))._field_sema != _self_)) {
		((*(_self_))._field_errors).append((*((*((*((*(_254841_f))))._field_Decl))._field_sema))._field_errors);;
		(*((*((*((*(_254841_f))))._field_Decl))._field_sema))._field_errors=nullptr;
	};
}



inline void _1c6384d18_checkFnIns(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c62d2b01_FnIns>* _257035_f) {
	_1c6384a60_checkFnInsCaller(_self_, _257035_f, nullptr);
}



inline void _1c63850c1_checkFunc(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c62cebec_Fn>* _257434_f) {
	if ((*((*(_257434_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_257434_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_257434_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acab16d4:;
		if (it != expr_end) {
			jule::Ptr<_1c62d2b01_FnIns> _258421_ins = *it;
			{
				_1c6384d18_checkFnIns(_self_, &(_258421_ins));
			}
			_iter_next_1acab16d4:;
			++it;
			goto _iter_begin_1acab16d4;
		}
		_iter_end_1acab16d4:;
	};
}



inline void _1c6385379_checkTestFn(_1c63679bb_Sema* _self_, jule::Ptr<_1c62d2b01_FnIns>* _258935_f) {
	if ((*((*((*(_258935_f))))._field_Decl))._field_Public) {
		_1c636a606_pushErr(_self_, (*((*((*(_258935_f))))._field_Decl))._field_Token, jule::Str("test function cannot be public", 30), jule::Slice<jule::Any>());
		_1c636a969_pushSuggestion(_self_, jule::Str("dont use identifier which is starts with capital letter to avoid define as public", 81), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*((*((*(_258935_f))))._field_Decl))._field_Unsafety || (!(_1c62d0170_IsVoid((*((*(_258935_f))))._field_Decl.ptr())))) || ((*((*((*(_258935_f))))._field_Decl))._field_Generics.len() != 0LL)) || ((*((*(_258935_f))))._field_Params.len() != 1LL)) || (*((*((*((*(_258935_f))))._field_Decl))._field_Params[0LL]))._field_Mutable) || (*((*((*((*(_258935_f))))._field_Decl))._field_Params[0LL]))._field_Reference)) {
		_1c636a606_pushErr(_self_, (*((*((*(_258935_f))))._field_Decl))._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1c636a969_pushSuggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c6429b27_Sptr> _260717_sptr = _1c6420e09_Sptr((*((*((*(_258935_f))))._field_Params[0LL]))._field_Kind.ptr());;
	if ((_260717_sptr == nullptr)) {
		_1c636a606_pushErr(_self_, (*((*((*(_258935_f))))._field_Decl))._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1c636a969_pushSuggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c62bcab9_StructIns> _261413_s = _1c64221e6_Struct((*(_260717_sptr))._field_Elem.ptr());;
	if (((_261413_s == nullptr) || (!(_1c634bde0_isStdPackage(&((*((*((*((*(_261413_s))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str("testing", 7)))))) {
		_1c636a606_pushErr(_self_, (*((*((*(_258935_f))))._field_Decl))._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1c636a969_pushSuggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1c6385632_precheckFunc(jule::Ptr<_1c63679bb_Sema> _self_, jule::Ptr<_1c62cebec_Fn>* _262237_f) {
	if ((*((*(_262237_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_262237_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_262237_f))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1c62d2b01_FnIns> _263321_ins = _1c62d11c6_instanceForce((*(_262237_f)));;
		{ jule::Slice<jule::Ptr<_1c62d2b01_FnIns>> &__jule_push_dest = (*((*(_262237_f))))._field_Instances; __jule_push_dest.push(_263321_ins); };
		jule::Bool _263517_ok = _1c6375710_reloadFnInsTypes(_self_, _263321_ins);;
		(*(_263321_ins))._field_reloaded=true;
		if ((_263517_ok && _1c6439142_hasDirective(&((*((*(_262237_f))))._field_Directives), jule::Str("test", 4)))) {
			_1c6385379_checkTestFn(_self_.ptr(), &(_263321_ins));
		};
	};
}



inline void _1c6385830_precheckFuncs(jule::Ptr<_1c63679bb_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acac0160:;
		if (it != expr_end) {
			jule::Ptr<_1c62e2e96_Trait> _264621_decl = *it;
			{
				{
					auto expr = &((*(_264621_decl))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acac0c98:;
					if (it != expr_end) {
						jule::Ptr<_1c62cebec_Fn> _264725_m = *it;
						{
							_1c6385632_precheckFunc(_self_, &(_264725_m));
						}
						_iter_next_1acac0c98:;
						++it;
						goto _iter_begin_1acac0c98;
					}
					_iter_end_1acac0c98:;
				};
			}
			_iter_next_1acac0160:;
			++it;
			goto _iter_begin_1acac0160;
		}
		_iter_end_1acac0160:;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acac1738:;
		if (it != expr_end) {
			jule::Ptr<_1c62cebec_Fn> _265121_decl = *it;
			{
				_1c6385632_precheckFunc(_self_, &(_265121_decl));
			}
			_iter_next_1acac1738:;
			++it;
			goto _iter_begin_1acac1738;
		}
		_iter_end_1acac1738:;
	};
}



inline void _1c6385a2d_checkFuncs(jule::Ptr<_1c63679bb_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acac200d:;
		if (it != expr_end) {
			jule::Ptr<_1c62cebec_Fn> _265821_decl = *it;
			{
				_1c63850c1_checkFunc(_self_, &(_265821_decl));
			}
			_iter_next_1acac200d:;
			++it;
			goto _iter_begin_1acac200d;
		}
		_iter_end_1acac200d:;
	};
}



inline void _1c6385c2b_checkPackageTypes(jule::Ptr<_1c63679bb_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acac2e10:;
		if (it != expr_end) {
			jule::Ptr<_1c63d8135_SymbolTable> _266621_f = *it;
			{
				_1c636a1d8_setCurrentFile(_self_.ptr(), _266621_f);
				_1c6381b06_checkGlobals(_self_);
				_1c6385830_precheckFuncs(_self_);
				_1c63840d1_precheckStructTypes(_self_);
			}
			_iter_next_1acac2e10:;
			++it;
			goto _iter_begin_1acac2e10;
		}
		_iter_end_1acac2e10:;
	};
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acac4c14:;
		if (it != expr_end) {
			jule::Ptr<_1c63d8135_SymbolTable> _267721_f = *it;
			{
				_1c636a1d8_setCurrentFile(_self_.ptr(), _267721_f);
				_1c6385a2d_checkFuncs(_self_);
				_1c6383872_checkStructTypes(_self_);
			}
			_iter_next_1acac4c14:;
			++it;
			goto _iter_begin_1acac4c14;
		}
		_iter_end_1acac4c14:;
	};
}



inline void _1c6385e29_setFileSemaFields(jule::Ptr<_1c63679bb_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acac56d7:;
		if (it != expr_end) {
			jule::Ptr<_1c62cebec_Fn> _268521_f = *it;
			{
				(*(_268521_f))._field_sema=_self_;
			}
			_iter_next_1acac56d7:;
			++it;
			goto _iter_begin_1acac56d7;
		}
		_iter_end_1acac56d7:;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acac6e14:;
		if (it != expr_end) {
			jule::Ptr<_1c62b9d3b_Struct> _268821_st = *it;
			{
				(*(_268821_st))._field_sema=_self_;
			}
			_iter_next_1acac6e14:;
			++it;
			goto _iter_begin_1acac6e14;
		}
		_iter_end_1acac6e14:;
	};
}



inline void _1c6386127_setSemaFields(jule::Ptr<_1c63679bb_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acac793c:;
		if (it != expr_end) {
			jule::Ptr<_1c63d8135_SymbolTable> _269421_file = *it;
			{
				_1c636a1d8_setCurrentFile(_self_.ptr(), _269421_file);
				_1c6385e29_setFileSemaFields(_self_);
			}
			_iter_next_1acac793c:;
			++it;
			goto _iter_begin_1acac793c;
		}
		_iter_end_1acac793c:;
	};
}



inline void _1c63863d0_check(jule::Ptr<_1c63679bb_Sema> _self_, jule::Slice<jule::Ptr<_1c63d8135_SymbolTable>>* _270030_files) {
	(*(_self_))._field_files=(*(_270030_files));
	_1c636e077_checkImports(_self_.ptr());
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1c6386127_setSemaFields(_self_);
	_1c636ea6c_checkInherits(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1c636e473_implImpls(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1c636e671_checkEnums(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1c6380b16_checkPackageDecls(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1c6385c2b_checkPackageTypes(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1c63679bb_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags << ", ";
	_Stream << "meta:" << _Src._field_meta;
	_Stream << "}";
	return _Stream;
}



inline _1c638680e_missingRetChecker static__1c6386bc7_new(void) {
	return _1c638680e_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };;
}



inline jule::Bool _1c6386ed5_checkConditional(_1c638680e_missingRetChecker* _self_, jule::Ptr<_1c632138c_Conditional> _274835_c) {
	{
		auto expr = &((*(_274835_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acaccd93:;
		if (it != expr_end) {
			jule::Ptr<_1c6320b72_If> _274921_elif = *it;
			{
				if ((_274921_elif == nullptr)) {
					return false;;
				};
				if ((!(_1c63879a8_checkScope(_self_, (*(_274921_elif))._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1acaccd93:;
			++it;
			goto _iter_begin_1acaccd93;
		}
		_iter_end_1acaccd93:;
	};
	return (((*(_274835_c))._field_Default != nullptr) && _1c63879a8_checkScope(_self_, (*((*(_274835_c))._field_Default))._field_Scope));;
}



inline jule::Bool _1c6387326_checkMatch(_1c638680e_missingRetChecker* _self_, jule::Ptr<_1c632488a_Match> _276029_m) {
	{
		auto expr = &((*(_276029_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acace449:;
		if (it != expr_end) {
			jule::Ptr<_1c63254c3_Case> _276121_c = *it;
			{
				if ((_276121_c == nullptr)) {
					return false;;
				};
				jule::I64 _276517_n = (*(_self_))._field_breaked.len();;
				jule::Bool _276617_ok = _1c63879a8_checkScope(_self_, (*(_276121_c))._field_Scope);;
				{
					
					if ((_276517_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1acad22c6:;
						{
							return false;;
						}
					}
					else if ((!(_276617_ok))) {
						_case_begin_1acad233c:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1acad23b4;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1acad23b4:;
						{
							(*(_self_))._field_falled=false;
							if (((*(_276121_c))._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1acace449;
						}
					}
					_match_end_1acad222c:;
				};
			}
			_iter_next_1acace449:;
			++it;
			goto _iter_begin_1acace449;
		}
		_iter_end_1acace449:;
	};
	return (((*(_276029_m))._field_Default != nullptr) && _1c63879a8_checkScope(_self_, (*((*(_276029_m))._field_Default))._field_Scope));;
}



inline jule::Bool _1c6387667_checkInfIter(_1c638680e_missingRetChecker* _self_, jule::Ptr<_1c6321689_InfIter> _278631_it) {
	jule::I64 _278713_n = (*(_self_))._field_breaked.len();;
	if (_1c63879a8_checkScope(_self_, (*(_278631_it))._field_Scope)) {
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _278713_n);
		return true;;
	};
	if ((_278713_n != (*(_self_))._field_breaked.len())) {
		jule::Uintptr _279317_itaddr = static_cast<jule::Uintptr>(_278631_it);;
		{
			auto expr = (*(_self_))._field_breaked.slice(_278713_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1acad6132:;
			if (it != expr_end) {
				jule::Uintptr _279420_addr = *it;
				{
					if ((_279317_itaddr == _279420_addr)) {
						(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _278713_n);
						return false;;
					};
				}
				_iter_next_1acad6132:;
				++it;
				goto _iter_begin_1acad6132;
			}
			_iter_end_1acad6132:;
		};
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _278713_n);
	};
	return true;;
}



inline jule::Bool _1c63879a8_checkScope(_1c638680e_missingRetChecker* _self_, jule::Ptr<_1c6320754_Scope> _280529_s) {
	if ((_280529_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &((*(_280529_s))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acad76a5:;
		if (it != expr_end) {
			jule::Any _280921_st = *it;
			{
				{
					auto &_match_expr{ _280921_st };
					
					if (_match_expr.type == &__jule_any_type48) {
						_case_begin_1acad84b9:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type49) {
						_case_begin_1acad8530:;
						{
							jule::Uintptr _281521_addr = (*(_280921_st.cast_ptr<_1c6322cea_BreakSt>(&__jule_any_type49)))._field_It;;
							if ((_281521_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_281521_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type41) {
						_case_begin_1acad8596:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type36) {
						_case_begin_1acad861d:;
						{
							if (_1c6387667_checkInfIter(_self_, _280921_st.cast_ptr<_1c6321689_InfIter>(&__jule_any_type36))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type50) {
						_case_begin_1acad8695:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1acad871c:;
						{
							if (_1c63879a8_checkScope(_self_, _280921_st.cast_ptr<_1c6320754_Scope>(&__jule_any_type22))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type24) {
						_case_begin_1acad8794:;
						{
							{
								auto &_match_expr{ (*(_280921_st.cast_ptr<_1c63dd35a_Data>(&__jule_any_type24)))._field_Model };
								
								if (_match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type23) {
									_case_begin_1acadc38b:;
									{
										return true;;
									}
								}
								_match_end_1acadc303:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type35) {
						_case_begin_1acad881b:;
						{
							if (_1c6386ed5_checkConditional(_self_, _280921_st.cast_ptr<_1c632138c_Conditional>(&__jule_any_type35))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type47) {
						_case_begin_1acad8893:;
						{
							if (_1c6387326_checkMatch(_self_, _280921_st.cast_ptr<_1c632488a_Match>(&__jule_any_type47))) {
								return true;;
							};
						}
					}
					_match_end_1acad83a9:;
				};
			}
			_iter_next_1acad76a5:;
			++it;
			goto _iter_begin_1acad76a5;
		}
		_iter_end_1acad76a5:;
	};
	return false;;
}



inline jule::Bool _1c6387ce9_check(_1c638680e_missingRetChecker* _self_, jule::Ptr<_1c6320754_Scope> _285124_s) {
	return _1c63879a8_checkScope(_self_, _285124_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c638680e_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c6388beb_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c638a23b_IsInitialized(_1c6389da6_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1c638a4c2_IsTypeInferred(_1c6389da6_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*((*(_self_))._field_Kind))._field_Decl == nullptr));;
}



inline jule::Bool _1c638a758_untypedConstant(_1c6389da6_Var* _self_) {
	return (_1c638a4c2_IsTypeInferred(_self_) && (*((*((*(_self_))._field_Value))._field_Data))._field_untyped);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c6389da6_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1c638b308_Dispose(jule::Ptr<_1c62cebec_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && ((*(_1023_f))._field_Owner != nullptr)) && (*(_1023_f))._field_Ident.equal("Dispose", 7)) && (!((*(_1023_f))._field_Statically))) && (!((*(_1023_f))._field_Unsafety))) && _1c62d0170_IsVoid(_1023_f.ptr())) && ((*(_1023_f))._field_Generics.len() == 0LL)) && ((*(_1023_f))._field_Params.len() == 1LL)) && (*((*(_1023_f))._field_Params[0LL]))._field_Mutable) && (!(_1c62cdaca_IsRef((*(_1023_f))._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__1c638b5c2_Str(jule::Ptr<_1c62cebec_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || ((*(_2419_f))._field_Owner == nullptr)) || (!(*(_2419_f))._field_Ident.equal("Str", 3))) || (*(_2419_f))._field_Statically) || (*(_2419_f))._field_Unsafety) || _1c62d0170_IsVoid(_2419_f.ptr())) || ((*(_2419_f))._field_Generics.len() != 0LL)) || ((*(_2419_f))._field_Params.len() != 1LL)) || (*((*(_2419_f))._field_Params[0LL]))._field_Mutable) || _1c62cdaca_IsRef((*(_2419_f))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1c62d2b01_FnIns> _3817_ins = (*(_2419_f))._field_Instances[0LL];;
	jule::Ptr<_1c64260eb_Prim> _3913_prim = _1c6420b73_Prim((*(_3817_ins))._field_Result.ptr());;
	if ((_3913_prim == nullptr)) {
		return false;;
	};
	return _1c6429583_IsStr(_3913_prim.ptr());;
}



inline jule::Bool static__1c638b946_logical(jule::Ptr<_1c62cebec_Fn>* _4624_f, jule::Str _4632_ident) {
	if (((((((((((((((*(_4624_f)) == nullptr) || ((*((*(_4624_f))))._field_Ident != _4632_ident)) || ((*((*(_4624_f))))._field_Owner == nullptr)) || ((*((*(_4624_f))))._field_Instances.len() == 0LL)) || (*((*(_4624_f))))._field_Statically) || (*((*(_4624_f))))._field_Unsafety) || _1c62d0170_IsVoid((*(_4624_f)).ptr())) || ((*((*(_4624_f))))._field_Generics.len() != 0LL)) || ((*((*(_4624_f))))._field_Params.len() != 2LL)) || (*((*((*(_4624_f))))._field_Params[0LL]))._field_Mutable) || _1c62cdaca_IsRef((*((*(_4624_f))))._field_Params[0LL].ptr())) || (*((*((*(_4624_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_4624_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1c62d2b01_FnIns> _6317_ins = (*((*(_4624_f))))._field_Instances[0LL];;
	jule::Ptr<_1c64260eb_Prim> _6413_prim = _1c6420b73_Prim((*(_6317_ins))._field_Result.ptr());;
	if (((_6413_prim == nullptr) || (!(_1c64292ec_IsBool(_6413_prim.ptr()))))) {
		return false;;
	};
	return ((*(_6317_ins))._field_Owner == _1c64221e6_Struct((*((*(_6317_ins))._field_Params[1LL]))._field_Kind.ptr()));;
}



inline jule::Bool static__1c638bc10_Eq(jule::Ptr<_1c62cebec_Fn> _7218_f) {
	return static__1c638b946_logical(&(_7218_f), jule::Str("Eq", 2));;
}



inline jule::Bool static__1c638bec9_Gt(jule::Ptr<_1c62cebec_Fn> _7718_f) {
	return static__1c638b946_logical(&(_7718_f), jule::Str("Gt", 2));;
}



inline jule::Bool static__1c638c293_GtEq(jule::Ptr<_1c62cebec_Fn> _8220_f) {
	return static__1c638b946_logical(&(_8220_f), jule::Str("GtEq", 4));;
}



inline jule::Bool static__1c638c55c_Lt(jule::Ptr<_1c62cebec_Fn> _8718_f) {
	return static__1c638b946_logical(&(_8718_f), jule::Str("Lt", 2));;
}



inline jule::Bool static__1c638c826_LtEq(jule::Ptr<_1c62cebec_Fn> _9220_f) {
	return static__1c638b946_logical(&(_9220_f), jule::Str("LtEq", 4));;
}



inline jule::Bool static__1c638cb9a_result(jule::Ptr<_1c62cebec_Fn>* _9623_f, jule::Str _9631_ident) {
	if (((((((((((((((*(_9623_f)) == nullptr) || ((*((*(_9623_f))))._field_Ident != _9631_ident)) || ((*((*(_9623_f))))._field_Owner == nullptr)) || ((*((*(_9623_f))))._field_Instances.len() == 0LL)) || (*((*(_9623_f))))._field_Statically) || (*((*(_9623_f))))._field_Unsafety) || _1c62d0170_IsVoid((*(_9623_f)).ptr())) || ((*((*(_9623_f))))._field_Generics.len() != 0LL)) || ((*((*(_9623_f))))._field_Params.len() != 2LL)) || (*((*((*(_9623_f))))._field_Params[0LL]))._field_Mutable) || _1c62cdaca_IsRef((*((*(_9623_f))))._field_Params[0LL].ptr())) || (*((*((*(_9623_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_9623_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1c62d2b01_FnIns> _11317_ins = (*((*(_9623_f))))._field_Instances[0LL];;
	return (_1c64221e6_Struct((*(_11317_ins))._field_Result.ptr()) == (*(_11317_ins))._field_Owner);;
}



inline jule::Bool static__1c638ce64_Shl(jule::Ptr<_1c62cebec_Fn> _11819_f) {
	return static__1c638cb9a_result(&(_11819_f), jule::Str("Shl", 3));;
}



inline jule::Bool static__1c638d22d_Shr(jule::Ptr<_1c62cebec_Fn> _12319_f) {
	return static__1c638cb9a_result(&(_12319_f), jule::Str("Shr", 3));;
}



inline jule::Bool static__1c638d4e7_Add(jule::Ptr<_1c62cebec_Fn> _12819_f) {
	return static__1c638cb9a_result(&(_12819_f), jule::Str("Add", 3));;
}



inline jule::Bool static__1c638d7b1_Sub(jule::Ptr<_1c62cebec_Fn> _13319_f) {
	return static__1c638cb9a_result(&(_13319_f), jule::Str("Sub", 3));;
}



inline jule::Bool static__1c638da7a_Div(jule::Ptr<_1c62cebec_Fn> _13819_f) {
	return static__1c638cb9a_result(&(_13819_f), jule::Str("Div", 3));;
}



inline jule::Bool static__1c638dd44_Mul(jule::Ptr<_1c62cebec_Fn> _14319_f) {
	return static__1c638cb9a_result(&(_14319_f), jule::Str("Mul", 3));;
}



inline jule::Bool static__1c638e10d_Mod(jule::Ptr<_1c62cebec_Fn> _14819_f) {
	return static__1c638cb9a_result(&(_14819_f), jule::Str("Mod", 3));;
}



inline jule::Bool static__1c638e3c7_BitAnd(jule::Ptr<_1c62cebec_Fn> _15322_f) {
	return static__1c638cb9a_result(&(_15322_f), jule::Str("BitAnd", 6));;
}



inline jule::Bool static__1c638e691_BitOr(jule::Ptr<_1c62cebec_Fn> _15821_f) {
	return static__1c638cb9a_result(&(_15821_f), jule::Str("BitOr", 5));;
}



inline jule::Bool static__1c638e95a_BitXor(jule::Ptr<_1c62cebec_Fn> _16322_f) {
	return static__1c638cb9a_result(&(_16322_f), jule::Str("BitXor", 6));;
}



inline jule::Bool static__1c638ecce_unary(jule::Ptr<_1c62cebec_Fn>* _16722_f, jule::Str _16730_ident) {
	if (((((((((((((*(_16722_f)) == nullptr) || ((*((*(_16722_f))))._field_Ident != _16730_ident)) || ((*((*(_16722_f))))._field_Owner == nullptr)) || ((*((*(_16722_f))))._field_Instances.len() == 0LL)) || (*((*(_16722_f))))._field_Statically) || (*((*(_16722_f))))._field_Unsafety) || _1c62d0170_IsVoid((*(_16722_f)).ptr())) || ((*((*(_16722_f))))._field_Generics.len() != 0LL)) || ((*((*(_16722_f))))._field_Params.len() != 1LL)) || (*((*((*(_16722_f))))._field_Params[0LL]))._field_Mutable) || _1c62cdaca_IsRef((*((*(_16722_f))))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1c62d2b01_FnIns> _18217_ins = (*((*(_16722_f))))._field_Instances[0LL];;
	return (_1c64221e6_Struct((*(_18217_ins))._field_Result.ptr()) == (*(_18217_ins))._field_Owner);;
}



inline jule::Bool static__1c6390098_Neg(jule::Ptr<_1c62cebec_Fn> _18719_f) {
	return static__1c638ecce_unary(&(_18719_f), jule::Str("Neg", 3));;
}



inline jule::Bool static__1c6390362_Pos(jule::Ptr<_1c62cebec_Fn> _19219_f) {
	return static__1c638ecce_unary(&(_19219_f), jule::Str("Pos", 3));;
}



inline jule::Bool static__1c639062b_BitNot(jule::Ptr<_1c62cebec_Fn> _19722_f) {
	return static__1c638ecce_unary(&(_19722_f), jule::Str("BitNot", 6));;
}



inline jule::Bool static__1c63909a0_assign(jule::Ptr<_1c62cebec_Fn>* _20123_f, jule::Str _20131_ident) {
	if (((((((((((((((*(_20123_f)) == nullptr) || ((*((*(_20123_f))))._field_Ident != _20131_ident)) || ((*((*(_20123_f))))._field_Owner == nullptr)) || ((*((*(_20123_f))))._field_Instances.len() == 0LL)) || (*((*(_20123_f))))._field_Statically) || (*((*(_20123_f))))._field_Unsafety) || (!(_1c62d0170_IsVoid((*(_20123_f)).ptr())))) || ((*((*(_20123_f))))._field_Generics.len() != 0LL)) || ((*((*(_20123_f))))._field_Params.len() != 2LL)) || (!((*((*((*(_20123_f))))._field_Params[0LL]))._field_Mutable))) || _1c62cdaca_IsRef((*((*(_20123_f))))._field_Params[0LL].ptr())) || (*((*((*(_20123_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_20123_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1c6390c69_AddAssign(jule::Ptr<_1c62cebec_Fn> _22125_f) {
	return static__1c63909a0_assign(&(_22125_f), jule::Str("AddAssign", 9));;
}



inline jule::Bool static__1c6391033_SubAssign(jule::Ptr<_1c62cebec_Fn> _22625_f) {
	return static__1c63909a0_assign(&(_22625_f), jule::Str("SubAssign", 9));;
}



inline jule::Bool static__1c63912ec_DivAssign(jule::Ptr<_1c62cebec_Fn> _23125_f) {
	return static__1c63909a0_assign(&(_23125_f), jule::Str("DivAssign", 9));;
}



inline jule::Bool static__1c63915b6_MulAssign(jule::Ptr<_1c62cebec_Fn> _23625_f) {
	return static__1c63909a0_assign(&(_23625_f), jule::Str("MulAssign", 9));;
}



inline jule::Bool static__1c6391880_ModAssign(jule::Ptr<_1c62cebec_Fn> _24125_f) {
	return static__1c63909a0_assign(&(_24125_f), jule::Str("ModAssign", 9));;
}



inline jule::Bool static__1c6391b49_ShlAssign(jule::Ptr<_1c62cebec_Fn> _24625_f) {
	return static__1c63909a0_assign(&(_24625_f), jule::Str("ShlAssign", 9));;
}



inline jule::Bool static__1c6391e13_ShrAssign(jule::Ptr<_1c62cebec_Fn> _25125_f) {
	return static__1c63909a0_assign(&(_25125_f), jule::Str("ShrAssign", 9));;
}



inline jule::Bool static__1c63921cc_BitOrAssign(jule::Ptr<_1c62cebec_Fn> _25627_f) {
	return static__1c63909a0_assign(&(_25627_f), jule::Str("BitOrAssign", 11));;
}



inline jule::Bool static__1c6392496_BitAndAssign(jule::Ptr<_1c62cebec_Fn> _26128_f) {
	return static__1c63909a0_assign(&(_26128_f), jule::Str("BitAndAssign", 12));;
}



inline jule::Bool static__1c6392760_BitXorAssign(jule::Ptr<_1c62cebec_Fn> _26628_f) {
	return static__1c63909a0_assign(&(_26628_f), jule::Str("BitXorAssign", 12));;
}





std::ostream &operator<<(std::ostream &_Stream, _1c638abba_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1c63c5672_pushErr(_1c63c5177_typeCompatibilityChecker* _self_, jule::Str _11826_fmt, jule::Slice<jule::Any> _11839_args) {
	_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11826_fmt, _11839_args);
}



inline jule::Bool _1c63c5908_checkTrait(_1c63c5177_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1c641e600_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1c62e2e96_Trait> _12617_trt = _1c642247c_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _12717_ref = false;;
	{
		
		if ((_1c6420e09_Sptr((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1acb343b1:;
			{
				_12717_ref=true;
				(*(_self_))._field_src=(*(_1c6420e09_Sptr((*(_self_))._field_src.ptr())))._field_Elem;
				if ((_1c64221e6_Struct((*(_self_))._field_src.ptr()) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1acb34438;
			}
		}
		else if ((_1c64221e6_Struct((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1acb34438:;
			{
				jule::Ptr<_1c62bcab9_StructIns> _13717_s = _1c64221e6_Struct((*(_self_))._field_src.ptr());;
				if ((!(_1c62bb47a_IsImplements((*(_13717_s))._field_Decl.ptr(), _12617_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_12717_ref)) && _1c63c3c47_traitHasReferenceReceiver(&(_12617_trt)))) {
					_1c63c5672_pushErr(_self_, jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c642247c_Trait((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1acb344b0:;
			{
				jule::Ptr<_1c62e2e96_Trait> _14721_base = _1c642247c_Trait((*(_self_))._field_src.ptr());;
				if ((_12617_trt == _14721_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_1acb38e98:;
				{
					auto expr = &((*(_14721_base))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acb39383:;
					if (it != expr_end) {
						jule::Ptr<_1c62b9d3b_Struct> _15220_s1 = *it;
						{
							{
								auto expr = &((*(_12617_trt))._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1acb39ce0:;
								if (it != expr_end) {
									jule::Ptr<_1c62b9d3b_Struct> _15324_s2 = *it;
									{
										if ((_15220_s1 == _15324_s2)) {
											goto _iter_next_1acb39383;
										};
									}
									_iter_next_1acb39ce0:;
									++it;
									goto _iter_begin_1acb39ce0;
								}
								_iter_end_1acb39ce0:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1acb39383:;
						++it;
						goto _iter_begin_1acb39383;
					}
					_iter_end_1acb39383:;
				};
				{
					auto expr = &((*(_12617_trt))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acb39141:;
					if (it != expr_end) {
						jule::Ptr<_1c62cebec_Fn> _16025_m1 = *it;
						{
							jule::Ptr<_1c62cebec_Fn> _16125_m2 = _1c62e3b45_FindMethod(_14721_base.ptr(), (*(_16025_m1))._field_Ident);;
							if ((_16125_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1c62d2b01_FnIns> _16521_m1k = _1c63742ad_getTraitCheckFnKind((*(_self_))._field_s, &(_16025_m1));;
							jule::Ptr<_1c62d2b01_FnIns> _16621_m2k = _1c63742ad_getTraitCheckFnKind((*(_self_))._field_s, &(_16125_m2));;
							if ((!(_1c62d3a69_equalTrait(_16521_m1k, &(_16621_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1acb39141:;
						++it;
						goto _iter_begin_1acb39141;
					}
					_iter_end_1acb39141:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1acb34306:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1acb342a1:;
	};
}



inline jule::Bool _1c63c5b8e_checkPtr(_1c63c5177_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1c641e600_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1c642d3de_Ptr> _18117_dest = _1c6421190_Ptr((*(_self_))._field_dest.ptr());;
	if (_1c642de28_IsUnsafe(_18117_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1c641dc2b_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1c63c5e25_checkPrim(_1c63c5177_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*((*(_self_))._field_dest))._field_Variadic))) {
		jule::Ptr<_1c64260eb_Prim> _19017_prim = _1c6420b73_Prim((*(_self_))._field_dest.ptr());;
		if (((_19017_prim != nullptr) && _1c6429819_IsAny(_19017_prim.ptr()))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1c641dc2b_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1c63c6321_typeEnum(_1c63c5177_typeCompatibilityChecker* _self_, jule::Ptr<_1c62e6d9b_TypeEnum>* _19828_e, jule::Ptr<_1c641d522_TypeKind>* _19847_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_19828_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb4219e:;
		if (it != expr_end) {
			jule::Ptr<_1c62e67c4_TypeEnumItem> _19921_item = *it;
			{
				if (_1c641dc2b_Equal((*((*(_19921_item))._field_Kind))._field_Kind, (*(_19847_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1c62e6d9b_TypeEnum> _20321_ke = _1c64216ac_TypeEnum((*((*(_19921_item))._field_Kind))._field_Kind.ptr());;
				if ((_20321_ke == nullptr)) {
					goto _iter_next_1acb4219e;
				};
				if (_1c63c6321_typeEnum(_self_, &(_20321_ke), _19847_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1acb4219e:;
			++it;
			goto _iter_begin_1acb4219e;
		}
		_iter_end_1acb4219e:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1c63c65a7_checkTypeEnum(_1c63c5177_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1c641dc2b_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1c62e6d9b_TypeEnum> _21817_e = _1c64216ac_TypeEnum((*(_self_))._field_dest.ptr());;
	__jule_func_result = _1c63c6321_typeEnum(_self_, &(_21817_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1c63c683d_check(_1c63c5177_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1c6421190_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1c63c5b8e_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1c64203c0_NilCompatible((*(_self_))._field_dest.ptr())) {
		if (_1c641e600_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1c6420b73_Prim((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1acb47baa:;
			{
				__jule_func_result = _1c63c5e25_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1c64216ac_TypeEnum((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1acb47270:;
			{
				__jule_func_result = _1c63c65a7_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1c642247c_Trait((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1acb472d6:;
			{
				__jule_func_result = _1c63c5908_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1acb47209:;
			{
				__jule_func_result = _1c641dc2b_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1acb46978:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c63c5177_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _1c63c73bb_pushErr(_1c63c6e26_assignTypeChecker* _self_, jule::Str _25426_fmt, jule::Slice<jule::Any> _25439_args) {
	_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _25426_fmt, _25439_args);
}



inline jule::Bool _1c63c7652_checkValidity(_1c63c6e26_assignTypeChecker* _self_) {
	jule::Bool _25917_valid = true;;
	{
		
		if ((_1c6421e60_Fn((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acb4a99e:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _26217_f = _1c6421e60_Fn((*((*(_self_))._field_d))._field_Kind.ptr());;
				{
					
					if (_1c62d4086_IsBuiltin(_26217_f.ptr())) {
						_case_begin_1acb4c2ca:;
						{
							_1c63c73bb_pushErr(_self_, jule::Str("builtin define cannot use as anonymous function", 47), jule::Slice<jule::Any>());
							_25917_valid=false;
						}
					}
					else if ((*((*(_26217_f))._field_Decl))._field_Binded) {
						_case_begin_1acb4c352:;
						{
							_1c63c73bb_pushErr(_self_, jule::Str("binded functions cannot use as anonymous function", 49), jule::Slice<jule::Any>());
							_25917_valid=false;
						}
					}
					else if (((!((*((*(_26217_f))._field_Decl))._field_Statically)) && _1c62d0406_IsMethod((*(_26217_f))._field_Decl.ptr()))) {
						_case_begin_1acb4c3c9:;
						{
							_1c63c73bb_pushErr(_self_, jule::Str("non-static methods cannot use as anonymous function", 51), jule::Slice<jule::Any>());
							_25917_valid=false;
						}
					}
					else if ((((*((*(_26217_f))._field_Decl))._field_Generics.len() > 0LL) && ((*(_26217_f))._field_Generics.len() == 0LL))) {
						_case_begin_1acb4c451:;
						{
							_1c63c73bb_pushErr(_self_, jule::Str("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
							_1c636a969_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("instantiate generic function to use as anonymous function", 57), jule::Slice<jule::Any>());
							_25917_valid=false;
						}
					}
					_match_end_1acb4c20e:;
				};
			}
		}
		else if ((_1c6422999_Tup((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acb4aa26:;
			{
				_1c63c73bb_pushErr(_self_, jule::Str("tuples cannot assign to single define in same time", 50), jule::Slice<jule::Any>());
				_25917_valid=false;
			}
		}
		_match_end_1acb4a8e4:;
	};
	return _25917_valid;;
}



inline jule::Bool _1c63c78d8_checkConst(_1c63c6e26_assignTypeChecker* _self_) {
	if (((((!(_1c63ddc2e_IsConst((*(_self_))._field_d.ptr()))) || (_1c6420b73_Prim((*(_self_))._field_dest.ptr()) == nullptr)) || (_1c6420b73_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) == nullptr)) || (!(_1dc25ee96_IsNum((*(_1c6420b73_Prim((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Kind))))) {
		return false;;
	};
	if ((!__jule_any_type19_compare((*((*(_self_))._field_d))._field_Model, (*((*(_self_))._field_d))._field_Constant))) {
		return false;;
	};
	jule::Str _29913_kind = (*(_1c6420b73_Prim((*(_self_))._field_dest.ptr())))._field_Kind;;
	{
		
		if (_1dc25ebcc_IsFloat(_29913_kind)) {
			_case_begin_1acb5505d:;
			{
				if ((!(_1c63c40cc_floatAssignable(&(_29913_kind), &((*(_self_))._field_d))))) {
					_1c63c73bb_pushErr(_self_, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*((*((*(_self_))._field_d))._field_Constant))._field_Kind=_29913_kind;
			}
		}
		else if (_1dc25e88b_IsInt(_29913_kind)) {
			_case_begin_1acb550d5:;
			{
				if ((!(_1c63c4b8d_intAssignable(_29913_kind, &((*(_self_))._field_d))))) {
					_1c63c73bb_pushErr(_self_, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*((*((*(_self_))._field_d))._field_Constant))._field_Kind=_29913_kind;
			}
		}
		else {
			_case_begin_1acb54eb4:;
			{
				return false;;
			}
		}
		_match_end_1acb54e5e:;
	};
	return true;;
}



inline jule::Bool _1c63c7b6e_isPrim(_1c63c6e26_assignTypeChecker* _self_) {
	if (((*((*(_self_))._field_dest))._field_Variadic || (*((*((*(_self_))._field_d))._field_Kind))._field_Variadic)) {
		return false;;
	};
	if ((_1c641e369_Binded((*(_self_))._field_dest.ptr()) || _1c641e369_Binded((*((*(_self_))._field_d))._field_Kind.ptr()))) {
		return false;;
	};
	return ((_1c6420b73_Prim((*(_self_))._field_dest.ptr()) != nullptr) && (_1c6420b73_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr));;
}



inline jule::Bool _1c63c7e05_checkCompatibility(_1c63c6e26_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1acb5a1c8:;
			{
				return false;;
			}
		}
		else if ((!(_1c63c7652_checkValidity(_self_)))) {
			_case_begin_1acb5a250:;
			{
				return false;;
			}
		}
		else if (_1c63c78d8_checkConst(_self_)) {
			_case_begin_1acb5a2c7:;
			{
				return true;;
			}
		}
		else if ((_1c6421426_Enum((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acb5a34e:;
			{
				jule::Ptr<_1c641d522_TypeKind> _34321_dkind = (*(_self_))._field_dest;;
				if ((_1c6421426_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_34321_dkind=(*((*(_1c6421426_Enum((*(_self_))._field_dest.ptr())))._field_Kind))._field_Kind;
				} else if ((_1c6420b73_Prim((*(_self_))._field_dest.ptr()) == nullptr)) {
					goto _match_end_1acb5a096;
				};
				if (_1dc25b503_TypesAreCompatible((*(_1c6420b73_Prim((*((*(_1c6421426_Enum((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Kind))._field_Kind.ptr())))._field_Kind, (*(_1c6420b73_Prim(_34321_dkind.ptr())))._field_Kind)) {
					return true;;
				};
			}
		}
		else if (_1c63c7b6e_isPrim(_self_)) {
			_case_begin_1acb5a3c6:;
			{
				jule::Ptr<_1c64260eb_Prim> _35317_dest = _1c6420b73_Prim((*(_self_))._field_dest.ptr());;
				if (_1c6429819_IsAny(_35317_dest.ptr())) {
					return true;;
				};
				jule::Ptr<_1c64260eb_Prim> _35721_src = _1c6420b73_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (_1dc25b503_TypesAreCompatible((*(_35317_dest))._field_Kind, (*(_35721_src))._field_Kind)) {
					return true;;
				};
			}
		}
		_match_end_1acb5a096:;
	};
	return _1c63735ba_checkTypeCompatibility((*(_self_))._field_s, &((*(_self_))._field_dest), &((*((*(_self_))._field_d))._field_Kind), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1c63c818b_check(_1c63c6e26_assignTypeChecker* _self_) {
	jule::Bool _36613_ok = _1c63c7e05_checkCompatibility(_self_);;
	if ((_36613_ok && (!((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic)))) {
		_1c643a9e5_applyImplicitCast(&((*(_self_))._field_dest), &((*(_self_))._field_d));
	};
	return _36613_ok;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c63c6e26_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac96916e_annotateConstraintElem(_1c63c8a93_dynamicTypeAnnotation* _self_, jule::Ptr<_1c641d522_TypeKind>* _38649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1ac96a879:;
			{
				jule::Ptr<_1c641d522_TypeKind> _38921_elem = nullptr;;
				{
					
{
						_case_begin_1ac96b704:;
						{
							_38921_elem=(*(_1c6421943_Arr((*(_38649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1ac96b649:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_1c629b515_ArrTypeDecl>(&__jule_any_type69)))._field_Elem;
				return _1c63ca29d_annotateConstraint(_self_, &(_38921_elem));;
			}
		}
		_match_end_1ac96a824:;
	};
	return false;;
}

inline jule::Bool _1ac9689cb_annotateConstraintElem(_1c63c8a93_dynamicTypeAnnotation* _self_, jule::Ptr<_1c641d522_TypeKind>* _38649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1ac96e350:;
			{
				jule::Ptr<_1c641d522_TypeKind> _38921_elem = nullptr;;
				{
					
{
						_case_begin_1ac970241:;
						{
							_38921_elem=(*(_1c6421bc9_Slc((*(_38649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1ac970120:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_1c629a679_SlcTypeDecl>(&__jule_any_type70)))._field_Elem;
				return _1c63ca29d_annotateConstraint(_self_, &(_38921_elem));;
			}
		}
		_match_end_1ac96e2ea:;
	};
	return false;;
}

inline jule::Bool _1ac96abba_annotateConstraintElem(_1c63c8a93_dynamicTypeAnnotation* _self_, jule::Ptr<_1c641d522_TypeKind>* _38649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1ac972de2:;
			{
				jule::Ptr<_1c641d522_TypeKind> _38921_elem = nullptr;;
				{
					
{
						_case_begin_1ac973d49:;
						{
							_38921_elem=(*(_1c6421190_Ptr((*(_38649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1ac973bb2:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_1c629ac73_PtrTypeDecl>(&__jule_any_type71)))._field_Elem;
				return _1c63ca29d_annotateConstraint(_self_, &(_38921_elem));;
			}
		}
		_match_end_1ac972d8c:;
	};
	return false;;
}

inline jule::Bool _1ac971990_annotateConstraintElem(_1c63c8a93_dynamicTypeAnnotation* _self_, jule::Ptr<_1c641d522_TypeKind>* _38649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1ac976533:;
			{
				jule::Ptr<_1c641d522_TypeKind> _38921_elem = nullptr;;
				{
					
{
						_case_begin_1ac977501:;
						{
							_38921_elem=(*(_1c6420e09_Sptr((*(_38649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1ac977303:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_1c629a2e4_SptrTypeDecl>(&__jule_any_type72)))._field_Elem;
				return _1c63ca29d_annotateConstraint(_self_, &(_38921_elem));;
			}
		}
		_match_end_1ac9764cd:;
	};
	return false;;
}



inline jule::Bool _1c63c9489_annotateConstraintMap(_1c63c8a93_dynamicTypeAnnotation* _self_, jule::Ptr<_1c641d522_TypeKind>* _40645_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1acb644ac:;
			{
				jule::Ptr<_1c642bc8e_Map> _40921_m = _1c6422713_Map((*(_40645_k)).ptr());;
				jule::Ptr<_1c629bc63_MapTypeDecl> _41021_m2 = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1c629bc63_MapTypeDecl>(&__jule_any_type73);;
				(*(_self_))._field_c=(*(_41021_m2))._field_Key;
				if ((!(_1c63ca29d_annotateConstraint(_self_, &((*(_40921_m))._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=(*(_41021_m2))._field_Val;
				__jule_func_result = _1c63ca29d_annotateConstraint(_self_, &((*(_40921_m))._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1acb64457:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1c63c97ca_annotateConstraintTup(_1c63c8a93_dynamicTypeAnnotation* _self_, jule::Ptr<_1c641d522_TypeKind>* _42145_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1acb673d3:;
			{
				jule::Ptr<_1c629a976_TupleTypeDecl> _42421_tup = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1c629a976_TupleTypeDecl>(&__jule_any_type74);;
				jule::Ptr<_1c642b1de_Tuple> _42521_tup2 = _1c6422999_Tup((*(_42145_k)).ptr());;
				{
					auto expr = &((*(_42521_tup2))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acb6889b:;
					if (it != expr_end) {
						jule::Ptr<_1c641d522_TypeKind> _42625_t2 = *it;
						{
							{
								auto expr = &((*(_42421_tup))._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1acb6857c:;
								if (it != expr_end) {
									jule::Ptr<_1c6299249_TypeDecl> _42729_t = *it;
									{
										(*(_self_))._field_c=_42729_t;
										if (_1c63ca29d_annotateConstraint(_self_, &(_42625_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1acb6857c:;
									++it;
									goto _iter_begin_1acb6857c;
								}
								_iter_end_1acb6857c:;
							};
						}
						_iter_next_1acb6889b:;
						++it;
						goto _iter_begin_1acb6889b;
					}
					_iter_end_1acb6889b:;
				};
			}
		}
		_match_end_1acb6737d:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1c63c9b1b_annotateConstraintFn(_1c63c8a93_dynamicTypeAnnotation* _self_, jule::Ptr<_1c641d522_TypeKind>* _43844_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1acb692b4:;
			{
				jule::Ptr<_1c62aae09_FnDecl> _44121_pf = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1c62aae09_FnDecl>(&__jule_any_type14);;
				jule::Ptr<_1c62d2b01_FnIns> _44221_f = _1c6421e60_Fn((*(_43844_k)).ptr());;
				{
					auto expr = &((*(_44221_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acb6b7d3:;
					if (it != expr_end) {
						jule::I64 _44318_i = it - expr->begin();
						jule::Ptr<_1c62d1b55_ParamIns> _44325_fp = *it;
						{
							(*(_self_))._field_c=(*((*(_44121_pf))._field_Params[_44318_i]))._field_Kind;
							if (_1c63ca29d_annotateConstraint(_self_, &((*(_44325_fp))._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1acb6b7d3:;
						++it;
						_44318_i++;
						goto _iter_begin_1acb6b7d3;
					}
					_iter_end_1acb6b7d3:;
				};
				if (((*(_44121_pf))._field_Result != nullptr)) {
					(*(_self_))._field_c=(*((*(_44121_pf))._field_Result))._field_Kind;
					if (_1c63ca29d_annotateConstraint(_self_, &((*(_44221_f))._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1acb6925e:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1c63c9e5c_annotateConstraintIdent(_1c63c8a93_dynamicTypeAnnotation* _self_, jule::Ptr<_1c641d522_TypeKind>* _45947_k) {
	jule::Ptr<_1c6299854_IdentTypeDecl> _46017_ident = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1c6299854_IdentTypeDecl>(&__jule_any_type20);;
	jule::Ptr<_1c62bcab9_StructIns> _46117_s = _1c64221e6_Struct((*(_45947_k)).ptr());;
	{
		auto expr = &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb6ee8a:;
		if (it != expr_end) {
			jule::I64 _46213_i = it - expr->begin();
			jule::Ptr<_1c62a6454_GenericDecl> _46216_g = *it;
			{
				if (((*(_46216_g))._field_Ident == (*(_46017_ident))._field_Ident)) {
					jule::Ptr<_1c641bb3b_InsGeneric> _46425_fg = (*((*(_self_))._field_f))._field_Generics[_46213_i];;
					if ((_46425_fg != nullptr)) {
						return false;;
					};
					_1c63ca611_pushGeneric(_self_, _45947_k, _46213_i);
					return true;;
				};
				if ((_46117_s == nullptr)) {
					goto _iter_next_1acb6ee8a;
				};
				jule::Ptr<_1c6299249_TypeDecl> _47421_c = (*(_self_))._field_c;;
				{
					auto expr = &((*(_46017_ident))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acb70e7a:;
					if (it != expr_end) {
						jule::Ptr<_1c6299249_TypeDecl> _47525_ig = *it;
						{
							(*(_self_))._field_c=_47525_ig;
							{
								auto expr = &((*(_46117_s))._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1acb7391c:;
								if (it != expr_end) {
									jule::Ptr<_1c641bb3b_InsGeneric> _47729_sg = *it;
									{
										if (_1c63ca29d_annotateConstraint(_self_, &((*(_47729_sg))._field_Kind))) {
											return true;;
										};
									}
									_iter_next_1acb7391c:;
									++it;
									goto _iter_begin_1acb7391c;
								}
								_iter_end_1acb7391c:;
							};
						}
						_iter_next_1acb70e7a:;
						++it;
						goto _iter_begin_1acb70e7a;
					}
					_iter_end_1acb70e7a:;
				};
				(*(_self_))._field_c=_47421_c;
			}
			_iter_next_1acb6ee8a:;
			++it;
			_46213_i++;
			goto _iter_begin_1acb6ee8a;
		}
		_iter_end_1acb6ee8a:;
	};
	return false;;
}



inline jule::Bool _1c63ca29d_annotateConstraint(_1c63c8a93_dynamicTypeAnnotation* _self_, jule::Ptr<_1c641d522_TypeKind>* _48842_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1ac967898:;
			{
				return _1c63c9e5c_annotateConstraintIdent(_self_, _48842_k);;
			}
		}
		_match_end_1ac966435:;
	};
	{
		
		if ((_1c6421943_Arr((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1ac967249:;
			{
				return _1ac96916e_annotateConstraintElem(_self_, _48842_k);;
			}
		}
		else if ((_1c6421bc9_Slc((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1ac9676ab:;
			{
				return _1ac9689cb_annotateConstraintElem(_self_, _48842_k);;
			}
		}
		else if ((_1c6421190_Ptr((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1ac967513:;
			{
				return _1ac96abba_annotateConstraintElem(_self_, _48842_k);;
			}
		}
		else if ((_1c6420e09_Sptr((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1ac967579:;
			{
				return _1ac971990_annotateConstraintElem(_self_, _48842_k);;
			}
		}
		else if ((_1c6422713_Map((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1ac9675e0:;
			{
				return _1c63c9489_annotateConstraintMap(_self_, _48842_k);;
			}
		}
		else if ((_1c6421e60_Fn((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1ac9683e3:;
			{
				return _1c63c9b1b_annotateConstraintFn(_self_, _48842_k);;
			}
		}
		else if ((_1c6422999_Tup((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1ac968459:;
			{
				return _1c63c97ca_annotateConstraintTup(_self_, _48842_k);;
			}
		}
		else {
			_case_begin_1ac964b81:;
			{
				return false;;
			}
		}
		_match_end_1ac964b2b:;
	};
}



inline void _1c63ca611_pushGeneric(_1c63c8a93_dynamicTypeAnnotation* _self_, jule::Ptr<_1c641d522_TypeKind>* _51335_k, jule::I64 _51349_i) {
	(*((*(_self_))._field_f))._field_Generics[_51349_i]=jule::new_ptr<_1c641bb3b_InsGeneric>(_1c641bb3b_InsGeneric{._field_Kind=(*(_51335_k)), });
	jule::Ptr<_1c62a6454_GenericDecl> _51517_gd = (*((*((*(_self_))._field_f))._field_Decl))._field_Generics[_51349_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac97a5ae:;
		if (it != expr_end) {
			jule::Ptr<_1c641d522_TypeKind> _51621_ignored = *it;
			{
				if (((*(_51517_gd))._field_Ident == _1c641d8da_Str(_51621_ignored.ptr()))) {
					(*(_51621_ignored))._field_Kind=(*((*(_51335_k))))._field_Kind;
				};
			}
			_iter_next_1ac97a5ae:;
			++it;
			goto _iter_begin_1ac97a5ae;
		}
		_iter_end_1ac97a5ae:;
	};
	if ((((*(_51517_gd))._field_Constraint == nullptr) || ((*((*(_51517_gd))._field_Constraint))._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=(*((*(_51517_gd))._field_Constraint))._field_Mask[0LL];
	_1c63ca29d_annotateConstraint(_self_, _51335_k);
}



inline jule::Bool _1c63ca952_annotatePrim(_1c63c8a93_dynamicTypeAnnotation* _self_, jule::Ptr<_1c641d522_TypeKind>* _52843_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1c63cc976_annotateAny(_self_, _52843_k);
	return __jule_func_result;;
}



inline jule::Bool _1c63cac93_annotateArr(_1c63c8a93_dynamicTypeAnnotation* _self_, jule::Ptr<_1c641d522_TypeKind>* _53242_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c642c91b_Arr> _53317_parr = _1c6421943_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_53317_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c642c91b_Arr> _53717_arr = _1c6421943_Arr((*(_53242_k)).ptr());;
	(*(_self_))._field_k=(&((*(_53317_parr))._field_Elem));
	__jule_func_result = _1c63cccb7_annotateKind(_self_, &((*(_53717_arr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1c63cb0d4_annotateSlc(_1c63c8a93_dynamicTypeAnnotation* _self_, jule::Ptr<_1c641d522_TypeKind>* _54242_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c642a5ea_Slc> _54317_pslc = _1c6421bc9_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_54317_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c642a5ea_Slc> _54717_slc = _1c6421bc9_Slc((*(_54242_k)).ptr());;
	(*(_self_))._field_k=(&((*(_54317_pslc))._field_Elem));
	__jule_func_result = _1c63cccb7_annotateKind(_self_, &((*(_54717_slc))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1c63cb4d0_checkMapKey(_1c63c8a93_dynamicTypeAnnotation* _self_, jule::Ptr<_1c641d522_TypeKind>* _55241_k, jule::Ptr<_1c641d522_TypeKind>* _55261_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c641d522_TypeKind>* _55317_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_55241_k;
	__jule_func_result=_1c63cccb7_annotateKind(_self_, _55261_ck);
	(*(_self_))._field_k=_55317_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1c63cb821_annotateMap(_1c63c8a93_dynamicTypeAnnotation* _self_, jule::Ptr<_1c641d522_TypeKind>* _56042_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c642bc8e_Map> _56117_pmap = _1c6422713_Map((*((*(_self_))._field_k)).ptr());;
	if ((_56117_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c642bc8e_Map> _56517_m = _1c6422713_Map((*(_56042_k)).ptr());;
	__jule_func_result = (_1c63cb4d0_checkMapKey(_self_, (&((*(_56117_pmap))._field_Key)), &((*(_56517_m))._field_Key)) && _1c63cb4d0_checkMapKey(_self_, (&((*(_56117_pmap))._field_Val)), &((*(_56517_m))._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1c63cbb62_annotateFn(_1c63c8a93_dynamicTypeAnnotation* _self_, jule::Ptr<_1c641d522_TypeKind>* _57041_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c62d2b01_FnIns> _57117_pf = _1c6421e60_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_57117_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c62d2b01_FnIns> _57517_f = _1c6421e60_Fn((*(_57041_k)).ptr());;
	{
		
		if (((*(_57117_pf))._field_Params.len() != (*(_57517_f))._field_Params.len())) {
			_case_begin_1ac987dd5:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1c62d0170_IsVoid((*(_57117_pf))._field_Decl.ptr()) != _1c62d0170_IsVoid((*(_57517_f))._field_Decl.ptr()))) {
			_case_begin_1ac987e5c:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1ac987d80:;
	};
	__jule_func_result=true;
	jule::Ptr<_1c641d522_TypeKind>* _58417_old = (*(_self_))._field_k;;
	{
		auto expr = &((*(_57517_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac988028:;
		if (it != expr_end) {
			jule::I64 _58514_i = it - expr->begin();
			jule::Ptr<_1c62d1b55_ParamIns> _58521_fp = *it;
			{
				(*(_self_))._field_k=(&((*((*(_57117_pf))._field_Params[_58514_i]))._field_Kind));
				__jule_func_result=(_1c63cccb7_annotateKind(_self_, &((*(_58521_fp))._field_Kind)) && __jule_func_result);
			}
			_iter_next_1ac988028:;
			++it;
			_58514_i++;
			goto _iter_begin_1ac988028;
		}
		_iter_end_1ac988028:;
	};
	if ((!(_1c62d0170_IsVoid((*(_57117_pf))._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&((*(_57117_pf))._field_Result));
		__jule_func_result=(_1c63cccb7_annotateKind(_self_, &((*(_57517_f))._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_58417_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1c63cbea3_annotatePtr(_1c63c8a93_dynamicTypeAnnotation* _self_, jule::Ptr<_1c641d522_TypeKind>* _59942_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c642d3de_Ptr> _60017_pptr = _1c6421190_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_60017_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c642d3de_Ptr> _60417_ptr = _1c6421190_Ptr((*(_59942_k)).ptr());;
	(*(_self_))._field_k=(&((*(_60017_pptr))._field_Elem));
	__jule_func_result = _1c63cccb7_annotateKind(_self_, &((*(_60417_ptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1c63cc2e4_annotateSptr(_1c63c8a93_dynamicTypeAnnotation* _self_, jule::Ptr<_1c641d522_TypeKind>* _60943_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c6429b27_Sptr> _61017_ssptr = _1c6420e09_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_61017_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c6429b27_Sptr> _61417_sptr = _1c6420e09_Sptr((*(_60943_k)).ptr());;
	(*(_self_))._field_k=(&((*(_61017_ssptr))._field_Elem));
	__jule_func_result = _1c63cccb7_annotateKind(_self_, &((*(_61417_sptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1c63cc635_annotateStruct(_1c63c8a93_dynamicTypeAnnotation* _self_, jule::Ptr<_1c641d522_TypeKind>* _61945_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c62bcab9_StructIns> _62017_s = _1c64221e6_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_62017_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c62bcab9_StructIns> _62417_s2 = _1c64221e6_Struct((*(_61945_k)).ptr());;
	if (((*(_62017_s))._field_Generics.len() != (*(_62417_s2))._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_62017_s))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac993484:;
		if (it != expr_end) {
			jule::I64 _62814_i = it - expr->begin();
			jule::Ptr<_1c641bb3b_InsGeneric> _62821_g = *it;
			{
				jule::Ptr<_1c641bb3b_InsGeneric> _62921_g2 = (*(_62417_s2))._field_Generics[_62814_i];;
				if (_1c641dc2b_Equal((*(_62821_g))._field_Kind, (*(_62921_g2))._field_Kind)) {
					goto _iter_next_1ac993484;
				};
				(*(_self_))._field_k=(&((*(_62821_g))._field_Kind));
				if ((!(_1c63cccb7_annotateKind(_self_, &((*(_62921_g2))._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ac993484:;
			++it;
			_62814_i++;
			goto _iter_begin_1ac993484;
		}
		_iter_end_1ac993484:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c63cc976_annotateAny(_1c63c8a93_dynamicTypeAnnotation* _self_, jule::Ptr<_1c641d522_TypeKind>* _64142_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _64213_kind = _1c641d8da_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac996e49:;
		if (it != expr_end) {
			jule::I64 _64313_i = it - expr->begin();
			jule::Ptr<_1c62a6454_GenericDecl> _64316_g = *it;
			{
				if ((_64213_kind != (*(_64316_g))._field_Ident)) {
					goto _iter_next_1ac996e49;
				};
				jule::Ptr<_1c641bb3b_InsGeneric> _64717_t = (*((*(_self_))._field_f))._field_Generics[_64313_i];;
				{
					
					if ((_64717_t == nullptr) || ((*(_64717_t))._field_Kind == nullptr)) {
						_case_begin_1ac998cb4:;
						{
							_1c63ca611_pushGeneric(_self_, _64142_k, _64313_i);
						}
					}
					else if ((!(_1c641dc2b_Equal((*(_64717_t))._field_Kind, (*(_64142_k)))))) {
						_case_begin_1ac998d3b:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1ac998b82:;
				};
				(*((*((*(_self_))._field_k))))._field_Kind=(*((*(_64142_k))))._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1ac996e49:;
			++it;
			_64313_i++;
			goto _iter_begin_1ac996e49;
		}
		_iter_end_1ac996e49:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1c63cccb7_annotateKind(_1c63c8a93_dynamicTypeAnnotation* _self_, jule::Ptr<_1c641d522_TypeKind>* _66243_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1c63cc976_annotateAny(_self_, _66243_k)) {
			_case_begin_1ac99b39e:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c6420b73_Prim((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1ac99b426:;
			{
				__jule_func_result = _1c63ca952_annotatePrim(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c6421943_Arr((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1ac99b68a:;
			{
				__jule_func_result = _1c63cac93_annotateArr(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c6421bc9_Slc((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1ac99b701:;
			{
				__jule_func_result = _1c63cb0d4_annotateSlc(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c6422713_Map((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1ac99b767:;
			{
				__jule_func_result = _1c63cb821_annotateMap(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c6421e60_Fn((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1ac99b7de:;
			{
				__jule_func_result = _1c63cbb62_annotateFn(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c6421190_Ptr((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1ac99b866:;
			{
				__jule_func_result = _1c63cbea3_annotatePtr(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c6420e09_Sptr((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1ac99b976:;
			{
				__jule_func_result = _1c63cc2e4_annotateSptr(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c64221e6_Struct((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1ac99b9dc:;
			{
				__jule_func_result = _1c63cc635_annotateStruct(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ac99b27d:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1ac99acd8:;
	};
}



inline jule::Bool _1c63cd04d_annotate(_1c63c8a93_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*((*(_self_))._field_p))._field_Kind));
	__jule_func_result = _1c63cccb7_annotateKind(_self_, &((*((*(_self_))._field_a))._field_Kind));
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c63c8a93_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1c63cde94_pushErrToken(_1c63cd900_fnCallArgChecker* _self_, jule::Ptr<_1c6283a3b_Token> _70731_token, jule::Str _70746_fmt, jule::Slice<jule::Any> _70759_args) {
	_1c636a606_pushErr((*((*(_self_))._field_e))._field_s.ptr(), _70731_token, _70746_fmt, _70759_args);
}



inline void _1c63ce307_pushErr(_1c63cd900_fnCallArgChecker* _self_, jule::Str _71126_fmt, jule::Slice<jule::Any> _71139_args) {
	_1c63cde94_pushErrToken(_self_, (*(_self_))._field_errorToken, _71126_fmt, _71139_args);
}



inline jule::Slice<jule::Ptr<_1c62d1b55_ParamIns>> _1c63ce58d_getParams(_1c63cd900_fnCallArgChecker* _self_) {
	if (((((*((*(_self_))._field_f))._field_Params.len() > 0LL) && ((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl != nullptr)) && _1c62cd844_IsSelf((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl.ptr()))) {
		return (*((*(_self_))._field_f))._field_Params.slice(1LL);;
	};
	return (*((*(_self_))._field_f))._field_Params;;
}



inline jule::Bool _1c63ce89b_checkCounts(_1c63cd900_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1c62d1b55_ParamIns>>* _72431_params) {
	jule::Bool __jule_func_result = false;
	jule::I64 _72517_n = (*(_72431_params)).len();;
	if (((_72517_n > 0LL) && _1c62cd844_IsSelf((*((*(_72431_params))[0LL]))._field_Decl.ptr()))) {
		(_72517_n)--;
	};
	jule::I64 _73017_diff = (_72517_n - (*(_self_))._field_args.len());;
	jule::Str _73117_log = jule::Str();;
	{
		
		if ((_73017_diff == 0LL)) {
			_case_begin_1ac9a8433:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_72517_n > 0LL) && (*((*((*(_72431_params))[(_72517_n - 1LL)]))._field_Decl))._field_Variadic)) {
			_case_begin_1ac9a8356:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_73017_diff < 0LL) || (_73017_diff > (*(_72431_params)).len()))) {
			_case_begin_1ac9a8059:;
			{
				_73117_log=jule::Str("argument overflow: passed more argument than expected to call @", 63);
			}
		}
		else {
			_case_begin_1ac9a7ee3:;
			{
				_73117_log=jule::Str("missing arguments to call @", 27);
			}
		}
		_match_end_1ac9a7e8d:;
	};
	_2206c697e_StrBuilder _74217_err = static__2206c6c9d_New(32LL);;
	_2206d0625_WriteStr(&_74217_err, (*((*((*(_self_))._field_f))._field_Decl))._field_Ident);
	_2206d0625_WriteStr(&_74217_err, jule::Str("\n       wanted (", 16));
	{
		auto expr = _72431_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9aa512:;
		if (it != expr_end) {
			jule::I64 _74513_i = it - expr->begin();
			jule::Ptr<_1c62d1b55_ParamIns> *_74516_p = it;
			{
				_2206d0625_WriteStr(&_74217_err, _1c641d8da_Str((*((*(_74516_p))))._field_Kind.ptr()));
				if ((((*(_72431_params)).len() - _74513_i) > 1LL)) {
					_2206d0625_WriteStr(&_74217_err, jule::Str(", ", 2));
				};
			}
			_iter_next_1ac9aa512:;
			++it;
			_74513_i++;
			goto _iter_begin_1ac9aa512;
		}
		_iter_end_1ac9aa512:;
	};
	_2206d08cd_WriteByte(&_74217_err, ')');
	_1c63ce307_pushErr(_self_, _73117_log, jule::Slice<jule::Any>::make({jule::Any(_2206d0e1c_Str(&_74217_err), &__jule_any_type4)}));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1c63ced52_checkArg(_1c63cd900_fnCallArgChecker* _self_, jule::Ptr<_1c62d1b55_ParamIns>* _75632_p, jule::Ptr<_1c63dd35a_Data>* _75651_arg, jule::Ptr<_1c6283a3b_Token>* _75668_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1c62d4dcd_parameterUsesGenerics(_75632_p, &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics)))) {
		__jule_func_result=((!((*((*((*(_75632_p))))._field_Decl))._field_Variadic)) && _1c63d7244_isGoodValueToInfer(_75651_arg));
		if (__jule_func_result) {
			_1c63c8a93_dynamicTypeAnnotation _76125_dta = _1c63c8a93_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_75632_p)), ._field_a=(*(_75651_arg)), ._field_errorToken=(*(_75668_errorToken)), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1c63cd04d_annotate(&_76125_dta);
		};
		if ((!(__jule_func_result))) {
			_1c63cde94_pushErrToken(_self_, (*(_75668_errorToken)), jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1c6376623_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, (*((*((*(_75632_p))))._field_Decl))._field_Mutable, (*((*((*(_75632_p))))._field_Decl))._field_Reference, &((*((*(_75632_p))))._field_Kind), _75651_arg, _75668_errorToken)) {
		_1c6373114_checkAssignType((*((*(_self_))._field_e))._field_s, (*((*((*(_75632_p))))._field_Decl))._field_Reference, &((*((*(_75632_p))))._field_Kind), _75651_arg, (*(_75668_errorToken)));
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c63d024d_push(_1c63cd900_fnCallArgChecker* _self_, jule::Ptr<_1c62d1b55_ParamIns>* _78528_p, jule::Ptr<_1c629d57d_Expr> _78546_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c641d522_TypeKind> _78617_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _78713_oldImmut = (*((*(_self_))._field_e))._field_immutable;;
	(*((*(_self_))._field_e))._field_immutable=(!((*((*((*(_78528_p))))._field_Decl))._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*((*((*(_78528_p))))._field_Decl))._field_Variadic)))) {
		(*((*(_self_))._field_e))._field_prefix=(*((*(_78528_p))))._field_Kind;
	} else {
		(*((*(_self_))._field_e))._field_prefix=nullptr;
	};
	jule::Ptr<_1c63dd35a_Data> _79517_d = _1c640d028_evalExpr((*(_self_))._field_e, _78546_arg);;
	(*((*(_self_))._field_e))._field_prefix=_78617_old;
	(*((*(_self_))._field_e))._field_immutable=_78713_oldImmut;
	if ((_79517_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1c63ced52_checkArg(_self_, _78528_p, &(_79517_d), &((*(_78546_arg))._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_79517_d))._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _1c63d0649_pushVariadic(_1c63cd900_fnCallArgChecker* _self_, jule::Ptr<_1c62d1b55_ParamIns>* _80936_p, jule::I64 _80954_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _81117_variadiced = false;;
	jule::Bool _81213_more = ((_80954_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1c62c4362_SliceExprModel> _81317_model = jule::new_ptr<_1c62c4362_SliceExprModel>(_1c62c4362_SliceExprModel{._field_ElemKind=(*((*(_80936_p))))._field_Kind, });;
	jule::Ptr<_1c641d522_TypeKind> _81717_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _82213_variadic = (*((*((*(_80936_p))))._field_Kind))._field_Variadic;;
	(*((*((*(_80936_p))))._field_Kind))._field_Variadic=false;
	__JULE_DEFER({
		(*((*((*(_80936_p))))._field_Kind))._field_Variadic=_82213_variadic;
	});;
	for (; (_80954_i < (*(_self_))._field_args.len()); (_80954_i)++) {
		{
			jule::Ptr<_1c629d57d_Expr> _82921_arg = (*(_self_))._field_args[_80954_i];;
			{
				auto &_match_expr{ (*(_82921_arg))._field_Kind };
				
				if (_match_expr.type == &__jule_any_type75) {
					_case_begin_1acc892e6:;
					{
						(*((*(_self_))._field_e))._field_prefix=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(jule::new_ptr<_1c642a5ea_Slc>(_1c642a5ea_Slc{._field_Elem=(*((*(_80936_p))))._field_Kind}), 22)});
					}
				}
				else {
					_case_begin_1acc88e3e:;
					{
						(*((*(_self_))._field_e))._field_prefix=(*((*(_80936_p))))._field_Kind;
					}
				}
				_match_end_1acc88dd9:;
			};
			jule::Ptr<_1c63dd35a_Data> _84221_d = _1c640c896_eval((*(_self_))._field_e, _82921_arg);;
			if ((_84221_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1acc875ad;
			};
			if ((*((*(_84221_d))._field_Kind))._field_Variadic) {
				_81117_variadiced=true;
				(*((*((*(_80936_p))))._field_Kind))._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1c63ced52_checkArg(_self_, _80936_p, &(_84221_d), &((*(_82921_arg))._field_Token)));
				{
					auto &_match_expr{ (*(_84221_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type76) {
						_case_begin_1acc8ca25:;
						{
							_81317_model=(*(_84221_d))._field_Model.cast_ptr<_1c62c4362_SliceExprModel>(&__jule_any_type76);
							(*(_81317_model))._field_ElemKind=(*((*(_80936_p))))._field_Kind;
						}
					}
					else {
						_case_begin_1acc8c65c:;
						{
							_81317_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_84221_d))._field_Model); };
						}
					}
					_match_end_1acc8c607:;
				};
				(_80954_i)++;
				goto _iter_end_1acc875ad;
			};
			__jule_func_result=(__jule_func_result && _1c63ced52_checkArg(_self_, _80936_p, &(_84221_d), &((*(_82921_arg))._field_Token)));
			{ jule::Slice<jule::Any> &__jule_push_dest = (*(_81317_model))._field_Elems; __jule_push_dest.push((*(_84221_d))._field_Model); };
		}
	_iter_next_1acc875ad:;
	}
	_iter_end_1acc875ad:;;
	(*((*(_self_))._field_e))._field_prefix=_81717_old;
	if ((_81117_variadiced && _81213_more)) {
		_1c63cde94_pushErrToken(_self_, (*((*(_self_))._field_args[_80954_i]))._field_Token, jule::Str("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
	};
	if ((_81317_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_81317_model, &__jule_any_type76)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1c63d098a_checkArgs(_1c63cd900_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1c62d1b55_ParamIns>>* _88533_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _88613_arg = (*((*(_self_))._field_e))._field_arg;;
	(*((*(_self_))._field_e))._field_arg=true;
	__jule_func_result=true;
	jule::I64 _89017_i = 0LL;;
	if ((((*(_88533_params)).len() > 0LL) && _1c62cd844_IsSelf((*((*(_88533_params))[0LL]))._field_Decl.ptr()))) {
		(_89017_i)++;
	};
	_julec_label_1acc9293c:;
	while ((_89017_i < (*(_88533_params)).len())) {
		{
			jule::Ptr<_1c62d1b55_ParamIns> _89721_p = (*(_88533_params))[_89017_i];;
			{
				
				if ((*((*(_89721_p))._field_Decl))._field_Variadic) {
					_case_begin_1acc944cc:;
					{
						__jule_func_result=(_1c63d0649_pushVariadic(_self_, &(_89721_p), _89017_i) && __jule_func_result);
						goto _iter_end_1acc92c4a;
					}
				}
				else if (((*(_self_))._field_args.len() <= _89017_i)) {
					_case_begin_1acc945ba:;
					{
						__jule_func_result=false;
						goto _iter_end_1acc92c4a;
					}
				}
				else {
					_case_begin_1acc94136:;
					{
						__jule_func_result=(_1c63d024d_push(_self_, &(_89721_p), (*(_self_))._field_args[_89017_i]) && __jule_func_result);
					}
				}
				_match_end_1acc940c0:;
			};
			(_89017_i)++;
		}
	_iter_next_1acc92c4a:;
	}
	_iter_end_1acc92c4a:;;
	(*((*(_self_))._field_e))._field_arg=_88613_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1c63d0c21_checkDynamicTypeAnnotation(_1c63cd900_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_f))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc9649b:;
		if (it != expr_end) {
			jule::Ptr<_1c641bb3b_InsGeneric> _91716_g = *it;
			{
				if ((_91716_g == nullptr)) {
					_1c63ce307_pushErr(_self_, jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1acc9649b:;
			++it;
			goto _iter_begin_1acc9649b;
		}
		_iter_end_1acc9649b:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c63d0ea7_check(_1c63cd900_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1c62d1b55_ParamIns>> _92717_params = _1c63ce58d_getParams(_self_);;
	__jule_func_result=_1c63ce89b_checkCounts(_self_, &(_92717_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1c63d098a_checkArgs(_self_, &(_92717_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1c63d0c21_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c63cd900_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1c63d1d87_pushErr(_1c63d1837_structLitChecker* _self_, jule::Ptr<_1c6283a3b_Token> _96526_token, jule::Str _96541_fmt, jule::Slice<jule::Any> _96554_args) {
	_1c63e059e_pushErr((*(_self_))._field_e.ptr(), _96526_token, _96541_fmt, _96554_args);
}



inline void _1c63d21ea_pushSuggestion(_1c63d1837_structLitChecker* _self_, jule::Str _97033_fmt, jule::Slice<jule::Any> _97046_args) {
	_1c63e0912_pushSuggestion((*(_self_))._field_e.ptr(), _97033_fmt, _97046_args);
}



inline void _1c63d2618_pushMatch(_1c63d1837_structLitChecker* _self_, jule::Ptr<_1c62bc019_FieldIns>* _97433_f, jule::Ptr<_1c63dd35a_Data>* _97452_d, jule::Ptr<_1c6283a3b_Token>* _97467_errorToken) {
	;
	jule::Bool _98013_mutable = ((!((*((*(_self_))._field_e))._field_immutable)) || ((*((*((*(_97433_f))))._field_Decl))._field_Mutable && ((*((*(_self_))._field_s))._field_Methods.len() > 0LL)));;
	if (_1c6376623_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, _98013_mutable, false, &((*((*(_97433_f))))._field_Kind), _97452_d, _97467_errorToken)) {
		_1c6373114_checkAssignType((*((*(_self_))._field_e))._field_s, false, &((*((*(_97433_f))))._field_Kind), _97452_d, (*(_97467_errorToken)));
	};
	{ jule::Slice<jule::Ptr<_1c62c28b0_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_1c62c28b0_StructArgExprModel>(_1c62c28b0_StructArgExprModel{._field_Token=(*(_97467_errorToken)), ._field_Field=(*(_97433_f)), ._field_Expr=(*(_97452_d))})); };
}



inline void _1c63d297b_checkPair(_1c63d1837_structLitChecker* _self_, jule::Ptr<_1c62a2c9c_FieldExprPair>* _99333_pair, jule::Slice<jule::Ptr<_1c629d57d_Expr>>* _99360_exprs) {
	jule::Ptr<_1c62bc019_FieldIns> _99517_f = _1c62bde72_FindField((*(_self_))._field_s.ptr(), (*((*((*(_99333_pair))))._field_Field))._field_Kind);;
	if ((_99517_f == nullptr)) {
		_1c63d1d87_pushErr(_self_, (*((*(_99333_pair))))._field_Field, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_99333_pair))))._field_Field))._field_Kind, &__jule_any_type4)}));
		return;;
	};
	if ((!(_1c636ad65_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_99517_f))._field_Decl))._field_Public, (*((*(_99517_f))._field_Decl))._field_Token)))) {
		_1c63d1d87_pushErr(_self_, (*((*(_99333_pair))))._field_Field, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_99333_pair))))._field_Field))._field_Kind, &__jule_any_type4)}));
		_1c63d21ea_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	_julec_label_1acca08e5:;
	{
		auto expr = _99360_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acca33dc:;
		if (it != expr_end) {
			jule::Ptr<_1c629d57d_Expr> _100721_expr = *it;
			{
				{
					auto &_match_expr{ (*(_100721_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type77) {
						_case_begin_1acca3d8d:;
						{
							jule::Ptr<_1c62a2c9c_FieldExprPair> _101025_dpair = (*(_100721_expr))._field_Kind.cast_ptr<_1c62a2c9c_FieldExprPair>(&__jule_any_type77);;
							{
								
								if (((*(_99333_pair)) == _101025_dpair)) {
									_case_begin_1acca4d28:;
									{
										goto _iter_end_1acca33dc;
									}
								}
								else if (((*((*((*(_99333_pair))))._field_Field))._field_Kind == (*((*(_101025_dpair))._field_Field))._field_Kind)) {
									_case_begin_1acca4da0:;
									{
										_1c63d1d87_pushErr(_self_, (*((*(_99333_pair))))._field_Field, jule::Str("@ already has expression", 24), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_99333_pair))))._field_Field))._field_Kind, &__jule_any_type4)}));
										goto _iter_end_1acca33dc;
									}
								}
								_match_end_1acca4c6d:;
							};
						}
					}
					_match_end_1acca3d38:;
				};
			}
			_iter_next_1acca33dc:;
			++it;
			goto _iter_begin_1acca33dc;
		}
		_iter_end_1acca33dc:;
	};
	jule::Ptr<_1c641d522_TypeKind> _102117_prefix = (*((*(_self_))._field_e))._field_prefix;;
	__JULE_DEFER({
		(*((*(_self_))._field_e))._field_prefix=_102117_prefix;
	});;
	(*((*(_self_))._field_e))._field_prefix=(*(_99517_f))._field_Kind;
	jule::Ptr<_1c63dd35a_Data> _102517_d = _1c640d028_evalExpr((*(_self_))._field_e, (*((*(_99333_pair))))._field_Expr);;
	if ((_102517_d == nullptr)) {
		return;;
	};
	_1c63d2618_pushMatch(_self_, &(_99517_f), &(_102517_d), &((*((*(_99333_pair))))._field_Field));
}



inline jule::Bool _1c63d2cbc_readyExprs(_1c63d1837_structLitChecker* _self_, jule::Slice<jule::Ptr<_1c629d57d_Expr>>* _103234_exprs) {
	jule::Bool _103317_ok = true;;
	{
		auto expr = _103234_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acca91c3:;
		if (it != expr_end) {
			jule::I64 _103414_i = it - expr->begin();
			jule::Ptr<_1c629d57d_Expr> _103421_expr = *it;
			{
				{
					auto &_match_expr{ (*(_103421_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type78) {
						_case_begin_1acca9e4e:;
						{
							jule::Ptr<_1c62a43a8_KeyValPair> _103725_pair = (*(_103421_expr))._field_Kind.cast_ptr<_1c62a43a8_KeyValPair>(&__jule_any_type78);;
							{
								auto &_match_expr{ (*((*(_103725_pair))._field_Key))._field_Kind };
								
								if (_match_expr.type == &__jule_any_type79) {
									_case_begin_1accaac52:;
									{
										goto _match_end_1accab23b;
									}
								}
								else {
									_case_begin_1accab291:;
									{
										_1c63d1d87_pushErr(_self_, (*(_103725_pair))._field_Colon, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
										_103317_ok=false;
										goto _iter_next_1acca91c3;
									}
								}
								_match_end_1accab23b:;
							};
							(*((*(_103234_exprs))[_103414_i]))._field_Kind=jule::Any(jule::new_ptr<_1c62a2c9c_FieldExprPair>(_1c62a2c9c_FieldExprPair{._field_Field=(*((*(_103725_pair))._field_Key))._field_Token, ._field_Expr=(*(_103725_pair))._field_Val}), &__jule_any_type77);
						}
					}
					_match_end_1acca9de9:;
				};
			}
			_iter_next_1acca91c3:;
			++it;
			_103414_i++;
			goto _iter_begin_1acca91c3;
		}
		_iter_end_1acca91c3:;
	};
	return _103317_ok;;
}



inline void _1c63d3075_check(_1c63d1837_structLitChecker* _self_, jule::Slice<jule::Ptr<_1c629d57d_Expr>>* _105629_exprs) {
	if (((*(_105629_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1c63d2cbc_readyExprs(_self_, _105629_exprs)))) {
		return;;
	};
	jule::Bool _106317_paired = false;;
	{
		auto expr = _105629_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1accada24:;
		if (it != expr_end) {
			jule::I64 _106414_i = it - expr->begin();
			jule::Ptr<_1c629d57d_Expr> _106421_expr = *it;
			{
				{
					auto &_match_expr{ (*(_106421_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type77) {
						_case_begin_1accb4bb2:;
						{
							jule::Ptr<_1c62a2c9c_FieldExprPair> _106725_pair = (*(_106421_expr))._field_Kind.cast_ptr<_1c62a2c9c_FieldExprPair>(&__jule_any_type77);;
							if (((_106414_i > 0LL) && (!(_106317_paired)))) {
								_1c63d1d87_pushErr(_self_, (*(_106725_pair))._field_Field, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							_106317_paired=true;
							_1c63d297b_checkPair(_self_, &(_106725_pair), _105629_exprs);
						}
					}
					else {
						_case_begin_1accae706:;
						{
							if (_106317_paired) {
								_1c63d1d87_pushErr(_self_, (*(_106421_expr))._field_Token, jule::Str("argument must target to field", 29), jule::Slice<jule::Any>());
							};
							if ((_106414_i >= (*((*(_self_))._field_s))._field_Fields.len())) {
								_1c63d1d87_pushErr(_self_, (*(_106421_expr))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>());
								goto _iter_next_1accada24;
							};
							jule::Ptr<_1c62bc019_FieldIns> _108225_field = (*((*(_self_))._field_s))._field_Fields[_106414_i];;
							if ((!(_1c636ad65_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_108225_field))._field_Decl))._field_Public, (*((*(_108225_field))._field_Decl))._field_Token)))) {
								_1c63d1d87_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("structure cannot instantiating because it has non-public fields", 63), jule::Slice<jule::Any>());
								_1c63d21ea_pushSuggestion(_self_, jule::Str("use field:expression pairs to instantiate", 41), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1c641d522_TypeKind> _109025_prefix = (*((*(_self_))._field_e))._field_prefix;;
							__JULE_DEFER({
								(*((*(_self_))._field_e))._field_prefix=_109025_prefix;
							});;
							(*((*(_self_))._field_e))._field_prefix=(*(_108225_field))._field_Kind;
							jule::Ptr<_1c63dd35a_Data> _109425_d = _1c640d028_evalExpr((*(_self_))._field_e, _106421_expr);;
							if ((_109425_d == nullptr)) {
								goto _iter_next_1accada24;
							};
							_1c63d2618_pushMatch(_self_, &(_108225_field), &(_109425_d), &((*(_106421_expr))._field_Token));
						}
					}
					_match_end_1accae6a1:;
				};
			}
			_iter_next_1accada24:;
			++it;
			_106414_i++;
			goto _iter_begin_1accada24;
		}
		_iter_end_1accada24:;
	};
	if ((!(_106317_paired))) {
		jule::I64 _110517_n = (*((*(_self_))._field_s))._field_Fields.len();;
		jule::I64 _110621_diff = (_110517_n - (*(_105629_exprs)).len());;
		{
			
			if ((_110621_diff <= 0LL)) {
				_case_begin_1accb77db:;
				{
					return;;
				}
			}
			_match_end_1accb76ba:;
		};
		_2206c697e_StrBuilder _111221_idents = static__2206c6c9d_New(32LL);;
		for (; (_110621_diff > 0LL); (_110621_diff)--) {
			{
				_2206d0625_WriteStr(&_111221_idents, jule::Str(", ", 2));
				_2206d0625_WriteStr(&_111221_idents, (*((*((*((*(_self_))._field_s))._field_Fields[(_110517_n - _110621_diff)]))._field_Decl))._field_Ident);
			}
		_iter_next_1accb805b:;
		}
		_iter_end_1accb805b:;;
		_1c63d1d87_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(static_cast<jule::Str>(_2206d18bd_Buf(&_111221_idents).slice(2LL)), &__jule_any_type4)}));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c63d1837_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c6389da6_Var> _1c63d3b03_buildVar(_1c63d3619_rangeChecker* _self_, jule::Ptr<_1c62abed7_VarDecl>* _113228_decl) {
	jule::Ptr<_1c6389da6_Var> _113317_v = _1c62db236_buildVar((*(_113228_decl)));;
	return _113317_v;;
}



inline void _1c63d3d01_setSizeKey(_1c63d3619_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1c628649a_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyA=_1c63d3b03_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyA));
	(*((*((*(_self_))._field_Kind))._field_KeyA))._field_Kind=(*(_1c650c49b_findBuiltinTypeAlias(jule::Str("int", 3))))._field_Kind;
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1accbcb32:;
			{
				(*((*((*(_self_))._field_Kind))._field_KeyA))._field_IterRelation=jule::new_ptr<_1c6388beb_IterRelation>(_1c6388beb_IterRelation{._field_Range=(*((*(_self_))._field_d))._field_Model.cast_ptr<_1c6389da6_Var>(&__jule_any_type8)});
			}
		}
		_match_end_1accbcacc:;
	};
}



inline void _1c63d421e_checkRangeExprValidity(_1c63d3619_rangeChecker* _self_, jule::Ptr<_1c63dd35a_Data>* _115946_d, jule::Ptr<_1c6389da6_Var>* _115957_key, jule::Ptr<_1c641d522_TypeKind>* _115973_k) {
	jule::Bool _116017__mut = (*((*(_115957_key))))._field_Mutable;;
	if ((_116017__mut && (!(_1c641eda3_Mutable((*(_115973_k)).ptr()))))) {
		_116017__mut=false;
	};
	_1c6376623_checkValidityForInitExpr((*((*(_self_))._field_sc))._field_s, _116017__mut, (*((*(_115957_key))))._field_Reference, &((*((*((*(_115957_key))))._field_Kind))._field_Kind), _115946_d, &((*((*(_self_))._field_rang))._field_InToken));
}



inline void _1c63d441c_checkSlice(_1c63d3619_rangeChecker* _self_) {
	_1c63d3d01_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1c628649a_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1c642a5ea_Slc> _117817_slc = _1c6421bc9_Slc((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1c63d3b03_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=jule::new_ptr<_1c64256e4_TypeSymbol>(_1c64256e4_TypeSymbol{._field_Kind=(*(_117817_slc))._field_Elem});
	_1c63d421e_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*((*(_self_))._field_Kind))._field_KeyB), &((*(_117817_slc))._field_Elem));
}



inline void _1c63d461a_checkArray(_1c63d3619_rangeChecker* _self_) {
	_1c63d3d01_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1c628649a_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1c642c91b_Arr> _119117_arr = _1c6421943_Arr((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1c63d3b03_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=jule::new_ptr<_1c64256e4_TypeSymbol>(_1c64256e4_TypeSymbol{._field_Kind=(*(_119117_arr))._field_Elem});
	_1c63d421e_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*((*(_self_))._field_Kind))._field_KeyB), &((*(_119117_arr))._field_Elem));
}



inline void _1c63d4818_checkMapKeyA(_1c63d3619_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1c628649a_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1c642bc8e_Map> _120317_m = _1c6422713_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyA=_1c63d3b03_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyA));
	(*((*((*(_self_))._field_Kind))._field_KeyA))._field_Kind=jule::new_ptr<_1c64256e4_TypeSymbol>(_1c64256e4_TypeSymbol{._field_Kind=(*(_120317_m))._field_Key});
	jule::Ptr<_1c63dd35a_Data> _120717_d = jule::new_ptr<_1c63dd35a_Data>((*((*(_self_))._field_d)));;
	(*(_120717_d))._field_Kind=(*(_120317_m))._field_Key;
	_1c63d421e_checkRangeExprValidity(_self_, &(_120717_d), &((*((*(_self_))._field_Kind))._field_KeyA), &((*(_120317_m))._field_Key));
}



inline void _1c63d4a16_checkMapKeyB(_1c63d3619_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1c628649a_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1c642bc8e_Map> _121817_m = _1c6422713_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1c63d3b03_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=jule::new_ptr<_1c64256e4_TypeSymbol>(_1c64256e4_TypeSymbol{._field_Kind=(*(_121817_m))._field_Val});
	jule::Ptr<_1c63dd35a_Data> _122217_d = jule::new_ptr<_1c63dd35a_Data>((*((*(_self_))._field_d)));;
	(*(_122217_d))._field_Kind=(*(_121817_m))._field_Val;
	_1c63d421e_checkRangeExprValidity(_self_, &(_122217_d), &((*((*(_self_))._field_Kind))._field_KeyB), &((*(_121817_m))._field_Val));
}



inline void _1c63d4c14_checkMap(_1c63d3619_rangeChecker* _self_) {
	_1c63d4818_checkMapKeyA(_self_);
	_1c63d4a16_checkMapKeyB(_self_);
}



inline void _1c63d4e12_checkStr(_1c63d3619_rangeChecker* _self_) {
	_1c63d3d01_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1c628649a_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1c63d3b03_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=(*(_1c650c49b_findBuiltinTypeAlias(jule::Str("u8", 2))))._field_Kind;
}



inline void _1c63d5110_checkComptime(_1c63d3619_rangeChecker* _self_) {
	_1c63d3d01_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyA != nullptr) && (*((*((*(_self_))._field_rang))._field_KeyA))._field_Mutable)) {
		_1c636a606_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*((*(_self_))._field_rang))._field_KeyA))._field_Token, jule::Str("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident, &__jule_any_type4)}));
	};
	if ((((*((*(_self_))._field_rang))._field_KeyB != nullptr) && (*((*((*(_self_))._field_rang))._field_KeyB))._field_Mutable)) {
		_1c636a606_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*((*(_self_))._field_rang))._field_KeyB))._field_Token, jule::Str("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident, &__jule_any_type4)}));
	};
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1c628649a_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1c63d3b03_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
}



inline jule::Bool _1c63d5396_checkComptimeRange(_1c63d3619_rangeChecker* _self_) {
	jule::Ptr<_1c62e9244_comptimeRange> _125717_range = _1c642401c_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_125717_range))._field_kind };
		
		if (_match_expr.type_is(true, 0) || _match_expr.type_is(true, 2) || _match_expr.type_is(true, 3) || _match_expr.type_is(true, 4) || _match_expr.type_is(true, 1) || _match_expr.type_is(true, 5)) {
			_case_begin_1accdacb5:;
			{
				_1c63d5110_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1accda90d:;
			{
				_1c636a606_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1accda578:;
	};
}



inline jule::Bool _1c63d562c_check(_1c63d3619_rangeChecker* _self_) {
	{
		
		if ((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic) {
			_case_begin_1accdda10:;
		}
		else if ((_1c6421bc9_Slc((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1accdca20:;
			{
				_1c63d441c_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1c6421943_Arr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1accdca86:;
			{
				_1c63d461a_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1c6422713_Map((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1accdcaec:;
			{
				_1c63d4c14_checkMap(_self_);
				return true;;
			}
		}
		else if ((_1c642401c_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1accdcb63:;
			{
				return _1c63d5396_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1accdc2b1:;
			{
				jule::Ptr<_1c64260eb_Prim> _128917_prim = _1c6420b73_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (((_128917_prim != nullptr) && _1c6429583_IsStr(_128917_prim.ptr()))) {
					_1c63d4e12_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1accdc17e:;
	};
	_1c636a606_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c63d3619_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1c63d6298_prepareTypes(_1c63d5d7a_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1c62d3d00_Types((*(_self_))._field_f.ptr());
	};
}



inline void _1c63d6551_prepareExprs(_1c63d5d7a_retTypeChecker* _self_, jule::Ptr<_1c629d57d_Expr>* _131736_e) {
	if (((*(_131736_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_131736_e))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1acce4b9d:;
			{
				(*(_self_))._field_exprs=(*((*((*(_131736_e))))._field_Kind.cast_ptr<_1c629e24e_TupleExpr>(&__jule_any_type80)))._field_Expr;
			}
		}
		else {
			_case_begin_1acce47d5:;
			{
				{ jule::Slice<jule::Ptr<_1c629d57d_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_131736_e))); };
			}
		}
		_match_end_1acce4780:;
	};
}



inline void _1c63d674e_checkExprs(_1c63d5d7a_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1c63dd35a_Data>> _133317_datas = jule::Slice<jule::Ptr<_1c63dd35a_Data>>::alloc(0LL, (*(_self_))._field_exprs.len());;
	jule::Ptr<_1c63e004e_Eval> _133417_eval = _1c6372aa3_eval((*((*(_self_))._field_sc))._field_s, jule::Trait<_1c643d058_Lookup>((*(_self_))._field_sc, 0));;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acce5154:;
		if (it != expr_end) {
			jule::I64 _133514_i = it - expr->begin();
			jule::Ptr<_1c629d57d_Expr> _133521_expr = *it;
			{
				if ((_133514_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1acce5154;
				};
				jule::Ptr<_1c641d522_TypeKind> _134021_t = (*(_self_))._field_types[_133514_i];;
				(*(_133417_eval))._field_prefix=_134021_t;
				jule::Ptr<_1c63dd35a_Data> _134321_d = _1c640d028_evalExpr(_133417_eval, _133521_expr);;
				if ((_134321_d == nullptr)) {
					goto _iter_next_1acce5154;
				};
				{ jule::Slice<jule::Ptr<_1c63dd35a_Data>> &__jule_push_dest = _133317_datas; __jule_push_dest.push(_134321_d); };
				if (((!((*(_134321_d))._field_Mutable)) && _1c641eda3_Mutable((*(_134321_d))._field_Kind.ptr()))) {
					_1c636a606_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("mutable typed return expressions should be mutable", 50), jule::Slice<jule::Any>());
					return;;
				};
				_1c63c6e26_assignTypeChecker _135521_ac = _1c63c6e26_assignTypeChecker{._field_s=(*((*(_self_))._field_sc))._field_s, ._field_dest=_134021_t, ._field_d=_134321_d, ._field_errorToken=(*(_self_))._field_errorToken};;
				_1c63c818b_check(&_135521_ac);
			}
			_iter_next_1acce5154:;
			++it;
			_133514_i++;
			goto _iter_begin_1acce5154;
		}
		_iter_end_1acce5154:;
	};
	if ((_133317_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1c62c76a6_TupleExprModel>(_1c62c76a6_TupleExprModel{._field_Datas=_133317_datas}), &__jule_any_type81);
	} else if ((_133317_datas.len() == 1LL)) {
		(*(_self_))._field_model=(*(_133317_datas[0LL]))._field_Model;
	};
}



inline jule::Bool _1c63d6a90_check(_1c63d5d7a_retTypeChecker* _self_, jule::Ptr<_1c629d57d_Expr>* _137429_e) {
	_1c63d6298_prepareTypes(_self_);
	_1c63d6551_prepareExprs(_self_, _137429_e);
	jule::I64 _137813_n = (*(_self_))._field_exprs.len();;
	if (((_137813_n == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
		if ((!(_1c62d0e40_AnyVar((*((*(_self_))._field_f))._field_Decl.ptr())))) {
			_1c636a606_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("return statements of non-void functions should have return expression", 69), jule::Slice<jule::Any>());
			return false;;
		};
		return true;;
	};
	if ((((_137813_n > 0LL) && ((*(_self_))._field_f != nullptr)) && _1c62d0170_IsVoid((*((*(_self_))._field_f))._field_Decl.ptr()))) {
		_1c636a606_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("void functions is cannot returns any value", 42), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_137813_n > (*(_self_))._field_types.len())) {
		_1c636a606_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("overflow return expressions", 27), jule::Slice<jule::Any>());
	} else if ((_137813_n < (*(_self_))._field_types.len())) {
		_1c636a606_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
	};
	_1c63d674e_checkExprs(_self_);
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c63d5d7a_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c63469de_ImportInfo> _1c63d861e_SelectPackage(_1c63d8135_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_1c63469de_ImportInfo>)> _2732_selector) {
	if ((_2732_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd03b57:;
		if (it != expr_end) {
			jule::Ptr<_1c63469de_ImportInfo> _3121_pkg = *it;
			{
				if (_2732_selector(_3121_pkg)) {
					return _3121_pkg;;
				};
			}
			_iter_next_1acd03b57:;
			++it;
			goto _iter_begin_1acd03b57;
		}
		_iter_end_1acd03b57:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c6389da6_Var> _1c63d8a1a_FindVar(_1c63d8135_SymbolTable* _self_, jule::Str _4126_ident, jule::Bool _4138_binded) {
	return _1c63da7ec_findVar(_self_, &(_4126_ident), _4138_binded, false);;
}



inline jule::Ptr<_1c641c730_TypeAlias> _1c63d8e16_FindTypeAlias(_1c63d8135_SymbolTable* _self_, jule::Str _4732_ident, jule::Bool _4744_binded) {
	return _1c63daca3_findTypeAlias(_self_, &(_4732_ident), _4744_binded, false);;
}



inline jule::Ptr<_1c62b9d3b_Struct> _1c63d9312_FindStruct(_1c63d8135_SymbolTable* _self_, jule::Str _5329_ident, jule::Bool _5341_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd06396:;
		if (it != expr_end) {
			jule::Ptr<_1c62b9d3b_Struct> _5421_s = *it;
			{
				if ((((*(_5421_s))._field_Ident == _5329_ident) && ((*(_5421_s))._field_Binded == _5341_binded))) {
					return _5421_s;;
				};
			}
			_iter_next_1acd06396:;
			++it;
			goto _iter_begin_1acd06396;
		}
		_iter_end_1acd06396:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c62cebec_Fn> _1c63d970d_FindFn(_1c63d8135_SymbolTable* _self_, jule::Str _6425_ident, jule::Bool _6437_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd0792a:;
		if (it != expr_end) {
			jule::Ptr<_1c62cebec_Fn> _6521_f = *it;
			{
				if ((((*(_6521_f))._field_Ident == _6425_ident) && ((*(_6521_f))._field_Binded == _6437_binded))) {
					return _6521_f;;
				};
			}
			_iter_next_1acd0792a:;
			++it;
			goto _iter_begin_1acd0792a;
		}
		_iter_end_1acd0792a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c62e2e96_Trait> _1c63d9a4e_FindTrait(_1c63d8135_SymbolTable* _self_, jule::Str _7528_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd08c4a:;
		if (it != expr_end) {
			jule::Ptr<_1c62e2e96_Trait> _7621_t = *it;
			{
				if (((*(_7621_t))._field_Ident == _7528_ident)) {
					return _7621_t;;
				};
			}
			_iter_next_1acd08c4a:;
			++it;
			goto _iter_begin_1acd08c4a;
		}
		_iter_end_1acd08c4a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c62e5691_Enum> _1c63d9d90_FindEnum(_1c63d8135_SymbolTable* _self_, jule::Str _8627_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd09421:;
		if (it != expr_end) {
			jule::Ptr<_1c62e5691_Enum> _8721_e = *it;
			{
				if (((*(_8721_e))._field_Ident == _8627_ident)) {
					return _8721_e;;
				};
			}
			_iter_next_1acd09421:;
			++it;
			goto _iter_begin_1acd09421;
		}
		_iter_end_1acd09421:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c62e6d9b_TypeEnum> _1c63da1d1_FindTypeEnum(_1c63d8135_SymbolTable* _self_, jule::Str _9731_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd0a422:;
		if (it != expr_end) {
			jule::Ptr<_1c62e6d9b_TypeEnum> _9821_e = *it;
			{
				if (((*(_9821_e))._field_Ident == _9731_ident)) {
					return _9821_e;;
				};
			}
			_iter_next_1acd0a422:;
			++it;
			goto _iter_begin_1acd0a422;
		}
		_iter_end_1acd0a422:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c6389da6_Var> _1c63da7ec_findVar(_1c63d8135_SymbolTable* _self_, jule::Str* _10827_ident, jule::Bool _10839_binded, jule::Bool _10853_reverse) {
	if (_10853_reverse) {
		jule::I64 _11021_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_11021_i >= 0LL); (_11021_i)--) {
			{
				jule::Ptr<_1c6389da6_Var> _11225_v = (*(_self_))._field_Vars[_11021_i];;
				if ((((*(_11225_v))._field_Ident == (*(_10827_ident))) && ((*(_11225_v))._field_Binded == _10839_binded))) {
					return _11225_v;;
				};
			}
		_iter_next_1acd0c7dc:;
		}
		_iter_end_1acd0c7dc:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1acd0cc60:;
			if (it != expr_end) {
				jule::Ptr<_1c6389da6_Var> _11825_v = *it;
				{
					if ((((*(_11825_v))._field_Ident == (*(_10827_ident))) && ((*(_11825_v))._field_Binded == _10839_binded))) {
						return _11825_v;;
					};
				}
				_iter_next_1acd0cc60:;
				++it;
				goto _iter_begin_1acd0cc60;
			}
			_iter_end_1acd0cc60:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1c641c730_TypeAlias> _1c63daca3_findTypeAlias(_1c63d8135_SymbolTable* _self_, jule::Str* _12733_ident, jule::Bool _12745_binded, jule::Bool _12759_reverse) {
	if (_12759_reverse) {
		jule::I64 _12921_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_12921_i >= 0LL); (_12921_i)--) {
			{
				jule::Ptr<_1c641c730_TypeAlias> _13125_ta = (*(_self_))._field_TypeAliases[_12921_i];;
				if ((((*(_13125_ta))._field_Ident == (*(_12733_ident))) && ((*(_13125_ta))._field_Binded == _12745_binded))) {
					return _13125_ta;;
				};
			}
		_iter_next_1acd10ba8:;
		}
		_iter_end_1acd10ba8:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1acd1112b:;
			if (it != expr_end) {
				jule::Ptr<_1c641c730_TypeAlias> _13725_ta = *it;
				{
					if ((((*(_13725_ta))._field_Ident == (*(_12733_ident))) && ((*(_13725_ta))._field_Binded == _12745_binded))) {
						return _13725_ta;;
					};
				}
				_iter_next_1acd1112b:;
				++it;
				goto _iter_begin_1acd1112b;
			}
			_iter_end_1acd1112b:;
		};
	};
	return nullptr;;
}



inline jule::Any _1c63db19e_defByIdent(_1c63d8135_SymbolTable* _self_, jule::Str* _14830_ident, jule::Bool _14842_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd12b88:;
		if (it != expr_end) {
			jule::Ptr<_1c6389da6_Var> _14921_v = *it;
			{
				if ((((*(_14921_v))._field_Ident == (*(_14830_ident))) && ((*(_14921_v))._field_Binded == _14842_binded))) {
					return jule::Any(_14921_v, &__jule_any_type8);;
				};
			}
			_iter_next_1acd12b88:;
			++it;
			goto _iter_begin_1acd12b88;
		}
		_iter_end_1acd12b88:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd1454c:;
		if (it != expr_end) {
			jule::Ptr<_1c641c730_TypeAlias> _15521_ta = *it;
			{
				if ((((*(_15521_ta))._field_Ident == (*(_14830_ident))) && ((*(_15521_ta))._field_Binded == _14842_binded))) {
					return jule::Any(_15521_ta, &__jule_any_type66);;
				};
			}
			_iter_next_1acd1454c:;
			++it;
			goto _iter_begin_1acd1454c;
		}
		_iter_end_1acd1454c:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd1541b:;
		if (it != expr_end) {
			jule::Ptr<_1c62b9d3b_Struct> _16121_s = *it;
			{
				if ((((*(_16121_s))._field_Ident == (*(_14830_ident))) && ((*(_16121_s))._field_Binded == _14842_binded))) {
					return jule::Any(_16121_s, &__jule_any_type65);;
				};
			}
			_iter_next_1acd1541b:;
			++it;
			goto _iter_begin_1acd1541b;
		}
		_iter_end_1acd1541b:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd14e87:;
		if (it != expr_end) {
			jule::Ptr<_1c62cebec_Fn> _16721_f = *it;
			{
				if ((((*(_16721_f))._field_Ident == (*(_14830_ident))) && ((*(_16721_f))._field_Binded == _14842_binded))) {
					return jule::Any(_16721_f, &__jule_any_type64);;
				};
			}
			_iter_next_1acd14e87:;
			++it;
			goto _iter_begin_1acd14e87;
		}
		_iter_end_1acd14e87:;
	};
	if (_14842_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd16a38:;
		if (it != expr_end) {
			jule::Ptr<_1c62e2e96_Trait> _17721_t = *it;
			{
				if (((*(_17721_t))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_17721_t, &__jule_any_type10);;
				};
			}
			_iter_next_1acd16a38:;
			++it;
			goto _iter_begin_1acd16a38;
		}
		_iter_end_1acd16a38:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd1695b:;
		if (it != expr_end) {
			jule::Ptr<_1c62e5691_Enum> _18321_e = *it;
			{
				if (((*(_18321_e))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_18321_e, &__jule_any_type67);;
				};
			}
			_iter_next_1acd1695b:;
			++it;
			goto _iter_begin_1acd1695b;
		}
		_iter_end_1acd1695b:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd18b06:;
		if (it != expr_end) {
			jule::Ptr<_1c62e6d9b_TypeEnum> _18921_te = *it;
			{
				if (((*(_18921_te))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_18921_te, &__jule_any_type68);;
				};
			}
			_iter_next_1acd18b06:;
			++it;
			goto _iter_begin_1acd18b06;
		}
		_iter_end_1acd18b06:;
	};
	return nullptr;;
}



inline jule::Bool _1c63db655_isDuplicatedIdent(_1c63d8135_SymbolTable* _self_, jule::Uintptr _20132_itself, jule::Str* _20150_ident, jule::Bool _20162_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd1a08b:;
		if (it != expr_end) {
			jule::Ptr<_1c6389da6_Var> *_20216_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20216_v))) != _20132_itself) && ((*((*(_20216_v))))._field_Ident == (*(_20150_ident)))) && ((*((*(_20216_v))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1acd1a08b:;
			++it;
			goto _iter_begin_1acd1a08b;
		}
		_iter_end_1acd1a08b:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd1acb2:;
		if (it != expr_end) {
			jule::Ptr<_1c641c730_TypeAlias> *_20816_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20816_ta))) != _20132_itself) && ((*((*(_20816_ta))))._field_Ident == (*(_20150_ident)))) && ((*((*(_20816_ta))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1acd1acb2:;
			++it;
			goto _iter_begin_1acd1acb2;
		}
		_iter_end_1acd1acb2:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd1be06:;
		if (it != expr_end) {
			jule::Ptr<_1c62b9d3b_Struct> *_21416_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21416_s))) != _20132_itself) && ((*((*(_21416_s))))._field_Ident == (*(_20150_ident)))) && ((*((*(_21416_s))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1acd1be06:;
			++it;
			goto _iter_begin_1acd1be06;
		}
		_iter_end_1acd1be06:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd1ba60:;
		if (it != expr_end) {
			jule::Ptr<_1c62cebec_Fn> *_22016_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22016_f))) != _20132_itself) && ((*((*(_22016_f))))._field_Ident == (*(_20150_ident)))) && ((*((*(_22016_f))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1acd1ba60:;
			++it;
			goto _iter_begin_1acd1ba60;
		}
		_iter_end_1acd1ba60:;
	};
	if (_20162_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd1daea:;
		if (it != expr_end) {
			jule::Ptr<_1c62e2e96_Trait> *_23016_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23016_t))) != _20132_itself) && ((*((*(_23016_t))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1acd1daea:;
			++it;
			goto _iter_begin_1acd1daea;
		}
		_iter_end_1acd1daea:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd1da1d:;
		if (it != expr_end) {
			jule::Ptr<_1c62e5691_Enum> *_23616_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23616_e))) != _20132_itself) && ((*((*(_23616_e))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1acd1da1d:;
			++it;
			goto _iter_begin_1acd1da1d;
		}
		_iter_end_1acd1da1d:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd2113b:;
		if (it != expr_end) {
			jule::Ptr<_1c62e6d9b_TypeEnum> *_24216_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24216_te))) != _20132_itself) && ((*((*(_24216_te))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1acd2113b:;
			++it;
			goto _iter_begin_1acd2113b;
		}
		_iter_end_1acd2113b:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c63d8135_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c63dd712_IsNil(_1c63dd35a_Data* _self_) {
	return _1c641e600_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1c63dd998_IsVoid(_1c63dd35a_Data* _self_) {
	return _1c641e886_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1c63ddc2e_IsConst(_1c63dd35a_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1c63de070_GoodOperand(_1c63dd35a_Data* _self_, jule::Ptr<_1c63dd35a_Data>* _10231_other) {
	if ((_1c64216ac_TypeEnum((*((*(_10231_other))))._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1c6420b73_Prim((*((*(_10231_other))))._field_Kind.ptr()) == nullptr) || (!(_1c6429819_IsAny(_1c6420b73_Prim((*((*(_10231_other))))._field_Kind.ptr()).ptr())))) && (_1c642247c_Trait((*((*(_10231_other))))._field_Kind.ptr()) == nullptr)) && (!(_1c641e600_IsNil((*(_self_))._field_Kind.ptr()))));;
}





std::ostream &operator<<(std::ostream &_Stream, _1c63dd35a_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c63de49e_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _1c63e059e_pushErr(_1c63e004e_Eval* _self_, jule::Ptr<_1c6283a3b_Token> _13326_token, jule::Str _13341_fmt, jule::Slice<jule::Any> _13354_args) {
	_1c636a606_pushErr((*(_self_))._field_s.ptr(), _13326_token, _13341_fmt, _13354_args);
}



inline void _1c63e0912_pushSuggestion(_1c63e004e_Eval* _self_, jule::Str _13833_fmt, jule::Slice<jule::Any> _13846_args) {
	_1c636a969_pushSuggestion((*(_self_))._field_s.ptr(), _13833_fmt, _13846_args);
}



inline void _1c63e0b10_allowBuiltin(_1c63e004e_Eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1c63e0d0d_disallowBuiltin(_1c63e004e_Eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1c63e1094_isUnsafe(_1c63e004e_Eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1c63e132a_isGlobal(_1c63e004e_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1acd64ed7:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1acd653a0:;
			{
				return false;;
			}
		}
		_match_end_1acd6534a:;
	};
}



inline jule::Bool _1c63e1638_applyNumericPrefix(_1c63e004e_Eval* _self_, jule::Ptr<_1c63dd35a_Data>* _16542_d) {
	if ((((((*(_16542_d)) == nullptr) || (!(_1c63ddc2e_IsConst((*(_16542_d)).ptr())))) || (_1c6420b73_Prim((*((*(_16542_d))))._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1c64260eb_Prim> _17213_prim = _1c6420b73_Prim((*(_self_))._field_prefix.ptr());;
	if ((_17213_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1dc25ebcc_IsFloat(_1c642643c_Str(_17213_prim.ptr()))) {
			_case_begin_1acd67c98:;
			{
				(*((*(_16542_d))))._field_Kind=jule::new_ptr<_1c641d522_TypeKind>((*((*(_self_))._field_prefix)));
				_1dc2640cc_SetF64((*((*(_16542_d))))._field_Constant.ptr(), static_cast<jule::F64>(_1dc263252_AsF64((*((*(_16542_d))))._field_Constant.ptr())));
				(*((*((*(_16542_d))))._field_Constant))._field_Kind=(*(_17213_prim))._field_Kind;
			}
		}
		else if (_1dc25e2b4_IsSigInt(_1c642643c_Str(_17213_prim.ptr()))) {
			_case_begin_1acd67d0e:;
			{
				if ((!(_1c63c4451_sigAssignable(_1c642643c_Str(_17213_prim.ptr()), _16542_d)))) {
					return false;;
				};
				(*((*(_16542_d))))._field_Kind=jule::new_ptr<_1c641d522_TypeKind>((*((*(_self_))._field_prefix)));
				_1dc26350a_SetI64((*((*(_16542_d))))._field_Constant.ptr(), static_cast<jule::I64>(_1dc262c35_AsI64((*((*(_16542_d))))._field_Constant.ptr())));
				(*((*((*(_16542_d))))._field_Constant))._field_Kind=(*(_17213_prim))._field_Kind;
			}
		}
		else if (_1dc25e5c2_IsUnsigInt(_1c642643c_Str(_17213_prim.ptr()))) {
			_case_begin_1acd67d75:;
			{
				if ((!(_1c63c4819_unsigAssignable(_1c642643c_Str(_17213_prim.ptr()), _16542_d)))) {
					return false;;
				};
				(*((*(_16542_d))))._field_Kind=jule::new_ptr<_1c641d522_TypeKind>((*((*(_self_))._field_prefix)));
				_1dc2637b3_SetU64((*((*(_16542_d))))._field_Constant.ptr(), static_cast<jule::U64>(_1dc262ebb_AsU64((*((*(_16542_d))))._field_Constant.ptr())));
				(*((*((*(_16542_d))))._field_Constant))._field_Kind=(*(_17213_prim))._field_Kind;
			}
		}
		_match_end_1acd679bd:;
	};
	return true;;
}



inline jule::Ptr<_1c63dd35a_Data> _1c63e1979_litStr(_1c63e004e_Eval* _self_, jule::Ptr<_1c629e628_LitExpr>* _20022_l) {
	jule::Str _20117_s = (*((*(_20022_l))))._field_Value.slice(1LL, ((*((*(_20022_l))))._field_Value.len() - 1LL));;
	if (_1c6284e5a_IsRawStr((*((*(_20022_l))))._field_Value)) {
		_20117_s=_1c63c26d5_ToRawStr(static_cast<jule::Slice<jule::U8>>(_20117_s));
	} else {
		_20117_s=_1c63c2a26_ToStr(static_cast<jule::Slice<jule::U8>>(_20117_s));
	};
	jule::Ptr<_1dc260590_Const> _20717_constant = static__1dc26132c_NewStr(_20117_s);;
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c6509355_primStr, ._field_Mutable=true, ._field_Model=jule::Any(_20717_constant, &__jule_any_type19), ._field_Constant=_20717_constant});;
}



inline jule::Ptr<_1c63dd35a_Data> _1c63e1cba_litRune(_1c63e004e_Eval* _self_, jule::Ptr<_1c629e628_LitExpr>* _21723_l) {
	jule::Str _21913_lt = (*((*(_21723_l))))._field_Value.slice(1LL, ((*((*(_21723_l))))._field_Value.len() - 1LL));;
	jule::I32 _22013_r = _1c63c252b_ToRune(static_cast<jule::Slice<jule::U8>>(_21913_lt));;
	jule::Ptr<_1c63dd35a_Data> _22117_data = jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Constant=static__1dc2609d0_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_22013_r)))});;
	jule::Bool _22513_isAscii = _1c63a9b95_IsAscii(_22013_r);;
	if (_22513_isAscii) {
		(*(_22117_data))._field_Kind=_1c650ae5b_primU8;
	} else {
		(*(_22117_data))._field_Kind=_1c650a8c8_primI32;
	};
	(*(_22117_data))._field_Mutable=true;
	(*(_22117_data))._field_Model=jule::Any(jule::new_ptr<_1c62cb2e2_RuneExprModel>(_1c62cb2e2_RuneExprModel{._field_Code=_22013_r}), &__jule_any_type82);
	(*(_22117_data))._field_IsRune=true;
	(*(_22117_data))._field_untyped=true;
	return _22117_data;;
}



inline jule::Ptr<_1c63dd35a_Data> _1c63e210b_litFloat(_1c63e004e_Eval* _self_, jule::Ptr<_1c629e628_LitExpr>* _23924_l) {
	jule::F64 _24013_f = ({
		auto except = _1dc245146_ParseFloat((*((*(_23924_l))))._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1dc260590_Const> _24117_constant = static__1dc2615e6_NewF64(_24013_f);;
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_untyped=true, ._field_Kind=_1c650bee5_primF64, ._field_Mutable=true, ._field_Model=jule::Any(_24117_constant, &__jule_any_type19), ._field_Constant=_24117_constant});;
}



inline jule::Ptr<_1c63dd35a_Data> _1c63e244c_litInt(_1c63e004e_Eval* _self_, jule::Ptr<_1c629e628_LitExpr>* _25126_l) {
	;
	jule::Str _25417_lit = (*((*(_25126_l))))._field_Value;;
	jule::I64 _25517_base = 0LL;;
	{
		
		if (_2218bcd3e_HasPrefix(_25417_lit, jule::Str("0x", 2))) {
			_case_begin_1acd789ac:;
			{
				(_25417_lit).mut_slice(2LL);;
				_25517_base=16LLU;
			}
		}
		else if (_2218bcd3e_HasPrefix(_25417_lit, jule::Str("0b", 2))) {
			_case_begin_1acd78a9a:;
			{
				(_25417_lit).mut_slice(2LL);;
				_25517_base=2LLU;
			}
		}
		else if (_2218bcd3e_HasPrefix(_25417_lit, jule::Str("0o", 2))) {
			_case_begin_1acd7869e:;
			{
				(_25417_lit).mut_slice(2LL);;
				_25517_base=8LLU;
			}
		}
		else if (((_25417_lit[0LL] == '0') && (_25417_lit.len() > 1LL))) {
			_case_begin_1acd78715:;
			{
				(_25417_lit).mut_slice(1LL);;
				_25517_base=8LLU;
			}
		}
		else {
			_case_begin_1acd78638:;
			{
				_25517_base=10LLU;
			}
		}
		_match_end_1acd785d3:;
	};
	jule::Ptr<_1c63dd35a_Data> _27517_d = jule::new_ptr<_1c63dd35a_Data>();;
	jule::Bool _27717_ok = true;;
	jule::I64 _27813_sig = ({
		auto except = _1dc23d6e4_ParseInt(_25417_lit, _25517_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_27717_ok=false;

			0LL;
		});
	});;
	if (_27717_ok) {
		(*(_27517_d))._field_Constant=static__1dc2609d0_NewI64(_27813_sig);
		(*(_27517_d))._field_Kind=_1c650a07b_primInt;
	} else {
		jule::U64 _28617_unsig = ({
			auto except = _1dc23d23d_ParseUint(_25417_lit, _25517_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1c63e059e_pushErr(_self_, (*((*(_25126_l))))._field_Token, jule::Str("arithmetic value overflow: this value too big", 45), jule::Slice<jule::Any>());
				_1c63e0912_pushSuggestion(_self_, jule::Str("floating-point literals may solve your problem", 46), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		(*(_27517_d))._field_Constant=static__1dc260c99_NewU64(_28617_unsig);
		(*(_27517_d))._field_Kind=_1c6509ba2_primUint;
	};
	(*(_27517_d))._field_Model=jule::Any((*(_27517_d))._field_Constant, &__jule_any_type19);
	if ((!(_1c63e1638_applyNumericPrefix(_self_, &(_27517_d))))) {
		_1c6417032_fitBitsize(&(_27517_d));
	};
	(*(_27517_d))._field_Mutable=true;
	(*(_27517_d))._field_untyped=true;
	return _27517_d;;
}



inline jule::Ptr<_1c63dd35a_Data> _1c63e278d_litNum(_1c63e004e_Eval* _self_, jule::Ptr<_1c629e628_LitExpr>* _30726_l) {
	{
		
		if (_1c6285b4d_IsFloat((*((*(_30726_l))))._field_Value)) {
			_case_begin_1acd81432:;
			{
				return _1c63e210b_litFloat(_self_, _30726_l);;
			}
		}
		else {
			_case_begin_1acd80c7d:;
			{
				return _1c63e244c_litInt(_self_, _30726_l);;
			}
		}
		_match_end_1acd80bd4:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c63e2ace_evalLit(_1c63e004e_Eval* _self_, jule::Ptr<_1c629e628_LitExpr> _31626_lit) {
	{
		
		if (_1c6284b91_IsStr((*(_31626_lit))._field_Value)) {
			_case_begin_1acd81ec1:;
			{
				return _1c63e1979_litStr(_self_, &(_31626_lit));;
			}
		}
		else if (_1c6285224_IsRune((*(_31626_lit))._field_Value)) {
			_case_begin_1acd82048:;
			{
				return _1c63e1cba_litRune(_self_, &(_31626_lit));;
			}
		}
		else if (_1c6285e17_IsNum((*(_31626_lit))._field_Value)) {
			_case_begin_1acd820c0:;
			{
				return _1c63e278d_litNum(_self_, &(_31626_lit));;
			}
		}
		else {
			_case_begin_1acd818d8:;
			{
				return nullptr;;
			}
		}
		_match_end_1acd8181c:;
	};
}



inline jule::Any _1c63e2e20_findBuiltins(_1c63e004e_Eval* _self_, jule::Str* _32932_ident) {
	if (_1c6364ab7_IsPub(_32932_ident)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 1)) {
				_case_begin_1acd84303:;
				{
					jule::Any _33325_def = _1c6416d01_findBuiltinsImport(_32932_ident, (*(_self_))._field_lookup.cast_ptr<_1c63469de_ImportInfo>(1));;
					if ((_33325_def != nullptr)) {
						return _33325_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, 3)) {
				_case_begin_1acd84369:;
				{
					jule::Any _33825_def = _1c6417a5a_findBuiltinsSema(_32932_ident, (*(_self_))._field_lookup.cast_ptr<_1c63679bb_Sema>(3));;
					if ((_33825_def != nullptr)) {
						return _33825_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, 0)) {
				_case_begin_1acd843d0:;
				{
					jule::Any _34325_def = _1c6417a5a_findBuiltinsSema(_32932_ident, (*((*(_self_))._field_lookup.cast_ptr<_1c6327a58_scopeChecker>(0)))._field_s);;
					if ((_34325_def != nullptr)) {
						return _34325_def;;
					};
				}
			}
			_match_end_1acd8429d:;
		};
		return nullptr;;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1c650c765_findBuiltinDef(_32932_ident);;
}



inline jule::Any _1c63e331b_getDef(_1c63e004e_Eval* _self_, jule::Str* _35626_ident, jule::Bool _35638_binded) {
	jule::Ptr<_1c6389da6_Var> _36117_v = _1c643d058_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c643b73d_FindVar((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_36117_v != nullptr)) {
		return jule::Any(_36117_v, &__jule_any_type8);;
	};
	jule::Ptr<_1c641c730_TypeAlias> _36617_ta = _1c643d058_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c643bb39_FindTypeAlias((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_36617_ta != nullptr)) {
		return jule::Any(_36617_ta, &__jule_any_type66);;
	};
	if ((!(_35638_binded))) {
		jule::Ptr<_1c62e5691_Enum> _37221_enm = _1c643d058_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c643cab3_FindEnum((*(_self_))._field_lookup, (*(_35626_ident)));;
		if ((_37221_enm != nullptr)) {
			return jule::Any(_37221_enm, &__jule_any_type67);;
		};
		jule::Ptr<_1c62e6d9b_TypeEnum> _37721_tenm = _1c643d058_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c643ce04_FindTypeEnum((*(_self_))._field_lookup, (*(_35626_ident)));;
		if ((_37721_tenm != nullptr)) {
			return jule::Any(_37721_tenm, &__jule_any_type68);;
		};
	};
	jule::Ptr<_1c62cebec_Fn> _38317_f = _1c643d058_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c643c431_FindFn((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_38317_f != nullptr)) {
		return jule::Any(_38317_f, &__jule_any_type64);;
	};
	jule::Ptr<_1c62b9d3b_Struct> _38817_s = _1c643d058_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c643c035_FindStruct((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_38817_s != nullptr)) {
		return jule::Any(_38817_s, &__jule_any_type65);;
	};
	return _1c63e2e20_findBuiltins(_self_, _35626_ident);;
}



inline void _1acd9c67e_pushReference(_1c63e004e_Eval* _self_, jule::Ptr<_1c62d2b01_FnIns>* _39640_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1acd9e175:;
			{
				jule::Ptr<_1c6327a58_scopeChecker> _39921_sc = _1c632add0_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1c6327a58_scopeChecker>(0));;
				if ((!(_1acda05d8_Exist((*((*(_39921_sc))._field_owner))._field_Refers.ptr(), (*(_39640_ref)))))) {
					_1c62d6a8e_Push((*((*(_39921_sc))._field_owner))._field_Refers.ptr(), jule::Any((*(_39640_ref)), &__jule_any_type7));
				};
			}
		}
		else {
			_case_begin_1acd9db03:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*((*(_self_))._field_owner))._field_Scope == nullptr)) && (!(_1acda05d8_Exist((*((*(_self_))._field_owner))._field_Refers.ptr(), (*(_39640_ref))))))) {
					_1c62d6a8e_Push((*((*(_self_))._field_owner))._field_Refers.ptr(), jule::Any((*(_39640_ref)), &__jule_any_type7));
				};
			}
		}
		_match_end_1acd9da9d:;
	};
}

inline void _1acdb4e8d_pushReference(_1c63e004e_Eval* _self_, jule::Ptr<_1c6389da6_Var>* _39640_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1acdb6940:;
			{
				jule::Ptr<_1c6327a58_scopeChecker> _39921_sc = _1c632add0_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1c6327a58_scopeChecker>(0));;
				if ((!(_1acdb7da3_Exist((*((*(_39921_sc))._field_owner))._field_Refers.ptr(), (*(_39640_ref)))))) {
					_1c62d6a8e_Push((*((*(_39921_sc))._field_owner))._field_Refers.ptr(), jule::Any((*(_39640_ref)), &__jule_any_type8));
				};
			}
		}
		else {
			_case_begin_1acdb63bd:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*((*(_self_))._field_owner))._field_Scope == nullptr)) && (!(_1acdb7da3_Exist((*((*(_self_))._field_owner))._field_Refers.ptr(), (*(_39640_ref))))))) {
					_1c62d6a8e_Push((*((*(_self_))._field_owner))._field_Refers.ptr(), jule::Any((*(_39640_ref)), &__jule_any_type8));
				};
			}
		}
		_match_end_1acdb6368:;
	};
}

inline void _1ace7aa8c_pushReference(_1c63e004e_Eval* _self_, jule::Ptr<_1c62bcab9_StructIns>* _39640_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1ace7c583:;
			{
				jule::Ptr<_1c6327a58_scopeChecker> _39921_sc = _1c632add0_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1c6327a58_scopeChecker>(0));;
				if ((!(_1ace7d9e6_Exist((*((*(_39921_sc))._field_owner))._field_Refers.ptr(), (*(_39640_ref)))))) {
					_1c62d6a8e_Push((*((*(_39921_sc))._field_owner))._field_Refers.ptr(), jule::Any((*(_39640_ref)), &__jule_any_type9));
				};
			}
		}
		else {
			_case_begin_1ace7c011:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*((*(_self_))._field_owner))._field_Scope == nullptr)) && (!(_1ace7d9e6_Exist((*((*(_self_))._field_owner))._field_Refers.ptr(), (*(_39640_ref))))))) {
					_1c62d6a8e_Push((*((*(_self_))._field_owner))._field_Refers.ptr(), jule::Any((*(_39640_ref)), &__jule_any_type9));
				};
			}
		}
		_match_end_1ace7beab:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c63e3915__evalEnum(_1c63e004e_Eval* _self_, jule::Ptr<_1c62e5691_Enum> _41328_enm) {
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(_41328_enm, 3)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1c63dd35a_Data> _1c63e3d11_evalEnum(_1c63e004e_Eval* _self_, jule::Ptr<_1c62e5691_Enum> _42231_enm, jule::Ptr<_1c6283a3b_Token> _42243_errorToken) {
	if ((!(_1c636ad65_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_42231_enm))._field_Public, (*(_42231_enm))._field_Token)))) {
		_1c63e059e_pushErr(_self_, _42243_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_42231_enm))._field_Ident, &__jule_any_type4)}));
		_1c63e0912_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1c63e3915__evalEnum(_self_, _42231_enm);;
}



inline jule::Ptr<_1c63dd35a_Data> _1c63e4152__evalTypeEnum(_1c63e004e_Eval* _self_, jule::Ptr<_1c62e6d9b_TypeEnum> _43132_enm) {
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(_43132_enm, 4)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1c63dd35a_Data> _1c63e454d_evalTypeEnum(_1c63e004e_Eval* _self_, jule::Ptr<_1c62e6d9b_TypeEnum> _44035_enm, jule::Ptr<_1c6283a3b_Token> _44051_errorToken) {
	if ((!(_1c636ad65_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_44035_enm))._field_Public, (*(_44035_enm))._field_Token)))) {
		_1c63e059e_pushErr(_self_, _44051_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_44035_enm))._field_Ident, &__jule_any_type4)}));
		_1c63e0912_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1c63e4152__evalTypeEnum(_self_, _44035_enm);;
}



inline jule::Ptr<_1c63dd35a_Data> _1c63e488e__evalStruct(_1c63e004e_Eval* _self_, jule::Ptr<_1c62bcab9_StructIns> _44930_s) {
	jule::Ptr<_1c63dd35a_Data> _45017_d = jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(_44930_s, 0)}), ._field_Model=jule::Any(_44930_s, &__jule_any_type9), ._field_Decl=true, });;
	if ((((*(_44930_s))._field_Decl != nullptr) && (*((*(_44930_s))._field_Decl))._field_Binded)) {
		(*((*(_45017_d))._field_Kind))._field_BindIdent=(*((*(_44930_s))._field_Decl))._field_Ident;
	};
	return _45017_d;;
}



inline jule::Ptr<_1c63dd35a_Data> _1c63e4c8a_evalStruct(_1c63e004e_Eval* _self_, jule::Ptr<_1c62bcab9_StructIns> _46333_s, jule::Ptr<_1c6283a3b_Token> _46348_errorToken) {
	if ((!(_1c636ad65_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_46333_s))._field_Decl))._field_Public, (*((*(_46333_s))._field_Decl))._field_Token)))) {
		_1c63e059e_pushErr(_self_, _46348_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_46333_s))._field_Decl))._field_Ident, &__jule_any_type4)}));
		_1c63e0912_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1c63e543e_checkDeprecated(_self_, &((*((*(_46333_s))._field_Decl))._field_Directives), _46348_errorToken);
	return _1c63e488e__evalStruct(_self_, _46333_s);;
}



inline jule::Ptr<_1c63dd35a_Data> _1c63e50cb_evalFnIns(_1c63e004e_Eval* _self_, jule::Ptr<_1c62d2b01_FnIns> _47328_f) {
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(_47328_f, 1)}), ._field_Model=jule::Any(_47328_f, &__jule_any_type7), });;
}



inline void _1c63e543e_checkDeprecated(_1c63e004e_Eval* _self_, jule::Slice<jule::Ptr<_1c6298666_Directive>>* _48239_directives, jule::Ptr<_1c6283a3b_Token> _48270_tok) {
	if (_1c63e1094_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1c6298666_Directive> _48713_d = _1c6416938_findDirective(_48239_directives, jule::Str("deprecated", 10));;
	if ((_48713_d != nullptr)) {
		if (((*(_48713_d))._field_Args.len() == 0LL)) {
			_1c63e059e_pushErr(_self_, _48270_tok, jule::Str("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23), &__jule_any_type4)}));
		} else {
			_1c63e059e_pushErr(_self_, _48270_tok, jule::Str("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any((*((*(_48713_d))._field_Args[0LL]))._field_Kind, &__jule_any_type4)}));
		};
		_1c63e0912_pushSuggestion(_self_, jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c63e583a_evalFn(_1c63e004e_Eval* _self_, jule::Ptr<_1c62cebec_Fn> _49829_f, jule::Ptr<_1c6283a3b_Token> _49837_errorToken) {
	if ((!(_1c636ad65_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_49829_f))._field_Public, (*(_49829_f))._field_Token)))) {
		_1c63e059e_pushErr(_self_, _49837_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_49829_f))._field_Ident, &__jule_any_type4)}));
		_1c63e0912_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1c63e543e_checkDeprecated(_self_, &((*(_49829_f))._field_Directives), _49837_errorToken);
	jule::Ptr<_1c62d2b01_FnIns> _50717_ins = _1c62d145c_instance(_49829_f);;
	_1acd9c67e_pushReference(_self_, &(_50717_ins));
	return _1c63e50cb_evalFnIns(_self_, _50717_ins);;
}



inline void _1c63e5c58_pushIllegalCycleError(_1c63e004e_Eval* _self_, jule::Ptr<_1c6389da6_Var>* _51241_v1, jule::Ptr<_1c6389da6_Var>* _51252_v2, _2206c697e_StrBuilder* _51267_message) {
	;
	jule::Str _51413_refers_to = _22196922b_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*((*(_51241_v1))))._field_Ident, &__jule_any_type4),jule::Any((*((*(_51252_v2))))._field_Ident, &__jule_any_type4)}));;
	jule::Slice<jule::U8> _51513_buf = _2206d18bd_Buf(_51267_message);;
	_2206d0625_WriteStr(_51267_message, _2218bc547_Repeat(jule::Str(" ", 1), 7LL));
	_2206d0625_WriteStr(_51267_message, _51413_refers_to);
	_2206d08cd_WriteByte(_51267_message, '\n');
	_2206d036c_Write(_51267_message, _51513_buf);
}



inline jule::Bool _1c63e6154_checkCrossCycle(_1c63e004e_Eval* _self_, jule::Ptr<_1c6389da6_Var>* _52235_v, _2206c697e_StrBuilder* _52249_message) {
	{
		auto expr = &((*((*(_52235_v))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acda59b7:;
		if (it != expr_end) {
			jule::Ptr<_1c6389da6_Var> *_52316_d = it;
			{
				if (((*(_52316_d)) == (*(_self_))._field_owner)) {
					_1c63e5c58_pushIllegalCycleError(_self_, _52235_v, _52316_d, _52249_message);
					return false;;
				};
				if ((!(_1c63e6154_checkCrossCycle(_self_, _52316_d, _52249_message)))) {
					_1c63e5c58_pushIllegalCycleError(_self_, _52235_v, _52316_d, _52249_message);
					return false;;
				};
			}
			_iter_next_1acda59b7:;
			++it;
			goto _iter_begin_1acda59b7;
		}
		_iter_end_1acda59b7:;
	};
	return true;;
}



inline jule::Bool _1c63e6550_checkIllegalCycles(_1c63e004e_Eval* _self_, jule::Ptr<_1c6389da6_Var>* _53942_v, jule::Ptr<_1c6283a3b_Token> _53951_declToken) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*((*(_self_))._field_owner))._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_53942_v)))) {
		_1c63e059e_pushErr(_self_, (*((*(_self_))._field_owner))._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_owner))._field_Ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_2206c697e_StrBuilder _55217_message = static__2206c6c9d_New(32LL);;
	if ((!(_1c63e6154_checkCrossCycle(_self_, _53942_v, &(_55217_message))))) {
		jule::Str _55521_errMsg = _2206d0e1c_Str(&_55217_message);;
		_2206d111a_Clear(&_55217_message);
		_1c63e5c58_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _53942_v, &(_55217_message));
		_55521_errMsg+=_2206d0e1c_Str(&_55217_message);
		_1c63e059e_pushErr(_self_, _53951_declToken, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_55521_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{ jule::Slice<jule::Ptr<_1c6389da6_Var>> &__jule_push_dest = (*((*(_self_))._field_owner))._field_Depends; __jule_push_dest.push((*(_53942_v))); };
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1c63dd35a_Data> _1c63e694b_evalVar(_1c63e004e_Eval* _self_, jule::Ptr<_1c6389da6_Var> _56730_v, jule::Ptr<_1c6283a3b_Token> _56739_errorToken) {
	if ((!(_1c636ad65_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_56730_v))._field_Public, (*(_56730_v))._field_Token)))) {
		_1c63e059e_pushErr(_self_, _56739_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_56730_v))._field_Ident, &__jule_any_type4)}));
		_1c63e0912_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1c63e543e_checkDeprecated(_self_, &((*(_56730_v))._field_Directives), _56739_errorToken);
	if (((*(_56730_v))._field_Token == nullptr)) {
		goto _julec_label_1acdbeeba;
	};
	(*(_56730_v))._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1acdb0571:;
			{
				jule::Bool _58617_ok = _1c63e6550_checkIllegalCycles(_self_, &(_56730_v), _56739_errorToken);;
				if ((!(_58617_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1acdb05d7:;
			{
				if (((!((*(_56730_v))._field_Reference)) || _1c63e1094_isUnsafe(_self_))) {
					goto _match_end_1acdb051b;
				};
				jule::Ptr<_1c6327a58_scopeChecker> _59421_s = (*(_self_))._field_lookup.cast_ptr<_1c6327a58_scopeChecker>(0);;
				while ((((*(_59421_s))._field_owner == nullptr) && ((*(_59421_s))._field_parent != nullptr))) {
					{
						_59421_s=(*(_59421_s))._field_parent;
					}
				_iter_next_1acdb194b:;
				}
				_iter_end_1acdb194b:;;
				if (((((*(_59421_s))._field_owner != nullptr) && (*((*(_59421_s))._field_owner))._field_Anon) && ((*(_56730_v))._field_Scope != (*((*(_59421_s))._field_owner))._field_Scope))) {
					_1c63e059e_pushErr(_self_, _56739_errorToken, jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75), jule::Slice<jule::Any>::make({jule::Any((*(_56730_v))._field_Ident, &__jule_any_type4)}));
				};
			}
		}
		_match_end_1acdb051b:;
	};
	if (((*(_56730_v))._field_Scope == nullptr)) {
		_1acdb4e8d_pushReference(_self_, &(_56730_v));
	};
	if (((!((*(_56730_v))._field_Binded)) && (((*(_56730_v))._field_Value == nullptr) || ((*((*(_56730_v))._field_Value))._field_Data == nullptr)))) {
		if ((*(_56730_v))._field_Constant) {
			_1c6381908_checkVar((*(_self_))._field_s, &(_56730_v), jule::Trait<_1c643d058_Lookup>((*(_self_))._field_s, 3));
			if ((((*(_56730_v))._field_Value == nullptr) || ((*((*(_56730_v))._field_Value))._field_Data == nullptr))) {
				return nullptr;;
			};
		};
	};
	if ((((*(_56730_v))._field_Kind == nullptr) || ((*((*(_56730_v))._field_Kind))._field_Kind == nullptr))) {
		if (((*(_56730_v))._field_Scope != nullptr)) {
			return nullptr;;
		};
		_1c6381908_checkVar((*(_self_))._field_s, &(_56730_v), (*(_self_))._field_lookup);
		if ((((*(_56730_v))._field_Kind == nullptr) || ((*((*(_56730_v))._field_Kind))._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	_julec_label_1acdbeeba:;
	jule::Ptr<_1c63dd35a_Data> _63817_d = jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=(*((*(_56730_v))._field_Kind))._field_Kind, ._field_Mutable=(*(_56730_v))._field_Mutable, ._field_Reference=(*(_56730_v))._field_Reference, ._field_Lvalue=(!((*(_56730_v))._field_Constant)), ._field_Model=jule::Any(_56730_v, &__jule_any_type8), });;
	if ((((!((*(_56730_v))._field_Binded)) && _1c638a23b_IsInitialized(_56730_v.ptr())) && ((*((*(_56730_v))._field_Value))._field_Data != nullptr))) {
		(*(_63817_d))._field_IsRune=(*((*((*(_56730_v))._field_Value))._field_Data))._field_IsRune;
	};
	if (((*(_56730_v))._field_Constant && ((*((*((*(_56730_v))._field_Value))._field_Data))._field_Constant != nullptr))) {
		(*(_63817_d))._field_Constant=jule::new_ptr<_1dc260590_Const>((*((*((*((*(_56730_v))._field_Value))._field_Data))._field_Constant)));
		(*(_63817_d))._field_Model=jule::Any((*(_63817_d))._field_Constant, &__jule_any_type19);
		if (_1c638a758_untypedConstant(_56730_v.ptr())) {
			_1c63e1638_applyNumericPrefix(_self_, &(_63817_d));
			(*(_63817_d))._field_untyped=true;
		};
	};
	return _63817_d;;
}



inline jule::Ptr<_1c63dd35a_Data> _1c63e6d47_evalTypeAlias(_1c63e004e_Eval* _self_, jule::Ptr<_1c641c730_TypeAlias> _66236_ta, jule::Ptr<_1c6283a3b_Token> _66252_errorToken) {
	if ((!(_1c636ad65_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_66236_ta))._field_Public, (*(_66236_ta))._field_Token)))) {
		_1c63e059e_pushErr(_self_, _66252_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_66236_ta))._field_Ident, &__jule_any_type4)}));
		_1c63e0912_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_66236_ta))._field_Used=true;
	jule::Trait<_1c641d06b_Kind> _67117_kind = (*((*((*(_66236_ta))._field_Kind))._field_Kind))._field_Kind;;
	jule::Ptr<_1c63dd35a_Data> _67217_d = nullptr;;
	{
		auto &_match_expr{ _67117_kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1acdcb05e:;
			{
				_67217_d=_1c63e488e__evalStruct(_self_, _67117_kind.cast_ptr<_1c62bcab9_StructIns>(0));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1acdcad83:;
			{
				_67217_d=_1c63e3915__evalEnum(_self_, _67117_kind.cast_ptr<_1c62e5691_Enum>(3));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1acdc914a:;
			{
				_67217_d=_1c63e4152__evalTypeEnum(_self_, _67117_kind.cast_ptr<_1c62e6d9b_TypeEnum>(4));
			}
		}
		else {
			_case_begin_1acdc90d4:;
			{
				_67217_d=jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=(*((*((*(_66236_ta))._field_Kind))._field_Kind))._field_Kind}), ._field_Decl=true, });
				if ((*(_66236_ta))._field_Binded) {
					(*((*(_67217_d))._field_Kind))._field_BindIdent=(*(_66236_ta))._field_Ident;
				} else {
					(*((*(_67217_d))._field_Kind))._field_BindIdent=(*((*((*(_66236_ta))._field_Kind))._field_Kind))._field_BindIdent;
				};
				(*(_67217_d))._field_Model=jule::Any((*(_67217_d))._field_Kind, &__jule_any_type83);
			}
		}
		_match_end_1acdc907e:;
	};
	(*((*(_67217_d))._field_Kind))._field_Generic=(*(_66236_ta))._field_Generic;
	return _67217_d;;
}



inline jule::Ptr<_1c63dd35a_Data> _1c63e7243_evalDef(_1c63e004e_Eval* _self_, jule::Any* _69831_def, jule::Ptr<_1c6283a3b_Token> _69841_ident) {
	{
		auto &_match_expr{ (*(_69831_def)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1acdd440d:;
			{
				return _1c63e694b_evalVar(_self_, (*(_69831_def)).cast_ptr<_1c6389da6_Var>(&__jule_any_type8), _69841_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1acdd4474:;
			{
				return _1c63e3d11_evalEnum(_self_, (*(_69831_def)).cast_ptr<_1c62e5691_Enum>(&__jule_any_type67), _69841_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1acdd44da:;
			{
				return _1c63e454d_evalTypeEnum(_self_, (*(_69831_def)).cast_ptr<_1c62e6d9b_TypeEnum>(&__jule_any_type68), _69841_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1acdd4551:;
			{
				return _1c63e4c8a_evalStruct(_self_, _1c62ba29d_instance((*(_69831_def)).cast_ptr<_1c62b9d3b_Struct>(&__jule_any_type65)), _69841_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1acdd45b7:;
			{
				jule::Ptr<_1c62cebec_Fn> _70921_f = (*(_69831_def)).cast_ptr<_1c62cebec_Fn>(&__jule_any_type64);;
				if ((!(*(_70921_f))._field_Ident.equal("init", 4))) {
					return _1c63e583a_evalFn(_self_, _70921_f, _69841_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1acdd462d:;
			{
				return _1c63e50cb_evalFnIns(_self_, (*(_69831_def)).cast_ptr<_1c62d2b01_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1acdd4694:;
			{
				return _1c63e6d47_evalTypeAlias(_self_, (*(_69831_def)).cast_ptr<_1c641c730_TypeAlias>(&__jule_any_type66), _69841_ident);;
			}
		}
		_match_end_1acdd43a8:;
	};
	_1c63e059e_pushErr(_self_, _69841_ident, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_69841_ident))._field_Kind, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1c63dd35a_Data> _1c63e7584_evalIdent(_1c63e004e_Eval* _self_, jule::Ptr<_1c629eea8_IdentExpr> _72228_ident) {
	jule::Any _72317_def = _1c63e331b_getDef(_self_, &((*(_72228_ident))._field_Ident), (*(_72228_ident))._field_Binded);;
	return _1c63e7243_evalDef(_self_, &(_72317_def), (*(_72228_ident))._field_Token);;
}



inline jule::Ptr<_1c63dd35a_Data> _1c63e78c5_evalUnary(jule::Ptr<_1c63e004e_Eval> _self_, jule::Ptr<_1c62a063a_UnaryExpr> _72733_u) {
	_1c640d4e0_unaryEval _72817_unary = static__1c640d930_new(_self_);;
	return _1c640ed60_eval(&_72817_unary, _72733_u);;
}



inline jule::Ptr<_1c63dd35a_Data> _1c63e7c16_evalVariadic(jule::Ptr<_1c63e004e_Eval> _self_, jule::Ptr<_1c62a0a14_VariadicExpr> _73236_v) {
	if (((*(_73236_v))._field_Expr == nullptr)) {
		_1c63e059e_pushErr(_self_.ptr(), (*(_73236_v))._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c641d522_TypeKind> _73817_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_73817_prefix;
	});;
	jule::Ptr<_1c63dd35a_Data> _74217_d = _1c640d028_evalExpr(_self_, (*(_73236_v))._field_Expr);;
	if ((_74217_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c64208dc_Variadicable((*(_74217_d))._field_Kind.ptr())))) {
		_1c63e059e_pushErr(_self_.ptr(), (*(_73236_v))._field_Token, jule::Str("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_74217_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c642a5ea_Slc> _75217_slc = _1c6421bc9_Slc((*(_74217_d))._field_Kind.ptr());;
	(*(_74217_d))._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_BindIdent=(*((*(_75217_slc))._field_Elem))._field_BindIdent, ._field_Generic=(*((*(_75217_slc))._field_Elem))._field_Generic, ._field_Variadic=true, ._field_Kind=(*((*(_75217_slc))._field_Elem))._field_Kind});
	return _74217_d;;
}



inline jule::Ptr<_1c63dd35a_Data> _1c63e8057_evalUnsafe(jule::Ptr<_1c63e004e_Eval> _self_, jule::Ptr<_1c629ea02_UnsafeExpr> _76234_u) {
	jule::Bool _76313_unsafety = (*(_self_))._field_unsafety;;
	(*(_self_))._field_unsafety=true;
	jule::Ptr<_1c63dd35a_Data> _76517_d = _1c640d028_evalExpr(_self_, (*(_76234_u))._field_Expr);;
	(*(_self_))._field_unsafety=_76313_unsafety;
	return _76517_d;;
}



inline jule::Ptr<_1c63dd35a_Data> _1c63e8398_evalArr(jule::Ptr<_1c63e004e_Eval> _self_, jule::Ptr<_1c62a4aa1_SliceExpr> _77031_s) {
	jule::Ptr<_1c642c91b_Arr> _77217_pt = _1c6421943_Arr((*(_self_))._field_prefix.ptr());;
	jule::Ptr<_1c642c91b_Arr> _77417_arr = jule::new_ptr<_1c642c91b_Arr>(_1c642c91b_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=(*(_77217_pt))._field_Elem});;
	jule::Bool _78017_filled = false;;
	if (((*(_77031_s))._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ (*((*(_77031_s))._field_Exprs[1LL]))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type75) {
				_case_begin_1acde5bd3:;
				{
					if (((*((*((*(_77031_s))._field_Exprs[1LL]))._field_Kind.cast_ptr<_1c62a0a14_VariadicExpr>(&__jule_any_type75)))._field_Expr != nullptr)) {
						goto _match_end_1acde5b39;
					};
					if ((*(_77217_pt))._field_Auto) {
						_1c63e059e_pushErr(_self_.ptr(), (*(_77031_s))._field_Token, jule::Str("auto-sized arrays cannot filled", 31), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_78017_filled=true;
					(*(_77031_s))._field_Exprs=(*(_77031_s))._field_Exprs.slice(0LL, 1LL);
				}
			}
			_match_end_1acde5b39:;
		};
	};
	(*(_77417_arr))._field_N=static_cast<jule::I64>((*(_77031_s))._field_Exprs.len());
	if ((!((*(_77217_pt))._field_Auto))) {
		if (((*(_77417_arr))._field_N > (*(_77217_pt))._field_N)) {
			_1c63e059e_pushErr(_self_.ptr(), (*(_77031_s))._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else if (((*(_77417_arr))._field_N < (*(_77217_pt))._field_N)) {
			(*(_77417_arr))._field_N=(*(_77217_pt))._field_N;
		};
	};
	jule::Ptr<_1c62c73a9_ArrayExprModel> _80917_model = jule::new_ptr<_1c62c73a9_ArrayExprModel>(_1c62c73a9_ArrayExprModel{._field_Kind=_77417_arr, });;
	if (_78017_filled) {
		(*(_80917_model))._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		(*(_80917_model))._field_Elems=jule::Slice<jule::Any>::alloc(0LL, (*(_77031_s))._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_1c641d522_TypeKind> _81817_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=(*(_77417_arr))._field_Elem;
	{
		auto expr = &((*(_77031_s))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acdeb007:;
		if (it != expr_end) {
			jule::Ptr<_1c629d57d_Expr> _82021_elem = *it;
			{
				jule::Ptr<_1c63dd35a_Data> _82121_d = _1c640d028_evalExpr(_self_, _82021_elem);;
				if ((_82121_d == nullptr)) {
					goto _iter_next_1acdeb007;
				};
				_1c6373114_checkAssignType((*(_self_))._field_s, false, &((*(_77417_arr))._field_Elem), &(_82121_d), (*(_77031_s))._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = (*(_80917_model))._field_Elems; __jule_push_dest.push((*(_82121_d))._field_Model); };
			}
			_iter_next_1acdeb007:;
			++it;
			goto _iter_begin_1acdeb007;
		}
		_iter_end_1acdeb007:;
	};
	(*(_self_))._field_prefix=_81817_prefix;
	if (_78017_filled) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_80917_model))._field_Elems; __jule_push_dest.push(nullptr); };
	};
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(_77417_arr, 25)}), ._field_Mutable=true, ._field_Model=jule::Any(_80917_model, &__jule_any_type84), });;
}



inline jule::Ptr<_1c63dd35a_Data> _1c63e884e_evalExpSlc(jule::Ptr<_1c63e004e_Eval> _self_, jule::Ptr<_1c62a4aa1_SliceExpr> _84434_s, jule::Ptr<_1c641d522_TypeKind> _84453_t, jule::Any _84471_first) {
	jule::Ptr<_1c642a5ea_Slc> _84517_slc = jule::new_ptr<_1c642a5ea_Slc>(_1c642a5ea_Slc{._field_Elem=_84453_t});;
	jule::I64 _84917_i = 0LL;;
	jule::Ptr<_1c62c4362_SliceExprModel> _85017_model = jule::new_ptr<_1c62c4362_SliceExprModel>(_1c62c4362_SliceExprModel{._field_ElemKind=_84453_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, (*(_84434_s))._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_84471_first != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_85017_model))._field_Elems; __jule_push_dest.push(_84471_first); };
		_84917_i=1LL;
	};
	jule::Ptr<_1c641d522_TypeKind> _85917_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=(*(_84517_slc))._field_Elem;
	{
		auto expr = (*(_84434_s))._field_Exprs.slice(_84917_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ace03a48:;
		if (it != expr_end) {
			jule::Ptr<_1c629d57d_Expr> _86121_elem = *it;
			{
				jule::Ptr<_1c63dd35a_Data> _86221_d = _1c640d028_evalExpr(_self_, _86121_elem);;
				if ((_86221_d == nullptr)) {
					goto _iter_next_1ace03a48;
				};
				_1c6373114_checkAssignType((*(_self_))._field_s, false, &((*(_84517_slc))._field_Elem), &(_86221_d), (*(_84434_s))._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = (*(_85017_model))._field_Elems; __jule_push_dest.push((*(_86221_d))._field_Model); };
			}
			_iter_next_1ace03a48:;
			++it;
			goto _iter_begin_1ace03a48;
		}
		_iter_end_1ace03a48:;
	};
	(*(_self_))._field_prefix=_85917_prefix;
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(_84517_slc, 22)}), ._field_Mutable=true, ._field_Model=jule::Any(_85017_model, &__jule_any_type76), });;
}



inline jule::Ptr<_1c63dd35a_Data> _1c63e8b90_evalSliceExpr(jule::Ptr<_1c63e004e_Eval> _self_, jule::Ptr<_1c62a4aa1_SliceExpr> _88037_s) {
	if (((*(_self_))._field_prefix != nullptr)) {
		{
			
			if ((_1c6421943_Arr((*(_self_))._field_prefix.ptr()) != nullptr)) {
				_case_begin_1ace07c7d:;
				{
					return _1c63e8398_evalArr(_self_, _88037_s);;
				}
			}
			else if ((_1c6421bc9_Slc((*(_self_))._field_prefix.ptr()) != nullptr)) {
				_case_begin_1ace07d05:;
				{
					jule::Ptr<_1c642a5ea_Slc> _88625_pt = _1c6421bc9_Slc((*(_self_))._field_prefix.ptr());;
					return _1c63e884e_evalExpSlc(_self_, _88037_s, (*(_88625_pt))._field_Elem, nullptr);;
				}
			}
			_match_end_1ace07b6d:;
		};
	};
	jule::Ptr<_1c641d522_TypeKind> _89117_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	if (((*(_88037_s))._field_Exprs.len() == 0LL)) {
		_1c63e059e_pushErr(_self_.ptr(), (*(_88037_s))._field_Token, jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c63dd35a_Data> _89917_firstElem = _1c640d028_evalExpr(_self_, (*(_88037_s))._field_Exprs[0LL]);;
	if ((_89917_firstElem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c63dd35a_Data> _90417_d = _1c63e884e_evalExpSlc(_self_, _88037_s, (*(_89917_firstElem))._field_Kind, (*(_89917_firstElem))._field_Model);;
	(*(_self_))._field_prefix=_89117_prefix;
	return _90417_d;;
}



inline void _1c63e9003_checkIntegerIndexingByData(_1c63e004e_Eval* _self_, jule::Ptr<_1c63dd35a_Data>* _91050_d, jule::Ptr<_1c6283a3b_Token> _91060_token) {
	jule::Str _91113_err_key = _1c6419122_checkDataForIntegerIndexing(_91050_d);;
	{
		auto &_match_expr{ _91113_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1ace0e8de:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_1ace0dde9:;
			{
				_1c63e059e_pushErr(_self_, _91060_token, _91113_err_key, jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*((*(_91050_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			}
		}
		else {
			_case_begin_1ace0e306:;
			{
				_1c63e059e_pushErr(_self_, _91060_token, _91113_err_key, jule::Slice<jule::Any>());
			}
		}
		_match_end_1ace0e2a1:;
	};
}



inline void _1c63e9421_indexingPtr(_1c63e004e_Eval* _self_, jule::Ptr<_1c63dd35a_Data>* _92235_d, jule::Ptr<_1c63dd35a_Data>* _92250_index, jule::Ptr<_1c62a5541_IndexingExpr>* _92265_i) {
	_1c63e9003_checkIntegerIndexingByData(_self_, _92250_index, (*((*(_92265_i))))._field_Token);
	(*((*(_92235_d))))._field_Lvalue=true;
	jule::Ptr<_1c642d3de_Ptr> _92617_ptr = _1c6421190_Ptr((*((*(_92235_d))))._field_Kind.ptr());;
	{
		
		if (_1c642de28_IsUnsafe(_92617_ptr.ptr())) {
			_case_begin_1ace120ea:;
			{
				_1c63e059e_pushErr(_self_, (*((*(_92265_i))))._field_Token, jule::Str("unsafe pointers are not supports indexing", 41), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1c63e1094_isUnsafe(_self_)))) {
			_case_begin_1ace12172:;
			{
				_1c63e059e_pushErr(_self_, (*((*(_92265_i))))._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ace12095:;
	};
	(*((*(_92235_d))))._field_Kind=(*(_92617_ptr))._field_Elem;
}



inline void _1c63e983e_indexingArr(_1c63e004e_Eval* _self_, jule::Ptr<_1c63dd35a_Data>* _93835_d, jule::Ptr<_1c63dd35a_Data>* _93850_index, jule::Ptr<_1c62a5541_IndexingExpr>* _93865_i) {
	jule::Ptr<_1c642c91b_Arr> _93917_arr = _1c6421943_Arr((*((*(_93835_d))))._field_Kind.ptr());;
	(*((*(_93835_d))))._field_Kind=(*(_93917_arr))._field_Elem;
	_1c63e9003_checkIntegerIndexingByData(_self_, _93850_index, (*((*(_93865_i))))._field_Token);
	(*((*(_93835_d))))._field_Lvalue=true;
	if ((_1c63ddc2e_IsConst((*(_93850_index)).ptr()) && (_1dc263252_AsF64((*((*(_93850_index))))._field_Constant.ptr()) >= static_cast<jule::F64>((*(_93917_arr))._field_N)))) {
		_1c63e059e_pushErr(_self_, (*((*(_93865_i))))._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
	};
}



inline void _1c63e9c5c_indexingSlc(_1c63e004e_Eval* _self_, jule::Ptr<_1c63dd35a_Data>* _94835_d, jule::Ptr<_1c63dd35a_Data>* _94850_index, jule::Ptr<_1c62a5541_IndexingExpr>* _94865_i) {
	jule::Ptr<_1c642a5ea_Slc> _94917_slc = _1c6421bc9_Slc((*((*(_94835_d))))._field_Kind.ptr());;
	(*((*(_94835_d))))._field_Kind=(*(_94917_slc))._field_Elem;
	_1c63e9003_checkIntegerIndexingByData(_self_, _94850_index, (*((*(_94865_i))))._field_Token);
	(*((*(_94835_d))))._field_Lvalue=true;
	if ((!(_1c63ddc2e_IsConst((*(_94850_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_94835_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1ace19498:;
			{
				jule::Ptr<_1c62c4362_SliceExprModel> _96021_m = (*((*(_94835_d))))._field_Model.cast_ptr<_1c62c4362_SliceExprModel>(&__jule_any_type76);;
				jule::F64 _96117_indx = _1dc263252_AsF64((*((*(_94850_index))))._field_Constant.ptr());;
				if ((_96117_indx >= static_cast<jule::F64>((*(_96021_m))._field_Elems.len()))) {
					_1c63e059e_pushErr(_self_, (*((*(_94865_i))))._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
				} else {
					(*((*(_94835_d))))._field_Model=(*(_96021_m))._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_96117_indx))];
					(*((*(_94835_d))))._field_Decl=true;
				};
			}
		}
		_match_end_1ace19443:;
	};
}



inline void _1c63ea17a_indexingMap(_1c63e004e_Eval* _self_, jule::Ptr<_1c63dd35a_Data>* _97135_d, jule::Ptr<_1c63dd35a_Data>* _97150_index, jule::Ptr<_1c62a5541_IndexingExpr>* _97169_i) {
	(*((*(_97135_d))))._field_Lvalue=true;
	if (((*(_97150_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1c642bc8e_Map> _97617_m = _1c6422713_Map((*((*(_97135_d))))._field_Kind.ptr());;
	_1c63c6e26_assignTypeChecker _97717_atc = _1c63c6e26_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_97617_m))._field_Key, ._field_d=(*(_97150_index)), ._field_errorToken=(*((*(_97169_i))))._field_Token};;
	_1c63c818b_check(&_97717_atc);
	(*((*(_97135_d))))._field_Kind=(*(_97617_m))._field_Val;
}



inline void _1c63ea598_indexingStr(_1c63e004e_Eval* _self_, jule::Ptr<_1c63dd35a_Data>* _98735_d, jule::Ptr<_1c63dd35a_Data>* _98750_index, jule::Ptr<_1c62a5541_IndexingExpr>* _98765_i) {
	(*((*(_98735_d))))._field_Kind=_1c650ae5b_primU8;
	(*((*(_98735_d))))._field_Mutable=false;
	(*((*(_98735_d))))._field_Lvalue=true;
	if (((*(_98750_index)) == nullptr)) {
		return;;
	};
	_1c63e9003_checkIntegerIndexingByData(_self_, _98750_index, (*((*(_98765_i))))._field_Token);
	if ((!(_1c63ddc2e_IsConst((*(_98750_index)).ptr())))) {
		(*((*(_98735_d))))._field_Constant=nullptr;
		return;;
	};
	if (_1c63ddc2e_IsConst((*(_98735_d)).ptr())) {
		jule::Ptr<_1c6283a3b_Token> _100417_errorToken = (*((*(_98765_i))))._field_Token;;
		jule::I64 _100517_j = _1dc262c35_AsI64((*((*(_98750_index))))._field_Constant.ptr());;
		jule::Str _100617_s = _1dc262718_ReadStr((*((*(_98735_d))))._field_Constant.ptr());;
		if ((static_cast<jule::I64>(_100517_j) >= _100617_s.len())) {
			_1c63e059e_pushErr(_self_, _100417_errorToken, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else {
			_1dc2637b3_SetU64((*((*(_98735_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_100617_s[_100517_j])));
		};
	};
}



inline void _1c63ea9b6_toIndexing(_1c63e004e_Eval* _self_, jule::Ptr<_1c63dd35a_Data>* _101534_d, jule::Ptr<_1c63dd35a_Data>* _101549_index, jule::Ptr<_1c62a5541_IndexingExpr>* _101568_i) {
	{
		
		if ((_1c6421190_Ptr((*((*(_101534_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ace2573a:;
			{
				_1c63e9421_indexingPtr(_self_, _101534_d, _101549_index, _101568_i);
				return;;
			}
		}
		else if ((_1c6421943_Arr((*((*(_101534_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ace257b2:;
			{
				_1c63e983e_indexingArr(_self_, _101534_d, _101549_index, _101568_i);
				return;;
			}
		}
		else if ((_1c6421bc9_Slc((*((*(_101534_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ace25839:;
			{
				_1c63e9c5c_indexingSlc(_self_, _101534_d, _101549_index, _101568_i);
				return;;
			}
		}
		else if ((_1c6422713_Map((*((*(_101534_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ace258b1:;
			{
				_1c63ea17a_indexingMap(_self_, _101534_d, _101549_index, _101568_i);
				return;;
			}
		}
		else if ((_1c6420b73_Prim((*((*(_101534_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ace25938:;
			{
				jule::Ptr<_1c64260eb_Prim> _103017_prim = _1c6420b73_Prim((*((*(_101534_d))))._field_Kind.ptr());;
				{
					
					if (_1c6429583_IsStr(_103017_prim.ptr())) {
						_case_begin_1ace29c5b:;
						{
							_1c63ea598_indexingStr(_self_, _101534_d, _101549_index, _101568_i);
							return;;
						}
					}
					_match_end_1ace29bc3:;
				};
			}
		}
		_match_end_1ace255e7:;
	};
	_1c63e059e_pushErr(_self_, (*((*(_101568_i))))._field_Token, jule::Str("type @ is not support indexing", 30), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*((*(_101534_d))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Bool _1c63eae6c_pushGenericsFromExprSubIdent(jule::Ptr<_1c63e004e_Eval> _self_, jule::Ptr<_1c62a1691_SubIdentExpr>* _104053_sexpr, jule::Slice<jule::Ptr<_1c6299249_TypeDecl>>* _104114_generics, jule::Ptr<_1c629d57d_Expr>* _104142_expr) {
	jule::Ptr<_1c6299b51_SubIdentTypeDecl> _104217_t = jule::new_ptr<_1c6299b51_SubIdentTypeDecl>();;
	if ((!(_1c641a013_pushSubIdentFromExpr(jule::Any((*(_104053_sexpr)), &__jule_any_type85), &(_104217_t))))) {
		_1c63e059e_pushErr(_self_.ptr(), (*((*(_104142_expr))))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_1c6299249_TypeDecl>> &__jule_push_dest = (*(_104114_generics)); __jule_push_dest.push(jule::new_ptr<_1c6299249_TypeDecl>(_1c6299249_TypeDecl{._field_Kind=jule::Any(_104217_t, &__jule_any_type86)})); };
	return true;;
}



inline jule::Bool _1c63eb368_pushGenericsFromData(jule::Ptr<_1c63e004e_Eval> _self_, jule::Slice<jule::Ptr<_1c6299249_TypeDecl>>* _105145_generics, jule::Ptr<_1c629d57d_Expr>* _105173_expr) {
	{
		auto &_match_expr{ (*((*(_105173_expr))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1ace2d2e2:;
			{
				jule::Ptr<_1c62a063a_UnaryExpr> _105421_u = (*((*(_105173_expr))))._field_Kind.cast_ptr<_1c62a063a_UnaryExpr>(&__jule_any_type87);;
				{
					auto &_match_expr{ (*((*(_105421_u))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(62LLU)) {
						_case_begin_1ace30080:;
						{
							jule::Ptr<_1c629ac73_PtrTypeDecl> _105725_kind = jule::new_ptr<_1c629ac73_PtrTypeDecl>();;
							jule::Slice<jule::Ptr<_1c6299249_TypeDecl>> _105825__generics = jule::Slice<jule::Ptr<_1c6299249_TypeDecl>>::alloc(0LL, 1LL);;
							_1c63eb368_pushGenericsFromData(_self_, &(_105825__generics), &((*(_105421_u))._field_Expr));
							(*(_105725_kind))._field_Elem=_105825__generics[0LL];
							{ jule::Slice<jule::Ptr<_1c6299249_TypeDecl>> &__jule_push_dest = (*(_105145_generics)); __jule_push_dest.push(jule::new_ptr<_1c6299249_TypeDecl>(_1c6299249_TypeDecl{._field_Token=(*((*(_105173_expr))))._field_Token, ._field_Kind=jule::Any(_105725_kind, &__jule_any_type71)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(65LLU)) {
						_case_begin_1ace311e6:;
						{
							jule::Ptr<_1c629a2e4_SptrTypeDecl> _106625_kind = jule::new_ptr<_1c629a2e4_SptrTypeDecl>();;
							jule::Slice<jule::Ptr<_1c6299249_TypeDecl>> _106725__generics = jule::Slice<jule::Ptr<_1c6299249_TypeDecl>>::alloc(0LL, 1LL);;
							_1c63eb368_pushGenericsFromData(_self_, &(_106725__generics), &((*(_105421_u))._field_Expr));
							(*(_106625_kind))._field_Elem=_106725__generics[0LL];
							{ jule::Slice<jule::Ptr<_1c6299249_TypeDecl>> &__jule_push_dest = (*(_105145_generics)); __jule_push_dest.push(jule::new_ptr<_1c6299249_TypeDecl>(_1c6299249_TypeDecl{._field_Token=(*((*(_105173_expr))))._field_Token, ._field_Kind=jule::Any(_106625_kind, &__jule_any_type72)})); };
						}
					}
					else {
						_case_begin_1ace305be:;
						{
							_1c63e059e_pushErr(_self_.ptr(), (*(_105421_u))._field_Op, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1ace30569:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1ace2e26b:;
			{
				{ jule::Slice<jule::Ptr<_1c6299249_TypeDecl>> &__jule_push_dest = (*(_105145_generics)); __jule_push_dest.push((*((*(_105173_expr))))._field_Kind.cast_ptr<_1c6299249_TypeDecl>(&__jule_any_type88)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1ace2e2d2:;
			{
				jule::Ptr<_1c62a1691_SubIdentExpr> _108121_sexpr = (*((*(_105173_expr))))._field_Kind.cast_ptr<_1c62a1691_SubIdentExpr>(&__jule_any_type85);;
				return _1c63eae6c_pushGenericsFromExprSubIdent(_self_, &(_108121_sexpr), _105145_generics, _105173_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ace2e348:;
			{
				jule::Ptr<_1c629eea8_IdentExpr> _108421_ident = (*((*(_105173_expr))))._field_Kind.cast_ptr<_1c629eea8_IdentExpr>(&__jule_any_type79);;
				{ jule::Slice<jule::Ptr<_1c6299249_TypeDecl>> &__jule_push_dest = (*(_105145_generics)); __jule_push_dest.push(jule::new_ptr<_1c6299249_TypeDecl>(_1c6299249_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1c6299854_IdentTypeDecl>(_1c6299854_IdentTypeDecl{._field_Token=(*(_108421_ident))._field_Token, ._field_Ident=(*(_108421_ident))._field_Ident, ._field_Binded=(*(_108421_ident))._field_Binded, }), &__jule_any_type20)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1ace2d6aa:;
			{
				{
					auto expr = &((*((*((*(_105173_expr))))._field_Kind.cast_ptr<_1c629e24e_TupleExpr>(&__jule_any_type80)))._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ace385e9:;
					if (it != expr_end) {
						jule::Ptr<_1c629d57d_Expr> _109325_texpr = *it;
						{
							if ((!(_1c63eb368_pushGenericsFromData(_self_, _105145_generics, &(_109325_texpr))))) {
								return false;;
							};
						}
						_iter_next_1ace385e9:;
						++it;
						goto _iter_begin_1ace385e9;
					}
					_iter_end_1ace385e9:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1ace2d721:;
			{
				jule::Ptr<_1c62a12b7_NsSelectionExpr> _109921_ns = (*((*(_105173_expr))))._field_Kind.cast_ptr<_1c62a12b7_NsSelectionExpr>(&__jule_any_type89);;
				jule::Ptr<_1c6299854_IdentTypeDecl> _110021_decl = jule::new_ptr<_1c6299854_IdentTypeDecl>(_1c6299854_IdentTypeDecl{._field_Token=(*(_109921_ns))._field_Ident, ._field_Ident=(*((*(_109921_ns))._field_Ident))._field_Kind, });;
				{ jule::Slice<jule::Ptr<_1c6299249_TypeDecl>> &__jule_push_dest = (*(_105145_generics)); __jule_push_dest.push(jule::new_ptr<_1c6299249_TypeDecl>(_1c6299249_TypeDecl{._field_Token=(*(_110021_decl))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1c6299ee7_NamespaceTypeDecl>(_1c6299ee7_NamespaceTypeDecl{._field_Idents=(*(_109921_ns))._field_Ns, ._field_Kind=jule::new_ptr<_1c6299249_TypeDecl>(_1c6299249_TypeDecl{._field_Token=(*(_110021_decl))._field_Token, ._field_Kind=jule::Any(_110021_decl, &__jule_any_type20)})}), &__jule_any_type90)})); };
			}
		}
		else {
			_case_begin_1ace2d644:;
			{
				_1c63e059e_pushErr(_self_.ptr(), (*((*(_105173_expr))))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1ace2d5de:;
	};
	return true;;
}



inline void _1c63eb6cb_evalIdentDeclFromIndexing(jule::Ptr<_1c63e004e_Eval> _self_, jule::Ptr<_1c63dd35a_Data>* _112150_d, jule::Ptr<_1c62a5541_IndexingExpr>* _112165_i) {
	jule::Ptr<_1c62bcab9_StructIns> _112217_s = _1c64221e6_Struct((*((*(_112150_d))))._field_Kind.ptr());;
	if ((_112217_s == nullptr)) {
		_1c63e059e_pushErr(_self_.ptr(), (*((*((*(_112165_i))))._field_Expr))._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*((*(_112150_d))))._field_Kind.ptr()), &__jule_any_type4)}));
		(*(_112150_d))=nullptr;
		return;;
	};
	jule::Ptr<_1c6299854_IdentTypeDecl> _112917_decl = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_112165_i))))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ace3e3d0:;
			{
				jule::Ptr<_1c629eea8_IdentExpr> _113221_expr = (*((*((*(_112165_i))))._field_Expr))._field_Kind.cast_ptr<_1c629eea8_IdentExpr>(&__jule_any_type79);;
				_112917_decl=jule::new_ptr<_1c6299854_IdentTypeDecl>(_1c6299854_IdentTypeDecl{._field_Token=(*(_113221_expr))._field_Token, ._field_Ident=(*(_113221_expr))._field_Ident, ._field_Binded=(*(_113221_expr))._field_Binded, });
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1ace40656:;
			{
				jule::Ptr<_1c62a12b7_NsSelectionExpr> _113921_expr = (*((*((*(_112165_i))))._field_Expr))._field_Kind.cast_ptr<_1c62a12b7_NsSelectionExpr>(&__jule_any_type89);;
				_112917_decl=jule::new_ptr<_1c6299854_IdentTypeDecl>(_1c6299854_IdentTypeDecl{._field_Token=(*(_113921_expr))._field_Ident, ._field_Ident=(*((*(_113921_expr))._field_Ident))._field_Kind, });
			}
		}
		else {
			_case_begin_1ace3e853:;
			{
				_1c63e059e_pushErr(_self_.ptr(), (*((*(_112165_i))))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				(*(_112150_d))=nullptr;
				return;;
			}
		}
		_match_end_1ace3e7ed:;
	};
	if ((!(_1c63eb368_pushGenericsFromData(_self_, &((*(_112917_decl))._field_Generics), &((*((*(_112165_i))))._field_Index))))) {
		(*(_112150_d))=nullptr;
		return;;
	};
	_112217_s=({ auto _wrap_copy = _1c64031c7_typeChecker(_self_.ptr()); _1c6434329_fromStruct(&_wrap_copy, &(_112917_decl), &((*(_112217_s))._field_Decl)); });
	if ((_112217_s == nullptr)) {
		(*(_112150_d))=nullptr;
		return;;
	};
	(*((*((*(_112150_d))))._field_Kind))._field_Kind=jule::Trait<_1c641d06b_Kind>(_112217_s, 0);
}



inline jule::Bool _1c63ebb82_checkGenericFn(jule::Ptr<_1c63e004e_Eval> _self_, jule::Ptr<_1c62d2b01_FnIns>* _116439_f, jule::Ptr<_1c6283a3b_Token>* _116455_et, jule::Any* _116472_model) {
	jule::Bool _116513_ok = _1c6375710_reloadFnInsTypes((*(_self_))._field_s, (*(_116439_f)));;
	(*((*(_116439_f))))._field_reloaded=true;
	if ((!(_116513_ok))) {
		return false;;
	};
	jule::Ptr<_1c62d2b01_FnIns> _117017_existInstance = _1c62d176a_appendInstance((*((*(_116439_f))))._field_Decl.ptr(), _116439_f);;
	if ((!(_1c6374764_checkConstraintsFn((*(_self_))._field_s, _116439_f, _116455_et, _117017_existInstance)))) {
		return false;;
	};
	if ((_117017_existInstance != nullptr)) {
		(*(_116439_f))=_117017_existInstance;
		_1c6419b8e_updateModelToGenericIns(_116472_model, &(_117017_existInstance));
	} else {
		_1c6384a60_checkFnInsCaller((*(_self_))._field_s, _116439_f, (*(_116455_et)));
	};
	return true;;
}



inline void _1c63ebee5_evalFnGenericFromIndexing(jule::Ptr<_1c63e004e_Eval> _self_, jule::Ptr<_1c63dd35a_Data>* _118950_d, jule::Ptr<_1c62a5541_IndexingExpr>* _118965_i) {
	jule::Slice<jule::Ptr<_1c6299249_TypeDecl>> _119017_generics = jule::Slice<jule::Ptr<_1c6299249_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_1c63eb368_pushGenericsFromData(_self_, &(_119017_generics), &((*((*(_118965_i))))._field_Index))))) {
		(*(_118950_d))=nullptr;
		return;;
	};
	jule::Ptr<_1c62d2b01_FnIns> _119617_f = _1c6421e60_Fn((*((*(_118950_d))))._field_Kind.ptr());;
	jule::I64 _119717_genericsLen = 0LL;;
	if (((*(_119617_f))._field_Decl != nullptr)) {
		_119717_genericsLen=static_cast<jule::I64>((*((*(_119617_f))._field_Decl))._field_Generics.len());
	};
	if ((!(_1c636bb35_checkGenericQuantity((*(_self_))._field_s.ptr(), _119717_genericsLen, static_cast<jule::I64>(_119017_generics.len()), (*((*((*(_118965_i))))._field_Expr))._field_Token)))) {
		(*(_118950_d))=nullptr;
		return;;
	};
	(*(_119617_f))._field_Generics=jule::Slice<jule::Ptr<_1c641bb3b_InsGeneric>>::alloc(0LL, (*((*(_119617_f))._field_Decl))._field_Generics.len());
	{
		auto expr = &(_119017_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace4cde4:;
		if (it != expr_end) {
			jule::Ptr<_1c6299249_TypeDecl> _120821_g = *it;
			{
				jule::Ptr<_1c63dd35a_Data> _120921_k = _1c6403518_evalType(_self_.ptr(), _120821_g);;
				if ((_120921_k == nullptr)) {
					(*(_118950_d))=nullptr;
					return;;
				};
				{ jule::Slice<jule::Ptr<_1c641bb3b_InsGeneric>> &__jule_push_dest = (*(_119617_f))._field_Generics; __jule_push_dest.push(jule::new_ptr<_1c641bb3b_InsGeneric>(_1c641bb3b_InsGeneric{._field_Kind=(*(_120921_k))._field_Kind, })); };
			}
			_iter_next_1ace4cde4:;
			++it;
			goto _iter_begin_1ace4cde4;
		}
		_iter_end_1ace4cde4:;
	};
	if (_1c62d4086_IsBuiltin(_119617_f.ptr())) {
		return;;
	};
	if (_1c63ebb82_checkGenericFn(_self_, &(_119617_f), &((*((*((*(_118965_i))))._field_Expr))._field_Token), &((*((*(_118950_d))))._field_Model))) {
		(*((*((*(_118950_d))))._field_Kind))._field_Kind=jule::Trait<_1c641d06b_Kind>(_119617_f, 1);
	} else {
		(*(_118950_d))=nullptr;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c63ec336_evalIndexing(jule::Ptr<_1c63e004e_Eval> _self_, jule::Ptr<_1c62a5541_IndexingExpr> _122836_i) {
	jule::Ptr<_1c641d522_TypeKind> _122917_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_122917_prefix;
	});;
	jule::Ptr<_1c63dd35a_Data> _123317_d = _1c640c214_evalExprKind(_self_, (*((*(_122836_i))._field_Expr))._field_Kind);;
	if ((_123317_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_123317_d))._field_Decl) {
		_1c63eb6cb_evalIdentDeclFromIndexing(_self_, &(_123317_d), &(_122836_i));
		return _123317_d;;
	};
	if ((_1c6421e60_Fn((*(_123317_d))._field_Kind.ptr()) != nullptr)) {
		_1c63ebee5_evalFnGenericFromIndexing(_self_, &(_123317_d), &(_122836_i));
		return _123317_d;;
	};
	_1c63dd35a_Data _124917_oldData = (*(_123317_d));;
	jule::Ptr<_1c63dd35a_Data> _125117_index = _1c640d028_evalExpr(_self_, (*(_122836_i))._field_Index);;
	if ((_125117_index == nullptr)) {
		return nullptr;;
	};
	(*(_123317_d))._field_Decl=false;
	_1c63ea9b6_toIndexing(_self_.ptr(), &(_123317_d), &(_125117_index), &(_122836_i));
	if (_1c63ddc2e_IsConst(_123317_d.ptr())) {
		(*(_123317_d))._field_Decl=false;
		(*(_123317_d))._field_Model=jule::Any((*(_123317_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_123317_d))._field_Decl) {
		(*(_123317_d))._field_Decl=false;
	} else {
		(*(_123317_d))._field_Model=jule::Any(jule::new_ptr<_1c62c4818_IndexingExprModel>(_1c62c4818_IndexingExprModel{._field_Token=(*(_122836_i))._field_Token, ._field_Expr=jule::new_ptr<_1c63dd35a_Data>(_124917_oldData), ._field_Index=_125117_index}), &__jule_any_type45);
	};
	return _123317_d;;
}



inline __jule_tuple_x_1c63dd35a_Data__jule_tuple_x_1c63dd35a_Data _1c63ec677_evalSlicingExprs(jule::Ptr<_1c63e004e_Eval> _self_, jule::Ptr<_1c62a5ba1_SlicingExpr>* _128241_s) {
	__jule_tuple_x_1c63dd35a_Data__jule_tuple_x_1c63dd35a_Data __jule_func_result;
	jule::Ptr<_1c641d522_TypeKind> _128317_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_128317_prefix;
	});;
	jule::Ptr<_1c63dd35a_Data> _128717_l = nullptr;;
	jule::Ptr<_1c63dd35a_Data> _128817_r = nullptr;;
	if (((*((*(_128241_s))))._field_Start != nullptr)) {
		_128717_l=_1c640d028_evalExpr(_self_, (*((*(_128241_s))))._field_Start);
		if ((_128717_l != nullptr)) {
			_1c63e9003_checkIntegerIndexingByData(_self_.ptr(), &(_128717_l), (*((*(_128241_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_128717_l=jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650a07b_primInt, ._field_Constant=static__1dc2609d0_NewI64(0LL)});
		(*((*(_128717_l))._field_Constant))._field_Kind=jule::Str("int", 3);
		(*(_128717_l))._field_Model=jule::Any((*(_128717_l))._field_Constant, &__jule_any_type19);
	};
	if (((*((*(_128241_s))))._field_To != nullptr)) {
		_128817_r=_1c640d028_evalExpr(_self_, (*((*(_128241_s))))._field_To);
		if ((_128817_r != nullptr)) {
			_1c63e9003_checkIntegerIndexingByData(_self_.ptr(), &(_128817_r), (*((*(_128241_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _128717_l;
	__jule_func_result.__jule_result_arg1 = _128817_r;
	return __jule_func_result;;
}



inline void _1c63ec930_slicingArr(_1c63e004e_Eval* _self_, jule::Ptr<_1c63dd35a_Data>* _131830_d) {
	jule::Ptr<_1c641d522_TypeKind> _131917_elemType = (*(_1c6421943_Arr((*((*(_131830_d))))._field_Kind.ptr())))._field_Elem;;
	(*((*(_131830_d))))._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(jule::new_ptr<_1c642a5ea_Slc>(_1c642a5ea_Slc{._field_Elem=_131917_elemType}), 22)});
	(*((*(_131830_d))))._field_Lvalue=false;
	(*((*(_131830_d))))._field_Mutable=((*((*(_131830_d))))._field_Mutable || (!(_1c641eda3_Mutable(_131917_elemType.ptr()))));
}



inline void _1c63ecd4d_slicingStr(_1c63e004e_Eval* _self_, jule::Ptr<_1c63dd35a_Data>* _133330_d, jule::Ptr<_1c63dd35a_Data>* _133341_l, jule::Ptr<_1c63dd35a_Data>* _133352_r) {
	(*((*(_133330_d))))._field_Lvalue=false;
	(*((*(_133330_d))))._field_Mutable=true;
	if ((!(_1c63ddc2e_IsConst((*(_133330_d)).ptr())))) {
		return;;
	};
	if ((((*(_133341_l)) == nullptr) || ((*(_133352_r)) == nullptr))) {
		(*((*(_133330_d))))._field_Constant=nullptr;
		return;;
	};
	if ((_1c63ddc2e_IsConst((*(_133341_l)).ptr()) && _1c63ddc2e_IsConst((*(_133352_r)).ptr()))) {
		jule::I64 _134617_left = _1dc262c35_AsI64((*((*(_133341_l))))._field_Constant.ptr());;
		if ((_134617_left < 0LL)) {
			return;;
		};
		jule::Str _135117_s = _1dc262718_ReadStr((*((*(_133330_d))))._field_Constant.ptr());;
		jule::I64 _135221_right = 0LL;;
		if (((*(_133352_r)) == nullptr)) {
			_135221_right=static_cast<jule::I64>(static_cast<jule::I64>(_135117_s.len()));
		} else {
			_135221_right=static_cast<jule::I64>(_1dc262c35_AsI64((*((*(_133352_r))))._field_Constant.ptr()));
		};
		if ((_134617_left > _135221_right)) {
			return;;
		};
		_1dc263d24_SetStr((*((*(_133330_d))))._field_Constant.ptr(), _135117_s.slice(_134617_left, _135221_right));
		(*((*(_133330_d))))._field_Decl=true;
	} else {
		(*((*(_133330_d))))._field_Constant=nullptr;
	};
}



inline void _1c63ed326_checkSlicing(_1c63e004e_Eval* _self_, jule::Ptr<_1c63dd35a_Data>* _136936_d, jule::Ptr<_1c63dd35a_Data>* _136947_l, jule::Ptr<_1c63dd35a_Data>* _136958_r, jule::Ptr<_1c62a5ba1_SlicingExpr>* _136969_s) {
	{
		
		if ((_1c6421943_Arr((*((*(_136936_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ace67eca:;
			{
				_1c63ec930_slicingArr(_self_, _136936_d);
				return;;
			}
		}
		else if ((_1c6421bc9_Slc((*((*(_136936_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ace68052:;
			{
				return;;
			}
		}
		else if ((_1c6420b73_Prim((*((*(_136936_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ace680c9:;
			{
				jule::Ptr<_1c64260eb_Prim> _137717_prim = _1c6420b73_Prim((*((*(_136936_d))))._field_Kind.ptr());;
				{
					
					if (_1c6429583_IsStr(_137717_prim.ptr())) {
						_case_begin_1ace6a84b:;
						{
							_1c63ecd4d_slicingStr(_self_, _136936_d, _136947_l, _136958_r);
							return;;
						}
					}
					_match_end_1ace6a7b3:;
				};
			}
		}
		_match_end_1ace67da9:;
	};
	_1c63e059e_pushErr(_self_, (*((*(_136969_s))))._field_Token, jule::Str("type @ is not support slicing", 29), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*((*(_136936_d))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Ptr<_1c63dd35a_Data> _1c63ed667_evalSlicing(jule::Ptr<_1c63e004e_Eval> _self_, jule::Ptr<_1c62a5ba1_SlicingExpr> _138835_s) {
	jule::Ptr<_1c63dd35a_Data> _138917_d = _1c640d028_evalExpr(_self_, (*(_138835_s))._field_Expr);;
	if ((_138917_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c63dd35a_Data> _139418_l;;
	jule::Ptr<_1c63dd35a_Data> _139425_r;;
	({
		__jule_tuple_x_1c63dd35a_Data__jule_tuple_x_1c63dd35a_Data __jule_assign_result = _1c63ec677_evalSlicingExprs(_self_, &(_138835_s));
		_139418_l = __jule_assign_result.__jule_result_arg0;
		_139425_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_139418_l == nullptr)) {
		return _138917_d;;
	};
	(*(_138917_d))._field_Decl=false;
	_1c63ed326_checkSlicing(_self_.ptr(), &(_138917_d), &(_139418_l), &(_139425_r), &(_138835_s));
	if (_1c63ddc2e_IsConst(_138917_d.ptr())) {
		(*(_138917_d))._field_Decl=false;
		(*(_138917_d))._field_Model=jule::Any((*(_138917_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_138917_d))._field_Decl) {
		(*(_138917_d))._field_Decl=false;
	} else {
		jule::Ptr<_1c62c5b05_SlicingExprModel> _141221_model = jule::new_ptr<_1c62c5b05_SlicingExprModel>(_1c62c5b05_SlicingExprModel{._field_Token=(*(_138835_s))._field_Token, ._field_Expr=(*(_138917_d))._field_Model, ._field_Left=(*(_139418_l))._field_Model, });;
		if ((_139425_r != nullptr)) {
			(*(_141221_model))._field_Right=(*(_139425_r))._field_Model;
		};
		(*(_138917_d))._field_Model=jule::Any(_141221_model, &__jule_any_type91);
	};
	return _138917_d;;
}



inline void _1c63eda85_castPtr(_1c63e004e_Eval* _self_, jule::Ptr<_1c641d522_TypeKind> _142530_t, jule::Ptr<_1c63dd35a_Data> _142548_d, jule::Ptr<_1c6283a3b_Token> _142558_errorToken) {
	(*(_142548_d))._field_Constant=nullptr;
	jule::Ptr<_1c6429b27_Sptr> _142713_sptr = _1c6420e09_Sptr((*(_142548_d))._field_Kind.ptr());;
	if ((_142713_sptr != nullptr)) {
		if ((!(_1c641dc2b_Equal((*(_1c6421190_Ptr(_142530_t.ptr())))._field_Elem, (*(_142713_sptr))._field_Elem)))) {
			_1c63e059e_pushErr(_self_, _142558_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_142548_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1c641d8da_Str(_142530_t.ptr()), &__jule_any_type4)}));
		};
		return;;
	};
	if ((!(_1c63e1094_isUnsafe(_self_)))) {
		_1c63e059e_pushErr(_self_, _142558_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c64260eb_Prim> _144013_prim = _1c6420b73_Prim((*(_142548_d))._field_Kind.ptr());;
	if (((_1c6421190_Ptr((*(_142548_d))._field_Kind.ptr()) == nullptr) && ((_144013_prim == nullptr) || (!(_1dc25e88b_IsInt(_1c642643c_Str(_144013_prim.ptr()))))))) {
		_1c63e059e_pushErr(_self_, _142558_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_142548_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1c641d8da_Str(_142530_t.ptr()), &__jule_any_type4)}));
	};
}



inline void _1c63edea3_castStruct(_1c63e004e_Eval* _self_, jule::Ptr<_1c641d522_TypeKind> _144633_t, jule::Ptr<_1c63dd35a_Data> _144651_d, jule::Ptr<_1c6283a3b_Token> _144661_errorToken) {
	(*(_144651_d))._field_Constant=nullptr;
	jule::Ptr<_1c62e2e96_Trait> _144817_tr = _1c642247c_Trait((*(_144651_d))._field_Kind.ptr());;
	if ((_144817_tr == nullptr)) {
		_1c63e059e_pushErr(_self_, _144661_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_144651_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1c641d8da_Str(_144633_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1c62bcab9_StructIns> _145417_s = _1c64221e6_Struct(_144633_t.ptr());;
	_1ace7aa8c_pushReference(_self_, &(_145417_s));
	if ((!(_1c62bb47a_IsImplements((*(_145417_s))._field_Decl.ptr(), _144817_tr)))) {
		_1c63e059e_pushErr(_self_, _144661_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_144651_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1c641d8da_Str(_144633_t.ptr()), &__jule_any_type4)}));
	};
}



inline void _1c63ee3c1_castRef(_1c63e004e_Eval* _self_, jule::Ptr<_1c641d522_TypeKind> _146230_t, jule::Ptr<_1c63dd35a_Data> _146248_d, jule::Ptr<_1c6283a3b_Token> _146258_errorToken) {
	(*(_146248_d))._field_Constant=nullptr;
	jule::Ptr<_1c6429b27_Sptr> _146417_sptr = _1c6420e09_Sptr(_146230_t.ptr());;
	jule::Ptr<_1c642d3de_Ptr> _146617_ptr = _1c6421190_Ptr((*(_146248_d))._field_Kind.ptr());;
	if (((_146617_ptr != nullptr) && _1c641dc2b_Equal((*(_146417_sptr))._field_Elem, (*(_146617_ptr))._field_Elem))) {
		if ((!(_1c63e1094_isUnsafe(_self_)))) {
			_1c63e059e_pushErr(_self_, _146258_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1c64221e6_Struct((*(_146417_sptr))._field_Elem.ptr()) != nullptr)) {
		_1c63edea3_castStruct(_self_, (*(_146417_sptr))._field_Elem, _146248_d, _146258_errorToken);
		return;;
	};
	_1c63e059e_pushErr(_self_, _146258_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_146248_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1c641d8da_Str(_146230_t.ptr()), &__jule_any_type4)}));
}



inline void _1c63ee7de_castSlc(_1c63e004e_Eval* _self_, jule::Ptr<_1c641d522_TypeKind> _148430_t, jule::Ptr<_1c63dd35a_Data> _148448_d, jule::Ptr<_1c6283a3b_Token> _148458_errorToken) {
	jule::Ptr<_1dc260590_Const> _148513_c = (*(_148448_d))._field_Constant;;
	(*(_148448_d))._field_Constant=nullptr;
	if ((_1c6421426_Enum((*(_148448_d))._field_Kind.ptr()) != nullptr)) {
		if (((_1c6420b73_Prim((*((*(_1c6421426_Enum((*(_148448_d))._field_Kind.ptr())))._field_Kind))._field_Kind.ptr()) == nullptr) || (!(_1c6429583_IsStr(_1c6420b73_Prim((*((*(_1c6421426_Enum((*(_148448_d))._field_Kind.ptr())))._field_Kind))._field_Kind.ptr()).ptr()))))) {
			_1c63e059e_pushErr(_self_, _148458_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_148448_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1c641d8da_Str(_148430_t.ptr()), &__jule_any_type4)}));
			return;;
		};
	} else if (((_1c6420b73_Prim((*(_148448_d))._field_Kind.ptr()) == nullptr) || (!(_1c6429583_IsStr(_1c6420b73_Prim((*(_148448_d))._field_Kind.ptr()).ptr()))))) {
		_1c63e059e_pushErr(_self_, _148458_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_148448_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1c641d8da_Str(_148430_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	_148430_t=(*(_1c6421bc9_Slc(_148430_t.ptr())))._field_Elem;
	jule::Ptr<_1c64260eb_Prim> _149913_prim = _1c6420b73_Prim(_148430_t.ptr());;
	if (((_149913_prim == nullptr) || ((!(_1c64279e3_IsU8(_149913_prim.ptr()))) && (!(_1c64274c6_IsI32(_149913_prim.ptr())))))) {
		_1c63e059e_pushErr(_self_, _148458_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_148448_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1c641d8da_Str(_148430_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	if ((_148513_c != nullptr)) {
		{
			
			if (_1c64279e3_IsU8(_149913_prim.ptr())) {
				_case_begin_1ace9191b:;
				{
					jule::Str _150921_s = _1dc262718_ReadStr(_148513_c.ptr());;
					jule::Ptr<_1c62c4362_SliceExprModel> _151025_model = jule::new_ptr<_1c62c4362_SliceExprModel>(_1c62c4362_SliceExprModel{._field_ElemKind=_148430_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _150921_s.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_150921_s);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ace93357:;
						if (it != expr_end) {
							jule::U8 *_151424_b = it;
							{
								jule::Ptr<_1dc260590_Const> _151529_bc = static__1dc260c99_NewU64(static_cast<jule::U64>(static_cast<jule::U64>((*(_151424_b)))));;
								(*(_151529_bc))._field_Kind=(*(_149913_prim))._field_Kind;
								{ jule::Slice<jule::Any> &__jule_push_dest = (*(_151025_model))._field_Elems; __jule_push_dest.push(jule::Any(_151529_bc, &__jule_any_type19)); };
							}
							_iter_next_1ace93357:;
							++it;
							goto _iter_begin_1ace93357;
						}
						_iter_end_1ace93357:;
					};
					(*(_148448_d))._field_Model=jule::Any(_151025_model, &__jule_any_type76);
					(*(_148448_d))._field_Decl=true;
				}
			}
			else if (_1c64274c6_IsI32(_149913_prim.ptr())) {
				_case_begin_1ace91993:;
				{
					jule::Slice<jule::I32> _152221_runes = static_cast<jule::Slice<jule::I32>>(_1dc262718_ReadStr(_148513_c.ptr()));;
					jule::Ptr<_1c62c4362_SliceExprModel> _152325_model = jule::new_ptr<_1c62c4362_SliceExprModel>(_1c62c4362_SliceExprModel{._field_ElemKind=_148430_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _152221_runes.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_152221_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ace966bd:;
						if (it != expr_end) {
							jule::I32 *_152724_r = it;
							{
								jule::Ptr<_1dc260590_Const> _152829_rc = static__1dc2609d0_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_152724_r)))));;
								(*(_152829_rc))._field_Kind=(*(_149913_prim))._field_Kind;
								{ jule::Slice<jule::Any> &__jule_push_dest = (*(_152325_model))._field_Elems; __jule_push_dest.push(jule::Any(_152829_rc, &__jule_any_type19)); };
							}
							_iter_next_1ace966bd:;
							++it;
							goto _iter_begin_1ace966bd;
						}
						_iter_end_1ace966bd:;
					};
					(*(_148448_d))._field_Model=jule::Any(_152325_model, &__jule_any_type76);
					(*(_148448_d))._field_Decl=true;
				}
			}
			_match_end_1ace9180b:;
		};
	};
}



inline void _1c63eeb52_castStr(_1c63e004e_Eval* _self_, jule::Ptr<_1c63dd35a_Data> _153830_d, jule::Ptr<_1c6283a3b_Token> _153840_errorToken) {
	if ((_1c6421426_Enum((*(_153830_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c62e5691_Enum> _154021_e = _1c6421426_Enum((*(_153830_d))._field_Kind.ptr());;
		if (((_1c6420b73_Prim((*((*(_154021_e))._field_Kind))._field_Kind.ptr()) != nullptr) && _1c6429583_IsStr(_1c6420b73_Prim((*((*(_154021_e))._field_Kind))._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1dc260590_Const> _154613_c = (*(_153830_d))._field_Constant;;
	(*(_153830_d))._field_Constant=nullptr;
	if ((_1c6420b73_Prim((*(_153830_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c64260eb_Prim> _154917_prim = _1c6420b73_Prim((*(_153830_d))._field_Kind.ptr());;
		if (((!(_1c64279e3_IsU8(_154917_prim.ptr()))) && (!(_1c64274c6_IsI32(_154917_prim.ptr()))))) {
			_1c63e059e_pushErr(_self_, _153840_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type4),jule::Any(_1c641d8da_Str((*(_153830_d))._field_Kind.ptr()), &__jule_any_type4)}));
			return;;
		};
		if ((_154613_c != nullptr)) {
			{
				
				if (_1c64279e3_IsU8(_154917_prim.ptr())) {
					_case_begin_1ace9db04:;
					{
						(*(_153830_d))._field_Constant=static__1dc26132c_NewStr(jule::Str::from_byte(static_cast<jule::U8>(_1dc262ebb_AsU64(_154613_c.ptr()))));
						(*(_153830_d))._field_Model=jule::Any((*(_153830_d))._field_Constant, &__jule_any_type19);
						(*(_153830_d))._field_Decl=true;
					}
				}
				else if (_1c64274c6_IsI32(_154917_prim.ptr())) {
					_case_begin_1ace9db7b:;
					{
						(*(_153830_d))._field_Constant=static__1dc26132c_NewStr(jule::Str::from_rune(static_cast<jule::I32>(_1dc262c35_AsI64(_154613_c.ptr()))));
						(*(_153830_d))._field_Model=jule::Any((*(_153830_d))._field_Constant, &__jule_any_type19);
						(*(_153830_d))._field_Decl=true;
					}
				}
				_match_end_1ace9da05:;
			};
		};
		return;;
	};
	jule::Ptr<_1c642a5ea_Slc> _157017_s = _1c6421bc9_Slc((*(_153830_d))._field_Kind.ptr());;
	if ((_157017_s == nullptr)) {
		_1c63e059e_pushErr(_self_, _153840_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type4),jule::Any(_1c641d8da_Str((*(_153830_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1c641d522_TypeKind> _157617_t = (*(_157017_s))._field_Elem;;
	jule::Ptr<_1c64260eb_Prim> _157713_prim = _1c6420b73_Prim(_157617_t.ptr());;
	if (((_157713_prim == nullptr) || ((!(_1c64279e3_IsU8(_157713_prim.ptr()))) && (!(_1c64274c6_IsI32(_157713_prim.ptr())))))) {
		_1c63e059e_pushErr(_self_, _153840_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type4),jule::Any(_1c641d8da_Str((*(_153830_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return;;
	};
}



inline void _1c6400070_castInt(_1c63e004e_Eval* _self_, jule::Ptr<_1c641d522_TypeKind> _158430_t, jule::Ptr<_1c63dd35a_Data> _158448_d, jule::Ptr<_1c6283a3b_Token> _158458_errorToken) {
	if (_1c63ddc2e_IsConst(_158448_d.ptr())) {
		jule::Ptr<_1c64260eb_Prim> _158617_prim = _1c6420b73_Prim(_158430_t.ptr());;
		{
			
			if (_1dc25e2b4_IsSigInt((*(_158617_prim))._field_Kind)) {
				_case_begin_1acea6cb6:;
				{
					_1dc26350a_SetI64((*(_158448_d))._field_Constant.ptr(), static_cast<jule::I64>(_1dc262c35_AsI64((*(_158448_d))._field_Constant.ptr())));
				}
			}
			else if (_1dc25e5c2_IsUnsigInt((*(_158617_prim))._field_Kind)) {
				_case_begin_1acea6d3d:;
				{
					_1dc2637b3_SetU64((*(_158448_d))._field_Constant.ptr(), static_cast<jule::U64>(_1dc262ebb_AsU64((*(_158448_d))._field_Constant.ptr())));
				}
			}
			_match_end_1acea6c1c:;
		};
	} else {
		(*(_158448_d))._field_Constant=nullptr;
	};
	if ((_1c6421426_Enum((*(_158448_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c62e5691_Enum> _159817_e = _1c6421426_Enum((*(_158448_d))._field_Kind.ptr());;
		if (_1dc25ee96_IsNum(_1c641d8da_Str((*((*(_159817_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1c6420e09_Sptr((*(_158448_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c64260eb_Prim> _160517_prim = _1c6420b73_Prim(_158430_t.ptr());;
		if ((!(_1c6429066_IsUintptr(_160517_prim.ptr())))) {
			_1c63e059e_pushErr(_self_, _158458_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_158448_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1c641d8da_Str(_158430_t.ptr()), &__jule_any_type4)}));
		};
		return;;
	};
	if ((_1c6421190_Ptr((*(_158448_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c64260eb_Prim> _161217_prim = _1c6420b73_Prim(_158430_t.ptr());;
		if (_1c6429066_IsUintptr(_161217_prim.ptr())) {
		} else if ((!(_1c63e1094_isUnsafe(_self_)))) {
			_1c63e059e_pushErr(_self_, _158458_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1c64260eb_Prim> _162113_prim = _1c6420b73_Prim((*(_158448_d))._field_Kind.ptr());;
	if (((_162113_prim != nullptr) && _1dc25ee96_IsNum(_1c642643c_Str(_162113_prim.ptr())))) {
		return;;
	};
	_1c63e059e_pushErr(_self_, _158458_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_158448_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1c641d8da_Str(_158430_t.ptr()), &__jule_any_type4)}));
}



inline void _1c640048d_castNum(_1c63e004e_Eval* _self_, jule::Ptr<_1c641d522_TypeKind> _162930_t, jule::Ptr<_1c63dd35a_Data> _162948_d, jule::Ptr<_1c6283a3b_Token> _162958_errorToken) {
	if (_1c63ddc2e_IsConst(_162948_d.ptr())) {
		jule::Ptr<_1c64260eb_Prim> _163117_prim = _1c6420b73_Prim(_162930_t.ptr());;
		{
			
			if (_1dc25ebcc_IsFloat((*(_163117_prim))._field_Kind)) {
				_case_begin_1aceb2bb2:;
				{
					_1dc2640cc_SetF64((*(_162948_d))._field_Constant.ptr(), static_cast<jule::F64>(_1dc263252_AsF64((*(_162948_d))._field_Constant.ptr())));
				}
			}
			else if (_1dc25e2b4_IsSigInt((*(_163117_prim))._field_Kind)) {
				_case_begin_1aceb2c39:;
				{
					_1dc26350a_SetI64((*(_162948_d))._field_Constant.ptr(), static_cast<jule::I64>(_1dc262c35_AsI64((*(_162948_d))._field_Constant.ptr())));
				}
			}
			else if (_1dc25e5c2_IsUnsigInt((*(_163117_prim))._field_Kind)) {
				_case_begin_1aceb2cb1:;
				{
					_1dc2637b3_SetU64((*(_162948_d))._field_Constant.ptr(), static_cast<jule::U64>(_1dc262ebb_AsU64((*(_162948_d))._field_Constant.ptr())));
				}
			}
			_match_end_1aceb2b07:;
		};
	} else {
		(*(_162948_d))._field_Constant=nullptr;
	};
	if ((_1c6421426_Enum((*(_162948_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c62e5691_Enum> _164517_e = _1c6421426_Enum((*(_162948_d))._field_Kind.ptr());;
		if (_1dc25ee96_IsNum(_1c641d8da_Str((*((*(_164517_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1c64260eb_Prim> _165113_prim = _1c6420b73_Prim((*(_162948_d))._field_Kind.ptr());;
	if (((_165113_prim != nullptr) && _1dc25ee96_IsNum(_1c642643c_Str(_165113_prim.ptr())))) {
		return;;
	};
	_1c63e059e_pushErr(_self_, _162958_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_162948_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1c641d8da_Str(_162930_t.ptr()), &__jule_any_type4)}));
}



inline void _1c64008ab_castPrim(_1c63e004e_Eval* _self_, jule::Ptr<_1c641d522_TypeKind> _165931_t, jule::Ptr<_1c63dd35a_Data> _165949_d, jule::Ptr<_1c6283a3b_Token> _165959_errorToken) {
	jule::Ptr<_1c64260eb_Prim> _166013_prim = _1c6420b73_Prim(_165931_t.ptr());;
	{
		
		if (_1c6429819_IsAny(_166013_prim.ptr())) {
			_case_begin_1acebae51:;
			{
				(*(_165949_d))._field_Constant=nullptr;
			}
		}
		else if (_1c6429583_IsStr(_166013_prim.ptr())) {
			_case_begin_1acebaec8:;
			{
				_1c63eeb52_castStr(_self_, _165949_d, _165959_errorToken);
			}
		}
		else if (_1dc25e88b_IsInt(_1c642643c_Str(_166013_prim.ptr()))) {
			_case_begin_1acebaabb:;
			{
				_1c6400070_castInt(_self_, _165931_t, _165949_d, _165959_errorToken);
			}
		}
		else if (_1dc25ee96_IsNum(_1c642643c_Str(_166013_prim.ptr()))) {
			_case_begin_1acebab43:;
			{
				_1c640048d_castNum(_self_, _165931_t, _165949_d, _165959_errorToken);
			}
		}
		else {
			_case_begin_1acebaa55:;
			{
				_1c63e059e_pushErr(_self_, _165959_errorToken, jule::Str("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str(_165931_t.ptr()), &__jule_any_type4)}));
			}
		}
		_match_end_1acebaa00:;
	};
}



inline void _1c6400c1e_castConstant(_1c63e004e_Eval* _self_, jule::Ptr<_1c641d522_TypeKind>* _167636_t, jule::Ptr<_1c63dd35a_Data>* _167655_d) {
	if ((((*(_167655_d)) == nullptr) || (!(_1c63ddc2e_IsConst((*(_167655_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1c64260eb_Prim> _168013_prim = _1c6420b73_Prim((*(_167636_t)).ptr());;
	_1c64196e9_castConstByType(&((*(_168013_prim))._field_Kind), _167655_d);
	(*((*(_167655_d))))._field_Model=jule::Any((*((*(_167655_d))))._field_Constant, &__jule_any_type19);
}



inline void _1c640113c_castTypeEnum(_1c63e004e_Eval* _self_, jule::Ptr<_1c641d522_TypeKind>* _168536_t, jule::Ptr<_1c63dd35a_Data>* _168555_d, jule::Ptr<_1c6283a3b_Token>* _168570_errorToken) {
	jule::I64 _168613_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1c63735ba_checkTypeCompatibility((*(_self_))._field_s, &((*((*(_168555_d))))._field_Kind), _168536_t, _168570_errorToken)))) {
		(*((*(_self_))._field_s))._field_errors=(*((*(_self_))._field_s))._field_errors.slice(0LL, _168613_n);
		_1c63e059e_pushErr(_self_, (*(_168570_errorToken)), jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*((*(_168555_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1c641d8da_Str((*(_168536_t)).ptr()), &__jule_any_type4)}));
	};
	(*((*(_168555_d))))._field_Constant=nullptr;
}



inline void _1c640155a_castTypeEnumT(_1c63e004e_Eval* _self_, jule::Ptr<_1c641d522_TypeKind>* _169437_t, jule::Ptr<_1c63dd35a_Data>* _169456_d, jule::Ptr<_1c6283a3b_Token>* _169471_errorToken) {
	jule::I64 _169513_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1c63735ba_checkTypeCompatibility((*(_self_))._field_s, _169437_t, &((*((*(_169456_d))))._field_Kind), _169471_errorToken)))) {
		(*((*(_self_))._field_s))._field_errors=(*((*(_self_))._field_s))._field_errors.slice(0LL, _169513_n);
		_1c63e059e_pushErr(_self_, (*(_169471_errorToken)), jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*((*(_169456_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1c641d8da_Str((*(_169437_t)).ptr()), &__jule_any_type4)}));
	};
	(*((*(_169456_d))))._field_Constant=nullptr;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6401a11_evalCastByTypeNData(_1c63e004e_Eval* _self_, jule::Ptr<_1c641d522_TypeKind> _170342_t, jule::Ptr<_1c63dd35a_Data> _170360_d, jule::Ptr<_1c6283a3b_Token> _170374_errorToken) {
	if (((_170360_d != nullptr) && (*(_170360_d))._field_Decl)) {
		_1c63e059e_pushErr(_self_, _170374_errorToken, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1c63dd712_IsNil(_170360_d.ptr())) {
			_case_begin_1acec7e19:;
			{
				if ((!(_1c64203c0_NilCompatible(_170342_t.ptr())))) {
					_1c63e059e_pushErr(_self_, _170374_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("<nil>", 5), &__jule_any_type4),jule::Any(_1c641d8da_Str(_170342_t.ptr()), &__jule_any_type4)}));
				};
				(*(_170360_d))._field_Constant=nullptr;
			}
		}
		else if (((_1c6420b73_Prim((*(_170360_d))._field_Kind.ptr()) != nullptr) && _1c6429819_IsAny(_1c6420b73_Prim((*(_170360_d))._field_Kind.ptr()).ptr()))) {
			_case_begin_1acec7d2b:;
			{
				if ((_1c6421426_Enum(_170342_t.ptr()) != nullptr)) {
					_1c63e059e_pushErr(_self_, _170374_errorToken, jule::Str("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
					_1c63e0912_pushSuggestion(_self_, jule::Str("try cast to type of enum fields instead of enum", 47), jule::Slice<jule::Any>());
				} else if ((_1c64216ac_TypeEnum(_170342_t.ptr()) != nullptr)) {
					_1c63e059e_pushErr(_self_, _170374_errorToken, jule::Str("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
				};
				(*(_170360_d))._field_Constant=nullptr;
			}
		}
		else if ((_1c64216ac_TypeEnum((*(_170360_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acec7ac8:;
			{
				_1c640113c_castTypeEnum(_self_, &(_170342_t), &(_170360_d), &(_170374_errorToken));
			}
		}
		else if ((_1c64216ac_TypeEnum(_170342_t.ptr()) != nullptr)) {
			_case_begin_1acec7b3e:;
			{
				_1c640155a_castTypeEnumT(_self_, &(_170342_t), &(_170360_d), &(_170374_errorToken));
			}
		}
		else if ((_1c6421190_Ptr(_170342_t.ptr()) != nullptr)) {
			_case_begin_1acec87ee:;
			{
				_1c63eda85_castPtr(_self_, _170342_t, _170360_d, _170374_errorToken);
			}
		}
		else if ((_1c6420e09_Sptr(_170342_t.ptr()) != nullptr)) {
			_case_begin_1acec8865:;
			{
				_1c63ee3c1_castRef(_self_, _170342_t, _170360_d, _170374_errorToken);
			}
		}
		else if ((_1c6421bc9_Slc(_170342_t.ptr()) != nullptr)) {
			_case_begin_1acec88cb:;
			{
				_1c63ee7de_castSlc(_self_, _170342_t, _170360_d, _170374_errorToken);
			}
		}
		else if ((_1c64221e6_Struct(_170342_t.ptr()) != nullptr)) {
			_case_begin_1acec8942:;
			{
				_1c63edea3_castStruct(_self_, _170342_t, _170360_d, _170374_errorToken);
			}
		}
		else if ((_1c6420b73_Prim(_170342_t.ptr()) != nullptr)) {
			_case_begin_1acec89a8:;
			{
				_1c64008ab_castPrim(_self_, _170342_t, _170360_d, _170374_errorToken);
				_1c6400c1e_castConstant(_self_, &(_170342_t), &(_170360_d));
			}
		}
		else {
			_case_begin_1acec79a7:;
			{
				_1c63e059e_pushErr(_self_, _170374_errorToken, jule::Str("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str(_170342_t.ptr()), &__jule_any_type4)}));
				_170360_d=nullptr;
			}
		}
		_match_end_1acec728c:;
	};
	if ((_170360_d == nullptr)) {
		return nullptr;;
	};
	(*(_170360_d))._field_Mutable=((*(_170360_d))._field_Mutable || (!(_1c641eda3_Mutable((*(_170360_d))._field_Kind.ptr()))));
	if (((!((*(_170360_d))._field_Decl)) && ((_1c6421426_Enum((*(_170360_d))._field_Kind.ptr()) == nullptr) || (!(_1c641dc2b_Equal((*((*(_1c6421426_Enum((*(_170360_d))._field_Kind.ptr())))._field_Kind))._field_Kind, _170342_t)))))) {
		_1c6418b49_applyCastKind(&(_170360_d), &(_170342_t));
		(*((*(_170360_d))._field_Model.cast_ptr<_1c62c35d6_CastingExprModel>(&__jule_any_type92)))._field_Token=_170374_errorToken;
	} else {
		(*(_170360_d))._field_Kind=_170342_t;
	};
	(*(_170360_d))._field_Decl=false;
	(*(_170360_d))._field_Lvalue=false;
	(*(_170360_d))._field_untyped=false;
	if (_1c63ddc2e_IsConst(_170360_d.ptr())) {
		(*((*(_170360_d))._field_Constant))._field_Kind=(*(_1c6420b73_Prim(_170342_t.ptr())))._field_Kind;
	};
	return _170360_d;;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6401eb7_evalCastT(jule::Ptr<_1c63e004e_Eval> _self_, jule::Ptr<_1c641d522_TypeKind>* _177434_t, jule::Ptr<_1c629d57d_Expr>* _177453_e, jule::Ptr<_1c6283a3b_Token>* _177468_et) {
	jule::Ptr<_1c641d522_TypeKind> _177517_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_177517_prefix;
	});;
	if ((_1c6421bc9_Slc((*(_177434_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_177453_e))))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type93) {
				_case_begin_1aced8259:;
				{
					(*(_self_))._field_prefix=(*(_177434_t));
				}
			}
			_match_end_1aced8204:;
		};
	};
	jule::Ptr<_1c63dd35a_Data> _178417_d = _1c640d028_evalExpr(_self_, (*(_177453_e)));;
	if (((_178417_d == nullptr) || ((*(_self_))._field_prefix != nullptr))) {
		return _178417_d;;
	};
	return _1c6401a11_evalCastByTypeNData(_self_.ptr(), (*(_177434_t)), _178417_d, (*(_177468_et)));;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6402308_evalCast(jule::Ptr<_1c63e004e_Eval> _self_, jule::Ptr<_1c62a0ddd_CastExpr> _179132_c) {
	jule::Ptr<_1c64256e4_TypeSymbol> _179217_t = _1c62d762d_buildType((*(_179132_c))._field_Kind);;
	jule::Bool _179313_ok = _1c6371277_checkType((*(_self_))._field_s, &(_179217_t), (*(_self_))._field_lookup);;
	if ((!(_179313_ok))) {
		return nullptr;;
	};
	return _1c6401eb7_evalCastT(_self_, &((*(_179217_t))._field_Kind), &((*(_179132_c))._field_Expr), &((*((*(_179132_c))._field_Kind))._field_Token));;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6402649_evalNsSelection(_1c63e004e_Eval* _self_, jule::Ptr<_1c62a12b7_NsSelectionExpr> _180034_s) {
	jule::Str _180113_path = _1c643a099_buildLinkPathByTokens(&((*(_180034_s))._field_Ns));;
	jule::Ptr<_1c63469de_ImportInfo> _180217_imp = _1c643d058_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c643b342_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1c63469de_ImportInfo>)>([=](jule::Ptr<_1c63469de_ImportInfo> _180252_imp) mutable -> jule::Bool {
		if ((((*(_180034_s))._field_Ns.len() == 1LL) && ((*(_180252_imp))._field_Alias == _180113_path))) {
			return true;;
		};
		return (((*(_180252_imp))._field_LinkPath == _180113_path) && _1c6349607_isAccessibleViaSelection(_180252_imp.ptr()));;
	}));;
	if ((_180217_imp == nullptr)) {
		_1c63e059e_pushErr(_self_, (*(_180034_s))._field_Ns[0LL], jule::Str("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_180113_path, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Trait<_1c643d058_Lookup> _181417_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1c643d058_Lookup>(_180217_imp, 1);
	;
	_1c63e0d0d_disallowBuiltin(_self_);
	jule::Any _181917_def = _1c63e331b_getDef(_self_, &((*((*(_180034_s))._field_Ident))._field_Kind), false);;
	_1c63e0b10_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_181417_lookup;
	jule::Ptr<_1c63dd35a_Data> _182217_d = _1c63e7243_evalDef(_self_, &(_181917_def), (*(_180034_s))._field_Ident);;
	return _182217_d;;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6402b00_evalStructLitExplicit(jule::Ptr<_1c63e004e_Eval> _self_, jule::Ptr<_1c62bcab9_StructIns> _182645_s, jule::Slice<jule::Ptr<_1c629d57d_Expr>> _182713_exprs, jule::Ptr<_1c6283a3b_Token> _182733_errorToken) {
	jule::Bool _182813_ok = _1c636bb35_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I64>((*((*(_182645_s))._field_Decl))._field_Generics.len()), static_cast<jule::I64>((*(_182645_s))._field_Generics.len()), _182733_errorToken);;
	if ((!(_182813_ok))) {
		return nullptr;;
	};
	if ((((*(_self_))._field_field != nullptr) && ((*((*((*(_self_))._field_field))._field_Decl))._field_Owner == (*(_182645_s))._field_Decl))) {
		_1c63e059e_pushErr(_self_.ptr(), _182733_errorToken, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_182645_s))._field_Decl))._field_Ident, &__jule_any_type4)}));
	};
	_1ace7aa8c_pushReference(_self_.ptr(), &(_182645_s));
	_1c63e543e_checkDeprecated(_self_.ptr(), &((*((*(_182645_s))._field_Decl))._field_Directives), _182733_errorToken);
	_1c63d1837_structLitChecker _184117_slc = _1c63d1837_structLitChecker{._field_e=_self_, ._field_errorToken=_182733_errorToken, ._field_s=_182645_s, };;
	_1c63d3075_check(&_184117_slc, &(_182713_exprs));
	jule::Ptr<_1c63dd35a_Data> _184817_d = jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(_182645_s, 0)}), ._field_Mutable=(!((*(_self_))._field_immutable)), ._field_Model=jule::Any(jule::new_ptr<_1c62c2c56_StructLitExprModel>(_1c62c2c56_StructLitExprModel{._field_Strct=_182645_s, ._field_Args=_184117_slc._field_args}), &__jule_any_type94), });;
	if ((*((*(_182645_s))._field_Decl))._field_Binded) {
		(*((*(_184817_d))._field_Kind))._field_BindIdent=(*((*(_182645_s))._field_Decl))._field_Ident;
	};
	return _184817_d;;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6402e41_evalStructLit(jule::Ptr<_1c63e004e_Eval> _self_, jule::Ptr<_1c62a35c7_StructLit> _186437_lit) {
	jule::Ptr<_1c64256e4_TypeSymbol> _186517_t = _1c62d762d_buildType((*(_186437_lit))._field_Kind);;
	jule::Bool _186613_ok = _1c6371277_checkType((*(_self_))._field_s, &(_186517_t), (*(_self_))._field_lookup);;
	if ((!(_186613_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1c62bcab9_StructIns> _187117_s = _1c64221e6_Struct((*(_186517_t))._field_Kind.ptr());;
	if ((_187117_s == nullptr)) {
		if ((_1c6420e09_Sptr((*(_186517_t))._field_Kind.ptr()) != nullptr)) {
			_187117_s=_1c64221e6_Struct((*(_1c6420e09_Sptr((*(_186517_t))._field_Kind.ptr())))._field_Elem.ptr());
			if ((_187117_s != nullptr)) {
				goto _julec_label_1ad000194;
			};
		};
		_1c63e059e_pushErr(_self_.ptr(), (*((*(_186437_lit))._field_Kind))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1ad000194:;
	jule::Ptr<_1c63dd35a_Data> _188417_d = _1c6402b00_evalStructLitExplicit(_self_, _187117_s, (*(_186437_lit))._field_Exprs, (*((*(_186437_lit))._field_Kind))._field_Token);;
	if ((_1c6420e09_Sptr((*(_186517_t))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c62c2c56_StructLitExprModel> _188621_model = (*(_188417_d))._field_Model.cast_ptr<_1c62c2c56_StructLitExprModel>(&__jule_any_type94);;
		_1c6417362_makeStructLitAlloc(&(_188417_d), &(_188621_model));
	};
	return _188417_d;;
}



inline _1c64303d0_typeChecker _1c64031c7_typeChecker(_1c63e004e_Eval* _self_) {
	return _1c6370023_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6403518_evalType(_1c63e004e_Eval* _self_, jule::Ptr<_1c6299249_TypeDecl> _189631_t) {
	jule::Ptr<_1c64256e4_TypeSymbol> _189717_tk = _1c62d762d_buildType(_189631_t);;
	jule::Bool _189813_ok = _1c6371277_checkType((*(_self_))._field_s, &(_189717_tk), (*(_self_))._field_lookup);;
	if ((!(_189813_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=(*(_189717_tk))._field_Kind, ._field_Model=jule::Any((*(_189717_tk))._field_Kind, &__jule_any_type83), ._field_Decl=true, });;
}



inline void _1c640387b_callTypeFn(jule::Ptr<_1c63e004e_Eval> _self_, jule::Ptr<_1c62a22a7_FnCallExpr>* _190935_fc, jule::Ptr<_1c63dd35a_Data>* _190957_d) {
	if (((*((*(_190935_fc))))._field_Args.len() < 1LL)) {
		_1c63e059e_pushErr(_self_.ptr(), (*((*(_190935_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type4)}));
	} else if (((*((*(_190935_fc))))._field_Args.len() > 1LL)) {
		_1c63e059e_pushErr(_self_.ptr(), (*((*((*(_190935_fc))))._field_Args[1LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*((*(_190957_d))))._field_Kind.ptr()), &__jule_any_type4)}));
	} else if ((*((*(_190935_fc))))._field_IsCo) {
		_1c63e059e_pushErr(_self_.ptr(), (*((*(_190935_fc))))._field_Token, jule::Str("concurrent calls are not allowed for type-cast calls", 52), jule::Slice<jule::Any>());
		(*(_190957_d))=nullptr;
		return;;
	} else if (((*((*(_190935_fc))))._field_Exception != nullptr)) {
		_1c63e059e_pushErr(_self_.ptr(), (*((*(_190935_fc))))._field_Token, jule::Str("exceptionals are not supported for type-cast call", 49), jule::Slice<jule::Any>());
		(*(_190957_d))=nullptr;
		return;;
	};
	if (((*((*(_190935_fc))))._field_Args.len() > 0LL)) {
		jule::Ptr<_1c629d57d_Expr> _192521_arg = (*((*(_190935_fc))))._field_Args[0LL];;
		(*(_190957_d))=_1c6401eb7_evalCastT(_self_, &((*((*(_190957_d))))._field_Kind), &(_192521_arg), &((*(_192521_arg))._field_Token));
		return;;
	};
	if (((*(_190957_d)) != nullptr)) {
		(*((*(_190957_d))))._field_Decl=false;
	};
}



inline void _1c6403bde_callBuiltinFn(jule::Ptr<_1c63e004e_Eval> _self_, jule::Ptr<_1c62a22a7_FnCallExpr>* _193538_fc, jule::Ptr<_1c63dd35a_Data>* _193560_d) {
	if ((!(_1c62a262b_Unhandled((*(_193538_fc)).ptr())))) {
		_1c63e059e_pushErr(_self_.ptr(), (*((*(_193538_fc))))._field_Token, jule::Str("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	(*(_193560_d))=(*(_1c6421e60_Fn((*((*(_193560_d))))._field_Kind.ptr())))._field_caller(&(_self_), _193538_fc, _193560_d);
	if (((*(_193560_d)) == nullptr)) {
		return;;
	};
	(*((*(_193560_d))))._field_Mutable=true;
}



inline void _1c6404052_checkFnOfConcurrentCall(_1c63e004e_Eval* _self_, jule::Ptr<_1c62d2b01_FnIns>* _194743_f, jule::Ptr<_1c6283a3b_Token> _194754_errorToken) {
	if (_1c63e1094_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*((*(_194743_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad00e58d:;
		if (it != expr_end) {
			jule::Ptr<_1c62d1b55_ParamIns> *_195116_p = it;
			{
				if (_1c62cd844_IsSelf((*((*(_195116_p))))._field_Decl.ptr())) {
					if ((!(_1c62cdaca_IsRef((*((*(_195116_p))))._field_Decl.ptr())))) {
						_1c63e059e_pushErr(_self_, _194754_errorToken, jule::Str("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97), jule::Slice<jule::Any>());
						_1c63e0912_pushSuggestion(_self_, jule::Str("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99), jule::Slice<jule::Any>());
					};
				};
				if ((*((*((*(_195116_p))))._field_Decl))._field_Reference) {
					_1c63e059e_pushErr(_self_, _194754_errorToken, jule::Str("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96), jule::Slice<jule::Any>());
					_1c63e0912_pushSuggestion(_self_, jule::Str("use Unsafe Jule with unsafe {} scope to make concurrent call", 60), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1ad00e58d:;
			++it;
			goto _iter_begin_1ad00e58d;
		}
		_iter_end_1ad00e58d:;
	};
}



inline void _1c6404470_processExceptionalHandler(_1c63e004e_Eval* _self_, jule::Ptr<_1c62d2b01_FnIns>* _196649_f, jule::Ptr<_1c62a22a7_FnCallExpr>* _196665_fc, jule::Ptr<_1c63dd35a_Data>* _196687_d) {
	jule::Bool _196713_resultNeeded = ((!(_1c62d0170_IsVoid((*((*(_196649_f))))._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_1c6327a58_scopeChecker> _196817_csc = nullptr;;
	jule::Ptr<_1c6320754_Scope> _196917_ch = nullptr;;
	jule::Ptr<_1c62c3e88_FnCallExprModel> _197117_model = (*((*(_196687_d))))._field_Model.cast_ptr<_1c62c3e88_FnCallExprModel>(&__jule_any_type34);;
	jule::Ptr<_1c6327a58_scopeChecker> _197517_sc = (*(_self_))._field_lookup.cast_ptr<_1c6327a58_scopeChecker>(0);;
	_196817_csc=_1c633e60d_newChildChecker(_197517_sc);
	if (_196713_resultNeeded) {
		(*(_196817_csc))._field_result=(*(_196649_f));
	};
	_196917_ch=_1c632c84e_getChild(_197517_sc.ptr());
	(*((*((*(_196665_fc))))._field_Exception))._field_Parent=(*(_197517_sc))._field_tree;
	{ jule::Slice<jule::Ptr<_1c6389da6_Var>> &__jule_push_dest = (*((*(_196817_csc))._field_table))._field_Vars; __jule_push_dest.push(_1c64176d6_buildErrorVar(&(_196917_ch), _196665_fc)); };
	_1c632cc6c_checkChildSsc(_197517_sc, &((*((*(_196665_fc))))._field_Exception), &(_196917_ch), &(_196817_csc));
	(*(_197117_model))._field_Assigned=_196713_resultNeeded;
	(*(_197117_model))._field_Except=_196917_ch;
	if ((_196713_resultNeeded && ((*(_196817_csc))._field_result != nullptr))) {
		_1c63e059e_pushErr(_self_, (*((*(_196665_fc))))._field_Token, jule::Str("exceptional returns an expression, therefore else block should return expression", 80), jule::Slice<jule::Any>());
	};
}



inline void _1c64047d3_callFn(jule::Ptr<_1c63e004e_Eval> _self_, jule::Ptr<_1c62a22a7_FnCallExpr>* _199331_fc, jule::Ptr<_1c63dd35a_Data>* _199353_d) {
	jule::Ptr<_1c62d2b01_FnIns> _199417_f = _1c6421e60_Fn((*((*(_199353_d))))._field_Kind.ptr());;
	if (_1c62d4086_IsBuiltin(_199417_f.ptr())) {
		_1c6403bde_callBuiltinFn(_self_, _199331_fc, _199353_d);
		return;;
	};
	if ((_1c63e132a_isGlobal(_self_.ptr()) && (*((*(_199417_f))._field_Decl))._field_Exceptional)) {
		_1c63e059e_pushErr(_self_.ptr(), (*((*(_199331_fc))))._field_Token, jule::Str("exceptionals are not allowed in global scope", 44), jule::Slice<jule::Any>());
		_1c63e0912_pushSuggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48), jule::Slice<jule::Any>());
		(*(_199353_d))=nullptr;
		return;;
	};
	if (((!(_1c62d0406_IsMethod((*(_199417_f))._field_Decl.ptr()))) && _1c6439142_hasDirective(&((*((*(_199417_f))._field_Decl))._field_Directives), jule::Str("test", 4)))) {
		_1c63e059e_pushErr(_self_.ptr(), (*((*(_199331_fc))))._field_Token, jule::Str("you cannot call test functions", 30), jule::Slice<jule::Any>());
		(*(_199353_d))=nullptr;
		return;;
	};
	if (((((!((*((*(_199353_d))))._field_Mutable)) && _1c62d0406_IsMethod((*(_199417_f))._field_Decl.ptr())) && (!((*((*(_199417_f))._field_Decl))._field_Statically))) && (*((*((*(_199417_f))._field_Decl))._field_Params[0LL]))._field_Mutable)) {
		if ((!((*(_self_))._field_immutable))) {
			_1c63e059e_pushErr(_self_.ptr(), (*((*(_199331_fc))))._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_1c62c2c56_StructLitExprModel> _202021_lit = _1c641a91a_isLitBased(&((*((*(_199353_d))))._field_Model));;
			if ((_202021_lit == nullptr)) {
				_1c63e059e_pushErr(_self_.ptr(), (*((*(_199331_fc))))._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
			} else {
				_1c63d134d_checkMutRiskOfStructLit(&((*(_self_))._field_s), &(_202021_lit));
			};
		};
	} else if (((!(_1c63e1094_isUnsafe(_self_.ptr()))) && (*((*(_199417_f))._field_Decl))._field_Unsafety)) {
		_1c63e059e_pushErr(_self_.ptr(), (*((*(_199331_fc))))._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	jule::Bool _203217_dynamicAnnotation = ((((*((*(_199417_f))._field_Decl))._field_Generics.len() > 0LL) && ((*(_199417_f))._field_Generics.len() == 0LL)) && ((*(_199417_f))._field_Params.len() > 0LL));;
	if (_203217_dynamicAnnotation) {
		(*(_199417_f))._field_Generics=jule::Slice<jule::Ptr<_1c641bb3b_InsGeneric>>::alloc((*((*(_199417_f))._field_Decl))._field_Generics.len(), (*((*(_199417_f))._field_Decl))._field_Generics.len());
	} else if (((*(_199417_f))._field_Generics.len() != (*((*(_199417_f))._field_Decl))._field_Generics.len())) {
		_1c636bb35_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I64>((*((*(_199417_f))._field_Decl))._field_Generics.len()), static_cast<jule::I64>((*(_199417_f))._field_Generics.len()), (*((*(_199331_fc))))._field_Token);
		(*(_199353_d))=nullptr;
		return;;
	};
	jule::Ptr<_1c63679bb_Sema> _204117_old = (*(_self_))._field_s;;
	if (((*((*(_199417_f))._field_Decl))._field_Owner != nullptr)) {
		(*(_self_))._field_s=(*((*((*(_199417_f))._field_Decl))._field_Owner))._field_sema;
	};
	__JULE_DEFER({
		if ((_204117_old != (*(_self_))._field_s)) {
			((*(_204117_old))._field_errors).append((*((*(_self_))._field_s))._field_errors);;
			(*((*(_self_))._field_s))._field_errors=nullptr;
		};
		(*(_self_))._field_s=_204117_old;
	});;
	_1c63cd900_fnCallArgChecker _205417_fcac = _1c63cd900_fnCallArgChecker{._field_e=_self_, ._field_args=(*((*(_199331_fc))))._field_Args, ._field_errorToken=(*((*(_199331_fc))))._field_Token, ._field_dynamicAnnotation=_203217_dynamicAnnotation, };;
	if ((!(_203217_dynamicAnnotation))) {
		if ((!((*(_199417_f))._field_reloaded))) {
			jule::Bool _206321_ok = _1c6375710_reloadFnInsTypes((*(_self_))._field_s, _199417_f);;
			(*(_199417_f))._field_reloaded=true;
			if ((!(_206321_ok))) {
				(*(_199353_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1c62d2b01_FnIns> _207021_existInstance = _1c62d176a_appendInstance((*(_199417_f))._field_Decl.ptr(), &(_199417_f));;
		if ((_207021_existInstance != nullptr)) {
			_199417_f=_207021_existInstance;
		};
	} else if ((!(_1c6373e6c_buildFnNonGenericTypeKinds((*(_self_))._field_s, &(_199417_f), &(_205417_fcac._field_ignored))))) {
		(*(_199353_d))=nullptr;
		return;;
	};
	_205417_fcac._field_f=_199417_f;
	jule::Bool _208117_ok = false;;
	if (((*((*(_199417_f))._field_Decl))._field_Owner != nullptr)) {
		std::swap(_204117_old, (*(_self_))._field_s);
		_208117_ok=_1c63d0ea7_check(&_205417_fcac);
		std::swap(_204117_old, (*(_self_))._field_s);
	} else {
		_208117_ok=_1c63d0ea7_check(&_205417_fcac);
	};
	if (_203217_dynamicAnnotation) {
		if ((!(_208117_ok))) {
			(*(_199353_d))=nullptr;
			return;;
		};
		if ((!(_1c63ebb82_checkGenericFn(_self_, &(_199417_f), &((*((*(_199331_fc))))._field_Token), &((*((*(_199353_d))))._field_Model))))) {
			(*(_199353_d))=nullptr;
			return;;
		};
	};
	jule::Any _210117_callModel = (*((*(_199353_d))))._field_Model;;
	if (_1c62d0170_IsVoid((*(_199417_f))._field_Decl.ptr())) {
		(*(_199353_d))=_1c6418d58_buildVoidData();
	} else {
		(*((*(_199353_d))))._field_Kind=(*(_199417_f))._field_Result;
		(*((*(_199353_d))))._field_Lvalue=false;
	};
	jule::Ptr<_1c62c3e88_FnCallExprModel> _211017_model = jule::new_ptr<_1c62c3e88_FnCallExprModel>(_1c62c3e88_FnCallExprModel{._field_Token=(*((*(_199331_fc))))._field_Token, ._field_Func=_199417_f, ._field_IsCo=(*((*(_199331_fc))))._field_IsCo, ._field_Expr=_210117_callModel, ._field_Args=_205417_fcac._field_argModels, });;
	(*((*(_199353_d))))._field_Model=jule::Any(_211017_model, &__jule_any_type34);
	(*((*(_199353_d))))._field_Mutable=true;
	if ((*((*(_199417_f))._field_Decl))._field_Exceptional) {
		if ((*((*(_199331_fc))))._field_IsCo) {
			_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*((*(_199331_fc))))._field_Token, jule::Str("concurrent calls not supports exceptionals", 42), jule::Slice<jule::Any>());
			_1c636a969_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63), jule::Slice<jule::Any>());
		};
		{
			
			if (_1c62a262b_Unhandled((*(_199331_fc)).ptr())) {
				_case_begin_1ad0359c1:;
				{
					_1c63e059e_pushErr(_self_.ptr(), (*((*(_199331_fc))))._field_Token, jule::Str("exceptionals must be handled", 28), jule::Slice<jule::Any>());
					_1c63e0912_pushSuggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47), jule::Slice<jule::Any>());
				}
			}
			else if (_1c62a28b2_Ignored((*(_199331_fc)).ptr())) {
				_case_begin_1ad035a37:;
				{
					goto _match_end_1ad0344b4;
				}
			}
			else {
				_case_begin_1ad034519:;
				{
					_1c6404470_processExceptionalHandler(_self_.ptr(), &(_199417_f), _199331_fc, _199353_d);
				}
			}
			_match_end_1ad0344b4:;
		};
	} else if ((!(_1c62a262b_Unhandled((*(_199331_fc)).ptr())))) {
		_1c63e059e_pushErr(_self_.ptr(), (*((*(_199331_fc))))._field_Token, jule::Str("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	if ((*((*(_199331_fc))))._field_IsCo) {
		_1c6404052_checkFnOfConcurrentCall(_self_.ptr(), &((*(_211017_model))._field_Func), (*((*(_199331_fc))))._field_Token);
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c6404b24_evalFnCall(jule::Ptr<_1c63e004e_Eval> _self_, jule::Ptr<_1c62a22a7_FnCallExpr> _214534_fc) {
	jule::Ptr<_1c641d522_TypeKind> _214617_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_214617_prefix;
	});;
	{
		auto &_match_expr{ (*((*(_214534_fc))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ad03ee3c:;
			{
				if ((*((*((*(_214534_fc))._field_Expr))._field_Token))._field_Kind.equal("error", 5)) {
					return _1c650e080_builtinCallerError(&(_self_), &(_214534_fc));;
				};
			}
		}
		_match_end_1ad03edd7:;
	};
	jule::Ptr<_1c63dd35a_Data> _215917_d = _1c640c214_evalExprKind(_self_, (*((*(_214534_fc))._field_Expr))._field_Kind);;
	if ((_215917_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_215917_d))._field_Decl) {
		_1c640387b_callTypeFn(_self_, &(_214534_fc), &(_215917_d));
		return _215917_d;;
	};
	if ((_1c6421e60_Fn((*(_215917_d))._field_Kind.ptr()) == nullptr)) {
		_1c63e059e_pushErr(_self_.ptr(), (*(_214534_fc))._field_Token, jule::Str("attempting to call a non-function", 33), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1c64047d3_callFn(_self_, &(_214534_fc), &(_215917_d));
	return _215917_d;;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6405020_evalEnumStatic(_1c63e004e_Eval* _self_, jule::Ptr<_1c62e5691_Enum> _217837_enm, jule::Ptr<_1c6283a3b_Token> _217849_ident) {
	jule::Ptr<_1c62e4b24_EnumItem> _217917_item = _1c62e6285_FindItem(_217837_enm.ptr(), (*(_217849_ident))._field_Kind);;
	if ((_217917_item == nullptr)) {
		_1c63e059e_pushErr(_self_, _217849_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_217837_enm))._field_Ident, &__jule_any_type4),jule::Any((*(_217849_ident))._field_Kind, &__jule_any_type4)}));
	};
	return _1c641a651_evalEnumStatic(&(_217837_enm), &(_217917_item));;
}



inline jule::Ptr<_1c63dd35a_Data> _1c640541b_evalTypeEnumStatic(_1c63e004e_Eval* _self_, jule::Ptr<_1c62e6d9b_TypeEnum> _218641_enm, jule::Ptr<_1c6283a3b_Token> _218657_ident) {
	jule::Ptr<_1c62e67c4_TypeEnumItem> _218717_item = _1c62e795c_FindItem(_218641_enm.ptr(), (*(_218657_ident))._field_Kind);;
	if ((_218717_item == nullptr)) {
		_1c63e059e_pushErr(_self_, _218657_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_218641_enm))._field_Ident, &__jule_any_type4),jule::Any((*(_218657_ident))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		
		if ((_1c6421426_Enum((*((*(_218717_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad0485b6:;
			{
				return _1c63e3915__evalEnum(_self_, _1c6421426_Enum((*((*(_218717_item))._field_Kind))._field_Kind.ptr()));;
			}
		}
		else if ((_1c64216ac_TypeEnum((*((*(_218717_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad0482ca:;
			{
				return _1c63e4152__evalTypeEnum(_self_, _1c64216ac_TypeEnum((*((*(_218717_item))._field_Kind))._field_Kind.ptr()));;
			}
		}
		else if ((_1c64221e6_Struct((*((*(_218717_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad048341:;
			{
				return _1c63e488e__evalStruct(_self_, _1c64221e6_Struct((*((*(_218717_item))._field_Kind))._field_Kind.ptr()));;
			}
		}
		else {
			_case_begin_1ad0465a3:;
			{
				jule::Ptr<_1c63dd35a_Data> _220021_d = jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=(*((*(_218717_item))._field_Kind))._field_Kind, ._field_Decl=true, });;
				(*(_220021_d))._field_Model=jule::Any((*(_220021_d))._field_Kind, &__jule_any_type83);
				return _220021_d;;
			}
		}
		_match_end_1ad0472eb:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c6405817_evalStructStatic(_1c63e004e_Eval* _self_, jule::Ptr<_1c62bcab9_StructIns> _220939_s, jule::Ptr<_1c6283a3b_Token> _220954_ident) {
	jule::Ptr<_1c63dd35a_Data> _221017_d = jule::new_ptr<_1c63dd35a_Data>();;
	;
	jule::Ptr<_1c62cebec_Fn> _221417_method = _1c62bdb31_FindMethod(_220939_s.ptr(), (*(_220954_ident))._field_Kind, true);;
	if ((_221417_method != nullptr)) {
		if ((!(_1c636ad65_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_221417_method))._field_Public, (*(_221417_method))._field_Token)))) {
			_1c63e059e_pushErr(_self_, _220954_ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_220954_ident))._field_Kind, &__jule_any_type4)}));
			_1c63e0912_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1c62d2b01_FnIns> _222121_ins = _1c62d145c_instance(_221417_method);;
		(*(_222121_ins))._field_Owner=_220939_s;
		_1acd9c67e_pushReference(_self_, &(_222121_ins));
		(*(_221017_d))._field_Model=jule::Any(jule::new_ptr<_1c62c6ed0_StructStaticIdentExprModel>(_1c62c6ed0_StructStaticIdentExprModel{._field_Structure=_220939_s, ._field_Expr=(*(_221017_d))._field_Model, ._field_Method=_222121_ins}), &__jule_any_type95);
		(*(_221017_d))._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(_222121_ins, 1)});
		return _221017_d;;
	};
	jule::Ptr<_1c6389da6_Var> _223517_sttc = _1c62be2b3_FindStatic(_220939_s.ptr(), (*(_220954_ident))._field_Kind);;
	if ((_223517_sttc != nullptr)) {
		return _1c63e694b_evalVar(_self_, _223517_sttc, _220954_ident);;
	};
	_1c63e059e_pushErr(_self_, _220954_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_220939_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any((*(_220954_ident))._field_Kind, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6405cbd_evalTraitSubIdent(_1c63e004e_Eval* _self_, jule::Ptr<_1c63dd35a_Data> _224440_d, jule::Ptr<_1c62e2e96_Trait> _224454_trt, jule::Ptr<_1c6283a3b_Token> _224471_ident) {
	jule::Ptr<_1c62cebec_Fn> _224517_f = _1c62e3b45_FindMethod(_224454_trt.ptr(), (*(_224471_ident))._field_Kind);;
	if ((_224517_f == nullptr)) {
		_1c63e059e_pushErr(_self_, _224471_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_224454_trt))._field_Ident, &__jule_any_type4),jule::Any((*(_224471_ident))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(_1c62d145c_instance(_224517_f), 1)}), ._field_Model=jule::Any(jule::new_ptr<_1c62c6188_TraitSubIdentExprModel>(_1c62c6188_TraitSubIdentExprModel{._field_Token=_224471_ident, ._field_Expr=(*(_224440_d))._field_Model, ._field_Method=_224517_f, ._field_Trt=_224454_trt}), &__jule_any_type96), });;
}



inline jule::Ptr<_1c63dd35a_Data> _1c640632e_evalStructSubIdentField(_1c63e004e_Eval* _self_, jule::Ptr<_1c63dd35a_Data>* _226447_d, jule::Ptr<_1c62bcab9_StructIns>* _226462_s, jule::Ptr<_1c6283a3b_Token>* _226482_tok, jule::Ptr<_1c62bc019_FieldIns>* _2264100_f) {
	jule::Ptr<_1c62c6a29_StructSubIdentExprModel> _226517_model = jule::new_ptr<_1c62c6a29_StructSubIdentExprModel>(_1c62c6a29_StructSubIdentExprModel{._field_Token=(*(_226482_tok)), ._field_Expr=jule::new_ptr<_1c63dd35a_Data>((*((*(_226447_d))))), ._field_Field=(*(_2264100_f)), ._field_Owner=(*(_226462_s))});;
	(*((*(_226447_d))))._field_Model=jule::Any(_226517_model, &__jule_any_type97);
	(*((*(_226447_d))))._field_Kind=(*((*(_2264100_f))))._field_Kind;
	(*((*(_226447_d))))._field_Lvalue=true;
	if (((*((*((*(_2264100_f))))._field_Decl))._field_Mutable && (!((*((*(_226447_d))))._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1ad059bc1:;
				{
					jule::Ptr<_1c6327a58_scopeChecker> _227921_scope = _1c632ab49_getRoot((*(_self_))._field_lookup.cast_ptr<_1c6327a58_scopeChecker>(0));;
					(*((*(_226447_d))))._field_Mutable=(((*(_227921_scope))._field_owner != nullptr) && ((*((*(_227921_scope))._field_owner))._field_Owner == (*(_226462_s))));
				}
			}
			_match_end_1ad059b6b:;
		};
	};
	return (*(_226447_d));;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6406890_evalStructSubIdent(_1c63e004e_Eval* _self_, jule::Ptr<_1c63dd35a_Data> _228741_d, jule::Ptr<_1c62bcab9_StructIns> _228755_s, jule::Ptr<_1c62a1691_SubIdentExpr> _228774_si, jule::Bool _228793_ref) {
	jule::Ptr<_1c62bc019_FieldIns> _228817_f = _1c62bde72_FindField(_228755_s.ptr(), (*((*(_228774_si))._field_Ident))._field_Kind);;
	if ((_228817_f != nullptr)) {
		if ((!(_1c636ad65_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_228817_f))._field_Decl))._field_Public, (*((*(_228817_f))._field_Decl))._field_Token)))) {
			_1c63e059e_pushErr(_self_, (*(_228774_si))._field_Ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_228817_f))._field_Decl))._field_Ident, &__jule_any_type4)}));
			_1c63e0912_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		return _1c640632e_evalStructSubIdentField(_self_, &(_228741_d), &(_228755_s), &((*(_228774_si))._field_Ident), &(_228817_f));;
	};
	;
	jule::Ptr<_1c62cebec_Fn> _229817_m = _1c62bdb31_FindMethod(_228755_s.ptr(), (*((*(_228774_si))._field_Ident))._field_Kind, false);;
	if ((_229817_m == nullptr)) {
		_1c63e059e_pushErr(_self_, (*(_228774_si))._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_228755_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any((*((*(_228774_si))._field_Ident))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	if ((!(_1c636ad65_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_229817_m))._field_Public, (*(_229817_m))._field_Token)))) {
		_1c63e059e_pushErr(_self_, (*(_228774_si))._field_Ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_229817_m))._field_Ident, &__jule_any_type4)}));
		_1c63e0912_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	if ((_1c62cdaca_IsRef((*(_229817_m))._field_Params[0LL].ptr()) && (!(_228793_ref)))) {
		_1c63e059e_pushErr(_self_, (*(_228774_si))._field_Ident, jule::Str("reference method cannot use with non-reference instance", 55), jule::Slice<jule::Any>());
	};
	_1c63e543e_checkDeprecated(_self_, &((*(_229817_m))._field_Directives), (*(_228774_si))._field_Ident);
	jule::Ptr<_1c62d2b01_FnIns> _231417_ins = _1c62d145c_instance(_229817_m);;
	(*(_231417_ins))._field_Owner=_228755_s;
	_1acd9c67e_pushReference(_self_, &(_231417_ins));
	jule::Ptr<_1c63dd35a_Data> _231717_model = jule::new_ptr<_1c63dd35a_Data>((*(_228741_d)));;
	(*(_228741_d))._field_Model=jule::Any(jule::new_ptr<_1c62c6a29_StructSubIdentExprModel>(_1c62c6a29_StructSubIdentExprModel{._field_Token=(*(_228774_si))._field_Ident, ._field_Expr=_231717_model, ._field_Method=_231417_ins, ._field_Owner=_228755_s}), &__jule_any_type97);
	(*(_228741_d))._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(_231417_ins, 1)});
	return _228741_d;;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6406bd1_evalIntTypeStatic(_1c63e004e_Eval* _self_, jule::Ptr<_1c6283a3b_Token> _232836_ident) {
	;
	{
		auto &_match_expr{ (*(_232836_ident))._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ad0691a8:;
			{
				jule::Ptr<_1dc260590_Const> _233221_c = static__1dc2609d0_NewI64(static_cast<jule::I64>(_1dc2587a8_MaxI(jule::Str("int", 3))));;
				(*(_233221_c))._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650a07b_primInt, ._field_Model=jule::Any(_233221_c, &__jule_any_type19), ._field_Constant=_233221_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1ad069a16:;
			{
				jule::Ptr<_1dc260590_Const> _234021_c = static__1dc2609d0_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1dc258ca3_Min(jule::Str("int", 3)))));;
				(*(_234021_c))._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650a07b_primInt, ._field_Model=jule::Any(_234021_c, &__jule_any_type19), ._field_Constant=_234021_c});;
			}
		}
		else {
			_case_begin_1ad068d45:;
			{
				_1c63e059e_pushErr(_self_, _232836_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3), &__jule_any_type4),jule::Any((*(_232836_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ad068ce0:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c6407022_evalUintTypeStatic(_1c63e004e_Eval* _self_, jule::Ptr<_1c6283a3b_Token> _235337_ident) {
	;
	{
		auto &_match_expr{ (*(_235337_ident))._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ad069054:;
			{
				jule::Ptr<_1dc260590_Const> _235721_c = static__1dc260c99_NewU64(static_cast<jule::U64>(_1dc258a72_MaxU(jule::Str("uint", 4))));;
				(*(_235721_c))._field_Kind=jule::Str("uint", 4);
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c6509ba2_primUint, ._field_Model=jule::Any(_235721_c, &__jule_any_type19), ._field_Constant=_235721_c});;
			}
		}
		else {
			_case_begin_1ad06c871:;
			{
				_1c63e059e_pushErr(_self_, _235337_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4), &__jule_any_type4),jule::Any((*(_235337_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ad06c81b:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c6407363_evalI8TypeStatic(_1c63e004e_Eval* _self_, jule::Ptr<_1c6283a3b_Token> _237035_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_237035_ident))._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ad070c3c:;
			{
				jule::Ptr<_1dc260590_Const> _237621_c = static__1dc2609d0_NewI64(127LL);;
				(*(_237621_c))._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650a345_primI8, ._field_Model=jule::Any(_237621_c, &__jule_any_type19), ._field_Constant=_237621_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1ad07159a:;
			{
				jule::Ptr<_1dc260590_Const> _238421_c = static__1dc2609d0_NewI64(-128LL);;
				(*(_238421_c))._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650a345_primI8, ._field_Model=jule::Any(_238421_c, &__jule_any_type19), ._field_Constant=_238421_c});;
			}
		}
		else {
			_case_begin_1ad0708c9:;
			{
				_1c63e059e_pushErr(_self_, _237035_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2), &__jule_any_type4),jule::Any((*(_237035_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ad070874:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c64076a4_evalI16TypeStatic(_1c63e004e_Eval* _self_, jule::Ptr<_1c6283a3b_Token> _239736_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_239736_ident))._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ad074bca:;
			{
				jule::Ptr<_1dc260590_Const> _240321_c = static__1dc2609d0_NewI64(32767LL);;
				(*(_240321_c))._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650a60e_primI16, ._field_Model=jule::Any(_240321_c, &__jule_any_type19), ._field_Constant=_240321_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1ad075538:;
			{
				jule::Ptr<_1dc260590_Const> _241121_c = static__1dc2609d0_NewI64(-32768LL);;
				(*(_241121_c))._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650a60e_primI16, ._field_Model=jule::Any(_241121_c, &__jule_any_type19), ._field_Constant=_241121_c});;
			}
		}
		else {
			_case_begin_1ad074867:;
			{
				_1c63e059e_pushErr(_self_, _239736_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3), &__jule_any_type4),jule::Any((*(_239736_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ad074812:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c64079e5_evalI32TypeStatic(_1c63e004e_Eval* _self_, jule::Ptr<_1c6283a3b_Token> _242436_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_242436_ident))._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ad078b68:;
			{
				jule::Ptr<_1dc260590_Const> _243021_c = static__1dc2609d0_NewI64(2147483647LL);;
				(*(_243021_c))._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650a8c8_primI32, ._field_Model=jule::Any(_243021_c, &__jule_any_type19), ._field_Constant=_243021_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1ad0794c6:;
			{
				jule::Ptr<_1dc260590_Const> _243821_c = static__1dc2609d0_NewI64(-2147483648LL);;
				(*(_243821_c))._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650a8c8_primI32, ._field_Model=jule::Any(_243821_c, &__jule_any_type19), ._field_Constant=_243821_c});;
			}
		}
		else {
			_case_begin_1ad078805:;
			{
				_1c63e059e_pushErr(_self_, _242436_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3), &__jule_any_type4),jule::Any((*(_242436_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ad0787a0:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c6407d36_evalI64TypeStatic(_1c63e004e_Eval* _self_, jule::Ptr<_1c6283a3b_Token> _245136_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_245136_ident))._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ad07cb06:;
			{
				jule::Ptr<_1dc260590_Const> _245721_c = static__1dc2609d0_NewI64(jule::MAX_I64);;
				(*(_245721_c))._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650ab92_primI64, ._field_Model=jule::Any(_245721_c, &__jule_any_type19), ._field_Constant=_245721_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1ad07d464:;
			{
				jule::Ptr<_1dc260590_Const> _246521_c = static__1dc2609d0_NewI64(jule::MIN_I64);;
				(*(_246521_c))._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650ab92_primI64, ._field_Model=jule::Any(_246521_c, &__jule_any_type19), ._field_Constant=_246521_c});;
			}
		}
		else {
			_case_begin_1ad07c793:;
			{
				_1c63e059e_pushErr(_self_, _245136_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3), &__jule_any_type4),jule::Any((*(_245136_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ad07c73d:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c6408177_evalU8TypeStatic(_1c63e004e_Eval* _self_, jule::Ptr<_1c6283a3b_Token> _247835_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_247835_ident))._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ad081665:;
			{
				jule::Ptr<_1dc260590_Const> _248321_c = static__1dc260c99_NewU64(255LLU);;
				(*(_248321_c))._field_Kind=jule::Str("u8", 2);
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650ae5b_primU8, ._field_Model=jule::Any(_248321_c, &__jule_any_type19), ._field_Constant=_248321_c});;
			}
		}
		else {
			_case_begin_1ad080dd4:;
			{
				_1c63e059e_pushErr(_self_, _247835_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2), &__jule_any_type4),jule::Any((*(_247835_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ad08129c:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c64084b8_evalU16TypeStatic(_1c63e004e_Eval* _self_, jule::Ptr<_1c6283a3b_Token> _249636_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_249636_ident))._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ad0841d4:;
			{
				jule::Ptr<_1dc260590_Const> _250121_c = static__1dc260c99_NewU64(65535LLU);;
				(*(_250121_c))._field_Kind=jule::Str("u16", 3);
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650b225_primU16, ._field_Model=jule::Any(_250121_c, &__jule_any_type19), ._field_Constant=_250121_c});;
			}
		}
		else {
			_case_begin_1ad083953:;
			{
				_1c63e059e_pushErr(_self_, _249636_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3), &__jule_any_type4),jule::Any((*(_249636_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ad083d1b:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c6408809_evalU32TypeStatic(_1c63e004e_Eval* _self_, jule::Ptr<_1c6283a3b_Token> _251436_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_251436_ident))._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ad086c53:;
			{
				jule::Ptr<_1dc260590_Const> _251921_c = static__1dc260c99_NewU64(4294967295LLU);;
				(*(_251921_c))._field_Kind=jule::Str("u32", 3);
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650b4de_primU32, ._field_Model=jule::Any(_251921_c, &__jule_any_type19), ._field_Constant=_251921_c});;
			}
		}
		else {
			_case_begin_1ad0864c2:;
			{
				_1c63e059e_pushErr(_self_, _251436_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3), &__jule_any_type4),jule::Any((*(_251436_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ad08688a:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c6408b4a_evalU64TypeStatic(_1c63e004e_Eval* _self_, jule::Ptr<_1c6283a3b_Token> _253236_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_253236_ident))._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ad0897c2:;
			{
				jule::Ptr<_1dc260590_Const> _253721_c = static__1dc260c99_NewU64(jule::MAX_U64);;
				(*(_253721_c))._field_Kind=jule::Str("u64", 3);
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650b962_primU64, ._field_Model=jule::Any(_253721_c, &__jule_any_type19), ._field_Constant=_253721_c});;
			}
		}
		else {
			_case_begin_1ad089041:;
			{
				_1c63e059e_pushErr(_self_, _253236_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3), &__jule_any_type4),jule::Any((*(_253236_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ad089409:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c6408e8b_evalF32TypeStatic(_1c63e004e_Eval* _self_, jule::Ptr<_1c6283a3b_Token> _255036_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_255036_ident))._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ad08cac2:;
			{
				jule::Ptr<_1dc260590_Const> _255721_c = static__1dc2615e6_NewF64(340282346638528860000000000000000000000.0);;
				(*(_255721_c))._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650bc2b_primF32, ._field_Model=jule::Any(_255721_c, &__jule_any_type19), ._field_Constant=_255721_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1ad08d430:;
			{
				jule::Ptr<_1dc260590_Const> _256521_c = static__1dc2615e6_NewF64(-340282346638528860000000000000000000000.0);;
				(*(_256521_c))._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650bc2b_primF32, ._field_Model=jule::Any(_256521_c, &__jule_any_type19), ._field_Constant=_256521_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1ad08d496:;
			{
				jule::Ptr<_1dc260590_Const> _257321_c = static__1dc2615e6_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				(*(_257321_c))._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650bc2b_primF32, ._field_Model=jule::Any(_257321_c, &__jule_any_type19), ._field_Constant=_257321_c});;
			}
		}
		else {
			_case_begin_1ad08c75e:;
			{
				_1c63e059e_pushErr(_self_, _255036_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3), &__jule_any_type4),jule::Any((*(_255036_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ad08c709:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c64092cc_evalF64TypeStatic(_1c63e004e_Eval* _self_, jule::Ptr<_1c6283a3b_Token> _258636_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_258636_ident))._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ad092e18:;
			{
				jule::Ptr<_1dc260590_Const> _259321_c = static__1dc2615e6_NewF64(jule::MAX_F64);;
				(*(_259321_c))._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650bee5_primF64, ._field_Model=jule::Any(_259321_c, &__jule_any_type19), ._field_Constant=_259321_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1ad093776:;
			{
				jule::Ptr<_1dc260590_Const> _260121_c = static__1dc2615e6_NewF64(jule::MIN_F64);;
				(*(_260121_c))._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650bee5_primF64, ._field_Model=jule::Any(_260121_c, &__jule_any_type19), ._field_Constant=_260121_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1ad0937dc:;
			{
				jule::Ptr<_1dc260590_Const> _260921_c = static__1dc2615e6_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				(*(_260921_c))._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650bee5_primF64, ._field_Model=jule::Any(_260921_c, &__jule_any_type19), ._field_Constant=_260921_c});;
			}
		}
		else {
			_case_begin_1ad092aa5:;
			{
				_1c63e059e_pushErr(_self_, _258636_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3), &__jule_any_type4),jule::Any((*(_258636_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ad092a50:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c64096c8_evalPrimStatic(_1c63e004e_Eval* _self_, jule::Str _262233_kind, jule::Ptr<_1c6283a3b_Token> _262244_ident) {
	{
		auto &_match_expr{ _262233_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1ad097318:;
			{
				return _1c6406bd1_evalIntTypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1ad096c0d:;
			{
				return _1c6407022_evalUintTypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1ad096db7:;
			{
				return _1c6407363_evalI8TypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1ad096e2d:;
			{
				return _1c64076a4_evalI16TypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1ad096e94:;
			{
				return _1c64079e5_evalI32TypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1ad09700a:;
			{
				return _1c6407d36_evalI64TypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1ad097aee:;
			{
				return _1c6408177_evalU8TypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1ad097b65:;
			{
				return _1c64084b8_evalU16TypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1ad097bcb:;
			{
				return _1c6408809_evalU32TypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1ad097c42:;
			{
				return _1c6408b4a_evalU64TypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1ad097ca8:;
			{
				return _1c6408e8b_evalF32TypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1ad097d1e:;
			{
				return _1c64092cc_evalF64TypeStatic(_self_, _262244_ident);;
			}
		}
		else {
			_case_begin_1ad092ca3:;
			{
				_1c63e059e_pushErr(_self_, _262244_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_262233_kind, &__jule_any_type4),jule::Any((*(_262244_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ad092c4d:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c6409ac4_evalTypeStatic(_1c63e004e_Eval* _self_, jule::Ptr<_1c63dd35a_Data> _265437_d, jule::Ptr<_1c62a1691_SubIdentExpr> _265451_si) {
	{
		
		if ((_1c6420b73_Prim((*(_265437_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad09c31d:;
			{
				return _1c64096c8_evalPrimStatic(_self_, _1c642643c_Str(_1c6420b73_Prim((*(_265437_d))._field_Kind.ptr()).ptr()), (*(_265451_si))._field_Ident);;
			}
		}
		else if ((_1c6421426_Enum((*(_265437_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad09d044:;
			{
				return _1c6405020_evalEnumStatic(_self_, _1c6421426_Enum((*(_265437_d))._field_Kind.ptr()), (*(_265451_si))._field_Ident);;
			}
		}
		else if ((_1c64216ac_TypeEnum((*(_265437_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad09d0aa:;
			{
				return _1c640541b_evalTypeEnumStatic(_self_, _1c64216ac_TypeEnum((*(_265437_d))._field_Kind.ptr()), (*(_265451_si))._field_Ident);;
			}
		}
		else if ((_1c64221e6_Struct((*(_265437_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad09d121:;
			{
				return _1c6405817_evalStructStatic(_self_, _1c64221e6_Struct((*(_265437_d))._field_Kind.ptr()), (*(_265451_si))._field_Ident);;
			}
		}
		else {
			_case_begin_1ad09be66:;
			{
				_1c63e059e_pushErr(_self_, (*(_265451_si))._field_Ident, jule::Str("type @ is not supports sub-defines", 34), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_265437_d))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ad09bdbc:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1ad0a504b_comptimeObjSubIdent(_1c63e004e_Eval* _self_, jule::Ptr<_1c6308c15_comptimeTypeInfo>* _267057_ct, jule::Ptr<_1c63dd35a_Data>* _267077_d, jule::Ptr<_1c62a1691_SubIdentExpr>* _267088_si) {
	jule::Ptr<_1c63dd35a_Data> _267117_cd = _1c630ee19_subIdent((*(_267057_ct)), &((*((*((*(_267088_si))))._field_Ident))._field_Kind));;
	if ((_267117_cd == nullptr)) {
		_1c63e059e_pushErr(_self_, (*((*(_267088_si))))._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*((*(_267077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267088_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267117_cd;;
}

inline jule::Ptr<_1c63dd35a_Data> _1ad0a9605_comptimeObjSubIdent(_1c63e004e_Eval* _self_, jule::Ptr<_1c62e9ca0_comptimeStructField>* _267057_ct, jule::Ptr<_1c63dd35a_Data>* _267077_d, jule::Ptr<_1c62a1691_SubIdentExpr>* _267088_si) {
	jule::Ptr<_1c63dd35a_Data> _267117_cd = _1c62eb5ba_subIdent((*(_267057_ct)), &((*((*((*(_267088_si))))._field_Ident))._field_Kind));;
	if ((_267117_cd == nullptr)) {
		_1c63e059e_pushErr(_self_, (*((*(_267088_si))))._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*((*(_267077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267088_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267117_cd;;
}

inline jule::Ptr<_1c63dd35a_Data> _1ad0adb6a_comptimeObjSubIdent(_1c63e004e_Eval* _self_, jule::Ptr<_1c6301317_comptimeEnumField>* _267057_ct, jule::Ptr<_1c63dd35a_Data>* _267077_d, jule::Ptr<_1c62a1691_SubIdentExpr>* _267088_si) {
	jule::Ptr<_1c63dd35a_Data> _267117_cd = _1c6302318_subIdent((*(_267057_ct)), &((*((*((*(_267088_si))))._field_Ident))._field_Kind));;
	if ((_267117_cd == nullptr)) {
		_1c63e059e_pushErr(_self_, (*((*(_267088_si))))._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*((*(_267077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267088_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267117_cd;;
}

inline jule::Ptr<_1c63dd35a_Data> _1ad0b3224_comptimeObjSubIdent(_1c63e004e_Eval* _self_, jule::Ptr<_1c6303ca9_comptimeParam>* _267057_ct, jule::Ptr<_1c63dd35a_Data>* _267077_d, jule::Ptr<_1c62a1691_SubIdentExpr>* _267088_si) {
	jule::Ptr<_1c63dd35a_Data> _267117_cd = _1c63059d1_subIdent((*(_267057_ct)), &((*((*((*(_267088_si))))._field_Ident))._field_Kind));;
	if ((_267117_cd == nullptr)) {
		_1c63e059e_pushErr(_self_, (*((*(_267088_si))))._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*((*(_267077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267088_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267117_cd;;
}

inline jule::Ptr<_1c63dd35a_Data> _1ad0b7a0e_comptimeObjSubIdent(_1c63e004e_Eval* _self_, jule::Ptr<_1c62ed05b_comptimeStatic>* _267057_ct, jule::Ptr<_1c63dd35a_Data>* _267077_d, jule::Ptr<_1c62a1691_SubIdentExpr>* _267088_si) {
	jule::Ptr<_1c63dd35a_Data> _267117_cd = _1c62ee876_subIdent((*(_267057_ct)), &((*((*((*(_267088_si))))._field_Ident))._field_Kind));;
	if ((_267117_cd == nullptr)) {
		_1c63e059e_pushErr(_self_, (*((*(_267088_si))))._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*((*(_267077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267088_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267117_cd;;
}

inline jule::Ptr<_1c63dd35a_Data> _1ad0bc074_comptimeObjSubIdent(_1c63e004e_Eval* _self_, jule::Ptr<_1c6310227_comptimeValue>* _267057_ct, jule::Ptr<_1c63dd35a_Data>* _267077_d, jule::Ptr<_1c62a1691_SubIdentExpr>* _267088_si) {
	jule::Ptr<_1c63dd35a_Data> _267117_cd = _1c6312768_subIdent((*(_267057_ct)), &((*((*((*(_267088_si))))._field_Ident))._field_Kind));;
	if ((_267117_cd == nullptr)) {
		_1c63e059e_pushErr(_self_, (*((*(_267088_si))))._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*((*(_267077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267088_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267117_cd;;
}

inline jule::Ptr<_1c63dd35a_Data> _1ad0c15d9_comptimeObjSubIdent(_1c63e004e_Eval* _self_, jule::Ptr<_1c6314171_comptimeFile>* _267057_ct, jule::Ptr<_1c63dd35a_Data>* _267077_d, jule::Ptr<_1c62a1691_SubIdentExpr>* _267088_si) {
	jule::Ptr<_1c63dd35a_Data> _267117_cd = _1c631598b_subIdent((*(_267057_ct)), &((*((*((*(_267088_si))))._field_Ident))._field_Kind));;
	if ((_267117_cd == nullptr)) {
		_1c63e059e_pushErr(_self_, (*((*(_267088_si))))._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*((*(_267077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267088_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267117_cd;;
}



inline __jule_tuple_x_1c63dd35a_Data__jule_tuple_bool _1c640a476_tryComptimeObjSubIdent(_1c63e004e_Eval* _self_, jule::Ptr<_1c63dd35a_Data>* _267846_d, jule::Ptr<_1c62a1691_SubIdentExpr> _267860_si) {
	__jule_tuple_x_1c63dd35a_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((_1c6424539_comptimeTypeInfo((*((*(_267846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad0a339b:;
			{
				jule::Ptr<_1c6308c15_comptimeTypeInfo> _268121_ct = _1c6424539_comptimeTypeInfo((*((*(_267846_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1ad0a504b_comptimeObjSubIdent(_self_, &(_268121_ct), _267846_d, &(_267860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c642324c_comptimeStructField((*((*(_267846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad0a2ee4:;
			{
				jule::Ptr<_1c62e9ca0_comptimeStructField> _268421_ct = _1c642324c_comptimeStructField((*((*(_267846_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1ad0a9605_comptimeObjSubIdent(_self_, &(_268421_ct), _267846_d, &(_267860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c6423769_comptimeEnumField((*((*(_267846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad0a305a:;
			{
				jule::Ptr<_1c6301317_comptimeEnumField> _268721_ct = _1c6423769_comptimeEnumField((*((*(_267846_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1ad0adb6a_comptimeObjSubIdent(_self_, &(_268721_ct), _267846_d, &(_267860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c6423c86_comptimeParam((*((*(_267846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad0a30c1:;
			{
				jule::Ptr<_1c6303ca9_comptimeParam> _269021_ct = _1c6423c86_comptimeParam((*((*(_267846_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1ad0b3224_comptimeObjSubIdent(_self_, &(_269021_ct), _267846_d, &(_267860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c6424a56_comptimeStatic((*((*(_267846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad0a3137:;
			{
				jule::Ptr<_1c62ed05b_comptimeStatic> _269321_ct = _1c6424a56_comptimeStatic((*((*(_267846_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1ad0b7a0e_comptimeObjSubIdent(_self_, &(_269321_ct), _267846_d, &(_267860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c6424cdc_comptimeValue((*((*(_267846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad0a3720:;
			{
				jule::Ptr<_1c6310227_comptimeValue> _269621_ct = _1c6424cdc_comptimeValue((*((*(_267846_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1ad0bc074_comptimeObjSubIdent(_self_, &(_269621_ct), _267846_d, &(_267860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c6425073_comptimeFile((*((*(_267846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad0a3786:;
			{
				jule::Ptr<_1c6314171_comptimeFile> _269921_ct = _1c6425073_comptimeFile((*((*(_267846_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1ad0c15d9_comptimeObjSubIdent(_self_, &(_269921_ct), _267846_d, &(_267860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ad0a2e7d:;
			{
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		_match_end_1ad0a2dd4:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c640a872_evalObjSubIdent(_1c63e004e_Eval* _self_, jule::Ptr<_1c63dd35a_Data> _270638_d, jule::Ptr<_1c62a1691_SubIdentExpr> _270652_si) {
	if (_1c628649a_IsIgnoreIdent((*((*(_270652_si))._field_Ident))._field_Kind)) {
		_1c63e059e_pushErr(_self_, (*(_270652_si))._field_Ident, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		jule::Ptr<_1c63dd35a_Data> _271322_compData;;
		jule::Bool _271332_ok = false;;
		({
			__jule_tuple_x_1c63dd35a_Data__jule_tuple_bool __jule_assign_result = _1c640a476_tryComptimeObjSubIdent(_self_, &(_270638_d), _270652_si);
			_271322_compData = __jule_assign_result.__jule_result_arg0;
			_271332_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_271332_ok) {
			return _271322_compData;;
		};
	};
	jule::Ptr<_1c641d522_TypeKind> _271917_kind = (*(_270638_d))._field_Kind;;
	{
		
		if ((_1c6421190_Ptr((*(_270638_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad0c68ca:;
			{
				jule::Ptr<_1c642d3de_Ptr> _272217_ptr = _1c6421190_Ptr((*(_270638_d))._field_Kind.ptr());;
				if (_1c642de28_IsUnsafe(_272217_ptr.ptr())) {
					goto _match_end_1ad0c6864;
				};
				if ((!(_1c63e1094_isUnsafe(_self_)))) {
					_1c63e059e_pushErr(_self_, (*(_270652_si))._field_Ident, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				_271917_kind=(*(_1c6421190_Ptr((*(_270638_d))._field_Kind.ptr())))._field_Elem;
				_1c641ac06_makeImplicitDeref(&(_270638_d), (*(_270652_si))._field_Ident);
			}
		}
		else if ((_1c6420e09_Sptr((*(_270638_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad0c6952:;
			{
				_271917_kind=(*(_1c6420e09_Sptr((*(_270638_d))._field_Kind.ptr())))._field_Elem;
				_1c641ac06_makeImplicitDeref(&(_270638_d), (*(_270652_si))._field_Ident);
			}
		}
		_match_end_1ad0c6864:;
	};
	{
		
		if ((_1c642247c_Trait((*(_270638_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad0c9c30:;
			{
				return _1c6405cbd_evalTraitSubIdent(_self_, _270638_d, _1c642247c_Trait((*(_270638_d))._field_Kind.ptr()), (*(_270652_si))._field_Ident);;
			}
		}
		else if ((_1c64221e6_Struct(_271917_kind.ptr()) != nullptr)) {
			_case_begin_1ad0c9ca7:;
			{
				jule::Ptr<_1c62bcab9_StructIns> _274017_s = _1c64221e6_Struct(_271917_kind.ptr());;
				if (_1c64181ed_isInstancedStruct(_274017_s)) {
					jule::Bool _274225_usedReferenceElem = (_1c6420e09_Sptr((*(_270638_d))._field_Kind.ptr()) != nullptr);;
					return _1c6406890_evalStructSubIdent(_self_, _270638_d, _1c64221e6_Struct(_271917_kind.ptr()), _270652_si, _274225_usedReferenceElem);;
				};
			}
		}
		_match_end_1ad0c9bca:;
	};
	_1c63e059e_pushErr(_self_, (*(_270652_si))._field_Ident, jule::Str("object @ is not supports sub-defines", 36), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_270638_d))._field_Kind.ptr()), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1c63dd35a_Data> _1c640abb3_evalSubIdent(jule::Ptr<_1c63e004e_Eval> _self_, jule::Ptr<_1c62a1691_SubIdentExpr> _275036_si) {
	jule::Ptr<_1c641d522_TypeKind> _275117_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_275117_prefix;
	});;
	jule::Ptr<_1c63dd35a_Data> _275417_d = _1c640c214_evalExprKind(_self_, (*((*(_275036_si))._field_Expr))._field_Kind);;
	if ((_275417_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_275417_d))._field_Decl) {
		return _1c6409ac4_evalTypeStatic(_self_.ptr(), _275417_d, _275036_si);;
	};
	return _1c640a872_evalObjSubIdent(_self_.ptr(), _275417_d, _275036_si);;
}



inline jule::Ptr<_1c63dd35a_Data> _1c640b004_evalTuple(jule::Ptr<_1c63e004e_Eval> _self_, jule::Ptr<_1c629e24e_TupleExpr> _276433_tup) {
	jule::Ptr<_1c642b1de_Tuple> _276517_tupT = jule::new_ptr<_1c642b1de_Tuple>();;
	(*(_276517_tupT))._field_Types=jule::Slice<jule::Ptr<_1c641d522_TypeKind>>::alloc(0LL, (*(_276433_tup))._field_Expr.len());
	jule::Ptr<_1c62c76a6_TupleExprModel> _276817_model = jule::new_ptr<_1c62c76a6_TupleExprModel>(_1c62c76a6_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_1c63dd35a_Data>>::alloc(0LL, (*(_276433_tup))._field_Expr.len())});;
	jule::Bool _277217_ok = true;;
	{
		auto expr = &((*(_276433_tup))._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad0d47c8:;
		if (it != expr_end) {
			jule::Ptr<_1c629d57d_Expr> _277321_expr = *it;
			{
				jule::Ptr<_1c63dd35a_Data> _277421_d = _1c640d028_evalExpr(_self_, _277321_expr);;
				if ((_277421_d == nullptr)) {
					_277217_ok=false;
					goto _iter_next_1ad0d47c8;
				};
				{ jule::Slice<jule::Ptr<_1c641d522_TypeKind>> &__jule_push_dest = (*(_276517_tupT))._field_Types; __jule_push_dest.push((*(_277421_d))._field_Kind); };
				{ jule::Slice<jule::Ptr<_1c63dd35a_Data>> &__jule_push_dest = (*(_276817_model))._field_Datas; __jule_push_dest.push(_277421_d); };
			}
			_iter_next_1ad0d47c8:;
			++it;
			goto _iter_begin_1ad0d47c8;
		}
		_iter_end_1ad0d47c8:;
	};
	if ((!(_277217_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(_276517_tupT, 23)}), ._field_Model=jule::Any(_276817_model, &__jule_any_type81), });;
}



inline jule::Ptr<_1c63dd35a_Data> _1c640b400_evalMap(jule::Ptr<_1c63e004e_Eval> _self_, jule::Ptr<_1c642bc8e_Map> _279331_m, jule::Ptr<_1c62a3a7d_BraceLit> _279344_lit) {
	jule::Ptr<_1c62c5572_MapExprModel> _279417_model = jule::new_ptr<_1c62c5572_MapExprModel>(_1c62c5572_MapExprModel{._field_KeyKind=(*(_279331_m))._field_Key, ._field_ValKind=(*(_279331_m))._field_Val, });;
	{
		auto expr = &((*(_279344_lit))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad0d8568:;
		if (it != expr_end) {
			jule::Ptr<_1c629d57d_Expr> _279921_expr = *it;
			{
				{
					auto &_match_expr{ (*(_279921_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type78) {
						_case_begin_1ad0d9602:;
						{
							goto _match_end_1ad0d9206;
						}
					}
					else {
						_case_begin_1ad0d925b:;
						{
							_1c63e059e_pushErr(_self_.ptr(), (*(_279344_lit))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1ad0d9206:;
				};
				jule::Ptr<_1c62a43a8_KeyValPair> _280921_pair = (*(_279921_expr))._field_Kind.cast_ptr<_1c62a43a8_KeyValPair>(&__jule_any_type78);;
				jule::Ptr<_1c63dd35a_Data> _281121_key = _1c640d028_evalExpr(_self_, (*(_280921_pair))._field_Key);;
				if ((_281121_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1c63dd35a_Data> _281621_val = _1c640d028_evalExpr(_self_, (*(_280921_pair))._field_Val);;
				if ((_281621_val == nullptr)) {
					return nullptr;;
				};
				_1c6373114_checkAssignType((*(_self_))._field_s, false, &((*(_279331_m))._field_Key), &(_281121_key), (*(_280921_pair))._field_Colon);
				_1c6373114_checkAssignType((*(_self_))._field_s, false, &((*(_279331_m))._field_Val), &(_281621_val), (*(_280921_pair))._field_Colon);
				{ jule::Slice<jule::Ptr<_1c62c50bb_KeyValPairExprModel>> &__jule_push_dest = (*(_279417_model))._field_Entries; __jule_push_dest.push(jule::new_ptr<_1c62c50bb_KeyValPairExprModel>(_1c62c50bb_KeyValPairExprModel{._field_Key=(*(_281121_key))._field_Model, ._field_Val=(*(_281621_val))._field_Model})); };
			}
			_iter_next_1ad0d8568:;
			++it;
			goto _iter_begin_1ad0d8568;
		}
		_iter_end_1ad0d8568:;
	};
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(_279331_m, 24)}), ._field_Mutable=true, ._field_Model=jule::Any(_279417_model, &__jule_any_type98), });;
}



inline jule::Ptr<_1c63dd35a_Data> _1c640b741_evalBraceLit(jule::Ptr<_1c63e004e_Eval> _self_, jule::Ptr<_1c62a3a7d_BraceLit> _283736_lit) {
	{
		
		if (((*(_self_))._field_prefix == nullptr)) {
			_case_begin_1ad0e096b:;
			{
				_1c63e059e_pushErr(_self_.ptr(), (*(_283736_lit))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1c6422713_Map((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1ad0e09e3:;
			{
				return _1c640b400_evalMap(_self_, _1c6422713_Map((*(_self_))._field_prefix.ptr()), _283736_lit);;
			}
		}
		else if ((_1c64221e6_Struct((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1ad0e00db:;
			{
				return _1c6402b00_evalStructLitExplicit(_self_, _1c64221e6_Struct((*(_self_))._field_prefix.ptr()), (*(_283736_lit))._field_Exprs, (*(_283736_lit))._field_Token);;
			}
		}
		else {
			_case_begin_1ad0dec34:;
			{
				_1c63e059e_pushErr(_self_.ptr(), (*(_283736_lit))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad0d8bea:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c640ba82_evalAnonFunc(jule::Ptr<_1c63e004e_Eval> _self_, jule::Ptr<_1c62aae09_FnDecl> _285236_decl) {
	_1c64303d0_typeChecker _285317_tc = _1c64303d0_typeChecker{._field_s=(*(_self_))._field_s, ._field_rootLookup=(*(_self_))._field_lookup, ._field_lookup=(*(_self_))._field_lookup, };;
	jule::Ptr<_1c62d2b01_FnIns> _285817_ins = _1c64370a7_buildFunc(&_285317_tc, _285236_decl);;
	if ((_285817_ins == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1ad0e5c29:;
			{
				jule::Ptr<_1c6327a58_scopeChecker> _286421_sc = (*(_self_))._field_lookup.cast_ptr<_1c6327a58_scopeChecker>(0);;
				jule::Ptr<_1c6327a58_scopeChecker> _286521_scc = _1c633e60d_newChildChecker(_286421_sc);;
				(*(_286521_scc))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1c63265b2_scopeLabel>>>(nullptr);
				(*(_286521_scc))._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1c6326b45_scopeGoto>>>(nullptr);
				(*(_286521_scc))._field_owner=nullptr;
				(*(_286521_scc))._field_childIndex=0LL;
				(*(_286521_scc))._field_it=0LLU;
				(*(_286521_scc))._field_cse=0LLU;
				(*(_286521_scc))._field_owner=_285817_ins;
				_1c63846ec_checkFnInsSc((*(_self_))._field_s.ptr(), &(_285817_ins), &(_286521_scc));
			}
		}
		else {
			_case_begin_1ad0e58a5:;
			{
				_1c6384d18_checkFnIns((*(_self_))._field_s, &(_285817_ins));
			}
		}
		_match_end_1ad0e57a6:;
	};
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(_285817_ins, 1)}), ._field_Model=jule::Any(jule::new_ptr<_1c62c4be2_AnonFnExprModel>(_1c62c4be2_AnonFnExprModel{._field_Func=_285817_ins, ._field_Global=_1c63e132a_isGlobal(_self_.ptr())}), &__jule_any_type99), });;
}



inline jule::Ptr<_1c63dd35a_Data> _1c640bdc3_evalBinop(jule::Ptr<_1c63e004e_Eval> _self_, jule::Ptr<_1c62a1b47_BinopExpr> _288733_op) {
	_1c641047b_binaryEval _288817_bs = static__1c6410a64_newPlain(_self_);;
	if (((*(_self_))._field_prefix != nullptr)) {
		jule::Ptr<_1c64260eb_Prim> _289117_prim = _1c6420b73_Prim((*(_self_))._field_prefix.ptr());;
		if (((_289117_prim == nullptr) || (!(_1dc25ee96_IsNum(_1c642643c_Str(_289117_prim.ptr())))))) {
			jule::Ptr<_1c641d522_TypeKind> _289325_prefix = (*(_self_))._field_prefix;;
			(*(_self_))._field_prefix=nullptr;
			__JULE_DEFER({
				(*(_self_))._field_prefix=_289325_prefix;
			});;
			return _1c6416509_eval(&_288817_bs, &(_288733_op));;
		};
	};
	return _1c6416509_eval(&_288817_bs, &(_288733_op));;
}



inline jule::Ptr<_1c63dd35a_Data> _1c640c214_evalExprKind(jule::Ptr<_1c63e004e_Eval> _self_, jule::Any _290236_kind) {
	{
		auto &_match_expr{ _290236_kind };
		
		if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1ad0ede30:;
			{
				jule::Ptr<_1c629d87a_RangeExpr> _290521_e = _290236_kind.cast_ptr<_1c629d87a_RangeExpr>(&__jule_any_type100);;
				return _1c640c214_evalExprKind(_self_, (*((*(_290521_e))._field_Expr))._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1ad0edabc:;
			{
				return _1c63e2ace_evalLit(_self_.ptr(), _290236_kind.cast_ptr<_1c629e628_LitExpr>(&__jule_any_type101));;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ad0ee161:;
			{
				return _1c63e7584_evalIdent(_self_.ptr(), _290236_kind.cast_ptr<_1c629eea8_IdentExpr>(&__jule_any_type79));;
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1ad0ee1d8:;
			{
				return _1c63e78c5_evalUnary(_self_, _290236_kind.cast_ptr<_1c62a063a_UnaryExpr>(&__jule_any_type87));;
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1ad0ee260:;
			{
				return _1c63e7c16_evalVariadic(_self_, _290236_kind.cast_ptr<_1c62a0a14_VariadicExpr>(&__jule_any_type75));;
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1ad0ee2d7:;
			{
				return _1c63e8057_evalUnsafe(_self_, _290236_kind.cast_ptr<_1c629ea02_UnsafeExpr>(&__jule_any_type102));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1ad0ee3b4:;
			{
				return _1c63e8b90_evalSliceExpr(_self_, _290236_kind.cast_ptr<_1c62a4aa1_SliceExpr>(&__jule_any_type93));;
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1ad0ee43b:;
			{
				return _1c63ec336_evalIndexing(_self_, _290236_kind.cast_ptr<_1c62a5541_IndexingExpr>(&__jule_any_type103));;
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1ad0ee4b3:;
			{
				return _1c63ed667_evalSlicing(_self_, _290236_kind.cast_ptr<_1c62a5ba1_SlicingExpr>(&__jule_any_type104));;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1ad0ee53a:;
			{
				return _1c6402308_evalCast(_self_, _290236_kind.cast_ptr<_1c62a0ddd_CastExpr>(&__jule_any_type105));;
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1ad0ee5b2:;
			{
				return _1c6402649_evalNsSelection(_self_.ptr(), _290236_kind.cast_ptr<_1c62a12b7_NsSelectionExpr>(&__jule_any_type89));;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1ad0ee639:;
			{
				return _1c6402e41_evalStructLit(_self_, _290236_kind.cast_ptr<_1c62a35c7_StructLit>(&__jule_any_type106));;
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1ad0ee6b1:;
			{
				return _1c6403518_evalType(_self_.ptr(), _290236_kind.cast_ptr<_1c6299249_TypeDecl>(&__jule_any_type88));;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1ad0ee738:;
			{
				return _1c6404b24_evalFnCall(_self_, _290236_kind.cast_ptr<_1c62a22a7_FnCallExpr>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1ad0ee7b0:;
			{
				return _1c640abb3_evalSubIdent(_self_, _290236_kind.cast_ptr<_1c62a1691_SubIdentExpr>(&__jule_any_type85));;
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1ad0ee837:;
			{
				return _1c640b004_evalTuple(_self_, _290236_kind.cast_ptr<_1c629e24e_TupleExpr>(&__jule_any_type80));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1ad0ee8ae:;
			{
				return _1c640b741_evalBraceLit(_self_, _290236_kind.cast_ptr<_1c62a3a7d_BraceLit>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ad0ee936:;
			{
				return _1c640ba82_evalAnonFunc(_self_, _290236_kind.cast_ptr<_1c62aae09_FnDecl>(&__jule_any_type14));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1ad0ee9ad:;
			{
				return _1c640bdc3_evalBinop(_self_, _290236_kind.cast_ptr<_1c62a1b47_BinopExpr>(&__jule_any_type109));;
			}
		}
		else {
			_case_begin_1ad0edc54:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad0edbee:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c640c555_eval1(jule::Ptr<_1c63e004e_Eval> _self_, jule::Ptr<_1c629d57d_Expr> _295029_expr) {
	jule::Ptr<_1c63dd35a_Data> _295117_d = _1c640c214_evalExprKind(_self_, (*(_295029_expr))._field_Kind);;
	if (((_295117_d == nullptr) || ((*(_295117_d))._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1c6421e60_Fn((*(_295117_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad10a942:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _295821_f = _1c6421e60_Fn((*(_295117_d))._field_Kind.ptr());;
				if (_1c62d4086_IsBuiltin(_295821_f.ptr())) {
					_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_295029_expr))._field_Token, jule::Str("built-in functions should be invoked", 36), jule::Slice<jule::Any>());
					goto _match_end_1ad10a05c;
				};
				if (((*(_295821_f))._field_Generics.len() != (*((*(_295821_f))._field_Decl))._field_Generics.len())) {
					_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_295029_expr))._field_Token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				};
				if (((!((*((*(_295821_f))._field_Decl))._field_Statically)) && _1c62d0406_IsMethod((*(_295821_f))._field_Decl.ptr()))) {
					_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_295029_expr))._field_Token, jule::Str("methods should be invoked", 25), jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1ad10a05c:;
	};
	return _295117_d;;
}



inline jule::Ptr<_1c63dd35a_Data> _1c640c896_eval(jule::Ptr<_1c63e004e_Eval> _self_, jule::Ptr<_1c629d57d_Expr> _297728_expr) {
	jule::Ptr<_1c63dd35a_Data> _297817_d = _1c640c555_eval1(_self_, _297728_expr);;
	if ((_297817_d == nullptr)) {
		return nullptr;;
	};
	if (((((*(_self_))._field_owner == nullptr) || (!((*((*(_self_))._field_owner))._field_Constant))) && _1c6422c30_comptime((*(_297817_d))._field_Kind.ptr()))) {
		_1c636a606_pushErr((*(_self_))._field_s.ptr(), (*(_297728_expr))._field_Token, jule::Str("compile-time evaluations cannot used as expression", 50), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _297817_d;;
}



inline jule::Ptr<_1c63dd35a_Data> _1c640cbd7_evalExpr1(jule::Ptr<_1c63e004e_Eval> _self_, jule::Ptr<_1c629d57d_Expr> _299233_expr) {
	jule::Ptr<_1c63dd35a_Data> _299317_d = _1c640c555_eval1(_self_, _299233_expr);;
	{
		
		if ((_299317_d == nullptr)) {
			_case_begin_1ad1138d4:;
			{
				return nullptr;;
			}
		}
		else if ((*(_299317_d))._field_Decl) {
			_case_begin_1ad11395b:;
			{
				_1c63e059e_pushErr(_self_.ptr(), (*(_299233_expr))._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1ad113818:;
			{
				return _299317_d;;
			}
		}
		_match_end_1ad1137a2:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c640d028_evalExpr(jule::Ptr<_1c63e004e_Eval> _self_, jule::Ptr<_1c629d57d_Expr> _300832_expr) {
	jule::Ptr<_1c63dd35a_Data> _300917_d = _1c640c896_eval(_self_, _300832_expr);;
	{
		
		if ((_300917_d == nullptr)) {
			_case_begin_1ad115809:;
			{
				return nullptr;;
			}
		}
		else if ((*(_300917_d))._field_Decl) {
			_case_begin_1ad115881:;
			{
				_1c63e059e_pushErr(_self_.ptr(), (*(_300832_expr))._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1ad11573d:;
			{
				return _300917_d;;
			}
		}
		_match_end_1ad1156c7:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c63e004e_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1c640d4e0_unaryEval static__1c640d930_new(jule::Ptr<_1c63e004e_Eval> _302923_e) {
	return _1c640d4e0_unaryEval{._field_e=_302923_e, };;
}



inline void _1c640db2d_minus(_1c640d4e0_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1ad1174ba:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1c6420b73_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad11718a:;
			{
				if ((!(_1dc25ee96_IsNum(_1c641d8da_Str((*((*(_self_))._field_d))._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1c64221e6_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad117201:;
			{
				if (((*(_1c64221e6_Struct((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1ad117124:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ad1161cd:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_1c63ddc2e_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1dc26509a_IsF64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1ad11bb95:;
				{
					_1dc2640cc_SetF64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::F64>((-(_1dc26299e_ReadF64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_1dc264561_IsI64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1ad11bd93:;
				{
					_1dc26350a_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((-(_1dc261e65_ReadI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_1dc2647e7_IsU64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1ad11be09:;
				{
					_1dc26350a_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((-(_1dc262c35_AsI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1ad11b7ee:;
				{
					jule::panic(jule::Str("unimplemented constant type for unary.minus, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3067:17"));;
				}
			}
			_match_end_1ad11b744:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1c62c2382_UnaryExprModel>(_1c62c2382_UnaryExprModel{._field_Expr=jule::new_ptr<_1c63dd35a_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1c640dd2b_plus(_1c640d4e0_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1ad122481:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1c6420b73_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad122151:;
			{
				if ((!(_1dc25ee96_IsNum(_1c641d8da_Str((*((*(_self_))._field_d))._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1c64221e6_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad1221b7:;
			{
				if (((*(_1c64221e6_Struct((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1ad1220da:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ad12201e:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_1c63ddc2e_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1dc26509a_IsF64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1ad126b5b:;
				{
					_1dc2640cc_SetF64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::F64>((+(_1dc26299e_ReadF64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_1dc264561_IsI64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1ad126d59:;
				{
					_1dc26350a_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((+(_1dc261e65_ReadI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_1dc2647e7_IsU64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1ad126dc0:;
				{
					_1dc26350a_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((+(_1dc262c35_AsI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1ad1267b5:;
				{
					jule::panic(jule::Str("unimplemented constant type for unary.plus, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3112:17"));;
				}
			}
			_match_end_1ad12670a:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1c62c2382_UnaryExprModel>(_1c62c2382_UnaryExprModel{._field_Expr=jule::new_ptr<_1c63dd35a_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1c640e029_caret(_1c640d4e0_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1ad12c447:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1c6420b73_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad12c117:;
			{
				if ((!(_1dc25e88b_IsInt(_1c641d8da_Str((*((*(_self_))._field_d))._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1c64221e6_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad12c17d:;
			{
				if (((*(_1c64221e6_Struct((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1ad12c0a1:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ad12bed5:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_1c63ddc2e_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1dc264561_IsI64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1ad131b22:;
				{
					_1dc26350a_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((~(_1dc261e65_ReadI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_1dc2647e7_IsU64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1ad131d20:;
				{
					_1dc2637b3_SetU64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::U64>((~(_1dc2621eb_ReadU64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1ad13177b:;
				{
					jule::panic(jule::Str("unimplemented constant type for unary.caret, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3155:17"));;
				}
			}
			_match_end_1ad1316c1:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1c62c2382_UnaryExprModel>(_1c62c2382_UnaryExprModel{._field_Expr=jule::new_ptr<_1c63dd35a_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1c640e227_excl(_1c640d4e0_unaryEval* _self_) {
	jule::Ptr<_1c64260eb_Prim> _316913_t = _1c6420b73_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
	if (((_316913_t == nullptr) || (!(_1c64292ec_IsBool(_316913_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_1c63ddc2e_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1dc264a7d_IsBool((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1ad137ead:;
				{
					_1dc263a6b_SetBool((*((*(_self_))._field_d))._field_Constant.ptr(), (!(_1dc262482_ReadBool((*((*(_self_))._field_d))._field_Constant.ptr()))));
				}
			}
			else {
				_case_begin_1ad137b17:;
				{
					jule::panic(jule::Str("unimplemented constant type for unary.excl, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3183:17"));;
				}
			}
			_match_end_1ad137a4b:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1c62c2382_UnaryExprModel>(_1c62c2382_UnaryExprModel{._field_Expr=jule::new_ptr<_1c63dd35a_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1c640e425_star(_1c640d4e0_unaryEval* _self_) {
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1c62c2382_UnaryExprModel>(_1c62c2382_UnaryExprModel{._field_Expr=jule::new_ptr<_1c63dd35a_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
	{
		
		if ((_1c6421190_Ptr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad13b7ec:;
			{
				if ((!(_1c63e1094_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1c642d3de_Ptr> _320821_t = _1c6421190_Ptr((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (_1c642de28_IsUnsafe(_320821_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*((*(_self_))._field_d))._field_Kind=(*(_320821_t))._field_Elem;
				(*((*(_self_))._field_d))._field_Mutable=true;
			}
		}
		else if ((_1c6420e09_Sptr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad13b4cd:;
			{
				(*((*(_self_))._field_d))._field_Kind=(*(_1c6420e09_Sptr((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Elem;
			}
		}
		else {
			_case_begin_1ad13b467:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ad13a4ee:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*((*(_self_))._field_d))._field_Lvalue=true;
}



inline void _1c640e623_amper(_1c640d4e0_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1ad1449d1:;
			{
				jule::Ptr<_1c62c2c56_StructLitExprModel> _322921_lit = (*((*(_self_))._field_d))._field_Model.cast_ptr<_1c62c2c56_StructLitExprModel>(&__jule_any_type94);;
				_1c6417362_makeStructLitAlloc(&((*(_self_))._field_d), &(_322921_lit));
			}
		}
		else {
			_case_begin_1ad141ed9:;
			{
				{
					
					if (_1c643940b_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1ad141a88:;
						{
							(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(jule::new_ptr<_1c642d3de_Ptr>(_1c642d3de_Ptr{._field_Elem=(*((*(_self_))._field_d))._field_Kind}), 26)});
							(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1c62c2382_UnaryExprModel>(_1c62c2382_UnaryExprModel{._field_Expr=jule::new_ptr<_1c63dd35a_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
						}
					}
					else {
						_case_begin_1ad142517:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_1ad14244b:;
				};
			}
		}
		_match_end_1ad141e84:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
}



inline void _1c640e821_typeDecl(_1c640d4e0_unaryEval* _self_) {
	_1c64303d0_typeChecker _325317_tc = _1c64303d0_typeChecker{._field_s=(*((*(_self_))._field_e))._field_s, ._field_rootLookup=(*((*(_self_))._field_e))._field_lookup, ._field_lookup=(*((*(_self_))._field_e))._field_lookup, ._field_errorToken=(*((*(_self_))._field_u))._field_Op, };;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ad1464a5:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(_1c64357c0_buildPtrFromType(&_325317_tc, &((*((*(_self_))._field_d))._field_Kind)), 26)});
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ad14991a:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(_1c643513d_buildSptrFromType(&_325317_tc, &((*((*(_self_))._field_d))._field_Kind)), 21)});
			}
		}
		else {
			_case_begin_1ad147c48:;
			{
				_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_u))._field_Op))._field_Kind, &__jule_any_type4),jule::Any(_1c641d8da_Str((*((*(_self_))._field_d))._field_Kind.ptr()), &__jule_any_type4)}));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ad147be3:;
	};
	(*((*(_self_))._field_d))._field_Decl=true;
}



inline void _1c640ea1e_evalData(_1c640d4e0_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ad14c5aa:;
			{
				jule::Ptr<_1c641d522_TypeKind> _327621_prefix = (*((*(_self_))._field_e))._field_prefix;;
				(*((*(_self_))._field_e))._field_prefix=nullptr;
				(*(_self_))._field_d=_1c640c896_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
				(*((*(_self_))._field_e))._field_prefix=_327621_prefix;
			}
		}
		else {
			_case_begin_1ad14c1c0:;
			{
				(*(_self_))._field_d=_1c640c896_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
			}
		}
		_match_end_1ad14c148:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c640ed60_eval(_1c640d4e0_unaryEval* _self_, jule::Ptr<_1c62a063a_UnaryExpr> _328527_u) {
	(*(_self_))._field_u=_328527_u;
	_1c640ea1e_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*((*(_self_))._field_d))._field_Decl) {
		_1c640e821_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1c641d522_TypeKind> _329613_kind = (*((*(_self_))._field_d))._field_Kind;;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1ad151ea5:;
			{
				_1c640db2d_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1ad151ba8:;
			{
				_1c640dd2b_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1ad151c1e:;
			{
				_1c640e029_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1ad151c85:;
			{
				_1c640e227_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ad151ceb:;
			{
				_1c640e425_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ad152307:;
			{
				_1c640e623_amper(_self_);
			}
		}
		else {
			_case_begin_1ad151b42:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1ad151adc:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1ad15236d:;
			{
				_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_u))._field_Op))._field_Kind, &__jule_any_type4),jule::Any(_1c641d8da_Str(_329613_kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		else if (_1c63ddc2e_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1ad153acd:;
			{
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Constant, &__jule_any_type19);
			}
		}
		_match_end_1ad153a78:;
	};
	return (*(_self_))._field_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c640d4e0_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1c641047b_binaryEval static__1c6410a64_newPlain(jule::Ptr<_1c63e004e_Eval> _333328_e) {
	return _1c641047b_binaryEval{._field_e=_333328_e, };;
}



inline _1c641047b_binaryEval static__1c6410da5_new(jule::Ptr<_1c63e004e_Eval> _333923_e, jule::Ptr<_1c6283a3b_Token> _333937_op) {
	return _1c641047b_binaryEval{._field_e=_333923_e, ._field_op=_333937_op};;
}



inline jule::Bool _1c641113b_checkTypeCompatibility(_1c641047b_binaryEval* _self_) {
	return _1c63735ba_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*((*(_self_))._field_l))._field_Kind), &((*((*(_self_))._field_r))._field_Kind), &((*(_self_))._field_op));;
}



inline jule::Bool _1c64113c2_checkStructCommonOperatorCompatibility(_1c641047b_binaryEval* _self_) {
	jule::Ptr<_1c62d2b01_FnIns> _335317_overload = nullptr;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1ad158b6b:;
			{
				_335317_overload=(*(_1c64221e6_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1ad15a6b7:;
			{
				_335317_overload=(*(_1c64221e6_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1ad15a72d:;
			{
				_335317_overload=(*(_1c64221e6_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Add;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1ad159199:;
			{
				_335317_overload=(*(_1c64221e6_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1ad159210:;
			{
				_335317_overload=(*(_1c64221e6_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Div;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ad159276:;
			{
				_335317_overload=(*(_1c64221e6_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1ad1592dc:;
			{
				_335317_overload=(*(_1c64221e6_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ad15a81b:;
			{
				_335317_overload=(*(_1c64221e6_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1ad15a882:;
			{
				_335317_overload=(*(_1c64221e6_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1ad15a8e8:;
			{
				_335317_overload=(*(_1c64221e6_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1ad159133:;
			{
				_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c641d8da_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return false;;
			}
		}
		_match_end_1ad1590cd:;
	};
	if ((_335317_overload == nullptr)) {
		_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c641d8da_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
		return false;;
	};
	jule::Ptr<_1c62d1b55_ParamIns> _338517_p = (*(_335317_overload))._field_Params[1LL];;
	return _1c6373114_checkAssignType((*((*(_self_))._field_e))._field_s, (*((*(_338517_p))._field_Decl))._field_Reference, &((*(_338517_p))._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op);;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6411658_evalComptimeTypeInfo(_1c641047b_binaryEval* _self_) {
	jule::Ptr<_1c6308c15_comptimeTypeInfo> _339017_r = _1c6424539_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((_339017_r == nullptr)) {
		_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("comptimeTypeInfo", 16), &__jule_any_type4),jule::Any(_1c641d8da_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c6308c15_comptimeTypeInfo> _339517_l = _1c6424539_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1ad168807:;
			{
				jule::Ptr<_1dc260590_Const> _339821_constant = static__1dc261063_NewBool(_1c641dc2b_Equal((*(_339517_l))._field_base, (*(_339017_r))._field_base));;
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650961e_primBool, ._field_Model=jule::Any(_339821_constant, &__jule_any_type19), ._field_Constant=_339821_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ad16a1bb:;
			{
				jule::Ptr<_1dc260590_Const> _340521_constant = static__1dc261063_NewBool((!(_1c641dc2b_Equal((*(_339517_l))._field_base, (*(_339017_r))._field_base))));;
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650961e_primBool, ._field_Model=jule::Any(_340521_constant, &__jule_any_type19), ._field_Constant=_340521_constant});;
			}
		}
		else {
			_case_begin_1ad168b59:;
			{
				_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c641d8da_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ad168b04:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c64118de_evalNil(_1c641047b_binaryEval* _self_) {
	if ((!(_1c64203c0_NilCompatible((*((*(_self_))._field_r))._field_Kind.ptr())))) {
		_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3), &__jule_any_type4),jule::Any(_1c641d8da_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ad16cce5:;
			{
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650961e_primBool, });;
			}
		}
		else {
			_case_begin_1ad16e423:;
			{
				_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str("nil", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ad16e3bd:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c6411b75_evalEnum(_1c641047b_binaryEval* _self_) {
	jule::Ptr<_1c62e5691_Enum> _343617_enm = _1c6421426_Enum((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ad1718a9:;
			{
				jule::Ptr<_1c641d522_TypeKind> _344021_rkind = (*((*(_self_))._field_r))._field_Kind;;
				if ((_1c6421426_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
					_344021_rkind=(*((*(_1c6421426_Enum((*((*(_self_))._field_r))._field_Kind.ptr())))._field_Kind))._field_Kind;
				};
				if ((!(_1c63735ba_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*((*(_343617_enm))._field_Kind))._field_Kind), &(_344021_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650961e_primBool, });;
			}
		}
		_match_end_1ad171854:;
	};
	if (((_1c6421426_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) == nullptr) || (_343617_enm != _1c6421426_Enum((*((*(_self_))._field_r))._field_Kind.ptr())))) {
		_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any((*(_343617_enm))._field_Ident, &__jule_any_type4),jule::Any(_1c641d8da_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1ad1771b7:;
			{
				if ((!(_1dc25ee96_IsNum(_1c641d8da_Str((*((*(_343617_enm))._field_Kind))._field_Kind.ptr()))))) {
					_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*(_343617_enm))._field_Ident, &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650961e_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ad178053:;
			{
				jule::Ptr<_1c62e4b24_EnumItem> _347017_first = (*(_343617_enm))._field_Items[0LL];;
				{
					
					if (_1dc264561_IsI64((*((*((*(_347017_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1ad17b3a8:;
						{
							if ((_1dc261e65_ReadI64((*((*((*(_347017_first))._field_Value))._field_Data))._field_Constant.ptr()) == 0LL)) {
								goto _julec_label_1ad1805cc;
							};
							goto _julec_label_1ad17dbb3;
						}
					}
					else if (_1dc2647e7_IsU64((*((*((*(_347017_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1ad17b430:;
						{
							if ((_1dc2621eb_ReadU64((*((*((*(_347017_first))._field_Value))._field_Data))._field_Constant.ptr()) == 0LLU)) {
								goto _julec_label_1ad1805cc;
							};
							goto _julec_label_1ad17dbb3;
						}
					}
					else {
						_case_begin_1ad17aebd:;
						{
							jule::panic(jule::Str("unimplemented enum type, this panic call should be unreachable", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:3483:17"));;
						}
					}
					_match_end_1ad17ae57:;
				};
				_julec_label_1ad17dbb3:;
				_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("the @ enum type is not supports @ operator", 42), jule::Slice<jule::Any>::make({jule::Any((*(_343617_enm))._field_Ident, &__jule_any_type4),jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				_1c63e0912_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str("define default enum field (the first one is default) with zero value to use & operator", 86), jule::Slice<jule::Any>());
				_julec_label_1ad1805cc:;
				goto _case_begin_1ad1780b9;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1ad1780b9:;
			{
				if (((_1c6420b73_Prim((*((*(_343617_enm))._field_Kind))._field_Kind.ptr()) == nullptr) || (!(_1dc25e88b_IsInt(_1c642643c_Str(_1c6420b73_Prim((*((*(_343617_enm))._field_Kind))._field_Kind.ptr()).ptr())))))) {
					_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*(_343617_enm))._field_Ident, &__jule_any_type4)}));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1ad176d54:;
			{
				_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*(_343617_enm))._field_Ident, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ad176cee:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c6411e0b_evalTypeEnum(_1c641047b_binaryEval* _self_) {
	jule::Ptr<_1c62e6d9b_TypeEnum> _350317_enm = _1c64216ac_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr());;
	if ((!(_1c641113b_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ad185d30:;
			{
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650961e_primBool, });;
			}
		}
		else {
			_case_begin_1ad1851a3:;
			{
				_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c62e71dc_Str(_350317_enm.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ad185967:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c6412192_evalSptr(_1c641047b_binaryEval* _self_) {
	if ((!(_1c641113b_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ad186ea7:;
			{
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650961e_primBool, });;
			}
		}
		else {
			_case_begin_1ad187c33:;
			{
				_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c641d8da_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ad187bcd:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c6412428_evalPtr(_1c641047b_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1ad18a10e:;
			{
				if ((!(_1c641113b_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650961e_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1ad18b330:;
			{
				if ((_1c6421190_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) == nullptr)) {
					std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				};
				if (_1c642de28_IsUnsafe(_1c6421190_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()).ptr())) {
					_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c641d8da_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				};
				if ((!(_1c6418572_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is incompatible to use for pointer arithmetic", 52), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1ad189680:;
			{
				_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c641d8da_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ad189608:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c64126ae_evalArr(_1c641047b_binaryEval* _self_) {
	if ((!(_1c641113b_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ad18446b:;
			{
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650961e_primBool, });;
			}
		}
		else {
			_case_begin_1ad192237:;
			{
				_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c641d8da_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ad1921d2:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c6412945_evalSlc(_1c641047b_binaryEval* _self_) {
	if ((!(_1c641113b_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ad193975:;
			{
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650961e_primBool, });;
			}
		}
		else {
			_case_begin_1ad194701:;
			{
				_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c641d8da_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ad19469b:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c6412bcb_evalStruct(_1c641047b_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1ad19b63c:;
			{
				if (((*(_1c64221e6_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Gt == nullptr)) {
					_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c641d8da_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650961e_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1ad19b6a3:;
			{
				if (((*(_1c64221e6_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_GtEq == nullptr)) {
					_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c641d8da_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650961e_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1ad19b719:;
			{
				if (((*(_1c64221e6_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Lt == nullptr)) {
					_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c641d8da_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650961e_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1ad19b791:;
			{
				if (((*(_1c64221e6_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_LtEq == nullptr)) {
					_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c641d8da_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650961e_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ad19b818:;
			{
				if ((!(_1c641113b_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650961e_primBool, });;
			}
		}
		_match_end_1ad19ae33:;
	};
	if ((!(_1c64113c2_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6412e62_evalTrait(_1c641047b_binaryEval* _self_) {
	if ((!(_1c641113b_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ad1a6306:;
			{
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650961e_primBool, });;
			}
		}
		else {
			_case_begin_1ad1a6b31:;
			{
				_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c641d8da_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ad1a6acb:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c64131e8_evalAny(_1c641047b_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ad1a86c1:;
			{
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650961e_primBool, });;
			}
		}
		else {
			_case_begin_1ad1a857d:;
			{
				_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str("any", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ad1a8506:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c641347e_evalBool(_1c641047b_binaryEval* _self_) {
	if ((!(_1c641113b_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(54LLU) || _match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1ad1a9e53:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1ad1aabce:;
			{
				_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c641d8da_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ad1aab79:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c6413715_evalStr(_1c641047b_binaryEval* _self_) {
	jule::Str _370217_rk = _1c641d8da_Str((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((!_370217_rk.equal("str", 3))) {
		_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type4),jule::Any(_370217_rk, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1ad1ae94c:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1ad1b072d:;
			{
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650961e_primBool, });;
			}
		}
		else {
			_case_begin_1ad1ae386:;
			{
				_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str("str", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ad1ae584:;
	};
}



inline void _1c6413913_setTypeToGreater(_1c641047b_binaryEval* _self_) {
	jule::Ptr<_1c64260eb_Prim> _372713_lp = _1c6420b73_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	jule::Ptr<_1c64260eb_Prim> _372813_rp = _1c6420b73_Prim((*((*(_self_))._field_r))._field_Kind.ptr());;
	if (_1c63ddc2e_IsConst((*(_self_))._field_l.ptr())) {
		if ((!(_1c63ddc2e_IsConst((*(_self_))._field_r.ptr())))) {
			(*((*(_self_))._field_l))._field_Kind=(*((*(_self_))._field_r))._field_Kind;
			(*((*((*(_self_))._field_l))._field_Constant))._field_Kind=(*(_372813_rp))._field_Kind;
			return;;
		};
		goto _julec_label_1ad1b4e6e;
	};
	if (_1c63ddc2e_IsConst((*(_self_))._field_r.ptr())) {
		(*((*((*(_self_))._field_r))._field_Constant))._field_Kind=(*(_372713_lp))._field_Kind;
		return;;
	};
	_julec_label_1ad1b4e6e:;
	if (((*((*(_self_))._field_l))._field_untyped && (!((*((*(_self_))._field_r))._field_untyped)))) {
		(*((*(_self_))._field_l))._field_Kind=(*((*(_self_))._field_r))._field_Kind;
		if (_1c63ddc2e_IsConst((*(_self_))._field_l.ptr())) {
			(*((*((*(_self_))._field_l))._field_Constant))._field_Kind=(*(_372813_rp))._field_Kind;
		};
		(*((*(_self_))._field_l))._field_untyped=false;
		return;;
	} else if (((!((*((*(_self_))._field_l))._field_untyped)) && (*((*(_self_))._field_r))._field_untyped)) {
		return;;
	};
	if (_1dc25d25d_IsGreater((*(_372813_rp))._field_Kind, (*(_372713_lp))._field_Kind)) {
		(*((*(_self_))._field_l))._field_Kind=(*((*(_self_))._field_r))._field_Kind;
		if (_1c63ddc2e_IsConst((*(_self_))._field_l.ptr())) {
			(*((*((*(_self_))._field_l))._field_Constant))._field_Kind=(*(_372813_rp))._field_Kind;
		};
	};
}



inline void _1c6413bbb_checkModData(_1c641047b_binaryEval* _self_, jule::Ptr<_1c63dd35a_Data>* _376036_d) {
	if ((!(_1c63ddc2e_IsConst((*(_376036_d)).ptr())))) {
		if (((_1c6420b73_Prim((*((*(_376036_d))))._field_Kind.ptr()) == nullptr) || (!(_1dc25e88b_IsInt((*(_1c6420b73_Prim((*((*(_376036_d))))._field_Kind.ptr())))._field_Kind))))) {
			_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1c63c4451_sigAssignable(jule::Str("i64", 3), _376036_d)) {
			_case_begin_1ad1bcbd0:;
			{
				_1dc26350a_SetI64((*((*(_376036_d))))._field_Constant.ptr(), static_cast<jule::I64>(_1dc262c35_AsI64((*((*(_376036_d))))._field_Constant.ptr())));
			}
		}
		else if (_1c63c4819_unsigAssignable(jule::Str("u64", 3), _376036_d)) {
			_case_begin_1ad1bcc57:;
			{
				_1dc2637b3_SetU64((*((*(_376036_d))))._field_Constant.ptr(), static_cast<jule::U64>(_1dc262ebb_AsU64((*((*(_376036_d))))._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_1ad1bc85b:;
			{
				_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ad1bc806:;
	};
}



inline void _1c6413db9_mod(_1c641047b_binaryEval* _self_) {
	_1c6413bbb_checkModData(_self_, &((*(_self_))._field_l));
	_1c6413bbb_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1c64142b5_numbersAreCompatibile(_1c641047b_binaryEval* _self_, jule::Str* _378237_lk, jule::Str* _378247_rk) {
	if ((!(_1dc25ee96_IsNum((*(_378247_rk)))))) {
		return false;;
	};
	if ((_1c63ddc2e_IsConst((*(_self_))._field_l.ptr()) && (*((*(_self_))._field_l))._field_untyped)) {
		return true;;
	};
	if ((*(_378237_lk)).equal("f32", 3)) {
		if ((_1c63ddc2e_IsConst((*(_self_))._field_r.ptr()) && (*((*(_self_))._field_r))._field_untyped)) {
			return true;;
		};
		return (*(_378247_rk)).equal("f32", 3);;
	};
	if ((*(_378237_lk)).equal("f64", 3)) {
		if ((_1c63ddc2e_IsConst((*(_self_))._field_r.ptr()) && (*((*(_self_))._field_r))._field_untyped)) {
			return true;;
		};
		return (*(_378247_rk)).equal("f64", 3);;
	};
	if ((_1c63ddc2e_IsConst((*(_self_))._field_r.ptr()) && (*((*(_self_))._field_r))._field_untyped)) {
		return true;;
	};
	return ((*(_378237_lk)) == (*(_378247_rk)));;
}



inline jule::Ptr<_1c63dd35a_Data> _1c641454b_evalFloat(_1c641047b_binaryEval* _self_) {
	jule::Str _380813_lk = (*(_1c6420b73_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _380913_rk = (*(_1c6420b73_Prim((*((*(_self_))._field_r))._field_Kind.ptr())))._field_Kind;;
	if ((!(_1c64142b5_numbersAreCompatibile(_self_, &(_380813_lk), &(_380913_rk))))) {
		_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_380813_lk, &__jule_any_type4),jule::Any(_380913_rk, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1ad1c747b:;
			{
				if (((!(_1c63ddc2e_IsConst((*(_self_))._field_l.ptr()))) || (!(_1c63c4b8d_intAssignable(jule::Str("i64", 3), &((*(_self_))._field_l)))))) {
					_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_380813_lk, &__jule_any_type4),jule::Any(_380913_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				if (((!(_1c63ddc2e_IsConst((*(_self_))._field_r.ptr()))) || (!(_1c63c4b8d_intAssignable(jule::Str("u64", 3), &((*(_self_))._field_r)))))) {
					_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_380813_lk, &__jule_any_type4),jule::Any(_380913_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				_1dc26350a_SetI64((*((*(_self_))._field_l))._field_Constant.ptr(), static_cast<jule::I64>(_1dc262c35_AsI64((*((*(_self_))._field_l))._field_Constant.ptr())));
				_1dc2637b3_SetU64((*((*(_self_))._field_r))._field_Constant.ptr(), static_cast<jule::U64>(_1dc262ebb_AsU64((*((*(_self_))._field_r))._field_Constant.ptr())));
				if ((!(_1c6417d24_isOkForShifting(&((*(_self_))._field_r))))) {
					_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1ad1c7426:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1ad1c7a20:;
			{
				_1c6413913_setTypeToGreater(_self_);
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650961e_primBool, });;
			}
		}
		_match_end_1ad1c79ba:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1ad1c66bc:;
			{
				_1c6413913_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1ad1ceede:;
			{
				if ((!(_1dc25e88b_IsInt(_380913_rk)))) {
					_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_380813_lk, &__jule_any_type4),jule::Any(_380913_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				_1c6413db9_mod(_self_);
				_1c6413913_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1ad1cd839:;
			{
				_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for floating-point type(s)", 52), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ad1ce32e:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c64147d2_evalInt(_1c641047b_binaryEval* _self_) {
	jule::Str _387213_lk = (*(_1c6420b73_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _387313_rk = (*(_1c6420b73_Prim((*((*(_self_))._field_r))._field_Kind.ptr())))._field_Kind;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1ad1d3740:;
			{
				if (((!(_1dc25e88b_IsInt(_387213_lk))) || (!(_1dc25e88b_IsInt(_387313_rk))))) {
					_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_387213_lk, &__jule_any_type4),jule::Any(_387313_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				if ((!(_1c6417d24_isOkForShifting(&((*(_self_))._field_r))))) {
					_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1ad1d3ab4:;
	};
	if ((!(_1c64142b5_numbersAreCompatibile(_self_, &(_387213_lk), &(_387313_rk))))) {
		_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_387213_lk, &__jule_any_type4),jule::Any(_387313_rk, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1ad1d6d5e:;
			{
				return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650961e_primBool, });;
			}
		}
		_match_end_1ad1d6d09:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(65LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1ad1d3c07:;
			{
				_1c6413913_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1ad1d8ed7:;
			{
				_1c6413db9_mod(_self_);
				_1c6413913_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1ad1d805d:;
			{
				_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for integer type(s)", 45), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ad1d8008:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c6414a68_evalPrim(_1c641047b_binaryEval* _self_) {
	jule::Ptr<_1c64260eb_Prim> _392913_prim = _1c6420b73_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		
		if (_1c64292ec_IsBool(_392913_prim.ptr())) {
			_case_begin_1ad1db44b:;
			{
				return _1c641347e_evalBool(_self_);;
			}
		}
		else if (_1c6429583_IsStr(_392913_prim.ptr())) {
			_case_begin_1ad1db4c3:;
			{
				return _1c6413715_evalStr(_self_);;
			}
		}
		_match_end_1ad1db3a2:;
	};
	if ((_1c6420b73_Prim((*((*(_self_))._field_r))._field_Kind.ptr()) == nullptr)) {
		_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1c642643c_Str(_392913_prim.ptr()), &__jule_any_type4),jule::Any(_1c641d8da_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		
		if (_1dc25ebcc_IsFloat((*(_392913_prim))._field_Kind)) {
			_case_begin_1ad1ddd55:;
			{
				return _1c641454b_evalFloat(_self_);;
			}
		}
		else if (_1dc25e88b_IsInt((*(_392913_prim))._field_Kind)) {
			_case_begin_1ad1dddcc:;
			{
				return _1c64147d2_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1ad1ddcab:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad1db57d:;
	};
}



inline void _1c6414c66_checkSpecialCases(_1c641047b_binaryEval* _self_) {
	if (((!(_1c641eb1c_Comparable((*((*(_self_))._field_l))._field_Kind.ptr()))) && (!(_1c641e600_IsNil((*((*(_self_))._field_r))._field_Kind.ptr()))))) {
		_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
	} else if (((!(_1c641eb1c_Comparable((*((*(_self_))._field_r))._field_Kind.ptr()))) && (!(_1c641e600_IsNil((*((*(_self_))._field_l))._field_Kind.ptr()))))) {
		_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c6414eec_evalOp(_1c641047b_binaryEval* _self_) {
	_1c6414c66_checkSpecialCases(_self_);
	{
		
		if (_1c641e886_Void((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_1ad1e4443:;
			{
				_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str("void", 4), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		else if ((_1c6424539_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad1e3d16:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1ad1e45db;
			}
		}
		else if ((_1c6424539_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad1e45db:;
			{
				return _1c6411658_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_1c6420b73_Prim((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr) && _1c6429819_IsAny(_1c6420b73_Prim((*((*(_self_))._field_r))._field_Kind.ptr()).ptr()))) {
			_case_begin_1ad1e580c:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1ad1e5873;
			}
		}
		else if (_1c641e600_IsNil((*((*(_self_))._field_r))._field_Kind.ptr())) {
			_case_begin_1ad1e5873:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1ad1e5961;
			}
		}
		else if (_1c641e600_IsNil((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_1ad1e5961:;
			{
				return _1c64118de_evalNil(_self_);;
			}
		}
		else if (((_1c6420b73_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr) && _1c6429819_IsAny(_1c6420b73_Prim((*((*(_self_))._field_l))._field_Kind.ptr()).ptr()))) {
			_case_begin_1ad1e59c7:;
			{
				return _1c64131e8_evalAny(_self_);;
			}
		}
		else if ((_1c64216ac_TypeEnum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad1e5a3d:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1ad1e5aa4;
			}
		}
		else if ((_1c64216ac_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad1e5aa4:;
			{
				return _1c6411e0b_evalTypeEnum(_self_);;
			}
		}
		else if ((_1c6421426_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad1e5b1a:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1ad1e5b81;
			}
		}
		else if ((_1c6421426_Enum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad1e5b81:;
			{
				return _1c6411b75_evalEnum(_self_);;
			}
		}
		else if ((_1c6420e09_Sptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad1e5c08:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1ad1e5c80;
			}
		}
		else if ((_1c6420e09_Sptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad1e5c80:;
			{
				return _1c6412192_evalSptr(_self_);;
			}
		}
		else if ((_1c6421190_Ptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad1e5d07:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1ad1e5d7e;
			}
		}
		else if ((_1c6421190_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad1e5d7e:;
			{
				return _1c6412428_evalPtr(_self_);;
			}
		}
		else if ((_1c6421943_Arr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad1e5e06:;
			{
				return _1c64126ae_evalArr(_self_);;
			}
		}
		else if ((_1c6421bc9_Slc((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad1e5e7d:;
			{
				return _1c6412945_evalSlc(_self_);;
			}
		}
		else if ((_1c642247c_Trait((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad1e6005:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1ad1e607c;
			}
		}
		else if ((_1c642247c_Trait((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad1e607c:;
			{
				return _1c6412e62_evalTrait(_self_);;
			}
		}
		else if ((_1c64221e6_Struct((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad1e6104:;
			{
				return _1c6412bcb_evalStruct(_self_);;
			}
		}
		else if ((_1c6420b73_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad1e617b:;
			{
				return _1c6414a68_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1ad1e4245:;
			{
				_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c641d8da_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ad1e41ce:;
	};
}



inline void _1c64152a5_evalConst(_1c641047b_binaryEval* _self_, jule::Ptr<_1c63dd35a_Data>* _402033_d) {
	{
		
		if (((*(_402033_d)) == nullptr) || ((*((*(_self_))._field_l))._field_Model == nullptr) || ((*((*(_self_))._field_r))._field_Model == nullptr)) {
			_case_begin_1ad208ee6:;
			{
				return;;
			}
		}
		else if ((!(_1c63ddc2e_IsConst((*(_self_))._field_l.ptr()))) || (!(_1c63ddc2e_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1ad209249:;
			{
				(*((*(_402033_d))))._field_Constant=nullptr;
				return;;
			}
		}
		_match_end_1ad208e19:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1ad20b3d3:;
			{
				(*((*(_402033_d))))._field_Constant=static__1dc261063_NewBool(_1dc266145_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ad20b449:;
			{
				(*((*(_402033_d))))._field_Constant=static__1dc261063_NewBool((!(_1dc266145_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1ad20b4b0:;
			{
				(*((*(_402033_d))))._field_Constant=static__1dc261063_NewBool(_1dc265d04_Or((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1ad20b526:;
			{
				(*((*(_402033_d))))._field_Constant=static__1dc261063_NewBool(_1dc2659b3_And((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1ad20b58c:;
			{
				(*((*(_402033_d))))._field_Constant=static__1dc261063_NewBool(_1dc266b18_Gt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1ad20b603:;
			{
				(*((*(_402033_d))))._field_Constant=static__1dc261063_NewBool(_1dc266486_Lt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1ad20b67a:;
			{
				(*((*(_402033_d))))._field_Constant=static__1dc261063_NewBool(_1dc266e59_GtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1ad20b702:;
			{
				(*((*(_402033_d))))._field_Constant=static__1dc261063_NewBool(_1dc2667c7_LtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1ad20b779:;
			{
				_1dc26729a_Add((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_402033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1ad20b801:;
			{
				_1dc2675db_Sub((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_402033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ad20b878:;
			{
				_1dc26792c_Mul((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_402033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1ad20b900:;
			{
				jule::Bool _405917_ok = _1dc267c6d_Div((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_405917_ok)) && (_1dc263252_AsF64((*((*(_self_))._field_r))._field_Constant.ptr()) == 0LL))) {
					_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_402033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
				jule::Ptr<_1c64260eb_Prim> _406421_prim = _1c6420b73_Prim((*((*(_402033_d))))._field_Kind.ptr());;
				{
					
					if (_1dc25e2b4_IsSigInt((*(_406421_prim))._field_Kind)) {
						_case_begin_1ad21c4e3:;
						{
							_1dc26350a_SetI64((*((*(_402033_d))))._field_Constant.ptr(), static_cast<jule::I64>(_1dc262c35_AsI64((*((*(_402033_d))))._field_Constant.ptr())));
						}
					}
					else if (_1dc25e5c2_IsUnsigInt((*(_406421_prim))._field_Kind)) {
						_case_begin_1ad21c56a:;
						{
							_1dc2637b3_SetU64((*((*(_402033_d))))._field_Constant.ptr(), static_cast<jule::U64>(_1dc262ebb_AsU64((*((*(_402033_d))))._field_Constant.ptr())));
						}
					}
					_match_end_1ad21c449:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1ad20b977:;
			{
				jule::Bool _407217_ok = _1dc2680ae_Mod((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_407217_ok)) && (_1dc263252_AsF64((*((*(_self_))._field_r))._field_Constant.ptr()) == 0LL))) {
					_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_402033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1ad20b9ee:;
			{
				_1dc268741_BitwiseOr((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_402033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ad20ba76:;
			{
				_1dc268400_BitwiseAnd((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_402033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1ad20baed:;
			{
				_1dc268a82_Xor((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_402033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1ad20bb75:;
			{
				_1dc268dc3_Lshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_402033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1ad20bbec:;
			{
				_1dc269214_Rshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_402033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		_match_end_1ad20ab96:;
	};
	(*((*(_402033_d))))._field_Model=jule::Any((*((*(_402033_d))))._field_Constant, &__jule_any_type19);
	_1c641940d_applyCastModelByEnum(_402033_d, _1c6421426_Enum((*((*(_402033_d))))._field_Kind.ptr()));
}



inline void _1c641555d_checkData(_1c641047b_binaryEval* _self_, jule::Ptr<_1c63dd35a_Data>* _409733_d) {
	jule::Ptr<_1c62d2b01_FnIns> _409813_f = _1c6421e60_Fn((*((*(_409733_d))))._field_Kind.ptr());;
	if ((((_409813_f != nullptr) && ((*(_409813_f))._field_Decl != nullptr)) && _1c62d0406_IsMethod((*(_409813_f))._field_Decl.ptr()))) {
		_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("invalid expression used for binary operation", 44), jule::Slice<jule::Any>());
	};
}



inline void _1c641575b_checkDatas(_1c641047b_binaryEval* _self_) {
	_1c641555d_checkData(_self_, &((*(_self_))._field_l));
	_1c641555d_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1c6415a14_setModel(_1c641047b_binaryEval* _self_, jule::Ptr<_1c63dd35a_Data>* _410932_d) {
	if (_1c63ddc2e_IsConst((*(_410932_d)).ptr())) {
		if (((_1c63ddc2e_IsConst((*(_self_))._field_l.ptr()) && _1c63ddc2e_IsConst((*(_self_))._field_r.ptr())) || (((*((*(_self_))._field_l))._field_Model == nullptr) && ((*((*(_self_))._field_r))._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_1c63dd35a_Data> _411818_l;;
	jule::Ptr<_1c63dd35a_Data> _411825_r;;
	({
		jule::Ptr<_1c63dd35a_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1c63dd35a_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_411818_l = ___jule_assign_arg;
		_411825_r = _1___jule_assign_arg;
	});
	if ((!(_1c63de070_GoodOperand(_411818_l.ptr(), &(_411825_r))))) {
		std::swap(_411818_l, _411825_r);
	};
	(*((*(_410932_d))))._field_Model=jule::Any(jule::new_ptr<_1c62c1ea8_BinopExprModel>(_1c62c1ea8_BinopExprModel{._field_Left=jule::new_ptr<_1c62c19ad_OperandExprModel>(_1c62c19ad_OperandExprModel{._field_Kind=(*(_411818_l))._field_Kind, ._field_Model=(*(_411818_l))._field_Model}), ._field_Right=jule::new_ptr<_1c62c19ad_OperandExprModel>(_1c62c19ad_OperandExprModel{._field_Kind=(*(_411825_r))._field_Kind, ._field_Model=(*(_411825_r))._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type111);
}



inline void _1c6415cbc_postEval(_1c641047b_binaryEval* _self_, jule::Ptr<_1c63dd35a_Data>* _413632_d) {
	(*((*(_413632_d))))._field_Lvalue=false;
	_1c6415a14_setModel(_self_, _413632_d);
}



inline jule::Ptr<_1c63dd35a_Data> _1c64161b8_solveExplicit(_1c641047b_binaryEval* _self_, jule::Ptr<_1c63dd35a_Data>* _414137_l, jule::Ptr<_1c63dd35a_Data>* _414152_r) {
	({
		jule::Ptr<_1c63dd35a_Data> ___jule_assign_arg = (*(_414137_l));
		jule::Ptr<_1c63dd35a_Data> _1___jule_assign_arg = (*(_414152_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1c641575b_checkDatas(_self_);
	jule::Ptr<_1c63dd35a_Data> _414617_d = _1c6414eec_evalOp(_self_);;
	({
		jule::Ptr<_1c63dd35a_Data> ___jule_assign_arg = (*(_414137_l));
		jule::Ptr<_1c63dd35a_Data> _1___jule_assign_arg = (*(_414152_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1c64152a5_evalConst(_self_, &(_414617_d));
	if ((_414617_d != nullptr)) {
		(*(_414617_d))._field_Mutable=true;
		_1c6415cbc_postEval(_self_, &(_414617_d));
	};
	return _414617_d;;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6416509_eval(_1c641047b_binaryEval* _self_, jule::Ptr<_1c62a1b47_BinopExpr>* _416128_op) {
	if (((*((*((*(_416128_op))))._field_Op))._field_Id == static_cast<jule::U64>(71LLU))) {
		_1c63e059e_pushErr((*(_self_))._field_e.ptr(), (*((*(_416128_op))))._field_Op, jule::Str("assignments not available for expressions", 41), jule::Slice<jule::Any>());
		_1c63e0912_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c63dd35a_Data> _416817_l = _1c640cbd7_evalExpr1((*(_self_))._field_e, (*((*(_416128_op))))._field_Left);;
	if (((_416817_l == nullptr) || ((*(_416817_l))._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1c641d522_TypeKind> _417317_prefix = (*((*(_self_))._field_e))._field_prefix;;
	(*((*(_self_))._field_e))._field_prefix=(*(_416817_l))._field_Kind;
	__JULE_DEFER({
		(*((*(_self_))._field_e))._field_prefix=_417317_prefix;
	});;
	jule::Ptr<_1c63dd35a_Data> _417617_r = _1c640cbd7_evalExpr1((*(_self_))._field_e, (*((*(_416128_op))))._field_Right);;
	if (((_417617_r == nullptr) || ((*(_417617_r))._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*((*(_416128_op))))._field_Op;
	jule::Ptr<_1c63dd35a_Data> _418317_d = _1c64161b8_solveExplicit(_self_, &(_416817_l), &(_417617_r));;
	if ((((_418317_d != nullptr) && (*(_416817_l))._field_IsRune) && (*(_417617_r))._field_IsRune)) {
		(*(_418317_d))._field_IsRune=true;
	};
	return _418317_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c641047b_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c641bb3b_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c641c730_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c641d8da_Str(_1c641d522_TypeKind* _self_) {
	if (_1c641e600_IsNil(_self_)) {
		return jule::Str("nil", 3);;
	};
	_2206c697e_StrBuilder _7417_kind = static__2206c6c9d_New(16LL);;
	if ((*(_self_))._field_Variadic) {
		_2206d0625_WriteStr(&_7417_kind, jule::Str("...", 3));
	};
	if (_1c641e369_Binded(_self_)) {
		_2206d0625_WriteStr(&_7417_kind, jule::Str("cpp.", 4));
		_2206d0625_WriteStr(&_7417_kind, (*(_self_))._field_BindIdent);
	} else {
		_2206d0625_WriteStr(&_7417_kind, _1c641d06b_Kind_mptr_data[((*(_self_))._field_Kind).type_offset]._1c641cac6_Str((*(_self_))._field_Kind));
	};
	return _2206d0e1c_Str(&_7417_kind);;
}



inline jule::Bool _1c641dc2b_Equal(jule::Ptr<_1c641d522_TypeKind> _self_, jule::Ptr<_1c641d522_TypeKind> _9021_other) {
	if (_1c641e600_IsNil(_self_.ptr())) {
		return _1c641e600_IsNil(_9021_other.ptr());;
	};
	if (_1c641e369_Binded(_self_.ptr())) {
		return (_1c641e369_Binded(_9021_other.ptr()) && ((*(_self_))._field_BindIdent == (*(_9021_other))._field_BindIdent));;
	};
	return _1c641d06b_Kind_mptr_data[((*(_self_))._field_Kind).type_offset]._1c641ce17_Equal((*(_self_))._field_Kind, _9021_other);;
}



inline jule::Bool _1c641e369_Binded(_1c641d522_TypeKind* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _1c641e600_IsNil(_1c641d522_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1c641e886_Void(_1c641d522_TypeKind* _self_) {
	jule::Ptr<_1c64260eb_Prim> _11013_prim = _1c6420b73_Prim(&(*(_self_)));;
	return ((_11013_prim != nullptr) && (*(_11013_prim))._field_Kind.equal("void", 4));;
}



inline jule::Bool _1c641eb1c_Comparable(_1c641d522_TypeKind* _self_) {
	{
		_1c641d522_TypeKind* _11721__self = _self_;;
		if ((_1c64221e6_Struct(_11721__self) != nullptr)) {
			return (*(_1c64221e6_Struct(_11721__self)))._field_Comparable;;
		};
		return (((_1c6422713_Map(_11721__self) == nullptr) && (_1c6421bc9_Slc(_11721__self) == nullptr)) && (_1c6421e60_Fn(_11721__self) == nullptr));;
	};
}



inline jule::Bool _1c641eda3_Mutable(_1c641d522_TypeKind* _self_) {
	{
		_1c641d522_TypeKind* _12821__self = _self_;;
		if ((_1c64221e6_Struct(_12821__self) != nullptr)) {
			return (*(_1c64221e6_Struct(_12821__self)))._field_Mutable;;
		};
		if ((_1c642247c_Trait(_12821__self) != nullptr)) {
			return true;;
		};
		if ((_1c6420b73_Prim(_12821__self) != nullptr)) {
			jule::Ptr<_1c64260eb_Prim> _13621_p = _1c6420b73_Prim(_12821__self);;
			return _1c6429819_IsAny(_13621_p.ptr());;
		};
		if ((_1c6421943_Arr(_12821__self) != nullptr)) {
			return _1c641eda3_Mutable((*(_1c6421943_Arr(_12821__self)))._field_Elem.ptr());;
		};
		return (((_1c6421bc9_Slc(_12821__self) != nullptr) || (_1c6421190_Ptr(_12821__self) != nullptr)) || (_1c6420e09_Sptr(_12821__self) != nullptr));;
	};
}



inline jule::Bool _1c6420139_Ordered(_1c641d522_TypeKind* _self_) {
	{
		_1c641d522_TypeKind* _15121__self = _self_;;
		jule::Ptr<_1c64260eb_Prim> _15217_prim = _1c6420b73_Prim(_15121__self);;
		if ((_15217_prim != nullptr)) {
			return (_1dc25ee96_IsNum((*(_15217_prim))._field_Kind) || _1c6429583_IsStr(_15217_prim.ptr()));;
		};
		if ((_1c6421190_Ptr(_15121__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_1c62bcab9_StructIns> _15917_s = _1c64221e6_Struct(_15121__self);;
		if ((_15917_s != nullptr)) {
			return (((((*(_15917_s))._field_Operators._field_Gt != nullptr) && ((*(_15917_s))._field_Operators._field_GtEq != nullptr)) && ((*(_15917_s))._field_Operators._field_Lt != nullptr)) && ((*(_15917_s))._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_1c62e5691_Enum> _16617_enm = _1c6421426_Enum(_15121__self);;
		if ((_16617_enm != nullptr)) {
			return _1dc25ee96_IsNum(_1c641d8da_Str((*((*(_16617_enm))._field_Kind))._field_Kind.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _1c64203c0_NilCompatible(_1c641d522_TypeKind* _self_) {
	{
		_1c641d522_TypeKind* _17721__self = _self_;;
		jule::Ptr<_1c64260eb_Prim> _17917_prim = _1c6420b73_Prim(_17721__self);;
		if (((_17917_prim != nullptr) && _1c6429819_IsAny(_17917_prim.ptr()))) {
			return true;;
		};
		return (((((((_1c641e600_IsNil(_17721__self) || (_1c6421e60_Fn(_17721__self) != nullptr)) || (_1c6420e09_Sptr(_17721__self) != nullptr)) || (_1c6421190_Ptr(_17721__self) != nullptr)) || (_1c642247c_Trait(_17721__self) != nullptr)) || (_1c6421bc9_Slc(_17721__self) != nullptr)) || (_1c6422713_Map(_17721__self) != nullptr)) || (_1c64216ac_TypeEnum(_17721__self) != nullptr));;
	};
}



inline jule::Bool _1c6420656_PerformsRC(_1c641d522_TypeKind* _self_) {
	{
		_1c641d522_TypeKind* _19821__self = _self_;;
		jule::Ptr<_1c64260eb_Prim> _19917_prim = _1c6420b73_Prim(_19821__self);;
		if ((_19917_prim != nullptr)) {
			return (_1c6429819_IsAny(_19917_prim.ptr()) || _1c6429583_IsStr(_19917_prim.ptr()));;
		};
		return (((_1c6420e09_Sptr(_19821__self) != nullptr) || (_1c6421bc9_Slc(_19821__self) != nullptr)) || (_1c642247c_Trait(_19821__self) != nullptr));;
	};
}



inline jule::Bool _1c64208dc_Variadicable(_1c641d522_TypeKind* _self_) {
	{
		_1c641d522_TypeKind* _21021__self = _self_;;
		return (_1c6421bc9_Slc(_21021__self) != nullptr);;
	};
}



inline jule::Ptr<_1c64260eb_Prim> _1c6420b73_Prim(_1c641d522_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 20)) {
			_case_begin_1ad26a860:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c64260eb_Prim>(20);;
			}
		}
		else {
			_case_begin_1ad26ad38:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad26acd3:;
	};
}



inline jule::Ptr<_1c6429b27_Sptr> _1c6420e09_Sptr(_1c641d522_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 21)) {
			_case_begin_1ad26b465:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c6429b27_Sptr>(21);;
			}
		}
		else {
			_case_begin_1ad26bbd5:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad26bb80:;
	};
}



inline jule::Ptr<_1c642d3de_Ptr> _1c6421190_Ptr(_1c641d522_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_1ad26c4bb:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c642d3de_Ptr>(26);;
			}
		}
		else {
			_case_begin_1ad26c8b7:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad26c862:;
	};
}



inline jule::Ptr<_1c62e5691_Enum> _1c6421426_Enum(_1c641d522_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1ad26d19d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c62e5691_Enum>(3);;
			}
		}
		else {
			_case_begin_1ad26d599:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad26d544:;
	};
}



inline jule::Ptr<_1c62e6d9b_TypeEnum> _1c64216ac_TypeEnum(_1c641d522_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1ad26dd80:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c62e6d9b_TypeEnum>(4);;
			}
		}
		else {
			_case_begin_1ad26e27b:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad26e226:;
	};
}



inline jule::Ptr<_1c642c91b_Arr> _1c6421943_Arr(_1c641d522_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 25)) {
			_case_begin_1ad26ea62:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c642c91b_Arr>(25);;
			}
		}
		else {
			_case_begin_1ad26ee5d:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad26ee08:;
	};
}



inline jule::Ptr<_1c642a5ea_Slc> _1c6421bc9_Slc(_1c641d522_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 22)) {
			_case_begin_1ad270744:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c642a5ea_Slc>(22);;
			}
		}
		else {
			_case_begin_1ad270b40:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad270ada:;
	};
}



inline jule::Ptr<_1c62d2b01_FnIns> _1c6421e60_Fn(_1c641d522_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_1ad271426:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c62d2b01_FnIns>(1);;
			}
		}
		else {
			_case_begin_1ad271822:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad2717bc:;
	};
}



inline jule::Ptr<_1c62bcab9_StructIns> _1c64221e6_Struct(_1c641d522_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1ad272108:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c62bcab9_StructIns>(0);;
			}
		}
		else {
			_case_begin_1ad272504:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad27249e:;
	};
}



inline jule::Ptr<_1c62e2e96_Trait> _1c642247c_Trait(_1c641d522_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 2)) {
			_case_begin_1ad272cda:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c62e2e96_Trait>(2);;
			}
		}
		else {
			_case_begin_1ad2731d6:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad273181:;
	};
}



inline jule::Ptr<_1c642bc8e_Map> _1c6422713_Map(_1c641d522_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 24)) {
			_case_begin_1ad2739bc:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c642bc8e_Map>(24);;
			}
		}
		else {
			_case_begin_1ad273db8:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad273d63:;
	};
}



inline jule::Ptr<_1c642b1de_Tuple> _1c6422999_Tup(_1c641d522_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 23)) {
			_case_begin_1ad2746b0:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c642b1de_Tuple>(23);;
			}
		}
		else {
			_case_begin_1ad274abc:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad274a67:;
	};
}



inline jule::Bool _1c6422c30_comptime(_1c641d522_TypeKind* _self_) {
	return ((((((((((((((_1c64242a3_comptimeTypeInfos(_self_) != nullptr) || (_1c6424539_comptimeTypeInfo(_self_) != nullptr)) || (_1c6422eb6_comptimeStructFields(_self_) != nullptr)) || (_1c642324c_comptimeStructField(_self_) != nullptr)) || (_1c64234d3_comptimeEnumFields(_self_) != nullptr)) || (_1c6423769_comptimeEnumField(_self_) != nullptr)) || (_1c64247c0_comptimeStatics(_self_) != nullptr)) || (_1c6424a56_comptimeStatic(_self_) != nullptr)) || (_1c6423a00_comptimeParams(_self_) != nullptr)) || (_1c6423c86_comptimeParam(_self_) != nullptr)) || (_1c642401c_comptimeRange(_self_) != nullptr)) || (_1c6424cdc_comptimeValue(_self_) != nullptr)) || (_1c6425309_comptimeFiles(_self_) != nullptr)) || (_1c6425073_comptimeFile(_self_) != nullptr));;
}



inline jule::Ptr<_1c62eb950_comptimeStructFields> _1c6422eb6_comptimeStructFields(_1c641d522_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 7)) {
			_case_begin_1ad275738:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c62eb950_comptimeStructFields>(7);;
			}
		}
		else {
			_case_begin_1ad279561:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad27950b:;
	};
}



inline jule::Ptr<_1c62e9ca0_comptimeStructField> _1c642324c_comptimeStructField(_1c641d522_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 6)) {
			_case_begin_1ad279a28:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c62e9ca0_comptimeStructField>(6);;
			}
		}
		else {
			_case_begin_1ad279e13:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad279dad:;
	};
}



inline jule::Ptr<_1c6302626_comptimeEnumFields> _1c64234d3_comptimeEnumFields(_1c641d522_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 11)) {
			_case_begin_1ad27a70a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c6302626_comptimeEnumFields>(11);;
			}
		}
		else {
			_case_begin_1ad27ab17:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad27aab2:;
	};
}



inline jule::Ptr<_1c6301317_comptimeEnumField> _1c6423769_comptimeEnumField(_1c641d522_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 10)) {
			_case_begin_1ad27aba0:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c6301317_comptimeEnumField>(10);;
			}
		}
		else {
			_case_begin_1ad27b7e9:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad27b794:;
	};
}



inline jule::Ptr<_1c6306020_comptimeParams> _1c6423a00_comptimeParams(_1c641d522_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 13)) {
			_case_begin_1ad27c0e1:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c6306020_comptimeParams>(13);;
			}
		}
		else {
			_case_begin_1ad27c4ed:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad27c498:;
	};
}



inline jule::Ptr<_1c6303ca9_comptimeParam> _1c6423c86_comptimeParam(_1c641d522_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 12)) {
			_case_begin_1ad27ccd4:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c6303ca9_comptimeParam>(12);;
			}
		}
		else {
			_case_begin_1ad27d1d0:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad27d17a:;
	};
}



inline jule::Ptr<_1c62e9244_comptimeRange> _1c642401c_comptimeRange(_1c641d522_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 5)) {
			_case_begin_1ad27d9c7:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c62e9244_comptimeRange>(5);;
			}
		}
		else {
			_case_begin_1ad27ddd4:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad27dd7e:;
	};
}



inline jule::Ptr<_1c630761a_comptimeTypeInfos> _1c64242a3_comptimeTypeInfos(_1c641d522_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 14)) {
			_case_begin_1ad27e6cb:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c630761a_comptimeTypeInfos>(14);;
			}
		}
		else {
			_case_begin_1ad27ead8:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad27ea83:;
	};
}



inline jule::Ptr<_1c6308c15_comptimeTypeInfo> _1c6424539_comptimeTypeInfo(_1c641d522_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 15)) {
			_case_begin_1ad27eb71:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c6308c15_comptimeTypeInfo>(15);;
			}
		}
		else {
			_case_begin_1ad2807ba:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad280765:;
	};
}



inline jule::Ptr<_1c62eec1c_comptimeStatics> _1c64247c0_comptimeStatics(_1c641d522_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 9)) {
			_case_begin_1ad280853:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c62eec1c_comptimeStatics>(9);;
			}
		}
		else {
			_case_begin_1ad28149c:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad281447:;
	};
}



inline jule::Ptr<_1c62ed05b_comptimeStatic> _1c6424a56_comptimeStatic(_1c641d522_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 8)) {
			_case_begin_1ad281535:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c62ed05b_comptimeStatic>(8);;
			}
		}
		else {
			_case_begin_1ad28217e:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad282129:;
	};
}



inline jule::Ptr<_1c6310227_comptimeValue> _1c6424cdc_comptimeValue(_1c641d522_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 16)) {
			_case_begin_1ad282976:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c6310227_comptimeValue>(16);;
			}
		}
		else {
			_case_begin_1ad282d83:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad282d2d:;
	};
}



inline jule::Ptr<_1c6314171_comptimeFile> _1c6425073_comptimeFile(_1c641d522_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 18)) {
			_case_begin_1ad28367a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c6314171_comptimeFile>(18);;
			}
		}
		else {
			_case_begin_1ad283a87:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad283a32:;
	};
}



inline jule::Ptr<_1c6312a76_comptimeFiles> _1c6425309_comptimeFiles(_1c641d522_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 17)) {
			_case_begin_1ad28437e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c6312a76_comptimeFiles>(17);;
			}
		}
		else {
			_case_begin_1ad28478b:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad284736:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c641d522_TypeKind _Src) {
	_Stream << _1c641d8da_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1c6425a68_checked(_1c64256e4_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c64256e4_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c642643c_Str(_1c64260eb_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1c642677d_Equal(jule::Ptr<_1c64260eb_Prim> _self_, jule::Ptr<_1c641d522_TypeKind> _50721_other) {
	jule::Ptr<_1c64260eb_Prim> _50813_prim = _1c6420b73_Prim(_50721_other.ptr());;
	if ((_50813_prim == nullptr)) {
		return false;;
	};
	return ((*(_self_))._field_Kind == (*(_50813_prim))._field_Kind);;
}



inline jule::Bool _1c6426c23_IsConstraint(_1c64260eb_Prim* _self_) {
	return ((((!(_1c6429583_IsStr(_self_))) && (!(_1c6429819_IsAny(_self_)))) && (!(_1c64292ec_IsBool(_self_)))) && (!(_1dc25ee96_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1c6426ea9_IsI8(_1c64260eb_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i8", 2);;
}



inline jule::Bool _1c6427240_IsI16(_1c64260eb_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i16", 3);;
}



inline jule::Bool _1c64274c6_IsI32(_1c64260eb_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i32", 3);;
}



inline jule::Bool _1c642775c_IsI64(_1c64260eb_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i64", 3);;
}



inline jule::Bool _1c64279e3_IsU8(_1c64260eb_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u8", 2);;
}



inline jule::Bool _1c6427c79_IsU16(_1c64260eb_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u16", 3);;
}



inline jule::Bool _1c6428010_IsU32(_1c64260eb_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u32", 3);;
}



inline jule::Bool _1c6428296_IsU64(_1c64260eb_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u64", 3);;
}



inline jule::Bool _1c642852c_IsF32(_1c64260eb_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f32", 3);;
}



inline jule::Bool _1c64287b3_IsF64(_1c64260eb_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f64", 3);;
}



inline jule::Bool _1c6428a49_IsInt(_1c64260eb_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("int", 3);;
}



inline jule::Bool _1c6428cd0_IsUint(_1c64260eb_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uint", 4);;
}



inline jule::Bool _1c6429066_IsUintptr(_1c64260eb_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uintptr", 7);;
}



inline jule::Bool _1c64292ec_IsBool(_1c64260eb_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("bool", 4);;
}



inline jule::Bool _1c6429583_IsStr(_1c64260eb_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("str", 3);;
}



inline jule::Bool _1c6429819_IsAny(_1c64260eb_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("any", 3);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c64260eb_Prim _Src) {
	_Stream << _1c642643c_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c6429e9b_Str(_1c6429b27_Sptr* _self_) {
	return (jule::Str("&", 1) + _1c641d8da_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1c642a2dc_Equal(jule::Ptr<_1c6429b27_Sptr> _self_, jule::Ptr<_1c641d522_TypeKind> _58421_other) {
	jule::Ptr<_1c6429b27_Sptr> _58513_sptr = _1c6420e09_Sptr(_58421_other.ptr());;
	if ((_58513_sptr == nullptr)) {
		return false;;
	};
	return _1c641dc2b_Equal((*(_self_))._field_Elem, (*(_58513_sptr))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c6429b27_Sptr _Src) {
	_Stream << _1c6429e9b_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c642aa7e_Str(_1c642a5ea_Slc* _self_) {
	return (jule::Str("[]", 2) + _1c641d8da_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1c642adc0_Equal(jule::Ptr<_1c642a5ea_Slc> _self_, jule::Ptr<_1c641d522_TypeKind> _60321_other) {
	jule::Ptr<_1c642a5ea_Slc> _60413_slc = _1c6421bc9_Slc(_60321_other.ptr());;
	if ((_60413_slc == nullptr)) {
		return false;;
	};
	return _1c641dc2b_Equal((*(_self_))._field_Elem, (*(_60413_slc))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c642a5ea_Slc _Src) {
	_Stream << _1c642aa7e_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c642b563_Str(_1c642b1de_Tuple* _self_) {
	_2206c697e_StrBuilder _62017_s = static__2206c6c9d_New(16LL);;
	_2206d08cd_WriteByte(&_62017_s, '(');
	_2206d0625_WriteStr(&_62017_s, _1c641d8da_Str((*(_self_))._field_Types[0LL].ptr()));
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ad294e50:;
		if (it != expr_end) {
			jule::Ptr<_1c641d522_TypeKind> *_62316_t = it;
			{
				_2206d08cd_WriteByte(&_62017_s, ',');
				_2206d0625_WriteStr(&_62017_s, _1c641d8da_Str((*(_62316_t)).ptr()));
			}
			_iter_next_1ad294e50:;
			++it;
			goto _iter_begin_1ad294e50;
		}
		_iter_end_1ad294e50:;
	};
	_2206d08cd_WriteByte(&_62017_s, ')');
	return _2206d0e1c_Str(&_62017_s);;
}



inline jule::Bool _1c642b8a4_Equal(jule::Ptr<_1c642b1de_Tuple> _self_, jule::Ptr<_1c641d522_TypeKind> _63221_other) {
	jule::Ptr<_1c642b1de_Tuple> _63313_tup = _1c6422999_Tup(_63221_other.ptr());;
	if ((_63313_tup == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Types.len() != (*(_63313_tup))._field_Types.len())) {
		return false;;
	};
	jule::I64 _64017_i = 0LL;;
	for (; (_64017_i < (*(_self_))._field_Types.len()); (_64017_i)++) {
		{
			if ((!(_1c641dc2b_Equal((*(_self_))._field_Types[_64017_i], (*(_63313_tup))._field_Types[_64017_i])))) {
				return false;;
			};
		}
	_iter_next_1ad297e31:;
	}
	_iter_end_1ad297e31:;;
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c642b1de_Tuple _Src) {
	_Stream << _1c642b563_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c642c113_Str(_1c642bc8e_Map* _self_) {
	_2206c697e_StrBuilder _66017_s = static__2206c6c9d_New(16LL);;
	_2206d0625_WriteStr(&_66017_s, jule::Str("map[", 4));
	_2206d0625_WriteStr(&_66017_s, _1c641d8da_Str((*(_self_))._field_Key.ptr()));
	_2206d08cd_WriteByte(&_66017_s, ']');
	_2206d0625_WriteStr(&_66017_s, _1c641d8da_Str((*(_self_))._field_Val.ptr()));
	return _2206d0e1c_Str(&_66017_s);;
}



inline jule::Bool _1c642c454_Equal(jule::Ptr<_1c642bc8e_Map> _self_, jule::Ptr<_1c641d522_TypeKind> _66921_other) {
	jule::Ptr<_1c642bc8e_Map> _67013_m = _1c6422713_Map(_66921_other.ptr());;
	if ((_67013_m == nullptr)) {
		return false;;
	};
	return (_1c641dc2b_Equal((*(_self_))._field_Key, (*(_67013_m))._field_Key) && _1c641dc2b_Equal((*(_self_))._field_Val, (*(_67013_m))._field_Val));;
}





std::ostream &operator<<(std::ostream &_Stream, _1c642bc8e_Map _Src) {
	_Stream << _1c642c113_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c642cc90_Str(_1c642c91b_Arr* _self_) {
	_2206c697e_StrBuilder _68817_s = static__2206c6c9d_New(16LL);;
	_2206d08cd_WriteByte(&_68817_s, '[');
	_2206d0625_WriteStr(&_68817_s, _1dc250063_Itoa((*(_self_))._field_N));
	_2206d08cd_WriteByte(&_68817_s, ']');
	_2206d0625_WriteStr(&_68817_s, _1c641d8da_Str((*(_self_))._field_Elem.ptr()));
	return _2206d0e1c_Str(&_68817_s);;
}



inline jule::Bool _1c642d0d1_Equal(jule::Ptr<_1c642c91b_Arr> _self_, jule::Ptr<_1c641d522_TypeKind> _69721_other) {
	jule::Ptr<_1c642c91b_Arr> _69813_arr = _1c6421943_Arr(_69721_other.ptr());;
	if ((_69813_arr == nullptr)) {
		return false;;
	};
	return (((*(_self_))._field_N == (*(_69813_arr))._field_N) && _1c641dc2b_Equal((*(_self_))._field_Elem, (*(_69813_arr))._field_Elem));;
}





std::ostream &operator<<(std::ostream &_Stream, _1c642c91b_Arr _Src) {
	_Stream << _1c642cc90_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c642d763_Str(_1c642d3de_Ptr* _self_) {
	if (_1c642de28_IsUnsafe(_self_)) {
		return jule::Str("*unsafe", 7);;
	};
	return (jule::Str("*", 1) + _1c641d8da_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1c642daa4_Equal(jule::Ptr<_1c642d3de_Ptr> _self_, jule::Ptr<_1c641d522_TypeKind> _72121_other) {
	jule::Ptr<_1c642d3de_Ptr> _72213_ptr = _1c6421190_Ptr(_72121_other.ptr());;
	if ((_72213_ptr == nullptr)) {
		return false;;
	};
	return _1c641dc2b_Equal((*(_self_))._field_Elem, (*(_72213_ptr))._field_Elem);;
}



inline jule::Bool _1c642de28_IsUnsafe(_1c642d3de_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c642d3de_Ptr _Src) {
	_Stream << _1c642d763_Str(&_Src);
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c642e3e0_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1c6430b1c_pushErr(_1c64303d0_typeChecker* _self_, jule::Ptr<_1c6283a3b_Token> _80726_token, jule::Str _80741_fmt, jule::Slice<jule::Any> _80754_args) {
	_1c636a606_pushErr((*(_self_))._field_s.ptr(), _80726_token, _80741_fmt, _80754_args);
}



inline void _1c6430d1a_allowBuiltin(_1c64303d0_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1c6431018_disallowBuiltin(_1c64303d0_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _1ad2a7836_pushReference(_1c64303d0_typeChecker* _self_, jule::Ptr<_1c62bcab9_StructIns>* _81940_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1ace7d9e6_Exist((*(_self_))._field_refers.ptr(), (*(_81940_t)))) {
		return;;
	};
	_1c62d6a8e_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_81940_t)), &__jule_any_type9));
}

inline void _1ad2aa806_pushReference(_1c64303d0_typeChecker* _self_, jule::Ptr<_1c62e2e96_Trait>* _81940_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1ad2ac550_Exist((*(_self_))._field_refers.ptr(), (*(_81940_t)))) {
		return;;
	};
	_1c62d6a8e_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_81940_t)), &__jule_any_type10));
}



inline void _1c6431579_pushReferenceByKind(_1c64303d0_typeChecker* _self_, jule::Ptr<_1c641d522_TypeKind>* _82943_k) {
	{
		
		if ((_1c64221e6_Struct((*(_82943_k)).ptr()) != nullptr)) {
			_case_begin_1ad2a6428:;
			{
				jule::Ptr<_1c62bcab9_StructIns> _83221_t = _1c64221e6_Struct((*(_82943_k)).ptr());;
				_1ad2a7836_pushReference(_self_, &(_83221_t));
			}
		}
		else if ((_1c642247c_Trait((*(_82943_k)).ptr()) != nullptr)) {
			_case_begin_1ad2a64a0:;
			{
				jule::Ptr<_1c62e2e96_Trait> _83521_t = _1c642247c_Trait((*(_82943_k)).ptr());;
				_1ad2aa806_pushReference(_self_, &(_83521_t));
			}
		}
		_match_end_1ad2a6318:;
	};
}



inline void _1c6431997_pushCycleError(_1c64303d0_typeChecker* _self_, jule::Any _84029_def1, jule::Any _84040_def2, _2206c697e_StrBuilder* _84056_message) {
	;
	jule::Fn<jule::Str(jule::Any*)> _84213_getIdent = jule::Fn<jule::Str(jule::Any*)>([=](jule::Any* _84228_def) mutable -> jule::Str {
		{
			auto &_match_expr{ (*(_84228_def)) };
			
			if (_match_expr.type == &__jule_any_type66) {
				_case_begin_1ad2b018a:;
				{
					return (*((*(_84228_def)).cast_ptr<_1c641c730_TypeAlias>(&__jule_any_type66)))._field_Ident;;
				}
			}
			else if (_match_expr.type == &__jule_any_type65) {
				_case_begin_1ad2b0740:;
				{
					return (*((*(_84228_def)).cast_ptr<_1c62b9d3b_Struct>(&__jule_any_type65)))._field_Ident;;
				}
			}
			else {
				_case_begin_1ad2b0333:;
				{
					return jule::Str();;
				}
			}
			_match_end_1ad2b02cd:;
		};
	});;
	jule::Slice<jule::U8> _85213_buf = _2206d18bd_Buf(_84056_message);;
	jule::Str _85313_def1Ident = _84213_getIdent(&(_84029_def1));;
	jule::Str _85413_def2Ident = _84213_getIdent(&(_84040_def2));;
	jule::Str _85513_refersTo = _22196922b_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_85313_def1Ident, &__jule_any_type4),jule::Any(_85413_def2Ident, &__jule_any_type4)}));;
	_2206d0625_WriteStr(_84056_message, _2218bc547_Repeat(jule::Str(" ", 1), 7LL));
	_2206d0625_WriteStr(_84056_message, _85513_refersTo);
	_2206d08cd_WriteByte(_84056_message, '\n');
	_2206d036c_Write(_84056_message, _85213_buf);
}



inline jule::Bool _1c6431d93_checkCrossCycle(_1c64303d0_typeChecker* _self_, jule::Any _86230_decl, _2206c697e_StrBuilder* _86246_message) {
	{
		auto &_match_expr{ _86230_decl };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ad2b38a8:;
			{
				jule::Ptr<_1c641c730_TypeAlias> _86517_ta = _86230_decl.cast_ptr<_1c641c730_TypeAlias>(&__jule_any_type66);;
				{
					auto expr = &((*(_86517_ta))._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad2b459b:;
					if (it != expr_end) {
						jule::Any *_86620_d = it;
						{
							{
								
								if (((*(_86620_d)) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1ad2b50e6:;
									{
										_1c6431997_pushCycleError(_self_, jule::Any(_86517_ta, &__jule_any_type66), (*(_86620_d)), _86246_message);
										return false;;
									}
								}
								else if ((!(_1c6431d93_checkCrossCycle(_self_, (*(_86620_d)), _86246_message)))) {
									_case_begin_1ad2b516d:;
									{
										_1c6431997_pushCycleError(_self_, jule::Any(_86517_ta, &__jule_any_type66), (*(_86620_d)), _86246_message);
										return false;;
									}
								}
								_match_end_1ad2b4ed6:;
							};
						}
						_iter_next_1ad2b459b:;
						++it;
						goto _iter_begin_1ad2b459b;
					}
					_iter_end_1ad2b459b:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ad2b391e:;
			{
				jule::Ptr<_1c62b9d3b_Struct> _87717_s = _86230_decl.cast_ptr<_1c62b9d3b_Struct>(&__jule_any_type65);;
				{
					auto expr = &((*(_87717_s))._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad2b4cd8:;
					if (it != expr_end) {
						jule::Ptr<_1c62b9d3b_Struct> *_87820_d = it;
						{
							{
								
								if ((__jule_any_type65_compare((*((*(_self_))._field_referencer))._field_owner, (*(_87820_d))))) {
									_case_begin_1ad2b734b:;
									{
										_1c6431997_pushCycleError(_self_, jule::Any(_87717_s, &__jule_any_type65), jule::Any((*(_87820_d)), &__jule_any_type65), _86246_message);
										return false;;
									}
								}
								else if ((!(_1c6431d93_checkCrossCycle(_self_, jule::Any((*(_87820_d)), &__jule_any_type65), _86246_message)))) {
									_case_begin_1ad2b73c3:;
									{
										_1c6431997_pushCycleError(_self_, jule::Any(_87717_s, &__jule_any_type65), jule::Any((*(_87820_d)), &__jule_any_type65), _86246_message);
										return false;;
									}
								}
								_match_end_1ad2b723b:;
							};
						}
						_iter_next_1ad2b4cd8:;
						++it;
						goto _iter_begin_1ad2b4cd8;
					}
					_iter_end_1ad2b4cd8:;
				};
			}
		}
		_match_end_1ad2b3853:;
	};
	return true;;
}



inline jule::Bool _1c643228e_checkIllegalCycles(_1c64303d0_typeChecker* _self_, jule::Ptr<_1c6299854_IdentTypeDecl>* _89638_ident, jule::Any _89665_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _89665_decl };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ad2b932b:;
			{
				if ((*(_89665_decl.cast_ptr<_1c62b9d3b_Struct>(&__jule_any_type65)))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ad2b9392:;
			{
				if ((*(_89665_decl.cast_ptr<_1c641c730_TypeAlias>(&__jule_any_type66)))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1ad2b92c6:;
	};
	if ((_89665_decl == (*((*(_self_))._field_referencer))._field_owner)) {
		_1c6430b1c_pushErr(_self_, (*((*(_89638_ident))))._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_referencer))._field_ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_2206c697e_StrBuilder _91917_message = static__2206c6c9d_New(32LL);;
	if ((!(_1c6431d93_checkCrossCycle(_self_, _89665_decl, &(_91917_message))))) {
		jule::Str _92221_errMsg = _2206d0e1c_Str(&_91917_message);;
		_2206d111a_Clear(&_91917_message);
		_1c6431997_pushCycleError(_self_, (*((*(_self_))._field_referencer))._field_owner, _89665_decl, &(_91917_message));
		_92221_errMsg+=_2206d0e1c_Str(&_91917_message);
		_1c6430b1c_pushErr(_self_, (*((*(_89638_ident))))._field_Token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_92221_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ad2bda06:;
			{
				{
					{ jule::Slice<jule::Any> *__jule_push_dest = (*((*(_self_))._field_referencer))._field_refs; __jule_push_dest->push(_89665_decl); };
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ad2bda6c:;
			{
				{
					auto &_match_expr{ _89665_decl };
					
					if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1ad2be980:;
						{
							jule::Ptr<_1c62b9d3b_Struct> _93825_s = (*((*(_self_))._field_referencer))._field_owner.cast_ptr<_1c62b9d3b_Struct>(&__jule_any_type65);;
							{ jule::Slice<jule::Ptr<_1c62b9d3b_Struct>> &__jule_push_dest = (*(_93825_s))._field_Depends; __jule_push_dest.push(_89665_decl.cast_ptr<_1c62b9d3b_Struct>(&__jule_any_type65)); };
						}
					}
					_match_end_1ad2bdde1:;
				};
			}
		}
		_match_end_1ad2bd9a1:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait<_1c641d06b_Kind> _1c643268a_fromTypeAlias(_1c64303d0_typeChecker* _self_, jule::Ptr<_1c6299854_IdentTypeDecl>* _94633_decl, jule::Ptr<_1c641c730_TypeAlias>* _94660_ta) {
	if ((!(_1c636ad65_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_94660_ta))))._field_Public, (*((*(_94660_ta))))._field_Token)))) {
		_1c6430b1c_pushErr(_self_, (*((*(_94633_decl))))._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_94633_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	(*((*(_94660_ta))))._field_Used=true;
	if (((*((*(_94633_decl))))._field_Generics.len() > 0LL)) {
		_1c6430b1c_pushErr(_self_, (*((*(_94633_decl))))._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_94633_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad2c41c1:;
			if (it != expr_end) {
				jule::Ptr<_1c641c730_TypeAlias> _96320_bg = *it;
				{
					if (((_96320_bg == (*(_94660_ta))) || (((*((*((*(_94660_ta))))._field_Kind))._field_Kind != nullptr) && _1c641dc2b_Equal((*((*((*(_94660_ta))))._field_Kind))._field_Kind, (*((*(_96320_bg))._field_Kind))._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1ad2c41c1;
					};
				}
				_iter_next_1ad2c41c1:;
				++it;
				goto _iter_begin_1ad2c41c1;
			}
			_iter_end_1ad2c41c1:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad2c4db4:;
			if (it != expr_end) {
				jule::Ptr<_1c641c730_TypeAlias> _97420_bg = *it;
				{
					if ((_97420_bg == (*(_94660_ta)))) {
						_1c6430b1c_pushErr(_self_, (*((*(_94633_decl))))._field_Token, jule::Str("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*((*(_94633_decl))))._field_Ident, &__jule_any_type4)}));
						return nullptr;;
					};
					{
						auto expr = &((*((*(_94660_ta))))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ad2c7b86:;
						if (it != expr_end) {
							jule::Ptr<_1c641c730_TypeAlias> _97924_dg = *it;
							{
								if ((_97420_bg == _97924_dg)) {
									_1c6430b1c_pushErr(_self_, (*((*(_94633_decl))))._field_Token, jule::Str("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*((*(_94633_decl))))._field_Ident, &__jule_any_type4)}));
									return nullptr;;
								};
							}
							_iter_next_1ad2c7b86:;
							++it;
							goto _iter_begin_1ad2c7b86;
						}
						_iter_end_1ad2c7b86:;
					};
				}
				_iter_next_1ad2c4db4:;
				++it;
				goto _iter_begin_1ad2c4db4;
			}
			_iter_end_1ad2c4db4:;
		};
	};
	jule::Bool _98817_ok = _1c643228e_checkIllegalCycles(_self_, _94633_decl, jule::Any((*(_94660_ta)), &__jule_any_type66));;
	if ((!(_98817_ok))) {
		return nullptr;;
	};
	if (((*((*((*(_94660_ta))))._field_Kind))._field_Kind == nullptr)) {
		_98817_ok=_1c6376a1e_checkTypeAliasDeclKind((*(_self_))._field_s, _94660_ta, (*(_self_))._field_lookup);
		if ((!(_98817_ok))) {
			return nullptr;;
		};
	};
	if (((*((*(_94660_ta))))._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		{ jule::Slice<jule::Ptr<_1c641c730_TypeAlias>> &__jule_push_dest = (*((*(_self_))._field_ownerAlias))._field_Generics; __jule_push_dest.push((*(_94660_ta))); };
	};
	jule::Ptr<_1c641d522_TypeKind> _100717_tk = jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Generic=(*((*(_94660_ta))))._field_Generic, ._field_Kind=(*((*((*((*(_94660_ta))))._field_Kind))._field_Kind))._field_Kind});;
	_1c6431579_pushReferenceByKind(_self_, &(_100717_tk));
	if ((*((*(_94660_ta))))._field_Binded) {
		(*(_100717_tk))._field_BindIdent=(*((*(_94660_ta))))._field_Ident;
	} else {
		(*(_100717_tk))._field_BindIdent=(*((*((*((*(_94660_ta))))._field_Kind))._field_Kind))._field_BindIdent;
	};
	return jule::Trait<_1c641d06b_Kind>(_100717_tk, 19);;
}



inline jule::Ptr<_1c62e5691_Enum> _1c6432a86_fromEnum(_1c64303d0_typeChecker* _self_, jule::Ptr<_1c6299854_IdentTypeDecl>* _102028_decl, jule::Ptr<_1c62e5691_Enum>* _102055_e) {
	if ((!(_1c636ad65_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_102055_e))))._field_Public, (*((*(_102055_e))))._field_Token)))) {
		_1c6430b1c_pushErr(_self_, (*((*(_102028_decl))))._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_102028_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_102028_decl))))._field_Generics.len() > 0LL)) {
		_1c6430b1c_pushErr(_self_, (*((*(_102028_decl))))._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_102028_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_102055_e));;
}



inline jule::Ptr<_1c62e6d9b_TypeEnum> _1c6432e82_fromTypeEnum(_1c64303d0_typeChecker* _self_, jule::Ptr<_1c6299854_IdentTypeDecl>* _103232_decl, jule::Ptr<_1c62e6d9b_TypeEnum>* _103259_e) {
	if ((!(_1c636ad65_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_103259_e))))._field_Public, (*((*(_103259_e))))._field_Token)))) {
		_1c6430b1c_pushErr(_self_, (*((*(_103232_decl))))._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_103232_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_103232_decl))))._field_Generics.len() > 0LL)) {
		_1c6430b1c_pushErr(_self_, (*((*(_103232_decl))))._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_103232_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_103259_e));;
}



inline jule::Ptr<_1c62e2e96_Trait> _1c643337d_fromTrait(_1c64303d0_typeChecker* _self_, jule::Ptr<_1c6299854_IdentTypeDecl>* _104429_decl, jule::Ptr<_1c62e2e96_Trait>* _104456_t) {
	if ((!(_1c636ad65_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_104456_t))))._field_Public, (*((*(_104456_t))))._field_Token)))) {
		_1c6430b1c_pushErr(_self_, (*((*(_104429_decl))))._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_104429_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_104429_decl))))._field_Generics.len() > 0LL)) {
		_1c6430b1c_pushErr(_self_, (*((*(_104429_decl))))._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_104429_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	_1ad2aa806_pushReference(_self_, _104456_t);
	return (*(_104456_t));;
}



inline jule::Bool _1c6433779_checkStructIns(_1c64303d0_typeChecker* _self_, jule::Ptr<_1c62bcab9_StructIns>* _105738_ins, jule::Ptr<_1c6283a3b_Token>* _105760_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_105738_ins))))._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_105738_ins))))._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (__jule_any_type65_compare((*((*(_self_))._field_referencer))._field_owner, (*((*(_105738_ins))))._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1c6383113_precheckStructIns((*(_self_))._field_s, _105738_ins, (*(_105760_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*((*(_105738_ins))))._field_Generics.len() > 0LL)) {
		_1c6383b2a_checkStructInsOperators((*(_self_))._field_s, (*(_105738_ins)));
		_1c63833bb_checkStructIns((*(_self_))._field_s, _105738_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1c6433a32_appendUsedStructReference(_1c64303d0_typeChecker* _self_, jule::Ptr<_1c62b9d3b_Struct>* _107849_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ad2daced:;
			{
				jule::Ptr<_1c62b9d3b_Struct> _108421_refS = (*((*(_self_))._field_referencer))._field_owner.cast_ptr<_1c62b9d3b_Struct>(&__jule_any_type65);;
				if ((!(_1c62bb7bb_IsUses(_108421_refS.ptr(), (*(_107849_s)))))) {
					{ jule::Slice<jule::Ptr<_1c62b9d3b_Struct>> &__jule_push_dest = (*(_108421_refS))._field_Uses; __jule_push_dest.push((*(_107849_s))); };
				};
			}
		}
		_match_end_1ad2dac98:;
	};
}



inline jule::Ptr<_1c62bcab9_StructIns> _1c6433e2d_buildStructInstance(_1c64303d0_typeChecker* _self_, jule::Ptr<_1c6299854_IdentTypeDecl>* _109143_decl, jule::Ptr<_1c62b9d3b_Struct>* _109170_s) {
	jule::Ptr<_1c642e3e0_referencer> _109317_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1c641c730_TypeAlias>> _109517_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1ad2ddcbd:;
				{
					jule::Ptr<_1c6327a58_scopeChecker> _110225_sc = (*(_self_))._field_lookup.cast_ptr<_1c6327a58_scopeChecker>(0);;
					jule::Ptr<_1c6327a58_scopeChecker> _110325_hard = _1c632add0_getHardRoot(_110225_sc);;
					if ((((*((*(_110325_hard))._field_owner))._field_Owner == nullptr) || ((*((*((*(_110325_hard))._field_owner))._field_Owner))._field_Decl != (*(_109170_s))))) {
						goto _match_end_1ad2ddc68;
					};
					jule::I64 _110721_n = ((*((*(_110325_hard))._field_owner))._field_Generics.len() + (*((*((*(_110325_hard))._field_owner))._field_Owner))._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=(*((*(_110325_hard))._field_table))._field_TypeAliases.slice(0LL, _110721_n);
				}
			}
			_match_end_1ad2ddc68:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait<_1c643d058_Lookup> _111717_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1c62bcab9_StructIns> _112117_ins = _1c62ba29d_instance((*(_109170_s)));;
	(*(_112117_ins))._field_Generics=jule::Slice<jule::Ptr<_1c641bb3b_InsGeneric>>::alloc(0LL, (*((*(_109143_decl))))._field_Generics.len());
	{
		auto expr = &((*((*(_109143_decl))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad2e3b19:;
		if (it != expr_end) {
			jule::Ptr<_1c6299249_TypeDecl> _112321_g = *it;
			{
				jule::Ptr<_1c641d522_TypeKind> _112421_kind = _1c6437739_build(_self_, &((*(_112321_g))._field_Kind));;
				if ((_112421_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1c641bb3b_InsGeneric>> &__jule_push_dest = (*(_112117_ins))._field_Generics; __jule_push_dest.push(jule::new_ptr<_1c641bb3b_InsGeneric>(_1c641bb3b_InsGeneric{._field_Kind=_112421_kind, })); };
			}
			_iter_next_1ad2e3b19:;
			++it;
			goto _iter_begin_1ad2e3b19;
		}
		_iter_end_1ad2e3b19:;
	};
	(*(_self_))._field_lookup=_111717_lookup;
	(*(_self_))._field_bannedGenerics=_109517_bannedGenerics;
	(*(_self_))._field_referencer=_109317_referencer;
	return _112117_ins;;
}



inline jule::Ptr<_1c62bcab9_StructIns> _1c6434329_fromStruct(_1c64303d0_typeChecker* _self_, jule::Ptr<_1c6299854_IdentTypeDecl>* _113934_decl, jule::Ptr<_1c62b9d3b_Struct>* _113961_s) {
	if ((!(_1c636ad65_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_113961_s))))._field_Public, (*((*(_113961_s))))._field_Token)))) {
		_1c6430b1c_pushErr(_self_, (*((*(_113934_decl))))._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_113934_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*((*(_113934_decl))))._field_Generics.len() > 0LL)) {
			_1c6430b1c_pushErr(_self_, (*((*(_113934_decl))))._field_Token, jule::Str("generics are not allowed in this scope", 38), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1c62bcab9_StructIns>(_1c62bcab9_StructIns{._field_Decl=(*(_113961_s)), });;
	};
	jule::Bool _115717_ok = _1c643228e_checkIllegalCycles(_self_, _113934_decl, jule::Any((*(_113961_s)), &__jule_any_type65));;
	if ((!(_115717_ok))) {
		return nullptr;;
	};
	_1c6433a32_appendUsedStructReference(_self_, _113961_s);
	jule::Ptr<_1c62bcab9_StructIns> _116317_ins = _1c6433e2d_buildStructInstance(_self_, _113934_decl, _113961_s);;
	if ((_116317_ins == nullptr)) {
		return nullptr;;
	};
	_115717_ok=_1c636bb35_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I64>((*((*(_116317_ins))._field_Decl))._field_Generics.len()), static_cast<jule::I64>((*(_116317_ins))._field_Generics.len()), (*((*(_113934_decl))))._field_Token);
	if ((!(_115717_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1c62bcab9_StructIns> _117317_existInstance = _1c62ba5ab_appendInstance((*(_113961_s)).ptr(), &(_116317_ins));;
	if ((_117317_existInstance != nullptr)) {
		if ((!(_1c6374c1a_checkConstraintsStruct((*(_self_))._field_s, &(_116317_ins), &((*((*(_113934_decl))))._field_Token), _117317_existInstance)))) {
			return nullptr;;
		};
		_1ad2a7836_pushReference(_self_, &(_117317_existInstance));
		return _117317_existInstance;;
	};
	if ((!(_1c6433779_checkStructIns(_self_, &(_116317_ins), &((*((*(_113934_decl))))._field_Token))))) {
		return nullptr;;
	};
	_1ad2a7836_pushReference(_self_, &(_116317_ins));
	return _116317_ins;;
}



inline jule::Trait<_1c641d06b_Kind> _1c643466a_getDef(_1c64303d0_typeChecker* _self_, jule::Ptr<_1c6299854_IdentTypeDecl>* _119730_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad2ee4b5:;
		if (it != expr_end) {
			jule::Ptr<_1c62a6454_GenericDecl> _119816_g = *it;
			{
				if (((*(_119816_g))._field_Ident == (*((*(_119730_decl))))._field_Ident)) {
					return jule::Trait<_1c641d06b_Kind>(_1c643a440_buildPrimType((*(_119816_g))._field_Ident), 20);;
				};
			}
			_iter_next_1ad2ee4b5:;
			++it;
			goto _iter_begin_1ad2ee4b5;
		}
		_iter_end_1ad2ee4b5:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad300906:;
		if (it != expr_end) {
			jule::Ptr<_1c641c730_TypeAlias> _120421_g = *it;
			{
				if (((*(_120421_g))._field_Ident == (*((*(_119730_decl))))._field_Ident)) {
					if (((*((*(_119730_decl))))._field_Generics.len() > 0LL)) {
						_1c6430b1c_pushErr(_self_, (*((*(_119730_decl))))._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_119730_decl))))._field_Ident, &__jule_any_type4)}));
						return nullptr;;
					};
					jule::Ptr<_1c62bcab9_StructIns> _121025_st = _1c64221e6_Struct((*((*(_120421_g))._field_Kind))._field_Kind.ptr());;
					if ((_121025_st != nullptr)) {
						jule::Bool _121225_ok = _1c643228e_checkIllegalCycles(_self_, _119730_decl, jule::Any((*(_121025_st))._field_Decl, &__jule_any_type65));;
						if ((!(_121225_ok))) {
							return nullptr;;
						};
					};
					return (*((*((*(_120421_g))._field_Kind))._field_Kind))._field_Kind;;
				};
			}
			_iter_next_1ad300906:;
			++it;
			goto _iter_begin_1ad300906;
		}
		_iter_end_1ad300906:;
	};
	if ((!((*((*(_119730_decl))))._field_Binded))) {
		jule::Ptr<_1c62e5691_Enum> _122221_e = _1c643d058_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c643cab3_FindEnum((*(_self_))._field_lookup, (*((*(_119730_decl))))._field_Ident);;
		if ((_122221_e != nullptr)) {
			return jule::Trait<_1c641d06b_Kind>(_1c6432a86_fromEnum(_self_, _119730_decl, &(_122221_e)), 3);;
		};
		jule::Ptr<_1c62e6d9b_TypeEnum> _122721_te = _1c643d058_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c643ce04_FindTypeEnum((*(_self_))._field_lookup, (*((*(_119730_decl))))._field_Ident);;
		if ((_122721_te != nullptr)) {
			return jule::Trait<_1c641d06b_Kind>(_1c6432e82_fromTypeEnum(_self_, _119730_decl, &(_122721_te)), 4);;
		};
		jule::Ptr<_1c62e2e96_Trait> _123221_t = _1c643d058_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c643c772_FindTrait((*(_self_))._field_lookup, (*((*(_119730_decl))))._field_Ident);;
		if ((_123221_t != nullptr)) {
			return jule::Trait<_1c641d06b_Kind>(_1c643337d_fromTrait(_self_, _119730_decl, &(_123221_t)), 2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1c6430b1c_pushErr(_self_, (*((*(_119730_decl))))._field_Token, jule::Str("binded definitions are not allowed in this scope", 48), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c62b9d3b_Struct> _124117_s = _1c643d058_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c643c035_FindStruct((*(_self_))._field_lookup, (*((*(_119730_decl))))._field_Ident, (*((*(_119730_decl))))._field_Binded);;
	if ((_124117_s != nullptr)) {
		return jule::Trait<_1c641d06b_Kind>(_1c6434329_fromStruct(_self_, _119730_decl, &(_124117_s)), 0);;
	};
	jule::Ptr<_1c641c730_TypeAlias> _124617_ta = _1c643d058_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c643bb39_FindTypeAlias((*(_self_))._field_lookup, (*((*(_119730_decl))))._field_Ident, (*((*(_119730_decl))))._field_Binded);;
	if (((_124617_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_124617_ta=_1c650c49b_findBuiltinTypeAlias((*((*(_119730_decl))))._field_Ident);
	};
	if ((_124617_ta != nullptr)) {
		return _1c643268a_fromTypeAlias(_self_, _119730_decl, &(_124617_ta));;
	};
	_1c6430b1c_pushErr(_self_, (*((*(_119730_decl))))._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_119730_decl))))._field_Ident, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Trait<_1c641d06b_Kind> _1c64349ab_buildIdent(_1c64303d0_typeChecker* _self_, jule::Ptr<_1c6299854_IdentTypeDecl> _125833_decl) {
	return _1c643466a_getDef(_self_, &(_125833_decl));;
}



inline jule::Trait<_1c641d06b_Kind> _1c6434cec_buildSubIdent(_1c64303d0_typeChecker* _self_, jule::Ptr<_1c6299b51_SubIdentTypeDecl> _126236_decl) {
	jule::Trait<_1c641d06b_Kind> _126317_ident = _1c64349ab_buildIdent(_self_, (*(_126236_decl))._field_Idents[0LL]);;
	if ((_126317_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _126317_ident };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1ad312b5a:;
			{
				goto _match_end_1ad3125c7;
			}
		}
		else {
			_case_begin_1ad31262c:;
			{
				_1c6430b1c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad3125c7:;
	};
	jule::Ptr<_1c62e6d9b_TypeEnum> _127417_t = _126317_ident.cast_ptr<_1c62e6d9b_TypeEnum>(4);;
	jule::Slice<jule::Ptr<_1c6299854_IdentTypeDecl>> _127517_idents = (*(_126236_decl))._field_Idents.slice(1LL);;
	{
		auto expr = &(_127517_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad313c27:;
		if (it != expr_end) {
			jule::I64 _127613_i = it - expr->begin();
			jule::Ptr<_1c6299854_IdentTypeDecl> _127616_id = *it;
			{
				jule::Ptr<_1c62e67c4_TypeEnumItem> _127721_item = _1c62e795c_FindItem(_127417_t.ptr(), (*(_127616_id))._field_Ident);;
				if ((_127721_item == nullptr)) {
					_1c6430b1c_pushErr(_self_, (*(_127616_id))._field_Token, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_127417_t))._field_Ident, &__jule_any_type4),jule::Any((*(_127616_id))._field_Ident, &__jule_any_type4)}));
					return nullptr;;
				};
				if (((_127517_idents.len() - _127613_i) == 1LL)) {
					_1c6431579_pushReferenceByKind(_self_, &((*((*(_127721_item))._field_Kind))._field_Kind));
					return jule::Trait<_1c641d06b_Kind>((*((*(_127721_item))._field_Kind))._field_Kind, 19);;
				};
				_127417_t=_1c64216ac_TypeEnum((*((*(_127721_item))._field_Kind))._field_Kind.ptr());
				if ((_127417_t == nullptr)) {
					_1c6430b1c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1ad313c27:;
			++it;
			_127613_i++;
			goto _iter_begin_1ad313c27;
		}
		_iter_end_1ad313c27:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c6429b27_Sptr> _1c643513d_buildSptrFromType(_1c64303d0_typeChecker* _self_, jule::Ptr<_1c641d522_TypeKind>* _129641_elem) {
	{
		
		if (((*(_129641_elem)) == nullptr)) {
			_case_begin_1ad3183ad:;
			{
				return nullptr;;
			}
		}
		else if ((_1c64221e6_Struct((*(_129641_elem)).ptr()) != nullptr)) {
			_case_begin_1ad318435:;
			{
				jule::Ptr<_1c62bcab9_StructIns> _130217_s = _1c64221e6_Struct((*(_129641_elem)).ptr());;
				if ((((*(_130217_s))._field_Decl != nullptr) && (*((*(_130217_s))._field_Decl))._field_Binded)) {
					_1c6430b1c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1c6421943_Arr((*(_129641_elem)).ptr()) != nullptr) && (*(_1c6421943_Arr((*(_129641_elem)).ptr())))._field_Auto)) {
			_case_begin_1ad3184ac:;
			{
				_1c6430b1c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad317b1b:;
	};
	return jule::new_ptr<_1c6429b27_Sptr>(_1c6429b27_Sptr{._field_Elem=(*(_129641_elem))});;
}



inline jule::Ptr<_1c6429b27_Sptr> _1c643547e_buildSptr(_1c64303d0_typeChecker* _self_, jule::Ptr<_1c629a2e4_SptrTypeDecl> _131632_decl) {
	jule::Bool _131713_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_131713_cycleRisk;
	});;
	jule::Ptr<_1c641d522_TypeKind> _132117_elem = _1c6437a7a_checkDecl(_self_, &((*(_131632_decl))._field_Elem));;
	return _1c643513d_buildSptrFromType(_self_, &(_132117_elem));;
}



inline jule::Ptr<_1c642d3de_Ptr> _1c64357c0_buildPtrFromType(_1c64303d0_typeChecker* _self_, jule::Ptr<_1c641d522_TypeKind>* _132540_elem) {
	{
		
		if (((*(_132540_elem)) == nullptr)) {
			_case_begin_1ad31d54a:;
			{
				return nullptr;;
			}
		}
		else if (((_1c6421943_Arr((*(_132540_elem)).ptr()) != nullptr) && (*(_1c6421943_Arr((*(_132540_elem)).ptr())))._field_Auto)) {
			_case_begin_1ad31d5c2:;
			{
				_1c6430b1c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return jule::new_ptr<_1c642d3de_Ptr>();;
			}
		}
		_match_end_1ad31d43a:;
	};
	return jule::new_ptr<_1c642d3de_Ptr>(_1c642d3de_Ptr{._field_Elem=(*(_132540_elem))});;
}



inline jule::Ptr<_1c642d3de_Ptr> _1c6435b11_buildPtr(_1c64303d0_typeChecker* _self_, jule::Ptr<_1c629ac73_PtrTypeDecl> _134031_decl) {
	jule::Bool _134113_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_134113_cycleRisk;
	});;
	jule::Ptr<_1c641d522_TypeKind> _134517_elem = nullptr;;
	if ((!(_1c629b0d6_IsUnsafe(_134031_decl.ptr())))) {
		_134517_elem=_1c6437a7a_checkDecl(_self_, &((*(_134031_decl))._field_Elem));
		return _1c64357c0_buildPtrFromType(_self_, &(_134517_elem));;
	};
	return jule::new_ptr<_1c642d3de_Ptr>(_1c642d3de_Ptr{._field_Elem=_134517_elem});;
}



inline jule::Ptr<_1c642a5ea_Slc> _1c6435e52_buildSlc(_1c64303d0_typeChecker* _self_, jule::Ptr<_1c629a679_SlcTypeDecl> _135731_decl) {
	jule::Bool _135813_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_135813_cycleRisk;
	});;
	jule::Ptr<_1c641d522_TypeKind> _136217_elem = _1c6437a7a_checkDecl(_self_, &((*(_135731_decl))._field_Elem));;
	{
		
		if ((_136217_elem == nullptr)) {
			_case_begin_1ad3236b5:;
			{
				return nullptr;;
			}
		}
		else if (((_1c6421943_Arr(_136217_elem.ptr()) != nullptr) && (*(_1c6421943_Arr(_136217_elem.ptr())))._field_Auto)) {
			_case_begin_1ad32373c:;
			{
				_1c6430b1c_pushErr(_self_, (*((*(_135731_decl))._field_Elem))._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad32363d:;
	};
	return jule::new_ptr<_1c642a5ea_Slc>(_1c642a5ea_Slc{._field_Elem=_136217_elem});;
}



inline jule::Ptr<_1c642c91b_Arr> _1c6436293_buildArr(_1c64303d0_typeChecker* _self_, jule::Ptr<_1c629b515_ArrTypeDecl> _137831_decl) {
	jule::I64 _137917_n = 0LL;;
	if ((!(_1c629b878_AutoSized(_137831_decl.ptr())))) {
		jule::Ptr<_1c63dd35a_Data> _138221_size = _1c640d028_evalExpr(_1c6372aa3_eval((*(_self_))._field_s, (*(_self_))._field_lookup), (*(_137831_decl))._field_Size);;
		if ((_138221_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1c63ddc2e_IsConst(_138221_size.ptr())))) {
			_1c6430b1c_pushErr(_self_, (*((*(_137831_decl))._field_Size))._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1c6420b73_Prim((*(_138221_size))._field_Kind.ptr()) == nullptr) || (!(_1dc25e88b_IsInt((*(_1c6420b73_Prim((*(_138221_size))._field_Kind.ptr())))._field_Kind))))) {
			_1c6430b1c_pushErr(_self_, (*((*(_137831_decl))._field_Size))._field_Token, jule::Str("array size must be integer", 26), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_137917_n=static_cast<jule::I64>(static_cast<jule::I64>(_1dc262c35_AsI64((*(_138221_size))._field_Constant.ptr())));
		if ((_137917_n < 0LL)) {
			_1c6430b1c_pushErr(_self_, (*((*(_137831_decl))._field_Elem))._field_Token, jule::Str("array size must be positive integer", 35), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _140021_max = _1dc2587a8_MaxI(jule::Str("int", 3));;
			if (((_1dc2513e9_BitSize != 64LL) && (static_cast<jule::I64>(_137917_n) > _140021_max))) {
				_1c6430b1c_pushErr(_self_, (*((*(_137831_decl))._field_Size))._field_Token, jule::Str("array with size @ overflows limit (@) of the system", 51), jule::Slice<jule::Any>::make({jule::Any(_1c641a2cc_constoa(&((*(_138221_size))._field_Constant)), &__jule_any_type4),jule::Any(_1dc24ec99_FmtInt(_140021_max, 10LL), &__jule_any_type4)}));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_1c641d522_TypeKind> _140917_elem = _1c6437a7a_checkDecl(_self_, &((*(_137831_decl))._field_Elem));;
	{
		
		if ((_140917_elem == nullptr)) {
			_case_begin_1ad32d1d6:;
			{
				return nullptr;;
			}
		}
		else if (((_1c6421943_Arr(_140917_elem.ptr()) != nullptr) && (*(_1c6421943_Arr(_140917_elem.ptr())))._field_Auto)) {
			_case_begin_1ad32d25d:;
			{
				_1c6430b1c_pushErr(_self_, (*((*(_137831_decl))._field_Elem))._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad325c7d:;
	};
	return jule::new_ptr<_1c642c91b_Arr>(_1c642c91b_Arr{._field_Auto=_1c629b878_AutoSized(_137831_decl.ptr()), ._field_N=_137917_n, ._field_Elem=_140917_elem});;
}



inline jule::Ptr<_1c642bc8e_Map> _1c64365d4_buildMap(_1c64303d0_typeChecker* _self_, jule::Ptr<_1c629bc63_MapTypeDecl> _142731_decl) {
	jule::Bool _142813_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_142813_cycleRisk;
	});;
	jule::Ptr<_1c641d522_TypeKind> _143217_key = _1c6437a7a_checkDecl(_self_, &((*(_142731_decl))._field_Key));;
	if ((_143217_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c641d522_TypeKind> _143717_val = _1c6437a7a_checkDecl(_self_, &((*(_142731_decl))._field_Val));;
	if ((_143717_val == nullptr)) {
		return nullptr;;
	};
	if ((_1c6421426_Enum(_143717_val.ptr()) != nullptr)) {
		_1c6430b1c_pushErr(_self_, (*((*(_142731_decl))._field_Val))._field_Token, jule::Str("maps do not support enums as map key type", 41), jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1c642bc8e_Map>(_1c642bc8e_Map{._field_Key=_143217_key, ._field_Val=_143717_val});;
}



inline jule::Ptr<_1c642b1de_Tuple> _1c6436925_buildTuple(_1c64303d0_typeChecker* _self_, jule::Ptr<_1c629a976_TupleTypeDecl> _145133_decl) {
	jule::Slice<jule::Ptr<_1c641d522_TypeKind>> _145217_types = jule::Slice<jule::Ptr<_1c641d522_TypeKind>>::alloc(0LL, (*(_145133_decl))._field_Types.len());;
	{
		auto expr = &((*(_145133_decl))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad334231:;
		if (it != expr_end) {
			jule::Ptr<_1c6299249_TypeDecl> _145321_t = *it;
			{
				jule::Ptr<_1c641d522_TypeKind> _145421_kind = _1c6437a7a_checkDecl(_self_, &(_145321_t));;
				if ((_145421_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1c641d522_TypeKind>> &__jule_push_dest = _145217_types; __jule_push_dest.push(_145421_kind); };
			}
			_iter_next_1ad334231:;
			++it;
			goto _iter_begin_1ad334231;
		}
		_iter_end_1ad334231:;
	};
	return jule::new_ptr<_1c642b1de_Tuple>(_1c642b1de_Tuple{._field_Types=_145217_types});;
}



inline jule::Bool _1c6436c66_checkFuncTypes(_1c64303d0_typeChecker* _self_, jule::Ptr<_1c62d2b01_FnIns>* _146438_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_146438_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad335c9e:;
		if (it != expr_end) {
			jule::Ptr<_1c62d1b55_ParamIns> _146521_p = *it;
			{
				(*(_146521_p))._field_Kind=_1c6437739_build(_self_, &((*((*((*((*(_146521_p))._field_Decl))._field_Kind))._field_Decl))._field_Kind));
				__jule_func_result=((*(_146521_p))._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1c63753be_checkFnParamKind((*(_self_))._field_s, &(_146521_p));
			}
			_iter_next_1ad335c9e:;
			++it;
			goto _iter_begin_1ad335c9e;
		}
		_iter_end_1ad335c9e:;
	};
	if ((!(_1c62d0170_IsVoid((*((*(_146438_f))))._field_Decl.ptr())))) {
		(*((*(_146438_f))))._field_Result=_1c6437739_build(_self_, &((*((*((*((*((*((*(_146438_f))))._field_Decl))._field_Result))._field_Kind))._field_Decl))._field_Kind));
		__jule_func_result = ((*((*(_146438_f))))._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1c62d2b01_FnIns> _1c64370a7_buildFunc(_1c64303d0_typeChecker* _self_, jule::Ptr<_1c62aae09_FnDecl> _148232_decl) {
	jule::Bool _148313_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_148313_cycleRisk;
	});;
	if (((*(_148232_decl))._field_Generics.len() > 0LL)) {
		_1c6430b1c_pushErr(_self_, (*(_148232_decl))._field_Token, jule::Str("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c62cebec_Fn> _149217_f = _1c62d92bc_buildFunc(_148232_decl);;
	jule::I64 _149413_n = (*((*(_self_))._field_s))._field_errors.len();;
	_1c637e6b4_checkAnonFuncDecl((*(_self_))._field_s, &(_149217_f));
	if ((_149413_n != (*((*(_self_))._field_s))._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1c62d2b01_FnIns> _150017_ins = _1c62d11c6_instanceForce(_149217_f);;
	(*(_150017_ins))._field_Anon=true;
	jule::Bool _150313_ok = _1c6436c66_checkFuncTypes(_self_, &(_150017_ins));;
	if ((!(_150313_ok))) {
		return nullptr;;
	};
	return _150017_ins;;
}



inline jule::Trait<_1c641d06b_Kind> _1c64373e8_buildByNamespace(_1c64303d0_typeChecker* _self_, jule::Ptr<_1c6299ee7_NamespaceTypeDecl> _151139_decl) {
	jule::Str _151213_path = _1c643a099_buildLinkPathByTokens(&((*(_151139_decl))._field_Idents));;
	jule::Ptr<_1c63469de_ImportInfo> _151317_imp = _1c643d058_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c643b342_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1c63469de_ImportInfo>)>([=](jule::Ptr<_1c63469de_ImportInfo> _151352_imp) mutable -> jule::Bool {
		if ((((*(_151139_decl))._field_Idents.len() == 1LL) && ((*(_151352_imp))._field_Alias == _151213_path))) {
			return true;;
		};
		return (((*(_151352_imp))._field_LinkPath == _151213_path) && _1c6349607_isAccessibleViaSelection(_151352_imp.ptr()));;
	}));;
	jule::Str _152013_selfIdent = jule::Str("self", 4);;
	if (((_151317_imp == nullptr) || (!(_1c6349030_isLookupable(_151317_imp.ptr(), &(_152013_selfIdent)))))) {
		_1c6430b1c_pushErr(_self_, (*(_151139_decl))._field_Idents[0LL], jule::Str("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_151213_path, &__jule_any_type4)}));
		return nullptr;;
	};
	_1c6431018_disallowBuiltin(_self_);
	jule::Trait<_1c643d058_Lookup> _152717_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1c643d058_Lookup>(_151317_imp, 1);
	jule::Ptr<_1c641d522_TypeKind> _152917_kind = _1c6437a7a_checkDecl(_self_, &((*(_151139_decl))._field_Kind));;
	(*(_self_))._field_lookup=_152717_lookup;
	_1c6430d1a_allowBuiltin(_self_);
	return jule::Trait<_1c641d06b_Kind>(_152917_kind, 19);;
}



inline jule::Ptr<_1c641d522_TypeKind> _1c6437739_build(_1c64303d0_typeChecker* _self_, jule::Any* _153529_declKind) {
	jule::Trait<_1c641d06b_Kind> _153617_kind = nullptr;;
	{
		auto &_match_expr{ (*(_153529_declKind)) };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1ad34609a:;
			{
				jule::Trait<_1c641d06b_Kind> _153921_t = _1c64349ab_buildIdent(_self_, (*(_153529_declKind)).cast_ptr<_1c6299854_IdentTypeDecl>(&__jule_any_type20));;
				if ((_153921_t != nullptr)) {
					_153617_kind=_153921_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1ad345462:;
			{
				jule::Trait<_1c641d06b_Kind> _154421_t = _1c6434cec_buildSubIdent(_self_, (*(_153529_declKind)).cast_ptr<_1c6299b51_SubIdentTypeDecl>(&__jule_any_type86));;
				if ((_154421_t != nullptr)) {
					_153617_kind=_154421_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1ad345660:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c6429b27_Sptr> _155021_t = _1c643547e_buildSptr(_self_, (*(_153529_declKind)).cast_ptr<_1c629a2e4_SptrTypeDecl>(&__jule_any_type72));;
				if ((_155021_t != nullptr)) {
					_153617_kind=jule::Trait<_1c641d06b_Kind>(_155021_t, 21);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1ad3456c6:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c642d3de_Ptr> _155621_t = _1c6435b11_buildPtr(_self_, (*(_153529_declKind)).cast_ptr<_1c629ac73_PtrTypeDecl>(&__jule_any_type71));;
				if ((_155621_t != nullptr)) {
					_153617_kind=jule::Trait<_1c641d06b_Kind>(_155621_t, 26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1ad34573c:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c642a5ea_Slc> _156221_t = _1c6435e52_buildSlc(_self_, (*(_153529_declKind)).cast_ptr<_1c629a679_SlcTypeDecl>(&__jule_any_type70));;
				if ((_156221_t != nullptr)) {
					_153617_kind=jule::Trait<_1c641d06b_Kind>(_156221_t, 22);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1ad3457a3:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c642c91b_Arr> _156821_t = _1c6436293_buildArr(_self_, (*(_153529_declKind)).cast_ptr<_1c629b515_ArrTypeDecl>(&__jule_any_type69));;
				if ((_156821_t != nullptr)) {
					_153617_kind=jule::Trait<_1c641d06b_Kind>(_156821_t, 25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1ad346177:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c642bc8e_Map> _157421_t = _1c64365d4_buildMap(_self_, (*(_153529_declKind)).cast_ptr<_1c629bc63_MapTypeDecl>(&__jule_any_type73));;
				if ((_157421_t != nullptr)) {
					_153617_kind=jule::Trait<_1c641d06b_Kind>(_157421_t, 24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1ad3461dd:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c642b1de_Tuple> _158021_t = _1c6436925_buildTuple(_self_, (*(_153529_declKind)).cast_ptr<_1c629a976_TupleTypeDecl>(&__jule_any_type74));;
				if ((_158021_t != nullptr)) {
					_153617_kind=jule::Trait<_1c641d06b_Kind>(_158021_t, 23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ad346254:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c62d2b01_FnIns> _158621_t = _1c64370a7_buildFunc(_self_, (*(_153529_declKind)).cast_ptr<_1c62aae09_FnDecl>(&__jule_any_type14));;
				if ((_158621_t != nullptr)) {
					_153617_kind=jule::Trait<_1c641d06b_Kind>(_158621_t, 1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1ad3462ba:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait<_1c641d06b_Kind> _159221_t = _1c64373e8_buildByNamespace(_self_, (*(_153529_declKind)).cast_ptr<_1c6299ee7_NamespaceTypeDecl>(&__jule_any_type90));;
				if ((_159221_t != nullptr)) {
					_153617_kind=_159221_t;
				};
			}
		}
		else {
			_case_begin_1ad3455e9:;
			{
				_1c6430b1c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad345594:;
	};
	if ((_153617_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _153617_kind };
		
		if (_match_expr.type_is(true, 19)) {
			_case_begin_1ad354064:;
			{
				return _153617_kind.cast_ptr<_1c641d522_TypeKind>(19);;
			}
		}
		else {
			_case_begin_1ad346573:;
			{
				jule::Ptr<_1c641d522_TypeKind> _160721_tk = jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=_153617_kind});;
				{
					auto &_match_expr{ _153617_kind };
					
					if (_match_expr.type_is(true, 20)) {
						_case_begin_1ad352392:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_1c641d522_TypeKind>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_160721_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, 0)) {
						_case_begin_1ad352419:;
						{
							jule::Ptr<_1c62bcab9_StructIns> _161421_s = _153617_kind.cast_ptr<_1c62bcab9_StructIns>(0);;
							if ((((*(_161421_s))._field_Decl != nullptr) && (*((*(_161421_s))._field_Decl))._field_Binded)) {
								(*(_160721_tk))._field_BindIdent=(*((*(_161421_s))._field_Decl))._field_Ident;
							};
						}
					}
					_match_end_1ad35232b:;
				};
				return _160721_tk;;
			}
		}
		_match_end_1ad351407:;
	};
}



inline jule::Ptr<_1c641d522_TypeKind> _1c6437a7a_checkDecl(_1c64303d0_typeChecker* _self_, jule::Ptr<_1c6299249_TypeDecl>* _162333_decl) {
	jule::Ptr<_1c6283a3b_Token> _162517_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*((*(_162333_decl))))._field_Token;
	jule::Ptr<_1c641d522_TypeKind> _162817_kind = _1c6437739_build(_self_, &((*((*(_162333_decl))))._field_Kind));;
	(*(_self_))._field_errorToken=_162517_errorToken;
	return _162817_kind;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c64303d0_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "cycleRisk:" << _Src._field_cycleRisk << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1c64384c6_prim(jule::Str* _165021_ident, jule::Ptr<_1c64260eb_Prim> _165033_t) {
	return ((*(_165033_t))._field_Kind == (*(_165021_ident)));;
}



inline jule::Bool static__1c643884a_exist(jule::Str* _165422_ident, jule::Ptr<_1c641d522_TypeKind>* _165439_k) {
	{
		
		if ((_1c6420b73_Prim((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1ad358d05:;
			{
				return static__1c64384c6_prim(_165422_ident, _1c6420b73_Prim((*(_165439_k)).ptr()));;
			}
		}
		else if ((_1c6420e09_Sptr((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1ad358d7c:;
			{
				jule::Ptr<_1c6429b27_Sptr> _165921_sptr = _1c6420e09_Sptr((*(_165439_k)).ptr());;
				return static__1c643884a_exist(_165422_ident, &((*(_165921_sptr))._field_Elem));;
			}
		}
		else if ((_1c6421190_Ptr((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1ad359102:;
			{
				jule::Ptr<_1c642d3de_Ptr> _166221_ptr = _1c6421190_Ptr((*(_165439_k)).ptr());;
				return static__1c643884a_exist(_165422_ident, &((*(_166221_ptr))._field_Elem));;
			}
		}
		else if ((_1c6421bc9_Slc((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1ad359168:;
			{
				jule::Ptr<_1c642a5ea_Slc> _166521_slc = _1c6421bc9_Slc((*(_165439_k)).ptr());;
				return static__1c643884a_exist(_165422_ident, &((*(_166521_slc))._field_Elem));;
			}
		}
		else if ((_1c6421943_Arr((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1ad3591ce:;
			{
				jule::Ptr<_1c642c91b_Arr> _166821_arr = _1c6421943_Arr((*(_165439_k)).ptr());;
				return static__1c643884a_exist(_165422_ident, &((*(_166821_arr))._field_Elem));;
			}
		}
		else if ((_1c6422713_Map((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1ad359256:;
			{
				jule::Ptr<_1c642bc8e_Map> _167121_m = _1c6422713_Map((*(_165439_k)).ptr());;
				return (static__1c643884a_exist(_165422_ident, &((*(_167121_m))._field_Key)) || static__1c643884a_exist(_165422_ident, &((*(_167121_m))._field_Val)));;
			}
		}
		else if ((_1c64221e6_Struct((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1ad3592cd:;
			{
				jule::Ptr<_1c62bcab9_StructIns> _167521_s = _1c64221e6_Struct((*(_165439_k)).ptr());;
				{
					auto expr = &((*(_167521_s))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad360c1e:;
					if (it != expr_end) {
						jule::Ptr<_1c641bb3b_InsGeneric> _167625_g = *it;
						{
							if (static__1c643884a_exist(_165422_ident, &((*(_167625_g))._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1ad360c1e:;
						++it;
						goto _iter_begin_1ad360c1e;
					}
					_iter_end_1ad360c1e:;
				};
				return false;;
			}
		}
		else if ((_1c6421e60_Fn((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1ad3593dd:;
			{
				jule::Ptr<_1c62d2b01_FnIns> _168321_f = _1c6421e60_Fn((*(_165439_k)).ptr());;
				{
					auto expr = &((*(_168321_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad36288b:;
					if (it != expr_end) {
						jule::Ptr<_1c62d1b55_ParamIns> _168425_p = *it;
						{
							if (_1c62cd844_IsSelf((*(_168425_p))._field_Decl.ptr())) {
								goto _iter_next_1ad36288b;
							};
							if (static__1c643884a_exist(_165422_ident, &((*(_168425_p))._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1ad36288b:;
						++it;
						goto _iter_begin_1ad36288b;
					}
					_iter_end_1ad36288b:;
				};
				if (((*(_168321_f))._field_Result != nullptr)) {
					return static__1c643884a_exist(_165422_ident, &((*(_168321_f))._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1c6422999_Tup((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1ad359454:;
			{
				jule::Ptr<_1c642b1de_Tuple> _169721_tup = _1c6422999_Tup((*(_165439_k)).ptr());;
				{
					auto expr = &((*(_169721_tup))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad3651a7:;
					if (it != expr_end) {
						jule::Ptr<_1c641d522_TypeKind> _169825_t = *it;
						{
							if (static__1c643884a_exist(_165422_ident, &(_169825_t))) {
								return true;;
							};
						}
						_iter_next_1ad3651a7:;
						++it;
						goto _iter_begin_1ad3651a7;
					}
					_iter_end_1ad3651a7:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1ad358bb2:;
			{
				return false;;
			}
		}
		_match_end_1ad358b07:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c6438064_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c6c84904_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c6cca2a7_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1c6ccb2a8_stop(_1c6ccab48_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1c6ccb53e_stopped(_1c6ccab48_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1c6ccb7c5_finished(_1c6ccab48_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1c6ccba5b_isLastSt(_1c6ccab48_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1c6ccbdbe_pushErr(_1c6ccab48_scopeParser* _self_, jule::Ptr<_1c6283a3b_Token> _18926_token, jule::Str _18941_fmt) {
	_1a9ebd286_pushErr((*(_self_))._field_p.ptr(), _18926_token, _18941_fmt, jule::Slice<jule::Any>());
}



inline void _1c6ccc232_pushSuggestion(_1c6ccab48_scopeParser* _self_, jule::Str _19433_fmt, jule::Slice<jule::Any> _19446_args) {
	_1a9ebd5e9_pushSuggestion((*(_self_))._field_p.ptr(), _19433_fmt, _19446_args);
}



inline void _1c6ccc4da_insertAsNext(_1c6ccab48_scopeParser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _19836_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1c6cca2a7_stmt>(_1c6cca2a7_stmt{._field_tokens=(*(_19836_tokens)), });
}



inline jule::Ptr<_1c6cca2a7_stmt> _1c6ccc771_next(_1c6ccab48_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1c62a926a_ScopeTree> _1c6cccb6c_buildScope(_1c6ccab48_scopeParser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _20834_tokens, jule::Ptr<_1c6283a3b_Token> _20856_end) {
	jule::Ptr<_1c62a926a_ScopeTree> _20917_s = _1c6cc9042_newScope();;
	(*(_20917_s))._field_Parent=(*(_self_))._field_s;
	(*(_20917_s))._field_End=_20856_end;
	_1c6ccab48_scopeParser _21217_ssp = _1c6ccab48_scopeParser{._field_p=(*(_self_))._field_p, };;
	_1a9eab164_build(&_21217_ssp, _20834_tokens, &(_20917_s));
	return _20917_s;;
}



inline jule::Ptr<_1c62abed7_VarDecl> _1c6cccead_buildVarSt(_1c6ccab48_scopeParser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _21934_tokens) {
	jule::Ptr<_1c62abed7_VarDecl> _22017_v = _1a9ec1113_buildVar((*(_self_))._field_p, (*(_21934_tokens)));;
	(*(_22017_v))._field_Scope=(*(_self_))._field_s;
	return _22017_v;;
}



inline jule::Ptr<_1c62ac3b1_RetSt> _1c6ccd2ee_buildRetSt(_1c6ccab48_scopeParser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _22533_tokens) {
	jule::Ptr<_1c62ac3b1_RetSt> _22617_st = jule::new_ptr<_1c62ac3b1_RetSt>(_1c62ac3b1_RetSt{._field_Token=_22533_tokens[0LL], });;
	if ((_22533_tokens.len() > 1LL)) {
		(_22533_tokens).mut_slice(1LL);;
		(*(_22617_st))._field_Expr=_1a9ebd93a_buildExpr((*(_self_))._field_p, &(_22533_tokens));
	};
	return _22617_st;;
}



inline jule::Ptr<_1c62aca54_Iter> _1c6ccd640_buildWhileNextIter(_1c6ccab48_scopeParser* _self_, jule::Ptr<_1c6cca2a7_stmt>* _23642_s) {
	jule::Ptr<_1c62aca54_Iter> _23717_it = jule::new_ptr<_1c62aca54_Iter>(_1c62aca54_Iter{._field_Token=(*((*(_23642_s))))._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _24017_tokens = (*((*(_23642_s))))._field_tokens.slice(1LL);;
	jule::Ptr<_1c62ad37e_WhileKind> _24117_kind = jule::new_ptr<_1c62ad37e_WhileKind>();;
	if ((_24017_tokens.len() > 0LL)) {
		(*(_24117_kind))._field_Expr=_1a9ebd93a_buildExpr((*(_self_))._field_p, &(_24017_tokens));
	};
	if (_1c6ccba5b_isLastSt(_self_)) {
		_1c6ccbdbe_pushErr(_self_, (*(_23717_it))._field_Token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	_24017_tokens=(*(_1c6ccc771_next(_self_)))._field_tokens;
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _25317_stTokens = _1a9eb79cd_getBlockExpr(&(_24017_tokens));;
	if ((_25317_stTokens.len() > 0LL)) {
		jule::Ptr<_1c6cca2a7_stmt> _25521_stmt = jule::new_ptr<_1c6cca2a7_stmt>(_1c6cca2a7_stmt{._field_tokens=_25317_stTokens, ._field_terminated=(*((*(_23642_s))))._field_terminated});;
		(*(_24117_kind))._field_NextToken=_25317_stTokens[0LL];
		(*(_24117_kind))._field_Next=_1a9eaad01_buildSt(_self_, &(_25521_stmt));
	};
	jule::I64 _26317_i = _25317_stTokens.len();;
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _26417_blockTokens = _1a9ebabbd_range(&(_26317_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_24017_tokens));;
	if ((_26417_blockTokens == nullptr)) {
		_1c6ccb2a8_stop(_self_);
		_1c6ccbdbe_pushErr(_self_, (*(_23717_it))._field_Token, jule::Str("body is not exist", 17));
		_1c6ccc232_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_26317_i < _24017_tokens.len())) {
		_1c6ccbdbe_pushErr(_self_, _24017_tokens[_26317_i], jule::Str("invalid syntax", 14));
	};
	(*(_23717_it))._field_Scope=_1c6cccb6c_buildScope(_self_, &(_26417_blockTokens), _24017_tokens[(_26317_i - 1LL)]);
	(*(_23717_it))._field_Kind=jule::Any(_24117_kind, &__jule_any_type37);
	return _23717_it;;
}



inline jule::Ptr<_1c62ad37e_WhileKind> _1c6ccd981_buildWhileIterKind(_1c6ccab48_scopeParser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _28142_tokens) {
	return jule::new_ptr<_1c62ad37e_WhileKind>(_1c62ad37e_WhileKind{._field_Expr=_1a9ebd93a_buildExpr((*(_self_))._field_p, _28142_tokens), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>> _1c6ccdcc2_getRangeKindKeysTokens(_1c6ccab48_scopeParser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _28746_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>> _28818_vars;;
	jule::Slice<_221968cb9_Log> _28824_errs;;
	({
		__jule_tuple_ssx_1c6283a3b_Token__jule_tuple_s_221968cb9_Log __jule_assign_result = _1a9ebb43d_parts(_28746_toks, static_cast<jule::U64>(5LLU), true);
		_28818_vars = __jule_assign_result.__jule_result_arg0;
		_28824_errs = __jule_assign_result.__jule_result_arg1;
	});
	((*((*(_self_))._field_p))._field_errors).append(_28824_errs);;
	return _28818_vars;;
}



inline jule::Ptr<_1c62abed7_VarDecl> _1c6cce113_buildRangeKindKey(_1c6ccab48_scopeParser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _29341_tokens) {
	if (((*(_29341_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1c62abed7_VarDecl> _29717_key = jule::new_ptr<_1c62abed7_VarDecl>(_1c62abed7_VarDecl{._field_Token=(*(_29341_tokens))[0LL], });;
	if (((*((*(_29717_key))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*(_29717_key))._field_Mutable=true;
		if (((*(_29341_tokens)).len() == 1LL)) {
			_1c6ccbdbe_pushErr(_self_, (*(_29717_key))._field_Token, jule::Str("invalid syntax", 14));
		};
		(*(_29717_key))._field_Token=(*(_29341_tokens))[1LL];
	} else if (((*(_29341_tokens)).len() > 1LL)) {
		_1c6ccbdbe_pushErr(_self_, (*(_29341_tokens))[1LL], jule::Str("invalid syntax", 14));
	};
	if (((*((*(_29717_key))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c6ccbdbe_pushErr(_self_, (*(_29717_key))._field_Token, jule::Str("invalid syntax", 14));
		_1c6ccc232_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_29717_key))._field_Ident=(*((*(_29717_key))._field_Token))._field_Kind;
	return _29717_key;;
}



inline jule::Slice<jule::Ptr<_1c62abed7_VarDecl>> _1c6cce454_buildRangeKindKeys(_1c6ccab48_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>>* _31842_parts) {
	jule::Slice<jule::Ptr<_1c62abed7_VarDecl>> _31917_keys = nullptr;;
	{
		auto expr = _31842_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad539aa7:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c6283a3b_Token>> _32021_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_1c62abed7_VarDecl>> &__jule_push_dest = _31917_keys; __jule_push_dest.push(_1c6cce113_buildRangeKindKey(_self_, &(_32021_tokens))); };
			}
			_iter_next_1ad539aa7:;
			++it;
			goto _iter_begin_1ad539aa7;
		}
		_iter_end_1ad539aa7:;
	};
	return _31917_keys;;
}



inline void _1c6cce7b7_setupRangeKindKeysPlain(_1c6ccab48_scopeParser* _self_, jule::Ptr<_1c62adc86_RangeKind>* _32647_rng, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _32669_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>> _32717_keyTokens = _1c6ccdcc2_getRangeKindKeysTokens(_self_, _32669_tokens);;
	if ((_32717_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_32717_keyTokens.len() > 2LL)) {
		_1c6ccbdbe_pushErr(_self_, (*((*(_32647_rng))))._field_InToken, jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1c62abed7_VarDecl>> _33417_keys = _1c6cce454_buildRangeKindKeys(_self_, &(_32717_keyTokens));;
	(*((*(_32647_rng))))._field_KeyA=_33417_keys[0LL];
	if ((_33417_keys.len() > 1LL)) {
		(*((*(_32647_rng))))._field_KeyB=_33417_keys[1LL];
	};
}



inline void _1c6cceb2a_setupRangeKindKeysExplicit(_1c6ccab48_scopeParser* _self_, jule::Ptr<_1c62adc86_RangeKind>* _34150_rng, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _34172_tokens) {
	jule::I64 _34217_i = 0LL;;
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _34317_rang = _1a9ebabbd_range(&(_34217_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _34172_tokens);;
	if ((_34217_i < (*(_34172_tokens)).len())) {
		_1c6ccbdbe_pushErr(_self_, (*((*(_34150_rng))))._field_InToken, jule::Str("invalid syntax", 14));
	};
	_1c6cce7b7_setupRangeKindKeysPlain(_self_, _34150_rng, &(_34317_rang));
}



inline void _1c6ccee8d_setupRangeKindKeys(_1c6ccab48_scopeParser* _self_, jule::Ptr<_1c62adc86_RangeKind>* _35042_rng, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _35064_tokens) {
	if (((*((*(_35064_tokens))[0LL]))._field_Id == static_cast<jule::U64>(74LLU))) {
		_1c6cceb2a_setupRangeKindKeysExplicit(_self_, _35042_rng, _35064_tokens);
		return;;
	};
	_1c6cce7b7_setupRangeKindKeysPlain(_self_, _35042_rng, _35064_tokens);
}



inline jule::Ptr<_1c62adc86_RangeKind> _1c6cd0444_buildRangeIterKind(_1c6ccab48_scopeParser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _35842_var_tokens, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _35914_exprTokens, jule::Ptr<_1c6283a3b_Token>* _35941_inToken) {
	jule::Ptr<_1c62adc86_RangeKind> _36017_rng = jule::new_ptr<_1c62adc86_RangeKind>(_1c62adc86_RangeKind{._field_InToken=(*(_35941_inToken)), });;
	if (((*(_35914_exprTokens)).len() == 0LL)) {
		_1c6ccbdbe_pushErr(_self_, (*(_36017_rng))._field_InToken, jule::Str("expression missing", 18));
		return _36017_rng;;
	};
	(*(_36017_rng))._field_Expr=_1a9ebd93a_buildExpr((*(_self_))._field_p, _35914_exprTokens);
	if (((*(_35842_var_tokens)).len() > 0LL)) {
		_1c6ccee8d_setupRangeKindKeys(_self_, &(_36017_rng), _35842_var_tokens);
	};
	return _36017_rng;;
}



inline jule::Any _1c6cd0840_buildCommonIterKind(_1c6ccab48_scopeParser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _37443_tokens, jule::Ptr<_1c6283a3b_Token>* _37462_err_tok) {
	jule::I64 _37517_braceN = 0LL;;
	{
		auto expr = _37443_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad544375:;
		if (it != expr_end) {
			jule::I64 _37614_i = it - expr->begin();
			jule::Ptr<_1c6283a3b_Token> _37621_tok = *it;
			{
				{
					auto &_match_expr{ (*(_37621_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ad5453a9:;
						{
							(_37517_braceN)++;
							goto _iter_next_1ad544375;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ad545431:;
						{
							(_37517_braceN)--;
						}
					}
					_match_end_1ad5452dd:;
				};
				if ((_37517_braceN != 0LL)) {
					goto _iter_next_1ad544375;
				};
				{
					auto &_match_expr{ (*(_37621_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(12LLU)) {
						_case_begin_1ad544ebe:;
						{
							jule::Slice<jule::Ptr<_1c6283a3b_Token>> _39325_declTokens = (*(_37443_tokens)).slice(0LL, _37614_i);;
							jule::Slice<jule::Ptr<_1c6283a3b_Token>> _39425_exprTokens = (*(_37443_tokens)).slice((_37614_i + 1LL));;
							return jule::Any(_1c6cd0444_buildRangeIterKind(_self_, &(_39325_declTokens), &(_39425_exprTokens), &(_37621_tok)), &__jule_any_type39);;
						}
					}
					_match_end_1ad546894:;
				};
			}
			_iter_next_1ad544375:;
			++it;
			_37614_i++;
			goto _iter_begin_1ad544375;
		}
		_iter_end_1ad544375:;
	};
	return jule::Any(_1c6ccd981_buildWhileIterKind(_self_, _37443_tokens), &__jule_any_type37);;
}



inline jule::Ptr<_1c62aca54_Iter> _1c6cd0b81_buildCommonIter(_1c6ccab48_scopeParser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _40138_tokens) {
	jule::Ptr<_1c62aca54_Iter> _40217_it = jule::new_ptr<_1c62aca54_Iter>(_1c62aca54_Iter{._field_Token=_40138_tokens[0LL], });;
	(_40138_tokens).mut_slice(1LL);;
	if ((_40138_tokens.len() == 0LL)) {
		_1c6ccb2a8_stop(_self_);
		_1c6ccbdbe_pushErr(_self_, (*(_40217_it))._field_Token, jule::Str("body is not exist", 17));
		_1c6ccc232_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _41217_exprTokens = _1a9eb79cd_getBlockExpr(&(_40138_tokens));;
	if ((_41217_exprTokens.len() > 0LL)) {
		(*(_40217_it))._field_Kind=_1c6cd0840_buildCommonIterKind(_self_, &(_41217_exprTokens), &((*(_40217_it))._field_Token));
	};
	jule::I64 _41617_i = _41217_exprTokens.len();;
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _41717_scopeTokens = _1a9ebabbd_range(&(_41617_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_40138_tokens));;
	if ((_41717_scopeTokens == nullptr)) {
		_1c6ccb2a8_stop(_self_);
		_1c6ccbdbe_pushErr(_self_, (*(_40217_it))._field_Token, jule::Str("body is not exist", 17));
		_1c6ccc232_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_41617_i < _40138_tokens.len())) {
		_1c6ccbdbe_pushErr(_self_, _40138_tokens[_41617_i], jule::Str("invalid syntax", 14));
	};
	(*(_40217_it))._field_Scope=_1c6cccb6c_buildScope(_self_, &(_41717_scopeTokens), _40138_tokens[(_41617_i - 1LL)]);
	return _40217_it;;
}



inline jule::Ptr<_1c62aca54_Iter> _1c6cd0ec2_buildIterSt(_1c6ccab48_scopeParser* _self_, jule::Ptr<_1c6cca2a7_stmt>* _43135_st) {
	if ((*((*(_43135_st))))._field_terminated) {
		return _1c6ccd640_buildWhileNextIter(_self_, _43135_st);;
	};
	return _1c6cd0b81_buildCommonIter(_self_, (*((*(_43135_st))))._field_tokens);;
}



inline jule::Ptr<_1c62ae160_BreakSt> _1c6cd1313_buildBreakSt(_1c6ccab48_scopeParser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _43836_tokens) {
	jule::Ptr<_1c62ae160_BreakSt> _43917_brk = jule::new_ptr<_1c62ae160_BreakSt>(_1c62ae160_BreakSt{._field_Token=(*(_43836_tokens))[0LL], });;
	if (((*(_43836_tokens)).len() > 1LL)) {
		if (((*((*(_43836_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1c6ccbdbe_pushErr(_self_, (*(_43836_tokens))[1LL], jule::Str("invalid syntax", 14));
			_1c6ccc232_pushSuggestion(_self_, jule::Str("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_43917_brk))._field_Label=(*(_43836_tokens))[1LL];
			if (((*(_43836_tokens)).len() > 2LL)) {
				_1c6ccbdbe_pushErr(_self_, (*(_43836_tokens))[1LL], jule::Str("invalid syntax", 14));
			};
		};
	};
	return _43917_brk;;
}



inline jule::Ptr<_1c62ae539_ContSt> _1c6cd1654_buildContSt(_1c6ccab48_scopeParser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _45635_tokens) {
	jule::Ptr<_1c62ae539_ContSt> _45717_cont = jule::new_ptr<_1c62ae539_ContSt>(_1c62ae539_ContSt{._field_Token=(*(_45635_tokens))[0LL], });;
	if (((*(_45635_tokens)).len() > 1LL)) {
		if (((*((*(_45635_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1c6ccbdbe_pushErr(_self_, (*(_45635_tokens))[1LL], jule::Str("invalid syntax", 14));
			_1c6ccc232_pushSuggestion(_self_, jule::Str("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_45717_cont))._field_Label=(*(_45635_tokens))[1LL];
			if (((*(_45635_tokens)).len() > 2LL)) {
				_1c6ccbdbe_pushErr(_self_, (*(_45635_tokens))[1LL], jule::Str("invalid syntax", 14));
			};
		};
	};
	return _45717_cont;;
}



inline jule::Ptr<_1c62ae9e0_If> _1c6cd1995_buildIf(_1c6ccab48_scopeParser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _47431_tokens) {
	jule::Ptr<_1c62ae9e0_If> _47517_model = jule::new_ptr<_1c62ae9e0_If>(_1c62ae9e0_If{._field_Token=(*(_47431_tokens))[0LL], });;
	((*(_47431_tokens))).mut_slice(1LL);;
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _47917_exprTokens = _1a9eb79cd_getBlockExpr(_47431_tokens);;
	jule::I64 _48017_i = 0LL;;
	if ((_47917_exprTokens.len() == 0LL)) {
		_1c6ccbdbe_pushErr(_self_, (*(_47517_model))._field_Token, jule::Str("expression missing", 18));
	} else {
		_48017_i=static_cast<jule::I64>(_47917_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _48617_scopeTokens = _1a9ebabbd_range(&(_48017_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _47431_tokens);;
	if ((_48617_scopeTokens == nullptr)) {
		_1c6ccb2a8_stop(_self_);
		_1c6ccbdbe_pushErr(_self_, (*(_47517_model))._field_Token, jule::Str("body is not exist", 17));
		_1c6ccc232_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c6283a3b_Token> _49317_end = (*(_47431_tokens))[(_48017_i - 1LL)];;
	if ((_48017_i < (*(_47431_tokens)).len())) {
		if (((*((*(_47431_tokens))[_48017_i]))._field_Id == static_cast<jule::U64>(14LLU))) {
			((*(_47431_tokens))).mut_slice(_48017_i);;
		} else {
			_1c6ccbdbe_pushErr(_self_, (*(_47431_tokens))[_48017_i], jule::Str("invalid syntax", 14));
			(*(_47431_tokens))=nullptr;
		};
	};
	(*(_47517_model))._field_Expr=_1a9ebd93a_buildExpr((*(_self_))._field_p, &(_47917_exprTokens));
	(*(_47517_model))._field_Scope=_1c6cccb6c_buildScope(_self_, &(_48617_scopeTokens), _49317_end);
	return _47517_model;;
}



inline jule::Ptr<_1c62aedb9_Else> _1c6cd1cd6_buildElse(_1c6ccab48_scopeParser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _50733_tokens) {
	jule::Ptr<_1c62aedb9_Else> _50817_els = jule::new_ptr<_1c62aedb9_Else>(_1c62aedb9_Else{._field_Token=(*(_50733_tokens))[0LL], });;
	((*(_50733_tokens))).mut_slice(1LL);;
	jule::I64 _51217_i = 0LL;;
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _51317_scopeTokens = _1a9ebabbd_range(&(_51217_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _50733_tokens);;
	if ((_51317_scopeTokens == nullptr)) {
		if ((_51217_i < (*(_50733_tokens)).len())) {
			_1c6ccbdbe_pushErr(_self_, (*(_50817_els))._field_Token, jule::Str("else's cannot have any expression", 33));
		} else {
			_1c6ccb2a8_stop(_self_);
			_1c6ccbdbe_pushErr(_self_, (*(_50817_els))._field_Token, jule::Str("body is not exist", 17));
			_1c6ccc232_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_51217_i < (*(_50733_tokens)).len())) {
		_1c6ccbdbe_pushErr(_self_, (*(_50733_tokens))[_51217_i], jule::Str("invalid syntax", 14));
	};
	(*(_50817_els))._field_Scope=_1c6cccb6c_buildScope(_self_, &(_51317_scopeTokens), (*(_50733_tokens))[(_51217_i - 1LL)]);
	return _50817_els;;
}



inline jule::Ptr<_1c62b0370_Conditional> _1c6cd2127_buildIfElseChain(_1c6ccab48_scopeParser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _53139_tokens) {
	jule::Ptr<_1c62b0370_Conditional> _53217_chain = jule::new_ptr<_1c62b0370_Conditional>(_1c62b0370_Conditional{._field_Head=_1c6cd1995_buildIf(_self_, &(_53139_tokens)), });;
	if (((*(_53217_chain))._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53139_tokens.len() != 0LL)) {
		{
			if (((*(_53139_tokens[0LL]))._field_Id != static_cast<jule::U64>(14LLU))) {
				goto _iter_end_1ad56124e;
			};
			if (((_53139_tokens.len() > 1LL) && ((*(_53139_tokens[1LL]))._field_Id == static_cast<jule::U64>(13LLU)))) {
				(_53139_tokens).mut_slice(1LL);;
				jule::Ptr<_1c62ae9e0_If> _54425_elif = _1c6cd1995_buildIf(_self_, &(_53139_tokens));;
				{ jule::Slice<jule::Ptr<_1c62ae9e0_If>> &__jule_push_dest = (*(_53217_chain))._field_Tail; __jule_push_dest.push(_54425_elif); };
				goto _iter_next_1ad56124e;
			};
			(*(_53217_chain))._field_Default=_1c6cd1cd6_buildElse(_self_, &(_53139_tokens));
			goto _iter_end_1ad56124e;
		}
	_iter_next_1ad56124e:;
	}
	_iter_end_1ad56124e:;;
	return _53217_chain;;
}



inline jule::Ptr<_1c629d57d_Expr> _1c6cd2468_buildCoCallSt(_1c6ccab48_scopeParser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _55436_tokens) {
	jule::Ptr<_1c6283a3b_Token> _55513_token = _55436_tokens[0LL];;
	(_55436_tokens).mut_slice(1LL);;
	jule::Ptr<_1c629d57d_Expr> _55717_e = _1a9ebd93a_buildExpr((*(_self_))._field_p, &(_55436_tokens));;
	if ((_55717_e == nullptr)) {
		return _55717_e;;
	};
	{
		auto &_match_expr{ (*(_55717_e))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1ad5656a4:;
			{
				(*((*(_55717_e))._field_Kind.cast_ptr<_1c62a22a7_FnCallExpr>(&__jule_any_type107)))._field_IsCo=true;
			}
		}
		else {
			_case_begin_1ad565c26:;
			{
				_1c6ccbdbe_pushErr(_self_, _55513_token, jule::Str("statement must have function call expression", 44));
			}
		}
		_match_end_1ad565bc1:;
	};
	return _55717_e;;
}



inline jule::Ptr<_1c62a6c07_GotoSt> _1c6cd27a9_buildGotoSt(_1c6ccab48_scopeParser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _57035_tokens) {
	jule::Ptr<_1c62a6c07_GotoSt> _57117_gt = jule::new_ptr<_1c62a6c07_GotoSt>(_1c62a6c07_GotoSt{._field_Token=(*(_57035_tokens))[0LL], });;
	if (((*(_57035_tokens)).len() == 1LL)) {
		_1c6ccbdbe_pushErr(_self_, (*(_57117_gt))._field_Token, jule::Str("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if (((*(_57035_tokens)).len() > 2LL)) {
		_1c6ccbdbe_pushErr(_self_, (*(_57035_tokens))[2LL], jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1c6283a3b_Token> _58017_identToken = (*(_57035_tokens))[1LL];;
	if (((*(_58017_identToken))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c6ccbdbe_pushErr(_self_, _58017_identToken, jule::Str("invalid syntax", 14));
		_1c6ccc232_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return _57117_gt;;
	};
	(*(_57117_gt))._field_Label=_58017_identToken;
	return _57117_gt;;
}



inline jule::Ptr<_1c62a7004_FallSt> _1c6cd2aea_buildFallSt(_1c6ccab48_scopeParser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _59035_tokens) {
	jule::Ptr<_1c62a7004_FallSt> _59117_fll = jule::new_ptr<_1c62a7004_FallSt>(_1c62a7004_FallSt{._field_Token=(*(_59035_tokens))[0LL]});;
	if (((*(_59035_tokens)).len() > 1LL)) {
		_1c6ccbdbe_pushErr(_self_, (*(_59035_tokens))[1LL], jule::Str("invalid syntax", 14));
	};
	return _59117_fll;;
}



inline jule::Ptr<_1c62b0aac_TypeAliasDecl> _1c6cd2e3b_buildTypeAliasSt(_1c6ccab48_scopeParser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _60040_tokens) {
	jule::Ptr<_1c62b0aac_TypeAliasDecl> _60117_tad = _1a9ec01cd_buildTypeAliasDecl((*(_self_))._field_p, _60040_tokens);;
	(*(_60117_tad))._field_Scope=(*(_self_))._field_s;
	return _60117_tad;;
}



inline void _1c6cd3414_pushCaseExpr(_1c6ccab48_scopeParser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _60635_tokens, jule::Ptr<_1c6283a3b_Token> _60657_token, jule::Bool _6079_typeMatch, jule::Slice<jule::Ptr<_1c629d57d_Expr>>* _60731_exprs) {
	if ((_60635_tokens.len() == 0LL)) {
		return;;
	};
	if (_6079_typeMatch) {
		jule::I64 _61321_i = 0LL;;
		jule::Ptr<_1c6299249_TypeDecl> _61422_t;;
		jule::Bool _61425_ok = false;;
		({
			__jule_tuple_x_1c6299249_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9ebed8c_buildType((*(_self_))._field_p, &(_60635_tokens), (&(_61321_i)), true);
			_61422_t = __jule_assign_result.__jule_result_arg0;
			_61425_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_61425_ok) {
			{ jule::Slice<jule::Ptr<_1c629d57d_Expr>> &__jule_push_dest = (*(_60731_exprs)); __jule_push_dest.push(jule::new_ptr<_1c629d57d_Expr>(_1c629d57d_Expr{._field_Token=_60635_tokens[0LL], ._field_End=_60635_tokens[(_60635_tokens.len() - 1LL)], ._field_Kind=jule::Any(_61422_t, &__jule_any_type88)})); };
			if ((_61321_i < _60635_tokens.len())) {
				_1c6ccbdbe_pushErr(_self_, _60635_tokens[_61321_i], jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_1c629d57d_Expr>> &__jule_push_dest = (*(_60731_exprs)); __jule_push_dest.push(_1a9ebd93a_buildExpr((*(_self_))._field_p, &(_60635_tokens))); };
}



inline jule::Slice<jule::Ptr<_1c629d57d_Expr>> _1a9ea7380_buildCaseExprs(_1c6ccab48_scopeParser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _63038_tokens, jule::Ptr<_1c6283a3b_Token>* _63061_colon, jule::Bool _63076_typeMatch) {
	jule::Slice<jule::Ptr<_1c629d57d_Expr>> _63117_exprs = jule::Slice<jule::Ptr<_1c629d57d_Expr>>::alloc(0LL, 1LL);;
	jule::I64 _63317_braceN = 0LL;;
	jule::I64 _63417_j = 0LL;;
	{
		auto expr = _63038_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad571baa:;
		if (it != expr_end) {
			jule::I64 _63514_i = it - expr->begin();
			jule::Ptr<_1c6283a3b_Token> _63521_tok = *it;
			{
				{
					auto &_match_expr{ (*(_63521_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1ad57377d:;
						{
							(_63317_braceN)++;
							goto _iter_next_1ad571baa;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1ad573805:;
						{
							(_63317_braceN)--;
							goto _iter_next_1ad571baa;
						}
					}
					_match_end_1ad5736b2:;
				};
				if ((_63317_braceN != 0LL)) {
					goto _iter_next_1ad571baa;
				};
				{
					
					if (((*(_63521_tok))._field_Id == static_cast<jule::U64>(66LLU))) {
						_case_begin_1ad574bad:;
						{
							jule::Slice<jule::Ptr<_1c6283a3b_Token>> _65421_exprTokens = (*(_63038_tokens)).slice(_63417_j, _63514_i);;
							if ((_65421_exprTokens.len() == 0LL)) {
								_1c6ccbdbe_pushErr(_self_, _63521_tok, jule::Str("expression missing", 18));
							} else {
								_1c6cd3414_pushCaseExpr(_self_, (*(_63038_tokens)).slice(_63417_j, _63514_i), _63521_tok, _63076_typeMatch, &(_63117_exprs));
							};
							_63417_j=static_cast<jule::I64>((_63514_i + 1LL));
						}
					}
					else if (((*(_63521_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
						_case_begin_1ad574c35:;
						{
							(*(_63061_colon))=_63521_tok;
							_1c6cd3414_pushCaseExpr(_self_, (*(_63038_tokens)).slice(_63417_j, _63514_i), _63521_tok, _63076_typeMatch, &(_63117_exprs));
							((*(_63038_tokens))).mut_slice((_63514_i + 1LL));;
							return _63117_exprs;;
						}
					}
					_match_end_1ad574691:;
				};
			}
			_iter_next_1ad571baa:;
			++it;
			_63514_i++;
			goto _iter_begin_1ad571baa;
		}
		_iter_end_1ad571baa:;
	};
	_1c6ccbdbe_pushErr(_self_, (*(_63038_tokens))[0LL], jule::Str("invalid syntax", 14));
	(*(_63038_tokens))=nullptr;
	return nullptr;;
}



inline jule::Ptr<_1c62a926a_ScopeTree> _1a9ea76c1_buildCaseScope(_1c6ccab48_scopeParser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _67338_tokens) {
	jule::I64 _67417_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67621_i = 0LL;;
			jule::Slice<jule::Ptr<_1c6283a3b_Token>> _67722_next;;
			({
				__jule_tuple_sx_1c6283a3b_Token__jule_tuple_bool __jule_assign_result = _1c6cc9e77_skipSt(&(_67621_i), (*(_67338_tokens)).slice(_67417_n));
				_67722_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_67722_next.len() == 0LL)) {
				goto _iter_end_1ad578101;
			};
			jule::Ptr<_1c6283a3b_Token> _68117_tok = _67722_next[0LL];;
			if (((*(_68117_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_67417_n+=_67621_i;
				goto _iter_next_1ad578101;
			};
			jule::Slice<jule::Ptr<_1c6283a3b_Token>> _68621_scopeTokens = (*(_67338_tokens)).slice(0LL, _67417_n);;
			jule::Ptr<_1c62a926a_ScopeTree> _68721_scope = _1c6cccb6c_buildScope(_self_, &(_68621_scopeTokens), (*(_67338_tokens))[_67417_n]);;
			((*(_67338_tokens))).mut_slice(_67417_n);;
			return _68721_scope;;
		}
	_iter_next_1ad578101:;
	}
	_iter_end_1ad578101:;;
	jule::Ptr<_1c6283a3b_Token> _69117_end;;
	if (((*(_67338_tokens)).len() > 0LL)) {
		_69117_end=(*(_67338_tokens))[((*(_67338_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1c62a926a_ScopeTree> _69517_scope = _1c6cccb6c_buildScope(_self_, _67338_tokens, _69117_end);;
	(*(_67338_tokens))=nullptr;
	return _69517_scope;;
}



inline __jule_tuple_x_1c62b1063_Case__jule_tuple_bool _1a9ea7abc_buildCase(_1c6ccab48_scopeParser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _70033_tokens, jule::Bool _70051_typeMatch) {
	__jule_tuple_x_1c62b1063_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1c62b1063_Case> _70117_c = jule::new_ptr<_1c62b1063_Case>(_1c62b1063_Case{._field_Token=(*(_70033_tokens))[0LL], });;
	((*(_70033_tokens))).mut_slice(1LL);;
	jule::Ptr<_1c6283a3b_Token> _70517_colon = nullptr;;
	(*(_70117_c))._field_Exprs=_1a9ea7380_buildCaseExprs(_self_, _70033_tokens, &(_70517_colon), _70051_typeMatch);
	(*(_70117_c))._field_Scope=_1a9ea76c1_buildCaseScope(_self_, _70033_tokens);
	if (((*((*(_70117_c))._field_Scope))._field_End == nullptr)) {
		(*((*(_70117_c))._field_Scope))._field_End=_70517_colon;
	};
	jule::Bool _71113_isDefault = ((*(_70117_c))._field_Exprs.len() == 0LL);;
	__jule_func_result.__jule_result_arg0 = _70117_c;
	__jule_func_result.__jule_result_arg1 = _71113_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1c62b1063_Case__jule_tuple_x_1c62aedb9_Else _1a9ea7eb8_buildCases(_1c6ccab48_scopeParser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _71533_tokens, jule::Bool _71551_typeMatch) {
	__jule_tuple_sx_1c62b1063_Case__jule_tuple_x_1c62aedb9_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1c62b1063_Case>> _71617_cases = nullptr;;
	jule::Ptr<_1c62aedb9_Else> _71717_def = nullptr;;
	jule::Bool _71817_defNotLast = false;;
	while ((_71533_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1c6283a3b_Token> _72021_tok = _71533_tokens[0LL];;
			if (((*(_72021_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_1c6ccbdbe_pushErr(_self_, _72021_tok, jule::Str("invalid syntax", 14));
				goto _iter_end_1ad581060;
			};
			jule::Ptr<_1c62b1063_Case> _72522_c;;
			jule::Bool _72525_isDefault = false;;
			({
				__jule_tuple_x_1c62b1063_Case__jule_tuple_bool __jule_assign_result = _1a9ea7abc_buildCase(_self_, &(_71533_tokens), _71551_typeMatch);
				_72522_c = __jule_assign_result.__jule_result_arg0;
				_72525_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72525_isDefault) {
				(*(_72522_c))._field_Token=_72021_tok;
				if ((_71717_def == nullptr)) {
					_71717_def=jule::new_ptr<_1c62aedb9_Else>(_1c62aedb9_Else{._field_Token=(*(_72522_c))._field_Token, ._field_Scope=(*(_72522_c))._field_Scope});
				} else {
					_1c6ccbdbe_pushErr(_self_, _72021_tok, jule::Str("invalid syntax", 14));
				};
			} else {
				_71817_defNotLast=(_71817_defNotLast || (_71717_def != nullptr));
				{ jule::Slice<jule::Ptr<_1c62b1063_Case>> &__jule_push_dest = _71617_cases; __jule_push_dest.push(_72522_c); };
			};
		}
	_iter_next_1ad581060:;
	}
	_iter_end_1ad581060:;;
	if (_71817_defNotLast) {
		_1c6ccbdbe_pushErr(_self_, (*(_71717_def))._field_Token, jule::Str("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71617_cases;
	__jule_func_result.__jule_result_arg1 = _71717_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1c62b17a0_MatchCase> _1a9ea8309_buildMatchCase(_1c6ccab48_scopeParser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _74937_tokens) {
	jule::Ptr<_1c62b17a0_MatchCase> _75017_m = jule::new_ptr<_1c62b17a0_MatchCase>(_1c62b17a0_MatchCase{._field_Token=_74937_tokens[0LL], });;
	(_74937_tokens).mut_slice(1LL);;
	if (((_74937_tokens.len() > 0LL) && ((*(_74937_tokens[0LL]))._field_Id == static_cast<jule::U64>(7LLU)))) {
		(*(_75017_m))._field_TypeMatch=true;
		(_74937_tokens).mut_slice(1LL);;
	};
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _76017_exprTokens = _1a9eb79cd_getBlockExpr(&(_74937_tokens));;
	if ((_76017_exprTokens.len() > 0LL)) {
		(*(_75017_m))._field_Expr=_1a9ebd93a_buildExpr((*(_self_))._field_p, &(_76017_exprTokens));
	} else if ((*(_75017_m))._field_TypeMatch) {
		_1c6ccbdbe_pushErr(_self_, (*(_75017_m))._field_Token, jule::Str("expression missing", 18));
	};
	jule::I64 _76717_i = _76017_exprTokens.len();;
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _76817_blockToks = _1a9ebabbd_range(&(_76717_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_74937_tokens));;
	if ((_76817_blockToks == nullptr)) {
		_1c6ccb2a8_stop(_self_);
		_1c6ccbdbe_pushErr(_self_, (*(_75017_m))._field_Token, jule::Str("body is not exist", 17));
		_1c6ccc232_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_76717_i < _74937_tokens.len())) {
		_1c6ccbdbe_pushErr(_self_, _74937_tokens[_76717_i], jule::Str("invalid syntax", 14));
	};
	(*(_75017_m))._field_End=_74937_tokens[(_76717_i - 1LL)];
	({
		__jule_tuple_sx_1c62b1063_Case__jule_tuple_x_1c62aedb9_Else __jule_assign_result = _1a9ea7eb8_buildCases(_self_, _76817_blockToks, (*(_75017_m))._field_TypeMatch);
		(*(_75017_m))._field_Cases = __jule_assign_result.__jule_result_arg0;
		(*(_75017_m))._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _75017_m;;
}



inline jule::Ptr<_1c62a926a_ScopeTree> _1a9ea864a_buildScopeSt(_1c6ccab48_scopeParser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _78235_tokens) {
	jule::Bool _78317_isUnsafe = false;;
	jule::Bool _78417_isDeferred = false;;
	jule::Ptr<_1c6283a3b_Token> _78517_token = _78235_tokens[0LL];;
	if (((*(_78517_token))._field_Id == static_cast<jule::U64>(31LLU))) {
		_78317_isUnsafe=true;
		(_78235_tokens).mut_slice(1LL);;
		if ((_78235_tokens.len() == 0LL)) {
			_1c6ccbdbe_pushErr(_self_, _78517_token, jule::Str("invalid syntax", 14));
			return nullptr;;
		};
		_78517_token=_78235_tokens[0LL];
		if (((*(_78517_token))._field_Id == static_cast<jule::U64>(33LLU))) {
			_78417_isDeferred=true;
			(_78235_tokens).mut_slice(1LL);;
			if ((_78235_tokens.len() == 0LL)) {
				_1c6ccbdbe_pushErr(_self_, _78517_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if (((*(_78517_token))._field_Id == static_cast<jule::U64>(33LLU))) {
		_78417_isDeferred=true;
		(_78235_tokens).mut_slice(1LL);;
		if ((_78235_tokens.len() == 0LL)) {
			_1c6ccbdbe_pushErr(_self_, _78517_token, jule::Str("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I64 _81117_i = 0LL;;
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _81217_scopeTokens = _1a9ebabbd_range(&(_81117_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_78235_tokens));;
	if ((_81217_scopeTokens == nullptr)) {
		_1c6ccbdbe_pushErr(_self_, _78517_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	} else if ((_81117_i < _78235_tokens.len())) {
		_1c6ccbdbe_pushErr(_self_, _78235_tokens[_81117_i], jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1c62a926a_ScopeTree> _81917_scope = _1c6cccb6c_buildScope(_self_, &(_81217_scopeTokens), _78235_tokens[(_81117_i - 1LL)]);;
	(*(_81917_scope))._field_Unsafety=_78317_isUnsafe;
	(*(_81917_scope))._field_Deferred=_78417_isDeferred;
	return _81917_scope;;
}



inline jule::Ptr<_1c62a682d_LabelSt> _1a9ea898b_buildLabelSt(_1c6ccab48_scopeParser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _82536_tokens) {
	jule::Ptr<_1c62a682d_LabelSt> _82617_lbl = jule::new_ptr<_1c62a682d_LabelSt>(_1c62a682d_LabelSt{._field_Token=(*(_82536_tokens))[0LL], ._field_Ident=(*((*(_82536_tokens))[0LL]))._field_Kind});;
	if (((*(_82536_tokens)).len() > 2LL)) {
		((*(_82536_tokens))).mut_slice(2LL);;
		_1c6ccc4da_insertAsNext(_self_, _82536_tokens);
	};
	return _82617_lbl;;
}



inline __jule_tuple__1c62a88a7_StmtData__jule_tuple_bool _1a9ea8ccc_buildIdSt(_1c6ccab48_scopeParser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _84033_tokens) {
	__jule_tuple__1c62a88a7_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_84033_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_1c6283a3b_Token> _84517_token = (*(_84033_tokens))[1LL];;
	{
		auto &_match_expr{ (*(_84517_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1ad5968a0:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1a9ea898b_buildLabelSt(_self_, _84033_tokens), &__jule_any_type56);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ad5971a8:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1a9eb913e_assignInfo> _1a9ea911d_buildAssignInfo(_1c6ccab48_scopeParser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _85439_tokens) {
	jule::Ptr<_1a9eb913e_assignInfo> _85517_info = jule::new_ptr<_1a9eb913e_assignInfo>(_1a9eb913e_assignInfo{._field_ok=true});;
	jule::I64 _85817_braceN = 0LL;;
	{
		auto expr = _85439_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad598808:;
		if (it != expr_end) {
			jule::I64 _85914_i = it - expr->begin();
			jule::Ptr<_1c6283a3b_Token> _85921_token = *it;
			{
				{
					auto &_match_expr{ (*(_85921_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ad599694:;
						{
							(_85817_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ad59971b:;
						{
							(_85817_braceN)--;
						}
					}
					_match_end_1ad5995c8:;
				};
				{
					
					if ((_85817_braceN > 0LL)) {
						_case_begin_1ad59a585:;
						{
							goto _iter_next_1ad598808;
						}
					}
					else if (((!(_1c6288997_IsAssignOp((*(_85921_token))._field_Id))) && ((*(_85921_token))._field_Id != static_cast<jule::U64>(38LLU)))) {
						_case_begin_1ad59a60c:;
						{
							goto _iter_next_1ad598808;
						}
					}
					_match_end_1ad59a50d:;
				};
				(*(_85517_info))._field_l=(*(_85439_tokens)).slice(0LL, _85914_i);
				if (((*(_85517_info))._field_l.len() == 0LL)) {
					(*(_85517_info))._field_ok=false;
				};
				(*(_85517_info))._field_setter=_85921_token;
				if (((_85914_i + 1LL) >= (*(_85439_tokens)).len())) {
					(*(_85517_info))._field_r=nullptr;
					(*(_85517_info))._field_ok=_1c62886cd_IsPostfixOp((*((*(_85517_info))._field_setter))._field_Id);
					goto _iter_end_1ad598808;
				};
				(*(_85517_info))._field_r=(*(_85439_tokens)).slice((_85914_i + 1LL));
				if (_1c62886cd_IsPostfixOp((*((*(_85517_info))._field_setter))._field_Id)) {
					if (((*(_85517_info))._field_r.len() > 0LL)) {
						_1c6ccbdbe_pushErr(_self_, (*(_85517_info))._field_r[0LL], jule::Str("invalid syntax", 14));
						(*(_85517_info))._field_r=nullptr;
					};
				};
				goto _iter_end_1ad598808;
			}
			_iter_next_1ad598808:;
			++it;
			_85914_i++;
			goto _iter_begin_1ad598808;
		}
		_iter_end_1ad598808:;
	};
	return _85517_info;;
}



inline jule::Ptr<_1c62a7664_AssignLeft> _1a9ea945e_buildAssignL(_1c6ccab48_scopeParser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _89936_tokens) {
	jule::Ptr<_1c62a7664_AssignLeft> _90017_l = jule::new_ptr<_1c62a7664_AssignLeft>(_1c62a7664_AssignLeft{._field_Token=(*(_89936_tokens))[0LL], });;
	if (((*((*(_89936_tokens))[0LL]))._field_Id == static_cast<jule::U64>(1LLU))) {
		(*(_90017_l))._field_Ident=(*((*(_90017_l))._field_Token))._field_Kind;
	};
	(*(_90017_l))._field_Expr=_1a9ebd93a_buildExpr((*(_self_))._field_p, _89936_tokens);
	return _90017_l;;
}



inline jule::Slice<jule::Ptr<_1c62a7664_AssignLeft>> _1a9ea97a0_buildAssignLs(_1c6ccab48_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>>* _91037_parts) {
	jule::Slice<jule::Ptr<_1c62a7664_AssignLeft>> _91117_lefts = nullptr;;
	{
		auto expr = _91037_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5a312b:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c6283a3b_Token>> _91221_part = *it;
			{
				jule::Ptr<_1c62a7664_AssignLeft> _91321_l = _1a9ea945e_buildAssignL(_self_, &(_91221_part));;
				{ jule::Slice<jule::Ptr<_1c62a7664_AssignLeft>> &__jule_push_dest = _91117_lefts; __jule_push_dest.push(_91321_l); };
			}
			_iter_next_1ad5a312b:;
			++it;
			goto _iter_begin_1ad5a312b;
		}
		_iter_end_1ad5a312b:;
	};
	return _91117_lefts;;
}



inline __jule_tuple_x_1c62a7be7_AssignSt__jule_tuple_bool _1a9ea9ae1_buildPlainAssign(_1c6ccab48_scopeParser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _92040_tokens) {
	__jule_tuple_x_1c62a7be7_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a9eb913e_assignInfo> _92117_info = _1a9ea911d_buildAssignInfo(_self_, _92040_tokens);;
	if ((!((*(_92117_info))._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c62a7be7_AssignSt> _92617_assign = jule::new_ptr<_1c62a7be7_AssignSt>(_1c62a7be7_AssignSt{._field_Setter=(*(_92117_info))._field_setter, });;
	if (((*((*(_92117_info))._field_setter))._field_Id == static_cast<jule::U64>(38LLU))) {
		(*(_92617_assign))._field_Declarative=true;
		(*(_92617_assign))._field_Right=_1a9ebd93a_buildExpr((*(_self_))._field_p, &((*(_92117_info))._field_r));
		jule::Bool _93417_ok = _1a9ea9edc_buildDeclAssign1(_self_, &((*(_92117_info))._field_l), &(_92617_assign));;
		__jule_func_result.__jule_result_arg0 = _92617_assign;
		__jule_func_result.__jule_result_arg1 = _93417_ok;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>> _93818_parts;;
	jule::Slice<_221968cb9_Log> _93825_errs;;
	({
		__jule_tuple_ssx_1c6283a3b_Token__jule_tuple_s_221968cb9_Log __jule_assign_result = _1a9ebb43d_parts(&((*(_92117_info))._field_l), static_cast<jule::U64>(5LLU), true);
		_93818_parts = __jule_assign_result.__jule_result_arg0;
		_93825_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_93825_errs.len() > 0LL)) {
		((*((*(_self_))._field_p))._field_errors).append(_93825_errs);;
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(*(_92617_assign))._field_Left=_1a9ea97a0_buildAssignLs(_self_, &(_93818_parts));
	if (((*(_92117_info))._field_r != nullptr)) {
		(*(_92617_assign))._field_Right=_1a9ebd93a_buildExpr((*(_self_))._field_p, &((*(_92117_info))._field_r));
	};
	__jule_func_result.__jule_result_arg0 = _92617_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _1a9ea9edc_buildDeclAssign1(_1c6ccab48_scopeParser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _95240_lefts, jule::Ptr<_1c62a7be7_AssignSt>* _95262_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>> _95418_parts;;
	jule::Slice<_221968cb9_Log> _95425_errs;;
	({
		__jule_tuple_ssx_1c6283a3b_Token__jule_tuple_s_221968cb9_Log __jule_assign_result = _1a9ebb43d_parts(_95240_lefts, static_cast<jule::U64>(5LLU), true);
		_95418_parts = __jule_assign_result.__jule_result_arg0;
		_95425_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_95425_errs.len() > 0LL)) {
		((*((*(_self_))._field_p))._field_errors).append(_95425_errs);;
		return false;;
	};
	{
		auto expr = &(_95418_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5ac223:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c6283a3b_Token>> _96021_part = *it;
			{
				jule::Bool _96121_isMut = false;;
				jule::Bool _96221_isRef = false;;
				jule::Ptr<_1c6283a3b_Token> _96417_token = _96021_part[0LL];;
				if (((*(_96417_token))._field_Id == static_cast<jule::U64>(32LLU))) {
					_96121_isMut=true;
					(_96021_part).mut_slice(1LL);;
					if ((_96021_part.len() == 0LL)) {
						_1c6ccbdbe_pushErr(_self_, _96417_token, jule::Str("invalid syntax", 14));
						goto _iter_next_1ad5ac223;
					};
				};
				if (((*(_96021_part[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
					_96221_isRef=true;
					(_96021_part).mut_slice(1LL);;
					if ((_96021_part.len() == 0LL)) {
						_1c6ccbdbe_pushErr(_self_, _96417_token, jule::Str("invalid syntax", 14));
						goto _iter_next_1ad5ac223;
					};
				};
				if ((((*(_96021_part[0LL]))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(_96021_part[0LL]))._field_Id != static_cast<jule::U64>(74LLU)))) {
					_1c6ccbdbe_pushErr(_self_, _96417_token, jule::Str("invalid syntax", 14));
					goto _iter_next_1ad5ac223;
				};
				jule::Ptr<_1c62a7664_AssignLeft> _98821_l = _1a9ea945e_buildAssignL(_self_, &(_96021_part));;
				(*(_98821_l))._field_Mutable=_96121_isMut;
				(*(_98821_l))._field_Reference=_96221_isRef;
				{ jule::Slice<jule::Ptr<_1c62a7664_AssignLeft>> &__jule_push_dest = (*((*(_95262_assign))))._field_Left; __jule_push_dest.push(_98821_l); };
			}
			_iter_next_1ad5ac223:;
			++it;
			goto _iter_begin_1ad5ac223;
		}
		_iter_end_1ad5ac223:;
	};
	return true;;
}



inline __jule_tuple_x_1c62a7be7_AssignSt__jule_tuple_bool _1a9eaa32d_buildDeclAssign(_1c6ccab48_scopeParser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _99738_tokens) {
	__jule_tuple_x_1c62a7be7_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_99738_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(_99738_tokens).mut_slice(1LL);;
	jule::Ptr<_1c6283a3b_Token> _100317_token = _99738_tokens[0LL];;
	if (((*(_100317_token))._field_Id != static_cast<jule::U64>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c62a7be7_AssignSt> _100817_assign = jule::new_ptr<_1c62a7be7_AssignSt>(_1c62a7be7_AssignSt{._field_Declarative=true, });;
	jule::I64 _101217_i = 0LL;;
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _101317_rang = _1a9ebabbd_range(&(_101217_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_99738_tokens));;
	if ((_101317_rang == nullptr)) {
		_1c6ccbdbe_pushErr(_self_, _100317_token, jule::Str("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_101217_i + 1LL) < _99738_tokens.len())) {
		(*(_100817_assign))._field_Setter=_99738_tokens[_101217_i];
		if (((*((*(_100817_assign))._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1c6ccbdbe_pushErr(_self_, (*(_100817_assign))._field_Setter, jule::Str("invalid syntax", 14));
		};
		(_101217_i)++;
		jule::Slice<jule::Ptr<_1c6283a3b_Token>> _102321_exprTokens = _99738_tokens.slice(_101217_i);;
		(*(_100817_assign))._field_Right=_1a9ebd93a_buildExpr((*(_self_))._field_p, &(_102321_exprTokens));
	};
	jule::Bool _102713_ok = _1a9ea9edc_buildDeclAssign1(_self_, &(_101317_rang), &(_100817_assign));;
	__jule_func_result.__jule_result_arg0 = _100817_assign;
	__jule_func_result.__jule_result_arg1 = _102713_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_1c62a7be7_AssignSt__jule_tuple_bool _1a9eaa66e_buildAssignSt(_1c6ccab48_scopeParser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _103137_tokens) {
	__jule_tuple_x_1c62a7be7_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1a9eb94e6_checkAssignTokens(_103137_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_103137_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1ad5c005a:;
			{
				({
					__jule_tuple_x_1c62a7be7_AssignSt__jule_tuple_bool __jule_assign_result = _1a9eaa32d_buildDeclAssign(_self_, (*(_103137_tokens)));
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1ad5beb5e:;
			{
				({
					__jule_tuple_x_1c62a7be7_AssignSt__jule_tuple_bool __jule_assign_result = _1a9ea9ae1_buildPlainAssign(_self_, _103137_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1ad5beae8:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1c629de52_UseExpr> _1a9eaa9b0_buildUseExpr(_1c6ccab48_scopeParser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _104636_tokens) {
	if (((*(_104636_tokens)).len() == 1LL)) {
		_1c6ccbdbe_pushErr(_self_, (*(_104636_tokens))[0LL], jule::Str("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_1c629de52_UseExpr> _105117_ue = jule::new_ptr<_1c629de52_UseExpr>(_1c629de52_UseExpr{._field_Token=(*(_104636_tokens))[0LL], });;
	((*(_104636_tokens))).mut_slice(1LL);;
	(*(_105117_ue))._field_Expr=_1a9ebd93a_buildExpr((*(_self_))._field_p, _104636_tokens);
	return _105117_ue;;
}



inline jule::Any _1a9eaad01_buildSt(_1c6ccab48_scopeParser* _self_, jule::Ptr<_1c6cca2a7_stmt>* _105931_st) {
	jule::Ptr<_1c6283a3b_Token> _106017_token = (*((*(_105931_st))))._field_tokens[0LL];;
	if (((*(_106017_token))._field_Id == static_cast<jule::U64>(1LLU))) {
		jule::Any _106222_s = jule::Any(nullptr);;
		jule::Bool _106225_ok = false;;
		({
			__jule_tuple__1c62a88a7_StmtData__jule_tuple_bool __jule_assign_result = _1a9ea8ccc_buildIdSt(_self_, &((*((*(_105931_st))))._field_tokens));
			_106222_s = __jule_assign_result.__jule_result_arg0;
			_106225_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_106225_ok) {
			return _106222_s;;
		};
	};
	jule::Ptr<_1c62a7be7_AssignSt> _106818_s;;
	jule::Bool _106821_ok = false;;
	({
		__jule_tuple_x_1c62a7be7_AssignSt__jule_tuple_bool __jule_assign_result = _1a9eaa66e_buildAssignSt(_self_, &((*((*(_105931_st))))._field_tokens));
		_106818_s = __jule_assign_result.__jule_result_arg0;
		_106821_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_106821_ok) {
		return jule::Any(_106818_s, &__jule_any_type58);;
	};
	{
		auto &_match_expr{ (*(_106017_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1ad5c5538:;
			{
				return jule::Any(_1a9eaa9b0_buildUseExpr(_self_, &((*((*(_105931_st))))._field_tokens)), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1ad5c4ed8:;
			{
				return jule::Any(_1c6cccead_buildVarSt(_self_, &((*((*(_105931_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1ad5c5736:;
			{
				return jule::Any(_1c6ccd2ee_buildRetSt(_self_, (*((*(_105931_st))))._field_tokens), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1ad5c579c:;
			{
				return jule::Any(_1c6cd0ec2_buildIterSt(_self_, _105931_st), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1ad5c5813:;
			{
				return jule::Any(_1c6cd1313_buildBreakSt(_self_, &((*((*(_105931_st))))._field_tokens)), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1ad5c5879:;
			{
				return jule::Any(_1c6cd1654_buildContSt(_self_, &((*((*(_105931_st))))._field_tokens)), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1ad5c5901:;
			{
				return jule::Any(_1c6cd2127_buildIfElseChain(_self_, (*((*(_105931_st))))._field_tokens), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1ad5c5978:;
			{
				return jule::Any(_1c6cd2468_buildCoCallSt(_self_, (*((*(_105931_st))))._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(18LLU)) {
			_case_begin_1ad5c5a00:;
			{
				return jule::Any(_1c6cd27a9_buildGotoSt(_self_, &((*((*(_105931_st))))._field_tokens)), &__jule_any_type57);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_1ad5c5a77:;
			{
				return jule::Any(_1c6cd2aea_buildFallSt(_self_, &((*((*(_105931_st))))._field_tokens)), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1ad5c5aee:;
			{
				return jule::Any(_1c6cd2e3b_buildTypeAliasSt(_self_, &((*((*(_105931_st))))._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1ad5c5b76:;
			{
				return jule::Any(_1a9ea8309_buildMatchCase(_self_, (*((*(_105931_st))))._field_tokens), &__jule_any_type59);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU) || _match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1ad5c5bed:;
			{
				return jule::Any(_1a9ea864a_buildScopeSt(_self_, (*((*(_105931_st))))._field_tokens), &__jule_any_type51);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1ad5c5c75:;
			{
				return jule::Any(_1a9ea864a_buildScopeSt(_self_, (*((*(_105931_st))))._field_tokens), &__jule_any_type51);;
			}
		}
		_match_end_1ad5c534b:;
	};
	jule::Ptr<_1c629d57d_Expr> _110717_expr = _1a9ebd93a_buildExpr((*(_self_))._field_p, &((*((*(_105931_st))))._field_tokens));;
	if ((_110717_expr != nullptr)) {
		return jule::Any(_110717_expr, &__jule_any_type52);;
	};
	_1c6ccbdbe_pushErr(_self_, _106017_token, jule::Str("invalid syntax", 14));
	return nullptr;;
}



inline void _1a9eab164_build(_1c6ccab48_scopeParser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _111529_tokens, jule::Ptr<_1c62a926a_ScopeTree>* _111552_s) {
	if (((*(_111552_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1c6cca65e_splitStmts(_111529_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_111552_s));
	while (((!(_1c6ccba5b_isLastSt(_self_))) && (!(_1c6ccb7c5_finished(_self_))))) {
		{
			jule::Ptr<_1c6cca2a7_stmt> _112321_st = _1c6ccc771_next(_self_);;
			jule::Any _112421_data = _1a9eaad01_buildSt(_self_, &(_112321_st));;
			if ((_112421_data != nullptr)) {
				{ jule::Slice<_1c62a8b0a_Stmt> &__jule_push_dest = (*((*(_self_))._field_s))._field_Stmts; __jule_push_dest.push(_1c62a8b0a_Stmt{._field_Token=(*(_112321_st))._field_tokens[0LL], ._field_Data=_112421_data}); };
			};
			if (_1c6ccb53e_stopped(_self_)) {
				goto _iter_end_1ad5cec90;
			};
		}
	_iter_next_1ad5cec90:;
	}
	_iter_end_1ad5cec90:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c6ccab48_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _1a9eac495_pushErr(_1a9eabbd1_exprBuilder* _self_, jule::Ptr<_1c6283a3b_Token> _4526_token, jule::Str _4541_fmt, jule::Slice<jule::Any> _4554_args) {
	_1a9ebd286_pushErr((*(_self_))._field_p.ptr(), _4526_token, _4541_fmt, _4554_args);
}



inline void _1a9eac808_pushSuggestion(_1a9eabbd1_exprBuilder* _self_, jule::Str _5033_fmt, jule::Slice<jule::Any> _5046_args) {
	_1a9ebd5e9_pushSuggestion((*(_self_))._field_p.ptr(), _5033_fmt, _5046_args);
}



inline jule::Ptr<_1c629e24e_TupleExpr> _1a9eacb49_buildTuple(_1a9eabbd1_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>>* _5434_parts) {
	jule::Ptr<_1c629e24e_TupleExpr> _5517_tuple = jule::new_ptr<_1c629e24e_TupleExpr>(_1c629e24e_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_1c629d57d_Expr>>::alloc(0LL, (*(_5434_parts)).len())});;
	{
		auto expr = _5434_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5edc59:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c6283a3b_Token>> _5821_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1c629d57d_Expr>> &__jule_push_dest = (*(_5517_tuple))._field_Expr; __jule_push_dest.push(_1a9eb703d_buildFromTokens(_self_, _5821_part)); };
			}
			_iter_next_1ad5edc59:;
			++it;
			goto _iter_begin_1ad5edc59;
		}
		_iter_end_1ad5edc59:;
	};
	return _5517_tuple;;
}



inline jule::Ptr<_1c629e628_LitExpr> _1a9eace8a_buildLit(_1a9eabbd1_exprBuilder* _self_, jule::Ptr<_1c6283a3b_Token> _6427_token) {
	return jule::new_ptr<_1c629e628_LitExpr>(_1c629e628_LitExpr{._field_Token=_6427_token, ._field_Value=(*(_6427_token))._field_Kind});;
}



inline jule::Any _1a9ead61c_buildSingle(_1a9eabbd1_exprBuilder* _self_, jule::Ptr<_1c6283a3b_Token> _7534_token) {
	{
		auto &_match_expr{ (*(_7534_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1ad600dd2:;
			{
				return jule::Any(_1a9eace8a_buildLit(_self_, _7534_token), &__jule_any_type101);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1ad600e59:;
			{
				return jule::Any(jule::new_ptr<_1c62a0a14_VariadicExpr>(_1c62a0a14_VariadicExpr{._field_Token=_7534_token, }), &__jule_any_type75);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(24LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1ad600ed1:;
			{
				return jule::Any(_1a9eb8429_buildIdentExpr(&(_7534_token)), &__jule_any_type79);;
			}
		}
		_match_end_1ad600d05:;
	};
	_1a9eac495_pushErr(_self_, _7534_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1c629eea8_IdentExpr> _1a9ead95d_buildBindIdent(_1a9eabbd1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _9238_tokens) {
	if (((*((*(_9238_tokens))[0LL]))._field_Id != static_cast<jule::U64>(27LLU))) {
		return nullptr;;
	} else if (((*((*(_9238_tokens))[1LL]))._field_Id != static_cast<jule::U64>(17LLU))) {
		_1a9eac495_pushErr(_self_, (*(_9238_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a9eac808_pushSuggestion(_self_, jule::Str("use dot (.) to access binded defines", 36), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c6283a3b_Token> _10017_token = (*(_9238_tokens))[2LL];;
	if (((*(_10017_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a9eac495_pushErr(_self_, (*(_9238_tokens))[2LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a9eac808_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c629eea8_IdentExpr> _10617_expr = _1a9eb8429_buildIdentExpr(&(_10017_token));;
	(*(_10617_expr))._field_Binded=true;
	return _10617_expr;;
}



inline jule::Ptr<_1c62a063a_UnaryExpr> _1a9eadc9e_buildUnary(_1a9eabbd1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _11133_tokens) {
	jule::Ptr<_1c6283a3b_Token> _11217_op = _11133_tokens[0LL];;
	if ((_11133_tokens.len() == 1LL)) {
		_1a9eac495_pushErr(_self_, _11217_op, jule::Str("missing expression for unary operator", 37), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1c6284278_IsUnaryOp((*(_11217_op))._field_Id)))) {
		_1a9eac495_pushErr(_self_, _11217_op, jule::Str("invalid unary operator: @", 25), jule::Slice<jule::Any>::make({jule::Any((*(_11217_op))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	(_11133_tokens).mut_slice(1LL);;
	return jule::new_ptr<_1c62a063a_UnaryExpr>(_1c62a063a_UnaryExpr{._field_Op=_11217_op, ._field_Expr=_1a9eb703d_buildFromTokens(_self_, _11133_tokens)});;
}



inline jule::Ptr<_1c62a1691_SubIdentExpr> _1a9eae0e0_buildObjSubIdent(_1a9eabbd1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _13239_tokens) {
	jule::I64 _13317_i = (_13239_tokens.len() - 1LL);;
	jule::Ptr<_1c6283a3b_Token> _13417_identToken = _13239_tokens[_13317_i];;
	(_13317_i)--;
	(_13239_tokens).mut_slice(0LL, _13317_i);;
	if ((_13239_tokens.len() == 0LL)) {
		_1a9eac495_pushErr(_self_, _13417_identToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1c62a1691_SubIdentExpr>(_1c62a1691_SubIdentExpr{._field_Expr=_1a9eb703d_buildFromTokens(_self_, _13239_tokens), ._field_Ident=_13417_identToken});;
}



inline jule::Ptr<_1c62a12b7_NsSelectionExpr> _1a9eae431_buildNsSubIdent(_1a9eabbd1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _14739_tokens) {
	jule::Ptr<_1c62a12b7_NsSelectionExpr> _14817_ns = jule::new_ptr<_1c62a12b7_NsSelectionExpr>();;
	{
		auto expr = _14739_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad60b52a:;
		if (it != expr_end) {
			jule::I64 _14914_i = it - expr->begin();
			jule::Ptr<_1c6283a3b_Token> _14921_token = *it;
			{
				if (((_14914_i & 1LL) == 0LL)) {
					if (((*(_14921_token))._field_Id != static_cast<jule::U64>(1LLU))) {
						_1a9eac495_pushErr(_self_, _14921_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
						_1a9eac808_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					};
					{ jule::Slice<jule::Ptr<_1c6283a3b_Token>> &__jule_push_dest = (*(_14817_ns))._field_Ns; __jule_push_dest.push(_14921_token); };
				} else if (((*(_14921_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1a9eac495_pushErr(_self_, _14921_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					_1a9eac808_pushSuggestion(_self_, jule::Str("expected double colon \"::\"", 26), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1ad60b52a:;
			++it;
			_14914_i++;
			goto _iter_begin_1ad60b52a;
		}
		_iter_end_1ad60b52a:;
	};
	(*(_14817_ns))._field_Ident=(*(_14817_ns))._field_Ns[((*(_14817_ns))._field_Ns.len() - 1LL)];
	(*(_14817_ns))._field_Ns=(*(_14817_ns))._field_Ns.slice(0LL, ((*(_14817_ns))._field_Ns.len() - 1LL));
	return _14817_ns;;
}



inline jule::Ptr<_1c6299249_TypeDecl> _1a9eae772_buildType(_1a9eabbd1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _16633_tokens) {
	jule::I64 _16717_i = 0LL;;
	jule::Ptr<_1c6299249_TypeDecl> _16818_t;;
	jule::Bool _16821_ok = false;;
	({
		__jule_tuple_x_1c6299249_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9ebed8c_buildType((*(_self_))._field_p, _16633_tokens, (&(_16717_i)), false);
		_16818_t = __jule_assign_result.__jule_result_arg0;
		_16821_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_16821_ok))) {
		_1a9eac495_pushErr(_self_, (*(_16633_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_16717_i < (*(_16633_tokens)).len())) {
		_1a9eac495_pushErr(_self_, (*(_16633_tokens))[_16717_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _16818_t;;
}



inline jule::Any _1a9eaeab3_buildSubIdent(_1a9eabbd1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _18037_tokens) {
	jule::I64 _18113_i = ((*(_18037_tokens)).len() - 2LL);;
	jule::Ptr<_1c6283a3b_Token> _18213_token = (*(_18037_tokens))[_18113_i];;
	{
		auto &_match_expr{ (*(_18213_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(17LLU)) {
			_case_begin_1ad613983:;
			{
				return jule::Any(_1a9eae0e0_buildObjSubIdent(_self_, (*(_18037_tokens))), &__jule_any_type85);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1ad61408d:;
			{
				return jule::Any(_1a9eae431_buildNsSubIdent(_self_, _18037_tokens), &__jule_any_type89);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1ad614104:;
			{
				return jule::Any(_1a9eae772_buildType(_self_, _18037_tokens), &__jule_any_type88);;
			}
		}
		_match_end_1ad613e7d:;
	};
	_1a9eac495_pushErr(_self_, _18213_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1c62a0a14_VariadicExpr> _1a9eaee04_buildVariadic(_1a9eabbd1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _19636_tokens) {
	jule::Ptr<_1c6283a3b_Token> _19717_token = _19636_tokens[(_19636_tokens.len() - 1LL)];;
	(_19636_tokens).mut_slice(0LL, (_19636_tokens.len() - 1LL));;
	return jule::new_ptr<_1c62a0a14_VariadicExpr>(_1c62a0a14_VariadicExpr{._field_Token=_19717_token, ._field_Expr=_1a9eb703d_buildFromTokens(_self_, _19636_tokens)});;
}



inline jule::Ptr<_1c629d87a_RangeExpr> _1a9eb0245_buildBetweenParentheses(_1a9eabbd1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _20546_tokens) {
	if ((_20546_tokens.len() == 2LL)) {
		_1a9eac495_pushErr(_self_, _20546_tokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		_1a9eac808_pushSuggestion(_self_, jule::Str("empty parentheses are not valid expression, must include an expression in range", 79), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_20546_tokens).mut_slice(1LL, (_20546_tokens.len() - 1LL));;
	return jule::new_ptr<_1c629d87a_RangeExpr>(_1c629d87a_RangeExpr{._field_Expr=_1a9eb703d_buildFromTokens(_self_, _20546_tokens)});;
}



inline jule::Ptr<_1c62a0ddd_CastExpr> _1a9eb0586_tryBuildCast(_1a9eabbd1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _21736_tokens) {
	jule::I64 _21817_rangeN = 0LL;;
	{
		auto expr = _21736_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad619170:;
		if (it != expr_end) {
			jule::I64 _21913_i = it - expr->begin();
			jule::Ptr<_1c6283a3b_Token> _21916_token = *it;
			{
				{
					auto &_match_expr{ (*(_21916_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ad619e62:;
						{
							(_21817_rangeN)++;
							goto _iter_next_1ad619170;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ad619ed9:;
						{
							(_21817_rangeN)--;
						}
					}
					_match_end_1ad619d96:;
				};
				if ((_21817_rangeN > 0LL)) {
					goto _iter_next_1ad619170;
				} else if (((_21913_i + 1LL) == (*(_21736_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_1c6283a3b_Token>> _23821_typeTokens = (*(_21736_tokens)).slice(0LL, (_21913_i + 1LL));;
				jule::Slice<jule::Ptr<_1c6283a3b_Token>> _23921_exprTokens = (*(_21736_tokens)).slice((_21913_i + 1LL));;
				if ((_23921_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_1c6283a3b_Token> _24617_tok = _23921_exprTokens[0LL];;
				if (((*(_24617_tok))._field_Id != static_cast<jule::U64>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_1c62a0ddd_CastExpr> _25121_cast = jule::new_ptr<_1c62a0ddd_CastExpr>(_1c62a0ddd_CastExpr{});;
				if ((_23921_exprTokens.len() == 2LL)) {
					_1a9eac495_pushErr(_self_, _23921_exprTokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
					_1a9eac808_pushSuggestion(_self_, jule::Str("give an expression for casting", 30), jule::Slice<jule::Any>());
				};
				if ((_23821_typeTokens.len() == 2LL)) {
					_1a9eac495_pushErr(_self_, _23821_typeTokens[0LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
					_1a9eac808_pushSuggestion(_self_, jule::Str("type declaration expected for casting", 37), jule::Slice<jule::Any>());
				} else {
					(_23821_typeTokens).mut_slice(1LL, (_23821_typeTokens.len() - 1LL));;
					jule::I64 _26525_typeIndex = 0LL;;
					jule::Ptr<_1c6299249_TypeDecl> _26626_t;;
					jule::Bool _26629_ok = false;;
					({
						__jule_tuple_x_1c6299249_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9ebed8c_buildType((*(_self_))._field_p, &(_23821_typeTokens), (&(_26525_typeIndex)), true);
						_26626_t = __jule_assign_result.__jule_result_arg0;
						_26629_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_26629_ok && (_26525_typeIndex < _23821_typeTokens.len()))) {
						_1a9eac495_pushErr(_self_, _23821_typeTokens[_26525_typeIndex], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					} else if ((!(_26629_ok))) {
						return _25121_cast;;
					};
					(*(_25121_cast))._field_Kind=_26626_t;
					if ((_23921_exprTokens.len() > 2LL)) {
						jule::I64 _27629_j = 0LL;;
						_1a9ebabbd_range(&(_27629_j), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_23921_exprTokens));
						if ((_27629_j < _23921_exprTokens.len())) {
							return nullptr;;
						};
						(_23921_exprTokens).mut_slice(0LL, _27629_j);;
						(*(_25121_cast))._field_Expr=_1a9eb703d_buildFromTokens(_self_, _23921_exprTokens);
					};
				};
				return _25121_cast;;
			}
			_iter_next_1ad619170:;
			++it;
			_21913_i++;
			goto _iter_begin_1ad619170;
		}
		_iter_end_1ad619170:;
	};
	return nullptr;;
}



inline void _1a9eb09a4_pushArg(_1a9eabbd1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c629d57d_Expr>>* _29131_args, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _29150_tokens, jule::Ptr<_1c6283a3b_Token> _29168_err_token) {
	if ((_29150_tokens.len() == 0LL)) {
		_1a9eac495_pushErr(_self_, _29168_err_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a9eac808_pushSuggestion(_self_, jule::Str("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_1c629d57d_Expr>> &__jule_push_dest = (*(_29131_args)); __jule_push_dest.push(_1a9eb703d_buildFromTokens(_self_, _29150_tokens)); };
}



inline jule::Slice<jule::Ptr<_1c629d57d_Expr>> _1a9eb0ce5_buildArgs(_1a9eabbd1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _30032_tokens) {
	if ((_30032_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c629d57d_Expr>> _30617_args = nullptr;;
	jule::I64 _30717_last = 0LL;;
	jule::I64 _30817_rangeN = 0LL;;
	(_30032_tokens).mut_slice(1LL, (_30032_tokens.len() - 1LL));;
	{
		auto expr = &(_30032_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad6270c3:;
		if (it != expr_end) {
			jule::I64 _31013_i = it - expr->begin();
			jule::Ptr<_1c6283a3b_Token> _31016_token = *it;
			{
				{
					auto &_match_expr{ (*(_31016_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ad6281a1:;
						{
							(_30817_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ad628228:;
						{
							(_30817_rangeN)--;
						}
					}
					_match_end_1ad6280d5:;
				};
				if (((_30817_rangeN > 0LL) || ((*(_31016_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1ad6270c3;
				};
				_1a9eb09a4_pushArg(_self_, &(_30617_args), _30032_tokens.slice(_30717_last, _31013_i), _31016_token);
				_30717_last=static_cast<jule::I64>((_31013_i + 1LL));
			}
			_iter_next_1ad6270c3:;
			++it;
			_31013_i++;
			goto _iter_begin_1ad6270c3;
		}
		_iter_end_1ad6270c3:;
	};
	if ((_30717_last < _30032_tokens.len())) {
		if ((_30717_last == 0LL)) {
			if ((_30032_tokens.len() > 0LL)) {
				_1a9eb09a4_pushArg(_self_, &(_30617_args), _30032_tokens.slice(_30717_last), _30032_tokens[_30717_last]);
			};
		} else {
			_1a9eb09a4_pushArg(_self_, &(_30617_args), _30032_tokens.slice(_30717_last), _30032_tokens[(_30717_last - 1LL)]);
		};
	};
	return _30617_args;;
}



inline jule::Ptr<_1c62a22a7_FnCallExpr> _1a9eb15dc_buildFnCall(_1a9eabbd1_exprBuilder* _self_, jule::Ptr<_1c6283a3b_Token>* _36635_token, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _36655_expr, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _36676_args) {
	return jule::new_ptr<_1c62a22a7_FnCallExpr>(_1c62a22a7_FnCallExpr{._field_Token=(*(_36635_token)), ._field_Expr=_1a9eb703d_buildFromTokens(_self_, (*(_36655_expr))), ._field_Args=_1a9eb0ce5_buildArgs(_self_, (*(_36676_args))), });;
}



inline jule::Any _1a9eb192d_buildParenthesesRange(_1a9eabbd1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _37445_tokens) {
	jule::Ptr<_1c6283a3b_Token> _37517_token = (*(_37445_tokens))[0LL];;
	if (((*(_37517_token))._field_Id == static_cast<jule::U64>(74LLU))) {
		jule::Ptr<_1c62a0ddd_CastExpr> _37721_expr = _1a9eb0586_tryBuildCast(_self_, _37445_tokens);;
		if ((_37721_expr != nullptr)) {
			return jule::Any(_37721_expr, &__jule_any_type105);;
		};
	};
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _38218_exprTokens;;
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _38234_args_tokens;;
	({
		__jule_tuple_sx_1c6283a3b_Token__jule_tuple_sx_1c6283a3b_Token __jule_assign_result = _1a9ebae87_rangeLast(_37445_tokens);
		_38218_exprTokens = __jule_assign_result.__jule_result_arg0;
		_38234_args_tokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_38218_exprTokens.len() == 0LL)) {
		return jule::Any(_1a9eb0245_buildBetweenParentheses(_self_, _38234_args_tokens), &__jule_any_type100);;
	};
	return jule::Any(_1a9eb15dc_buildFnCall(_self_, &(_37517_token), &(_38218_exprTokens), &(_38234_args_tokens)), &__jule_any_type107);;
}



inline jule::Ptr<_1c629ea02_UnsafeExpr> _1a9eb1c6e_buildUnsafeExpr(_1a9eabbd1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _39138_tokens) {
	jule::Ptr<_1c6283a3b_Token> _39217_token = _39138_tokens[0LL];;
	(_39138_tokens).mut_slice(1LL);;
	jule::I64 _39417_i = 0LL;;
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _39517_rangeTokens = _1a9ebabbd_range(&(_39417_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_39138_tokens));;
	if ((_39517_rangeTokens.len() == 0LL)) {
		_1a9eac495_pushErr(_self_, _39138_tokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1c629ea02_UnsafeExpr>(_1c629ea02_UnsafeExpr{._field_Token=_39217_token, ._field_Expr=_1a9eb703d_buildFromTokens(_self_, _39517_rangeTokens)});;
}



inline jule::Ptr<_1c62aae09_FnDecl> _1a9eb20b0_buildAnonFn(_1a9eabbd1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _40635_tokens) {
	jule::Ptr<_1c62aae09_FnDecl> _40717_f = _1a9ec44ce_buildFn((*(_self_))._field_p, _40635_tokens, false, false);;
	if ((!(_1c62ab26c_IsAnon(_40717_f.ptr())))) {
		_1a9eac495_pushErr(_self_, (*(_40717_f))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a9eac808_pushSuggestion(_self_, jule::Str("anonymous function expected, remove identifier of function", 58), jule::Slice<jule::Any>());
	};
	return _40717_f;;
}



inline jule::Any _1a9eb2401_buildUnsafe(_1a9eabbd1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _41535_tokens) {
	{
		auto &_match_expr{ (*((*(_41535_tokens))[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1ad638cc7:;
			{
				return jule::Any(_1a9eb20b0_buildAnonFn(_self_, _41535_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_1ad639305:;
			{
				return jule::Any(_1a9eb1c6e_buildUnsafeExpr(_self_, (*(_41535_tokens))), &__jule_any_type102);;
			}
		}
		_match_end_1ad639239:;
	};
}



inline void _1a9eb281e_pushRangeLitPart(_1a9eabbd1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _42539_part, jule::Ptr<_1c6283a3b_Token> _4269_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>>* _42634_parts) {
	if ((_42539_part.len() == 0LL)) {
		_1a9eac495_pushErr(_self_, _4269_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a9eac808_pushSuggestion(_self_, jule::Str("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>> &__jule_push_dest = (*(_42634_parts)); __jule_push_dest.push(_42539_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>> _1a9eb2b60_getBraceRangeLitExprParts(_1a9eabbd1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _43648_tokens) {
	if ((_43648_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>> _44217_parts = nullptr;;
	jule::I64 _44417_last = 0LL;;
	jule::I64 _44517_rangeN = 0LL;;
	(_43648_tokens).mut_slice(1LL, (_43648_tokens.len() - 1LL));;
	{
		auto expr = &(_43648_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad63ce0d:;
		if (it != expr_end) {
			jule::I64 _44713_i = it - expr->begin();
			jule::Ptr<_1c6283a3b_Token> _44716_token = *it;
			{
				{
					auto &_match_expr{ (*(_44716_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ad63dedb:;
						{
							(_44517_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ad63e063:;
						{
							(_44517_rangeN)--;
						}
					}
					_match_end_1ad63de20:;
				};
				if (((_44517_rangeN > 0LL) || ((*(_44716_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1ad63ce0d;
				};
				_1a9eb281e_pushRangeLitPart(_self_, _43648_tokens.slice(_44417_last, _44713_i), _44716_token, &(_44217_parts));
				_44417_last=static_cast<jule::I64>((_44713_i + 1LL));
			}
			_iter_next_1ad63ce0d:;
			++it;
			_44713_i++;
			goto _iter_begin_1ad63ce0d;
		}
		_iter_end_1ad63ce0d:;
	};
	if ((_44417_last < _43648_tokens.len())) {
		if ((_44417_last == 0LL)) {
			if ((_43648_tokens.len() > 0LL)) {
				_1a9eb281e_pushRangeLitPart(_self_, _43648_tokens.slice(_44417_last), _43648_tokens[_44417_last], &(_44217_parts));
			};
		} else {
			_1a9eb281e_pushRangeLitPart(_self_, _43648_tokens.slice(_44417_last), _43648_tokens[(_44417_last - 1LL)], &(_44217_parts));
		};
	};
	return _44217_parts;;
}



inline jule::Ptr<_1c62a2c9c_FieldExprPair> _1a9eb2ea1_buildFieldExprPair(_1a9eabbd1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _47841_tokens) {
	if (((_47841_tokens.len() - 2LL) == 0LL)) {
		_1a9eac495_pushErr(_self_, _47841_tokens[1LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c62a2c9c_FieldExprPair> _48317_pair = jule::new_ptr<_1c62a2c9c_FieldExprPair>(_1c62a2c9c_FieldExprPair{._field_Field=_47841_tokens[0LL], });;
	(_47841_tokens).mut_slice(2LL);;
	(*(_48317_pair))._field_Expr=_1a9eb703d_buildFromTokens(_self_, _47841_tokens);
	return _48317_pair;;
}



inline jule::Ptr<_1c629d57d_Expr> _1a9eb32e2_buildStructLitExpr(_1a9eabbd1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _49142_tokens) {
	jule::Ptr<_1c6283a3b_Token> _49217_token = (*(_49142_tokens))[0LL];;
	if ((((*(_49217_token))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_49142_tokens)).len() > 1LL))) {
		_49217_token=(*(_49142_tokens))[1LL];
		if (((*(_49217_token))._field_Id == static_cast<jule::U64>(8LLU))) {
			return jule::new_ptr<_1c629d57d_Expr>(_1c629d57d_Expr{._field_Token=_49217_token, ._field_End=(*(_49142_tokens))[((*(_49142_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1a9eb2ea1_buildFieldExprPair(_self_, (*(_49142_tokens))), &__jule_any_type77)});;
		};
	};
	return _1a9eb703d_buildFromTokens(_self_, (*(_49142_tokens)));;
}



inline jule::Slice<jule::Ptr<_1c629d57d_Expr>> _1a9eb3633_buildStructLitExprs(_1a9eabbd1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _50643_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>> _50717_parts = _1a9eb2b60_getBraceRangeLitExprParts(_self_, (*(_50643_tokens)));;
	if ((_50717_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c629d57d_Expr>> _51217_pairs = jule::Slice<jule::Ptr<_1c629d57d_Expr>>::alloc(0LL, _50717_parts.len());;
	{
		auto expr = &(_50717_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad6475aa:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c6283a3b_Token>> _51321_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1c629d57d_Expr>> &__jule_push_dest = _51217_pairs; __jule_push_dest.push(_1a9eb32e2_buildStructLitExpr(_self_, &(_51321_part))); };
			}
			_iter_next_1ad6475aa:;
			++it;
			goto _iter_begin_1ad6475aa;
		}
		_iter_end_1ad6475aa:;
	};
	return _51217_pairs;;
}



inline jule::Ptr<_1c62a35c7_StructLit> _1a9eb3974_buildTypedStructLiteral(_1a9eabbd1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _51946_tokens) {
	jule::I64 _52017_i = 0LL;;
	jule::Ptr<_1c6299249_TypeDecl> _52118_t;;
	jule::Bool _52121_ok = false;;
	({
		__jule_tuple_x_1c6299249_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9ebed8c_buildType((*(_self_))._field_p, &(_51946_tokens), (&(_52017_i)), true);
		_52118_t = __jule_assign_result.__jule_result_arg0;
		_52121_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_52121_ok))) {
		return nullptr;;
	} else if ((_52017_i >= _51946_tokens.len())) {
		_1a9eac495_pushErr(_self_, _51946_tokens[_52017_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_51946_tokens).mut_slice(_52017_i);;
	jule::Ptr<_1c6283a3b_Token> _53013_token = _51946_tokens[0LL];;
	if (((*(_53013_token))._field_Id != static_cast<jule::U64>(72LLU))) {
		_1a9eac495_pushErr(_self_, _53013_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1c62a35c7_StructLit>(_1c62a35c7_StructLit{._field_End=_51946_tokens[(_51946_tokens.len() - 1LL)], ._field_Kind=_52118_t, ._field_Exprs=_1a9eb3633_buildStructLitExprs(_self_, &(_51946_tokens))});;
}



inline jule::Ptr<_1c629d57d_Expr> _1a9eb3cb5_buildBraceLitPart(_1a9eabbd1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _54341_tokens) {
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _54418_l;;
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _54425_r;;
	({
		__jule_tuple_sx_1c6283a3b_Token__jule_tuple_sx_1c6283a3b_Token __jule_assign_result = _1a9eb7d96_splitDelim(_54341_tokens, static_cast<jule::U64>(8LLU));
		_54418_l = __jule_assign_result.__jule_result_arg0;
		_54425_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_54418_l != nullptr)) {
		return jule::new_ptr<_1c629d57d_Expr>(_1c629d57d_Expr{._field_Token=(*(_54341_tokens))[0LL], ._field_End=(*(_54341_tokens))[((*(_54341_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1c62a43a8_KeyValPair>(_1c62a43a8_KeyValPair{._field_Key=_1a9eb703d_buildFromTokens(_self_, _54418_l), ._field_Val=_1a9eb703d_buildFromTokens(_self_, _54425_r), ._field_Colon=(*(_54341_tokens))[_54418_l.len()]}), &__jule_any_type78)});;
	};
	return _1a9eb703d_buildFromTokens(_self_, (*(_54341_tokens)));;
}



inline jule::Ptr<_1c62a3a7d_BraceLit> _1a9eb4106_buildBraceLit(_1a9eabbd1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _56037_tokens) {
	jule::Ptr<_1c62a3a7d_BraceLit> _56117_lit = jule::new_ptr<_1c62a3a7d_BraceLit>(_1c62a3a7d_BraceLit{._field_Token=(*(_56037_tokens))[0LL], ._field_End=(*(_56037_tokens))[((*(_56037_tokens)).len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>> _56617_parts = _1a9eb2b60_getBraceRangeLitExprParts(_self_, (*(_56037_tokens)));;
	if ((_56617_parts == nullptr)) {
		return _56117_lit;;
	};
	(*(_56117_lit))._field_Exprs=jule::Slice<jule::Ptr<_1c629d57d_Expr>>::alloc(0LL, _56617_parts.len());
	{
		auto expr = &(_56617_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad651c68:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c6283a3b_Token>> _57221_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1c629d57d_Expr>> &__jule_push_dest = (*(_56117_lit))._field_Exprs; __jule_push_dest.push(_1a9eb3cb5_buildBraceLitPart(_self_, &(_57221_part))); };
			}
			_iter_next_1ad651c68:;
			++it;
			goto _iter_begin_1ad651c68;
		}
		_iter_end_1ad651c68:;
	};
	return _56117_lit;;
}



inline jule::Any _1a9eb4447_buildBraceRange(_1a9eabbd1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _57939_tokens) {
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _58018_exprTokens;;
	jule::I64 _58030_rangeN = 0;;
	({
		__jule_tuple_sx_1c6283a3b_Token__jule_tuple_int __jule_assign_result = _1a9eb86e3_getRangeExprTokens(_57939_tokens);
		_58018_exprTokens = __jule_assign_result.__jule_result_arg0;
		_58030_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_58018_exprTokens.len() == 0LL)) {
			_case_begin_1ad652906:;
			{
				return jule::Any(_1a9eb4106_buildBraceLit(_self_, _57939_tokens), &__jule_any_type108);;
			}
		}
		else if ((_58030_rangeN > 0LL)) {
			_case_begin_1ad65360a:;
			{
				_1a9eac495_pushErr(_self_, (*(_57939_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad652a16:;
	};
	jule::Ptr<_1c6283a3b_Token> _59113_elseToken = _58018_exprTokens[(_58018_exprTokens.len() - 1LL)];;
	if (((*(_58018_exprTokens[(_58018_exprTokens.len() - 1LL)]))._field_Id == static_cast<jule::U64>(14LLU))) {
		(_58018_exprTokens).mut_slice(0LL, (_58018_exprTokens.len() - 1LL));;
		jule::Any _59421_d = _1a9eb68ab_build(_self_, &(_58018_exprTokens));;
		if ((_59421_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _59421_d };
			
			if (_match_expr.type == &__jule_any_type107) {
				_case_begin_1ad6567ea:;
				{
					((*(_57939_tokens))).mut_slice((_58018_exprTokens.len() + 1LL));;
					jule::I64 _60125_i = 0LL;;
					jule::Slice<jule::Ptr<_1c6283a3b_Token>> _60225_rangeTokens = _1a9ebabbd_range(&(_60125_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _57939_tokens);;
					jule::Ptr<_1c62a22a7_FnCallExpr> _60325_model = _59421_d.cast_ptr<_1c62a22a7_FnCallExpr>(&__jule_any_type107);;
					if (_1c62a28b2_Ignored(_60325_model.ptr())) {
						_1a9eac495_pushErr(_self_, _59113_elseToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
						_1a9eac808_pushSuggestion(_self_, jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72), jule::Slice<jule::Any>());
					};
					(*(_60325_model))._field_Exception=_1a9ebe430_buildScope((*(_self_))._field_p, &(_60225_rangeTokens), (*(_57939_tokens))[(_60125_i - 1LL)]);
					return _59421_d;;
				}
			}
			else {
				_case_begin_1ad6562bc:;
				{
					_1a9eac495_pushErr(_self_, _58018_exprTokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1ad656267:;
		};
	};
	{
		auto &_match_expr{ (*(_58018_exprTokens[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1ad65a788:;
			{
				return _1a9eb2401_buildUnsafe(_self_, _57939_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1ad65adb5:;
			{
				return jule::Any(_1a9eb20b0_buildAnonFn(_self_, _57939_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1ad65ae2b:;
			{
				return jule::Any(_1a9eb3974_buildTypedStructLiteral(_self_, (*(_57939_tokens))), &__jule_any_type106);;
			}
		}
		else {
			_case_begin_1ad656ca1:;
			{
				_1a9eac495_pushErr(_self_, _58018_exprTokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad65a26b:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>> _1a9eb4788_getEnumerableParts(_1a9eabbd1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _63141_tokens) {
	(_63141_tokens).mut_slice(1LL, (_63141_tokens.len() - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>> _63318_parts;;
	jule::Slice<_221968cb9_Log> _63325_errors;;
	({
		__jule_tuple_ssx_1c6283a3b_Token__jule_tuple_s_221968cb9_Log __jule_assign_result = _1a9ebb43d_parts(&(_63141_tokens), static_cast<jule::U64>(5LLU), true);
		_63318_parts = __jule_assign_result.__jule_result_arg0;
		_63325_errors = __jule_assign_result.__jule_result_arg1;
	});
	((*((*(_self_))._field_p))._field_errors).append(_63325_errors);;
	return _63318_parts;;
}



inline jule::Ptr<_1c62a4aa1_SliceExpr> _1a9eb4ac9_buildSlice(_1a9eabbd1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _63833_tokens) {
	jule::Ptr<_1c62a4aa1_SliceExpr> _63917_slc = jule::new_ptr<_1c62a4aa1_SliceExpr>(_1c62a4aa1_SliceExpr{._field_Token=_63833_tokens[0LL], ._field_End=_63833_tokens[(_63833_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>> _64417_parts = _1a9eb4788_getEnumerableParts(_self_, _63833_tokens);;
	if ((_64417_parts.len() == 0LL)) {
		return _63917_slc;;
	};
	(*(_63917_slc))._field_Exprs=jule::Slice<jule::Ptr<_1c629d57d_Expr>>::alloc(0LL, _64417_parts.len());
	{
		auto expr = &(_64417_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad660abd:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c6283a3b_Token>> _65021_p = *it;
			{
				if ((_65021_p.len() == 0LL)) {
					goto _iter_next_1ad660abd;
				};
				{ jule::Slice<jule::Ptr<_1c629d57d_Expr>> &__jule_push_dest = (*(_63917_slc))._field_Exprs; __jule_push_dest.push(_1a9eb703d_buildFromTokens(_self_, _65021_p)); };
			}
			_iter_next_1ad660abd:;
			++it;
			goto _iter_begin_1ad660abd;
		}
		_iter_end_1ad660abd:;
	};
	return _63917_slc;;
}



inline jule::Ptr<_1c62a5541_IndexingExpr> _1a9eb5080_buildIndexing(_1a9eabbd1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _66036_exprTokens, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _66113_tokens, jule::Ptr<_1c6283a3b_Token> _66135_errorToken) {
	jule::Ptr<_1c6283a3b_Token> _66217_end = _66113_tokens[(_66113_tokens.len() - 1LL)];;
	(_66113_tokens).mut_slice(1LL, (_66113_tokens.len() - 1LL));;
	if ((_66113_tokens.len() == 0LL)) {
		_1a9eac495_pushErr(_self_, _66135_errorToken, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c629d57d_Expr> _66817_expr = _1a9eb703d_buildFromTokens(_self_, _66036_exprTokens);;
	if ((_66817_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c629d57d_Expr> _67217_index = _1a9eb703d_buildFromTokens(_self_, _66113_tokens);;
	if ((_67217_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c62a5541_IndexingExpr>(_1c62a5541_IndexingExpr{._field_Token=_66135_errorToken, ._field_End=_66217_end, ._field_Expr=_66817_expr, ._field_Index=_67217_index});;
}



inline jule::Ptr<_1c62a5ba1_SlicingExpr> _1a9eb569b_buildSlicing(_1a9eabbd1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _68436_exprTokens, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _68463_start, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _68514_to, jule::Ptr<_1c6283a3b_Token>* _68533_errorToken, jule::Ptr<_1c6283a3b_Token> _68557_end) {
	jule::Ptr<_1c62a5ba1_SlicingExpr> _68617_slc = jule::new_ptr<_1c62a5ba1_SlicingExpr>(_1c62a5ba1_SlicingExpr{._field_Token=(*(_68533_errorToken)), ._field_End=_68557_end, ._field_Expr=_1a9eb703d_buildFromTokens(_self_, (*(_68436_exprTokens))), });;
	if (((*(_68463_start)).len() > 0LL)) {
		(*(_68617_slc))._field_Start=_1a9eb703d_buildFromTokens(_self_, (*(_68463_start)));
	};
	if (((*(_68514_to)).len() > 0LL)) {
		(*(_68617_slc))._field_To=_1a9eb703d_buildFromTokens(_self_, (*(_68514_to)));
	};
	return _68617_slc;;
}



inline jule::Any _1a9eb59dc_buildBracketRange(_1a9eabbd1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _70040_tokens) {
	jule::Ptr<_1c6283a3b_Token> _70117_errorToken = _70040_tokens[0LL];;
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _70218_exprTokens;;
	jule::I64 _70230_rangeN = 0;;
	({
		__jule_tuple_sx_1c6283a3b_Token__jule_tuple_int __jule_assign_result = _1a9eb86e3_getRangeExprTokens(&(_70040_tokens));
		_70218_exprTokens = __jule_assign_result.__jule_result_arg0;
		_70230_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_70218_exprTokens.len() == 0LL)) {
		return jule::Any(_1a9eb4ac9_buildSlice(_self_, _70040_tokens), &__jule_any_type93);;
	} else if ((_70230_rangeN > 0LL)) {
		_1a9eac495_pushErr(_self_, _70117_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_70040_tokens).mut_slice(_70218_exprTokens.len());;
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _71717_splitTokens = _70040_tokens.slice(1LL, (_70040_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _71818_start;;
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _71829_to;;
	({
		__jule_tuple_sx_1c6283a3b_Token__jule_tuple_sx_1c6283a3b_Token __jule_assign_result = _1a9eb7d96_splitDelim(&(_71717_splitTokens), static_cast<jule::U64>(8LLU));
		_71818_start = __jule_assign_result.__jule_result_arg0;
		_71829_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_71818_start != nullptr) || (_71829_to != nullptr))) {
		return jule::Any(_1a9eb569b_buildSlicing(_self_, &(_70218_exprTokens), &(_71818_start), &(_71829_to), &(_70117_errorToken), _70040_tokens[(_70040_tokens.len() - 1LL)]), &__jule_any_type104);;
	};
	return jule::Any(_1a9eb5080_buildIndexing(_self_, _70218_exprTokens, _70040_tokens, _70117_errorToken), &__jule_any_type103);;
}



inline jule::Any _1a9eb5d2d_buildExclRight(_1a9eabbd1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _72538_tokens) {
	jule::Ptr<_1c6283a3b_Token> _72613_token = (*(_72538_tokens))[((*(_72538_tokens)).len() - 1LL)];;
	((*(_72538_tokens))).mut_slice(0LL, ((*(_72538_tokens)).len() - 1LL));;
	jule::Any _72817_d = _1a9eb68ab_build(_self_, _72538_tokens);;
	if ((_72817_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _72817_d };
		
		if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1ad66d5c0:;
			{
				(*(_72817_d.cast_ptr<_1c62a22a7_FnCallExpr>(&__jule_any_type107)))._field_Exception=jule::new_ptr<_1c62a926a_ScopeTree>(_1c62a926a_ScopeTree{._field_Deferred=true, });
				return _72817_d;;
			}
		}
		_match_end_1ad66d34a:;
	};
	_1a9eac495_pushErr(_self_, _72613_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1a9eb616e_buildData(_1a9eabbd1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _74333_tokens) {
	{
		auto _match_expr{ (*(_74333_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1ad66ec64:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1ad66ecca:;
			{
				return _1a9ead61c_buildSingle(_self_, (*(_74333_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1ad66ed52:;
			{
				if (((*((*(_74333_tokens))[0LL]))._field_Id == static_cast<jule::U64>(27LLU))) {
					return jule::Any(_1a9ead95d_buildBindIdent(_self_, _74333_tokens), &__jule_any_type79);;
				};
			}
		}
		_match_end_1ad66ea77:;
	};
	jule::Ptr<_1c6283a3b_Token> _75517_token = (*(_74333_tokens))[((*(_74333_tokens)).len() - 1LL)];;
	if (((*(_75517_token))._field_Id == static_cast<jule::U64>(39LLU))) {
		return jule::Any(_1a9eaee04_buildVariadic(_self_, (*(_74333_tokens))), &__jule_any_type75);;
	};
	_75517_token=(*(_74333_tokens))[0LL];
	if (_1c6284278_IsUnaryOp((*(_75517_token))._field_Id)) {
		if (((*(_74333_tokens)).len() > 1LL)) {
			_75517_token=(*(_74333_tokens))[1LL];
			if (((*(_75517_token))._field_Id == static_cast<jule::U64>(31LLU))) {
				return jule::Any(_1a9eae772_buildType(_self_, _74333_tokens), &__jule_any_type88);;
			};
		};
		return jule::Any(_1a9eadc9e_buildUnary(_self_, (*(_74333_tokens))), &__jule_any_type87);;
	};
	if (((*(_74333_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ (*(_75517_token))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
				_case_begin_1ad674560:;
				{
					if (((*(_74333_tokens)).len() > 3LL)) {
						jule::Ptr<_1c6283a3b_Token> _78125_t = (*(_74333_tokens))[((*(_74333_tokens)).len() - 1LL)];;
						if (((*(_78125_t))._field_Id == static_cast<jule::U64>(75LLU))) {
							goto _match_end_1ad6744a5;
						};
					};
					jule::Ptr<_1c6283a3b_Token> _78721_next = (*(_74333_tokens))[1LL];;
					if (((*(_78721_next))._field_Id != static_cast<jule::U64>(77LLU))) {
						goto _match_end_1ad6744a5;
					};
					return jule::Any(_1a9eae772_buildType(_self_, _74333_tokens), &__jule_any_type88);;
				}
			}
			_match_end_1ad6744a5:;
		};
	};
	_75517_token=(*(_74333_tokens))[((*(_74333_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ (*(_75517_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1ad677585:;
			{
				return _1a9eaeab3_buildSubIdent(_self_, _74333_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1ad6775eb:;
			{
				return _1a9eb5d2d_buildExclRight(_self_, _74333_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1ad677662:;
			{
				return _1a9eb192d_buildParenthesesRange(_self_, _74333_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1ad6776c8:;
			{
				return _1a9eb4447_buildBraceRange(_self_, _74333_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1ad677750:;
			{
				return _1a9eb59dc_buildBracketRange(_self_, (*(_74333_tokens)));;
			}
		}
		_match_end_1ad6774b9:;
	};
	if (((*(_75517_token))._field_Id == static_cast<jule::U64>(29LLU))) {
		return jule::Any(_1a9eae772_buildType(_self_, _74333_tokens), &__jule_any_type88);;
	};
	_1a9eac495_pushErr(_self_, _75517_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1a9eb656a_buildBinop(_1a9eabbd1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _81834_tokens, jule::I64 _81852_i) {
	jule::Ptr<_1c6283a3b_Token> _81917_op = (*(_81834_tokens))[_81852_i];;
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _82017_leftTokens = (*(_81834_tokens)).slice(0LL, _81852_i);;
	if ((_1a9eb7406_isTypeOp(&((*(_81917_op))._field_Id)) && _1a9eb7714_isTypeRange(&(_82017_leftTokens)))) {
		return jule::Any(_1a9eae772_buildType(_self_, _81834_tokens), &__jule_any_type88);;
	};
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _82517_rightTokens = (*(_81834_tokens)).slice((_81852_i + 1LL));;
	if ((_82017_leftTokens.len() == 0LL)) {
		_1a9eac495_pushErr(_self_, (*(_81834_tokens))[_81852_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a9eac808_pushSuggestion(_self_, jule::Str("left operand expected for binary operator", 41), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_82517_rightTokens.len() == 0LL)) {
		_1a9eac495_pushErr(_self_, (*(_81834_tokens))[_81852_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a9eac808_pushSuggestion(_self_, jule::Str("right operand expected for binary operator", 42), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1c62a1b47_BinopExpr>(_1c62a1b47_BinopExpr{._field_Left=_1a9eb703d_buildFromTokens(_self_, _82017_leftTokens), ._field_Right=_1a9eb703d_buildFromTokens(_self_, _82517_rightTokens), ._field_Op=_81917_op}), &__jule_any_type109);;
}



inline jule::Any _1a9eb68ab_build(_1a9eabbd1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _84329_tokens) {
	if (((*((*(_84329_tokens))[0LL]))._field_Id == static_cast<jule::U64>(37LLU))) {
		return jule::Any(_1a9eae772_buildType(_self_, _84329_tokens), &__jule_any_type88);;
	};
	jule::I64 _84713_i = _1a9eb8160_findLowestPrecOp(_84329_tokens);;
	if ((_84713_i == -1LL)) {
		return _1a9eb616e_buildData(_self_, _84329_tokens);;
	};
	return _1a9eb656a_buildBinop(_self_, _84329_tokens, _84713_i);;
}



inline jule::Any _1a9eb6bec_buildKind(_1a9eabbd1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _85433_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>> _85518_parts;;
	jule::Slice<_221968cb9_Log> _85525_errors;;
	({
		__jule_tuple_ssx_1c6283a3b_Token__jule_tuple_s_221968cb9_Log __jule_assign_result = _1a9ebb43d_parts(_85433_tokens, static_cast<jule::U64>(5LLU), true);
		_85518_parts = __jule_assign_result.__jule_result_arg0;
		_85525_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_85525_errors != nullptr)) {
		((*((*(_self_))._field_p))._field_errors).append(_85525_errors);;
		return nullptr;;
	} else if ((_85518_parts.len() > 1LL)) {
		return jule::Any(_1a9eacb49_buildTuple(_self_, &(_85518_parts)), &__jule_any_type80);;
	};
	return _1a9eb68ab_build(_self_, _85433_tokens);;
}



inline jule::Ptr<_1c629d57d_Expr> _1a9eb703d_buildFromTokens(_1a9eabbd1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _86538_tokens) {
	if ((_86538_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _86917_kind = _1a9eb6bec_buildKind(_self_, &(_86538_tokens));;
	if ((_86917_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c629d57d_Expr>(_1c629d57d_Expr{._field_Token=_86538_tokens[0LL], ._field_End=_86538_tokens[(_86538_tokens.len() - 1LL)], ._field_Kind=_86917_kind});;
}





std::ostream &operator<<(std::ostream &_Stream, _1a9eabbd1_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a9eb913e_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1a9ebcad2_stop(_1a9ebc7d5_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1a9ebcd68_stopped(_1a9ebc7d5_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1a9ebd286_pushErr(_1a9ebc7d5_parser* _self_, jule::Ptr<_1c6283a3b_Token> _23626_token, jule::Str _23641_fmt, jule::Slice<jule::Any> _23654_args) {
	{ jule::Slice<_221968cb9_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1a9ebbb36_compilerErr(&(_23626_token), &(_23641_fmt), _23654_args)); };
}



inline void _1a9ebd5e9_pushSuggestion(_1a9ebc7d5_parser* _self_, jule::Str _24133_fmt, jule::Slice<jule::Any> _24146_args) {
	{
		_1a9ebbecc_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _24133_fmt, _24146_args);
	};
}



inline jule::Ptr<_1c629d57d_Expr> _1a9ebd93a_buildExpr(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _24534_tokens) {
	return _1a9eb703d_buildFromTokens((*(_self_))._field_ep.ptr(), (*(_24534_tokens)));;
}



inline jule::Ptr<_1c6298666_Directive> _1a9ebdc7b_buildDirective(_1a9ebc7d5_parser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _24937_tokens) {
	if ((_24937_tokens.len() == 1LL)) {
		_1a9ebd286_pushErr(_self_, _24937_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_24937_tokens[1LL]))._field_Column != ((*(_24937_tokens[0LL]))._field_Column + 1LL))) {
		_1a9ebd286_pushErr(_self_, _24937_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1c6298666_Directive>(_1c6298666_Directive{._field_Tag=_24937_tokens[1LL], ._field_Args=_24937_tokens.slice(2LL)});;
}



inline void _1a9ebe034_pushDirective(_1a9ebc7d5_parser* _self_, jule::Ptr<_1c6298666_Directive> _26436_d) {
	if ((_26436_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad6a7263:;
		if (it != expr_end) {
			jule::Ptr<_1c6298666_Directive> _26916_pd = *it;
			{
				if (((*((*(_26436_d))._field_Tag))._field_Kind == (*((*(_26916_pd))._field_Tag))._field_Kind)) {
					return;;
				};
			}
			_iter_next_1ad6a7263:;
			++it;
			goto _iter_begin_1ad6a7263;
		}
		_iter_end_1ad6a7263:;
	};
	{ jule::Slice<jule::Ptr<_1c6298666_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_26436_d); };
}



inline jule::Ptr<_1c62a926a_ScopeTree> _1a9ebe430_buildScope(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _27735_tokens, jule::Ptr<_1c6283a3b_Token> _27757_end) {
	jule::Ptr<_1c62a926a_ScopeTree> _27817_s = _1c6cc9042_newScope();;
	(*(_27817_s))._field_End=_27757_end;
	_1c6ccab48_scopeParser _28017_sp = _1c6ccab48_scopeParser{._field_p=_self_, };;
	_1a9eab164_build(&_28017_sp, _27735_tokens, &(_27817_s));
	return _27817_s;;
}



inline __jule_tuple_x_1c6299249_TypeDecl__jule_tuple_bool _1a9ebe8d6__buildType(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _28742_tokens, jule::I64* _28813_i, jule::Bool _28822_err) {
	__jule_tuple_x_1c6299249_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1a9ece64e_typeBuilder _28917_tb = _1a9ece64e_typeBuilder{._field_p=_self_, ._field_tokens=(*(_28742_tokens)), ._field_i=_28813_i, ._field_err=_28822_err};;
	jule::Ptr<_1c6299249_TypeDecl> _29518_decl;;
	jule::Bool _29524_ok = false;;
	({
		__jule_tuple_x_1c6299249_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9ed2630_build(&_28917_tb);
		_29518_decl = __jule_assign_result.__jule_result_arg0;
		_29524_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _29518_decl;
	__jule_func_result.__jule_result_arg1 = _29524_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_1c6299249_TypeDecl__jule_tuple_bool _1a9ebed8c_buildType(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _30041_tokens, jule::I64* _30113_i, jule::Bool _30122_err) {
	__jule_tuple_x_1c6299249_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1c6283a3b_Token> _30213_token = (*(_30041_tokens))[(*(_30113_i))];;
	jule::Ptr<_1c6299249_TypeDecl> _30318_t;;
	jule::Bool _30321_ok = false;;
	({
		__jule_tuple_x_1c6299249_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9ebe8d6__buildType(_self_, _30041_tokens, _30113_i, _30122_err);
		_30318_t = __jule_assign_result.__jule_result_arg0;
		_30321_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_30122_err && (!(_30321_ok)))) {
		_1a9ebd286_pushErr(_self_.ptr(), _30213_token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _30318_t;
	__jule_func_result.__jule_result_arg1 = _30321_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1c62b0aac_TypeAliasDecl> _1a9ec01cd_buildTypeAliasDecl(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _31043_tokens) {
	jule::I64 _31117_i = 1LL;;
	if ((_31117_i >= (*(_31043_tokens)).len())) {
		_1a9ebd286_pushErr(_self_.ptr(), (*(_31043_tokens))[(_31117_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c62b0aac_TypeAliasDecl> _31617_tad = jule::new_ptr<_1c62b0aac_TypeAliasDecl>(_1c62b0aac_TypeAliasDecl{._field_Token=(*(_31043_tokens))[1LL], ._field_Ident=(*((*(_31043_tokens))[1LL]))._field_Kind, });;
	jule::Ptr<_1c6283a3b_Token> _32017_token = (*(_31043_tokens))[_31117_i];;
	if (((*(_32017_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a9ebd286_pushErr(_self_.ptr(), _32017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a9ebd5e9_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_31117_i)++;
	if ((_31117_i >= (*(_31043_tokens)).len())) {
		_1a9ebd286_pushErr(_self_.ptr(), (*(_31043_tokens))[(_31117_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return _31617_tad;;
	};
	_32017_token=(*(_31043_tokens))[_31117_i];
	if (((*(_32017_token))._field_Id != static_cast<jule::U64>(8LLU))) {
		_1a9ebd286_pushErr(_self_.ptr(), (*(_31043_tokens))[(_31117_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a9ebd5e9_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18), jule::Slice<jule::Any>());
		return _31617_tad;;
	};
	(_31117_i)++;
	if ((_31117_i >= (*(_31043_tokens)).len())) {
		_1a9ebd286_pushErr(_self_.ptr(), (*(_31043_tokens))[(_31117_i - 1LL)], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return _31617_tad;;
	};
	jule::Ptr<_1c6299249_TypeDecl> _34118_t;;
	jule::Bool _34121_ok = false;;
	({
		__jule_tuple_x_1c6299249_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9ebed8c_buildType(_self_, _31043_tokens, (&(_31117_i)), true);
		_34118_t = __jule_assign_result.__jule_result_arg0;
		_34121_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_31617_tad))._field_Kind=_34118_t;
	if ((_34121_ok && (_31117_i < (*(_31043_tokens)).len()))) {
		_1a9ebd286_pushErr(_self_.ptr(), (*(_31043_tokens))[_31117_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_31617_tad))._field_Public=_1c6364ab7_IsPub(&((*(_31617_tad))._field_Ident));
	return _31617_tad;;
}



inline void _1a9ec0541_buildVarTypeAndExpr(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Ptr<_1c62abed7_VarDecl>* _35044_v, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _35062_tokens) {
	jule::I64 _35117_i = 0LL;;
	jule::Ptr<_1c6283a3b_Token> _35217_tok = (*(_35062_tokens))[_35117_i];;
	if (((*(_35217_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_35117_i)++;
		if (((_35117_i >= (*(_35062_tokens)).len()) || ((*((*(_35062_tokens))[_35117_i]))._field_Id == static_cast<jule::U64>(71LLU)))) {
			_1a9ebd286_pushErr(_self_.ptr(), _35217_tok, jule::Str("type missing", 12), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1c6299249_TypeDecl> _35922_t;;
		jule::Bool _35925_ok = false;;
		({
			__jule_tuple_x_1c6299249_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9ebed8c_buildType(_self_, _35062_tokens, (&(_35117_i)), true);
			_35922_t = __jule_assign_result.__jule_result_arg0;
			_35925_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_35925_ok) {
			(*((*(_35044_v))))._field_Kind=_35922_t;
			if ((_35117_i >= (*(_35062_tokens)).len())) {
				return;;
			};
			_35217_tok=(*(_35062_tokens))[_35117_i];
		};
	};
	if (((*(_35217_tok))._field_Id != static_cast<jule::U64>(71LLU))) {
		_1a9ebd286_pushErr(_self_.ptr(), _35217_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _37417_exprTokens = (*(_35062_tokens)).slice((_35117_i + 1LL));;
	if ((_37417_exprTokens.len() == 0LL)) {
		_1a9ebd286_pushErr(_self_.ptr(), _35217_tok, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_35044_v))))._field_Expr=_1a9ebd93a_buildExpr(_self_, &(_37417_exprTokens));
}



inline void _1a9ec08a4_buildVarCommon(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Ptr<_1c62abed7_VarDecl>* _38239_v, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _38256_tokens) {
	(*((*(_38239_v))))._field_Token=_38256_tokens[0LL];
	if (((*((*((*(_38239_v))))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a9ebd286_pushErr(_self_.ptr(), (*((*(_38239_v))))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a9ebd5e9_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_38239_v))))._field_Ident=(*((*((*(_38239_v))))._field_Token))._field_Kind;
	(*((*(_38239_v))))._field_Public=_1c6364ab7_IsPub(&((*((*(_38239_v))))._field_Ident));
	(*((*(_38239_v))))._field_Kind=nullptr;
	if ((_38256_tokens.len() > 1LL)) {
		(_38256_tokens).mut_slice(1LL);;
		_1a9ec0541_buildVarTypeAndExpr(_self_, _38239_v, &(_38256_tokens));
	};
}



inline void _1a9ec0cc2_buildVarBegin(_1a9ebc7d5_parser* _self_, jule::Ptr<_1c62abed7_VarDecl>* _39837_v, jule::I64* _39855_i, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _39864_tokens) {
	jule::Ptr<_1c6283a3b_Token> _39913_tok = (*(_39864_tokens))[(*(_39855_i))];;
	{
		auto &_match_expr{ (*(_39913_tok))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1ad6c2910:;
			{
				(*((*(_39837_v))))._field_Statically=true;
				goto _case_begin_1ad6c2d94;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1ad6c2d94:;
			{
				((*(_39855_i)))++;
				if (((*(_39855_i)) >= (*(_39864_tokens)).len())) {
					_1a9ebd286_pushErr(_self_, _39913_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				if (((*((*(_39864_tokens))[(*(_39855_i))]))._field_Id == static_cast<jule::U64>(32LLU))) {
					(*((*(_39837_v))))._field_Mutable=true;
					((*(_39855_i)))++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1ad6c25d0:;
			{
				((*(_39855_i)))++;
				(*((*(_39837_v))))._field_Constant=true;
			}
		}
		else {
			_case_begin_1ad6c2569:;
			{
				_1a9ebd286_pushErr(_self_, _39913_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1ad6c2514:;
	};
	if (((*(_39855_i)) >= (*(_39864_tokens)).len())) {
		_1a9ebd286_pushErr(_self_, _39913_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1c62abed7_VarDecl> _1a9ec1113_buildVar(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _42832_tokens) {
	jule::I64 _42917_i = 0LL;;
	jule::Ptr<_1c62abed7_VarDecl> _43017_v = jule::new_ptr<_1c62abed7_VarDecl>(_1c62abed7_VarDecl{._field_Token=_42832_tokens[0LL], });;
	_1a9ec0cc2_buildVarBegin(_self_.ptr(), &(_43017_v), &(_42917_i), &(_42832_tokens));
	if ((_42917_i >= _42832_tokens.len())) {
		return nullptr;;
	};
	(_42832_tokens).mut_slice(_42917_i);;
	if (((*(_42832_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		(*(_43017_v))._field_Reference=true;
		if ((_42832_tokens.len() == 1LL)) {
			return nullptr;;
		};
		(_42832_tokens).mut_slice(1LL);;
	};
	_1a9ec08a4_buildVarCommon(_self_, &(_43017_v), _42832_tokens);
	return _43017_v;;
}



inline jule::Ptr<_1c62a6454_GenericDecl> _1a9ec1454_buildGeneric(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _45037_tokens) {
	jule::Ptr<_1c62a6454_GenericDecl> _45117_g = jule::new_ptr<_1c62a6454_GenericDecl>(_1c62a6454_GenericDecl{._field_Token=(*(_45037_tokens))[0LL], });;
	if (((*((*(_45117_g))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a9ebd286_pushErr(_self_.ptr(), (*(_45117_g))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a9ebd5e9_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_45117_g))._field_Ident=(*((*(_45117_g))._field_Token))._field_Kind;
	if (((*(_45037_tokens)).len() > 1LL)) {
		if (((*((*(_45037_tokens))[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
			_1a9ebd286_pushErr(_self_.ptr(), (*(_45037_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_45037_tokens)).len() == 2LL)) {
			_1a9ebd286_pushErr(_self_.ptr(), (*(_45037_tokens))[1LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_1c6283a3b_Token>> _46821_constraintTokens = (*(_45037_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>> _46922_parts;;
		jule::Slice<_221968cb9_Log> _46929_errors;;
		({
			__jule_tuple_ssx_1c6283a3b_Token__jule_tuple_s_221968cb9_Log __jule_assign_result = _1a9ebb43d_parts(&(_46821_constraintTokens), static_cast<jule::U64>(66LLU), true);
			_46922_parts = __jule_assign_result.__jule_result_arg0;
			_46929_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_46929_errors.len() > 0LL)) {
			((*(_self_))._field_errors).append(_46929_errors);;
			return nullptr;;
		};
		(*(_45117_g))._field_Constraint=jule::new_ptr<_1c62a5e9d_Constraint>(_1c62a5e9d_Constraint{._field_Mask=jule::Slice<jule::Ptr<_1c6299249_TypeDecl>>::alloc(0LL, _46922_parts.len())});
		{
			auto expr = &(_46922_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad6ce5dc:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_1c6283a3b_Token>> _47525_part = *it;
				{
					jule::I64 _47625_i = 0LL;;
					jule::Ptr<_1c6299249_TypeDecl> _47726_kind;;
					({
						__jule_tuple_x_1c6299249_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9ebed8c_buildType(_self_, &(_47525_part), (&(_47625_i)), true);
						_47726_kind = __jule_assign_result.__jule_result_arg0;
					});
					{ jule::Slice<jule::Ptr<_1c6299249_TypeDecl>> &__jule_push_dest = (*((*(_45117_g))._field_Constraint))._field_Mask; __jule_push_dest.push(_47726_kind); };
					if ((_47625_i < _47525_part.len())) {
						_1a9ebd286_pushErr(_self_.ptr(), _47525_part[_47625_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1ad6ce5dc:;
				++it;
				goto _iter_begin_1ad6ce5dc;
			}
			_iter_end_1ad6ce5dc:;
		};
	};
	return _45117_g;;
}



inline jule::Slice<jule::Ptr<_1c62a6454_GenericDecl>> _1a9ec1850_buildGenerics(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _48738_tokens, jule::Ptr<_1c6283a3b_Token>* _48757_errorToken) {
	if (((*(_48738_tokens)).len() == 0LL)) {
		_1a9ebd286_pushErr(_self_.ptr(), (*(_48757_errorToken)), jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>> _49318_parts;;
	jule::Slice<_221968cb9_Log> _49325_errors;;
	({
		__jule_tuple_ssx_1c6283a3b_Token__jule_tuple_s_221968cb9_Log __jule_assign_result = _1a9ebb43d_parts(_48738_tokens, static_cast<jule::U64>(5LLU), true);
		_49318_parts = __jule_assign_result.__jule_result_arg0;
		_49325_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_49325_errors.len() > 0LL)) {
		((*(_self_))._field_errors).append(_49325_errors);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c62a6454_GenericDecl>> _49917_generics = jule::Slice<jule::Ptr<_1c62a6454_GenericDecl>>::alloc(0LL, _49318_parts.len());;
	{
		auto expr = &(_49318_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad6d404d:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c6283a3b_Token>> _50021_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1c62a6454_GenericDecl>> &__jule_push_dest = _49917_generics; __jule_push_dest.push(_1a9ec1454_buildGeneric(_self_, &(_50021_part))); };
			}
			_iter_next_1ad6d404d:;
			++it;
			goto _iter_begin_1ad6d404d;
		}
		_iter_end_1ad6d404d:;
	};
	return _49917_generics;;
}



inline jule::Ptr<_1c62a99a7_ParamDecl> _1a9ec1b91_buildSelfParam(_1a9ebc7d5_parser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _50737_tokens) {
	if ((_50737_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1c62a99a7_ParamDecl> _51217_param = jule::new_ptr<_1c62a99a7_ParamDecl>();;
	jule::I64 _51517_i = 0LL;;
	if (((*(_50737_tokens[_51517_i]))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*(_51217_param))._field_Mutable=true;
		(_51517_i)++;
		if ((_51517_i >= _50737_tokens.len())) {
			_1a9ebd286_pushErr(_self_, _50737_tokens[(_51517_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	_2206c697e_StrBuilder _52517_ident = static__2206c6c9d_New(5LL);;
	if (((*(_50737_tokens[_51517_i]))._field_Id == static_cast<jule::U64>(65LLU))) {
		_2206d0625_WriteStr(&_52517_ident, jule::Str("&", 1));
		(_51517_i)++;
		if ((_51517_i >= _50737_tokens.len())) {
			_1a9ebd286_pushErr(_self_, _50737_tokens[(_51517_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if (((*(_50737_tokens[_51517_i]))._field_Id == static_cast<jule::U64>(24LLU))) {
		_2206d0625_WriteStr(&_52517_ident, jule::Str("self", 4));
		(*(_51217_param))._field_Token=_50737_tokens[_51517_i];
		(_51517_i)++;
		if ((_51517_i < _50737_tokens.len())) {
			_1a9ebd286_pushErr(_self_, _50737_tokens[_51517_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	};
	(*(_51217_param))._field_Ident=_2206d0e1c_Str(&_52517_ident);
	return _51217_param;;
}



inline void _1a9ec20ae_paramTypeBegin(_1a9ebc7d5_parser* _self_, jule::Ptr<_1c62a99a7_ParamDecl>* _54938_param, jule::I64* _54962_i, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _54971_tokens) {
	for (; ((*(_54962_i)) < (*(_54971_tokens)).len()); ((*(_54962_i)))++) {
		{
			jule::Ptr<_1c6283a3b_Token> _55117_token = (*(_54971_tokens))[(*(_54962_i))];;
			if (((*(_55117_token))._field_Id != static_cast<jule::U64>(39LLU))) {
				return;;
			};
			if ((*((*(_54938_param))))._field_Variadic) {
				_1a9ebd286_pushErr(_self_, _55117_token, jule::Str("define is already variadic", 26), jule::Slice<jule::Any>());
				goto _iter_next_1ad6dc2ba;
			};
			(*((*(_54938_param))))._field_Variadic=true;
		}
	_iter_next_1ad6dc2ba:;
	}
	_iter_end_1ad6dc2ba:;;
}



inline void _1a9ec2422_buildParamType(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Ptr<_1c62a99a7_ParamDecl>* _56439_param, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _56463_tokens) {
	jule::I64 _56517_i = 0LL;;
	_1a9ec20ae_paramTypeBegin(_self_.ptr(), _56439_param, &(_56517_i), _56463_tokens);
	if ((_56517_i >= (*(_56463_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1c6299249_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9ebed8c_buildType(_self_, _56463_tokens, (&(_56517_i)), true);
		(*((*(_56439_param))))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_56517_i < (*(_56463_tokens)).len())) {
		_1a9ebd286_pushErr(_self_.ptr(), (*(_56463_tokens))[_56517_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1a9ec2785_buildParamBody(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Ptr<_1c62a99a7_ParamDecl>* _57739_param, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _57762_tokens) {
	jule::Ptr<_1c6283a3b_Token> _57817_tok = _57762_tokens[0LL];;
	if ((_57762_tokens.len() == 1LL)) {
		(*((*(_57739_param))))._field_Ident=(*(_57817_tok))._field_Kind;
		return;;
	} else if ((_57762_tokens.len() < 3LL)) {
		_1a9ebd286_pushErr(_self_.ptr(), _57817_tok, jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_57762_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
		(*((*(_57739_param))))._field_Ident=jule::Str("<anonymous>", 11);
		_1a9ec2422_buildParamType(_self_, _57739_param, &(_57762_tokens));
		return;;
	};
	(*((*(_57739_param))))._field_Ident=(*(_57817_tok))._field_Kind;
	(_57762_tokens).mut_slice(2LL);;
	_1a9ec2422_buildParamType(_self_, _57739_param, &(_57762_tokens));
}



inline jule::Ptr<_1c62a99a7_ParamDecl> _1a9ec2ac6_buildParam(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _59734_tokens) {
	jule::Ptr<_1c62a99a7_ParamDecl> _59817_param = jule::new_ptr<_1c62a99a7_ParamDecl>(_1c62a99a7_ParamDecl{._field_Token=_59734_tokens[0LL], });;
	if (((*((*(_59817_param))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*(_59817_param))._field_Mutable=true;
		if ((_59734_tokens.len() == 1LL)) {
			_1a9ebd286_pushErr(_self_.ptr(), _59734_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_59734_tokens).mut_slice(1LL);;
		(*(_59817_param))._field_Token=_59734_tokens[0LL];
	};
	if ((_59734_tokens.len() >= 3LL)) {
		if (((*((*(_59817_param))._field_Token))._field_Id == static_cast<jule::U64>(65LLU))) {
			if ((_59734_tokens.len() == 1LL)) {
				_1a9ebd286_pushErr(_self_.ptr(), _59734_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if ((((*(_59734_tokens[1LL]))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_59734_tokens[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
				(*(_59817_param))._field_Reference=true;
				(_59734_tokens).mut_slice(1LL);;
				(*(_59817_param))._field_Token=_59734_tokens[0LL];
			};
		};
	};
	if (((*((*(_59817_param))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		(*(_59817_param))._field_Ident=jule::Str("<anonymous>", 11);
		_1a9ec2422_buildParamType(_self_, &(_59817_param), &(_59734_tokens));
	} else {
		_1a9ec2785_buildParamBody(_self_, &(_59817_param), _59734_tokens);
	};
	return _59817_param;;
}



inline void _1a9ec2d7e_checkParams(_1a9ebc7d5_parser* _self_, jule::Slice<jule::Ptr<_1c62a99a7_ParamDecl>>* _64035_params) {
	{
		auto expr = _64035_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad6ec132:;
		if (it != expr_end) {
			jule::Ptr<_1c62a99a7_ParamDecl> _64121_param = *it;
			{
				if ((_1c62a9d2b_IsSelf(_64121_param.ptr()) || ((*(_64121_param))._field_Kind != nullptr))) {
					goto _iter_next_1ad6ec132;
				};
				if (((*(_64121_param))._field_Token == nullptr)) {
					_1a9ebd286_pushErr(_self_, (*(_64121_param))._field_Token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
				} else {
					(*(_64121_param))._field_Kind=jule::new_ptr<_1c6299249_TypeDecl>(_1c6299249_TypeDecl{._field_Token=(*(_64121_param))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1c6299854_IdentTypeDecl>(_1c6299854_IdentTypeDecl{._field_Token=(*(_64121_param))._field_Token, ._field_Ident=(*((*(_64121_param))._field_Token))._field_Kind, }), &__jule_any_type20)});
					(*(_64121_param))._field_Ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_1ad6ec132:;
			++it;
			goto _iter_begin_1ad6ec132;
		}
		_iter_end_1ad6ec132:;
	};
}



inline jule::Slice<jule::Ptr<_1c62a99a7_ParamDecl>> _1a9ec327a_buildParams(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _66036_tokens, jule::Bool _66054_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>> _66118_parts;;
	jule::Slice<_221968cb9_Log> _66125_errs;;
	({
		__jule_tuple_ssx_1c6283a3b_Token__jule_tuple_s_221968cb9_Log __jule_assign_result = _1a9ebb43d_parts(_66036_tokens, static_cast<jule::U64>(5LLU), true);
		_66118_parts = __jule_assign_result.__jule_result_arg0;
		_66125_errs = __jule_assign_result.__jule_result_arg1;
	});
	((*(_self_))._field_errors).append(_66125_errs);;
	if ((_66118_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c62a99a7_ParamDecl>> _66717_params = nullptr;;
	if ((_66054_method && (_66118_parts.len() > 0LL))) {
		jule::Ptr<_1c62a99a7_ParamDecl> _66921_param = _1a9ec1b91_buildSelfParam(_self_.ptr(), _66118_parts[0LL]);;
		if (((_66921_param != nullptr) && _1c62a9d2b_IsSelf(_66921_param.ptr()))) {
			{ jule::Slice<jule::Ptr<_1c62a99a7_ParamDecl>> &__jule_push_dest = _66717_params; __jule_push_dest.push(_66921_param); };
			(_66118_parts).mut_slice(1LL);;
		};
	};
	{
		auto expr = &(_66118_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad7022be:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c6283a3b_Token>> _67621_part = *it;
			{
				jule::Ptr<_1c62a99a7_ParamDecl> _67721_param = _1a9ec2ac6_buildParam(_self_, _67621_part);;
				if ((_67721_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_1c62a99a7_ParamDecl>> &__jule_push_dest = _66717_params; __jule_push_dest.push(_67721_param); };
				};
			}
			_iter_next_1ad7022be:;
			++it;
			goto _iter_begin_1ad7022be;
		}
		_iter_end_1ad7022be:;
	};
	_1a9ec2d7e_checkParams(_self_.ptr(), &(_66717_params));
	return _66717_params;;
}



inline __jule_tuple_x_1c629c13c_RetTypeDecl__jule_tuple_bool _1a9ec3676_buildMultiRetType(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _68742_tokens, jule::I64* _68765_i) {
	__jule_tuple_x_1c629c13c_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1c629c13c_RetTypeDecl>();
	((*(_68765_i)))++;
	if (((*(_68765_i)) >= (*(_68742_tokens)).len())) {
		((*(_68765_i)))--;
		({
			__jule_tuple_x_1c6299249_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9ebed8c_buildType(_self_, _68742_tokens, _68765_i, false);
			(*(__jule_func_result.__jule_result_arg0))._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_68765_i)))--;
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _69717_rangeTokens = _1a9ebabbd_range(_68765_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _68742_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>> _69918_parts;;
	jule::Slice<_221968cb9_Log> _69925_errs;;
	({
		__jule_tuple_ssx_1c6283a3b_Token__jule_tuple_s_221968cb9_Log __jule_assign_result = _1a9ebb43d_parts(&(_69717_rangeTokens), static_cast<jule::U64>(5LLU), true);
		_69918_parts = __jule_assign_result.__jule_result_arg0;
		_69925_errs = __jule_assign_result.__jule_result_arg1;
	});
	((*(_self_))._field_errors).append(_69925_errs);;
	if ((_69918_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1c6299249_TypeDecl>> _70517_types = jule::Slice<jule::Ptr<_1c6299249_TypeDecl>>::alloc(0LL, _69918_parts.len());;
	(*(__jule_func_result.__jule_result_arg0))._field_Idents=jule::Slice<jule::Ptr<_1c6283a3b_Token>>::alloc(0LL, _69918_parts.len());
	{
		auto expr = &(_69918_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad709172:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c6283a3b_Token>> _70721_part = *it;
			{
				jule::Ptr<_1c6283a3b_Token> _70821_token = _70721_part[0LL];;
				jule::I64 _70921_offset = 0LL;;
				if ((_70721_part.len() > 1LL)) {
					_70821_token=_70721_part[1LL];
					if (((*(_70821_token))._field_Id == static_cast<jule::U64>(8LLU))) {
						_70921_offset=2LL;
						if ((_70721_part.len() < 3LL)) {
							_1a9ebd286_pushErr(_self_.ptr(), _70821_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
							goto _iter_next_1ad709172;
						};
					};
				};
				_70821_token=_70721_part[0LL];
				if ((_70921_offset != 2LL)) {
					jule::Ptr<_1c6283a3b_Token> _72525_newToken = jule::new_ptr<_1c6283a3b_Token>((*(_70821_token)));;
					(*(_72525_newToken))._field_Kind=jule::Str("<anonymous>", 11);
					{ jule::Slice<jule::Ptr<_1c6283a3b_Token>> &__jule_push_dest = (*(__jule_func_result.__jule_result_arg0))._field_Idents; __jule_push_dest.push(_72525_newToken); };
				} else {
					{ jule::Slice<jule::Ptr<_1c6283a3b_Token>> &__jule_push_dest = (*(__jule_func_result.__jule_result_arg0))._field_Idents; __jule_push_dest.push(_70821_token); };
				};
				jule::Ptr<_1c6299249_TypeDecl> _73222_tk;;
				({
					__jule_tuple_x_1c6299249_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9ebed8c_buildType(_self_, &(_70721_part), (&(_70921_offset)), true);
					_73222_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_70921_offset < _70721_part.len())) {
					_1a9ebd286_pushErr(_self_.ptr(), _70721_part[_70921_offset], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1c6299249_TypeDecl>> &__jule_push_dest = _70517_types; __jule_push_dest.push(_73222_tk); };
			}
			_iter_next_1ad709172:;
			++it;
			goto _iter_begin_1ad709172;
		}
		_iter_end_1ad709172:;
	};
	if ((_70517_types.len() > 1LL)) {
		(*(__jule_func_result.__jule_result_arg0))._field_Kind=jule::new_ptr<_1c6299249_TypeDecl>(_1c6299249_TypeDecl{._field_Token=(*(_68742_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1c629a976_TupleTypeDecl>(_1c629a976_TupleTypeDecl{._field_Types=_70517_types}), &__jule_any_type74)});
	} else {
		(*(__jule_func_result.__jule_result_arg0))._field_Kind=_70517_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1c629c13c_RetTypeDecl__jule_tuple_bool _1a9ec3a72_buildRetType(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _75537_tokens, jule::I64* _75560_i) {
	__jule_tuple_x_1c629c13c_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1c629c13c_RetTypeDecl>();
	if (((*(_75560_i)) >= (*(_75537_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_1c6283a3b_Token> _76117_token = (*(_75537_tokens))[(*(_75560_i))];;
	{
		auto &_match_expr{ (*(_76117_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1ad7129e9:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(71LLU)) {
			_case_begin_1ad712a71:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1ad712ae8:;
			{
				if ((((*(_75560_i)) + 1LL) >= (*(_75537_tokens)).len())) {
					_1a9ebd286_pushErr(_self_.ptr(), _76117_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_75560_i)))++;
				_76117_token=(*(_75537_tokens))[(*(_75560_i))];
				{
					auto &_match_expr{ (*(_76117_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ad714886:;
						{
							({
								__jule_tuple_x_1c629c13c_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1a9ec3676_buildMultiRetType(_self_, _75537_tokens, _75560_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1ad71490d:;
						{
							_1a9ebd286_pushErr(_self_.ptr(), _76117_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_1ad714820:;
				};
				({
					__jule_tuple_x_1c6299249_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9ebed8c_buildType(_self_, _75537_tokens, _75560_i, true);
					(*(__jule_func_result.__jule_result_arg0))._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1ad712972:;
	};
	((*(_75560_i)))++;
	_1a9ebd286_pushErr(_self_.ptr(), _76117_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1c62aae09_FnDecl> _1a9ec4028_buildFnPrototype(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _79441_tokens, jule::I64* _79464_i, jule::Bool _79472_method) {
	jule::Ptr<_1c62aae09_FnDecl> _79517_f = jule::new_ptr<_1c62aae09_FnDecl>(_1c62aae09_FnDecl{._field_Token=(*(_79441_tokens))[(*(_79464_i))], });;
	if (((*((*(_79517_f))._field_Token))._field_Id == static_cast<jule::U64>(34LLU))) {
		(*(_79517_f))._field_Statically=true;
		((*(_79464_i)))++;
		if (((*(_79464_i)) >= (*(_79441_tokens)).len())) {
			_1a9ebd286_pushErr(_self_.ptr(), (*(_79517_f))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*(_79517_f))._field_Token=(*(_79441_tokens))[(*(_79464_i))];
	};
	if (((*((*(_79517_f))._field_Token))._field_Id == static_cast<jule::U64>(31LLU))) {
		(*(_79517_f))._field_Unsafety=true;
		((*(_79464_i)))++;
		if (((*(_79464_i)) >= (*(_79441_tokens)).len())) {
			_1a9ebd286_pushErr(_self_.ptr(), (*(_79517_f))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*(_79517_f))._field_Token=(*(_79441_tokens))[(*(_79464_i))];
	};
	((*(_79464_i)))++;
	if (((*(_79464_i)) >= (*(_79441_tokens)).len())) {
		_1a9ebd286_pushErr(_self_.ptr(), (*(_79517_f))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c6283a3b_Token> _82813_tok = (*(_79441_tokens))[(*(_79464_i))];;
	if (((*(_82813_tok))._field_Id == static_cast<jule::U64>(1LLU))) {
		((*(_79464_i)))++;
		if (((*(_79464_i)) >= (*(_79441_tokens)).len())) {
			_1a9ebd286_pushErr(_self_.ptr(), (*(_79517_f))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*(_79517_f))._field_Ident=(*(_82813_tok))._field_Kind;
	} else {
		(*(_79517_f))._field_Ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_1c6283a3b_Token> _84013_errorToken = (*(_79441_tokens))[(*(_79464_i))];;
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _84117_genericsTokens = _1a9ebabbd_range(_79464_i, static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _79441_tokens);;
	if ((_84117_genericsTokens != nullptr)) {
		(*(_79517_f))._field_Generics=_1a9ec1850_buildGenerics(_self_, &(_84117_genericsTokens), &(_84013_errorToken));
	};
	if (((*((*(_79441_tokens))[(*(_79464_i))]))._field_Id != static_cast<jule::U64>(74LLU))) {
		_1a9ebd286_pushErr(_self_.ptr(), (*(_79441_tokens))[(*(_79464_i))], jule::Str("missing function parentheses", 28), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _85117_paramsToks = _1a9ebabbd_range(_79464_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _79441_tokens);;
	if ((_85117_paramsToks.len() > 0LL)) {
		(*(_79517_f))._field_Params=_1a9ec327a_buildParams(_self_, &(_85117_paramsToks), _79472_method);
	};
	if (((*(_79464_i)) < (*(_79441_tokens)).len())) {
		jule::Ptr<_1c6283a3b_Token> _85717_token = (*(_79441_tokens))[(*(_79464_i))];;
		if (((*(_85717_token))._field_Id == static_cast<jule::U64>(68LLU))) {
			(*(_79517_f))._field_Exceptional=true;
			((*(_79464_i)))++;
		};
	};
	(*(_79517_f))._field_Public=_1c6364ab7_IsPub(&((*(_79517_f))._field_Ident));
	({
		__jule_tuple_x_1c629c13c_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1a9ec3a72_buildRetType(_self_, _79441_tokens, _79464_i);
		(*(_79517_f))._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _79517_f;;
}



inline jule::Ptr<_1c62aae09_FnDecl> _1a9ec44ce_buildFn(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _87132_tokens, jule::Bool _87150_method, jule::Bool _87164_prototype) {
	jule::I64 _87217_i = 0LL;;
	jule::Ptr<_1c62aae09_FnDecl> _87317_f = _1a9ec4028_buildFnPrototype(_self_, _87132_tokens, &(_87217_i), _87150_method);;
	if (_87164_prototype) {
		if ((_87217_i < (*(_87132_tokens)).len())) {
			_1a9ebd286_pushErr(_self_.ptr(), (*(_87132_tokens))[(_87217_i + 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		return _87317_f;;
	} else if ((_87317_f == nullptr)) {
		return _87317_f;;
	};
	if ((_87217_i >= (*(_87132_tokens)).len())) {
		_1a9ebcad2_stop(_self_.ptr());
		_1a9ebd286_pushErr(_self_.ptr(), (*(_87317_f))._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a9ebd5e9_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _88917_blockTokens = _1a9ebabbd_range(&(_87217_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _87132_tokens);;
	if ((_88917_blockTokens != nullptr)) {
		(*(_87317_f))._field_Scope=_1a9ebe430_buildScope(_self_, &(_88917_blockTokens), (*(_87132_tokens))[(_87217_i - 1LL)]);
		(*((*(_87317_f))._field_Scope))._field_Unsafety=(*(_87317_f))._field_Unsafety;
		if ((_87217_i < (*(_87132_tokens)).len())) {
			_1a9ebd286_pushErr(_self_.ptr(), (*(_87132_tokens))[_87217_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	} else {
		_1a9ebcad2_stop(_self_.ptr());
		_1a9ebd286_pushErr(_self_.ptr(), (*(_87317_f))._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a9ebd5e9_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _87317_f;;
}



inline jule::Slice<jule::Ptr<_1c6283a3b_Token>> _1a9ec4820_getUseDeclSelectors(_1a9ebc7d5_parser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _90542_tokens) {
	jule::I64 _90617_i = 0LL;;
	_90542_tokens=_1a9ebabbd_range(&(_90617_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_90542_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>> _90818_parts;;
	jule::Slice<_221968cb9_Log> _90825_errs;;
	({
		__jule_tuple_ssx_1c6283a3b_Token__jule_tuple_s_221968cb9_Log __jule_assign_result = _1a9ebb43d_parts(&(_90542_tokens), static_cast<jule::U64>(5LLU), true);
		_90818_parts = __jule_assign_result.__jule_result_arg0;
		_90825_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_90825_errs.len() > 0LL)) {
		((*(_self_))._field_errors).append(_90825_errs);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _91417_selectors = jule::Slice<jule::Ptr<_1c6283a3b_Token>>::alloc(0LL, _90818_parts.len());;
	{
		auto expr = &(_90818_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad732ec0:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c6283a3b_Token>> _91521_part = *it;
			{
				if ((_91521_part.len() > 1LL)) {
					_1a9ebd286_pushErr(_self_, _91521_part[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1c6283a3b_Token> _91921_tok = _91521_part[0LL];;
				if ((((*(_91921_tok))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(_91921_tok))._field_Id != static_cast<jule::U64>(24LLU)))) {
					_1a9ebd286_pushErr(_self_, _91921_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					_1a9ebd5e9_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					goto _iter_next_1ad732ec0;
				};
				{ jule::Slice<jule::Ptr<_1c6283a3b_Token>> &__jule_push_dest = _91417_selectors; __jule_push_dest.push(_91921_tok); };
			}
			_iter_next_1ad732ec0:;
			++it;
			goto _iter_begin_1ad732ec0;
		}
		_iter_end_1ad732ec0:;
	};
	return _91417_selectors;;
}



inline void _1a9ec4b83_buildBindUseDecl(_1a9ebc7d5_parser* _self_, jule::Ptr<_1c62b20b9_UseDecl>* _93040_decl, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _93057_tokens) {
	if (((*(_93057_tokens)).len() > 1LL)) {
		_1a9ebd286_pushErr(_self_, (*(_93057_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c6283a3b_Token> _93413_token = (*(_93057_tokens))[0LL];;
	if ((((*(_93413_token))._field_Id != static_cast<jule::U64>(4LLU)) || (((*(_93413_token))._field_Kind[0LL] != '`') && ((*(_93413_token))._field_Kind[0LL] != '\"')))) {
		_1a9ebd286_pushErr(_self_, _93413_token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_93040_decl))))._field_Binded=true;
	(*((*(_93040_decl))))._field_LinkPath=(*(_93413_token))._field_Kind.slice(1LL, ((*(_93413_token))._field_Kind.len() - 1LL));
}



inline void _1a9ec4ee6_buildStdUseDecl(_1a9ebc7d5_parser* _self_, jule::Ptr<_1c62b20b9_UseDecl>* _94339_decl, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _94359_tokens) {
	(*((*(_94339_decl))))._field_Std=true;
	jule::Ptr<_1c6283a3b_Token> _94617_token = _94359_tokens[0LL];;
	if ((_94359_tokens.len() < 3LL)) {
		_1a9ebd286_pushErr(_self_, _94617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(_94359_tokens).mut_slice(2LL);;
	_94617_token=_94359_tokens[(_94359_tokens.len() - 1LL)];
	{
		auto &_match_expr{ (*(_94617_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1ad73b517:;
			{
				_1a9ebd286_pushErr(_self_, _94617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1ad73b58e:;
			{
				jule::Slice<jule::Ptr<_1c6283a3b_Token>> _95921_selectors = nullptr;;
				({
					__jule_tuple_sx_1c6283a3b_Token__jule_tuple_sx_1c6283a3b_Token __jule_assign_result = _1a9ebae87_rangeLast(&(_94359_tokens));
					_94359_tokens = __jule_assign_result.__jule_result_arg0;
					_95921_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_94339_decl))))._field_Selected=_1a9ec4820_getUseDeclSelectors(_self_, _95921_selectors);
				if ((_94359_tokens.len() == 0LL)) {
					_1a9ebd286_pushErr(_self_, _94617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_94617_token=_94359_tokens[(_94359_tokens.len() - 1LL)];
				if (((*(_94617_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1a9ebd286_pushErr(_self_, _94617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_94359_tokens).mut_slice(0LL, (_94359_tokens.len() - 1LL));;
				if ((_94359_tokens.len() == 0LL)) {
					_1a9ebd286_pushErr(_self_, _94617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ad73b616:;
			{
				(_94359_tokens).mut_slice(0LL, (_94359_tokens.len() - 1LL));;
				if ((_94359_tokens.len() == 0LL)) {
					_1a9ebd286_pushErr(_self_, _94617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_94617_token=_94359_tokens[(_94359_tokens.len() - 1LL)];
				if (((*(_94617_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1a9ebd286_pushErr(_self_, _94617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_94359_tokens).mut_slice(0LL, (_94359_tokens.len() - 1LL));;
				if ((_94359_tokens.len() == 0LL)) {
					_1a9ebd286_pushErr(_self_, _94617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_94339_decl))))._field_Full=true;
			}
		}
		_match_end_1ad73b490:;
	};
	(*((*(_94339_decl))))._field_LinkPath=(jule::Str("std::", 5) + _1a9ebc373_tokstoa(&(_94359_tokens)));
}



inline void _1a9ec5359_buildIdentUseDecl(_1a9ebc7d5_parser* _self_, jule::Ptr<_1c62b20b9_UseDecl>* _99741_decl, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _99761_tokens) {
	(*((*(_99741_decl))))._field_Std=false;
	jule::Ptr<_1c6283a3b_Token> _100017_token = _99761_tokens[(_99761_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ (*(_100017_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1ad744520:;
			{
				_1a9ebd286_pushErr(_self_, _100017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1ad744cb2:;
			{
				jule::Slice<jule::Ptr<_1c6283a3b_Token>> _100621_selectors = nullptr;;
				({
					__jule_tuple_sx_1c6283a3b_Token__jule_tuple_sx_1c6283a3b_Token __jule_assign_result = _1a9ebae87_rangeLast(&(_99761_tokens));
					_99761_tokens = __jule_assign_result.__jule_result_arg0;
					_100621_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_99741_decl))))._field_Selected=_1a9ec4820_getUseDeclSelectors(_self_, _100621_selectors);
				if ((_99761_tokens.len() == 0LL)) {
					_1a9ebd286_pushErr(_self_, _100017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100017_token=_99761_tokens[(_99761_tokens.len() - 1LL)];
				if (((*(_100017_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1a9ebd286_pushErr(_self_, _100017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_99761_tokens).mut_slice(0LL, (_99761_tokens.len() - 1LL));;
				if ((_99761_tokens.len() == 0LL)) {
					_1a9ebd286_pushErr(_self_, _100017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ad744d28:;
			{
				(_99761_tokens).mut_slice(0LL, (_99761_tokens.len() - 1LL));;
				if ((_99761_tokens.len() == 0LL)) {
					_1a9ebd286_pushErr(_self_, _100017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100017_token=_99761_tokens[(_99761_tokens.len() - 1LL)];
				if (((*(_100017_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1a9ebd286_pushErr(_self_, _100017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_99761_tokens).mut_slice(0LL, (_99761_tokens.len() - 1LL));;
				if ((_99761_tokens.len() == 0LL)) {
					_1a9ebd286_pushErr(_self_, _100017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_99741_decl))))._field_Full=true;
			}
		}
		_match_end_1ad744ba2:;
	};
	(*((*(_99741_decl))))._field_LinkPath=_1a9ebc373_tokstoa(&(_99761_tokens));
}



inline void _1a9ec56bc_parseUseDecl(_1a9ebc7d5_parser* _self_, jule::Ptr<_1c62b20b9_UseDecl>* _104536_decl, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _104556_tokens) {
	if ((*((*(_104536_decl))))._field_Binded) {
		_1a9ec4b83_buildBindUseDecl(_self_, _104536_decl, &(_104556_tokens));
		return;;
	};
	jule::Ptr<_1c6283a3b_Token> _105117_token = _104556_tokens[0LL];;
	if (((*(_105117_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a9ebd286_pushErr(_self_, _105117_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a9ebd5e9_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	if (((_104556_tokens.len() > 2LL) && ((*(_104556_tokens[1LL]))._field_Id == static_cast<jule::U64>(9LLU)))) {
		(*((*(_104536_decl))))._field_Alias=(*(_105117_token))._field_Kind;
		if (((*(_104556_tokens[2LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1a9ebd286_pushErr(_self_, _105117_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			_1a9ebd5e9_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			return;;
		};
		(_104556_tokens).mut_slice(2LL);;
		_105117_token=_104556_tokens[0LL];
	};
	;
	{
		
		if ((*(_105117_token))._field_Kind.equal("std", 3)) {
			_case_begin_1ad751bd1:;
			{
				_1a9ec4ee6_buildStdUseDecl(_self_, _104536_decl, _104556_tokens);
			}
		}
		else {
			_case_begin_1ad75174c:;
			{
				_1a9ec5359_buildIdentUseDecl(_self_, _104536_decl, _104556_tokens);
			}
		}
		_match_end_1ad7516d6:;
	};
}



inline jule::Ptr<_1c62b20b9_UseDecl> _1a9ec5ab8_buildUseDecl(_1a9ebc7d5_parser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _107935_tokens, jule::Bool _107953_binded) {
	jule::Ptr<_1c62b20b9_UseDecl> _108017_decl = jule::new_ptr<_1c62b20b9_UseDecl>(_1c62b20b9_UseDecl{._field_Token=_107935_tokens[0LL], ._field_Binded=_107953_binded, });;
	if ((_107935_tokens.len() < 2LL)) {
		_1a9ebd286_pushErr(_self_, (*(_108017_decl))._field_Token, jule::Str("missing path of use statement", 29), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_107935_tokens).mut_slice(1LL);;
	_1a9ec56bc_parseUseDecl(_self_, &(_108017_decl), _107935_tokens);
	return _108017_decl;;
}



inline jule::Ptr<_1c6299249_TypeDecl> _1a9ec5eb4_buildTypeEnumItemKind(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::I64* _109346_i, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _109359_tokens) {
	jule::I64 _109417_braceN = 0LL;;
	jule::I64 _109513_exprStart = (*(_109346_i));;
	for (; ((*(_109346_i)) < (*(_109359_tokens)).len()); ((*(_109346_i)))++) {
		{
			jule::Ptr<_1c6283a3b_Token> _109717_t = (*(_109359_tokens))[(*(_109346_i))];;
			{
				auto &_match_expr{ (*(_109717_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1ad756004:;
					{
						(_109417_braceN)++;
						goto _iter_next_1ad7552cd;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1ad75607b:;
					{
						(_109417_braceN)--;
					}
				}
				_match_end_1ad755e8d:;
			};
			if ((_109417_braceN > 0LL)) {
				goto _iter_next_1ad7552cd;
			};
			if ((((*(_109717_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_109346_i)) + 1LL) >= (*(_109359_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1c6283a3b_Token>> _111325_kindTokens = nullptr;;
				if (((*(_109717_t))._field_Id == static_cast<jule::U64>(5LLU))) {
					_111325_kindTokens=(*(_109359_tokens)).slice(_109513_exprStart, (*(_109346_i)));
				} else {
					_111325_kindTokens=(*(_109359_tokens)).slice(_109513_exprStart);
				};
				jule::I64 _111925_j = 0LL;;
				jule::Ptr<_1c6299249_TypeDecl> _112026_kind;;
				({
					__jule_tuple_x_1c6299249_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9ebed8c_buildType(_self_, &(_111325_kindTokens), (&(_111925_j)), true);
					_112026_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_111925_j < _111325_kindTokens.len())) {
					_1a9ebd286_pushErr(_self_.ptr(), _111325_kindTokens[_111925_j], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				return _112026_kind;;
			};
		}
	_iter_next_1ad7552cd:;
	}
	_iter_end_1ad7552cd:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1c62b395b_TypeEnumItemDecl>> _1a9ec6305_buildTypeEnumItems(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _113043_tokens) {
	jule::Slice<jule::Ptr<_1c62b395b_TypeEnumItemDecl>> _113117_items = jule::Slice<jule::Ptr<_1c62b395b_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _113217_i = 0LL;;
	for (; (_113217_i < (*(_113043_tokens)).len()); (_113217_i)++) {
		{
			jule::Ptr<_1c6283a3b_Token> _113421_t = (*(_113043_tokens))[_113217_i];;
			jule::Ptr<_1c62b395b_TypeEnumItemDecl> _113521_item = jule::new_ptr<_1c62b395b_TypeEnumItemDecl>();;
			(*(_113521_item))._field_Token=_113421_t;
			if ((((*((*(_113521_item))._field_Token))._field_Id == static_cast<jule::U64>(1LLU)) && (((*(_113043_tokens)).len() - _113217_i) > 2LL))) {
				_113421_t=(*(_113043_tokens))[(_113217_i + 1LL)];
				if (((*(_113421_t))._field_Id == static_cast<jule::U64>(8LLU))) {
					(*(_113521_item))._field_Ident=(*((*(_113521_item))._field_Token))._field_Kind;
					_113217_i+=2LL;
					if (((_113217_i >= (*(_113043_tokens)).len()) || ((*((*(_113043_tokens))[_113217_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
						_1a9ebd286_pushErr(_self_.ptr(), _113421_t, jule::Str("type missing", 12), jule::Slice<jule::Any>());
						goto _iter_next_1ad75b2c3;
					};
				};
			};
			(*(_113521_item))._field_Kind=_1a9ec5eb4_buildTypeEnumItemKind(_self_, &(_113217_i), _113043_tokens);
			{ jule::Slice<jule::Ptr<_1c62b395b_TypeEnumItemDecl>> &__jule_push_dest = _113117_items; __jule_push_dest.push(_113521_item); };
		}
	_iter_next_1ad75b2c3:;
	}
	_iter_end_1ad75b2c3:;;
	return _113117_items;;
}



inline jule::Ptr<_1c62b40bb_TypeEnumDecl> _1a9ec6646_buildTypeEnumDecl(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _115442_tokens) {
	jule::I64 _115517_i = 1LL;;
	jule::Ptr<_1c62b40bb_TypeEnumDecl> _115617_e = jule::new_ptr<_1c62b40bb_TypeEnumDecl>(_1c62b40bb_TypeEnumDecl{._field_Token=(*(_115442_tokens))[_115517_i], });;
	if (((*((*(_115617_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a9ebd286_pushErr(_self_.ptr(), (*(_115617_e))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a9ebd5e9_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_115617_e))._field_Ident=(*((*(_115617_e))._field_Token))._field_Kind;
	_115517_i+=3LL;
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _116617_itemTokens = _1a9ebabbd_range(&(_115517_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _115442_tokens);;
	if ((_116617_itemTokens == nullptr)) {
		_1a9ebcad2_stop(_self_.ptr());
		_1a9ebd286_pushErr(_self_.ptr(), (*(_115617_e))._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a9ebd5e9_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _115617_e;;
	} else if ((_115517_i < (*(_115442_tokens)).len())) {
		_1a9ebd286_pushErr(_self_.ptr(), (*(_115442_tokens))[_115517_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_115617_e))._field_Public=_1c6364ab7_IsPub(&((*(_115617_e))._field_Ident));
	(*(_115617_e))._field_End=(*(_115442_tokens))[(_115517_i - 1LL)];
	(*(_115617_e))._field_Items=_1a9ec6305_buildTypeEnumItems(_self_, &(_116617_itemTokens));
	return _115617_e;;
}



inline jule::Ptr<_1c629d57d_Expr> _1a9ec6a42_buildEnumItemExpr(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::I64* _118142_i, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _118155_tokens) {
	jule::I64 _118217_braceN = 0LL;;
	jule::I64 _118313_exprStart = (*(_118142_i));;
	for (; ((*(_118142_i)) < (*(_118155_tokens)).len()); ((*(_118142_i)))++) {
		{
			jule::Ptr<_1c6283a3b_Token> _118517_t = (*(_118155_tokens))[(*(_118142_i))];;
			{
				auto &_match_expr{ (*(_118517_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1ad768995:;
					{
						(_118217_braceN)++;
						goto _iter_next_1ad767c6e;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1ad768a1c:;
					{
						(_118217_braceN)--;
					}
				}
				_match_end_1ad76892e:;
			};
			if ((_118217_braceN > 0LL)) {
				goto _iter_next_1ad767c6e;
			};
			if ((((*(_118517_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_118142_i)) + 1LL) >= (*(_118155_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1c6283a3b_Token>> _120125_exprTokens = nullptr;;
				if (((*(_118517_t))._field_Id == static_cast<jule::U64>(5LLU))) {
					_120125_exprTokens=(*(_118155_tokens)).slice(_118313_exprStart, (*(_118142_i)));
				} else {
					_120125_exprTokens=(*(_118155_tokens)).slice(_118313_exprStart);
				};
				return _1a9ebd93a_buildExpr(_self_, &(_120125_exprTokens));;
			};
		}
	_iter_next_1ad767c6e:;
	}
	_iter_end_1ad767c6e:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1c62b2570_EnumItemDecl>> _1a9ec6d83_buildEnumItems(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _121339_tokens) {
	jule::Slice<jule::Ptr<_1c62b2570_EnumItemDecl>> _121417_items = jule::Slice<jule::Ptr<_1c62b2570_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _121517_i = 0LL;;
	for (; (_121517_i < (*(_121339_tokens)).len()); (_121517_i)++) {
		{
			jule::Ptr<_1c6283a3b_Token> _121721_t = (*(_121339_tokens))[_121517_i];;
			jule::Ptr<_1c62b2570_EnumItemDecl> _121821_item = jule::new_ptr<_1c62b2570_EnumItemDecl>();;
			(*(_121821_item))._field_Token=_121721_t;
			if (((*((*(_121821_item))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
				_1a9ebd286_pushErr(_self_.ptr(), (*(_121821_item))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				_1a9ebd5e9_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			};
			(*(_121821_item))._field_Ident=(*((*(_121821_item))._field_Token))._field_Kind;
			if ((((_121517_i + 1LL) >= (*(_121339_tokens)).len()) || ((*((*(_121339_tokens))[(_121517_i + 1LL)]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				if (((_121517_i + 1LL) < (*(_121339_tokens)).len())) {
					(_121517_i)++;
				};
				{ jule::Slice<jule::Ptr<_1c62b2570_EnumItemDecl>> &__jule_push_dest = _121417_items; __jule_push_dest.push(_121821_item); };
				goto _iter_next_1ad76c9aa;
			};
			(_121517_i)++;
			_121721_t=(*(_121339_tokens))[_121517_i];
			(_121517_i)++;
			if (((*(_121721_t))._field_Id != static_cast<jule::U64>(8LLU))) {
				_1a9ebd286_pushErr(_self_.ptr(), _121721_t, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				_1a9ebd5e9_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\" for assignment", 33), jule::Slice<jule::Any>());
				goto _iter_next_1ad76c9aa;
			};
			if (((_121517_i >= (*(_121339_tokens)).len()) || ((*((*(_121339_tokens))[_121517_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				_1a9ebd286_pushErr(_self_.ptr(), _121721_t, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
				goto _iter_next_1ad76c9aa;
			};
			(*(_121821_item))._field_Expr=_1a9ec6a42_buildEnumItemExpr(_self_, &(_121517_i), _121339_tokens);
			{ jule::Slice<jule::Ptr<_1c62b2570_EnumItemDecl>> &__jule_push_dest = _121417_items; __jule_push_dest.push(_121821_item); };
		}
	_iter_next_1ad76c9aa:;
	}
	_iter_end_1ad76c9aa:;;
	return _121417_items;;
}



inline jule::Ptr<_1c62b3131_EnumDecl> _1a9ec71c4_buildEnumDecl(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _125038_tokens) {
	if (((*(_125038_tokens)).len() < 3LL)) {
		_1a9ebd286_pushErr(_self_.ptr(), (*(_125038_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c62b3131_EnumDecl> _125517_e = jule::new_ptr<_1c62b3131_EnumDecl>(_1c62b3131_EnumDecl{._field_Token=(*(_125038_tokens))[1LL], });;
	if (((*((*(_125517_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a9ebd286_pushErr(_self_.ptr(), (*(_125517_e))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a9ebd5e9_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_125517_e))._field_Ident=(*((*(_125517_e))._field_Token))._field_Kind;
	jule::I64 _126317_i = 2LL;;
	if (((*((*(_125038_tokens))[_126317_i]))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_126317_i)++;
		if ((_126317_i >= (*(_125038_tokens)).len())) {
			_1a9ebd286_pushErr(_self_.ptr(), (*(_125038_tokens))[(_126317_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return _125517_e;;
		};
		({
			__jule_tuple_x_1c6299249_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9ebed8c_buildType(_self_, _125038_tokens, (&(_126317_i)), true);
			(*(_125517_e))._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_126317_i >= (*(_125038_tokens)).len())) {
			_1a9ebcad2_stop(_self_.ptr());
			_1a9ebd286_pushErr(_self_.ptr(), (*(_125517_e))._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
			_1a9ebd5e9_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
			return _125517_e;;
		};
	} else {
		(*(_125517_e))._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _128017_itemTokens = _1a9ebabbd_range(&(_126317_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _125038_tokens);;
	if ((_128017_itemTokens == nullptr)) {
		_1a9ebcad2_stop(_self_.ptr());
		_1a9ebd286_pushErr(_self_.ptr(), (*(_125517_e))._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a9ebd5e9_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _125517_e;;
	} else if ((_126317_i < (*(_125038_tokens)).len())) {
		_1a9ebd286_pushErr(_self_.ptr(), (*(_125038_tokens))[_126317_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_125517_e))._field_Public=_1c6364ab7_IsPub(&((*(_125517_e))._field_Ident));
	(*(_125517_e))._field_End=(*(_125038_tokens))[(_126317_i - 1LL)];
	(*(_125517_e))._field_Items=_1a9ec6d83_buildEnumItems(_self_, &(_128017_itemTokens));
	return _125517_e;;
}



inline jule::Any _1a9ec7515_buildNodeEnumDecl(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _129542_tokens) {
	if ((((*(_129542_tokens)).len() > 3LL) && ((*((*(_129542_tokens))[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
		if (((*((*(_129542_tokens))[3LL]))._field_Id == static_cast<jule::U64>(7LLU))) {
			return jule::Any(_1a9ec6646_buildTypeEnumDecl(_self_, _129542_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_1a9ec71c4_buildEnumDecl(_self_, _129542_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_1c62b4385_FieldDecl> _1a9ec7856_buildField(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _130434_tokens) {
	jule::Ptr<_1c62b4385_FieldDecl> _130517_f = jule::new_ptr<_1c62b4385_FieldDecl>();;
	(*(_130517_f))._field_Mutable=((*(_130434_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU));
	if ((*(_130517_f))._field_Mutable) {
		if ((_130434_tokens.len() == 1LL)) {
			_1a9ebd286_pushErr(_self_.ptr(), _130434_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_130434_tokens).mut_slice(1LL);;
	};
	(*(_130517_f))._field_Token=_130434_tokens[0LL];
	if (((*((*(_130517_f))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a9ebd286_pushErr(_self_.ptr(), (*(_130517_f))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a9ebd5e9_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_130517_f))._field_Ident=(*((*(_130517_f))._field_Token))._field_Kind;
	if ((_130434_tokens.len() == 1LL)) {
		_1a9ebd286_pushErr(_self_.ptr(), _130434_tokens[0LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_130434_tokens.len() < 3LL) || ((*(_130434_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU)))) {
		_1a9ebd286_pushErr(_self_.ptr(), _130434_tokens[1LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_130434_tokens).mut_slice(2LL);;
	jule::I64 _133317_i = 0LL;;
	({
		__jule_tuple_x_1c6299249_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9ebed8c_buildType(_self_, &(_130434_tokens), (&(_133317_i)), true);
		(*(_130517_f))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_133317_i < _130434_tokens.len())) {
		jule::Ptr<_1c6283a3b_Token> _133617_token = _130434_tokens[_133317_i];;
		if (((*(_133617_token))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1a9ebd286_pushErr(_self_.ptr(), _130434_tokens[_133317_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_133317_i)++;
		if ((_133317_i >= _130434_tokens.len())) {
			_1a9ebd286_pushErr(_self_.ptr(), _133617_token, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_130434_tokens).mut_slice(_133317_i);;
		(*(_130517_f))._field_Default=_1a9ebd93a_buildExpr(_self_, &(_130434_tokens));
	};
	(*(_130517_f))._field_Public=_1c6364ab7_IsPub(&((*(_130517_f))._field_Ident));
	return _130517_f;;
}



inline jule::Slice<jule::Ptr<_1c62b4385_FieldDecl>> _1a9ec7b97_buildStructDeclFields(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _135345_tokens) {
	jule::Slice<jule::Ptr<_1c62b4385_FieldDecl>> _135417_fields = nullptr;;
	jule::Slice<jule::Ptr<_1c6cca2a7_stmt>> _135517_stmts = _1c6cca65e_splitStmts(&(_135345_tokens));;
	{
		auto expr = &(_135517_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad78c15b:;
		if (it != expr_end) {
			jule::Ptr<_1c6cca2a7_stmt> _135621_stmt = *it;
			{
				_135345_tokens=(*(_135621_stmt))._field_tokens;
				jule::Ptr<_1c62b4385_FieldDecl> _135821_f = _1a9ec7856_buildField(_self_, _135345_tokens);;
				{ jule::Slice<jule::Ptr<_1c62b4385_FieldDecl>> &__jule_push_dest = _135417_fields; __jule_push_dest.push(_135821_f); };
			}
			_iter_next_1ad78c15b:;
			++it;
			goto _iter_begin_1ad78c15b;
		}
		_iter_end_1ad78c15b:;
	};
	return _135417_fields;;
}



inline jule::Ptr<_1c62b4c7b_StructDecl> _1a9ec7ed8_buildStructDecl(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _136440_tokens) {
	if (((*(_136440_tokens)).len() < 3LL)) {
		_1a9ebd286_pushErr(_self_.ptr(), (*(_136440_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _137017_i = 1LL;;
	jule::Ptr<_1c62b4c7b_StructDecl> _137117_s = jule::new_ptr<_1c62b4c7b_StructDecl>(_1c62b4c7b_StructDecl{._field_Token=(*(_136440_tokens))[_137017_i], });;
	if (((*((*(_137117_s))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a9ebd286_pushErr(_self_.ptr(), (*(_137117_s))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a9ebd5e9_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_137017_i)++;
	if ((_137017_i >= (*(_136440_tokens)).len())) {
		_1a9ebd286_pushErr(_self_.ptr(), (*(_136440_tokens))[_137017_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return _137117_s;;
	};
	(*(_137117_s))._field_Ident=(*((*(_137117_s))._field_Token))._field_Kind;
	jule::Ptr<_1c6283a3b_Token> _138513_errorToken = (*(_136440_tokens))[_137017_i];;
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _138617_genericsTokens = _1a9ebabbd_range(&(_137017_i), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _136440_tokens);;
	if ((_138617_genericsTokens != nullptr)) {
		(*(_137117_s))._field_Generics=_1a9ec1850_buildGenerics(_self_, &(_138617_genericsTokens), &(_138513_errorToken));
	};
	if ((_137017_i >= (*(_136440_tokens)).len())) {
		_1a9ebd286_pushErr(_self_.ptr(), (*(_136440_tokens))[(_137017_i - 1LL)], jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a9ebd5e9_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _137117_s;;
	};
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _139617_bodyTokens = _1a9ebabbd_range(&(_137017_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _136440_tokens);;
	if ((_139617_bodyTokens == nullptr)) {
		_1a9ebcad2_stop(_self_.ptr());
		_1a9ebd286_pushErr(_self_.ptr(), (*(_137117_s))._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a9ebd5e9_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _137117_s;;
	};
	if ((_137017_i < (*(_136440_tokens)).len())) {
		_1a9ebd286_pushErr(_self_.ptr(), (*(_136440_tokens))[_137017_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_137117_s))._field_Public=_1c6364ab7_IsPub(&((*(_137117_s))._field_Ident));
	(*(_137117_s))._field_Fields=_1a9ec7b97_buildStructDeclFields(_self_, _139617_bodyTokens);
	(*(_137117_s))._field_End=(*(_136440_tokens))[(_137017_i - 1LL)];
	return _137117_s;;
}



inline void _1a9ec8291_checkMethodReceiver(_1a9ebc7d5_parser* _self_, jule::Ptr<_1c62aae09_FnDecl>* _141239_f) {
	if ((*((*(_141239_f))))._field_Statically) {
		if ((((*((*(_141239_f))))._field_Params.len() > 0LL) && _1c62a9d2b_IsSelf((*((*(_141239_f))))._field_Params[0LL].ptr()))) {
			_1a9ebd286_pushErr(_self_, (*((*(_141239_f))))._field_Token, jule::Str("static functions cannot have receiver parameter", 47), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*((*(_141239_f))))._field_Params.len() == 0LL)) {
		_1a9ebd286_pushErr(_self_, (*((*(_141239_f))))._field_Token, jule::Str("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c62a99a7_ParamDecl> _142413_param = (*((*(_141239_f))))._field_Params[0LL];;
	if ((!(_1c62a9d2b_IsSelf(_142413_param.ptr())))) {
		_1a9ebd286_pushErr(_self_, (*((*(_141239_f))))._field_Token, jule::Str("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1a9ec8604_buildTraitBody(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Ptr<_1c62b54b8_TraitDecl>* _143139_t, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _143158_tokens) {
	jule::Slice<jule::Ptr<_1c6cca2a7_stmt>> _143217_stmts = _1c6cca65e_splitStmts(&(_143158_tokens));;
	{
		auto expr = &(_143217_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad79c8b9:;
		if (it != expr_end) {
			jule::Ptr<_1c6cca2a7_stmt> _143321_stmt = *it;
			{
				_143158_tokens=(*(_143321_stmt))._field_tokens;
				if ((_143158_tokens.len() == 0LL)) {
					goto _iter_next_1ad79c8b9;
				};
				{
					auto &_match_expr{ (*(_143158_tokens[0LL]))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(29LLU)) {
						_case_begin_1ad7a115e:;
						{
							jule::Ptr<_1c62aae09_FnDecl> _144025_f = _1a9ec44ce_buildFn(_self_, &(_143158_tokens), true, true);;
							if ((_144025_f == nullptr)) {
								goto _match_end_1ad79dd2c;
							};
							_1a9ec8291_checkMethodReceiver(_self_.ptr(), &(_144025_f));
							if (((*(_144025_f))._field_Generics.len() > 0LL)) {
								_1a9ebd286_pushErr(_self_.ptr(), (*(_144025_f))._field_Token, jule::Str("trait methods cannot have generics", 34), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1c62aae09_FnDecl>> &__jule_push_dest = (*((*(_143139_t))))._field_Methods; __jule_push_dest.push(_144025_f); };
						}
					}
					else {
						_case_begin_1ad79d601:;
						{
							jule::I64 _145025_i = 0LL;;
							jule::Ptr<_1c6299249_TypeDecl> _145126_ti;;
							jule::Bool _145130_ok = false;;
							({
								__jule_tuple_x_1c6299249_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9ebed8c_buildType(_self_, &(_143158_tokens), (&(_145025_i)), true);
								_145126_ti = __jule_assign_result.__jule_result_arg0;
								_145130_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_145130_ok))) {
								goto _match_end_1ad79dd2c;
							};
							if ((_145025_i < _143158_tokens.len())) {
								_1a9ebd286_pushErr(_self_.ptr(), _143158_tokens[_145025_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1c6299249_TypeDecl>> &__jule_push_dest = (*((*(_143139_t))))._field_Inherits; __jule_push_dest.push(_145126_ti); };
						}
					}
					_match_end_1ad79dd2c:;
				};
			}
			_iter_next_1ad79c8b9:;
			++it;
			goto _iter_begin_1ad79c8b9;
		}
		_iter_end_1ad79c8b9:;
	};
}



inline jule::Ptr<_1c62b54b8_TraitDecl> _1a9ec8945_buildTraitDecl(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _146339_tokens) {
	if (((*(_146339_tokens)).len() < 3LL)) {
		_1a9ebd286_pushErr(_self_.ptr(), (*(_146339_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c62b54b8_TraitDecl> _146817_t = jule::new_ptr<_1c62b54b8_TraitDecl>(_1c62b54b8_TraitDecl{._field_Token=(*(_146339_tokens))[1LL], });;
	if (((*((*(_146817_t))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a9ebd286_pushErr(_self_.ptr(), (*(_146817_t))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a9ebd5e9_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_146817_t))._field_Ident=(*((*(_146817_t))._field_Token))._field_Kind;
	jule::I64 _147617_i = 2LL;;
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _147717_bodyTokens = _1a9ebabbd_range(&(_147617_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _146339_tokens);;
	if ((_147717_bodyTokens == nullptr)) {
		_1a9ebcad2_stop(_self_.ptr());
		_1a9ebd286_pushErr(_self_.ptr(), (*(_146817_t))._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a9ebd5e9_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_147617_i < (*(_146339_tokens)).len())) {
		_1a9ebd286_pushErr(_self_.ptr(), (*(_146339_tokens))[_147617_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_146817_t))._field_Public=_1c6364ab7_IsPub(&((*(_146817_t))._field_Ident));
	_1a9ec8604_buildTraitBody(_self_, &(_146817_t), _147717_bodyTokens);
	(*(_146817_t))._field_End=(*(_146339_tokens))[(_147617_i - 1LL)];
	return _146817_t;;
}



inline jule::Ptr<_1c62aae09_FnDecl> _1a9ec8c86_buildBindFn(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _149335_tokens) {
	(_149335_tokens).mut_slice(1LL);;
	jule::Ptr<_1c62aae09_FnDecl> _149517_f = _1a9ec44ce_buildFn(_self_, &(_149335_tokens), false, true);;
	if ((_149517_f != nullptr)) {
		(*(_149517_f))._field_Public=false;
		(*(_149517_f))._field_Binded=true;
	};
	return _149517_f;;
}



inline jule::Ptr<_1c62abed7_VarDecl> _1a9ec90c7_buildBindVar(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _150336_tokens) {
	(_150336_tokens).mut_slice(1LL);;
	jule::Ptr<_1c62abed7_VarDecl> _150517_v = _1a9ec1113_buildVar(_self_, _150336_tokens);;
	if ((_150517_v != nullptr)) {
		(*(_150517_v))._field_Public=false;
		(*(_150517_v))._field_Binded=true;
		if (((*(_150517_v))._field_Expr != nullptr)) {
			_1a9ebd286_pushErr(_self_.ptr(), (*(_150517_v))._field_Token, jule::Str("binded variables cannot have expression", 39), jule::Slice<jule::Any>());
		};
	};
	return _150517_v;;
}



inline jule::Ptr<_1c62b4c7b_StructDecl> _1a9ec9418_buildBindStruct(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _151639_tokens) {
	(_151639_tokens).mut_slice(1LL);;
	jule::Ptr<_1c62b4c7b_StructDecl> _151817_s = _1a9ec7ed8_buildStructDecl(_self_, &(_151639_tokens));;
	if ((_151817_s != nullptr)) {
		(*(_151817_s))._field_Public=false;
		{
			auto expr = &((*(_151817_s))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad7b038d:;
			if (it != expr_end) {
				jule::Ptr<_1c62b4385_FieldDecl> _152125_f = *it;
				{
					(*(_152125_f))._field_Public=true;
				}
				_iter_next_1ad7b038d:;
				++it;
				goto _iter_begin_1ad7b038d;
			}
			_iter_end_1ad7b038d:;
		};
		(*(_151817_s))._field_Binded=true;
	};
	return _151817_s;;
}



inline jule::Ptr<_1c62b0aac_TypeAliasDecl> _1a9ec9759_buildBindTypeAlias(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _153042_tokens) {
	(_153042_tokens).mut_slice(1LL);;
	jule::Ptr<_1c62b0aac_TypeAliasDecl> _153217_t = _1a9ec01cd_buildTypeAliasDecl(_self_, &(_153042_tokens));;
	if ((_153217_t != nullptr)) {
		(*(_153217_t))._field_Public=false;
		(*(_153217_t))._field_Binded=true;
	};
	return _153217_t;;
}



inline jule::Ptr<_1c62b20b9_UseDecl> _1a9ec9a9a_buildBindUse(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _154036_tokens) {
	if ((_154036_tokens.len() == 1LL)) {
		_1a9ebd286_pushErr(_self_.ptr(), _154036_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_154036_tokens).mut_slice(1LL);;
	;
	return _1a9ec5ab8_buildUseDecl(_self_.ptr(), _154036_tokens, true);;
}



inline jule::Any _1a9ec9ddb_buildBind(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _155134_tokens) {
	jule::Ptr<_1c6283a3b_Token> _155217_token = (*(_155134_tokens))[0LL];;
	if (((*(_155134_tokens)).len() == 1LL)) {
		_1a9ebd286_pushErr(_self_.ptr(), _155217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_155217_token=(*(_155134_tokens))[1LL];
	{
		auto &_match_expr{ (*(_155217_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1ad7b6361:;
			{
				return jule::Any(_1a9ec8c86_buildBindFn(_self_, (*(_155134_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1ad7b6064:;
			{
				return jule::Any(_1a9ec90c7_buildBindVar(_self_, (*(_155134_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1ad7b60ca:;
			{
				return jule::Any(_1a9ec9418_buildBindStruct(_self_, (*(_155134_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1ad7b6141:;
			{
				return jule::Any(_1a9ec9759_buildBindTypeAlias(_self_, (*(_155134_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_1ad7b5eed:;
			{
				_1a9ebd286_pushErr(_self_.ptr(), _155217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ad7b5e98:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c62aae09_FnDecl> _1a9eca22c_getMethod(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _157534_tokens) {
	jule::I64 _157617_i = 0LL;;
	jule::Ptr<_1c6283a3b_Token> _157717_token = (*(_157534_tokens))[_157617_i];;
	if (((*(_157717_token))._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_157617_i + 1LL) >= (*(_157534_tokens)).len())) {
			_1a9ebd286_pushErr(_self_.ptr(), _157717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_157617_i)++;
		_157717_token=(*(_157534_tokens))[_157617_i];
	};
	if (((*(_157717_token))._field_Id == static_cast<jule::U64>(31LLU))) {
		if (((_157617_i + 1LL) >= (*(_157534_tokens)).len())) {
			_1a9ebd286_pushErr(_self_.ptr(), _157717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_157617_i)++;
		_157717_token=(*(_157534_tokens))[_157617_i];
	};
	if (((*(_157717_token))._field_Id != static_cast<jule::U64>(29LLU))) {
		_1a9ebd286_pushErr(_self_.ptr(), _157717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1a9ec44ce_buildFn(_self_, _157534_tokens, true, false);;
}



inline void _1a9eca590_parseImplBody(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Ptr<_1c62b5b28_Impl>* _160438_ipl, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _160455_tokens) {
	jule::Slice<jule::Ptr<_1c6cca2a7_stmt>> _160517_stmts = _1c6cca65e_splitStmts(_160455_tokens);;
	{
		auto expr = &(_160517_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad7bd775:;
		if (it != expr_end) {
			jule::Ptr<_1c6cca2a7_stmt> _160621_stmt = *it;
			{
				(*(_160455_tokens))=(*(_160621_stmt))._field_tokens;
				jule::Ptr<_1c6283a3b_Token> _160821_token = (*(_160455_tokens))[0LL];;
				{
					auto &_match_expr{ (*(_160821_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1ad7be6cc:;
						{
							_1a9ebe034_pushDirective(_self_.ptr(), _1a9ebdc7b_buildDirective(_self_.ptr(), (*(_160455_tokens))));
							goto _iter_next_1ad7bd775;
						}
					}
					_match_end_1ad7beb83:;
				};
				{
					auto &_match_expr{ (*(_160821_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(6LLU)) {
						_case_begin_1ad7c02b0:;
						{
							jule::Ptr<_1c62abed7_VarDecl> _161725_v = _1a9ec1113_buildVar(_self_, (*(_160455_tokens)));;
							if ((_161725_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_1c62abed7_VarDecl>> &__jule_push_dest = (*((*(_160438_ipl))))._field_Statics; __jule_push_dest.push(_161725_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1ad7becb5:;
						{
							jule::Ptr<_1c62aae09_FnDecl> _162425_f = _1a9eca22c_getMethod(_self_, _160455_tokens);;
							if ((_162425_f != nullptr)) {
								_1a9ec8291_checkMethodReceiver(_self_.ptr(), &(_162425_f));
								_1a9ecaeca_applyFnMeta(_self_.ptr(), &(_162425_f));
								{ jule::Slice<jule::Ptr<_1c62aae09_FnDecl>> &__jule_push_dest = (*((*(_160438_ipl))))._field_Methods; __jule_push_dest.push(_162425_f); };
							};
						}
					}
					else {
						_case_begin_1ad7c0205:;
						{
							_1a9ebd286_pushErr(_self_.ptr(), _160821_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							goto _iter_next_1ad7bd775;
						}
					}
					_match_end_1ad7c01a0:;
				};
			}
			_iter_next_1ad7bd775:;
			++it;
			goto _iter_begin_1ad7bd775;
		}
		_iter_end_1ad7bd775:;
	};
}



inline jule::Ptr<_1c62b5b28_Impl> _1a9eca8d1_buildImpl(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _163733_tokens) {
	jule::Ptr<_1c6283a3b_Token> _163817_token = _163733_tokens[0LL];;
	if ((_163733_tokens.len() < 2LL)) {
		_1a9ebd286_pushErr(_self_.ptr(), _163817_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _164417_i = 1LL;;
	jule::Ptr<_1c6299249_TypeDecl> _164618_base;;
	jule::Bool _164628_ok = false;;
	({
		__jule_tuple_x_1c6299249_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9ebed8c_buildType(_self_, &(_163733_tokens), (&(_164417_i)), true);
		_164618_base = __jule_assign_result.__jule_result_arg0;
		_164628_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_164628_ok))) {
		return nullptr;;
	};
	if ((_164417_i >= _163733_tokens.len())) {
		_1a9ebd286_pushErr(_self_.ptr(), _163817_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c62b5b28_Impl> _165517_ipl = jule::new_ptr<_1c62b5b28_Impl>(_1c62b5b28_Impl{._field_Base=_164618_base, });;
	_163817_token=_163733_tokens[_164417_i];
	if (((*(_163817_token))._field_Id != static_cast<jule::U64>(9LLU))) {
		if (((*(_163817_token))._field_Id == static_cast<jule::U64>(72LLU))) {
			std::swap((*(_165517_ipl))._field_Base, (*(_165517_ipl))._field_Dest);
			goto _julec_label_1ad7cd103;
		};
		_1a9ebcad2_stop(_self_.ptr());
		_1a9ebd286_pushErr(_self_.ptr(), _163817_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a9ebd5e9_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_164417_i)++;
	if ((_164417_i >= _163733_tokens.len())) {
		_1a9ebcad2_stop(_self_.ptr());
		_1a9ebd286_pushErr(_self_.ptr(), _163817_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a9ebd5e9_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1c6299249_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9ebed8c_buildType(_self_, &(_163733_tokens), (&(_164417_i)), true);
		(*(_165517_ipl))._field_Dest = __jule_assign_result.__jule_result_arg0;
		_164628_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_164628_ok))) {
		return nullptr;;
	};
	if ((_164417_i >= _163733_tokens.len())) {
		_1a9ebcad2_stop(_self_.ptr());
		_1a9ebd286_pushErr(_self_.ptr(), _163817_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a9ebd5e9_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1ad7cd103:;
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _169317_bodyTokens = _1a9ebabbd_range(&(_164417_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_163733_tokens));;
	if ((_169317_bodyTokens == nullptr)) {
		_1a9ebcad2_stop(_self_.ptr());
		_1a9ebd286_pushErr(_self_.ptr(), _163817_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a9ebd5e9_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_164417_i < _163733_tokens.len())) {
		_1a9ebd286_pushErr(_self_.ptr(), _163733_tokens[_164417_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_165517_ipl))._field_End=_163733_tokens[(_164417_i - 1LL)];
	_1a9eca590_parseImplBody(_self_, &(_165517_ipl), &(_169317_bodyTokens));
	return _165517_ipl;;
}



inline jule::Any _1a9ecac22_buildNodeData(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _170838_tokens) {
	jule::Ptr<_1c6283a3b_Token> _170917_token = (*(_170838_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_170917_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1ad7d2415:;
			{
				jule::Ptr<_1c62aae09_FnDecl> _171321_f = _1a9ec44ce_buildFn(_self_, _170838_tokens, false, false);;
				if ((_171321_f != nullptr)) {
					(*(_171321_f))._field_Global=true;
				};
				return jule::Any(_171321_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1ad7d1c1c:;
			{
				return jule::Any(_1a9ec1113_buildVar(_self_, (*(_170838_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1ad7d2a53:;
			{
				return jule::Any(_1a9ec01cd_buildTypeAliasDecl(_self_, _170838_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1ad7d20d5:;
			{
				return _1a9ec7515_buildNodeEnumDecl(_self_, _170838_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1ad7d214b:;
			{
				return jule::Any(_1a9ec7ed8_buildStructDecl(_self_, _170838_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1ad7d21b2:;
			{
				return jule::Any(_1a9ec8945_buildTraitDecl(_self_, _170838_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1ad7d2228:;
			{
				return jule::Any(_1a9eca8d1_buildImpl(_self_, (*(_170838_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1ad7d2b52:;
			{
				return _1a9ec9ddb_buildBind(_self_, _170838_tokens);;
			}
		}
		else {
			_case_begin_1ad7d206e:;
			{
				_1a9ebd286_pushErr(_self_.ptr(), _170917_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad7d2019:;
	};
}



inline void _1a9ecaeca_applyFnMeta(_1a9ebc7d5_parser* _self_, jule::Ptr<_1c62aae09_FnDecl>* _174135_f) {
	(*((*(_174135_f))))._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1a9ecb283_applyMeta(_1a9ebc7d5_parser* _self_, _1c6298248_Node* _174633_node) {
	{
		auto &_match_expr{ (*(_174633_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1ad7d840a:;
			{
				jule::Ptr<_1c62abed7_VarDecl> _174921_v = (*(_174633_node))._field_Data.cast_ptr<_1c62abed7_VarDecl>(&__jule_any_type16);;
				if ((_174921_v == nullptr)) {
					return;;
				};
				(*(_174921_v))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ad7d8471:;
			{
				jule::Ptr<_1c62aae09_FnDecl> _175621_f = (*(_174633_node))._field_Data.cast_ptr<_1c62aae09_FnDecl>(&__jule_any_type14);;
				if ((_175621_f == nullptr)) {
					return;;
				};
				_1a9ecaeca_applyFnMeta(_self_, &(_175621_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1ad7d84e8:;
			{
				jule::Ptr<_1c62b4c7b_StructDecl> _176221_sd = (*(_174633_node))._field_Data.cast_ptr<_1c62b4c7b_StructDecl>(&__jule_any_type13);;
				if ((_176221_sd == nullptr)) {
					return;;
				};
				(*(_176221_sd))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1ad7d83a5:;
	};
}



inline void _1a9ecb53b_pushUseDecl(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Ptr<_1c62b20b9_UseDecl>* _177136_decl) {
	{ jule::Slice<jule::Ptr<_1c62b20b9_UseDecl>> &__jule_push_dest = (*((*(_self_))._field_ast))._field_UseDecls; __jule_push_dest.push((*(_177136_decl))); };
	if (((*((*(_self_))._field_ast))._field_Nodes.len() > 0LL)) {
		_1a9ebd286_pushErr(_self_.ptr(), (*((*(_177136_decl))))._field_Token, jule::Str("use declarations must declared top of source code", 49), jule::Slice<jule::Any>());
		_1a9ebd5e9_pushSuggestion(_self_.ptr(), jule::Str("move this use declaration to top of source file", 47), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1a9ecb87c_pushMetaNodes(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _177938_tokens) {
	{
		auto &_match_expr{ (*((*(_177938_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1ad7de6db:;
			{
				;
				jule::Ptr<_1c62b20b9_UseDecl> _178321_decl = _1a9ec5ab8_buildUseDecl(_self_.ptr(), (*(_177938_tokens)), false);;
				_1a9ecb53b_pushUseDecl(_self_, &(_178321_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1ad7de763:;
			{
				if ((((*(_177938_tokens)).len() > 1LL) && ((*((*(_177938_tokens))[1LL]))._field_Id == static_cast<jule::U64>(16LLU)))) {
					jule::Ptr<_1c62b20b9_UseDecl> _178825_decl = _1a9ec9a9a_buildBindUse(_self_, (*(_177938_tokens)));;
					_1a9ecb53b_pushUseDecl(_self_, &(_178825_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1ad7de7da:;
			{
				_1a9ebe034_pushDirective(_self_.ptr(), _1a9ebdc7b_buildDirective(_self_.ptr(), (*(_177938_tokens))));
				return true;;
			}
		}
		_match_end_1ad7de5ba:;
	};
	return false;;
}



inline _1c6298248_Node _1a9ecbbbd_parseNode(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _179934_st) {
	_1c6298248_Node _180017_node = _1c6298248_Node{._field_Token=(*(_179934_st))[0LL], };;
	if (_1a9ecb87c_pushMetaNodes(_self_, _179934_st)) {
		return _180017_node;;
	};
	jule::Any _180817_data = _1a9ecac22_buildNodeData(_self_, _179934_st);;
	if ((_180817_data == nullptr)) {
		return _180017_node;;
	};
	_180017_node._field_Data=_180817_data;
	_1a9ecb283_applyMeta(_self_.ptr(), &(_180017_node));
	if (((*(_self_))._field_directives.len() != 0LL)) {
		_1a9ebd286_pushErr(_self_.ptr(), (*((*(_self_))._field_directives[0LL]))._field_Tag, jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
	(*(_self_))._field_directives=nullptr;
	return _180017_node;;
}



inline void _1a9ecbe76_appendNode(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _182335_st) {
	if (((*(_182335_st)).len() == 0LL)) {
		return;;
	};
	_1c6298248_Node _182717_node = _1a9ecbbbd_parseNode(_self_, _182335_st);;
	if (((_182717_node._field_Data == nullptr) || _1a9ebcd68_stopped(_self_.ptr()))) {
		return;;
	};
	{ jule::Slice<_1c6298248_Node> &__jule_push_dest = (*((*(_self_))._field_ast))._field_Nodes; __jule_push_dest.push(_182717_node); };
}



inline void _1a9ecc44e_removeRange(_1a9ebc7d5_parser* _self_, jule::I64 _183430_i, jule::U64 _183438_id, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _183452_tokens, jule::Slice<jule::I64>* _183475_ranges) {
	jule::U64 _183513_close = _1a9ebb707_getCloseOfBrace(_183438_id);;
	for (; (_183430_i >= 0LL); (_183430_i)--) {
		{
			jule::Ptr<_1c6283a3b_Token> _183717_tok = (*(_183452_tokens))[(*(_183475_ranges))[_183430_i]];;
			if (((*(_183717_tok))._field_Id != _183513_close)) {
				goto _iter_next_1ad7e98c2;
			};
			(*(_183475_ranges))=jule::append((*(_183475_ranges)).slice(0LL, _183430_i),(*(_183475_ranges)).slice((_183430_i + 1LL)));
			goto _iter_end_1ad7e98c2;
		}
	_iter_next_1ad7e98c2:;
	}
	_iter_end_1ad7e98c2:;;
}



inline void _1a9ecc86c_pushWrongOrderCloseErr(_1a9ebc7d5_parser* _self_, jule::Ptr<_1c6283a3b_Token>* _184642_t, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _184654_tokens, jule::Slice<jule::I64>* _184673_ranges) {
	{
		auto &_match_expr{ (*((*(_184654_tokens))[(*(_184673_ranges))[((*(_184673_ranges)).len() - 1LL)]]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(74LLU)) {
			_case_begin_1ad7ebc04:;
			{
				_1a9ebd286_pushErr(_self_, (*(_184642_t)), jule::Str("was expected parentheses close", 30), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1ad7ebc7b:;
			{
				_1a9ebd286_pushErr(_self_, (*(_184642_t)), jule::Str("was expected brace close", 24), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1ad7ebd03:;
			{
				_1a9ebd286_pushErr(_self_, (*(_184642_t)), jule::Str("was expected bracket close", 26), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ad7ebad3:;
	};
}



inline void _1a9eccd45_pushRangeClose(_1a9ebc7d5_parser* _self_, jule::Ptr<_1c6283a3b_Token> _185733_t, jule::U64 _185744_left, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _185760_tokens, jule::Slice<jule::I64>* _185783_ranges) {
	jule::I64 _185813_n = (*(_185783_ranges)).len();;
	if ((_185813_n == 0LL)) {
		{
			auto &_match_expr{ (*(_185733_t))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(77LLU)) {
				_case_begin_1ad7ee81c:;
				{
					_1a9ebd286_pushErr(_self_, _185733_t, jule::Str("extra closed brackets", 21), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(73LLU)) {
				_case_begin_1ad7ee894:;
				{
					_1a9ebd286_pushErr(_self_, _185733_t, jule::Str("extra closed braces", 19), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(75LLU)) {
				_case_begin_1ad7ee91b:;
				{
					_1a9ebd286_pushErr(_self_, _185733_t, jule::Str("extra closed parentheses", 24), jule::Slice<jule::Any>());
				}
			}
			_match_end_1ad7ee740:;
		};
		return;;
	} else if (((*((*(_185760_tokens))[(*(_185783_ranges))[(_185813_n - 1LL)]]))._field_Id != _185744_left)) {
		_1a9ecc86c_pushWrongOrderCloseErr(_self_, &(_185733_t), _185760_tokens, _185783_ranges);
	};
	_1a9ecc44e_removeRange(_self_, static_cast<jule::I64>((_185813_n - 1LL)), (*(_185733_t))._field_Id, _185760_tokens, _185783_ranges);
}



inline void _1a9ecd0ed_checkRanges(_1a9ebc7d5_parser* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _187531_tokens) {
	jule::Slice<jule::I64> _187617_ranges = nullptr;;
	{
		auto expr = _187531_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad802963:;
		if (it != expr_end) {
			jule::I64 _187813_i = it - expr->begin();
			jule::Ptr<_1c6283a3b_Token> *_187816_token = it;
			{
				{
					auto &_match_expr{ (*((*(_187816_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1ad803777:;
						{
							{ jule::Slice<jule::I64> &__jule_push_dest = _187617_ranges; __jule_push_dest.push(_187813_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ad8037ee:;
						{
							_1a9eccd45_pushRangeClose(_self_, (*(_187816_token)), static_cast<jule::U64>(74LLU), _187531_tokens, &(_187617_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU)) {
						_case_begin_1ad803876:;
						{
							_1a9eccd45_pushRangeClose(_self_, (*(_187816_token)), static_cast<jule::U64>(72LLU), _187531_tokens, &(_187617_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1ad8038ed:;
						{
							_1a9eccd45_pushRangeClose(_self_, (*(_187816_token)), static_cast<jule::U64>(76LLU), _187531_tokens, &(_187617_ranges));
						}
					}
					_match_end_1ad803689:;
				};
			}
			_iter_next_1ad802963:;
			++it;
			_187813_i++;
			goto _iter_begin_1ad802963;
		}
		_iter_end_1ad802963:;
	};
	{
		auto expr = &(_187617_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad8028ec:;
		if (it != expr_end) {
			jule::I64 _189316_i = *it;
			{
				jule::Ptr<_1c6283a3b_Token> _189417_token = (*(_187531_tokens))[_189316_i];;
				{
					auto &_match_expr{ (*(_189417_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ad806417:;
						{
							_1a9ebd286_pushErr(_self_, _189417_token, jule::Str("parentheses waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1ad80648e:;
						{
							_1a9ebd286_pushErr(_self_, _189417_token, jule::Str("brace waiting to close", 22), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1ad806516:;
						{
							_1a9ebd286_pushErr(_self_, _189417_token, jule::Str("bracket are waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					_match_end_1ad806390:;
				};
			}
			_iter_next_1ad8028ec:;
			++it;
			goto _iter_begin_1ad8028ec;
		}
		_iter_end_1ad8028ec:;
	};
}



inline void _1a9ecd3a6_parse(jule::Ptr<_1a9ebc7d5_parser> _self_, jule::Ptr<_1c6289305_File>* _190630_f) {
	(*(_self_))._field_ast=jule::new_ptr<_1c6297379_Ast>(_1c6297379_Ast{._field_File=(*(_190630_f)), });
	(*(_self_))._field_ep=jule::new_ptr<_1a9eabbd1_exprBuilder>(_1a9eabbd1_exprBuilder{._field_p=_self_});
	_1a9ecd0ed_checkRanges(_self_.ptr(), &((*((*(_190630_f))))._field_Tokens));
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1c6cca2a7_stmt>> _191917_stmts = _1c6cca65e_splitStmts(&((*((*(_190630_f))))._field_Tokens));;
	jule::I64 _192217_i = 0LL;;
	for (; (_192217_i < _191917_stmts.len()); (_192217_i)++) {
		{
			jule::Ptr<_1c6cca2a7_stmt> _192421_stmt = _191917_stmts[_192217_i];;
			if (((*(_192421_stmt))._field_tokens.len() < 2LL)) {
				return;;
			};
			if (((*((*(_192421_stmt))._field_tokens[0LL]))._field_Id != static_cast<jule::U64>(35LLU))) {
				goto _iter_end_1ad809d22;
			};
			if ((!(_22196aa35_IsTopDirective((*((*(_192421_stmt))._field_tokens[1LL]))._field_Kind)))) {
				goto _iter_end_1ad809d22;
			};
			{ jule::Slice<jule::Ptr<_1c6298666_Directive>> &__jule_push_dest = (*((*(_self_))._field_ast))._field_TopDirectives; __jule_push_dest.push(_1a9ebdc7b_buildDirective(_self_.ptr(), (*(_192421_stmt))._field_tokens)); };
		}
	_iter_next_1ad809d22:;
	}
	_iter_end_1ad809d22:;;
	(*(_self_))._field_errors=nullptr;
	for (; (_192217_i < _191917_stmts.len()); (_192217_i)++) {
		{
			jule::Ptr<_1c6cca2a7_stmt> _194121_stmt = _191917_stmts[_192217_i];;
			_1a9ecbe76_appendNode(_self_, &((*(_194121_stmt))._field_tokens));
			if (_1a9ebcd68_stopped(_self_.ptr())) {
				goto _iter_end_1ad80c792;
			};
		}
	_iter_next_1ad80c792:;
	}
	_iter_end_1ad80c792:;;
	if (((*(_self_))._field_directives.len() != 0LL)) {
		_1a9ebd286_pushErr(_self_.ptr(), (*((*(_self_))._field_directives[0LL]))._field_Tag, jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a9ebc7d5_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ep:" << _Src._field_ep;
	_Stream << "}";
	return _Stream;
}



inline void _1a9ecebe3_pushErr(_1a9ece64e_typeBuilder* _self_, jule::Ptr<_1c6283a3b_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*(_self_))._field_err) {
		_1a9ebd286_pushErr((*(_self_))._field_p.ptr(), _4126_token, _4141_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1a9ed0056_pushSuggestion(_1a9ece64e_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*(_self_))._field_err) {
		_1a9ebd5e9_pushSuggestion((*(_self_))._field_p.ptr(), _4833_fmt, _4846_args);
	};
}



inline jule::Ptr<_1c6299249_TypeDecl> _1a9ed02dc_buildNamespace(_1a9ece64e_typeBuilder* _self_) {
	jule::Ptr<_1c6299249_TypeDecl> _5517_t = jule::new_ptr<_1c6299249_TypeDecl>(_1c6299249_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], });;
	jule::Ptr<_1c6299ee7_NamespaceTypeDecl> _5917_nst = jule::new_ptr<_1c6299ee7_NamespaceTypeDecl>();;
	jule::I64 _6017_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1c6283a3b_Token> _6221_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_6017_n & 1LL) == 0LL)) {
				if (((*(_6221_token))._field_Id != static_cast<jule::U64>(1LLU))) {
					_1a9ecebe3_pushErr(_self_, _6221_token, jule::Str("invalid syntax", 14));
					_1a9ed0056_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1c6283a3b_Token>> &__jule_push_dest = (*(_5917_nst))._field_Idents; __jule_push_dest.push(_6221_token); };
			} else if (((*(_6221_token))._field_Id != static_cast<jule::U64>(19LLU))) {
				goto _iter_end_1ad813ba5;
			};
			(_6017_n)++;
		}
	_iter_next_1ad813ba5:;
	}
	_iter_end_1ad813ba5:;;
	(*(_5917_nst))._field_Idents=(*(_5917_nst))._field_Idents.slice(0LL, ((*(_5917_nst))._field_Idents.len() - 1LL));
	((*((*(_self_))._field_i)))--;
	(*(_5917_nst))._field_Kind=_1a9ed0a90_buildIdent(_self_);
	(*(_5517_t))._field_Kind=jule::Any(_5917_nst, &__jule_any_type90);
	return _5517_t;;
}



inline jule::Slice<jule::Ptr<_1c6299249_TypeDecl>> _1a9ed0573_buildGenerics(_1a9ece64e_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1c6283a3b_Token> _8813_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((*(_8813_token))._field_Id != static_cast<jule::U64>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>> _9317_parts = _1a9ed0809_identGenerics(_self_);;
	if ((_9317_parts.len() == 0LL)) {
		_1a9ecebe3_pushErr(_self_, _8813_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c6299249_TypeDecl>> _9917_types = jule::Slice<jule::Ptr<_1c6299249_TypeDecl>>::alloc(0LL, _9317_parts.len());;
	{
		auto expr = &(_9317_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad81a74a:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c6283a3b_Token>> _10021_part = *it;
			{
				jule::I64 _10121_j = 0LL;;
				jule::Ptr<_1c6299249_TypeDecl> _10222_t;;
				({
					__jule_tuple_x_1c6299249_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9ebed8c_buildType((*(_self_))._field_p, &(_10021_part), (&(_10121_j)), true);
					_10222_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_10121_j < _10021_part.len())) {
					_1a9ecebe3_pushErr(_self_, _10021_part[_10121_j], jule::Str("invalid syntax", 14));
				};
				{ jule::Slice<jule::Ptr<_1c6299249_TypeDecl>> &__jule_push_dest = _9917_types; __jule_push_dest.push(_10222_t); };
			}
			_iter_next_1ad81a74a:;
			++it;
			goto _iter_begin_1ad81a74a;
		}
		_iter_end_1ad81a74a:;
	};
	return _9917_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>> _1a9ed0809_identGenerics(_1a9ece64e_typeBuilder* _self_) {
	jule::I64 _11213_first = (*((*(_self_))._field_i));;
	jule::I64 _11317_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1c6283a3b_Token> _11517_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ (*(_11517_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(76LLU)) {
					_case_begin_1ad81ec9e:;
					{
						(_11317_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_1ad81ed26:;
					{
						(_11317_rangeN)--;
					}
				}
				_match_end_1ad81ec38:;
			};
			if ((_11317_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1ad81dcae;
			};
		}
	_iter_next_1ad81dcae:;
	}
	_iter_end_1ad81dcae:;;
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _12717_tokens = (*(_self_))._field_tokens.slice((_11213_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>> _12818_parts;;
	jule::Slice<_221968cb9_Log> _12825_errors;;
	({
		__jule_tuple_ssx_1c6283a3b_Token__jule_tuple_s_221968cb9_Log __jule_assign_result = _1a9ebb43d_parts(&(_12717_tokens), static_cast<jule::U64>(5LLU), true);
		_12818_parts = __jule_assign_result.__jule_result_arg0;
		_12825_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		((*((*(_self_))._field_p))._field_errors).append(_12825_errors);;
	};
	return _12818_parts;;
}



inline jule::Ptr<_1c6299249_TypeDecl> _1a9ed0a90_buildIdent(_1a9ece64e_typeBuilder* _self_) {
	jule::Bool _13617_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_13617_next && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return _1a9ed02dc_buildNamespace(_self_);;
	};
	jule::Ptr<_1c6283a3b_Token> _14017_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1c6299854_IdentTypeDecl> _14117_it = jule::new_ptr<_1c6299854_IdentTypeDecl>(_1c6299854_IdentTypeDecl{._field_Token=_14017_token, ._field_Ident=(*(_14017_token))._field_Kind, ._field_Binded=false, });;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1c6299249_TypeDecl> _14717_itd = jule::new_ptr<_1c6299249_TypeDecl>(_1c6299249_TypeDecl{._field_Token=_14017_token, ._field_Kind=jule::Any(_14117_it, &__jule_any_type20)});;
	if (((!(_13617_next)) || ((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		(*(_14117_it))._field_Generics=_1a9ed0573_buildGenerics(_self_);
		return _14717_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1a9ecebe3_pushErr(_self_, _14017_token, jule::Str("invalid syntax", 14));
		return _14717_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a9ecebe3_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("invalid syntax", 14));
		return _14717_itd;;
	};
	jule::Ptr<_1c6299b51_SubIdentTypeDecl> _16417_sit = jule::new_ptr<_1c6299b51_SubIdentTypeDecl>();;
	{ jule::Slice<jule::Ptr<_1c6299854_IdentTypeDecl>> &__jule_push_dest = (*(_16417_sit))._field_Idents; __jule_push_dest.push(_14117_it); };
	jule::Ptr<_1c6299249_TypeDecl> _16617_ident = _1a9ed0a90_buildIdent(_self_);;
	{
		auto &_match_expr{ (*(_16617_ident))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1ad82a4e6:;
			{
				{ jule::Slice<jule::Ptr<_1c6299854_IdentTypeDecl>> &__jule_push_dest = (*(_16417_sit))._field_Idents; __jule_push_dest.push((*(_16617_ident))._field_Kind.cast_ptr<_1c6299854_IdentTypeDecl>(&__jule_any_type20)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1ad82a56d:;
			{
				((*(_16417_sit))._field_Idents).append((*((*(_16617_ident))._field_Kind.cast_ptr<_1c6299b51_SubIdentTypeDecl>(&__jule_any_type86)))._field_Idents);;
			}
		}
		_match_end_1ad82a480:;
	};
	return jule::new_ptr<_1c6299249_TypeDecl>(_1c6299249_TypeDecl{._field_Token=_14017_token, ._field_Kind=jule::Any(_16417_sit, &__jule_any_type86)});;
}



inline jule::Ptr<_1c6299249_TypeDecl> _1a9ed0d26_buildCppLink(_1a9ece64e_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		_1a9ecebe3_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1c6299249_TypeDecl> _18517_t = _1a9ed0a90_buildIdent(_self_);;
	(*((*(_18517_t))._field_Kind.cast_ptr<_1c6299854_IdentTypeDecl>(&__jule_any_type20)))._field_Binded=true;
	return _18517_t;;
}



inline jule::Ptr<_1c6299249_TypeDecl> _1a9ed10ac_buildFn(_1a9ece64e_typeBuilder* _self_) {
	jule::Ptr<_1c6283a3b_Token> _19117_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1c62aae09_FnDecl> _19217_f = _1a9ec4028_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_19217_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c62ab26c_IsAnon(_19217_f.ptr())))) {
		_1a9ecebe3_pushErr(_self_, (*(_19217_f))._field_Token, jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_1c6299249_TypeDecl>(_1c6299249_TypeDecl{._field_Token=_19117_token, ._field_Kind=jule::Any(_19217_f, &__jule_any_type14)});;
}



inline jule::Ptr<_1c6299249_TypeDecl> _1a9ed1343_buildPtr(_1a9ece64e_typeBuilder* _self_) {
	jule::Ptr<_1c6283a3b_Token> _20617_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1a9ecebe3_pushErr(_self_, _20617_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id == static_cast<jule::U64>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1c6299249_TypeDecl>(_1c6299249_TypeDecl{._field_Token=_20617_token, ._field_Kind=jule::Any(jule::new_ptr<_1c629ac73_PtrTypeDecl>(_1c629ac73_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type71)});;
	};
	jule::Ptr<_1c6299249_TypeDecl> _22317_elem = _1a9ed2399_step(_self_);;
	if ((_22317_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c6299249_TypeDecl>(_1c6299249_TypeDecl{._field_Token=_20617_token, ._field_Kind=jule::Any(jule::new_ptr<_1c629ac73_PtrTypeDecl>(_1c629ac73_PtrTypeDecl{._field_Elem=_22317_elem}), &__jule_any_type71)});;
}



inline jule::Ptr<_1c6299249_TypeDecl> _1a9ed15c9_buildSptr(_1a9ece64e_typeBuilder* _self_) {
	jule::Ptr<_1c6283a3b_Token> _23717_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1a9ecebe3_pushErr(_self_, _23717_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1c6299249_TypeDecl> _24417_elem = _1a9ed2399_step(_self_);;
	if ((_24417_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c6299249_TypeDecl>(_1c6299249_TypeDecl{._field_Token=_23717_token, ._field_Kind=jule::Any(jule::new_ptr<_1c629a2e4_SptrTypeDecl>(_1c629a2e4_SptrTypeDecl{._field_Elem=_24417_elem}), &__jule_any_type72)});;
}



inline jule::Ptr<_1c6299249_TypeDecl> _1a9ed1860_buildSlc(_1a9ece64e_typeBuilder* _self_) {
	jule::Ptr<_1c6283a3b_Token> _25817_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1c6299249_TypeDecl> _26017_elem = _1a9ed2399_step(_self_);;
	if ((_26017_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c6299249_TypeDecl>(_1c6299249_TypeDecl{._field_Token=_25817_token, ._field_Kind=jule::Any(jule::new_ptr<_1c629a679_SlcTypeDecl>(_1c629a679_SlcTypeDecl{._field_Elem=_26017_elem}), &__jule_any_type70)});;
}



inline jule::Ptr<_1c6299249_TypeDecl> _1a9ed1ae6_buildArr(_1a9ece64e_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _27317_exprTokens = _1a9ebabbd_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a9ecebe3_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1c6299249_TypeDecl> _27917_elem = _1a9ed2399_step(_self_);;
	if ((_27917_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c629b515_ArrTypeDecl> _28417_arrt = jule::new_ptr<_1c629b515_ArrTypeDecl>(_1c629b515_ArrTypeDecl{._field_Elem=_27917_elem, });;
	jule::Ptr<_1c6283a3b_Token> _28817_token = _27317_exprTokens[0LL];;
	if (((_27317_exprTokens.len() == 1LL) && ((*(_28817_token))._field_Id == static_cast<jule::U64>(39LLU)))) {
	} else {
		(*(_28417_arrt))._field_Size=_1a9ebd93a_buildExpr((*(_self_))._field_p, &(_27317_exprTokens));
	};
	return jule::new_ptr<_1c6299249_TypeDecl>(_1c6299249_TypeDecl{._field_Token=_28817_token, ._field_Kind=jule::Any(_28417_arrt, &__jule_any_type69)});;
}



inline jule::Ptr<_1c6299249_TypeDecl> _1a9ed1d7c_buildMap(_1a9ece64e_typeBuilder* _self_) {
	jule::Ptr<_1c6283a3b_Token> _30217_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a9ecebe3_pushErr(_self_, _30217_mapToken, jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _31017_keyTokens = _1a9ebabbd_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a9ecebe3_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("type missing", 12));
		return nullptr;;
	} else if ((_31017_keyTokens.len() == 0LL)) {
		_1a9ecebe3_pushErr(_self_, _30217_mapToken, jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1c629bc63_MapTypeDecl> _31917_mapt = jule::new_ptr<_1c629bc63_MapTypeDecl>();;
	jule::I64 _32017_j = 0LL;;
	jule::Ptr<_1c6299249_TypeDecl> _32118_keyt;;
	jule::Bool _32128_ok = false;;
	({
		__jule_tuple_x_1c6299249_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9ebed8c_buildType((*(_self_))._field_p, &(_31017_keyTokens), (&(_32017_j)), (*(_self_))._field_err);
		_32118_keyt = __jule_assign_result.__jule_result_arg0;
		_32128_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32128_ok))) {
		return nullptr;;
	} else if ((_32017_j < _31017_keyTokens.len())) {
		_1a9ecebe3_pushErr(_self_, _31017_keyTokens[_32017_j], jule::Str("invalid syntax", 14));
	};
	(*(_31917_mapt))._field_Key=_32118_keyt;
	jule::Ptr<_1c6299249_TypeDecl> _32918_valt;;
	({
		__jule_tuple_x_1c6299249_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9ebed8c_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_32918_valt = __jule_assign_result.__jule_result_arg0;
		_32128_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32128_ok))) {
		return nullptr;;
	};
	(*(_31917_mapt))._field_Val=_32918_valt;
	return jule::new_ptr<_1c6299249_TypeDecl>(_1c6299249_TypeDecl{._field_Token=_30217_mapToken, ._field_Kind=jule::Any(_31917_mapt, &__jule_any_type73)});;
}



inline jule::Ptr<_1c6299249_TypeDecl> _1a9ed2113_buildEnumerable(_1a9ece64e_typeBuilder* _self_) {
	jule::Ptr<_1c6283a3b_Token> _34117_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_1a9ecebe3_pushErr(_self_, _34117_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_34117_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((*(_34117_token))._field_Id == static_cast<jule::U64>(77LLU))) {
		return _1a9ed1860_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1a9ed1ae6_buildArr(_self_);;
}



inline jule::Ptr<_1c6299249_TypeDecl> _1a9ed2399_step(_1a9ece64e_typeBuilder* _self_) {
	jule::Ptr<_1c6283a3b_Token> _35613_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ (*(_35613_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1ad84a59e:;
			{
				return _1a9ed0a90_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1ad84a615:;
			{
				return _1a9ed0d26_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1ad849a98:;
			{
				return _1a9ed10ac_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ad849b0e:;
			{
				return _1a9ed1343_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ad849b75:;
			{
				return _1a9ed15c9_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1ad849bdb:;
			{
				return jule::new_ptr<_1c6299249_TypeDecl>(_1c6299249_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1c629a2e4_SptrTypeDecl>(_1c629a2e4_SptrTypeDecl{._field_Elem=_1a9ed15c9_buildSptr(_self_)}), &__jule_any_type72)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1ad84a69d:;
			{
				return _1a9ed2113_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1ad84a714:;
			{
				return _1a9ed1d7c_buildMap(_self_);;
			}
		}
		else {
			_case_begin_1ad849a32:;
			{
				((*((*(_self_))._field_i)))++;
				_1a9ecebe3_pushErr(_self_, _35613_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1ad8499cc:;
	};
}



inline __jule_tuple_x_1c6299249_TypeDecl__jule_tuple_bool _1a9ed2630_build(_1a9ece64e_typeBuilder* _self_) {
	__jule_tuple_x_1c6299249_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1c6299249_TypeDecl> _38817_root = _1a9ed2399_step(_self_);;
	if ((_38817_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1a9ecdd9b_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _38817_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a9ece64e_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c472d636_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _1c473013d_pushErr(_1c472eadd_directiveEval* _self_, jule::Ptr<_1c6283a3b_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	{ jule::Slice<_221968cb9_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_221968cb9_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_2126_t))._field_Row, ._field_Column=(*(_2126_t))._field_Column, ._field_Path=(*((*(_2126_t))._field_File))._field_Path, ._field_Text=_22196922b_Logf(_2137_fmt, _2150_args), }); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>> _1c4730539_splitOperans(_1c472eadd_directiveEval* _self_, jule::U64 _3331_op, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _3349_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>>::alloc(0LL, 10LL);;
	jule::I64 _3517_i = 0LL;;
	jule::I64 _3617_rangeN = 0LL;;
	jule::I64 _3717_last = 0LL;;
	for (; (_3517_i < ((*(_3349_tokens)).len() - 1LL)); (_3517_i)++) {
		{
			jule::Ptr<_1c6283a3b_Token> _3917_b = (*(_3349_tokens))[_3517_i];;
			{
				auto &_match_expr{ (*(_3917_b))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1ad86eda9:;
					{
						(_3617_rangeN)++;
						goto _iter_next_1ad86e150;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1ad86ee31:;
					{
						(_3617_rangeN)--;
					}
				}
				_match_end_1ad86ed43:;
			};
			if (((_3617_rangeN > 0LL) || ((*(_3917_b))._field_Id != _3331_op))) {
				goto _iter_next_1ad86e150;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>> &__jule_push_dest = _3417_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3717_last, _3517_i)); };
			_3717_last=static_cast<jule::I64>((_3517_i + 1LL));
		}
	_iter_next_1ad86e150:;
	}
	_iter_end_1ad86e150:;;
	if ((_3717_last < (*(_3349_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>> &__jule_push_dest = _3417_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3717_last)); };
	} else {
		_1c473013d_pushErr(_self_, (*(_3349_tokens))[(_3717_last - 1LL)], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _3417_parts;;
}



inline jule::Bool _1c473087a_evalDirectiveIdent(_1c472eadd_directiveEval* _self_, jule::Str _6433_ident) {
	if ((_6433_ident).empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad8727d5:;
		if (it != expr_end) {
			jule::Str *_6816_var = it;
			{
				if (((*(_6816_var)) == _6433_ident)) {
					return true;;
				};
			}
			_iter_next_1ad8727d5:;
			++it;
			goto _iter_begin_1ad8727d5;
		}
		_iter_end_1ad8727d5:;
	};
	return false;;
}



inline jule::Bool _1c4730bbb_evalDirectivePart(_1c472eadd_directiveEval* _self_, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _7840_part) {
	jule::Bool _7913_logicalNot = ((*(_7840_part[0LL]))._field_Id == static_cast<jule::U64>(68LLU));;
	if (_7913_logicalNot) {
		(_7840_part).mut_slice(1LL);;
	};
	if ((_7840_part.len() > 1LL)) {
		_1c473013d_pushErr(_self_, _7840_part[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _8917_result = _1c473087a_evalDirectiveIdent(_self_, (*(_7840_part[0LL]))._field_Kind);;
	if (_7913_logicalNot) {
		_8917_result=(!(_8917_result));
	};
	return _8917_result;;
}



inline jule::Bool _1c4730e52_eval(_1c472eadd_directiveEval* _self_) {
	if (((*((*(_self_))._field_d))._field_Args.len() == 0LL)) {
		_1c473013d_pushErr(_self_, (*((*(_self_))._field_d))._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _10217_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>> _10417_logicalOrParts = _1c4730539_splitOperans(_self_, static_cast<jule::U64>(55LLU), &((*((*(_self_))._field_d))._field_Args));;
	if ((_10417_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_10417_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad878016:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c6283a3b_Token>> _10921_part = *it;
			{
				jule::Bool _11021_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>> _11121_logicalAndParts = _1c4730539_splitOperans(_self_, static_cast<jule::U64>(54LLU), &(_10921_part));;
				if ((_11121_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_11121_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad879853:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_1c6283a3b_Token>> _11625_andPart = *it;
						{
							jule::Ptr<_1c6283a3b_Token> _11721_first = _11625_andPart[0LL];;
							if (((*(_11721_first))._field_Id == static_cast<jule::U64>(74LLU))) {
								jule::Ptr<_1c6283a3b_Token> _11925_end = _11625_andPart[(_11625_andPart.len() - 1LL)];;
								if (((*(_11925_end))._field_Id != static_cast<jule::U64>(75LLU))) {
									_1c473013d_pushErr(_self_, _11721_first, jule::Str("parentheses waiting to close", 28), jule::Slice<jule::Any>());
									return false;;
								};
								(_11625_andPart).mut_slice(1LL, (_11625_andPart.len() - 1LL));;
							};
							_11021_and=(_11021_and && _1c4730bbb_evalDirectivePart(_self_, _11625_andPart));
						}
						_iter_next_1ad879853:;
						++it;
						goto _iter_begin_1ad879853;
					}
					_iter_end_1ad879853:;
				};
				_10217_result=(_10217_result || _11021_and);
			}
			_iter_next_1ad878016:;
			++it;
			goto _iter_begin_1ad878016;
		}
		_iter_end_1ad878016:;
	};
	return _10217_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c472eadd_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a9ed3785_JuleImporter> static__1a9ed3b81_New(_1c472d636_CompileInfo _5819_info) {
	jule::Ptr<_1a9ed3785_JuleImporter> _5917_imp = jule::new_ptr<_1a9ed3785_JuleImporter>(_1a9ed3785_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_221a2e764_PathStdlib}), });;
	_1c472deb6_initVars(&((*(_5917_imp))._field_vars), &(_5819_info));
	return _5917_imp;;
}



inline jule::Slice<jule::Ptr<_1c63469de_ImportInfo>> _1a9ed3e17_AllPackages(_1a9ed3785_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1a9ed4357_SetModPath(_1a9ed3785_JuleImporter* _self_, jule::Str _7529_path) {
	(*(_self_))._field_mod=_7529_path;
}



inline jule::Str _1a9ed45dd_GetModPath(_1a9ed3785_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1a9ed492e_ModById(_1a9ed3785_JuleImporter* _self_, jule::I64 _8322_id) {
	return (*(_self_))._field_mods[_8322_id];;
}



inline jule::Ptr<_1c63469de_ImportInfo> _1a9ed4c70_GetImport(_1a9ed3785_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad885d59:;
		if (it != expr_end) {
			jule::Ptr<_1c63469de_ImportInfo> _8821_p = *it;
			{
				if (((*(_8821_p))._field_Path == _8728_path)) {
					return _8821_p;;
				};
			}
			_iter_next_1ad885d59:;
			++it;
			goto _iter_begin_1ad885d59;
		}
		_iter_end_1ad885d59:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1c6297379_Ast__jule_tuple_s_221968cb9_Log _1a9ed516b_ImportPackage(_1a9ed3785_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	__jule_tuple_sx_1c6297379_Ast__jule_tuple_s_221968cb9_Log __jule_func_result;
	jule::Slice<jule::Ptr<_220506a9a_DirEntry>> _9717_dirents = ({
		auto except = static__2218ca1ae_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = jule::Slice<_221968cb9_Log>::make({_1a9ed329b_flatCompilerErr((jule::Str("connot read package directory: ", 31) + _9632_path))});
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_220506a9a_DirEntry>>(nullptr);});
	});;
	if (_9643_update_mod) {
		jule::Str _10217_newMod = _1c6363cb4_FindModuleFileDeep(_9632_path);;
		if ((_10217_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_10217_newMod;
			jule::Slice<_221968cb9_Log> _10525_errs = _1c636407d_CheckModuleFile(&((*(_self_))._field_mod));;
			if ((_10525_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _10525_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1c6297379_Ast>> _11217_asts = jule::Slice<jule::Ptr<_1c6297379_Ast>>::alloc(0LL, _9717_dirents.len());;
	{
		auto expr = &(_9717_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad88750e:;
		if (it != expr_end) {
			jule::Ptr<_220506a9a_DirEntry> _11316_dirent = *it;
			{
				if ((_220514cea_IsDir((*(_11316_dirent))._field_Stat.ptr()) || (!(_2218bd636_HasSuffix((*(_11316_dirent))._field_Name, jule::Str(".jule", 5)))))) {
					goto _iter_next_1ad88750e;
				};
				jule::Str _11917__path = _2218c8be6_Join(jule::Slice<jule::Str>::make({_9632_path,(*(_11316_dirent))._field_Name}));;
				jule::Ptr<_1c6289305_File> _12021_file = _1c628a69c_NewFileSet(_11917__path);;
				_1c62896e0_Fill(_12021_file.ptr(), _1a9ed2ec1_readBuff((*(_12021_file))._field_Path));
				jule::Slice<_221968cb9_Log> _12221_errors = _1c6296cb3_Lex(_12021_file, static_cast<jule::I64>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12221_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1c6c84904_FileInfo> _12721_finfo = _1c6cc7edb_ParseFile(_12021_file);;
				if (((*(_12721_finfo))._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = (*(_12721_finfo))._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1c472c6bd_isPassFileAnnotation((*(_11316_dirent))._field_Name)))) {
					goto _iter_next_1ad88750e;
				};
				jule::Bool _13718_r = false;;
				jule::Slice<_221968cb9_Log> _13725_logs;;
				({
					__jule_tuple_bool__jule_tuple_s_221968cb9_Log __jule_assign_result = _1a9ed5853_isPassBuildDirectives(_self_, &((*(_12721_finfo))._field_Ast));
					_13718_r = __jule_assign_result.__jule_result_arg0;
					_13725_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13725_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13725_logs;
					return __jule_func_result;;
				};
				if ((!(_13718_r))) {
					goto _iter_next_1ad88750e;
				};
				{ jule::Slice<jule::Ptr<_1c6297379_Ast>> &__jule_push_dest = _11217_asts; __jule_push_dest.push((*(_12721_finfo))._field_Ast); };
			}
			_iter_next_1ad88750e:;
			++it;
			goto _iter_begin_1ad88750e;
		}
		_iter_end_1ad88750e:;
	};
	__jule_func_result.__jule_result_arg0 = _11217_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1a9ed5424_Imported(_1a9ed3785_JuleImporter* _self_, jule::Ptr<_1c63469de_ImportInfo> _15331_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad88a29d:;
		if (it != expr_end) {
			jule::Ptr<_1c63469de_ImportInfo> _15516_p = *it;
			{
				if ((((*(_15516_p))._field_Binded == (*(_15331_imp))._field_Binded) && ((*(_15516_p))._field_LinkPath == (*(_15331_imp))._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1ad88a29d:;
			++it;
			goto _iter_begin_1ad88a29d;
		}
		_iter_end_1ad88a29d:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad89278e:;
			if (it != expr_end) {
				jule::I64 _16217_i = it - expr->begin();
				jule::Str _16220_mod = *it;
				{
					if (((*(_self_))._field_mod == _16220_mod)) {
						(*(_15331_imp))._field_ModId=_16217_i;
						goto _julec_label_1ad8944c7;
					};
				}
				_iter_next_1ad89278e:;
				++it;
				_16217_i++;
				goto _iter_begin_1ad89278e;
			}
			_iter_end_1ad89278e:;
		};
		(*(_15331_imp))._field_ModId=static_cast<jule::I64>((*(_self_))._field_mods.len());
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_1ad8944c7:;
	};
	{ jule::Slice<jule::Ptr<_1c63469de_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_15331_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_221968cb9_Log _1a9ed5853_isPassBuildDirectives(_1a9ed3785_JuleImporter* _self_, jule::Ptr<_1c6297379_Ast>* _17945_file) {
	__jule_tuple_bool__jule_tuple_s_221968cb9_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*((*(_17945_file))))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad895907:;
		if (it != expr_end) {
			jule::Ptr<_1c6298666_Directive> _18021_td = *it;
			{
				if ((!(*((*(_18021_td))._field_Tag))._field_Kind.equal("build", 5))) {
					goto _iter_next_1ad895907;
				};
				_1c472eadd_directiveEval _18421_de = _1c472eadd_directiveEval{._field_d=_18021_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _18817_result = _1c4730e52_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _18421_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_18817_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1ad895907:;
			++it;
			goto _iter_begin_1ad895907;
		}
		_iter_end_1ad895907:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a9ed3785_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a9ed8999_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ad8b7396_isCommonOrdered(jule::Slice<jule::Ptr<_1c62b9d3b_Struct>> _1834_s, jule::Ptr<_1c62b9d3b_Struct> _1842_t) {
	{
		auto expr = &((*(_1842_t))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad8b83db:;
		if (it != expr_end) {
			jule::Ptr<_1c62b9d3b_Struct> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad8b8d37:;
					if (it != expr_end) {
						jule::Ptr<_1c62b9d3b_Struct> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1ad8b8d37:;
						++it;
						goto _iter_begin_1ad8b8d37;
					}
					_iter_end_1ad8b8d37:;
				};
			}
			_iter_next_1ad8b83db:;
			++it;
			goto _iter_begin_1ad8b83db;
		}
		_iter_end_1ad8b83db:;
	};
	return true;;
}

inline jule::Bool _1ad8bc335_isCommonOrdered(jule::Slice<jule::Ptr<_1c6389da6_Var>> _1834_s, jule::Ptr<_1c6389da6_Var> _1842_t) {
	{
		auto expr = &((*(_1842_t))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad8bd336:;
		if (it != expr_end) {
			jule::Ptr<_1c6389da6_Var> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad8bdc82:;
					if (it != expr_end) {
						jule::Ptr<_1c6389da6_Var> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1ad8bdc82:;
						++it;
						goto _iter_begin_1ad8bdc82;
					}
					_iter_end_1ad8bdc82:;
				};
			}
			_iter_next_1ad8bd336:;
			++it;
			goto _iter_begin_1ad8bd336;
		}
		_iter_end_1ad8bd336:;
	};
	return true;;
}



inline void _1ad8b3a35_orderCommon(jule::Slice<jule::Ptr<_1c62b9d3b_Struct>>* _3135_s) {
	jule::I64 _3217_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad8b4edc:;
		if (it != expr_end) {
			{
				jule::Bool _3421_swapped = false;;
				jule::I64 _3521_k = 0LL;;
				for (; (_3521_k < _3217_n); (_3521_k)++) {
					{
						if ((!(_1ad8b7396_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3521_k])))) {
							std::swap((*(_3135_s))[_3521_k], (*(_3135_s))[(_3521_k + 1LL)]);
							_3421_swapped=true;
						};
					}
				_iter_next_1ad8b5c13:;
				}
				_iter_end_1ad8b5c13:;;
				if ((!(_3421_swapped))) {
					goto _iter_end_1ad8b4edc;
				};
				(_3217_n)--;
			}
			_iter_next_1ad8b4edc:;
			++it;
			goto _iter_begin_1ad8b4edc;
		}
		_iter_end_1ad8b4edc:;
	};
}

inline void _1ad8b7c37_orderCommon(jule::Slice<jule::Ptr<_1c6389da6_Var>>* _3135_s) {
	jule::I64 _3217_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad8b9e7b:;
		if (it != expr_end) {
			{
				jule::Bool _3421_swapped = false;;
				jule::I64 _3521_k = 0LL;;
				for (; (_3521_k < _3217_n); (_3521_k)++) {
					{
						if ((!(_1ad8bc335_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3521_k])))) {
							std::swap((*(_3135_s))[_3521_k], (*(_3135_s))[(_3521_k + 1LL)]);
							_3421_swapped=true;
						};
					}
				_iter_next_1ad8baba2:;
				}
				_iter_end_1ad8baba2:;;
				if ((!(_3421_swapped))) {
					goto _iter_end_1ad8b9e7b;
				};
				(_3217_n)--;
			}
			_iter_next_1ad8b9e7b:;
			++it;
			goto _iter_begin_1ad8b9e7b;
		}
		_iter_end_1ad8b9e7b:;
	};
}



inline void static__1a9ed9604_orderStructures(jule::Slice<jule::Ptr<_1c62b9d3b_Struct>>* _5136_structs) {
	_1ad8b3a35_orderCommon(_5136_structs);
}



inline void static__1a9ed9835_orderVars(jule::Slice<jule::Ptr<_1c6389da6_Var>>* _5730_vars) {
	_1ad8b7c37_orderCommon(_5730_vars);
}





std::ostream &operator<<(std::ostream &_Stream, _1a9ed8c0d_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa117c82_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1aa1353ba_optimizeChild(jule::Ptr<_1aa134e14_scopeDeadCode> _self_, jule::Ptr<_1c6320754_Scope>* _3938_s) {
	jule::Ptr<_1aa134e14_scopeDeadCode> _4017_sdc = jule::new_ptr<_1aa134e14_scopeDeadCode>(_1aa134e14_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3938_s)), ._field_stmts=(&((*((*(_3938_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*(_self_))._field_gotos, });;
	{
		_1aa137cd5_optimizeStmts(_4017_sdc);
	};
}



inline void _1aa135673_optimizeBodyChildExceptional(jule::Ptr<_1aa134e14_scopeDeadCode> _self_, jule::Ptr<_1c6320754_Scope>* _5053_s) {
	jule::Ptr<_1aa134e14_scopeDeadCode> _5117_sdc = jule::new_ptr<_1aa134e14_scopeDeadCode>(_1aa134e14_scopeDeadCode{._field_s=(*(_5053_s)), ._field_stmts=(&((*((*(_5053_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*(_self_))._field_gotos, ._field_except=true});;
	{
		_1aa137cd5_optimizeStmts(_5117_sdc);
	};
}



inline void _1aa13592b_optimizeBodyChild(jule::Ptr<_1aa134e14_scopeDeadCode> _self_, jule::Ptr<_1c6320754_Scope>* _6142_s) {
	jule::Ptr<_1aa134e14_scopeDeadCode> _6217_sdc = jule::new_ptr<_1aa134e14_scopeDeadCode>(_1aa134e14_scopeDeadCode{._field_s=(*(_6142_s)), ._field_stmts=(&((*((*(_6142_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*(_self_))._field_gotos, });;
	{
		_1aa137cd5_optimizeStmts(_6217_sdc);
	};
}



inline void _1aa135bd4_optimizeExprModel(jule::Ptr<_1aa134e14_scopeDeadCode> _self_, jule::Any* _7142_model) {
	_1aa13916b_exprDeadCode _7213_edc = static__1aa1397a9_new(&(_self_));;
	_1c6636b36_optimize(&_7213_edc, _7142_model);
}



inline void _1aa135dd2_eliminateFollowed(_1aa134e14_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		(*((*(_self_))._field_stmts))=(*((*(_self_))._field_stmts)).slice(0LL, ((*(_self_))._field_i + 1LL));
	};
	jule::Ptr<_1aa134e14_scopeDeadCode> _8317_parent = (*(_self_))._field_parent;;
	while ((_8317_parent != nullptr)) {
		{
			{
				(*((*(_8317_parent))._field_stmts))=(*((*(_8317_parent))._field_stmts)).slice(0LL, ((*(_8317_parent))._field_i + 1LL));
			};
			_8317_parent=(*(_8317_parent))._field_parent;
		}
	_iter_next_1ad942e5a:;
	}
	_iter_end_1ad942e5a:;;
}



inline void _1aa13618a_pushGoto(jule::Ptr<_1aa134e14_scopeDeadCode> _self_, jule::Ptr<_1c63234c1_GotoSt> _9232_gt) {
	jule::I64 _9317_i = 0LL;;
	for (; (_9317_i < (*((*(_self_))._field_labels)).len()); (_9317_i)++) {
		{
			if (((*(_9232_gt))._field_Ident == (*((*((*(_self_))._field_labels))[_9317_i]))._field_Ident)) {
				return;;
			};
		}
	_iter_next_1ad94639d:;
	}
	_iter_end_1ad94639d:;;
	{ jule::Slice<jule::Ptr<_1c63234c1_GotoSt>> &__jule_push_dest = (*((*(_self_))._field_gotos)); __jule_push_dest.push(_9232_gt); };
}



inline void _1aa136443_pushLabel(jule::Ptr<_1aa134e14_scopeDeadCode> _self_, jule::Ptr<_1c63230e7_Label> _10233_l) {
	jule::I64 _10317_i = 0LL;;
	while ((_10317_i < (*((*(_self_))._field_gotos)).len())) {
		{
			if (((*(_10233_l))._field_Ident == (*((*((*(_self_))._field_gotos))[_10317_i]))._field_Ident)) {
				jule::copy(((*((*(_self_))._field_gotos)).slice(_10317_i)), ((*((*(_self_))._field_gotos)).slice((_10317_i + 1LL))));
				(*((*(_self_))._field_gotos))=(*((*(_self_))._field_gotos)).slice(0LL, ((*((*(_self_))._field_gotos)).len() - 1LL));
				goto _iter_next_1ad9485c0;
			};
			(_10317_i)++;
		}
	_iter_next_1ad9485c0:;
	}
	_iter_end_1ad9485c0:;;
	{ jule::Slice<jule::Ptr<_1c63230e7_Label>> &__jule_push_dest = (*((*(_self_))._field_labels)); __jule_push_dest.push(_10233_l); };
}



inline void _1aa1366eb_optimizeRangeIter(jule::Ptr<_1aa134e14_scopeDeadCode> _self_, jule::Ptr<_1c632258b_RangeIter> _11541_it) {
	_1aa135bd4_optimizeExprModel(_self_, &((*((*(_11541_it))._field_Expr))._field_Model));
	_1aa13592b_optimizeBodyChild(_self_, &((*(_11541_it))._field_Scope));
}



inline void _1aa1369a4_optimizeWhileIter(jule::Ptr<_1aa134e14_scopeDeadCode> _self_, jule::Ptr<_1c6321b40_WhileIter> _12041_it) {
	_1aa135bd4_optimizeExprModel(_self_, &((*(_12041_it))._field_Expr));
	if (((*(_12041_it))._field_Next != nullptr)) {
		_1aa137ad7_optimizeStmt(_self_, (*(_12041_it))._field_Next);
	};
	_1aa13592b_optimizeBodyChild(_self_, &((*(_12041_it))._field_Scope));
}



inline void _1aa136c5c_optimizeInfIter(jule::Ptr<_1aa134e14_scopeDeadCode> _self_, jule::Ptr<_1c6321689_InfIter> _12839_it) {
	_1aa13592b_optimizeBodyChild(_self_, &((*(_12839_it))._field_Scope));
}



inline void _1aa137015_optimizeConditional(jule::Ptr<_1aa134e14_scopeDeadCode> _self_, jule::Ptr<_1c632138c_Conditional> _13243_c) {
	{
		auto expr = &((*(_13243_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad950473:;
		if (it != expr_end) {
			jule::Ptr<_1c6320b72_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_1aa135bd4_optimizeExprModel(_self_, &((*(_13321_case))._field_Expr));
					_1aa13592b_optimizeBodyChild(_self_, &((*(_13321_case))._field_Scope));
				};
			}
			_iter_next_1ad950473:;
			++it;
			goto _iter_begin_1ad950473;
		}
		_iter_end_1ad950473:;
	};
	if (((*(_13243_c))._field_Default != nullptr)) {
		if (((*(_13243_c))._field_Elifs.len() == 0LL)) {
			_1aa1353ba_optimizeChild(_self_, &((*((*(_13243_c))._field_Default))._field_Scope));
		} else {
			_1aa13592b_optimizeBodyChild(_self_, &((*((*(_13243_c))._field_Default))._field_Scope));
		};
	};
}



inline void _1aa1372bd_optimizeMatch(jule::Ptr<_1aa134e14_scopeDeadCode> _self_, jule::Ptr<_1c632488a_Match> _15037_m) {
	{
		auto expr = &((*(_15037_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad9539d7:;
		if (it != expr_end) {
			jule::Ptr<_1c63254c3_Case> _15121_case = *it;
			{
				{
					auto expr = &((*(_15121_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad954433:;
					if (it != expr_end) {
						jule::Ptr<_1c63dd35a_Data> _15225_expr = *it;
						{
							_1aa135bd4_optimizeExprModel(_self_, &((*(_15225_expr))._field_Model));
						}
						_iter_next_1ad954433:;
						++it;
						goto _iter_begin_1ad954433;
					}
					_iter_end_1ad954433:;
				};
				_1aa13592b_optimizeBodyChild(_self_, &((*(_15121_case))._field_Scope));
			}
			_iter_next_1ad9539d7:;
			++it;
			goto _iter_begin_1ad9539d7;
		}
		_iter_end_1ad9539d7:;
	};
	if (((*(_15037_m))._field_Default != nullptr)) {
		if (((*(_15037_m))._field_Cases.len() == 0LL)) {
			_1aa1353ba_optimizeChild(_self_, &((*((*(_15037_m))._field_Default))._field_Scope));
		} else {
			_1aa13592b_optimizeBodyChild(_self_, &((*((*(_15037_m))._field_Default))._field_Scope));
		};
	};
}



inline void _1aa137576_optimizeAssign(jule::Ptr<_1aa134e14_scopeDeadCode> _self_, jule::Ptr<_1c6323d51_Assign> _16838_assign) {
	_1aa135bd4_optimizeExprModel(_self_, &((*((*(_16838_assign))._field_L))._field_Model));
	_1aa135bd4_optimizeExprModel(_self_, &((*((*(_16838_assign))._field_R))._field_Model));
}



inline void _1aa13782e_optimizeMultiAssign(jule::Ptr<_1aa134e14_scopeDeadCode> _self_, jule::Ptr<_1c632422a_MultiAssign> _17343_assign) {
	{
		auto expr = &((*(_17343_assign))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad958844:;
		if (it != expr_end) {
			jule::Ptr<_1c63dd35a_Data> _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_1aa135bd4_optimizeExprModel(_self_, &((*(_17421_l))._field_Model));
				};
			}
			_iter_next_1ad958844:;
			++it;
			goto _iter_begin_1ad958844;
		}
		_iter_end_1ad958844:;
	};
	_1aa135bd4_optimizeExprModel(_self_, &((*(_17343_assign))._field_R));
}



inline void _1aa137ad7_optimizeStmt(jule::Ptr<_1aa134e14_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1ad95a4e4:;
			{
				jule::Ptr<_1c6320754_Scope> _18521_scope = _18236_st.cast_ptr<_1c6320754_Scope>(&__jule_any_type22);;
				if ((*(_18521_scope))._field_Deferred) {
					_1aa138115_eliminateDeadCodeOfScope(_18521_scope);
				} else {
					_1aa1353ba_optimizeChild(_self_, &(_18521_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1ad95a55a:;
			{
				_1aa1366eb_optimizeRangeIter(_self_, _18236_st.cast_ptr<_1c632258b_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1ad95a5c1:;
			{
				_1aa1369a4_optimizeWhileIter(_self_, _18236_st.cast_ptr<_1c6321b40_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1ad95a648:;
			{
				_1aa136c5c_optimizeInfIter(_self_, _18236_st.cast_ptr<_1c6321689_InfIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1ad95a6c0:;
			{
				_1aa137015_optimizeConditional(_self_, _18236_st.cast_ptr<_1c632138c_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1ad95a747:;
			{
				_1aa1372bd_optimizeMatch(_self_, _18236_st.cast_ptr<_1c632488a_Match>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1ad95a7be:;
			{
				_1aa137576_optimizeAssign(_self_, _18236_st.cast_ptr<_1c6323d51_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1ad95a846:;
			{
				_1aa13782e_optimizeMultiAssign(_self_, _18236_st.cast_ptr<_1c632422a_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1ad95a8bd:;
			{
				jule::Ptr<_1c63dd35a_Data> _20621_d = _18236_st.cast_ptr<_1c63dd35a_Data>(&__jule_any_type24);;
				if ((*(_self_))._field_except) {
					goto _match_end_1ad95a3a1;
				};
				{
					auto &_match_expr{ (*(_20621_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type29) {
						_case_begin_1ad960e23:;
						{
							_1aa135dd2_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_1ad9615a5:;
						{
							_1aa135bd4_optimizeExprModel(_self_, &((*(_20621_d))._field_Model));
						}
					}
					_match_end_1ad961550:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1ad95a945:;
			{
				_1aa135dd2_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1ad95a9bc:;
			{
				_1aa13618a_pushGoto(_self_, _18236_st.cast_ptr<_1c63234c1_GotoSt>(&__jule_any_type42));
				_1aa135dd2_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1ad95aa44:;
			{
				_1aa136443_pushLabel(_self_, _18236_st.cast_ptr<_1c63230e7_Label>(&__jule_any_type21));
			}
		}
		_match_end_1ad95a3a1:;
	};
}



inline void _1aa137cd5_optimizeStmts(jule::Ptr<_1aa134e14_scopeDeadCode> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*(_self_))._field_i < (*((*(_self_))._field_stmts)).len()); ((*(_self_))._field_i)++) {
		{
			_1aa137ad7_optimizeStmt(_self_, (*((*(_self_))._field_stmts))[(*(_self_))._field_i]);
		}
	_iter_next_1ad963c8e:;
	}
	_iter_end_1ad963c8e:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa134e14_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1aa13916b_exprDeadCode static__1aa1397a9_new(jule::Ptr<_1aa134e14_scopeDeadCode>* _4824_s) {
	return _1aa13916b_exprDeadCode{._field_s=(*(_4824_s))};;
}



inline void _1aa139a62_binary(_1aa13916b_exprDeadCode* _self_, jule::Ptr<_1c62c1ea8_BinopExprModel> _5425_m) {
	_1c6636b36_optimize(_self_, &((*((*(_5425_m))._field_Left))._field_Model));
	_1c6636b36_optimize(_self_, &((*((*(_5425_m))._field_Right))._field_Model));
}



inline void _1aa139d1a_unary(_1aa13916b_exprDeadCode* _self_, jule::Ptr<_1c62c2382_UnaryExprModel> _5924_m) {
	_1c6636b36_optimize(_self_, &((*((*(_5924_m))._field_Expr))._field_Model));
}



inline void _1aa13a0c3_structureLit(_1aa13916b_exprDeadCode* _self_, jule::Ptr<_1c62c2c56_StructLitExprModel> _6331_m) {
	{
		auto expr = &((*(_6331_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad967820:;
		if (it != expr_end) {
			jule::Ptr<_1c62c28b0_StructArgExprModel> _6421_arg = *it;
			{
				_1c6636b36_optimize(_self_, &((*((*(_6421_arg))._field_Expr))._field_Model));
			}
			_iter_next_1ad967820:;
			++it;
			goto _iter_begin_1ad967820;
		}
		_iter_end_1ad967820:;
	};
}



inline void _1aa13a37b_allocStructure(_1aa13916b_exprDeadCode* _self_, jule::Ptr<_1c62c3053_AllocStructLitExprModel> _6933_m) {
	_1aa13a0c3_structureLit(_self_, (*(_6933_m))._field_Lit);
}



inline void _1aa13a634_casting(_1aa13916b_exprDeadCode* _self_, jule::Ptr<_1c62c35d6_CastingExprModel> _7326_m) {
	_1c6636b36_optimize(_self_, &((*(_7326_m))._field_Expr));
}



inline void _1aa13a8dc_args(_1aa13916b_exprDeadCode* _self_, jule::Slice<jule::Any>* _7724_args) {
	{
		auto expr = _7724_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad969ca6:;
		if (it != expr_end) {
			jule::Any _7821_arg = *it;
			{
				_1c6636b36_optimize(_self_, &(_7821_arg));
			}
			_iter_next_1ad969ca6:;
			++it;
			goto _iter_begin_1ad969ca6;
		}
		_iter_end_1ad969ca6:;
	};
}



inline void _1aa13ab95_funcCall(_1aa13916b_exprDeadCode* _self_, jule::Ptr<_1c62c3e88_FnCallExprModel> _8327_m) {
	_1c6636b36_optimize(_self_, &((*(_8327_m))._field_Expr));
	_1aa13a8dc_args(_self_, &((*(_8327_m))._field_Args));
	if (((*(_8327_m))._field_Except != nullptr)) {
		_1aa135673_optimizeBodyChildExceptional((*(_self_))._field_s, &((*(_8327_m))._field_Except));
	};
}



inline void _1aa13ae4d_slice(_1aa13916b_exprDeadCode* _self_, jule::Ptr<_1c62c4362_SliceExprModel> _9124_m) {
	_1aa13a8dc_args(_self_, &((*(_9124_m))._field_Elems));
}



inline void _1aa13b206_array(_1aa13916b_exprDeadCode* _self_, jule::Ptr<_1c62c73a9_ArrayExprModel> _9524_m) {
	if ((((*(_9524_m))._field_Elems.len() == 2LL) && ((*(_9524_m))._field_Elems[1LL] == nullptr))) {
		_1c6636b36_optimize(_self_, &((*(_9524_m))._field_Elems[0LL]));
	};
	_1aa13a8dc_args(_self_, &((*(_9524_m))._field_Elems));
}



inline void _1aa13b4ae_indexing(_1aa13916b_exprDeadCode* _self_, jule::Ptr<_1c62c4818_IndexingExprModel> _10227_m) {
	_1c6636b36_optimize(_self_, &((*((*(_10227_m))._field_Expr))._field_Model));
	_1c6636b36_optimize(_self_, &((*((*(_10227_m))._field_Index))._field_Model));
}



inline void _1aa13b767_anonFunc(_1aa13916b_exprDeadCode* _self_, jule::Ptr<_1c62c4be2_AnonFnExprModel> _10727_m) {
	_1aa138115_eliminateDeadCodeOfScope((*((*(_10727_m))._field_Func))._field_Scope);
}



inline void _1aa13ba20_mapExpr(_1aa13916b_exprDeadCode* _self_, jule::Ptr<_1c62c5572_MapExprModel> _11126_m) {
	{
		auto expr = &((*(_11126_m))._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad971450:;
		if (it != expr_end) {
			jule::Ptr<_1c62c50bb_KeyValPairExprModel> _11221_pair = *it;
			{
				_1c6636b36_optimize(_self_, &((*(_11221_pair))._field_Key));
				_1c6636b36_optimize(_self_, &((*(_11221_pair))._field_Val));
			}
			_iter_next_1ad971450:;
			++it;
			goto _iter_begin_1ad971450;
		}
		_iter_end_1ad971450:;
	};
}



inline void _1aa13bcc8_slicing(_1aa13916b_exprDeadCode* _self_, jule::Ptr<_1c62c5b05_SlicingExprModel> _11826_m) {
	_1c6636b36_optimize(_self_, &((*(_11826_m))._field_Expr));
	_1c6636b36_optimize(_self_, &((*(_11826_m))._field_Left));
	if (((*(_11826_m))._field_Right != nullptr)) {
		_1c6636b36_optimize(_self_, &((*(_11826_m))._field_Right));
	};
}



inline void _1aa13c081_traitSub(_1aa13916b_exprDeadCode* _self_, jule::Ptr<_1c62c6188_TraitSubIdentExprModel> _12627_m) {
	_1c6636b36_optimize(_self_, &((*(_12627_m))._field_Expr));
}



inline void _1aa13c339_structureSub(_1aa13916b_exprDeadCode* _self_, jule::Ptr<_1c62c6a29_StructSubIdentExprModel> _13031_m) {
	_1c6636b36_optimize(_self_, &((*((*(_13031_m))._field_Expr))._field_Model));
}



inline void _1aa13c5e2_tuple(_1aa13916b_exprDeadCode* _self_, jule::Ptr<_1c62c76a6_TupleExprModel> _13424_m) {
	{
		auto expr = &((*(_13424_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad975553:;
		if (it != expr_end) {
			jule::Ptr<_1c63dd35a_Data> _13521_d = *it;
			{
				_1c6636b36_optimize(_self_, &((*(_13521_d))._field_Model));
			}
			_iter_next_1ad975553:;
			++it;
			goto _iter_begin_1ad975553;
		}
		_iter_end_1ad975553:;
	};
}



inline void _1aa13c89a_newCall(_1aa13916b_exprDeadCode* _self_, jule::Ptr<_1c62c8333_BuiltinNewCallExprModel> _14026_m) {
	if (((*(_14026_m))._field_Init != nullptr)) {
		_1c6636b36_optimize(_self_, &((*(_14026_m))._field_Init));
	};
}



inline void _1aa13cb53_outCall(_1aa13916b_exprDeadCode* _self_, jule::Ptr<_1c62c7a80_BuiltinOutCallExprModel> _14626_m) {
	_1c6636b36_optimize(_self_, &((*(_14626_m))._field_Expr));
}



inline void _1aa13ce0b_outlnCall(_1aa13916b_exprDeadCode* _self_, jule::Ptr<_1c62c7e59_BuiltinOutlnCallExprModel> _15028_m) {
	_1c6636b36_optimize(_self_, &((*(_15028_m))._field_Expr));
}



inline void _1aa13d1b4_panicCall(_1aa13916b_exprDeadCode* _self_, jule::Ptr<_1c62c870c_BuiltinPanicCallExprModel> _15428_m) {
	_1c6636b36_optimize(_self_, &((*(_15428_m))._field_Expr));
}



inline void _1aa13d46c_assertCall(_1aa13916b_exprDeadCode* _self_, jule::Ptr<_1c62c8bb3_BuiltinAssertCallExprModel> _15829_m) {
	_1c6636b36_optimize(_self_, &((*(_15829_m))._field_Expr));
}



inline void _1aa13d725_errorCall(_1aa13916b_exprDeadCode* _self_, jule::Ptr<_1c62ca7b9_BuiltinErrorCallExprModel> _16228_m) {
	_1c6636b36_optimize(_self_, &((*((*(_16228_m))._field_Err))._field_Model));
}



inline void _1aa13d9cd_makeCall(_1aa13916b_exprDeadCode* _self_, jule::Ptr<_1c62c9169_BuiltinMakeCallExprModel> _16627_m) {
	if (((*(_16627_m))._field_Len != nullptr)) {
		_1c6636b36_optimize(_self_, &((*(_16627_m))._field_Len));
	};
	if (((*(_16627_m))._field_Cap != nullptr)) {
		_1c6636b36_optimize(_self_, &((*(_16627_m))._field_Cap));
	};
}



inline void _1c66351ea_appendCall(_1aa13916b_exprDeadCode* _self_, jule::Ptr<_1c62c9543_BuiltinAppendCallExprModel> _17529_m) {
	_1c6636b36_optimize(_self_, &((*(_17529_m))._field_Dest));
	_1c6636b36_optimize(_self_, &((*(_17529_m))._field_Elements));
}



inline void _1c66353a4_lenCall(_1aa13916b_exprDeadCode* _self_, jule::Ptr<_1c62c9840_BuiltinLenCallExprModel> _18026_m) {
	_1c6636b36_optimize(_self_, &((*((*(_18026_m))._field_Expr))._field_Model));
}



inline void _1c663574a_capCall(_1aa13916b_exprDeadCode* _self_, jule::Ptr<_1c62c9b3c_BuiltinCapCallExprModel> _18426_m) {
	_1c6636b36_optimize(_self_, &((*((*(_18426_m))._field_Expr))._field_Model));
}



inline void _1c6635a03_deleteCall(_1aa13916b_exprDeadCode* _self_, jule::Ptr<_1c62ca016_BuiltinDeleteCallExprModel> _18829_m) {
	_1c6636b36_optimize(_self_, &((*((*(_18829_m))._field_Dest))._field_Model));
	if (((*(_18829_m))._field_Key != nullptr)) {
		_1c6636b36_optimize(_self_, &((*((*(_18829_m))._field_Key))._field_Model));
	};
}



inline void _1c6635cab_sizeof(_1aa13916b_exprDeadCode* _self_, jule::Ptr<_1c62c6375_SizeofExprModel> _19525_m) {
	_1c6636b36_optimize(_self_, &((*(_19525_m))._field_Expr));
}



inline void _1c6636064_alignof(_1aa13916b_exprDeadCode* _self_, jule::Ptr<_1c62caee5_AlignofExprModel> _19926_m) {
	_1c6636b36_optimize(_self_, &((*(_19926_m))._field_Expr));
}



inline void _1c663631c_integratedToStr(_1aa13916b_exprDeadCode* _self_, jule::Ptr<_1c62cb5de_IntegratedToStrExprModel> _20334_m) {
	_1c6636b36_optimize(_self_, &((*(_20334_m))._field_Expr));
}



inline void _1c66365c5_free(_1aa13916b_exprDeadCode* _self_, jule::Ptr<_1c62cbcb5_FreeExprModel> _20723_m) {
	_1c6636b36_optimize(_self_, &((*(_20723_m))._field_Expr));
}



inline void _1c663687d_backendEmit(_1aa13916b_exprDeadCode* _self_, jule::Ptr<_1c62cb9b8_BackendEmitExprModel> _21130_m) {
	_1aa13a8dc_args(_self_, &((*(_21130_m))._field_Exprs));
}



inline void _1c6636b36_optimize(_1aa13916b_exprDeadCode* _self_, jule::Any* _21528_model) {
	{
		auto &_match_expr{ (*(_21528_model)) };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1ad983ab1:;
			{
				_1aa139a62_binary(_self_, (*(_21528_model)).cast_ptr<_1c62c1ea8_BinopExprModel>(&__jule_any_type111));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ad983b27:;
			{
				_1aa139d1a_unary(_self_, (*(_21528_model)).cast_ptr<_1c62c2382_UnaryExprModel>(&__jule_any_type110));
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1ad983b8d:;
			{
				_1aa13a0c3_structureLit(_self_, (*(_21528_model)).cast_ptr<_1c62c2c56_StructLitExprModel>(&__jule_any_type94));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1ad983c15:;
			{
				_1aa13a37b_allocStructure(_self_, (*(_21528_model)).cast_ptr<_1c62c3053_AllocStructLitExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1ad983c8c:;
			{
				_1aa13a634_casting(_self_, (*(_21528_model)).cast_ptr<_1c62c35d6_CastingExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1ad983d14:;
			{
				_1aa13ab95_funcCall(_self_, (*(_21528_model)).cast_ptr<_1c62c3e88_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1ad983d8b:;
			{
				_1aa13ae4d_slice(_self_, (*(_21528_model)).cast_ptr<_1c62c4362_SliceExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1ad983e13:;
			{
				_1aa13b206_array(_self_, (*(_21528_model)).cast_ptr<_1c62c73a9_ArrayExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1ad983e8a:;
			{
				_1aa13b4ae_indexing(_self_, (*(_21528_model)).cast_ptr<_1c62c4818_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1ad984012:;
			{
				_1aa13b767_anonFunc(_self_, (*(_21528_model)).cast_ptr<_1c62c4be2_AnonFnExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ad984089:;
			{
				_1aa13ba20_mapExpr(_self_, (*(_21528_model)).cast_ptr<_1c62c5572_MapExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1ad984111:;
			{
				_1aa13bcc8_slicing(_self_, (*(_21528_model)).cast_ptr<_1c62c5b05_SlicingExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1ad984188:;
			{
				_1aa13c081_traitSub(_self_, (*(_21528_model)).cast_ptr<_1c62c6188_TraitSubIdentExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1ad984210:;
			{
				_1aa13c339_structureSub(_self_, (*(_21528_model)).cast_ptr<_1c62c6a29_StructSubIdentExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1ad984287:;
			{
				_1aa13c5e2_tuple(_self_, (*(_21528_model)).cast_ptr<_1c62c76a6_TupleExprModel>(&__jule_any_type81));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1ad98430e:;
			{
				_1aa13cb53_outCall(_self_, (*(_21528_model)).cast_ptr<_1c62c7a80_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1ad984386:;
			{
				_1aa13ce0b_outlnCall(_self_, (*(_21528_model)).cast_ptr<_1c62c7e59_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1ad98440d:;
			{
				_1aa13c89a_newCall(_self_, (*(_21528_model)).cast_ptr<_1c62c8333_BuiltinNewCallExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1ad984485:;
			{
				_1aa13d1b4_panicCall(_self_, (*(_21528_model)).cast_ptr<_1c62c870c_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1ad98450c:;
			{
				_1aa13d46c_assertCall(_self_, (*(_21528_model)).cast_ptr<_1c62c8bb3_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ad984584:;
			{
				_1aa13d725_errorCall(_self_, (*(_21528_model)).cast_ptr<_1c62ca7b9_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1ad98460b:;
			{
				_1aa13d9cd_makeCall(_self_, (*(_21528_model)).cast_ptr<_1c62c9169_BuiltinMakeCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1ad984683:;
			{
				_1c66351ea_appendCall(_self_, (*(_21528_model)).cast_ptr<_1c62c9543_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1ad98470a:;
			{
				_1c66353a4_lenCall(_self_, (*(_21528_model)).cast_ptr<_1c62c9840_BuiltinLenCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1ad984782:;
			{
				_1c663574a_capCall(_self_, (*(_21528_model)).cast_ptr<_1c62c9b3c_BuiltinCapCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1ad984809:;
			{
				_1c6635a03_deleteCall(_self_, (*(_21528_model)).cast_ptr<_1c62ca016_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1ad984881:;
			{
				_1c6635cab_sizeof(_self_, (*(_21528_model)).cast_ptr<_1c62c6375_SizeofExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1ad984908:;
			{
				_1c6636064_alignof(_self_, (*(_21528_model)).cast_ptr<_1c62caee5_AlignofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1ad984980:;
			{
				_1c663631c_integratedToStr(_self_, (*(_21528_model)).cast_ptr<_1c62cb5de_IntegratedToStrExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1ad984a07:;
			{
				_1c66365c5_free(_self_, (*(_21528_model)).cast_ptr<_1c62cbcb5_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1ad984a7e:;
			{
				_1c663687d_backendEmit(_self_, (*(_21528_model)).cast_ptr<_1c62cb9b8_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_1ad983819:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1aa13916b_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c651ab6e_SwapExprModel _Src) {
	_Stream << "SwapExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c651b08c_EmptyCompareExprModel _Src) {
	_Stream << "EmptyCompareExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Neg:" << _Src._field_Neg;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c651b389_RefExprModel _Src) {
	_Stream << "RefExprModel{";
	_Stream << "Var:" << _Src._field_Var;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c651b8b7_StrCompExprModel _Src) {
	_Stream << "StrCompExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "NotEq:" << _Src._field_NotEq;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c651be4a_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c651c247_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c651c544_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c651c973_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c651cd4c_AppendToSliceExprModel _Src) {
	_Stream << "AppendToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Slice:" << _Src._field_Slice;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c651d149_InlineStdInternalNosafeStobs _Src) {
	_Stream << "InlineStdInternalNosafeStobs{";
	_Stream << "Str:" << _Src._field_Str;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c651e2e3_scopeOptimizer> static__1c651e832_new(jule::Ptr<_1c6320754_Scope> _4623_scope) {
	return jule::new_ptr<_1c651e2e3_scopeOptimizer>(_1c651e2e3_scopeOptimizer{._field_scope=_4623_scope});;
}



inline void _1c651eada_setCurrentStmt(_1c651e2e3_scopeOptimizer* _self_, jule::Any _5237_stmt) {
	(*((*(_self_))._field_scope))._field_Stmts[(*(_self_))._field_i]=(*(((jule::Any*)((&(_5237_stmt))))));
}



inline void _1c651ecd8_removeCurrent(_1c651e2e3_scopeOptimizer* _self_) {
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*((*(_self_))._field_scope))._field_Stmts.slice(0LL, (*(_self_))._field_i),(*((*(_self_))._field_scope))._field_Stmts.slice(((*(_self_))._field_i + 1LL)));
}



inline void _1c6520091_optimizeData(_1c651e2e3_scopeOptimizer* _self_, jule::Ptr<_1c63dd35a_Data> _6135_d) {
	{
		auto &_match_expr{ (*(_6135_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1ad9e315e:;
			{
				jule::Ptr<_1c62c3e88_FnCallExprModel> _6421_m = (*(_6135_d))._field_Model.cast_ptr<_1c62c3e88_FnCallExprModel>(&__jule_any_type34);;
				if (_21e49099c_Production) {
					if (((!(_1c62d4086_IsBuiltin((*(_6421_m))._field_Func.ptr()))) && _1c6523649_isStdPackage(&((*((*((*((*((*(_6421_m))._field_Func))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str("debug", 5)))) {
						_1c651eada_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1ad9e3109:;
	};
	static__1c6525a25_optimize(&((*(_6135_d))._field_Model));
}



inline void _1c6520349_optimizeVar(_1c651e2e3_scopeOptimizer* _self_, jule::Ptr<_1c6389da6_Var> _7634_v) {
	if (((*(_7634_v))._field_Value != nullptr)) {
		static__1c6525a25_optimize(&((*((*((*(_7634_v))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1c6520602_optimizeConditional(_1c651e2e3_scopeOptimizer* _self_, jule::Ptr<_1c632138c_Conditional> _8242_c) {
	{
		auto expr = &((*(_8242_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad9e7a59:;
		if (it != expr_end) {
			jule::Ptr<_1c6320b72_If> _8321_elif = *it;
			{
				static__1c6525a25_optimize(&((*(_8321_elif))._field_Expr));
				_1c6522ec8_optimizeChild(_self_, (*(_8321_elif))._field_Scope);
			}
			_iter_next_1ad9e7a59:;
			++it;
			goto _iter_begin_1ad9e7a59;
		}
		_iter_end_1ad9e7a59:;
	};
	if (((*(_8242_c))._field_Default != nullptr)) {
		_1c6522ec8_optimizeChild(_self_, (*((*(_8242_c))._field_Default))._field_Scope);
	};
	if ((!(_1a9edd95a_Cond))) {
		return;;
	};
	jule::Bool _9517_constCase = false;;
	{
		auto expr = &((*(_8242_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad9e9c26:;
		if (it != expr_end) {
			jule::I64 _9814_i = it - expr->begin();
			jule::Ptr<_1c6320b72_If> _9821_elif = *it;
			{
				if ((!(_1c6523957_isConstantValidConditionalCase(&(_9821_elif))))) {
					goto _iter_next_1ad9e9c26;
				};
				_9517_constCase=true;
				(*(_8242_c))._field_Elifs=(*(_8242_c))._field_Elifs.slice(0LL, _9814_i);
				(*(_8242_c))._field_Default=jule::new_ptr<_1c6320e6e_Else>(_1c6320e6e_Else{._field_Scope=(*(_9821_elif))._field_Scope});
				goto _iter_end_1ad9e9c26;
			}
			_iter_next_1ad9e9c26:;
			++it;
			_9814_i++;
			goto _iter_begin_1ad9e9c26;
		}
		_iter_end_1ad9e9c26:;
	};
	if (((*(_8242_c))._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1c6320b72_If>* _11517_i = (&((*(_8242_c))._field_Elifs[0LL]));;
	jule::Ptr<_1c6320b72_If>* _11613_end = (&((*(_8242_c))._field_Elifs[((*(_8242_c))._field_Elifs.len() - 1LL)]));;
	for (; (_11517_i <= _11613_end); (_11517_i)++) {
		{
			{
				if (_1c652432b_isUnreachableConditionalCase(&((*(_11517_i))))) {
					(*(_11517_i))=nullptr;
				};
			};
		}
	_iter_next_1ad9ed675:;
	}
	_iter_end_1ad9ed675:;;
	if (((*(_8242_c))._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_9517_constCase))) {
		return;;
	};
	jule::I64 _13417_only = -1LL;;
	{
		auto expr = &((*(_8242_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad9eec1a:;
		if (it != expr_end) {
			jule::I64 _13513_j = it - expr->begin();
			jule::Ptr<_1c6320b72_If> _13516_elif = *it;
			{
				if ((_13516_elif != nullptr)) {
					if ((_13417_only != -1LL)) {
						return;;
					};
					_13417_only=_13513_j;
				};
			}
			_iter_next_1ad9eec1a:;
			++it;
			_13513_j++;
			goto _iter_begin_1ad9eec1a;
		}
		_iter_end_1ad9eec1a:;
	};
	if ((_13417_only != -1LL)) {
		_1c651eada_setCurrentStmt(_self_, jule::Any((*((*(_8242_c))._field_Elifs[_13417_only]))._field_Scope, &__jule_any_type22));
	};
}



inline void _1c6520a20_buildDefaultConstantTrueCase(_1c651e2e3_scopeOptimizer* _self_, jule::Ptr<_1c63254c3_Case> _15151_case, jule::I64* _15169_i, jule::Ptr<_1c632488a_Match>* _15182_m) {
	(*(_15151_case))._field_Exprs=nullptr;
	jule::I64 _15313_start = (*(_15169_i));;
	_julec_label_1ada02954:;
	for (;;) {
		{
			if (((*((*(_15151_case))._field_Scope))._field_Stmts.len() == 0LL)) {
				goto _iter_end_1ada028bb;
			};
			jule::Any *_15922_stmt = &((*((*(_15151_case))._field_Scope))._field_Stmts[((*((*(_15151_case))._field_Scope))._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_15922_stmt)) };
				
				if (_match_expr.type == &__jule_any_type48) {
					_case_begin_1ada048bd:;
					{
						((*(_15169_i)))++;
						if (((*(_15169_i)) >= (*((*(_15182_m))))._field_Cases.len())) {
							(*(_15922_stmt))=jule::Any((*((*((*(_15182_m))))._field_Default))._field_Scope, &__jule_any_type22);
							goto _iter_end_1ada028bb;
						};
						_15151_case=(*((*(_15182_m))))._field_Cases[(*(_15169_i))];
						(*(_15922_stmt))=jule::Any((*(_15151_case))._field_Scope, &__jule_any_type22);
					}
				}
				else {
					_case_begin_1ada04a22:;
					{
						goto _iter_end_1ada028bb;
					}
				}
				_match_end_1ada049bc:;
			};
		}
	_iter_next_1ada028bb:;
	}
	_iter_end_1ada028bb:;;
	(*((*(_15182_m))))._field_Default=(*((*(_15182_m))))._field_Cases[_15313_start];
	(*((*(_15182_m))))._field_Cases=(*((*(_15182_m))))._field_Cases.slice(0LL, _15313_start);
}



inline void _1c6520cc8_optimizeMatch(_1c651e2e3_scopeOptimizer* _self_, jule::Ptr<_1c632488a_Match> _17736_m) {
	{
		auto expr = &((*(_17736_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada073d7:;
		if (it != expr_end) {
			jule::Ptr<_1c63254c3_Case> _17821_case = *it;
			{
				{
					auto expr = &((*(_17821_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ada07d33:;
					if (it != expr_end) {
						jule::Ptr<_1c63dd35a_Data> _17925_expr = *it;
						{
							static__1c6525a25_optimize(&((*(_17925_expr))._field_Model));
						}
						_iter_next_1ada07d33:;
						++it;
						goto _iter_begin_1ada07d33;
					}
					_iter_end_1ada07d33:;
				};
				_1c6522ec8_optimizeChild(_self_, (*(_17821_case))._field_Scope);
			}
			_iter_next_1ada073d7:;
			++it;
			goto _iter_begin_1ada073d7;
		}
		_iter_end_1ada073d7:;
	};
	if (((*(_17736_m))._field_Default != nullptr)) {
		_1c6522ec8_optimizeChild(_self_, (*((*(_17736_m))._field_Default))._field_Scope);
	};
	if ((!(_1a9edd95a_Cond))) {
		return;;
	};
	jule::Bool _19217_constCase = false;;
	{
		auto expr = &((*(_17736_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada09be2:;
		if (it != expr_end) {
			jule::I64 _19518_i = it - expr->begin();
			jule::Ptr<_1c63254c3_Case> _19525_case = *it;
			{
				if ((!(_1c6524062_isConstantValidMatchCase(&(_19525_case))))) {
					goto _iter_next_1ada09be2;
				};
				_19217_constCase=true;
				_1c6520a20_buildDefaultConstantTrueCase(_self_, _19525_case, &(_19518_i), &(_17736_m));
				goto _iter_end_1ada09be2;
			}
			_iter_next_1ada09be2:;
			++it;
			_19518_i++;
			goto _iter_begin_1ada09be2;
		}
		_iter_end_1ada09be2:;
	};
	if (((*(_17736_m))._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1c63254c3_Case>* _20917_i = (&((*(_17736_m))._field_Cases[0LL]));;
	jule::Ptr<_1c63254c3_Case>* _21013_end = (&((*(_17736_m))._field_Cases[((*(_17736_m))._field_Cases.len() - 1LL)]));;
	for (; (_20917_i <= _21013_end); (_20917_i)++) {
		{
			{
				if (_1c65245e5_isUnreachableMatchCase(&((*(_20917_i))))) {
					(*(_20917_i))=nullptr;
				};
			};
		}
	_iter_next_1ada0cae6:;
	}
	_iter_end_1ada0cae6:;;
	if ((!(_19217_constCase))) {
		return;;
	};
	jule::I64 _22417_only = -1LL;;
	{
		auto expr = &((*(_17736_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada0da70:;
		if (it != expr_end) {
			jule::I64 _22513_j = it - expr->begin();
			jule::Ptr<_1c63254c3_Case> _22516_case = *it;
			{
				if ((_22516_case != nullptr)) {
					if ((_22417_only != -1LL)) {
						return;;
					};
					_22417_only=_22513_j;
				};
			}
			_iter_next_1ada0da70:;
			++it;
			_22513_j++;
			goto _iter_begin_1ada0da70;
		}
		_iter_end_1ada0da70:;
	};
	if ((_22417_only != -1LL)) {
		_1c651eada_setCurrentStmt(_self_, jule::Any((*((*(_17736_m))._field_Cases[_22417_only]))._field_Scope, &__jule_any_type22));
	};
}



inline void _1c6521081_optimizeRangeIter(_1c651e2e3_scopeOptimizer* _self_, jule::Ptr<_1c632258b_RangeIter> _24140_it) {
	static__1c6525a25_optimize(&((*((*(_24140_it))._field_Expr))._field_Model));
	_1c6522ec8_optimizeChild(_self_, (*(_24140_it))._field_Scope);
}



inline void _1c6521339_optimizeWhileIter(_1c651e2e3_scopeOptimizer* _self_, jule::Ptr<_1c6321b40_WhileIter> _24640_it) {
	static__1c6525a25_optimize(&((*(_24640_it))._field_Expr));
	_1c6522c20_optimizeStmt(_self_, (*(_24640_it))._field_Next);
	_1c6522ec8_optimizeChild(_self_, (*(_24640_it))._field_Scope);
}



inline jule::Bool _1c652167a_substr(_1c651e2e3_scopeOptimizer* _self_, jule::Ptr<_1c6323d51_Assign> _25229_a) {
	if (((*((*(_25229_a))._field_Op))._field_Id != static_cast<jule::U64>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_25229_a))._field_R))._field_Model };
		
		if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1ada13b52:;
			{
				jule::Ptr<_1c62c5b05_SlicingExprModel> _25821_sem = (*((*(_25229_a))._field_R))._field_Model.cast_ptr<_1c62c5b05_SlicingExprModel>(&__jule_any_type91);;
				if (((*(_25821_sem))._field_Expr == (*((*(_25229_a))._field_L))._field_Model)) {
					_1c651eada_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1c651be4a_MutSlicingExprModel>(_1c651be4a_MutSlicingExprModel{._field_Token=(*(_25821_sem))._field_Token, ._field_Expr=(*(_25821_sem))._field_Expr, ._field_Left=(*(_25821_sem))._field_Left, ._field_Right=(*(_25821_sem))._field_Right}), &__jule_any_type120));
					return true;;
				};
			}
		}
		_match_end_1ada13aec:;
	};
	return false;;
}



inline jule::Bool _1c65219bb_strAssign(_1c651e2e3_scopeOptimizer* _self_, jule::Ptr<_1c6323d51_Assign> _27232_a) {
	if ((!(_1a9eddc24_Str))) {
		return false;;
	};
	jule::Ptr<_1c64260eb_Prim> _27613_lp = _1c6420b73_Prim((*((*(_27232_a))._field_L))._field_Kind.ptr());;
	if (((_27613_lp == nullptr) || (!(_1c6429583_IsStr(_27613_lp.ptr()))))) {
		return false;;
	};
	return _1c652167a_substr(_self_, _27232_a);;
}



inline jule::Bool _1c6521d0c_sliceAssign(_1c651e2e3_scopeOptimizer* _self_, jule::Ptr<_1c6323d51_Assign> _28334_a) {
	if (((!(_1a9eddedd_Slice)) || (_1c6421bc9_Slc((*((*(_28334_a))._field_L))._field_Kind.ptr()) == nullptr))) {
		return false;;
	};
	return _1c652167a_substr(_self_, _28334_a);;
}



inline void _1c65220b5_optimizeAssign(_1c651e2e3_scopeOptimizer* _self_, jule::Ptr<_1c6323d51_Assign> _29137_assign) {
	if ((((*((*(_29137_assign))._field_Op))._field_Id == static_cast<jule::U64>(71LLU)) && _1c651a0ad_equalModels((*((*(_29137_assign))._field_L))._field_Model, (*((*(_29137_assign))._field_R))._field_Model))) {
		_1c651ecd8_removeCurrent(_self_);
		((*(_self_))._field_i)--;
		return;;
	};
	{
		
		if (_1c65219bb_strAssign(_self_, _29137_assign) || _1c6521d0c_sliceAssign(_self_, _29137_assign)) {
			_case_begin_1ada1b000:;
			{
				return;;
			}
		}
		_match_end_1ada19b58:;
	};
	static__1c6525a25_optimize(&((*((*(_29137_assign))._field_L))._field_Model));
	static__1c6525a25_optimize(&((*((*(_29137_assign))._field_R))._field_Model));
	{
		auto &_match_expr{ (*((*(_29137_assign))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(43LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1ada1c870:;
			{
				if ((_1a9edcc34_Math && (_1c64221e6_Struct((*((*(_29137_assign))._field_L))._field_Kind.ptr()) == nullptr))) {
					(*((*(_29137_assign))._field_Op))._field_Kind=(*((*(_29137_assign))._field_Op))._field_Kind.slice(0LL, ((*((*(_29137_assign))._field_Op))._field_Kind.len() - 1LL));
					jule::Any _31325_model = jule::Any(jule::new_ptr<_1c62c1ea8_BinopExprModel>(_1c62c1ea8_BinopExprModel{._field_Left=(*(_29137_assign))._field_L, ._field_Right=(*(_29137_assign))._field_R, ._field_Op=(*(_29137_assign))._field_Op}), &__jule_any_type111);;
					static__1c6525a25_optimize(&(_31325_model));
					{
						auto &_match_expr{ _31325_model };
						
						if (_match_expr.type == &__jule_any_type111) {
							_case_begin_1ada20972:;
							{
								(*(_29137_assign))._field_R=jule::new_ptr<_1c62c19ad_OperandExprModel>((*((*(_29137_assign))._field_R)));
								(*((*(_29137_assign))._field_Op))._field_Id=static_cast<jule::U64>(71LLU);
								(*((*(_29137_assign))._field_Op))._field_Kind=jule::Str("=", 1);
								(*((*(_29137_assign))._field_R))._field_Model=_31325_model;
								return;;
							}
						}
						_match_end_1ada207da:;
					};
					(*((*(_29137_assign))._field_Op))._field_Kind+=jule::Str("=", 1);
					return;;
				};
			}
		}
		_match_end_1ada1c81a:;
	};
	if (_1a9edc926_Append) {
		{
			auto &_match_expr{ (*((*(_29137_assign))._field_R))._field_Model };
			
			if (_match_expr.type == &__jule_any_type26) {
				_case_begin_1ada23711:;
				{
					jule::Ptr<_1c62c9543_BuiltinAppendCallExprModel> _33525_m = (*((*(_29137_assign))._field_R))._field_Model.cast_ptr<_1c62c9543_BuiltinAppendCallExprModel>(&__jule_any_type26);;
					if ((!(_1c652cb1a_areSameLvalueExprModel(&((*((*(_29137_assign))._field_L))._field_Model), &((*(_33525_m))._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ (*(_33525_m))._field_Elements };
						
						if (_match_expr.type == &__jule_any_type76) {
							_case_begin_1ada25999:;
							{
								_1c651eada_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1c651c973_PushToSliceExprModel>(_1c651c973_PushToSliceExprModel{._field_Dest=(*(_33525_m))._field_Dest, ._field_Elems=(*(_33525_m))._field_Elements.cast_ptr<_1c62c4362_SliceExprModel>(&__jule_any_type76)}), &__jule_any_type121));
							}
						}
						else {
							_case_begin_1ada255d1:;
							{
								_1c651eada_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1c651cd4c_AppendToSliceExprModel>(_1c651cd4c_AppendToSliceExprModel{._field_Dest=(*((*(_29137_assign))._field_L))._field_Model, ._field_Slice=(*(_33525_m))._field_Elements}), &__jule_any_type122));
							}
						}
						_match_end_1ada2557b:;
					};
				}
			}
			_match_end_1ada236ab:;
		};
	};
}



inline jule::Bool _1c6522406_tryOptimizeSwap(_1c651e2e3_scopeOptimizer* _self_, jule::Ptr<_1c632422a_MultiAssign>* _35739_assign) {
	if (((!(_1a9ede2a7_Assign)) || ((*((*(_35739_assign))))._field_L.len() != 2LL))) {
		return false;;
	};
	jule::Ptr<_1c62c76a6_TupleExprModel> _36117_tup;;
	{
		auto &_match_expr{ (*((*(_35739_assign))))._field_R };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1ada2821b:;
			{
				_36117_tup=(*((*(_35739_assign))))._field_R.cast_ptr<_1c62c76a6_TupleExprModel>(&__jule_any_type81);
			}
		}
		_match_end_1ada281b6:;
	};
	if (((_36117_tup == nullptr) || ((*(_36117_tup))._field_Datas.len() != 2LL))) {
		return false;;
	};
	if ((_1c651a0ad_equalModels((*((*((*(_35739_assign))))._field_L[0LL]))._field_Model, (*((*(_36117_tup))._field_Datas[0LL]))._field_Model) && _1c651a0ad_equalModels((*((*((*(_35739_assign))))._field_L[1LL]))._field_Model, (*((*(_36117_tup))._field_Datas[1LL]))._field_Model))) {
		_1c651ecd8_removeCurrent(_self_);
		((*(_self_))._field_i)--;
		return true;;
	};
	if (((!(_1c651a0ad_equalModels((*((*((*(_35739_assign))))._field_L[0LL]))._field_Model, (*((*(_36117_tup))._field_Datas[1LL]))._field_Model))) || (!(_1c651a0ad_equalModels((*((*((*(_35739_assign))))._field_L[1LL]))._field_Model, (*((*(_36117_tup))._field_Datas[0LL]))._field_Model))))) {
		return false;;
	};
	jule::Ptr<_1c651ab6e_SwapExprModel> _38317_model = jule::new_ptr<_1c651ab6e_SwapExprModel>(_1c651ab6e_SwapExprModel{._field_Left=(*((*(_35739_assign))))._field_L[0LL], ._field_Right=(*((*(_35739_assign))))._field_L[1LL]});;
	static__1c6525a25_optimize(&((*((*(_38317_model))._field_Left))._field_Model));
	static__1c6525a25_optimize(&((*((*(_38317_model))._field_Right))._field_Model));
	_1c651eada_setCurrentStmt(_self_, jule::Any(_38317_model, &__jule_any_type123));
	return true;;
}



inline void _1c65226ae_optimizeMultiAssign(_1c651e2e3_scopeOptimizer* _self_, jule::Ptr<_1c632422a_MultiAssign> _39342_assign) {
	if (_1c6522406_tryOptimizeSwap(_self_, &(_39342_assign))) {
		return;;
	};
	{
		auto expr = &((*(_39342_assign))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada306da:;
		if (it != expr_end) {
			jule::Ptr<_1c63dd35a_Data> _39821_l = *it;
			{
				if ((_39821_l != nullptr)) {
					static__1c6525a25_optimize(&((*(_39821_l))._field_Model));
				};
			}
			_iter_next_1ada306da:;
			++it;
			goto _iter_begin_1ada306da;
		}
		_iter_end_1ada306da:;
	};
	static__1c6525a25_optimize(&((*(_39342_assign))._field_R));
}



inline void _1c6522967_optimizeRet(_1c651e2e3_scopeOptimizer* _self_, jule::Ptr<_1c6325e52_RetSt> _40634_r) {
	static__1c6525a25_optimize(&((*(_40634_r))._field_Expr));
}



inline void _1c6522c20_optimizeStmt(_1c651e2e3_scopeOptimizer* _self_, jule::Any _41035_stmt) {
	{
		auto &_match_expr{ _41035_stmt };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1ada3281e:;
			{
				_1c6522ec8_optimizeChild(_self_, _41035_stmt.cast_ptr<_1c6320754_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1ada32885:;
			{
				_1c6520091_optimizeData(_self_, _41035_stmt.cast_ptr<_1c63dd35a_Data>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ada328eb:;
			{
				_1c6520349_optimizeVar(_self_, _41035_stmt.cast_ptr<_1c6389da6_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1ada32973:;
			{
				_1c6520602_optimizeConditional(_self_, _41035_stmt.cast_ptr<_1c632138c_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1ada329ea:;
			{
				_1c6521081_optimizeRangeIter(_self_, _41035_stmt.cast_ptr<_1c632258b_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1ada32a72:;
			{
				_1c6521339_optimizeWhileIter(_self_, _41035_stmt.cast_ptr<_1c6321b40_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1ada32ae9:;
			{
				_1c6522ec8_optimizeChild(_self_, (*(_41035_stmt.cast_ptr<_1c6321689_InfIter>(&__jule_any_type36)))._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1ada32b71:;
			{
				_1c65220b5_optimizeAssign(_self_, _41035_stmt.cast_ptr<_1c6323d51_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1ada32be8:;
			{
				_1c65226ae_optimizeMultiAssign(_self_, _41035_stmt.cast_ptr<_1c632422a_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1ada32c70:;
			{
				_1c6520cc8_optimizeMatch(_self_, _41035_stmt.cast_ptr<_1c632488a_Match>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1ada32ce7:;
			{
				_1c6522967_optimizeRet(_self_, _41035_stmt.cast_ptr<_1c6325e52_RetSt>(&__jule_any_type50));
			}
		}
		_match_end_1ada326dc:;
	};
}



inline void _1c6522ec8_optimizeChild(_1c651e2e3_scopeOptimizer* _self_, jule::Ptr<_1c6320754_Scope> _43736_child) {
	jule::Ptr<_1c651e2e3_scopeOptimizer> _43817_so = static__1c651e832_new(_43736_child);;
	_1c65231c6_optimize(_43817_so.ptr());
}



inline void _1c65231c6_optimize(_1c651e2e3_scopeOptimizer* _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*(_self_))._field_i < (*((*(_self_))._field_scope))._field_Stmts.len()); ((*(_self_))._field_i)++) {
		{
			_1c6522c20_optimizeStmt(_self_, (*((*(_self_))._field_scope))._field_Stmts[(*(_self_))._field_i]);
		}
	_iter_next_1ada383b3:;
	}
	_iter_end_1ada383b3:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c651e2e3_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1c6525a25_optimize(jule::Any* _5629_model) {
	if (_1c663730c_exprEnabled) {
		jule::Ptr<_1c65254c5_exprOptimizer> _5921_exop = jule::new_ptr<_1c65254c5_exprOptimizer>(_1c65254c5_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)(_5629_model))});;
		_1c652c2ce_do(_5921_exop.ptr());
	};
}



inline jule::Bool _1c6525d66_strCond(_1c65254c5_exprOptimizer* _self_, jule::Ptr<_1c62c1ea8_BinopExprModel> _6626_m) {
	jule::Ptr<_1c64260eb_Prim> _6713_lp = _1c6420b73_Prim((*((*(_6626_m))._field_Left))._field_Kind.ptr());;
	if (((_6713_lp == nullptr) || (!(_1c6429583_IsStr(_6713_lp.ptr()))))) {
		return false;;
	};
	if ((((*((*(_6626_m))._field_Op))._field_Id != static_cast<jule::U64>(50LLU)) && ((*((*(_6626_m))._field_Op))._field_Id != static_cast<jule::U64>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_6626_m))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ada4936e:;
			{
				std::swap((*(_6626_m))._field_Left, (*(_6626_m))._field_Right);
				goto _julec_label_1ada4ac88;
			}
		}
		_match_end_1ada49319:;
	};
	{
		auto &_match_expr{ (*((*(_6626_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ada47ea5:;
			{
				goto _match_end_1ada4aa35;
			}
		}
		else {
			_case_begin_1ada4aa8a:;
			{
				return false;;
			}
		}
		_match_end_1ada4aa35:;
	};
	_julec_label_1ada4ac88:;
	jule::Ptr<_1dc260590_Const> _8617_c = (*((*(_6626_m))._field_Right))._field_Model.cast_ptr<_1dc260590_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ (*((*(_6626_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1ada4c0b9:;
			{
				if ((_1dc262718_ReadStr(_8617_c.ptr())).empty()) {
					jule::Any _9025_model = jule::Any(jule::new_ptr<_1c651b08c_EmptyCompareExprModel>(_1c651b08c_EmptyCompareExprModel{._field_Expr=(*((*(_6626_m))._field_Left))._field_Model, ._field_Neg=false}), &__jule_any_type124);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_9025_model))))));
					goto _match_end_1ada4c053;
				};
				jule::Any _9721_model = jule::Any(jule::new_ptr<_1c651b8b7_StrCompExprModel>(_1c651b8b7_StrCompExprModel{._field_Left=(*((*(_6626_m))._field_Left))._field_Model, ._field_Right=_8617_c, ._field_NotEq=false}), &__jule_any_type125);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_9721_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ada4c141:;
			{
				if ((_1dc262718_ReadStr(_8617_c.ptr())).empty()) {
					jule::Any _10525_model = jule::Any(jule::new_ptr<_1c651b08c_EmptyCompareExprModel>(_1c651b08c_EmptyCompareExprModel{._field_Expr=(*((*(_6626_m))._field_Left))._field_Model, ._field_Neg=true}), &__jule_any_type124);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_10525_model))))));
					goto _match_end_1ada4c053;
				};
				jule::Any _11221_model = jule::Any(jule::new_ptr<_1c651b8b7_StrCompExprModel>(_1c651b8b7_StrCompExprModel{._field_Left=(*((*(_6626_m))._field_Left))._field_Model, ._field_Right=_8617_c, ._field_NotEq=true}), &__jule_any_type125);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_11221_model))))));
			}
		}
		_match_end_1ada4c053:;
	};
	return true;;
}



inline void _1c652611e_binary(_1c65254c5_exprOptimizer* _self_, jule::Ptr<_1c62c1ea8_BinopExprModel> _12225_m) {
	static__1c6525a25_optimize(&((*((*(_12225_m))._field_Left))._field_Model));
	static__1c6525a25_optimize(&((*((*(_12225_m))._field_Right))._field_Model));
	{
		auto &_match_expr{ (*((*(_12225_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ada518a4:;
			{
				goto _match_end_1ada54b1b;
			}
		}
		else {
			_case_begin_1ada54b71:;
			{
				return;;
			}
		}
		_match_end_1ada54b1b:;
	};
	if ((_1a9edd95a_Cond && _1c6525d66_strCond(_self_, _12225_m))) {
		return;;
	};
	if ((!(_1a9edcc34_Math))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_12225_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ada55d70:;
			{
				jule::Bool _14218_ok = false;;
				jule::U64 _14222_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1c652c752_checkForBitShiftOpt(&((*(_12225_m))._field_Left), &((*(_12225_m))._field_Right));
					_14218_ok = __jule_assign_result.__jule_result_arg0;
					_14222_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_14218_ok) {
					(*((*(_12225_m))._field_Op))._field_Id=static_cast<jule::U64>(56LLU);
					(*((*(_12225_m))._field_Op))._field_Kind=jule::Str("<<", 2);
					jule::Ptr<_1dc260590_Const> _14625_c = (*((*(_12225_m))._field_Right))._field_Model.cast_ptr<_1dc260590_Const>(&__jule_any_type19);;
					_1dc2637b3_SetU64(_14625_c.ptr(), _14222_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1ada55de7:;
			{
				jule::Bool _15118_ok = false;;
				jule::U64 _15122_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1c652c752_checkForBitShiftOpt(&((*(_12225_m))._field_Left), &((*(_12225_m))._field_Right));
					_15118_ok = __jule_assign_result.__jule_result_arg0;
					_15122_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_15118_ok) {
					(*((*(_12225_m))._field_Op))._field_Id=static_cast<jule::U64>(57LLU);
					(*((*(_12225_m))._field_Op))._field_Kind=jule::Str(">>", 2);
					jule::Ptr<_1dc260590_Const> _15525_c = (*((*(_12225_m))._field_Right))._field_Model.cast_ptr<_1dc260590_Const>(&__jule_any_type19);;
					_1dc2637b3_SetU64(_15525_c.ptr(), _15122_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1ada55e6e:;
			{
				jule::Ptr<_1dc260590_Const> _16021_c = (*((*(_12225_m))._field_Right))._field_Model.cast_ptr<_1dc260590_Const>(&__jule_any_type19);;
				jule::F64 _16117_d = _1dc263252_AsF64(_16021_c.ptr());;
				if ((_16117_d == 2LL)) {
					(*((*(_12225_m))._field_Op))._field_Id=static_cast<jule::U64>(65LLU);
					(*((*(_12225_m))._field_Op))._field_Kind=jule::Str("&", 1);
					_1dc26350a_SetI64(_16021_c.ptr(), 1LL);
				};
			}
		}
		_match_end_1ada55ce8:;
	};
	jule::Any _16817_model = jule::Any(jule::new_ptr<_1c651c247_UnsafeBinopExprModel>(_1c651c247_UnsafeBinopExprModel{._field_Node=_12225_m}), &__jule_any_type126);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_16817_model))))));
}



inline void _1c65263c7_unary(_1c65254c5_exprOptimizer* _self_, jule::Ptr<_1c62c2382_UnaryExprModel> _17224_m) {
	static__1c6525a25_optimize(&((*((*(_17224_m))._field_Expr))._field_Model));
	if ((!(_1a9edd581_Ptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_17224_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ada5ea16:;
			{
				{
					auto &_match_expr{ (*((*(_17224_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type110) {
						_case_begin_1ada6160b:;
						{
							jule::Ptr<_1c62c2382_UnaryExprModel> _18125_um = (*((*(_17224_m))._field_Expr))._field_Model.cast_ptr<_1c62c2382_UnaryExprModel>(&__jule_any_type110);;
							if (((*((*(_18125_um))._field_Op))._field_Id == static_cast<jule::U64>(65LLU))) {
								(*((*(_self_))._field_model))=(*((*(_18125_um))._field_Expr))._field_Model;
							};
						}
					}
					_match_end_1ada615a6:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ada609a1:;
			{
				{
					auto &_match_expr{ (*((*(_17224_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1ada638a5:;
						{
							jule::Ptr<_1c6389da6_Var> _18925_v = (*((*(_17224_m))._field_Expr))._field_Model.cast_ptr<_1c6389da6_Var>(&__jule_any_type8);;
							if ((*(_18925_v))._field_Reference) {
								jule::Any _19129_model = jule::Any(jule::new_ptr<_1c651b389_RefExprModel>(_1c651b389_RefExprModel{._field_Var=_18925_v}), &__jule_any_type127);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_19129_model))))));
							};
						}
					}
					_match_end_1ada63850:;
				};
			}
		}
		_match_end_1ada60891:;
	};
}



inline void _1c6526680_structureLit(_1c65254c5_exprOptimizer* _self_, jule::Ptr<_1c62c2c56_StructLitExprModel> _19831_m) {
	{
		auto expr = &((*(_19831_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada61a3a:;
		if (it != expr_end) {
			jule::Ptr<_1c62c28b0_StructArgExprModel> _19921_arg = *it;
			{
				static__1c6525a25_optimize(&((*((*(_19921_arg))._field_Expr))._field_Model));
			}
			_iter_next_1ada61a3a:;
			++it;
			goto _iter_begin_1ada61a3a;
		}
		_iter_end_1ada61a3a:;
	};
}



inline void _1c6526938_allocStructure(_1c65254c5_exprOptimizer* _self_, jule::Ptr<_1c62c3053_AllocStructLitExprModel> _20433_m) {
	_1c6526680_structureLit(_self_, (*(_20433_m))._field_Lit);
}



inline void _1c6526be1_casting(_1c65254c5_exprOptimizer* _self_, jule::Ptr<_1c62c35d6_CastingExprModel> _20826_m) {
	static__1c6525a25_optimize(&((*(_20826_m))._field_Expr));
}



inline void _1c6526e99_args(_1c65254c5_exprOptimizer* _self_, jule::Slice<jule::Any>* _21224_args) {
	{
		auto expr = _21224_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada67645:;
		if (it != expr_end) {
			jule::I64 _21314_i = it - expr->begin();
			jule::Any _21321_arg = *it;
			{
				static__1c6525a25_optimize(&(_21321_arg));
				(*(_21224_args))[_21314_i]=_21321_arg;
			}
			_iter_next_1ada67645:;
			++it;
			_21314_i++;
			goto _iter_begin_1ada67645;
		}
		_iter_end_1ada67645:;
	};
}



inline void _1c6527252_scope(_1c65254c5_exprOptimizer* _self_, jule::Ptr<_1c6320754_Scope>* _21925_s) {
	jule::Ptr<_1c651e2e3_scopeOptimizer> _22017_scopt = static__1c651e832_new((*(_21925_s)));;
	_1c65231c6_optimize(_22017_scopt.ptr());
}



inline jule::Bool _1c6527593_optimizeSpecialFuncCalls(_1c65254c5_exprOptimizer* _self_, jule::Ptr<_1c62c3e88_FnCallExprModel>* _22444_m) {
	_1a9eda5a0_stdCacheData _22514_data;;
	jule::Bool _22520_ok = false;;
	_1a9eda9ce_stdCache.lookup(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*((*(_22444_m))))._field_Func)), &(_22514_data), &(_22520_ok));
	if ((!(_22520_ok))) {
		return false;;
	};
	_22514_data._field_do(_self_, &(_22514_data), _22444_m);
	return true;;
}



inline void _1c652784b_funcCall(_1c65254c5_exprOptimizer* _self_, jule::Ptr<_1c62c3e88_FnCallExprModel> _23327_m) {
	if ((_1c66378a1_stdEnabled && _1c6527593_optimizeSpecialFuncCalls(_self_, &(_23327_m)))) {
		return;;
	};
	static__1c6525a25_optimize(&((*(_23327_m))._field_Expr));
	_1c6526e99_args(_self_, &((*(_23327_m))._field_Args));
	if (((*(_23327_m))._field_Except != nullptr)) {
		_1c6527252_scope(_self_, &((*(_23327_m))._field_Except));
	};
}



inline void _1c6527b04_slice(_1c65254c5_exprOptimizer* _self_, jule::Ptr<_1c62c4362_SliceExprModel> _24424_m) {
	_1c6526e99_args(_self_, &((*(_24424_m))._field_Elems));
}



inline void _1c6527dac_array(_1c65254c5_exprOptimizer* _self_, jule::Ptr<_1c62c73a9_ArrayExprModel> _24824_m) {
	if ((((*(_24824_m))._field_Elems.len() == 2LL) && ((*(_24824_m))._field_Elems[1LL] == nullptr))) {
		jule::Any _25021_elem = (*(_24824_m))._field_Elems[0LL];;
		static__1c6525a25_optimize(&(_25021_elem));
		(*(_24824_m))._field_Elems[0LL]=_25021_elem;
	};
	_1c6526e99_args(_self_, &((*(_24824_m))._field_Elems));
}



inline void _1c6528165_indexing(_1c65254c5_exprOptimizer* _self_, jule::Ptr<_1c62c4818_IndexingExprModel> _25727_m) {
	static__1c6525a25_optimize(&((*((*(_25727_m))._field_Expr))._field_Model));
	static__1c6525a25_optimize(&((*((*(_25727_m))._field_Index))._field_Model));
	if ((!(_1a9edceed_Access))) {
		return;;
	};
	jule::Bool _26313_array = (_1c6421943_Arr((*((*(_25727_m))._field_Expr))._field_Kind.ptr()) != nullptr);;
	if ((_26313_array && _1c63ddc2e_IsConst((*(_25727_m))._field_Index.ptr()))) {
		jule::Any _26621_model = jule::Any(jule::new_ptr<_1c651c544_UnsafeIndexingExprModel>(_1c651c544_UnsafeIndexingExprModel{._field_Node=_25727_m}), &__jule_any_type128);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_26621_model))))));
		return;;
	};
	{
		auto &_match_expr{ (*((*(_25727_m))._field_Index))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ada7340e:;
			{
				jule::Ptr<_1c6389da6_Var> _27217_i = (*((*(_25727_m))._field_Index))._field_Model.cast_ptr<_1c6389da6_Var>(&__jule_any_type8);;
				if (((*(_27217_i))._field_Mutable || ((*(_27217_i))._field_IterRelation == nullptr))) {
					goto _match_end_1ada733a9;
				};
				{
					auto &_match_expr{ (*((*(_25727_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1ada751d0:;
						{
							jule::Ptr<_1c6389da6_Var> _27821_r = (*((*(_25727_m))._field_Expr))._field_Model.cast_ptr<_1c6389da6_Var>(&__jule_any_type8);;
							if (((*((*(_27217_i))._field_IterRelation))._field_Range == _27821_r)) {
								jule::Any _28129_model = jule::Any(jule::new_ptr<_1c651c544_UnsafeIndexingExprModel>(_1c651c544_UnsafeIndexingExprModel{._field_Node=_25727_m}), &__jule_any_type128);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_28129_model))))));
							};
						}
					}
					_match_end_1ada7517a:;
				};
			}
		}
		_match_end_1ada733a9:;
	};
}



inline void _1c652841d_anonFunc(_1c65254c5_exprOptimizer* _self_, jule::Ptr<_1c62c4be2_AnonFnExprModel> _28827_m) {
	_1c6527252_scope(_self_, &((*((*(_28827_m))._field_Func))._field_Scope));
}



inline void _1c65286c6_mapExpr(_1c65254c5_exprOptimizer* _self_, jule::Ptr<_1c62c5572_MapExprModel> _29226_m) {
	{
		auto expr = &((*(_29226_m))._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada77d5e:;
		if (it != expr_end) {
			jule::Ptr<_1c62c50bb_KeyValPairExprModel> _29321_pair = *it;
			{
				static__1c6525a25_optimize(&((*(_29321_pair))._field_Key));
				static__1c6525a25_optimize(&((*(_29321_pair))._field_Val));
			}
			_iter_next_1ada77d5e:;
			++it;
			goto _iter_begin_1ada77d5e;
		}
		_iter_end_1ada77d5e:;
	};
}



inline void _1c652897e_slicing(_1c65254c5_exprOptimizer* _self_, jule::Ptr<_1c62c5b05_SlicingExprModel> _29926_m) {
	static__1c6525a25_optimize(&((*(_29926_m))._field_Expr));
	static__1c6525a25_optimize(&((*(_29926_m))._field_Left));
	if (((*(_29926_m))._field_Right != nullptr)) {
		static__1c6525a25_optimize(&((*(_29926_m))._field_Right));
	};
}



inline void _1c6528c37_traitSub(_1c65254c5_exprOptimizer* _self_, jule::Ptr<_1c62c6188_TraitSubIdentExprModel> _30727_m) {
	static__1c6525a25_optimize(&((*(_30727_m))._field_Expr));
}



inline void _1c6528ee0_structureSub(_1c65254c5_exprOptimizer* _self_, jule::Ptr<_1c62c6a29_StructSubIdentExprModel> _31131_m) {
	static__1c6525a25_optimize(&((*((*(_31131_m))._field_Expr))._field_Model));
}



inline void _1c6529298_tuple(_1c65254c5_exprOptimizer* _self_, jule::Ptr<_1c62c76a6_TupleExprModel> _31524_m) {
	{
		auto expr = &((*(_31524_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada7b1a3:;
		if (it != expr_end) {
			jule::Ptr<_1c63dd35a_Data> _31621_d = *it;
			{
				static__1c6525a25_optimize(&((*(_31621_d))._field_Model));
			}
			_iter_next_1ada7b1a3:;
			++it;
			goto _iter_begin_1ada7b1a3;
		}
		_iter_end_1ada7b1a3:;
	};
}



inline void _1c6529551_newCall(_1c65254c5_exprOptimizer* _self_, jule::Ptr<_1c62c8333_BuiltinNewCallExprModel> _32126_m) {
	if (((*(_32126_m))._field_Init != nullptr)) {
		static__1c6525a25_optimize(&((*(_32126_m))._field_Init));
	};
}



inline void _1c6529809_outCall(_1c65254c5_exprOptimizer* _self_, jule::Ptr<_1c62c7a80_BuiltinOutCallExprModel> _32726_m) {
	static__1c6525a25_optimize(&((*(_32726_m))._field_Expr));
}



inline void _1c6529ab2_outlnCall(_1c65254c5_exprOptimizer* _self_, jule::Ptr<_1c62c7e59_BuiltinOutlnCallExprModel> _33128_m) {
	static__1c6525a25_optimize(&((*(_33128_m))._field_Expr));
}



inline void _1c6529d6a_panicCall(_1c65254c5_exprOptimizer* _self_, jule::Ptr<_1c62c870c_BuiltinPanicCallExprModel> _33528_m) {
	static__1c6525a25_optimize(&((*(_33528_m))._field_Expr));
}



inline void _1c652a123_assertCall(_1c65254c5_exprOptimizer* _self_, jule::Ptr<_1c62c8bb3_BuiltinAssertCallExprModel> _33929_m) {
	static__1c6525a25_optimize(&((*(_33929_m))._field_Expr));
}



inline void _1c652a3cb_errorCall(_1c65254c5_exprOptimizer* _self_, jule::Ptr<_1c62ca7b9_BuiltinErrorCallExprModel> _34328_m) {
	static__1c6525a25_optimize(&((*((*(_34328_m))._field_Err))._field_Model));
}



inline void _1c652a684_makeCall(_1c65254c5_exprOptimizer* _self_, jule::Ptr<_1c62c9169_BuiltinMakeCallExprModel> _34727_m) {
	if (((*(_34727_m))._field_Len != nullptr)) {
		static__1c6525a25_optimize(&((*(_34727_m))._field_Len));
	};
	if (((*(_34727_m))._field_Cap != nullptr)) {
		static__1c6525a25_optimize(&((*(_34727_m))._field_Cap));
	};
}



inline void _1c652a93c_appendCall(_1c65254c5_exprOptimizer* _self_, jule::Ptr<_1c62c9543_BuiltinAppendCallExprModel> _35629_m) {
	static__1c6525a25_optimize(&((*(_35629_m))._field_Dest));
	static__1c6525a25_optimize(&((*(_35629_m))._field_Elements));
}



inline void _1c652abe5_lenCall(_1c65254c5_exprOptimizer* _self_, jule::Ptr<_1c62c9840_BuiltinLenCallExprModel> _36126_m) {
	static__1c6525a25_optimize(&((*((*(_36126_m))._field_Expr))._field_Model));
}



inline void _1c652ae9d_capCall(_1c65254c5_exprOptimizer* _self_, jule::Ptr<_1c62c9b3c_BuiltinCapCallExprModel> _36526_m) {
	static__1c6525a25_optimize(&((*((*(_36526_m))._field_Expr))._field_Model));
}



inline void _1c652b256_deleteCall(_1c65254c5_exprOptimizer* _self_, jule::Ptr<_1c62ca016_BuiltinDeleteCallExprModel> _36929_m) {
	static__1c6525a25_optimize(&((*((*(_36929_m))._field_Dest))._field_Model));
	if (((*(_36929_m))._field_Key != nullptr)) {
		static__1c6525a25_optimize(&((*((*(_36929_m))._field_Key))._field_Model));
	};
}



inline void _1c652b50e_sizeof(_1c65254c5_exprOptimizer* _self_, jule::Ptr<_1c62c6375_SizeofExprModel> _37625_m) {
	static__1c6525a25_optimize(&((*(_37625_m))._field_Expr));
}



inline void _1c652b7b7_alignof(_1c65254c5_exprOptimizer* _self_, jule::Ptr<_1c62caee5_AlignofExprModel> _38026_m) {
	static__1c6525a25_optimize(&((*(_38026_m))._field_Expr));
}



inline void _1c652ba70_integratedToStr(_1c65254c5_exprOptimizer* _self_, jule::Ptr<_1c62cb5de_IntegratedToStrExprModel> _38434_m) {
	static__1c6525a25_optimize(&((*(_38434_m))._field_Expr));
}



inline void _1c652bd28_free(_1c65254c5_exprOptimizer* _self_, jule::Ptr<_1c62cbcb5_FreeExprModel> _38823_m) {
	static__1c6525a25_optimize(&((*(_38823_m))._field_Expr));
}



inline void _1c652c0d1_backendEmit(_1c65254c5_exprOptimizer* _self_, jule::Ptr<_1c62cb9b8_BackendEmitExprModel> _39230_m) {
	_1c6526e99_args(_self_, &((*(_39230_m))._field_Exprs));
}



inline void _1c652c2ce_do(_1c65254c5_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_model)) };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1ada86488:;
			{
				_1c652611e_binary(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c62c1ea8_BinopExprModel>(&__jule_any_type111));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ada864ee:;
			{
				_1c65263c7_unary(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c62c2382_UnaryExprModel>(&__jule_any_type110));
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1ada86565:;
			{
				_1c6526680_structureLit(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c62c2c56_StructLitExprModel>(&__jule_any_type94));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1ada865dc:;
			{
				_1c6526938_allocStructure(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c62c3053_AllocStructLitExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1ada86664:;
			{
				_1c6526be1_casting(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c62c35d6_CastingExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1ada866db:;
			{
				_1c652784b_funcCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c62c3e88_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1ada86763:;
			{
				_1c6527b04_slice(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c62c4362_SliceExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1ada867da:;
			{
				_1c6527dac_array(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c62c73a9_ArrayExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1ada86862:;
			{
				_1c6528165_indexing(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c62c4818_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1ada868d9:;
			{
				_1c652841d_anonFunc(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c62c4be2_AnonFnExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ada86961:;
			{
				_1c65286c6_mapExpr(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c62c5572_MapExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1ada869d8:;
			{
				_1c652897e_slicing(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c62c5b05_SlicingExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1ada86a60:;
			{
				_1c6528c37_traitSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c62c6188_TraitSubIdentExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1ada86ad7:;
			{
				_1c6528ee0_structureSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c62c6a29_StructSubIdentExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1ada86b5e:;
			{
				_1c6529298_tuple(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c62c76a6_TupleExprModel>(&__jule_any_type81));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1ada86bd6:;
			{
				_1c6529809_outCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c62c7a80_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1ada86c5d:;
			{
				_1c6529ab2_outlnCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c62c7e59_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1ada86cd5:;
			{
				_1c6529551_newCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c62c8333_BuiltinNewCallExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1ada86d5c:;
			{
				_1c6529d6a_panicCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c62c870c_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1ada86dd4:;
			{
				_1c652a123_assertCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c62c8bb3_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ada86e5b:;
			{
				_1c652a3cb_errorCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c62ca7b9_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1ada86ed3:;
			{
				_1c652a684_makeCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c62c9169_BuiltinMakeCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1ada8705a:;
			{
				_1c652a93c_appendCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c62c9543_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1ada870d2:;
			{
				_1c652abe5_lenCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c62c9840_BuiltinLenCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1ada87159:;
			{
				_1c652ae9d_capCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c62c9b3c_BuiltinCapCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1ada871d1:;
			{
				_1c652b256_deleteCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c62ca016_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1ada87258:;
			{
				_1c652b50e_sizeof(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c62c6375_SizeofExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1ada872d0:;
			{
				_1c652b7b7_alignof(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c62caee5_AlignofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1ada87357:;
			{
				_1c652ba70_integratedToStr(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c62cb5de_IntegratedToStrExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1ada873ce:;
			{
				_1c652bd28_free(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c62cbcb5_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1ada87456:;
			{
				_1c652c0d1_backendEmit(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c62cb9b8_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_1ada861e1:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c65254c5_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a9eda5a0_stdCacheData _Src) {
	_Stream << "stdCacheData{";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "do:" << _Src._field_do;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c6637b37_Optimizer> static__1c6638077_New(jule::Ptr<_1a9ed6249_IR>* _2724_ir) {
	return jule::new_ptr<_1c6637b37_Optimizer>(_1c6637b37_Optimizer{._field_ir=(*(_2724_ir))});;
}



inline void _1c6638330_optimizeGlobal(_1c6637b37_Optimizer* _self_, jule::Ptr<_1c6389da6_Var>* _3338_v) {
	if ((!((*((*(_3338_v))))._field_Binded))) {
		static__1c6525a25_optimize(&((*((*((*((*(_3338_v))))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1c66385d8_optimizeFunction(_1c6637b37_Optimizer* _self_, jule::Ptr<_1c62cebec_Fn>* _3940_func) {
	if ((*((*(_3940_func))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_3940_func))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adaa394a:;
		if (it != expr_end) {
			jule::Ptr<_1c62d2b01_FnIns> _4321_ins = *it;
			{
				jule::Ptr<_1c651e2e3_scopeOptimizer> _4421_so = static__1c651e832_new((*(_4321_ins))._field_Scope);;
				_1c65231c6_optimize(_4421_so.ptr());
			}
			_iter_next_1adaa394a:;
			++it;
			goto _iter_begin_1adaa394a;
		}
		_iter_end_1adaa394a:;
	};
}



inline void _1c6638891_optimizeStruct(_1c6637b37_Optimizer* _self_, jule::Ptr<_1c62b9d3b_Struct>* _4938_s) {
	if ((*((*(_4938_s))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_4938_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adaa52ed:;
		if (it != expr_end) {
			jule::Ptr<_1c62bcab9_StructIns> _5321_ins = *it;
			{
				{
					auto expr = &((*(_5321_ins))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1adaa5b8e:;
					if (it != expr_end) {
						jule::Ptr<_1c62bc019_FieldIns> _5425_f = *it;
						{
							if (((*(_5425_f))._field_Default != nullptr)) {
								static__1c6525a25_optimize(&((*((*(_5425_f))._field_Default))._field_Model));
							};
						}
						_iter_next_1adaa5b8e:;
						++it;
						goto _iter_begin_1adaa5b8e;
					}
					_iter_end_1adaa5b8e:;
				};
				{
					auto expr = &((*(_5321_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1adaa7157:;
					if (it != expr_end) {
						jule::Ptr<_1c62cebec_Fn> _5925_m = *it;
						{
							_1c66385d8_optimizeFunction(_self_, &(_5925_m));
						}
						_iter_next_1adaa7157:;
						++it;
						goto _iter_begin_1adaa7157;
					}
					_iter_end_1adaa7157:;
				};
			}
			_iter_next_1adaa52ed:;
			++it;
			goto _iter_begin_1adaa52ed;
		}
		_iter_end_1adaa52ed:;
	};
}



inline void _1c6638b49_optimizeGlobals(_1c6637b37_Optimizer* _self_, jule::Ptr<_1c6349915_Package>* _6539_p) {
	{
		auto expr = &((*((*(_6539_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adaa74a9:;
		if (it != expr_end) {
			jule::Ptr<_1c63d8135_SymbolTable> _6621_f = *it;
			{
				{
					auto expr = &((*(_6621_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1adaa8246:;
					if (it != expr_end) {
						jule::Ptr<_1c6389da6_Var> _6725_v = *it;
						{
							_1c6638330_optimizeGlobal(_self_, &(_6725_v));
						}
						_iter_next_1adaa8246:;
						++it;
						goto _iter_begin_1adaa8246;
					}
					_iter_end_1adaa8246:;
				};
			}
			_iter_next_1adaa74a9:;
			++it;
			goto _iter_begin_1adaa74a9;
		}
		_iter_end_1adaa74a9:;
	};
}



inline void _1c6638e02_optimizeFunctions(_1c6637b37_Optimizer* _self_, jule::Ptr<_1c6349915_Package>* _7341_p) {
	{
		auto expr = &((*((*(_7341_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adaa890b:;
		if (it != expr_end) {
			jule::Ptr<_1c63d8135_SymbolTable> _7421_f = *it;
			{
				{
					auto expr = &((*(_7421_f))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1adaa9687:;
					if (it != expr_end) {
						jule::Ptr<_1c62cebec_Fn> _7525_func = *it;
						{
							_1c66385d8_optimizeFunction(_self_, &(_7525_func));
						}
						_iter_next_1adaa9687:;
						++it;
						goto _iter_begin_1adaa9687;
					}
					_iter_end_1adaa9687:;
				};
			}
			_iter_next_1adaa890b:;
			++it;
			goto _iter_begin_1adaa890b;
		}
		_iter_end_1adaa890b:;
	};
}



inline void _1c66391aa_optimizeStructs(_1c6637b37_Optimizer* _self_, jule::Ptr<_1c6349915_Package>* _8139_p) {
	{
		auto expr = &((*((*(_8139_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adaa9d4c:;
		if (it != expr_end) {
			jule::Ptr<_1c63d8135_SymbolTable> _8221_f = *it;
			{
				{
					auto expr = &((*(_8221_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1adaaaac8:;
					if (it != expr_end) {
						jule::Ptr<_1c62b9d3b_Struct> _8325_s = *it;
						{
							_1c6638891_optimizeStruct(_self_, &(_8325_s));
						}
						_iter_next_1adaaaac8:;
						++it;
						goto _iter_begin_1adaaaac8;
					}
					_iter_end_1adaaaac8:;
				};
			}
			_iter_next_1adaa9d4c:;
			++it;
			goto _iter_begin_1adaa9d4c;
		}
		_iter_end_1adaa9d4c:;
	};
}



inline void _1c6639463_optimizePackage(_1c6637b37_Optimizer* _self_, jule::Ptr<_1c6349915_Package>* _8939_p) {
	_1c6638b49_optimizeGlobals(_self_, _8939_p);
	_1c6638e02_optimizeFunctions(_self_, _8939_p);
	_1c66391aa_optimizeStructs(_self_, _8939_p);
}



inline void _1c6639661_Optimize(_1c6637b37_Optimizer* _self_) {
	_1c66398d6_detectEnabled();
	if (_1c66378a1_stdEnabled) {
		_1a9edac43_buildCache(&((*(_self_))._field_ir));
	};
	if (_1a9edc65c_Deadcode) {
		_1aa133462_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1c66375d7_scopeEnabled || _1c663730c_exprEnabled)) {
		{
			auto expr = &((*((*(_self_))._field_ir))._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1adaac4d1:;
			if (it != expr_end) {
				jule::Ptr<_1c63469de_ImportInfo> _10825_u = *it;
				{
					if ((!((*(_10825_u))._field_Binded))) {
						_1c6639463_optimizePackage(_self_, &((*(_10825_u))._field_Package));
					};
				}
				_iter_next_1adaac4d1:;
				++it;
				goto _iter_begin_1adaac4d1;
			}
			_iter_end_1adaac4d1:;
		};
		_1c6639463_optimizePackage(_self_, &((*((*(_self_))._field_ir))._field_Main));
	};
	if (_1a9edc65c_Deadcode) {
		_1aa138aa5_EliminateScopes(&((*(_self_))._field_ir));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c6637b37_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1c665e7da_Reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__1c6639c7c_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__1c665e7da_Reset();
}





std::ostream &operator<<(std::ostream &_Stream, _1c66608eb_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1c66622e3_LogFlat(_221968cb9_Log* _1424_l) {
	jule::outln((*(_1424_l))._field_Text);
}



inline void static__1c6662524_LogError(_221968cb9_Log* _1925_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out((*(_1925_l))._field_Text);
	static__1c665e7da_Reset();
	if (((*(_1925_l))._field_Path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out((*(_1925_l))._field_Path);
	};
	if ((((*(_1925_l))._field_Row != 0LL) && ((*(_1925_l))._field_Column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_1dc250063_Itoa((*(_1925_l))._field_Row));
		jule::out(jule::Str(":", 1));
		jule::out(_1dc250063_Itoa((*(_1925_l))._field_Column));
	};
	if (((*(_1925_l))._field_Line.len() != 0LL)) {
		jule::Str _3621_line = _2218c55b6_TrimLeft((*(_1925_l))._field_Line, jule::Str("\r\n\v\b ", 5));;
		jule::I64 _3721_offset = (((*(_1925_l))._field_Line.len() - _3621_line.len()) + 1LL);;
		jule::I64 _3821_oldLen = _3621_line.len();;
		_3621_line=_2218c55b6_TrimLeft(_3621_line, jule::Str("\t", 1));
		if ((_3821_oldLen != _3621_line.len())) {
			_3721_offset+=((_3821_oldLen - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _1dc250063_Itoa((*(_1925_l))._field_Row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_2218bc547_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_2218bc547_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(((*(_1925_l))._field_Column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if (((*(_1925_l))._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_2218bc547_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__1c6639c7c_Print(jule::Str("\033[95m", 5), jule::Str("suggestion: ", 12));
			jule::out((*(_1925_l))._field_Suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__1c6662755_Log(_221968cb9_Log* _6520_l) {
	{
		auto &_match_expr{ (*(_6520_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1adabb27b:;
			{
				static__1c66622e3_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1adabb303:;
			{
				static__1c6662524_LogError(_6520_l);
			}
		}
		_match_end_1adabb1e3:;
	};
}



inline void static__1c6662986_PrintLogs(jule::Slice<_221968cb9_Log>* _7526_logs) {
	{
		auto expr = _7526_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adab761d:;
		if (it != expr_end) {
			_221968cb9_Log *_7616_l = it;
			{
				static__1c6662755_Log(_7616_l);
			}
			_iter_next_1adab761d:;
			++it;
			goto _iter_begin_1adab761d;
		}
		_iter_end_1adab761d:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_1dc250063_Itoa(static_cast<jule::I64>((*(_7526_logs)).len())));
	jule::outln(jule::Str(" error generated ===", 20));
}





std::ostream &operator<<(std::ostream &_Stream, _1c6662029_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aaa99aa9_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _1aaa9a280_Time static__1aaa9a637_Unix(jule::U64 _9120_sec) {
	return _1aaa9a280_Time{._field_sec=_9120_sec};;
}



inline _1aaa9a280_Time static__1aaa9a846_Now(void) {
	return static__1aaa9a637_Unix(static_cast<jule::U64>(_1aaa9c370_unix()));;
}



inline _1aaa99aa9_AbsTime _1aaa9c02e_Abs(_1aaa9a280_Time* _self_) {
	jule::U64 _12713_secs = ((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_remSecs = (_12713_secs % 86400LL);;
	if ((_12917_remSecs < 0LLU)) {
		_12917_remSecs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qcCycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_remDays = (_12817_days % 146097LL);;
	if ((_13617_remDays < 0LLU)) {
		_13617_remDays+=146097LLU;
		(_13517_qcCycles)--;
	};
	jule::U64 _14217_cCycles = (_13617_remDays / 36524LLU);;
	if ((_14217_cCycles == 4LLU)) {
		(_14217_cCycles)--;
	};
	_13617_remDays-=(_14217_cCycles * 36524LLU);
	jule::U64 _14817_qCycles = (_13617_remDays / 1461LLU);;
	if ((_14817_qCycles == 25LLU)) {
		(_14817_qCycles)--;
	};
	_13617_remDays-=(_14817_qCycles * 1461LLU);
	jule::U64 _15417_remYears = (_13617_remDays / 365LLU);;
	if ((_15417_remYears == 4LLU)) {
		(_15417_remYears)--;
	};
	_13617_remDays-=(_15417_remYears * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_remYears == 0LLU) && ((_14817_qCycles > 0LLU) || (_14217_cCycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_yDay = (((_13617_remDays + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_yDay >= (365LLU + _16017_leap))) {
		_16417_yDay-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_1aaa99081_mdays[static_cast<jule::I64>(_16917_months)] <= _13617_remDays); (_16917_months)++) {
		{
			_13617_remDays-=_1aaa99081_mdays[static_cast<jule::I64>(_16917_months)];
		}
	_iter_next_1adaecb3c:;
	}
	_iter_end_1adaecb3c:;;
	_1aaa99aa9_AbsTime _17417_t = _1aaa99aa9_AbsTime{};;
	_17417_t._field_Year=static_cast<jule::U64>(((((_15417_remYears + (4LLU * _14817_qCycles)) + (100LLU * _14217_cCycles)) + (400LLU * _13517_qcCycles)) + 100LLU));
	_17417_t._field_Month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_Month >= 12LLU)) {
		_17417_t._field_Month-=12LLU;
		(_17417_t._field_Year)++;
	};
	_17417_t._field_Month+=1LLU;
	_17417_t._field_Year+=1900LLU;
	_17417_t._field_Day=static_cast<jule::U64>((_13617_remDays + 1LLU));
	_17417_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_WeekDay < 0LLU)) {
		_17417_t._field_WeekDay+=7LLU;
	};
	_17417_t._field_YearDay=_16417_yDay;
	_17417_t._field_Hour=static_cast<jule::U64>((_12917_remSecs / 3600LLU));
	_17417_t._field_Minute=static_cast<jule::U64>(((_12917_remSecs / 60LLU) % 60LL));
	_17417_t._field_Second=static_cast<jule::U64>((_12917_remSecs % 60LL));
	return _17417_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aaa9a280_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa9c4e9b_scopeCoder> static__1aa9c55b7_new(jule::Ptr<_1aaaa472e_ObjectCoder>* _6524_oc) {
	return jule::new_ptr<_1aa9c4e9b_scopeCoder>(_1aa9c4e9b_scopeCoder{._field_oc=(*(_6524_oc))});;
}



inline void _1adb941bc_iterHead(jule::Ptr<_1aa9c4e9b_scopeCoder> _self_, jule::Ptr<_1c632258b_RangeIter>* _7232_it, jule::Bool* _7244_ref, jule::Str* _7256_begin) {
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("{\n", 2));
	_1aaaa50d1_addIndent((*(_self_))._field_oc);
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("auto expr = ", 12));
	if ((_1a9edc34e_Copy && _1aa9cb601_isCopyOptimizable(&((*((*(_7232_it))))._field_Expr)))) {
		(*(_7244_ref))=true;
		{
			auto &_match_expr{ (*((*((*(_7232_it))))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1adb958b6:;
				{
					jule::Ptr<_1c6389da6_Var> _8121_v = (*((*((*(_7232_it))))._field_Expr))._field_Model.cast_ptr<_1c6389da6_Var>(&__jule_any_type8);;
					if ((*(_8121_v))._field_Reference) {
						_1aa9db7cb_model((*((*(_self_))._field_oc))._field_ec, (*((*((*(_7232_it))))._field_Expr))._field_Model);
						goto _match_end_1adb97bb5;
					};
					goto _case_begin_1adb97c1a;
				}
			}
			else {
				_case_begin_1adb97c1a:;
				{
					_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("&(", 2));
					_1aa9db7cb_model((*((*(_self_))._field_oc))._field_ec, (*((*((*(_7232_it))))._field_Expr))._field_Model);
					_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
				}
			}
			_match_end_1adb97bb5:;
		};
	} else {
		_1aa9d2508_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_7232_it))))._field_Expr))._field_Model);
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(";\n", 2));
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("auto it = expr", 14));
	if ((*(_7244_ref))) {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("->", 2));
	} else {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(".", 1));
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("begin();\n", 9));
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("auto expr_end = expr", 20));
	if ((*(_7244_ref))) {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("->", 2));
	} else {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(".", 1));
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("end();\n", 7));
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, (*(_7256_begin)));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(":;\n", 3));
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("if (it != expr_end) {\n", 22));
	_1aaaa50d1_addIndent((*(_self_))._field_oc);
	_1aaaa54cc_indent((*(_self_))._field_oc);
}



inline void _1aa9c5c8d_rangeIndexIter(jule::Ptr<_1aa9c4e9b_scopeCoder> _self_, jule::Ptr<_1c632258b_RangeIter>* _12139_it) {
	jule::Str _12213_begin = static__1aa9e50a9_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12139_it)))));;
	jule::Str _12313_next = static__1aa9e563c_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12139_it)))));;
	jule::Bool _12517_ref = false;;
	_1adb941bc_iterHead(_self_, _12139_it, &(_12517_ref), &(_12213_begin));
	if (((*((*(_12139_it))))._field_KeyA != nullptr)) {
		_1aaaac79d_varInitExpr((*(_self_))._field_oc, &((*((*(_12139_it))))._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			if (_12517_ref) {
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("it - expr->begin()", 18));
			} else {
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("it - expr.begin()", 17));
			};
		}));
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("\n", 1));
		_1aaaa54cc_indent((*(_self_))._field_oc);
	};
	if (((*((*(_12139_it))))._field_KeyB != nullptr)) {
		(*((*((*(_12139_it))))._field_KeyB))._field_Reference=(_1a9edc34e_Copy && _1aa9cb9b9_isIterCopyOptimizable(&((*((*(_12139_it))))._field_Expr), &((*((*(_12139_it))))._field_KeyB)));
		_1aaaac79d_varInitExpr((*(_self_))._field_oc, &((*((*(_12139_it))))._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			{
				if ((*((*((*(_12139_it))))._field_KeyB))._field_Reference) {
					_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("it", 2));
				} else {
					_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("*it", 3));
				};
			};
		}));
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("\n", 1));
		_1aaaa54cc_indent((*(_self_))._field_oc);
	};
	_1aa9cae80_scope(_self_, (*((*(_12139_it))))._field_Scope);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("\n", 1));
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, _12313_next);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(":;\n", 3));
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("++it;\n", 6));
	_1aaaa54cc_indent((*(_self_))._field_oc);
	if (((*((*(_12139_it))))._field_KeyA != nullptr)) {
		_1aaaa4dd3_write((*(_self_))._field_oc, static__1aa9e4ce0_var((*((*(_12139_it))))._field_KeyA));
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("++;\n", 4));
		_1aaaa54cc_indent((*(_self_))._field_oc);
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("goto ", 5));
	_1aaaa4dd3_write((*(_self_))._field_oc, _12213_begin);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(";\n", 2));
	_1aaaa52ce_doneIndent((*(_self_))._field_oc);
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("}\n", 2));
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, static__1aa9e5373_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12139_it))))));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(":;\n", 3));
	_1aaaa52ce_doneIndent((*(_self_))._field_oc);
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("}", 1));
}



inline void _1aa9c6046_rangeHashmapIter(jule::Ptr<_1aa9c4e9b_scopeCoder> _self_, jule::Ptr<_1c632258b_RangeIter>* _18441_it) {
	jule::Str _18513_begin = static__1aa9e50a9_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18441_it)))));;
	jule::Str _18613_next = static__1aa9e563c_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18441_it)))));;
	jule::Bool _18817_ref = false;;
	_1adb941bc_iterHead(_self_, _18441_it, &(_18817_ref), &(_18513_begin));
	if (((*((*(_18441_it))))._field_KeyA != nullptr)) {
		_1aaaac79d_varInitExpr((*(_self_))._field_oc, &((*((*(_18441_it))))._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("it->first", 9));
		}));
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("\n", 1));
		_1aaaa54cc_indent((*(_self_))._field_oc);
	};
	if (((*((*(_18441_it))))._field_KeyB != nullptr)) {
		_1aaaac79d_varInitExpr((*(_self_))._field_oc, &((*((*(_18441_it))))._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("it->second", 10));
		}));
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("\n", 1));
		_1aaaa54cc_indent((*(_self_))._field_oc);
	};
	_1aa9cae80_scope(_self_, (*((*(_18441_it))))._field_Scope);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("\n", 1));
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, _18613_next);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(":;\n", 3));
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("++it;\n", 6));
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("goto ", 5));
	_1aaaa4dd3_write((*(_self_))._field_oc, _18513_begin);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(";\n", 2));
	_1aaaa52ce_doneIndent((*(_self_))._field_oc);
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("}\n", 2));
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, static__1aa9e5373_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18441_it))))));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(":;\n", 3));
	_1aaaa52ce_doneIndent((*(_self_))._field_oc);
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("}", 1));
}



inline void _1aa9c62ee_ifCase(jule::Ptr<_1aa9c4e9b_scopeCoder> _self_, jule::Ptr<_1c6320b72_If> _22730_i) {
	if (((*(_22730_i))._field_Expr != nullptr)) {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("if (", 4));
		_1aa9d2508_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_22730_i))._field_Expr);
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(") ", 2));
	};
	_1aa9cae80_scope(_self_, (*(_22730_i))._field_Scope);
}



inline void _1aa9c65a7_conditional(jule::Ptr<_1aa9c4e9b_scopeCoder> _self_, jule::Ptr<_1c632138c_Conditional> _23635_c) {
	jule::Bool _23717_writed = false;;
	{
		auto expr = &((*(_23635_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adbc7266:;
		if (it != expr_end) {
			jule::Ptr<_1c6320b72_If> _23821_elif = *it;
			{
				if ((_23821_elif == nullptr)) {
					goto _iter_next_1adbc7266;
				};
				if (_23717_writed) {
					_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(" else ", 6));
				};
				_23717_writed=true;
				_1aa9c62ee_ifCase(_self_, _23821_elif);
			}
			_iter_next_1adbc7266:;
			++it;
			goto _iter_begin_1adbc7266;
		}
		_iter_end_1adbc7266:;
	};
	if (((*(_23635_c))._field_Default != nullptr)) {
		if (_23717_writed) {
			_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(" else ", 6));
		};
		_1aa9cae80_scope(_self_, (*((*(_23635_c))._field_Default))._field_Scope);
	};
}



inline void _1aa9c6860_infIter(jule::Ptr<_1aa9c4e9b_scopeCoder> _self_, jule::Ptr<_1c6321689_InfIter> _25631_it) {
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("for (;;) {\n", 11));
	_1aaaa50d1_addIndent((*(_self_))._field_oc);
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aa9cae80_scope(_self_, (*(_25631_it))._field_Scope);
	_1aaaa52ce_doneIndent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("\n", 1));
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, static__1aa9e563c_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_25631_it))));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(":;\n", 3));
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("}\n", 2));
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, static__1aa9e5373_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_25631_it))));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(":;", 2));
}



inline void _1aa9c6b18_whileIter(jule::Ptr<_1aa9c4e9b_scopeCoder> _self_, jule::Ptr<_1c6321b40_WhileIter> _27333_it) {
	if ((((*(_27333_it))._field_Expr != nullptr) && ((*(_27333_it))._field_Next == nullptr))) {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("while (", 7));
		_1aa9d2508_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_27333_it))._field_Expr);
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(") {\n", 4));
	} else {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("for (; ", 7));
		if (((*(_27333_it))._field_Expr != nullptr)) {
			_1aa9d2508_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_27333_it))._field_Expr);
		};
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("; ", 2));
		if (((*(_27333_it))._field_Next != nullptr)) {
			_1aa9ca91e_st(_self_, (*(_27333_it))._field_Next);
		};
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(") {\n", 4));
	};
	_1aaaa50d1_addIndent((*(_self_))._field_oc);
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aa9cae80_scope(_self_, (*(_27333_it))._field_Scope);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("\n", 1));
	_1aaaa52ce_doneIndent((*(_self_))._field_oc);
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, static__1aa9e563c_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_27333_it))));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(":;\n", 3));
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("}\n", 2));
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, static__1aa9e5373_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_27333_it))));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(":;", 2));
}



inline void _1aa9c6dc1_rangeIter(jule::Ptr<_1aa9c4e9b_scopeCoder> _self_, jule::Ptr<_1c632258b_RangeIter> _30633_it) {
	{
		
		if ((_1c6421bc9_Slc((*((*(_30633_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1adbdb8b8:;
			{
				_1aa9c5c8d_rangeIndexIter(_self_, &(_30633_it));
			}
		}
		else if ((_1c6421943_Arr((*((*(_30633_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1adbdb588:;
			{
				_1aa9c5c8d_rangeIndexIter(_self_, &(_30633_it));
			}
		}
		else if ((_1c6422713_Map((*((*(_30633_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1adbdb5ee:;
			{
				_1aa9c6046_rangeHashmapIter(_self_, &(_30633_it));
			}
		}
		else {
			_case_begin_1adbdb522:;
			{
				_1aa9c5c8d_rangeIndexIter(_self_, &(_30633_it));
			}
		}
		_match_end_1adbdb456:;
	};
}



inline void _1aa9c7179_cont(jule::Ptr<_1aa9c4e9b_scopeCoder> _self_, jule::Ptr<_1c6322921_ContSt> _31924_c) {
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("goto ", 5));
	_1aaaa4dd3_write((*(_self_))._field_oc, static__1aa9e563c_iterNext((*(_31924_c))._field_It));
}



inline void _1aa9c7432_label(jule::Ptr<_1aa9c4e9b_scopeCoder> _self_, jule::Ptr<_1c63230e7_Label> _32425_l) {
	_1aaaa4dd3_write((*(_self_))._field_oc, static__1aa9e5906_label(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_32425_l))));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(":", 1));
}



inline void _1aa9c76da_gotoSt(jule::Ptr<_1aa9c4e9b_scopeCoder> _self_, jule::Ptr<_1c63234c1_GotoSt> _32926_gt) {
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("goto ", 5));
	_1aaaa4dd3_write((*(_self_))._field_oc, static__1aa9e5906_label(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_32926_gt))._field_Label))));
}



inline void _1aa9c7993_postfix(jule::Ptr<_1aa9c4e9b_scopeCoder> _self_, jule::Ptr<_1c632389a_Postfix> _33431_p) {
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("(", 1));
	_1aa9d2508_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_33431_p))._field_Expr);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
	_1aaaa4dd3_write((*(_self_))._field_oc, (*(_33431_p))._field_Op);
}



inline void _1aa9c7c4b_assign(jule::Ptr<_1aa9c4e9b_scopeCoder> _self_, jule::Ptr<_1c6323d51_Assign> _34130_a) {
	_1aa9d2508_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_34130_a))._field_L))._field_Model);
	_1aaaa4dd3_write((*(_self_))._field_oc, (*((*(_34130_a))._field_Op))._field_Kind);
	_1aa9d2508_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_34130_a))._field_R))._field_Model);
}



inline void _1aa9c8004_mapLookupAssign(jule::Ptr<_1aa9c4e9b_scopeCoder> _self_, jule::Ptr<_1c632422a_MultiAssign>* _34740_a) {
	jule::Ptr<_1c62c4818_IndexingExprModel> _34817_iem = (*((*(_34740_a))))._field_R.cast_ptr<_1c62c4818_IndexingExprModel>(&__jule_any_type45);;
	_1aa9d2508_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_34817_iem))._field_Expr))._field_Model);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(".lookup(", 8));
	_1aa9d2508_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_34817_iem))._field_Index))._field_Model);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(", ", 2));
	if (((*((*(_34740_a))))._field_L[0LL] != nullptr)) {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("&(", 2));
		_1aa9d2508_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_34740_a))))._field_L[0LL]))._field_Model);
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("), ", 3));
	} else {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("nullptr, ", 9));
	};
	if (((*((*(_34740_a))))._field_L[1LL] != nullptr)) {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("&(", 2));
		_1aa9d2508_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_34740_a))))._field_L[1LL]))._field_Model);
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
	} else {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("nullptr", 7));
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _1aa9c82ac_multiAssignTup(jule::Ptr<_1aa9c4e9b_scopeCoder> _self_, jule::Ptr<_1c632422a_MultiAssign>* _37039_a) {
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("({\n", 3));
	_1aaaa50d1_addIndent((*(_self_))._field_oc);
	jule::Ptr<_1c62c76a6_TupleExprModel> _37417_tup = (*((*(_37039_a))))._field_R.cast_ptr<_1c62c76a6_TupleExprModel>(&__jule_any_type81);;
	{
		auto expr = &((*(_37417_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1dc4e2e0a:;
		if (it != expr_end) {
			jule::I64 _37614_i = it - expr->begin();
			jule::Ptr<_1c63dd35a_Data> _37621_r = *it;
			{
				_1aaaa54cc_indent((*(_self_))._field_oc);
				jule::Ptr<_1c63dd35a_Data> _37821_l = (*((*(_37039_a))))._field_L[_37614_i];;
				if ((_37821_l != nullptr)) {
					{
						auto &_match_expr{ (*(_37821_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1aa148004:;
							{
								jule::Ptr<_1c6389da6_Var> _38229_v = (*(_37821_l))._field_Model.cast_ptr<_1c6389da6_Var>(&__jule_any_type8);;
								if (((*(_38229_v))._field_Reference && (!(_1c638a23b_IsInitialized(_38229_v.ptr()))))) {
									_1aaaa4dd3_write((*(_self_))._field_oc, static__1aa9e4ce0_var(_38229_v));
									_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(" = &(", 5));
									_1aa9d2508_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_37621_r))._field_Model);
									_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(");\n", 3));
									(*((*(_37039_a))))._field_L[_37614_i]=nullptr;
									goto _iter_next_1dc4e2e0a;
								};
							}
						}
						_match_end_1aa147e9e:;
					};
					_1aaaa4dd3_write((*(_self_))._field_oc, _1aaabe8e2_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_37821_l))._field_Kind));
					_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(" ", 1));
					_1aaaa4dd3_write((*(_self_))._field_oc, static__1aa9e3184_toOut(&(_1aa9c486e_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_37614_i))));
					_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(" = ", 3));
				};
				_1aa9d2508_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_37621_r))._field_Model);
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1dc4e2e0a:;
			++it;
			_37614_i++;
			goto _iter_begin_1dc4e2e0a;
		}
		_iter_end_1dc4e2e0a:;
	};
	{
		auto expr = &((*((*(_37039_a))))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa14e23b:;
		if (it != expr_end) {
			jule::I64 _40314_i = it - expr->begin();
			jule::Ptr<_1c63dd35a_Data> _40321_l = *it;
			{
				if ((_40321_l == nullptr)) {
					goto _iter_next_1aa14e23b;
				};
				_1aaaa54cc_indent((*(_self_))._field_oc);
				_1aa9d2508_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_40321_l))._field_Model);
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(" = ", 3));
				_1aaaa4dd3_write((*(_self_))._field_oc, static__1aa9e3184_toOut(&(_1aa9c486e_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_40314_i))));
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1aa14e23b:;
			++it;
			_40314_i++;
			goto _iter_begin_1aa14e23b;
		}
		_iter_end_1aa14e23b:;
	};
	_1aaaa52ce_doneIndent((*(_self_))._field_oc);
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("})", 2));
}



inline void _1aa9c8565_multiAssignFn(jule::Ptr<_1aa9c4e9b_scopeCoder> _self_, jule::Ptr<_1c632422a_MultiAssign>* _41938_a) {
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("({\n", 3));
	_1aaaa50d1_addIndent((*(_self_))._field_oc);
	_1aaaa54cc_indent((*(_self_))._field_oc);
	jule::Ptr<_1c62c3e88_FnCallExprModel> _42417_f = (*((*(_41938_a))))._field_R.cast_ptr<_1c62c3e88_FnCallExprModel>(&__jule_any_type34);;
	_1aaac46a5_codeMut1((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), &((*((*(_42417_f))._field_Func))._field_Result));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(" __jule_assign_result = ", 24));
	_1aa9d2508_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_41938_a))))._field_R);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(";\n", 2));
	{
		auto expr = &((*((*(_41938_a))))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa158036:;
		if (it != expr_end) {
			jule::I64 _43014_i = it - expr->begin();
			jule::Ptr<_1c63dd35a_Data> _43021_l = *it;
			{
				if ((_43021_l != nullptr)) {
					_1aaaa54cc_indent((*(_self_))._field_oc);
					_1aa9d2508_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_43021_l))._field_Model);
					_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(" = __jule_assign_result.__jule_result_arg", 41));
					_1aaaa4dd3_write((*(_self_))._field_oc, _1dc250063_Itoa(_43014_i));
					_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(";\n", 2));
				};
			}
			_iter_next_1aa158036:;
			++it;
			_43014_i++;
			goto _iter_begin_1aa158036;
		}
		_iter_end_1aa158036:;
	};
	_1aaaa52ce_doneIndent((*(_self_))._field_oc);
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("})", 2));
}



inline void _1aa9c881d_multiAssign(jule::Ptr<_1aa9c4e9b_scopeCoder> _self_, jule::Ptr<_1c632422a_MultiAssign> _44535_a) {
	{
		auto &_match_expr{ (*(_44535_a))._field_R };
		
		if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1aa15d47b:;
			{
				_1aa9c8004_mapLookupAssign(_self_, &(_44535_a));
				return;;
			}
		}
		_match_end_1aa15d426:;
	};
	{
		auto &_match_expr{ (*(_44535_a))._field_R };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1aa15d943:;
			{
				_1aa9c82ac_multiAssignTup(_self_, &(_44535_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1aa15d0e6:;
			{
				_1aa9c8565_multiAssignFn(_self_, &(_44535_a));
			}
		}
		else {
			_case_begin_1aa15d888:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:459:13"));;
			}
		}
		_match_end_1aa15d833:;
	};
}



inline jule::Fn<void(void)> _1aa9c8b5e_matchExpr(jule::Ptr<_1aa9c4e9b_scopeCoder> _self_, jule::Ptr<_1c632488a_Match> _46333_m) {
	if ((!(_1c63ddc2e_IsConst((*(_46333_m))._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("_match_expr", 11));
		});;
	};
	if (((!(_1dc264a7d_IsBool((*((*(_46333_m))._field_Expr))._field_Constant.ptr()))) || (!(_1dc262482_ReadBool((*((*(_46333_m))._field_Expr))._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1aa9d2508_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_46333_m))._field_Expr))._field_Model);
		});;
	};
	return nullptr;;
}



inline void _1aa9c8ec2_case(jule::Ptr<_1aa9c4e9b_scopeCoder> _self_, jule::Ptr<_1c632488a_Match> _47328_m, jule::Ptr<_1c63254c3_Case> _47343_c) {
	if ((((*(_47343_c))._field_Exprs.len() != 0LL) && (!((*(_47328_m))._field_Comptime)))) {
		if ((((*(_47328_m))._field_Cases.len() > 0LL) && ((*(_47328_m))._field_Cases[0LL] == _47343_c))) {
			_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("if (", 4));
		} else {
			_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("else if (", 9));
		};
		{
			auto expr = &((*(_47343_c))._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa1654e9:;
			if (it != expr_end) {
				jule::I64 _48018_i = it - expr->begin();
				jule::Ptr<_1c63dd35a_Data> _48025_expr = *it;
				{
					{
						
						if ((!((*(_47328_m))._field_TypeMatch))) {
							_case_begin_1aa16d216:;
							{
								jule::Fn<void(void)> _48325_caseExpr = _1aa9c8b5e_matchExpr(_self_, _47328_m);;
								if (_1c63de070_GoodOperand((*(_47328_m))._field_Expr.ptr(), &(_48025_expr))) {
									if ((_48325_caseExpr != nullptr)) {
										_48325_caseExpr();
										_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(" == ", 4));
									};
									_1aa9d2508_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_48025_expr))._field_Model);
								} else {
									_1aa9d2508_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_48025_expr))._field_Model);
									if ((_48325_caseExpr != nullptr)) {
										_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(" == ", 4));
										_48325_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1aa166ece:;
							{
								_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("_match_expr", 11));
								jule::Ptr<_1c641d522_TypeKind> _49929_tk = (*(_48025_expr))._field_Model.cast_ptr<_1c641d522_TypeKind>(&__jule_any_type83);;
								if ((_1c642247c_Trait((*((*(_47328_m))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(".type_is(", 9));
									_1aa9ceadd_boolean((*((*(_self_))._field_oc))._field_ec, (_1c6420e09_Sptr((*(_48025_expr))._field_Kind.ptr()) != nullptr));
									_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(", ", 2));
									_1aaaa4dd3_write((*(_self_))._field_oc, _1dc250063_Itoa(static_cast<jule::I64>(_1aaaa69b7_findTypeOffset((*(_self_))._field_oc.ptr(), _1c642247c_Trait((*((*(_47328_m))._field_Expr))._field_Kind.ptr()), (*(_48025_expr))._field_Kind))));
									_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
								} else {
									jule::I64 _50729_j = _1aaaa5b5e_pushAnyType((*(_self_))._field_oc, _49929_tk);;
									_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(".type == &__jule_any_type", 25));
									_1aaaa4dd3_write((*(_self_))._field_oc, _1dc250063_Itoa(_50729_j));
								};
							}
						}
						_match_end_1aa166e13:;
					};
					if ((((*(_47343_c))._field_Exprs.len() - _48018_i) > 1LL)) {
						_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_1aa1654e9:;
				++it;
				_48018_i++;
				goto _iter_begin_1aa1654e9;
			}
			_iter_end_1aa1654e9:;
		};
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(") ", 2));
	} else if ((((*(_47328_m))._field_Default == _47343_c) && ((*(_47328_m))._field_Cases.len() != 0LL))) {
		_1aaaa54cc_indent((*(_self_))._field_oc);
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("else ", 5));
	};
	_1aaaa50d1_addIndent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("{\n", 2));
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, static__1aa9e5e89_caseBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_47343_c))));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(":;\n", 3));
	if (((*((*(_47343_c))._field_Scope))._field_Stmts.len() > 0LL)) {
		_1aaaa54cc_indent((*(_self_))._field_oc);
		_1aa9cae80_scope(_self_, (*(_47343_c))._field_Scope);
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("\n", 1));
	};
	_1aaaa52ce_doneIndent((*(_self_))._field_oc);
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("}", 1));
}



inline void _1aa9c927a_matchSt(jule::Ptr<_1aa9c4e9b_scopeCoder> _self_, jule::Ptr<_1c632488a_Match> _54131_m) {
	if ((((*(_54131_m))._field_Cases.len() == 0LL) && ((*(_54131_m))._field_Default == nullptr))) {
		return;;
	};
	if (((*(_54131_m))._field_Comptime && (((*(_54131_m))._field_Default == nullptr) || ((*((*((*(_54131_m))._field_Default))._field_Scope))._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("{\n", 2));
	_1aaaa50d1_addIndent((*(_self_))._field_oc);
	_1aaaa54cc_indent((*(_self_))._field_oc);
	if (((!((*(_54131_m))._field_Comptime)) && (!(_1c63ddc2e_IsConst((*(_54131_m))._field_Expr.ptr()))))) {
		if ((_1a9edc34e_Copy && _1aa9cb601_isCopyOptimizable(&((*(_54131_m))._field_Expr)))) {
			_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_1aa9d2508_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_54131_m))._field_Expr))._field_Model);
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(" };\n", 4));
		_1aaaa54cc_indent((*(_self_))._field_oc);
	};
	if (((*(_54131_m))._field_Cases.len() > 0LL)) {
		{
			auto expr = &((*(_54131_m))._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa181b53:;
			if (it != expr_end) {
				jule::Ptr<_1c63254c3_Case> _56925_c = *it;
				{
					if ((_56925_c == nullptr)) {
						goto _iter_next_1aa181b53;
					};
					_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("\n", 1));
					_1aaaa54cc_indent((*(_self_))._field_oc);
					_1aa9c8ec2_case(_self_, _54131_m, _56925_c);
				}
				_iter_next_1aa181b53:;
				++it;
				goto _iter_begin_1aa181b53;
			}
			_iter_end_1aa181b53:;
		};
	};
	if (((*(_54131_m))._field_Default != nullptr)) {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("\n", 1));
		_1aa9c8ec2_case(_self_, _54131_m, (*(_54131_m))._field_Default);
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("\n", 1));
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, static__1aa9e5bc0_matchEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_54131_m))));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(":;", 2));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("\n", 1));
	_1aaaa52ce_doneIndent((*(_self_))._field_oc);
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("}", 1));
}



inline void _1aa9c9533_fallSt(jule::Ptr<_1aa9c4e9b_scopeCoder> _self_, jule::Ptr<_1c6325abc_FallSt> _59626_f) {
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("goto ", 5));
	_1aaaa4dd3_write((*(_self_))._field_oc, static__1aa9e5e89_caseBegin((*(_59626_f))._field_DestCase));
}



inline void _1aa9c97db_breakSt(jule::Ptr<_1aa9c4e9b_scopeCoder> _self_, jule::Ptr<_1c6322cea_BreakSt> _60127_b) {
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("goto ", 5));
	if (((*(_60127_b))._field_It != 0LLU)) {
		_1aaaa4dd3_write((*(_self_))._field_oc, static__1aa9e5373_iterEnd((*(_60127_b))._field_It));
	} else {
		_1aaaa4dd3_write((*(_self_))._field_oc, static__1aa9e5bc0_matchEnd((*(_60127_b))._field_Mtch));
	};
}



inline void _1aa9c9a94_setResult(jule::Ptr<_1aa9c4e9b_scopeCoder> _self_, jule::Ptr<_1c6325e52_RetSt> _61033_r) {
	if (((*((*((*((*(_61033_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("__jule_func_result = ", 21));
		_1aa9d2508_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_61033_r))._field_Expr);
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(";\n", 2));
		_1aaaa54cc_indent((*(_self_))._field_oc);
		return;;
	};
	jule::Slice<jule::Ptr<_1c63dd35a_Data>> _61817_datas = (*((*(_61033_r))._field_Expr.cast_ptr<_1c62c76a6_TupleExprModel>(&__jule_any_type81)))._field_Datas;;
	{
		auto expr = &(_61817_datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa18ee2a:;
		if (it != expr_end) {
			jule::I64 _61913_i = it - expr->begin();
			jule::Ptr<_1c63dd35a_Data> _61916_data = *it;
			{
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
				_1aaaa4dd3_write((*(_self_))._field_oc, _1dc250063_Itoa(_61913_i));
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(" = ", 3));
				_1aa9d2508_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_61916_data))._field_Model);
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(";\n", 2));
				_1aaaa54cc_indent((*(_self_))._field_oc);
			}
			_iter_next_1aa18ee2a:;
			++it;
			_61913_i++;
			goto _iter_begin_1aa18ee2a;
		}
		_iter_end_1aa18ee2a:;
	};
}



inline void _1aa9c9d4c_retSt(jule::Ptr<_1aa9c4e9b_scopeCoder> _self_, jule::Ptr<_1c6325e52_RetSt> _62929_r) {
	if (_1c62d0170_IsVoid((*((*(_62929_r))._field_Func))._field_Decl.ptr())) {
		if ((*((*((*(_62929_r))._field_Func))._field_Decl))._field_Exceptional) {
			_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("return;", 7));
		return;;
	} else if (((*((*((*((*(_62929_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 0LL)) {
		if ((*((*((*(_62929_r))._field_Func))._field_Decl))._field_Exceptional) {
			_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("return jule::Exceptional<", 25));
			_1aaaa4dd3_write((*(_self_))._field_oc, _1aaabe8e2_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*((*(_62929_r))._field_Func))._field_Result));
			_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(">(jule::Any(), ", 15));
			_1aa9d2508_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_62929_r))._field_Expr);
			_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(");", 2));
		} else {
			_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("return ", 7));
			_1aa9d2508_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_62929_r))._field_Expr);
			_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(";", 1));
		};
		return;;
	};
	if (((*(_62929_r))._field_Expr != nullptr)) {
		_1aa9c9a94_setResult(_self_, _62929_r);
	};
	if ((*((*((*(_62929_r))._field_Func))._field_Decl))._field_Exceptional) {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1aaac46a5_codeMut1((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), &((*((*(_62929_r))._field_Func))._field_Result));
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(">(jule::Any(), __jule_func_result);", 35));
	} else {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("return __jule_func_result;", 26));
	};
}



inline void _1aa9ca105_var(jule::Ptr<_1aa9c4e9b_scopeCoder> _self_, jule::Ptr<_1c6389da6_Var> _66527_v) {
	if ((!((*(_66527_v))._field_Constant))) {
		_1aaab28b3_var((*(_self_))._field_oc, _66527_v);
	};
}



inline void _1aa9ca3ad_mutSlicing(jule::Ptr<_1aa9c4e9b_scopeCoder> _self_, jule::Ptr<_1c651be4a_MutSlicingExprModel> _67134_m) {
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("(", 1));
	_1aa9d2508_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_67134_m))._field_Expr);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_21e49099c_Production))) {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("\"", 1));
		_1aaaa70d3_locInfo((*(_self_))._field_oc, &((*(_67134_m))._field_Token));
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("\", ", 3));
	};
	_1aa9d2508_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_67134_m))._field_Left);
	if (((*(_67134_m))._field_Right != nullptr)) {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(", ", 2));
		_1aa9d2508_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_67134_m))._field_Right);
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(");", 2));
}



inline void _1aa9ca666_swap(jule::Ptr<_1aa9c4e9b_scopeCoder> _self_, jule::Ptr<_1c651ab6e_SwapExprModel> _68828_m) {
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("std::swap(", 10));
	_1aa9d2508_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_68828_m))._field_Left))._field_Model);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(", ", 2));
	_1aa9d2508_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_68828_m))._field_Right))._field_Model);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _1aa9ca91e_st(jule::Ptr<_1aa9c4e9b_scopeCoder> _self_, jule::Any _69726_st) {
	if ((_69726_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _69726_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1aa1a98a1:;
			{
				_1aa9cae80_scope(_self_, _69726_st.cast_ptr<_1c6320754_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aa1aa462:;
			{
				_1aa9ca105_var(_self_, _69726_st.cast_ptr<_1c6389da6_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1aa1aa4c8:;
			{
				_1aa9db7cb_model((*((*(_self_))._field_oc))._field_ec, (*(_69726_st.cast_ptr<_1c63dd35a_Data>(&__jule_any_type24)))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1aa1aa53e:;
			{
				_1aa9c65a7_conditional(_self_, _69726_st.cast_ptr<_1c632138c_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1aa1aa5a5:;
			{
				_1aa9c6860_infIter(_self_, _69726_st.cast_ptr<_1c6321689_InfIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1aa1aa61b:;
			{
				_1aa9c6b18_whileIter(_self_, _69726_st.cast_ptr<_1c6321b40_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1aa1aa682:;
			{
				_1aa9c6dc1_rangeIter(_self_, _69726_st.cast_ptr<_1c632258b_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1aa1aa6e8:;
			{
				_1aa9c7179_cont(_self_, _69726_st.cast_ptr<_1c6322921_ContSt>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1aa1aa75e:;
			{
				_1aa9c7432_label(_self_, _69726_st.cast_ptr<_1c63230e7_Label>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1aa1aa7c5:;
			{
				_1aa9c76da_gotoSt(_self_, _69726_st.cast_ptr<_1c63234c1_GotoSt>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1aa1aa83b:;
			{
				_1aa9c7993_postfix(_self_, _69726_st.cast_ptr<_1c632389a_Postfix>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1aa1aa8a2:;
			{
				_1aa9c7c4b_assign(_self_, _69726_st.cast_ptr<_1c6323d51_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1aa1aa918:;
			{
				_1aa9c881d_multiAssign(_self_, _69726_st.cast_ptr<_1c632422a_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1aa1aa97e:;
			{
				_1aa9c927a_matchSt(_self_, _69726_st.cast_ptr<_1c632488a_Match>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1aa1aa9e5:;
			{
				_1aa9c9533_fallSt(_self_, _69726_st.cast_ptr<_1c6325abc_FallSt>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1aa1aaa5b:;
			{
				_1aa9c97db_breakSt(_self_, _69726_st.cast_ptr<_1c6322cea_BreakSt>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1aa1aaad3:;
			{
				_1aa9c9d4c_retSt(_self_, _69726_st.cast_ptr<_1c6325e52_RetSt>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1aa1aab5a:;
			{
				_1aa9d92ac_pushToSlice((*((*(_self_))._field_oc))._field_ec, _69726_st.cast_ptr<_1c651c973_PushToSliceExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1aa1aabd2:;
			{
				_1aa9d9565_appendToSlice((*((*(_self_))._field_oc))._field_ec, _69726_st.cast_ptr<_1c651cd4c_AppendToSliceExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1aa1aac59:;
			{
				_1aa9ca3ad_mutSlicing(_self_, _69726_st.cast_ptr<_1c651be4a_MutSlicingExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1aa1aacd1:;
			{
				_1aa9ca666_swap(_self_, _69726_st.cast_ptr<_1c651ab6e_SwapExprModel>(&__jule_any_type123));
			}
		}
		else {
			_case_begin_1aa1a995b:;
			{
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1aa1a950a:;
	};
}



inline void _1aa9cabc7_scopeStmts(jule::Ptr<_1aa9c4e9b_scopeCoder> _self_, jule::Ptr<_1c6320754_Scope>* _74935_s) {
	{
		auto expr = &((*((*(_74935_s))))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa1b58e0:;
		if (it != expr_end) {
			jule::Any _75021_st = *it;
			{
				_1aaaa54cc_indent((*(_self_))._field_oc);
				_1aa9ca91e_st(_self_, _75021_st);
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1aa1b58e0:;
			++it;
			goto _iter_begin_1aa1b58e0;
		}
		_iter_end_1aa1b58e0:;
	};
}



inline void _1aa9cae80_scope(jule::Ptr<_1aa9c4e9b_scopeCoder> _self_, jule::Ptr<_1c6320754_Scope> _75829_s) {
	_1aaaa50d1_addIndent((*(_self_))._field_oc);
	if ((*(_75829_s))._field_Deferred) {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("{\n", 2));
	_1aa9cabc7_scopeStmts(_self_, &(_75829_s));
	_1aaaa52ce_doneIndent((*(_self_))._field_oc);
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("}", 1));
	if ((*(_75829_s))._field_Deferred) {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(");", 2));
	};
}



inline void _1aa9cb238_funcScope(jule::Ptr<_1aa9c4e9b_scopeCoder> _self_, jule::Ptr<_1c62d2b01_FnIns> _77433_f) {
	if (((*(_77433_f))._field_Scope == nullptr)) {
		return;;
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("{\n", 2));
	_1aaaa50d1_addIndent((*(_self_))._field_oc);
	if ((!(_1c62d0170_IsVoid((*(_77433_f))._field_Decl.ptr())))) {
		jule::Ptr<_1c642b1de_Tuple> _78121_tup = _1c6422999_Tup((*(_77433_f))._field_Result.ptr());;
		if ((_78121_tup != nullptr)) {
			_1aaaa54cc_indent((*(_self_))._field_oc);
			_1aaac3ece_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), _78121_tup);
			_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(" __jule_func_result;\n", 21));
			{
				auto expr = &((*(_78121_tup))._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1aa1c17b9:;
				if (it != expr_end) {
					jule::I64 _78622_i = it - expr->begin();
					jule::Ptr<_1c641d522_TypeKind> _78629_t = *it;
					{
						if (_1aaac6aa3_shouldInitialized(&(_78629_t))) {
							_1aaaa54cc_indent((*(_self_))._field_oc);
							_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
							_1aaaa4dd3_write((*(_self_))._field_oc, _1dc250063_Itoa(_78622_i));
							_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(" = ", 3));
							_1aa9dba84_initExpr((*((*(_self_))._field_oc))._field_ec, _78629_t);
							_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(";\n", 2));
						};
					}
					_iter_next_1aa1c17b9:;
					++it;
					_78622_i++;
					goto _iter_begin_1aa1c17b9;
				}
				_iter_end_1aa1c17b9:;
			};
		} else if (((*((*((*(_77433_f))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
			_1aaaa54cc_indent((*(_self_))._field_oc);
			_1aaaa4dd3_write((*(_self_))._field_oc, _1aaabe8e2_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_77433_f))._field_Result));
			_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(" __jule_func_result", 19));
			if (_1aaac6aa3_shouldInitialized(&((*(_77433_f))._field_Result))) {
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(" = ", 3));
				_1aa9dba84_initExpr((*((*(_self_))._field_oc))._field_ec, (*(_77433_f))._field_Result);
			};
			_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(";\n", 2));
		};
	};
	_1aa9cabc7_scopeStmts(_self_, &((*(_77433_f))._field_Scope));
	if (((*((*(_77433_f))._field_Decl))._field_Exceptional && _1c62d0170_IsVoid((*(_77433_f))._field_Decl.ptr()))) {
		_1aaaa54cc_indent((*(_self_))._field_oc);
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("return jule::VoidExceptional();\n", 32));
	};
	_1aaaa52ce_doneIndent((*(_self_))._field_oc);
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("}", 1));
}





std::ostream &operator<<(std::ostream &_Stream, _1aa9c4e9b_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa9ce1b4_exprCoder> static__1aa9ce57c_new(jule::Ptr<_1aaaa472e_ObjectCoder>* _10724_oc) {
	return jule::new_ptr<_1aa9ce1b4_exprCoder>(_1aa9ce1b4_exprCoder{._field_oc=(*(_10724_oc))});;
}



inline void _1aa9ce835_string(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1dc260590_Const>* _11327_c) {
	jule::Str _11413_content = _1dc262718_ReadStr((*(_11327_c)).ptr());;
	if ((_11413_content.len() == 0LL)) {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Str _11913_len = _1dc24ec99_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_11413_content.len())), 10LL);;
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("jule::Str", 9));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("(", 1));
	_1aa9dc876_cstrLit(&((*((*(_self_))._field_oc))._field_Obj), _11413_content);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(", ", 2));
	_1aaaa4dd3_write((*(_self_))._field_oc, _11913_len);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _1aa9ceadd_boolean(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Bool _12827_b) {
	if (_12827_b) {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("true", 4));
	} else {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("false", 5));
	};
}



inline void _1aa9cecdb_nilLit(jule::Ptr<_1aa9ce1b4_exprCoder> _self_) {
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _1aa9d012c_ftoaSpecialCases(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::F64* _14037_x) {
	{
		
		if (_1dc203a0b_IsNaN((*(_14037_x)))) {
			_case_begin_1aa1e6ec6:;
			{
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_1dc204116_IsInf((*(_14037_x)), 1LL)) {
			_case_begin_1aa1e704d:;
			{
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_1dc204116_IsInf((*(_14037_x)), -1LL)) {
			_case_begin_1aa1e70c5:;
			{
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1aa1e6de9:;
			{
				return false;;
			}
		}
		_match_end_1aa1e6d2d:;
	};
	return true;;
}



inline void _1aa9d03d5_float32(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1dc260590_Const>* _15428_c) {
	jule::F64 _15513_x = _1dc263252_AsF64((*(_15428_c)).ptr());;
	if (_1aa9d012c_ftoaSpecialCases(_self_, &(_15513_x))) {
		return;;
	};
	{
		
		if ((_15513_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1aa1ea628:;
			{
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_15513_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1aa1ea370:;
			{
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1aa1ea309:;
			{
				_1aa9dcc1c_ftoa(&((*((*(_self_))._field_oc))._field_Obj), _15513_x, 32LL);
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_1aa1ea0c8:;
	};
}



inline void _1aa9d068d_float64(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1dc260590_Const>* _17328_c) {
	jule::F64 _17413_x = _1dc263252_AsF64((*(_17328_c)).ptr());;
	if (_1aa9d012c_ftoaSpecialCases(_self_, &(_17413_x))) {
		return;;
	};
	{
		
		if ((_17413_x == jule::MAX_F64)) {
			_case_begin_1aa1edbae:;
			{
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_17413_x == jule::MIN_F64)) {
			_case_begin_1aa1ee440:;
			{
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1aa1ed890:;
			{
				_1aa9dcc1c_ftoa(&((*((*(_self_))._field_oc))._field_Obj), _17413_x, 64LL);
			}
		}
		_match_end_1aa1ed65e:;
	};
}



inline void _1aa9d0946_constant(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1dc260590_Const> _19132_c) {
	{
		
		if (_1dc264d14_IsStr(_19132_c.ptr())) {
			_case_begin_1aa201079:;
			{
				_1aa9ce835_string(_self_, &(_19132_c));
			}
		}
		else if (_1dc264a7d_IsBool(_19132_c.ptr())) {
			_case_begin_1aa200b5b:;
			{
				_1aa9ceadd_boolean(_self_, _1dc262482_ReadBool(_19132_c.ptr()));
			}
		}
		else if (_1dc26509a_IsF64(_19132_c.ptr())) {
			_case_begin_1aa200bc2:;
			{
				{
					
					if ((*(_19132_c))._field_Kind.equal("f32", 3)) {
						_case_begin_1aa203730:;
						{
							_1aa9d03d5_float32(_self_, &(_19132_c));
						}
					}
					else {
						_case_begin_1aa20329b:;
						{
							_1aa9d068d_float64(_self_, &(_19132_c));
						}
					}
					_match_end_1aa2031e1:;
				};
			}
		}
		else if (_1dc264561_IsI64(_19132_c.ptr())) {
			_case_begin_1aa200c38:;
			{
				_1aa9dd008_itoa(&((*((*(_self_))._field_oc))._field_Obj), static_cast<jule::I64>(_1dc261e65_ReadI64(_19132_c.ptr())));
			}
		}
		else if (_1dc2647e7_IsU64(_19132_c.ptr())) {
			_case_begin_1aa200c9e:;
			{
				_1aa9dd2e4_utoa(&((*((*(_self_))._field_oc))._field_Obj), static_cast<jule::U64>(_1dc2621eb_ReadU64(_19132_c.ptr())));
			}
		}
		else if (_1dc265331_IsNil(_19132_c.ptr())) {
			_case_begin_1aa201761:;
			{
				_1aa9cecdb_nilLit(_self_);
			}
		}
		else {
			_case_begin_1aa200ae5:;
			{
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1aa200a29:;
	};
}



inline void _1aa9d0d64_divByZeroBinary(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c6283a3b_Token>* _21536_op, jule::Ptr<_1c62c19ad_OperandExprModel>* _21553_l, jule::Ptr<_1c62c19ad_OperandExprModel>* _21580_r) {
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ (*((*(_21536_op))))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1aa207547:;
			{
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1aa2075be:;
			{
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_1aa2074d1:;
	};
	if ((!(_21e49099c_Production))) {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("\"", 1));
		_1aaaa70d3_locInfo((*(_self_))._field_oc, _21536_op);
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("\",", 2));
	};
	_1aa9d2508_possibleRefExpr(_self_, (*((*(_21553_l))))._field_Model);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(",", 1));
	_1aa9d2508_possibleRefExpr(_self_, (*((*(_21580_r))))._field_Model);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _1aa9d111c_unsafeBinary(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62c1ea8_BinopExprModel> _23736_m) {
	if ((((*((*(_23736_m))._field_Op))._field_Id == static_cast<jule::U64>(50LLU)) || ((*((*(_23736_m))._field_Op))._field_Id == static_cast<jule::U64>(51LLU)))) {
		if (_1aa9ddc51_isAny(&((*((*(_23736_m))._field_Left))._field_Kind))) {
			if (((!(_1c641e600_IsNil((*((*(_23736_m))._field_Right))._field_Kind.ptr()))) && (!(_1aa9ddc51_isAny(&((*((*(_23736_m))._field_Right))._field_Kind)))))) {
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("(", 1));
				if (((*((*(_23736_m))._field_Op))._field_Id == static_cast<jule::U64>(51LLU))) {
					_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("!", 1));
				};
				jule::I64 _24725_i = _1aaaa5b5e_pushAnyType((*(_self_))._field_oc, (*((*(_23736_m))._field_Right))._field_Kind);;
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("__jule_any_type", 15));
				_1aaaa4dd3_write((*(_self_))._field_oc, _1dc250063_Itoa(_24725_i));
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("_compare(", 9));
				_1aa9d2508_possibleRefExpr(_self_, (*((*(_23736_m))._field_Left))._field_Model);
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(", ", 2));
				_1aa9d2508_possibleRefExpr(_self_, (*((*(_23736_m))._field_Right))._field_Model);
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("))", 2));
				return;;
			};
		};
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("(", 1));
	_1aa9d2508_possibleRefExpr(_self_, (*((*(_23736_m))._field_Left))._field_Model);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(" ", 1));
	_1aaaa4dd3_write((*(_self_))._field_oc, (*((*(_23736_m))._field_Op))._field_Kind);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(" ", 1));
	_1aa9d2508_possibleRefExpr(_self_, (*((*(_23736_m))._field_Right))._field_Model);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _1aa9d13c5_binary(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62c1ea8_BinopExprModel> _26830_m) {
	{
		auto &_match_expr{ (*((*(_26830_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1aa2186bd:;
			{
				if ((_1c64221e6_Struct((*((*(_26830_m))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1aa9d0d64_divByZeroBinary(_self_, &((*(_26830_m))._field_Op), &((*(_26830_m))._field_Left), &((*(_26830_m))._field_Right));
					return;;
				};
			}
		}
		_match_end_1aa218613:;
	};
	_1aa9d111c_unsafeBinary(_self_, _26830_m);
}



inline void _1aa9d167d_var(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c6389da6_Var> _28027_m) {
	if ((*(_28027_m))._field_Binded) {
		jule::Ptr<_1c6298666_Directive> _28217_d = _1aaac6421_findDirective(&((*(_28027_m))._field_Directives), jule::Str("namespace", 9));;
		if ((_28217_d != nullptr)) {
			_1aaaa4dd3_write((*(_self_))._field_oc, _1aaab682e_concatAllParts((*(_28217_d))._field_Args));
			_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("::", 2));
		};
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, static__1aa9e4ce0_var(_28027_m));
}



inline void _1aa9d1936_structureIns(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62bcab9_StructIns> _29136_m) {
	_1aaaa4dd3_write((*(_self_))._field_oc, _1aaabcc97_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), _29136_m));
}



inline void _1aa9d1bde_unary(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62c2382_UnaryExprModel> _29529_m) {
	{
		auto &_match_expr{ (*((*(_29529_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1aa21ea26:;
			{
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("(~(", 3));
				_1aa9d2508_possibleRefExpr(_self_, (*((*(_29529_m))._field_Expr))._field_Model);
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1aa21ea9d:;
			{
				if ((_21e49099c_Production || (_1c6420e09_Sptr((*((*(_29529_m))._field_Expr))._field_Kind.ptr()) == nullptr))) {
					goto _match_end_1aa21e95a;
				};
				_1aa9d2508_possibleRefExpr(_self_, (*((*(_29529_m))._field_Expr))._field_Model);
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(".get(\"", 6));
				_1aaaa70d3_locInfo((*(_self_))._field_oc, &((*(_29529_m))._field_Op));
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_1aa21e95a:;
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("(", 1));
	_1aaaa4dd3_write((*(_self_))._field_oc, (*((*(_29529_m))._field_Op))._field_Kind);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("(", 1));
	_1aa9d2508_possibleRefExpr(_self_, (*((*(_29529_m))._field_Expr))._field_Model);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("))", 2));
}



inline void _1aa9d1e97_structureLit(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62c2c56_StructLitExprModel> _31936_m) {
	if ((*((*((*(_31936_m))._field_Strct))._field_Decl))._field_Binded) {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("(", 1));
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, static__1aa9e475c_structureIns(&((*(_31936_m))._field_Strct)));
	if ((*((*((*(_31936_m))._field_Strct))._field_Decl))._field_Binded) {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("{", 1));
	if (((*(_31936_m))._field_Args.len() > 0LL)) {
		_julec_label_1aa229866:;
		{
			auto expr = &((*((*(_31936_m))._field_Strct))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa229998:;
			if (it != expr_end) {
				jule::I64 _33217_i = it - expr->begin();
				jule::Ptr<_1c62bc019_FieldIns> _33220_f = *it;
				{
					{
						auto expr = &((*(_31936_m))._field_Args);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1aa22a823:;
						if (it != expr_end) {
							jule::Ptr<_1c62c28b0_StructArgExprModel> _33329_arg = *it;
							{
								if (((*(_33329_arg))._field_Field == _33220_f)) {
									_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(".", 1));
									_1aaaa4dd3_write((*(_self_))._field_oc, static__1aa9e4a26_field(&((*((*(_33329_arg))._field_Field))._field_Decl)));
									_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("=", 1));
									_1aa9d2508_possibleRefExpr(_self_, (*((*(_33329_arg))._field_Expr))._field_Model);
									if ((((*((*(_31936_m))._field_Strct))._field_Fields.len() - _33217_i) > 1LL)) {
										_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(", ", 2));
									};
									goto _iter_next_1aa229998;
								};
							}
							_iter_next_1aa22a823:;
							++it;
							goto _iter_begin_1aa22a823;
						}
						_iter_end_1aa22a823:;
					};
				}
				_iter_next_1aa229998:;
				++it;
				_33217_i++;
				goto _iter_begin_1aa229998;
			}
			_iter_end_1aa229998:;
		};
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("}", 1));
}



inline void _1aa9d2250_allocStructure(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62c3053_AllocStructLitExprModel> _35038_m) {
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("jule::new_ptr<", 14));
	_1aaaa4dd3_write((*(_self_))._field_oc, static__1aa9e475c_structureIns(&((*((*(_35038_m))._field_Lit))._field_Strct)));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(">(", 2));
	_1aa9d1e97_structureLit(_self_, (*(_35038_m))._field_Lit);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _1aa9d2508_possibleRefExpr(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Any _35835_expr) {
	{
		auto &_match_expr{ _35835_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aa232ee0:;
			{
				jule::Ptr<_1c6389da6_Var> _36117_v = _35835_expr.cast_ptr<_1c6389da6_Var>(&__jule_any_type8);;
				if ((*(_36117_v))._field_Reference) {
					_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("(*(", 3));
					_1aa9db7cb_model(_self_, _35835_expr);
					_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("))", 2));
					return;;
				};
			}
		}
		_match_end_1aa232e8a:;
	};
	_1aa9db7cb_model(_self_, _35835_expr);
}



inline void _1aa9d2926_castTraitFromTrait(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62c35d6_CastingExprModel>* _37243_m, jule::Ptr<_1c62e2e96_Trait> _37269_t1, jule::Ptr<_1c62e2e96_Trait> _37285_t2) {
	_1aa9d2508_possibleRefExpr(_self_, (*((*(_37243_m))))._field_Expr);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(".mask<", 6));
	_1aaaa4dd3_write((*(_self_))._field_oc, static__1aa9e3e10_traitDecl(_37269_t1));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(">(", 2));
	_1aaaa6d2a_pushAndWriteMaskMapper((*(_self_))._field_oc, _37269_t1, _37285_t2);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _1aa9d2bce_casting(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62c35d6_CastingExprModel> _38731_m) {
	{
		
		if (_1aa9ddc51_isAny(&((*(_38731_m))._field_Kind))) {
			_case_begin_1aa2386bb:;
			{
				if (_1c641e600_IsNil((*(_38731_m))._field_ExprKind.ptr())) {
					_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("jule::Any()", 11));
					return;;
				};
				if ((_1c64216ac_TypeEnum((*(_38731_m))._field_ExprKind.ptr()) != nullptr)) {
					_1aa9d2508_possibleRefExpr(_self_, (*(_38731_m))._field_Expr);
					return;;
				};
				jule::I64 _39817_i = _1aaaa5b5e_pushAnyType((*(_self_))._field_oc, (*(_38731_m))._field_ExprKind);;
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("jule::Any(", 10));
				{
					auto &_match_expr{ (*(_38731_m))._field_Expr };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1aa23a36b:;
						{
							jule::Ptr<_1c64260eb_Prim> _40221_prim = _1c6420b73_Prim((*(_38731_m))._field_ExprKind.ptr());;
							if (((_40221_prim != nullptr) && _1dc25e88b_IsInt((*(_40221_prim))._field_Kind))) {
								_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("static_cast<", 12));
								_1aaaa4dd3_write((*(_self_))._field_oc, _1aaaba019_prim((*((*(_self_))._field_oc))._field_tc.ptr(), _40221_prim));
								_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(">(", 2));
								_1aa9d2508_possibleRefExpr(_self_, (*(_38731_m))._field_Expr);
								_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
								goto _match_end_1aa23c24c;
							};
							goto _case_begin_1aa23c2a2;
						}
					}
					else {
						_case_begin_1aa23c2a2:;
						{
							_1aa9d2508_possibleRefExpr(_self_, (*(_38731_m))._field_Expr);
						}
					}
					_match_end_1aa23c24c:;
				};
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(", &__jule_any_type", 18));
				_1aaaa4dd3_write((*(_self_))._field_oc, _1dc250063_Itoa(_39817_i));
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		else if (_1aa9ddc51_isAny(&((*(_38731_m))._field_ExprKind))) {
			_case_begin_1aa238743:;
			{
				_1aa9d2508_possibleRefExpr(_self_, (*(_38731_m))._field_Expr);
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(".", 1));
				if ((_1c6420e09_Sptr((*(_38731_m))._field_Kind.ptr()) != nullptr)) {
					_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("cast_ptr<", 9));
					_1aaaa4dd3_write((*(_self_))._field_oc, _1aaabe8e2_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_1c6420e09_Sptr((*(_38731_m))._field_Kind.ptr())))._field_Elem));
				} else {
					_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("cast<", 5));
					_1aaaa4dd3_write((*(_self_))._field_oc, _1aaabe8e2_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_38731_m))._field_Kind));
				};
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(">(", 2));
				if ((!(_21e49099c_Production))) {
					_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("\"", 1));
					_1aaaa70d3_locInfo((*(_self_))._field_oc, &((*(_38731_m))._field_Token));
					_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("\", ", 3));
				};
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("&__jule_any_type", 16));
				_1aaaa4dd3_write((*(_self_))._field_oc, _1dc250063_Itoa(static_cast<jule::I64>(_1aaaa5b5e_pushAnyType((*(_self_))._field_oc, (*(_38731_m))._field_Kind))));
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		else if ((_1c6421190_Ptr((*(_38731_m))._field_ExprKind.ptr()) != nullptr) || (_1c6421190_Ptr((*(_38731_m))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aa2387ba:;
			{
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("((", 2));
				_1aaaa4dd3_write((*(_self_))._field_oc, _1aaabe8e2_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_38731_m))._field_Kind));
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")(", 2));
				_1aa9d2508_possibleRefExpr(_self_, (*(_38731_m))._field_Expr);
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if ((_1c642247c_Trait((*(_38731_m))._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1aa238842:;
			{
				if ((_1c642247c_Trait((*(_38731_m))._field_Kind.ptr()) != nullptr)) {
					_1aa9d2926_castTraitFromTrait(_self_, &(_38731_m), _1c642247c_Trait((*(_38731_m))._field_Kind.ptr()), _1c642247c_Trait((*(_38731_m))._field_ExprKind.ptr()));
					return;;
				};
				_1aa9d2508_possibleRefExpr(_self_, (*(_38731_m))._field_Expr);
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(".", 1));
				if ((_1c6420e09_Sptr((*(_38731_m))._field_Kind.ptr()) != nullptr)) {
					_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("cast_ptr<", 9));
					_1aaaa4dd3_write((*(_self_))._field_oc, _1aaabe8e2_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_1c6420e09_Sptr((*(_38731_m))._field_Kind.ptr())))._field_Elem));
				} else {
					_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("cast<", 5));
					_1aaaa4dd3_write((*(_self_))._field_oc, _1aaabe8e2_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_38731_m))._field_Kind));
				};
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(">(", 2));
				if ((!(_21e49099c_Production))) {
					_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("\"", 1));
					_1aaaa70d3_locInfo((*(_self_))._field_oc, &((*(_38731_m))._field_Token));
					_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("\", ", 3));
				};
				_1aaaa4dd3_write((*(_self_))._field_oc, _1dc250063_Itoa(static_cast<jule::I64>(_1aaaa69b7_findTypeOffset((*(_self_))._field_oc.ptr(), _1c642247c_Trait((*(_38731_m))._field_ExprKind.ptr()), (*(_38731_m))._field_Kind))));
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		else if ((_1c642247c_Trait((*(_38731_m))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aa2388b9:;
			{
				_1aaaa4dd3_write((*(_self_))._field_oc, _1aaabe8e2_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_38731_m))._field_Kind));
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("(", 1));
				_1aa9d2508_possibleRefExpr(_self_, (*(_38731_m))._field_Expr);
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(", ", 2));
				_1aaaa4dd3_write((*(_self_))._field_oc, _1dc250063_Itoa(static_cast<jule::I64>(_1aaaa69b7_findTypeOffset((*(_self_))._field_oc.ptr(), _1c642247c_Trait((*(_38731_m))._field_Kind.ptr()), (*(_38731_m))._field_ExprKind))));
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		_match_end_1aa238578:;
	};
	jule::Ptr<_1c64260eb_Prim> _47913_prim = _1c6420b73_Prim((*(_38731_m))._field_Kind.ptr());;
	jule::Ptr<_1c64260eb_Prim> _48013_eprim = _1c6420b73_Prim((*(_38731_m))._field_ExprKind.ptr());;
	if ((((_48013_eprim != nullptr) && (_47913_prim != nullptr)) && _1c6429583_IsStr(_47913_prim.ptr()))) {
		if (_1c64279e3_IsU8(_48013_eprim.ptr())) {
			_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("jule::Str::from_byte(", 21));
		} else {
			_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("jule::Str::from_rune(", 21));
		};
		_1aa9d2508_possibleRefExpr(_self_, (*(_38731_m))._field_Expr);
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
		return;;
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("static_cast<", 12));
	_1aaaa4dd3_write((*(_self_))._field_oc, _1aaabe8e2_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_38731_m))._field_Kind));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(">(", 2));
	_1aa9d2508_possibleRefExpr(_self_, (*(_38731_m))._field_Expr);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _1aa9d2e87_models(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Slice<jule::Any> _49830_args) {
	if ((_49830_args.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &(_49830_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa2646c5:;
		if (it != expr_end) {
			jule::I64 _50214_i = it - expr->begin();
			jule::Any _50221_a = *it;
			{
				_1aa9d2508_possibleRefExpr(_self_, _50221_a);
				if (((_49830_args.len() - _50214_i) > 1LL)) {
					_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1aa2646c5:;
			++it;
			_50214_i++;
			goto _iter_begin_1aa2646c5;
		}
		_iter_end_1aa2646c5:;
	};
}



inline void _1aa9d3240_args(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62c3e88_FnCallExprModel>* _51029_m) {
	jule::I64 _51117_j = 0LL;;
	if (((((*((*((*(_51029_m))))._field_Func))._field_Owner != nullptr) && (!((*((*((*((*(_51029_m))))._field_Func))._field_Decl))._field_Statically))) || (((*((*((*(_51029_m))))._field_Func))._field_Params.len() > 0LL) && _1c62cd844_IsSelf((*((*((*((*(_51029_m))))._field_Func))._field_Params[0LL]))._field_Decl.ptr())))) {
		(_51117_j)++;
	};
	{
		auto expr = &((*((*(_51029_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa267651:;
		if (it != expr_end) {
			jule::I64 _51613_i = it - expr->begin();
			jule::Any _51616_arg = *it;
			{
				jule::Ptr<_1c62d1b55_ParamIns> _51717_p = (*((*((*(_51029_m))))._field_Func))._field_Params[_51117_j];;
				if ((((*(_51717_p))._field_Decl != nullptr) && (*((*(_51717_p))._field_Decl))._field_Reference)) {
					{
						auto &_match_expr{ _51616_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1ba96ae65:;
							{
								jule::Ptr<_1c6389da6_Var> _52125_v = _51616_arg.cast_ptr<_1c6389da6_Var>(&__jule_any_type8);;
								if ((*(_52125_v))._field_Reference) {
									_1aa9db7cb_model(_self_, _51616_arg);
									goto _julec_label_1ba96e41e;
								};
							}
						}
						_match_end_1ba96ae10:;
					};
					_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("&(", 2));
					_1aa9db7cb_model(_self_, _51616_arg);
					_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
					goto _julec_label_1ba96e41e;
				};
				_1aa9d2508_possibleRefExpr(_self_, _51616_arg);
				_julec_label_1ba96e41e:;
				if ((((*((*(_51029_m))))._field_Args.len() - _51613_i) > 1LL)) {
					_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(", ", 2));
				};
				(_51117_j)++;
			}
			_iter_next_1aa267651:;
			++it;
			_51613_i++;
			goto _iter_begin_1aa267651;
		}
		_iter_end_1aa267651:;
	};
}



inline void _1aa9d34e8_modelForCall(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Any _54136_expr) {
	{
		auto &_match_expr{ _54136_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ba970cc2:;
			{
				_1aa9d672c_funcIns(_self_, _54136_expr.cast_ptr<_1c62d2b01_FnIns>(&__jule_any_type7));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1ba970d49:;
			{
				jule::Ptr<_1c62c6a29_StructSubIdentExprModel> _54721_ssie = _54136_expr.cast_ptr<_1c62c6a29_StructSubIdentExprModel>(&__jule_any_type97);;
				if (((*(_54721_ssie))._field_Method != nullptr)) {
					_1aa9d672c_funcIns(_self_, (*(_54721_ssie))._field_Method);
					return;;
				};
			}
		}
		_match_end_1ba970c5b:;
	};
	_1aa9d2508_possibleRefExpr(_self_, _54136_expr);
}



inline void _1aa9d37a1_pushCallInf(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62c3e88_FnCallExprModel>* _55632_m) {
	if ((_21e49099c_Production || (!((*((*((*(_55632_m))))._field_Func))._field_Anon)))) {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("(", 1));
		return;;
	};
	if ((*((*((*(_55632_m))))._field_Func))._field_Anon) {
		{
			auto &_match_expr{ (*((*(_55632_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1ba974787:;
				{
					if ((*((*((*((*((*((*(_55632_m))))._field_Expr.cast_ptr<_1c62c6a29_StructSubIdentExprModel>(&__jule_any_type97)))._field_Field))._field_Decl))._field_Owner))._field_Binded) {
						_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("(", 1));
						return;;
					};
				}
			}
			_match_end_1ba974732:;
		};
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(".call", 5));
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("(\"", 2));
	_1aaaa70d3_locInfo((*(_self_))._field_oc, &((*((*(_55632_m))))._field_Token));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("\"", 1));
	if (((*((*(_55632_m))))._field_Args.len() != 0LL)) {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(", ", 2));
	};
}



inline jule::Bool _1aa9d3ae2_isWrapped(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62c3e88_FnCallExprModel>* _57934_m) {
	if ((((!(_1c62d4086_IsBuiltin((*((*(_57934_m))))._field_Func.ptr()))) && ((*((*((*((*(_57934_m))))._field_Func))._field_Decl))._field_Params.len() > 0LL)) && _1c62cd844_IsSelf((*((*((*((*(_57934_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_57934_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1ba979528:;
				{
					jule::Ptr<_1c62c6a29_StructSubIdentExprModel> _58325_ssie = (*((*(_57934_m))))._field_Expr.cast_ptr<_1c62c6a29_StructSubIdentExprModel>(&__jule_any_type97);;
					{
						
						if (_1c62cdaca_IsRef((*((*((*((*(_57934_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()) || (_1c6420e09_Sptr((*((*(_58325_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1ba97b140:;
							{
								goto _match_end_1ba97a3d6;
							}
						}
						else {
							_case_begin_1ba97a44c:;
							{
								if ((_1c64221e6_Struct((*((*(_58325_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									if ((!((*((*(_58325_ssie))._field_Expr))._field_Lvalue))) {
										_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_1aa9db7cb_model(_self_, (*((*(_58325_ssie))._field_Expr))._field_Model);
										_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1ba97a3d6:;
					};
				}
			}
			_match_end_1ba9794c3:;
		};
	};
	return false;;
}



inline void _1aa9d3d9a_pureFuncCall(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62c3e88_FnCallExprModel>* _60337_m) {
	jule::Bool _60413_wrapped = _1aa9d3ae2_isWrapped(_self_, _60337_m);;
	_1aa9d34e8_modelForCall(_self_, (*((*(_60337_m))))._field_Expr);
	if ((!(_1c62d4086_IsBuiltin((*((*(_60337_m))))._field_Func.ptr())))) {
		if (((*((*((*((*(_60337_m))))._field_Func))._field_Decl))._field_Binded && ((*((*((*(_60337_m))))._field_Func))._field_Generics.len() > 0LL))) {
			if ((!(_1aaac67d9_hasDirective(&((*((*((*((*(_60337_m))))._field_Func))._field_Decl))._field_Directives), jule::Str("cdef", 4))))) {
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("<", 1));
				{
					auto expr = &((*((*((*(_60337_m))))._field_Func))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ba982630:;
					if (it != expr_end) {
						jule::I64 _61026_i = it - expr->begin();
						jule::Ptr<_1c641bb3b_InsGeneric> _61033_g = *it;
						{
							_1aaaa4dd3_write((*(_self_))._field_oc, _1aaabe8e2_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_61033_g))._field_Kind));
							if ((((*((*((*(_60337_m))))._field_Func))._field_Generics.len() - _61026_i) > 1LL)) {
								_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(", ", 2));
							};
						}
						_iter_next_1ba982630:;
						++it;
						_61026_i++;
						goto _iter_begin_1ba982630;
					}
					_iter_end_1ba982630:;
				};
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(">", 1));
			};
		};
	};
	_1aa9d37a1_pushCallInf(_self_, _60337_m);
	jule::Bool _62117_locinfo = false;;
	if ((((!(_1c62d4086_IsBuiltin((*((*(_60337_m))))._field_Func.ptr()))) && ((*((*((*((*(_60337_m))))._field_Func))._field_Decl))._field_Params.len() > 0LL)) && _1c62cd844_IsSelf((*((*((*((*(_60337_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_60337_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1ba987eb5:;
				{
					jule::Ptr<_1c62c6a29_StructSubIdentExprModel> _62525_ssie = (*((*(_60337_m))))._field_Expr.cast_ptr<_1c62c6a29_StructSubIdentExprModel>(&__jule_any_type97);;
					{
						
						if (_1c62cdaca_IsRef((*((*((*((*(_60337_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr())) {
							_case_begin_1ba98c959:;
							{
								_1aa9d2508_possibleRefExpr(_self_, (*((*((*((*(_62525_ssie))._field_Expr))._field_Model.cast_ptr<_1c62c2382_UnaryExprModel>(&__jule_any_type110)))._field_Expr))._field_Model);
							}
						}
						else if ((_1c6420e09_Sptr((*((*(_62525_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1ba988ec7:;
							{
								_1aa9d2508_possibleRefExpr(_self_, (*((*((*((*(_62525_ssie))._field_Expr))._field_Model.cast_ptr<_1c62c2382_UnaryExprModel>(&__jule_any_type110)))._field_Expr))._field_Model);
								_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(".ptr(", 5));
								if ((!(_21e49099c_Production))) {
									_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("\"", 1));
									_1aaaa70d3_locInfo((*(_self_))._field_oc, &((*((*(_60337_m))))._field_Token));
									_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("\"", 1));
								};
								_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_1ba988e61:;
							{
								if ((_1c64221e6_Struct((*((*(_62525_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ (*((*(_62525_ssie))._field_Expr))._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_1ba989736:;
											{
												jule::Ptr<_1c6389da6_Var> _64433_v = (*((*(_62525_ssie))._field_Expr))._field_Model.cast_ptr<_1c6389da6_Var>(&__jule_any_type8);;
												if ((*(_64433_v))._field_Reference) {
													goto _match_end_1ba989c53;
												};
												goto _case_begin_1ba989ca8;
											}
										}
										else {
											_case_begin_1ba989ca8:;
											{
												_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("&", 1));
											}
										}
										_match_end_1ba989c53:;
									};
								};
								if (_60413_wrapped) {
									_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("_wrap_copy", 10));
								} else if ((_1c6421190_Ptr((*((*(_62525_ssie))._field_Expr))._field_Kind.ptr()) == nullptr)) {
									_1aa9db7cb_model(_self_, (*((*(_62525_ssie))._field_Expr))._field_Model);
								} else {
									_1aa9d2508_possibleRefExpr(_self_, (*((*((*((*(_62525_ssie))._field_Expr))._field_Model.cast_ptr<_1c62c2382_UnaryExprModel>(&__jule_any_type110)))._field_Expr))._field_Model);
								};
							}
						}
						_match_end_1ba988dea:;
					};
					if (((*((*(_60337_m))))._field_Args.len() > 0LL)) {
						_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type96) {
				_case_begin_1ba98803c:;
				{
					_1aa9d2508_possibleRefExpr(_self_, (*((*((*(_60337_m))))._field_Expr.cast_ptr<_1c62c6188_TraitSubIdentExprModel>(&__jule_any_type96)))._field_Expr);
					if ((!(_21e49099c_Production))) {
						_62117_locinfo=true;
					};
					if (((*((*(_60337_m))))._field_Args.len() > 0LL)) {
						_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_1ba987e4e:;
		};
	};
	_1aa9d3240_args(_self_, _60337_m);
	if (_62117_locinfo) {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(", \"", 3));
		_1aaaa70d3_locInfo((*(_self_))._field_oc, &((*((*(_60337_m))))._field_Token));
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("\"", 1));
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
	if (_60413_wrapped) {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("; })", 4));
	};
}



inline void _1aa9d4153_coFuncCall(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62c3e88_FnCallExprModel>* _68935_m) {
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("{\n", 2));
	_1aaaa50d1_addIndent((*(_self_))._field_oc);
	_2206c697e_StrBuilder _69217_head = static__2206c6c9d_New(32LL);;
	_2206d0625_WriteStr(&_69217_head, jule::Str("std::thread([", 13));
	if (((*((*((*(_68935_m))))._field_Func))._field_Owner != nullptr)) {
		_2206d0625_WriteStr(&_69217_head, jule::Str("_self_", 6));
		if (((*((*(_68935_m))))._field_Args.len() > 0LL)) {
			_2206d0625_WriteStr(&_69217_head, jule::Str(", ", 2));
		};
	};
	{
		auto expr = &((*((*(_68935_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ba99dbbd:;
		if (it != expr_end) {
			jule::I64 _70013_i = it - expr->begin();
			jule::Any _70016_arg = *it;
			{
				if ((_70013_i > 0LL)) {
					_2206d0625_WriteStr(&_69217_head, jule::Str(", ", 2));
				};
				{
					auto &_match_expr{ _70016_arg };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1ba9a01ec:;
						{
							jule::Ptr<_1c6389da6_Var> _70625_v = _70016_arg.cast_ptr<_1c6389da6_Var>(&__jule_any_type8);;
							_2206d0625_WriteStr(&_69217_head, static__1aa9e4ce0_var(_70625_v));
							goto _iter_next_1ba99dbbd;
						}
					}
					_match_end_1ba99e95a:;
				};
				jule::Str _71017_name = (jule::Str("_co_arg_", 8) + _1dc250063_Itoa(_70013_i));;
				_2206d0625_WriteStr(&_69217_head, _71017_name);
				_1aaaa54cc_indent((*(_self_))._field_oc);
				_1aaaa4dd3_write((*(_self_))._field_oc, _1aaabe8e2_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*((*((*((*(_68935_m))))._field_Func))._field_Params[_70013_i]))._field_Kind));
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(" ", 1));
				if ((*((*((*((*((*(_68935_m))))._field_Func))._field_Params[_70013_i]))._field_Decl))._field_Reference) {
					_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("&", 1));
				};
				_1aaaa4dd3_write((*(_self_))._field_oc, _71017_name);
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(" = ", 3));
				_1aa9d2508_possibleRefExpr(_self_, _70016_arg);
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(";\n", 2));
				jule::Any _72217_argS = jule::Any(_71017_name, &__jule_any_type4);;
				(*((*(_68935_m))))._field_Args[_70013_i]=(*(((jule::Any*)((&(_72217_argS))))));
			}
			_iter_next_1ba99dbbd:;
			++it;
			_70013_i++;
			goto _iter_begin_1ba99dbbd;
		}
		_iter_end_1ba99dbbd:;
	};
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_2206d036c_Write(&(*((*(_self_))._field_oc))._field_Obj, _2206d18bd_Buf(&_69217_head));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("](void) mutable -> void {\n", 26));
	_1aaaa50d1_addIndent((*(_self_))._field_oc);
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aa9d3d9a_pureFuncCall(_self_, _68935_m);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(";\n", 2));
	_1aaaa52ce_doneIndent((*(_self_))._field_oc);
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("}).detach();\n", 13));
	_1aaaa52ce_doneIndent((*(_self_))._field_oc);
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("}", 1));
}



inline void _1aa9d44b6_writeUseExpr(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62d2b01_FnIns>* _74037_f, jule::Ptr<_1c63dd35a_Data> _74052_d) {
	if ((_1c6422999_Tup((*(_74052_d))._field_Kind.ptr()) == nullptr)) {
		_1aa9d2508_possibleRefExpr(_self_, (*(_74052_d))._field_Model);
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(";", 1));
		return;;
	};
	jule::Ptr<_1c62c76a6_TupleExprModel> _74617_tup = (*(_74052_d))._field_Model.cast_ptr<_1c62c76a6_TupleExprModel>(&__jule_any_type81);;
	_1aaac3ece_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), _1c6422999_Tup((*((*(_74037_f))))._field_Result.ptr()));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("{", 1));
	{
		auto expr = &((*(_74617_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ba9abe40:;
		if (it != expr_end) {
			jule::I64 _74913_i = it - expr->begin();
			jule::Ptr<_1c63dd35a_Data> _74916_data = *it;
			{
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(".__jule_result_arg", 18));
				_1aaaa4dd3_write((*(_self_))._field_oc, _1dc250063_Itoa(_74913_i));
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("=", 1));
				_1aa9d2508_possibleRefExpr(_self_, (*(_74916_data))._field_Model);
				if ((((*(_74617_tup))._field_Datas.len() - _74913_i) > 1LL)) {
					_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(", ", 2));
				};
			}
			_iter_next_1ba9abe40:;
			++it;
			_74913_i++;
			goto _iter_begin_1ba9abe40;
		}
		_iter_end_1ba9abe40:;
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("};", 2));
}



inline void _1aa9d476e_funcCall(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62c3e88_FnCallExprModel> _76132_m) {
	if ((*(_76132_m))._field_IsCo) {
		_1aa9d4153_coFuncCall(_self_, &(_76132_m));
		return;;
	};
	if (((_1c62d4086_IsBuiltin((*(_76132_m))._field_Func.ptr()) || (!((*((*((*(_76132_m))._field_Func))._field_Decl))._field_Exceptional))) || (((*(_76132_m))._field_Except != nullptr) && ((*((*(_76132_m))._field_Except))._field_Stmts.len() == 0LL)))) {
		_1aa9d3d9a_pureFuncCall(_self_, &(_76132_m));
		return;;
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("({\n", 3));
	_1aaaa50d1_addIndent((*(_self_))._field_oc);
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("auto except = ", 14));
	_1aa9d3d9a_pureFuncCall(_self_, &(_76132_m));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(";\n", 2));
	_1aaaa54cc_indent((*(_self_))._field_oc);
	if (((*(_76132_m))._field_Except != nullptr)) {
		if ((((*((*(_76132_m))._field_Func))._field_Result == nullptr) || (!((*(_76132_m))._field_Assigned)))) {
			_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("if (!except.ok()) ", 18));
			_1aa9cae80_scope((*((*(_self_))._field_oc))._field_sc, (*(_76132_m))._field_Except);
			_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _78721_forwarded = _1aa9dd6bd_isForwarded(&((*(_76132_m))._field_Except));;
			_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_78721_forwarded) {
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("{", 1));
			};
			jule::Any _79225_stmt = (*((*(_76132_m))._field_Except))._field_Stmts[((*((*(_76132_m))._field_Except))._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _79225_stmt };
				
				if (_match_expr.type == &__jule_any_type24) {
					_case_begin_1ba9bd0e9:;
					{
						(*((*(_76132_m))._field_Except))._field_Stmts=(*((*(_76132_m))._field_Except))._field_Stmts.slice(0LL, ((*((*(_76132_m))._field_Except))._field_Stmts.len() - 1LL));
						_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("{\n", 2));
						_1aaaa50d1_addIndent((*(_self_))._field_oc);
						_1aa9cabc7_scopeStmts((*((*(_self_))._field_oc))._field_sc, &((*(_76132_m))._field_Except));
						_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("\n", 1));
						_1aaaa54cc_indent((*(_self_))._field_oc);
						_1aa9d44b6_writeUseExpr(_self_, &((*(_76132_m))._field_Func), _79225_stmt.cast_ptr<_1c63dd35a_Data>(&__jule_any_type24));
						_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("\n", 1));
						_1aaaa52ce_doneIndent((*(_self_))._field_oc);
						_1aaaa54cc_indent((*(_self_))._field_oc);
						_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("}", 1));
					}
				}
				else {
					_case_begin_1ba9bdd97:;
					{
						_1aa9cae80_scope((*((*(_self_))._field_oc))._field_sc, (*(_76132_m))._field_Except);
					}
				}
				_match_end_1ba9bdd42:;
			};
			if (_78721_forwarded) {
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(" ", 1));
				_1aa9dba84_initExpr(_self_, (*((*(_76132_m))._field_Func))._field_Result);
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(";}", 2));
			};
			_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(");\n", 3));
		};
		_1aaaa52ce_doneIndent((*(_self_))._field_oc);
	} else {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1aaaa70d3_locInfo((*(_self_))._field_oc, &((*(_76132_m))._field_Token));
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("\"));\n", 5));
		if ((!(_1c62d0170_IsVoid((*((*(_76132_m))._field_Func))._field_Decl.ptr())))) {
			_1aaaa54cc_indent((*(_self_))._field_oc);
			_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("(except.result);\n", 17));
		};
		_1aaaa52ce_doneIndent((*(_self_))._field_oc);
	};
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("})", 2));
}



inline void _1aa9d4a27_slice(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62c4362_SliceExprModel> _83229_m) {
	if (((*(_83229_m))._field_Elems.len() == 0LL)) {
		_1aaaa4dd3_write((*(_self_))._field_oc, _1aaabb801_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_83229_m))._field_ElemKind));
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("()", 2));
		return;;
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, _1aaabb801_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_83229_m))._field_ElemKind));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("::make({", 8));
	_1aa9d2e87_models(_self_, (*(_83229_m))._field_Elems);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("})", 2));
}



inline void _1aa9d4cd0_indexing(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62c4818_IndexingExprModel> _84432_m) {
	_1aa9d2508_possibleRefExpr(_self_, (*((*(_84432_m))._field_Expr))._field_Model);
	{
		
		if (_21e49099c_Production || (_1c6421190_Ptr((*((*(_84432_m))._field_Expr))._field_Kind.ptr()) != nullptr) || (_1c6422713_Map((*((*(_84432_m))._field_Expr))._field_Kind.ptr()) != nullptr) || _1aa9dd987_isExprComesFromBind(&((*(_84432_m))._field_Expr))) {
			_case_begin_1ba9d04c4:;
			{
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("[", 1));
				_1aa9d2508_possibleRefExpr(_self_, (*((*(_84432_m))._field_Index))._field_Model);
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1ba9d0e42:;
			{
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(".at(\"", 5));
				_1aaaa70d3_locInfo((*(_self_))._field_oc, &((*(_84432_m))._field_Token));
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("\", ", 3));
				_1aa9d2508_possibleRefExpr(_self_, (*((*(_84432_m))._field_Index))._field_Model);
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1ba9d0dcb:;
	};
}



inline void _1aa9d5088_unsafeIndexing(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c651c544_UnsafeIndexingExprModel> _86438_m) {
	_1aa9d2508_possibleRefExpr(_self_, (*((*((*(_86438_m))._field_Node))._field_Expr))._field_Model);
	{
		
		if (_21e49099c_Production || (_1c6421190_Ptr((*((*((*(_86438_m))._field_Node))._field_Expr))._field_Kind.ptr()) != nullptr) || (_1c6422713_Map((*((*((*(_86438_m))._field_Node))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ba9d63ed:;
			{
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("[", 1));
				_1aa9d2508_possibleRefExpr(_self_, (*((*((*(_86438_m))._field_Node))._field_Index))._field_Model);
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1ba9d7014:;
			{
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(".__at(", 6));
				_1aa9d2508_possibleRefExpr(_self_, (*((*((*(_86438_m))._field_Node))._field_Index))._field_Model);
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1ba9d6e9d:;
	};
}



inline void _1aa9d5341_anonFunc(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62c4be2_AnonFnExprModel> _88132_m) {
	_1aaaa4dd3_write((*(_self_))._field_oc, _1aaabe5a1_func((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_88132_m))._field_Func));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("([=]", 4));
	_1aaaac43a_paramsIns((*(_self_))._field_oc, &((*((*(_88132_m))._field_Func))._field_Params));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(" mutable -> ", 12));
	_1aaabde1e_funcInsResult((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), &((*(_88132_m))._field_Func));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(" ", 1));
	_1aa9cb238_funcScope((*((*(_self_))._field_oc))._field_sc, (*(_88132_m))._field_Func);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _1aa9d55e9_mapExpr(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62c5572_MapExprModel> _89231_m) {
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("jule::Map<", 10));
	_1aaaa4dd3_write((*(_self_))._field_oc, _1aaabe8e2_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_89231_m))._field_KeyKind));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(", ", 2));
	_1aaaa4dd3_write((*(_self_))._field_oc, _1aaabe8e2_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_89231_m))._field_ValKind));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(">({", 3));
	if (((*(_89231_m))._field_Entries.len() > 0LL)) {
		{
			auto expr = &((*(_89231_m))._field_Entries);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ba9e51ed:;
			if (it != expr_end) {
				jule::I64 _89918_i = it - expr->begin();
				jule::Ptr<_1c62c50bb_KeyValPairExprModel> _89925_pair = *it;
				{
					_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("{", 1));
					_1aa9d2508_possibleRefExpr(_self_, (*(_89925_pair))._field_Key);
					_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(",", 1));
					_1aa9d2508_possibleRefExpr(_self_, (*(_89925_pair))._field_Val);
					_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("}", 1));
					if ((((*(_89231_m))._field_Entries.len() - _89918_i) > 1LL)) {
						_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_1ba9e51ed:;
				++it;
				_89918_i++;
				goto _iter_begin_1ba9e51ed;
			}
			_iter_end_1ba9e51ed:;
		};
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("})", 2));
}



inline void _1aa9d58a2_slicing(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62c5b05_SlicingExprModel> _91331_m) {
	_1aa9d2508_possibleRefExpr(_self_, (*(_91331_m))._field_Expr);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(".slice(", 7));
	if ((!(_21e49099c_Production))) {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("\"", 1));
		_1aaaa70d3_locInfo((*(_self_))._field_oc, &((*(_91331_m))._field_Token));
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("\", ", 3));
	};
	_1aa9d2508_possibleRefExpr(_self_, (*(_91331_m))._field_Left);
	if (((*(_91331_m))._field_Right != nullptr)) {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(", ", 2));
		_1aa9d2508_possibleRefExpr(_self_, (*(_91331_m))._field_Right);
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _1aa9d5b5a_traitSub(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62c6188_TraitSubIdentExprModel> _92932_m) {
	_1aaaa4dd3_write((*(_self_))._field_oc, static__1aa9e3e10_traitDecl((*(_92932_m))._field_Trt));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("_mptr_data", 10));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("[(", 2));
	_1aa9d2508_possibleRefExpr(_self_, (*(_92932_m))._field_Expr);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(").type_offset].", 15));
	_1aaaa4dd3_write((*(_self_))._field_oc, static__1aa9e387c_func(&((*(_92932_m))._field_Method)));
}



inline void _1aa9d5e13_structureSub(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62c6a29_StructSubIdentExprModel> _93836_m) {
	_1aa9d2508_possibleRefExpr(_self_, (*((*(_93836_m))._field_Expr))._field_Model);
	if (((*(_93836_m))._field_Field == nullptr)) {
		return;;
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(".", 1));
	_1aaaa4dd3_write((*(_self_))._field_oc, static__1aa9e4a26_field(&((*((*(_93836_m))._field_Field))._field_Decl)));
}



inline void _1aa9d61bb_array(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62c73a9_ArrayExprModel> _94729_m) {
	_1aaaa4dd3_write((*(_self_))._field_oc, _1aaabd0d8_array((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_94729_m))._field_Kind));
	if (((*(_94729_m))._field_Elems.len() == 0LL)) {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("()", 2));
		return;;
	};
	if ((((*(_94729_m))._field_Elems.len() == 2LL) && ((*(_94729_m))._field_Elems[1LL] == nullptr))) {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("(", 1));
		_1aa9d2508_possibleRefExpr(_self_, (*(_94729_m))._field_Elems[0LL]);
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
		return;;
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("({", 2));
	_1aa9d2e87_models(_self_, (*(_94729_m))._field_Elems);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("})", 2));
	return;;
}



inline void _1aa9d6474_funcInsCommon(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62d2b01_FnIns> _97037_m) {
	_1aaaa4dd3_write((*(_self_))._field_oc, _1aaabe5a1_func((*((*(_self_))._field_oc))._field_tc.ptr(), _97037_m));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("(", 1));
	_1aa9d672c_funcIns(_self_, _97037_m);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _1aa9d672c_funcIns(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62d2b01_FnIns> _97731_m) {
	if ((((*(_97731_m))._field_Decl != nullptr) && (*((*(_97731_m))._field_Decl))._field_Binded)) {
		jule::Ptr<_1c6298666_Directive> _97917_d = _1aaac6421_findDirective(&((*((*(_97731_m))._field_Decl))._field_Directives), jule::Str("namespace", 9));;
		if ((_97917_d != nullptr)) {
			_1aaaa4dd3_write((*(_self_))._field_oc, _1aaab682e_concatAllParts((*(_97917_d))._field_Args));
			_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("::", 2));
		};
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, static__1aa9e3b46_funcIns(&(_97731_m)));
}



inline void _1aa9d69d5_tuple(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62c76a6_TupleExprModel> _98829_m) {
	{
		auto expr = &((*(_98829_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baa0ec73:;
		if (it != expr_end) {
			jule::I64 _98914_i = it - expr->begin();
			jule::Ptr<_1c63dd35a_Data> _98921_d = *it;
			{
				_1aa9d2508_possibleRefExpr(_self_, (*(_98921_d))._field_Model);
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(";", 1));
				if ((((*(_98829_m))._field_Datas.len() - _98914_i) > 1LL)) {
					_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("\n", 1));
					_1aaaa54cc_indent((*(_self_))._field_oc);
				};
			}
			_iter_next_1baa0ec73:;
			++it;
			_98914_i++;
			goto _iter_begin_1baa0ec73;
		}
		_iter_end_1baa0ec73:;
	};
}



inline void _1aa9d6c8d_newCall(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62c8333_BuiltinNewCallExprModel> _99931_m) {
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("jule::new_ptr<", 14));
	_1aaaa4dd3_write((*(_self_))._field_oc, _1aaabe8e2_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_99931_m))._field_Kind));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(">(", 2));
	if (((*(_99931_m))._field_Init != nullptr)) {
		_1aa9d2508_possibleRefExpr(_self_, (*(_99931_m))._field_Init);
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _1aa9d7046_outCall(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62c7a80_BuiltinOutCallExprModel> _100931_m) {
	if (((*(_100931_m))._field_Debug && _21e49099c_Production)) {
		return;;
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("jule::out(", 10));
	_1aa9d2508_possibleRefExpr(_self_, (*(_100931_m))._field_Expr);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _1aa9d72ee_outlnCall(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62c7e59_BuiltinOutlnCallExprModel> _101833_m) {
	if (((*(_101833_m))._field_Debug && _21e49099c_Production)) {
		return;;
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("jule::outln(", 12));
	_1aa9d2508_possibleRefExpr(_self_, (*(_101833_m))._field_Expr);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _1aa9d75a7_panicCall(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62c870c_BuiltinPanicCallExprModel> _102733_m) {
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("jule::panic(", 12));
	_1aa9d2508_possibleRefExpr(_self_, (*(_102733_m))._field_Expr);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_1aaaa70d3_locInfo((*(_self_))._field_oc, &((*(_102733_m))._field_Token));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("\"));", 4));
}



inline void _1aa9d7860_assertCall(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62c8bb3_BuiltinAssertCallExprModel> _103534_m) {
	if (_21e49099c_Production) {
		return;;
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("if (!(", 6));
	_1aa9d2508_possibleRefExpr(_self_, (*(_103534_m))._field_Expr);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_1aa9dc876_cstrLit(&((*((*(_self_))._field_oc))._field_Obj), (*(_103534_m))._field_Log);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_1aaaa70d3_locInfo((*(_self_))._field_oc, &((*(_103534_m))._field_Token));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("\"));", 4));
}



inline void _1aa9d7b18_errorCall(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62ca7b9_BuiltinErrorCallExprModel> _104833_m) {
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("return ", 7));
	if (_1c62d0170_IsVoid((*((*(_104833_m))._field_Func))._field_Decl.ptr())) {
		{
			auto &_match_expr{ (*((*(_104833_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1baa21603:;
				{
					jule::Ptr<_1c6389da6_Var> _105321_v = (*((*(_104833_m))._field_Err))._field_Model.cast_ptr<_1c6389da6_Var>(&__jule_any_type8);;
					if ((*(_105321_v))._field_Ident.equal("error", 5)) {
						_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("jule::VoidExceptional(except.error)", 35));
						return;;
					};
				}
			}
			_match_end_1baa2159d:;
		};
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("jule::VoidExceptional(jule::Any(", 32));
	} else {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("jule::Exceptional<", 18));
		_1aaac46a5_codeMut1((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), &((*((*(_104833_m))._field_Func))._field_Result));
		{
			auto &_match_expr{ (*((*(_104833_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1baa25a9c:;
				{
					jule::Ptr<_1c6389da6_Var> _106521_v = (*((*(_104833_m))._field_Err))._field_Model.cast_ptr<_1c6389da6_Var>(&__jule_any_type8);;
					if ((*(_106521_v))._field_Ident.equal("error", 5)) {
						_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(">(except.error)", 15));
						return;;
					};
				}
			}
			_match_end_1baa25a47:;
		};
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(">(jule::Any(", 12));
	};
	_1aa9d2508_possibleRefExpr(_self_, (*((*(_104833_m))._field_Err))._field_Model);
	jule::I64 _107413_i = _1aaaa5b5e_pushAnyType((*(_self_))._field_oc, (*((*(_104833_m))._field_Err))._field_Kind);;
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(", &__jule_any_type", 18));
	_1aaaa4dd3_write((*(_self_))._field_oc, _1dc250063_Itoa(_107413_i));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("))", 2));
}



inline void _1aa9d7dc1_copyCall(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62ca3e0_BuiltinCopyCallExprModel> _108032_m) {
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("jule::copy((", 12));
	_1aa9d2508_possibleRefExpr(_self_, (*((*(_108032_m))._field_Dest))._field_Model);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
	if ((_1c6420b73_Prim((*((*(_108032_m))._field_Dest))._field_Kind.ptr()) != nullptr)) {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(", (", 3));
	_1aa9d2508_possibleRefExpr(_self_, (*((*(_108032_m))._field_Src))._field_Model);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
	if ((_1c6420b73_Prim((*((*(_108032_m))._field_Src))._field_Kind.ptr()) != nullptr)) {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _1aa9d8179_lenCall(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62c9840_BuiltinLenCallExprModel> _109631_m) {
	_1aa9d2508_possibleRefExpr(_self_, (*((*(_109631_m))._field_Expr))._field_Model);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(".len()", 6));
}



inline void _1aa9d8432_capCall(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62c9b3c_BuiltinCapCallExprModel> _110131_m) {
	_1aa9d2508_possibleRefExpr(_self_, (*((*(_110131_m))._field_Expr))._field_Model);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(".cap()", 6));
}



inline void _1aa9d86da_deleteCall(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62ca016_BuiltinDeleteCallExprModel> _110634_m) {
	_1aa9d2508_possibleRefExpr(_self_, (*((*(_110634_m))._field_Dest))._field_Model);
	if (((*(_110634_m))._field_Key != nullptr)) {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(".del(", 5));
		_1aa9d2508_possibleRefExpr(_self_, (*((*(_110634_m))._field_Key))._field_Model);
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
	} else {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(".clear()", 8));
	};
}



inline void _1aa9d8993_makeCallSlice(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62c9169_BuiltinMakeCallExprModel>* _111738_m) {
	jule::Ptr<_1c642a5ea_Slc> _111817_slice = _1c6421bc9_Slc((*((*(_111738_m))))._field_Kind.ptr());;
	_1aaaa4dd3_write((*(_self_))._field_oc, _1aaabe8e2_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*((*(_111738_m))))._field_Kind));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("::alloc(", 8));
	_1aa9d2508_possibleRefExpr(_self_, (*((*(_111738_m))))._field_Len);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(", ", 2));
	if (((*((*(_111738_m))))._field_Cap != nullptr)) {
		_1aa9d2508_possibleRefExpr(_self_, (*((*(_111738_m))))._field_Cap);
	} else {
		_1aa9d2508_possibleRefExpr(_self_, (*((*(_111738_m))))._field_Len);
	};
	if (_1aaac6aa3_shouldInitialized(&((*(_111817_slice))._field_Elem))) {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(", ", 2));
		_1aa9dba84_initExpr(_self_, (*(_111817_slice))._field_Elem);
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _1aa9d8c4b_makeCallStr(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62c9169_BuiltinMakeCallExprModel>* _113536_m) {
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("jule::Str", 9));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("::alloc(", 8));
	_1aa9d2508_possibleRefExpr(_self_, (*((*(_113536_m))))._field_Len);
	if (((*((*(_113536_m))))._field_Cap != nullptr)) {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(", ", 2));
		_1aa9d2508_possibleRefExpr(_self_, (*((*(_113536_m))))._field_Cap);
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _1aa9d9004_makeCall(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62c9169_BuiltinMakeCallExprModel> _114632_m) {
	if ((_1c6421bc9_Slc((*(_114632_m))._field_Kind.ptr()) != nullptr)) {
		_1aa9d8993_makeCallSlice(_self_, &(_114632_m));
		return;;
	};
	_1aa9d8c4b_makeCallStr(_self_, &(_114632_m));
}



inline void _1aa9d92ac_pushToSlice(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c651c973_PushToSliceExprModel> _115435_m) {
	;
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("{ ", 2));
	_1aaaa4dd3_write((*(_self_))._field_oc, _1aaabb801_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), (*((*(_115435_m))._field_Elems))._field_ElemKind));
	jule::Bool _116217_ptr = false;;
	{
		auto &_match_expr{ (*(_115435_m))._field_Dest };
		
		if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1baa4138c:;
			{
				jule::Ptr<_1c62c2382_UnaryExprModel> _116621_u = (*(_115435_m))._field_Dest.cast_ptr<_1c62c2382_UnaryExprModel>(&__jule_any_type110);;
				if ((_1c6421190_Ptr((*((*(_116621_u))._field_Expr))._field_Kind.ptr()) != nullptr)) {
					_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(" *__jule_push_dest = ", 21));
					_1aa9d2508_possibleRefExpr(_self_, (*((*(_116621_u))._field_Expr))._field_Model);
					_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("; ", 2));
					_116217_ptr=true;
					goto _match_end_1baa43290;
				};
				goto _case_begin_1baa432e5;
			}
		}
		else {
			_case_begin_1baa432e5:;
			{
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(" &__jule_push_dest = ", 21));
				_1aa9d2508_possibleRefExpr(_self_, (*(_115435_m))._field_Dest);
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("; ", 2));
			}
		}
		_match_end_1baa43290:;
	};
	if (((*((*(_115435_m))._field_Elems))._field_Elems.len() == 1LL)) {
		if (_116217_ptr) {
			_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("__jule_push_dest->push(", 23));
		} else {
			_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("__jule_push_dest.push(", 22));
		};
		_1aa9d2508_possibleRefExpr(_self_, (*((*(_115435_m))._field_Elems))._field_Elems[0LL]);
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("); }", 4));
		return;;
	};
	if (_116217_ptr) {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("__jule_push_dest.alloc_for_append(", 34));
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, _1dc250063_Itoa(static_cast<jule::I64>((*((*(_115435_m))._field_Elems))._field_Elems.len())));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("); ", 3));
	{
		auto expr = &((*((*(_115435_m))._field_Elems))._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baa4b045:;
		if (it != expr_end) {
			jule::Any _120021_e = *it;
			{
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("__jule_push_dest", 16));
				if (_116217_ptr) {
					_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("->__push(", 9));
				} else {
					_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(".__push(", 8));
				};
				_1aa9d2508_possibleRefExpr(_self_, _120021_e);
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("); ", 3));
			}
			_iter_next_1baa4b045:;
			++it;
			goto _iter_begin_1baa4b045;
		}
		_iter_end_1baa4b045:;
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("}", 1));
}



inline void _1aa9d9565_appendToSlice(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c651cd4c_AppendToSliceExprModel> _121437_m) {
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("(", 1));
	_1aa9d2508_possibleRefExpr(_self_, (*(_121437_m))._field_Dest);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(").append(", 9));
	_1aa9d2508_possibleRefExpr(_self_, (*(_121437_m))._field_Slice);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(");", 2));
}



inline void _1aa9d981d_appendCall(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62c9543_BuiltinAppendCallExprModel> _122234_m) {
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("jule::append(", 13));
	_1aa9d2508_possibleRefExpr(_self_, (*(_122234_m))._field_Dest);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(",", 1));
	_1aa9d2508_possibleRefExpr(_self_, (*(_122234_m))._field_Elements);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _1aa9d9ac6_sizeof(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62c6375_SizeofExprModel> _123030_m) {
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("sizeof(", 7));
	_1aa9d2508_possibleRefExpr(_self_, (*(_123030_m))._field_Expr);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _1aa9d9d7e_alignof(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62caee5_AlignofExprModel> _123631_m) {
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("alignof(", 8));
	_1aa9d2508_possibleRefExpr(_self_, (*(_123631_m))._field_Expr);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _1aa9da137_runeLit(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62cb2e2_RuneExprModel> _124227_m) {
	if (((*(_124227_m))._field_Code <= 127LL)) {
		_2206d08cd_WriteByte(&(*((*(_self_))._field_oc))._field_Obj, '\'');
		jule::Str _124521_b = _1aa9dc25a_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>((*(_124227_m))._field_Code)));;
		if (_124521_b.equal("'", 1)) {
			_2206d08cd_WriteByte(&(*((*(_self_))._field_oc))._field_Obj, '\\');
		};
		_2206d0625_WriteStr(&(*((*(_self_))._field_oc))._field_Obj, _124521_b);
		_2206d08cd_WriteByte(&(*((*(_self_))._field_oc))._field_Obj, '\'');
		return;;
	};
	_1aa9dd008_itoa(&((*((*(_self_))._field_oc))._field_Obj), static_cast<jule::I64>(static_cast<jule::I64>((*(_124227_m))._field_Code)));
}



inline void _1aa9da3e0_structureStatic(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62c6ed0_StructStaticIdentExprModel> _125639_m) {
	_1aaaa4dd3_write((*(_self_))._field_oc, static__1aa9e3b46_funcIns(&((*(_125639_m))._field_Method)));
}



inline void _1aa9da698_integratedToStr(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62cb5de_IntegratedToStrExprModel> _126039_m) {
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("jule::to_str(", 13));
	_1aa9d2508_possibleRefExpr(_self_, (*(_126039_m))._field_Expr);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _1aa9da951_backendEmit(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62cb9b8_BackendEmitExprModel> _126635_m) {
	if (((*(_126635_m))._field_Exprs.len() == 0LL)) {
		_1aaaa4dd3_write((*(_self_))._field_oc, (*(_126635_m))._field_Code);
		return;;
	};
	jule::I64 _127113_n = _2206d13a1_Len(&(*((*(_self_))._field_oc))._field_Obj);;
	jule::Slice<jule::Any> _127217_args = jule::Slice<jule::Any>::alloc((*(_126635_m))._field_Exprs.len(), (*(_126635_m))._field_Exprs.len());;
	{
		auto expr = &((*(_126635_m))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baa5db3a:;
		if (it != expr_end) {
			jule::I64 _127314_i = it - expr->begin();
			jule::Any _127321_expr = *it;
			{
				_1aa9d2508_possibleRefExpr(_self_, _127321_expr);
				jule::Slice<jule::U8> _127521_buf = _2206d18bd_Buf(&(*((*(_self_))._field_oc))._field_Obj);;
				_127217_args[_127314_i]=jule::Any(static_cast<jule::Str>(_127521_buf.slice(_127113_n)), &__jule_any_type4);
				{
					_2206d1b76_SetBuf(&(*((*(_self_))._field_oc))._field_Obj, _127521_buf.slice(0LL, _127113_n));
				};
			}
			_iter_next_1baa5db3a:;
			++it;
			_127314_i++;
			goto _iter_begin_1baa5db3a;
		}
		_iter_end_1baa5db3a:;
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, _1c65078c5_Format((*(_126635_m))._field_Code, _127217_args));
}



inline void _1aa9dac09_free(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c62cbcb5_FreeExprModel> _128228_m) {
	_1aa9d2508_possibleRefExpr(_self_, (*(_128228_m))._field_Expr);
	if (_21e490309_RC) {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(".__free()", 9));
}



inline void _1aa9daeb2_strComp(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c651b8b7_StrCompExprModel> _129131_m) {
	if ((*(_129131_m))._field_NotEq) {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("(!", 2));
	};
	jule::Str _129513_s = _1dc262718_ReadStr((*(_129131_m))._field_Right.ptr());;
	_1aa9d2508_possibleRefExpr(_self_, (*(_129131_m))._field_Left);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(".equal(", 7));
	_1aa9dc876_cstrLit(&((*((*(_self_))._field_oc))._field_Obj), _129513_s);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(", ", 2));
	_1aaaa4dd3_write((*(_self_))._field_oc, _1dc250063_Itoa(static_cast<jule::I64>(_129513_s.len())));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
	if ((*(_129131_m))._field_NotEq) {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
	};
}



inline void _1aa9db26a_inlineStdInternalNosafeStobs(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c651d149_InlineStdInternalNosafeStobs> _130752_m) {
	_1aa9d2508_possibleRefExpr(_self_, (*(_130752_m))._field_Str);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(".fake_slice()", 13));
}



inline void _1aa9db523_emptyCompare(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c651b08c_EmptyCompareExprModel> _131236_m) {
	if ((*(_131236_m))._field_Neg) {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("!", 1));
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("(", 1));
	_1aa9d2508_possibleRefExpr(_self_, (*(_131236_m))._field_Expr);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(").empty()", 9));
}



inline void _1aa9db7cb_model(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Any _132129_m) {
	{
		auto &_match_expr{ _132129_m };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1baa6d991:;
			{
				_1aaaa4dd3_write((*(_self_))._field_oc, _132129_m.cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1baa6d430:;
			{
				_1aaaa4dd3_write((*(_self_))._field_oc, _1aaabe8e2_kind((*((*(_self_))._field_oc))._field_tc.ptr(), _132129_m.cast_ptr<_1c641d522_TypeKind>(&__jule_any_type83)));
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1baa6d63e:;
			{
				_1aa9d0946_constant(_self_, _132129_m.cast_ptr<_1dc260590_Const>(&__jule_any_type19));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1baa6d6a5:;
			{
				_1aa9d167d_var(_self_, _132129_m.cast_ptr<_1c6389da6_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1baa6d71b:;
			{
				_1aa9d1936_structureIns(_self_, _132129_m.cast_ptr<_1c62bcab9_StructIns>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1baa6d782:;
			{
				_1aa9d6474_funcInsCommon(_self_, _132129_m.cast_ptr<_1c62d2b01_FnIns>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1baa6e4a8:;
			{
				_1aa9d111c_unsafeBinary(_self_, (*(_132129_m.cast_ptr<_1c651c247_UnsafeBinopExprModel>(&__jule_any_type126)))._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1baa6e51e:;
			{
				_1aa9d13c5_binary(_self_, _132129_m.cast_ptr<_1c62c1ea8_BinopExprModel>(&__jule_any_type111));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1baa6e596:;
			{
				_1aa9d1bde_unary(_self_, _132129_m.cast_ptr<_1c62c2382_UnaryExprModel>(&__jule_any_type110));
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1baa6e61d:;
			{
				_1aa9d1e97_structureLit(_self_, _132129_m.cast_ptr<_1c62c2c56_StructLitExprModel>(&__jule_any_type94));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1baa6e695:;
			{
				_1aa9d2250_allocStructure(_self_, _132129_m.cast_ptr<_1c62c3053_AllocStructLitExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1baa6e71c:;
			{
				_1aa9d2bce_casting(_self_, _132129_m.cast_ptr<_1c62c35d6_CastingExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1baa6e794:;
			{
				_1aa9d476e_funcCall(_self_, _132129_m.cast_ptr<_1c62c3e88_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1baa6e81b:;
			{
				_1aa9d4a27_slice(_self_, _132129_m.cast_ptr<_1c62c4362_SliceExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1baa6e893:;
			{
				_1aa9d61bb_array(_self_, _132129_m.cast_ptr<_1c62c73a9_ArrayExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1baa6e91a:;
			{
				_1aa9d5088_unsafeIndexing(_self_, _132129_m.cast_ptr<_1c651c544_UnsafeIndexingExprModel>(&__jule_any_type128));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1baa6e992:;
			{
				_1aa9d4cd0_indexing(_self_, _132129_m.cast_ptr<_1c62c4818_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1baa6ea19:;
			{
				_1aa9d5341_anonFunc(_self_, _132129_m.cast_ptr<_1c62c4be2_AnonFnExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1baa6ea91:;
			{
				_1aa9d55e9_mapExpr(_self_, _132129_m.cast_ptr<_1c62c5572_MapExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1baa6eb18:;
			{
				_1aa9d58a2_slicing(_self_, _132129_m.cast_ptr<_1c62c5b05_SlicingExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1baa6eb90:;
			{
				_1aa9d5b5a_traitSub(_self_, _132129_m.cast_ptr<_1c62c6188_TraitSubIdentExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1baa6ec17:;
			{
				_1aa9d5e13_structureSub(_self_, _132129_m.cast_ptr<_1c62c6a29_StructSubIdentExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1baa6ec8e:;
			{
				_1aa9d69d5_tuple(_self_, _132129_m.cast_ptr<_1c62c76a6_TupleExprModel>(&__jule_any_type81));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1baa6ed16:;
			{
				_1aa9d7046_outCall(_self_, _132129_m.cast_ptr<_1c62c7a80_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1baa6ed8d:;
			{
				_1aa9d72ee_outlnCall(_self_, _132129_m.cast_ptr<_1c62c7e59_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1baa6ee15:;
			{
				_1aa9d6c8d_newCall(_self_, _132129_m.cast_ptr<_1c62c8333_BuiltinNewCallExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1baa6ee8c:;
			{
				_1aa9d75a7_panicCall(_self_, _132129_m.cast_ptr<_1c62c870c_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1baa70014:;
			{
				_1aa9d7860_assertCall(_self_, _132129_m.cast_ptr<_1c62c8bb3_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1baa7008b:;
			{
				_1aa9d7b18_errorCall(_self_, _132129_m.cast_ptr<_1c62ca7b9_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1baa70113:;
			{
				_1aa9d9004_makeCall(_self_, _132129_m.cast_ptr<_1c62c9169_BuiltinMakeCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1baa7018a:;
			{
				_1aa9d981d_appendCall(_self_, _132129_m.cast_ptr<_1c62c9543_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1baa70212:;
			{
				_1aa9d7dc1_copyCall(_self_, _132129_m.cast_ptr<_1c62ca3e0_BuiltinCopyCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1baa70289:;
			{
				_1aa9d8179_lenCall(_self_, _132129_m.cast_ptr<_1c62c9840_BuiltinLenCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1baa70311:;
			{
				_1aa9d8432_capCall(_self_, _132129_m.cast_ptr<_1c62c9b3c_BuiltinCapCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1baa70388:;
			{
				_1aa9d86da_deleteCall(_self_, _132129_m.cast_ptr<_1c62ca016_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1baa70410:;
			{
				_1aa9d9ac6_sizeof(_self_, _132129_m.cast_ptr<_1c62c6375_SizeofExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1baa70487:;
			{
				_1aa9d9d7e_alignof(_self_, _132129_m.cast_ptr<_1c62caee5_AlignofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1baa7050e:;
			{
				_1aa9da137_runeLit(_self_, _132129_m.cast_ptr<_1c62cb2e2_RuneExprModel>(&__jule_any_type82));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1baa70586:;
			{
				_1aa9da3e0_structureStatic(_self_, _132129_m.cast_ptr<_1c62c6ed0_StructStaticIdentExprModel>(&__jule_any_type95));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1baa7060d:;
			{
				_1aa9da698_integratedToStr(_self_, _132129_m.cast_ptr<_1c62cb5de_IntegratedToStrExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1baa70685:;
			{
				_1aa9da951_backendEmit(_self_, _132129_m.cast_ptr<_1c62cb9b8_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1baa7070c:;
			{
				_1aa9dac09_free(_self_, _132129_m.cast_ptr<_1c62cbcb5_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1baa70784:;
			{
				_1aa9daeb2_strComp(_self_, _132129_m.cast_ptr<_1c651b8b7_StrCompExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1baa7080b:;
			{
				_1aa9db26a_inlineStdInternalNosafeStobs(_self_, _132129_m.cast_ptr<_1c651d149_InlineStdInternalNosafeStobs>(&__jule_any_type129));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1baa70883:;
			{
				_1aa9d167d_var(_self_, (*(_132129_m.cast_ptr<_1c651b389_RefExprModel>(&__jule_any_type127)))._field_Var);
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1baa7090a:;
			{
				_1aa9db523_emptyCompare(_self_, _132129_m.cast_ptr<_1c651b08c_EmptyCompareExprModel>(&__jule_any_type124));
			}
		}
		else {
			_case_begin_1baa6d5c8:;
			{
				_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1baa6d573:;
	};
}



inline void _1aa9dba84_initExpr(jule::Ptr<_1aa9ce1b4_exprCoder> _self_, jule::Ptr<_1c641d522_TypeKind> _142032_t) {
	if (_1c64203c0_NilCompatible(_142032_t.ptr())) {
		if ((_1c6421190_Ptr(_142032_t.ptr()) != nullptr)) {
			_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("nullptr", 7));
		} else {
			_1aaaa4dd3_write((*(_self_))._field_oc, _1aaabe8e2_kind((*((*(_self_))._field_oc))._field_tc.ptr(), _142032_t));
			_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1c642b1de_Tuple> _143017_tup = _1c6422999_Tup(_142032_t.ptr());;
	if ((_143017_tup != nullptr)) {
		_1aaac3ece_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), _143017_tup);
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("{", 1));
		{
			auto expr = &((*(_143017_tup))._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1baa8c196:;
			if (it != expr_end) {
				jule::I64 _143418_i = it - expr->begin();
				jule::Ptr<_1c641d522_TypeKind> _143425_tt = *it;
				{
					if ((!(_1aaac6aa3_shouldInitialized(&(_143425_tt))))) {
						goto _iter_next_1baa8c196;
					};
					_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(".__jule_result_arg", 18));
					_1aaaa4dd3_write((*(_self_))._field_oc, _1dc250063_Itoa(_143418_i));
					_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("=", 1));
					_1aa9dba84_initExpr(_self_, _143425_tt);
					if ((((*(_143017_tup))._field_Types.len() - _143418_i) > 1LL)) {
						_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(", ", 2));
					};
				}
				_iter_next_1baa8c196:;
				++it;
				_143418_i++;
				goto _iter_begin_1baa8c196;
			}
			_iter_end_1baa8c196:;
		};
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("}", 1));
		return;;
	};
	jule::Ptr<_1c62e5691_Enum> _144917_enm = _1c6421426_Enum(_142032_t.ptr());;
	if ((_144917_enm != nullptr)) {
		_1aa9db7cb_model(_self_, (*((*((*((*(_144917_enm))._field_Items[0LL]))._field_Value))._field_Data))._field_Model);
		return;;
	};
	jule::Ptr<_1c64260eb_Prim> _145413_prim = _1c6420b73_Prim(_142032_t.ptr());;
	if ((_145413_prim != nullptr)) {
		if (_1dc25ee96_IsNum((*(_145413_prim))._field_Kind)) {
			_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("0", 1));
		} else if (_1c64292ec_IsBool(_145413_prim.ptr())) {
			_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("false", 5));
		} else if (_1c6429583_IsStr(_145413_prim.ptr())) {
			_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("jule::Str()", 11));
		};
		return;;
	};
	if ((_1c6421943_Arr(_142032_t.ptr()) != nullptr)) {
		jule::Ptr<_1c642c91b_Arr> _146621_arr = _1c6421943_Arr(_142032_t.ptr());;
		_1aaaa4dd3_write((*(_self_))._field_oc, _1aaabe8e2_kind((*((*(_self_))._field_oc))._field_tc.ptr(), _142032_t));
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("(", 1));
		_1aa9dba84_initExpr(_self_, (*(_146621_arr))._field_Elem);
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(")", 1));
		return;;
	};
	jule::Ptr<_1c62bcab9_StructIns> _147317_s = _1c64221e6_Struct(_142032_t.ptr());;
	if ((((_147317_s != nullptr) && (*((*(_147317_s))._field_Decl))._field_Binded) && (_1aaac6421_findDirective(&((*((*(_147317_s))._field_Decl))._field_Directives), jule::Str("typedef", 7)) == nullptr))) {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("(", 1));
		_1aaaa4dd3_write((*(_self_))._field_oc, _1aaabe8e2_kind((*((*(_self_))._field_oc))._field_tc.ptr(), _142032_t));
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("){}", 3));
		return;;
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, _1aaabe8e2_kind((*((*(_self_))._field_oc))._field_tc.ptr(), _142032_t));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("()", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _1aa9ce1b4_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa9deaed_TestCoder> static__1aa9e003d_New(jule::Ptr<_1aaaa472e_ObjectCoder>* _2824_oc) {
	return jule::new_ptr<_1aa9deaed_TestCoder>(_1aa9deaed_TestCoder{._field_oc=(*(_2824_oc))});;
}



inline jule::Ptr<_1c63469de_ImportInfo> _1aa9e02c4_findTestingPackage(jule::Ptr<_1aa9deaed_TestCoder> _self_) {
	{
		auto expr = &((*((*((*(_self_))._field_oc))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baa9c5e6:;
		if (it != expr_end) {
			jule::Ptr<_1c63469de_ImportInfo> _3521_imp = *it;
			{
				if ((*(_3521_imp))._field_LinkPath.equal("std::testing", 12)) {
					return _3521_imp;;
				};
			}
			_iter_next_1baa9c5e6:;
			++it;
			goto _iter_begin_1baa9c5e6;
		}
		_iter_end_1baa9c5e6:;
	};
	return nullptr;;
}



inline void _1aa9e057c_appendTest(jule::Ptr<_1aa9deaed_TestCoder> _self_, jule::Ptr<_1c62d2b01_FnIns> _4334_f) {
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aa9e0cb9_callTmReset(_self_);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(";\n", 2));
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \" ", 34));
	_1aa9dc876_cstrLit(&((*((*(_self_))._field_oc))._field_Obj), (*((*(_4334_f))._field_Decl))._field_Ident);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(" << std::endl;\n", 15));
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, static__1aa9e3b46_funcIns(&(_4334_f)));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("(_t);\n", 6));
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("post_test();\n", 13));
}



inline void _1aa9e0835_appendPackageTests(jule::Ptr<_1aa9deaed_TestCoder> _self_, jule::Ptr<_1c6349915_Package>* _5843_p) {
	{
		auto expr = &((*((*(_5843_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baaa4059:;
		if (it != expr_end) {
			jule::Ptr<_1c63d8135_SymbolTable> _5921_file = *it;
			{
				{
					auto expr = &((*(_5921_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1baaa49a5:;
					if (it != expr_end) {
						jule::Ptr<_1c62cebec_Fn> _6025_f = *it;
						{
							if (_1aaac67d9_hasDirective(&((*(_6025_f))._field_Directives), jule::Str("test", 4))) {
								_1aa9e057c_appendTest(_self_, (*(_6025_f))._field_Instances[0LL]);
							};
						}
						_iter_next_1baaa49a5:;
						++it;
						goto _iter_begin_1baaa49a5;
					}
					_iter_end_1baaa49a5:;
				};
			}
			_iter_next_1baaa4059:;
			++it;
			goto _iter_begin_1baaa4059;
		}
		_iter_end_1baaa4059:;
	};
}



inline jule::Bool _1aa9e0abb_readyTestingPackage(jule::Ptr<_1aa9deaed_TestCoder> _self_) {
	jule::Ptr<_1c63469de_ImportInfo> _6917_p = _1aa9e02c4_findTestingPackage(_self_);;
	if ((_6917_p == nullptr)) {
		return false;;
	};
	(*(_self_))._field_t=(*(_1c6347bbb_FindStruct(_6917_p.ptr(), jule::Str("T", 1), false)))._field_Instances[0LL];
	(*(_self_))._field_tmReset=_1c62bdb31_FindMethod((*(_self_))._field_t.ptr(), jule::Str("reset", 5), false);
	(*(_self_))._field_tmFailed=_1c62bdb31_FindMethod((*(_self_))._field_t.ptr(), jule::Str("Failed", 6), false);
	(*(_self_))._field_tmSkipped=_1c62bdb31_FindMethod((*(_self_))._field_t.ptr(), jule::Str("Skipped", 7), false);
	return true;;
}



inline void _1aa9e0cb9_callTmReset(jule::Ptr<_1aa9deaed_TestCoder> _self_) {
	_1aaaa4dd3_write((*(_self_))._field_oc, static__1aa9e387c_func(&((*(_self_))._field_tmReset)));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("(_t)", 4));
}



inline void _1aa9e0eb7_callTmFailed(jule::Ptr<_1aa9deaed_TestCoder> _self_) {
	_1aaaa4dd3_write((*(_self_))._field_oc, static__1aa9e387c_func(&((*(_self_))._field_tmFailed)));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("(_t)", 4));
}



inline void _1aa9e11b5_callTmSkipped(jule::Ptr<_1aa9deaed_TestCoder> _self_) {
	_1aaaa4dd3_write((*(_self_))._field_oc, static__1aa9e387c_func(&((*(_self_))._field_tmSkipped)));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("(_t)", 4));
}



inline void _1aa9e13b3_Serialize(jule::Ptr<_1aa9deaed_TestCoder> _self_) {
	_1aaab5e38_serializeHead((*(_self_))._field_oc);
	__JULE_DEFER({
		_1aaab5c3a_end((*(_self_))._field_oc);
	});;
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_1aaaa50d1_addIndent((*(_self_))._field_oc);
	_1aaaa54cc_indent((*(_self_))._field_oc);
	if ((!(_1aa9e0abb_readyTestingPackage(_self_)))) {
		_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("}", 1));
		_1aaaa52ce_doneIndent((*(_self_))._field_oc);
		return;;
	};
	_1aaaa4dd3_write((*(_self_))._field_oc, _1aaaba69b_asSptr((*((*(_self_))._field_oc))._field_tc.ptr(), _1aaabcc97_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_self_))._field_t)));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_1aaaa4dd3_write((*(_self_))._field_oc, _1aaabcc97_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_self_))._field_t));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_1aaaa50d1_addIndent((*(_self_))._field_oc);
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("++total;\n", 9));
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("if (", 4));
	_1aa9e0eb7_callTmFailed(_self_);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("else if (", 9));
	_1aa9e11b5_callTmSkipped(_self_);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1aaaa52ce_doneIndent((*(_self_))._field_oc);
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("};\n", 3));
	_1aa9e0835_appendPackageTests(_self_, &((*((*((*(_self_))._field_oc))._field_ir))._field_Main));
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("\n\n", 2));
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_1aaaa52ce_doneIndent((*(_self_))._field_oc);
	_1aaaa54cc_indent((*(_self_))._field_oc);
	_1aaaa4dd3_write((*(_self_))._field_oc, jule::Str("}\n", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _1aa9deaed_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline void static__1aa9e2d10_writeIdentTo(_2206c697e_StrBuilder* _3333_buf, jule::Str* _3351_ident) {
	{
		auto expr = _3351_ident;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baabeae1:;
		if (it != expr_end) {
			jule::U8 *_3416_b = it;
			{
				if (((*(_3416_b)) >= 128LLU)) {
					goto _julec_label_1baabee32;
				};
			}
			_iter_next_1baabeae1:;
			++it;
			goto _iter_begin_1baabeae1;
		}
		_iter_end_1baabeae1:;
	};
	_2206d0625_WriteStr(_3333_buf, (*(_3351_ident)));
	return;;
	_julec_label_1baabee32:;
	{
		auto expr = static_cast<jule::Slice<jule::I32>>((*(_3351_ident)));
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1baac5d06:;
		if (it != expr_end) {
			jule::I32 _4416_r = *it;
			{
				if ((_4416_r < 128LL)) {
					_2206d08cd_WriteByte(_3333_buf, static_cast<jule::U8>(static_cast<jule::U8>(_4416_r)));
					goto _iter_next_1baac5d06;
				};
				_2206d0625_WriteStr(_3333_buf, _1dc24ec99_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_4416_r)), 15LL));
			}
			_iter_next_1baac5d06:;
			++it;
			goto _iter_begin_1baac5d06;
		}
		_iter_end_1baac5d06:;
	};
}



inline jule::Str static__1aa9e3184_toOut(jule::Str* _6122_ident, jule::Uintptr _6134_addr) {
	if ((_6134_addr != 0LLU)) {
		_2206c697e_StrBuilder _6321_obj = static__2206c6c9d_New(40LL);;
		_2206d08cd_WriteByte(&_6321_obj, '_');
		_2206d0625_WriteStr(&_6321_obj, _1dc24e8d1_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_6134_addr)), 15LL));
		_2206d08cd_WriteByte(&_6321_obj, '_');
		static__1aa9e2d10_writeIdentTo(&(_6321_obj), _6122_ident);
		return _2206d0e1c_Str(&_6321_obj);;
	};
	_2206c697e_StrBuilder _7017_obj = static__2206c6c9d_New(static_cast<jule::I64>(((*(_6122_ident)).len() + 1LL)));;
	_2206d08cd_WriteByte(&_7017_obj, '_');
	static__1aa9e2d10_writeIdentTo(&(_7017_obj), _6122_ident);
	return _2206d0e1c_Str(&_7017_obj);;
}



inline jule::Str static__1aa9e35b3_toLocal(jule::I64 _8223_row, jule::I64 _8233_col, jule::Str* _8244_ident) {
	_2206c697e_StrBuilder _8317_obj = static__2206c6c9d_New(40LL);;
	_2206d08cd_WriteByte(&_8317_obj, '_');
	_2206d0625_WriteStr(&_8317_obj, _1dc250063_Itoa(_8223_row));
	_2206d0625_WriteStr(&_8317_obj, _1dc250063_Itoa(_8233_col));
	_2206d08cd_WriteByte(&_8317_obj, '_');
	static__1aa9e2d10_writeIdentTo(&(_8317_obj), _8244_ident);
	return _2206d0e1c_Str(&_8317_obj);;
}



inline jule::Str static__1aa9e387c_func(jule::Ptr<_1c62cebec_Fn>* _9321_f) {
	{
		
		if ((*((*(_9321_f))))._field_Binded) {
			_case_begin_1baacc89b:;
			{
				return (*((*(_9321_f))))._field_Ident;;
			}
		}
		else if ((*((*(_9321_f))))._field_Ident.equal("main", 4)) {
			_case_begin_1baacc192:;
			{
				return jule::Str("entry_point", 11);;
			}
		}
		else if (_1c62d0406_IsMethod((*(_9321_f)).ptr())) {
			_case_begin_1baacc208:;
			{
				jule::Str _10021_obj = static__1aa9e3184_toOut(&((*((*(_9321_f))))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_9321_f)))));;
				if ((*((*(_9321_f))))._field_Statically) {
					_10021_obj=(jule::Str("static_", 7) + _10021_obj);
					return _10021_obj;;
				};
				return _10021_obj;;
			}
		}
		else {
			_case_begin_1baacb37d:;
			{
				return static__1aa9e3184_toOut(&((*((*(_9321_f))))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_9321_f)))));;
			}
		}
		_match_end_1baacb9aa:;
	};
}



inline jule::Str static__1aa9e3b46_funcIns(jule::Ptr<_1c62d2b01_FnIns>* _11224_f) {
	if (_1c62d4086_IsBuiltin((*(_11224_f)).ptr())) {
		return (jule::Str("jule::", 6) + (*((*((*(_11224_f))))._field_Decl))._field_Ident);;
	};
	if (((*((*((*(_11224_f))))._field_Decl))._field_Binded || ((*((*(_11224_f))))._field_Generics.len() == 0LL))) {
		return static__1aa9e387c_func(&((*((*(_11224_f))))._field_Decl));;
	};
	return static__1aa9e3184_toOut(&((*((*((*(_11224_f))))._field_Decl))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_11224_f)))));;
}



inline jule::Str static__1aa9e3e10_traitDecl(jule::Ptr<_1c62e2e96_Trait> _12525_t) {
	return static__1aa9e3184_toOut(&((*(_12525_t))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12525_t)));;
}



inline jule::Str static__1aa9e41c9_param(jule::Ptr<_1c62cd228_Param>* _13022_p) {
	if ((_1c6286764_IsAnonIdent((*((*(_13022_p))))._field_Ident) || _1c628649a_IsIgnoreIdent((*((*(_13022_p))))._field_Ident))) {
		return jule::Str();;
	};
	if (_1c62cd844_IsSelf((*(_13022_p)).ptr())) {
		return jule::Str("_self_", 6);;
	};
	if (((*((*(_13022_p))))._field_Token == nullptr)) {
		return static__1aa9e35b3_toLocal(0LL, 0LL, &((*((*(_13022_p))))._field_Ident));;
	};
	return static__1aa9e35b3_toLocal((*((*((*(_13022_p))))._field_Token))._field_Row, (*((*((*(_13022_p))))._field_Token))._field_Column, &((*((*(_13022_p))))._field_Ident));;
}



inline jule::Str static__1aa9e4493_structure(jule::Ptr<_1c62b9d3b_Struct>* _14426_s) {
	if ((*((*(_14426_s))))._field_Binded) {
		if (_1aaac67d9_hasDirective(&((*((*(_14426_s))))._field_Directives), jule::Str("typedef", 7))) {
			return (*((*(_14426_s))))._field_Ident;;
		};
		return (jule::Str("struct ", 7) + (*((*(_14426_s))))._field_Ident);;
	};
	return static__1aa9e3184_toOut(&((*((*(_14426_s))))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_14426_s)))));;
}



inline jule::Str static__1aa9e475c_structureIns(jule::Ptr<_1c62bcab9_StructIns>* _15529_s) {
	if (((*((*((*(_15529_s))))._field_Decl))._field_Binded || ((*((*(_15529_s))))._field_Generics.len() == 0LL))) {
		return static__1aa9e4493_structure(&((*((*(_15529_s))))._field_Decl));;
	};
	return static__1aa9e3184_toOut(&((*((*((*(_15529_s))))._field_Decl))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_15529_s)))));;
}



inline jule::Str static__1aa9e4a26_field(jule::Ptr<_1c62b6e48_Field>* _16322_f) {
	if ((*((*((*(_16322_f))))._field_Owner))._field_Binded) {
		return (*((*(_16322_f))))._field_Ident;;
	};
	_2206c697e_StrBuilder _16717_obj = static__2206c6c9d_New(static_cast<jule::I64>((7LL + (*((*(_16322_f))))._field_Ident.len())));;
	_2206d0625_WriteStr(&_16717_obj, jule::Str("_field_", 7));
	static__1aa9e2d10_writeIdentTo(&(_16717_obj), &((*((*(_16322_f))))._field_Ident));
	return _2206d0e1c_Str(&_16717_obj);;
}



inline jule::Str static__1aa9e4ce0_var(jule::Ptr<_1c6389da6_Var> _17423_v) {
	{
		
		if ((*(_17423_v))._field_Binded) {
			_case_begin_1baad9cd7:;
			{
				return (*(_17423_v))._field_Ident;;
			}
		}
		else if ((*(_17423_v))._field_Ident.equal("error", 5)) {
			_case_begin_1baad9d4d:;
			{
				return jule::Str("except.error", 12);;
			}
		}
		else if ((*(_17423_v))._field_Ident.equal("self", 4)) {
			_case_begin_1baad9db4:;
			{
				return jule::Str("_self_", 6);;
			}
		}
		else if (((*(_17423_v))._field_RetOrder == -1LL)) {
			_case_begin_1baad9e2a:;
			{
				return jule::Str("__jule_func_result", 18);;
			}
		}
		else if (((*(_17423_v))._field_RetOrder >= 0LL)) {
			_case_begin_1baada1b1:;
			{
				return (jule::Str("__jule_func_result.__jule_result_arg", 36) + _1dc250063_Itoa((*(_17423_v))._field_RetOrder));;
			}
		}
		else if (((*(_17423_v))._field_Scope != nullptr)) {
			_case_begin_1baada227:;
			{
				return static__1aa9e35b3_toLocal((*((*(_17423_v))._field_Token))._field_Row, (*((*(_17423_v))._field_Token))._field_Column, &((*(_17423_v))._field_Ident));;
			}
		}
		else {
			_case_begin_1baad9c71:;
			{
				return static__1aa9e3184_toOut(&((*(_17423_v))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_17423_v)));;
			}
		}
		_match_end_1baad99b8:;
	};
}



inline jule::Str static__1aa9e50a9_iterBegin(jule::Uintptr _19625_it) {
	_2206c697e_StrBuilder _19717_obj = static__2206c6c9d_New(30LL);;
	_2206d0625_WriteStr(&_19717_obj, jule::Str("_iter_begin_", 12));
	_2206d0625_WriteStr(&_19717_obj, _1dc24e8d1_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19625_it)), 15LL));
	return _2206d0e1c_Str(&_19717_obj);;
}



inline jule::Str static__1aa9e5373_iterEnd(jule::Uintptr _20423_it) {
	_2206c697e_StrBuilder _20517_obj = static__2206c6c9d_New(30LL);;
	_2206d0625_WriteStr(&_20517_obj, jule::Str("_iter_end_", 10));
	_2206d0625_WriteStr(&_20517_obj, _1dc24e8d1_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20423_it)), 15LL));
	return _2206d0e1c_Str(&_20517_obj);;
}



inline jule::Str static__1aa9e563c_iterNext(jule::Uintptr _21224_it) {
	_2206c697e_StrBuilder _21317_obj = static__2206c6c9d_New(30LL);;
	_2206d0625_WriteStr(&_21317_obj, jule::Str("_iter_next_", 11));
	_2206d0625_WriteStr(&_21317_obj, _1dc24e8d1_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_21224_it)), 15LL));
	return _2206d0e1c_Str(&_21317_obj);;
}



inline jule::Str static__1aa9e5906_label(jule::Uintptr _22021_u) {
	_2206c697e_StrBuilder _22117_obj = static__2206c6c9d_New(30LL);;
	_2206d0625_WriteStr(&_22117_obj, jule::Str("_julec_label_", 13));
	_2206d0625_WriteStr(&_22117_obj, _1dc24e8d1_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_22021_u)), 15LL));
	return _2206d0e1c_Str(&_22117_obj);;
}



inline jule::Str static__1aa9e5bc0_matchEnd(jule::Uintptr _22824_m) {
	_2206c697e_StrBuilder _22917_obj = static__2206c6c9d_New(30LL);;
	_2206d0625_WriteStr(&_22917_obj, jule::Str("_match_end_", 11));
	_2206d0625_WriteStr(&_22917_obj, _1dc24e8d1_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_22824_m)), 15LL));
	return _2206d0e1c_Str(&_22917_obj);;
}



inline jule::Str static__1aa9e5e89_caseBegin(jule::Uintptr _23625_c) {
	_2206c697e_StrBuilder _23717_obj = static__2206c6c9d_New(30LL);;
	_2206d0625_WriteStr(&_23717_obj, jule::Str("_case_begin_", 12));
	_2206d0625_WriteStr(&_23717_obj, _1dc24e8d1_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_23625_c)), 15LL));
	return _2206d0e1c_Str(&_23717_obj);;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa9e27d2_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aaaa2c16_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aaaa32dd_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "ti:" << _Src._field_ti << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aaaa36b7_traitCast _Src) {
	_Stream << "traitCast{";
	_Stream << "t1:" << _Src._field_t1 << ", ";
	_Stream << "t2:" << _Src._field_t2;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1aaab8ac8_Str(_1aaab8743_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1aaab8e19_Equal(jule::Ptr<_1aaab8743_customType> _self_, jule::Ptr<_1c641d522_TypeKind> _4021_k) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aaab8743_customType _Src) {
	_Stream << _1aaab8ac8_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1aaab9348_typeCoder> static__1aaab9887_new(jule::Ptr<_1aaaa472e_ObjectCoder>* _6424_oc) {
	jule::Ptr<_1aaab9348_typeCoder> _6517_tc = jule::new_ptr<_1aaab9348_typeCoder>(_1aaab9348_typeCoder{._field_oc=(*(_6424_oc)), });;
	(*(_6517_tc))._field_rc=static__1aaac25e8_new(&(_6517_tc));
	return _6517_tc;;
}



inline jule::Str _1aaab9bc8_toType(_1aaab9348_typeCoder* _self_, jule::Str _7129_id) {
	if ((!_7129_id.equal("uintptr", 7))) {
		_7129_id=_1dc25220d_RealKindOf(_7129_id);
	};
	_2206c697e_StrBuilder _7517_obj = static__2206c6c9d_New(32LL);;
	_2206d0625_WriteStr(&_7517_obj, jule::Str("jule::", 6));
	if (((97LL <= _7129_id[0LL]) && (_7129_id[0LL] <= 122LLU))) {
		_2206d08cd_WriteByte(&_7517_obj, static_cast<jule::U8>((_7129_id[0LL] - 32LLU)));
	} else {
		_2206d08cd_WriteByte(&_7517_obj, _7129_id[0LL]);
	};
	_2206d0625_WriteStr(&_7517_obj, _7129_id.slice(1LL));
	return _2206d0e1c_Str(&_7517_obj);;
}



inline jule::Str _1aaaba019_prim(_1aaab9348_typeCoder* _self_, jule::Ptr<_1c64260eb_Prim> _8723_p) {
	return _1aaab9bc8_toType(_self_, _1c642643c_Str(_8723_p.ptr()));;
}



inline jule::Str _1aaaba35a_tuple(_1aaab9348_typeCoder* _self_, jule::Ptr<_1c642b1de_Tuple> _9228_t) {
	_2206c697e_StrBuilder _9317_obj = static__2206c6c9d_New(32LL);;
	_2206d0625_WriteStr(&_9317_obj, jule::Str("std::tuple<", 11));
	{
		auto expr = &((*(_9228_t))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bac50865:;
		if (it != expr_end) {
			jule::I64 _9514_i = it - expr->begin();
			jule::Ptr<_1c641d522_TypeKind> _9521_tk = *it;
			{
				_2206d0625_WriteStr(&_9317_obj, _1aaabe8e2_kind(_self_, _9521_tk));
				if ((((*(_9228_t))._field_Types.len() - _9514_i) > 1LL)) {
					_2206d08cd_WriteByte(&_9317_obj, ',');
				};
			}
			_iter_next_1bac50865:;
			++it;
			_9514_i++;
			goto _iter_begin_1bac50865;
		}
		_iter_end_1bac50865:;
	};
	_2206d08cd_WriteByte(&_9317_obj, '>');
	return _2206d0e1c_Str(&_9317_obj);;
}



inline jule::Str _1aaaba69b_asSptr(_1aaab9348_typeCoder* _self_, jule::Str _10625_elem) {
	_2206c697e_StrBuilder _10717_obj = static__2206c6c9d_New(static_cast<jule::I64>((11LL + _10625_elem.len())));;
	_2206d0625_WriteStr(&_10717_obj, jule::Str("jule::Ptr<", 10));
	_2206d0625_WriteStr(&_10717_obj, _10625_elem);
	_2206d08cd_WriteByte(&_10717_obj, '>');
	return _2206d0e1c_Str(&_10717_obj);;
}



inline jule::Str _1aaaba9dc_sptr(_1aaab9348_typeCoder* _self_, jule::Ptr<_1c6429b27_Sptr> _11527_sptr) {
	return _1aaaba69b_asSptr(_self_, _1aaabe8e2_kind(_self_, (*(_11527_sptr))._field_Elem));;
}



inline jule::Str _1aaabad2d_ptr(_1aaab9348_typeCoder* _self_, jule::Ptr<_1c642d3de_Ptr> _12026_p) {
	;
	if (_1c642de28_IsUnsafe(_12026_p.ptr())) {
		return jule::Str("void*", 5);;
	};
	return (_1aaabe8e2_kind(_self_, (*(_12026_p))._field_Elem) + jule::Str("*", 1));;
}



inline jule::Str _1aaabb16e_enumDecl(_1aaab9348_typeCoder* _self_, jule::Ptr<_1c62e5691_Enum> _12931_e) {
	return _1aaabe8e2_kind(_self_, (*((*(_12931_e))._field_Kind))._field_Kind);;
}



inline jule::Str _1aaabb4b0_typeEnumDecl(_1aaab9348_typeCoder* _self_, jule::Ptr<_1c62e6d9b_TypeEnum> _13435_e) {
	return jule::Str("jule::Any", 9);;
}



inline jule::Str _1aaabb801_asSlice(_1aaab9348_typeCoder* _self_, jule::Ptr<_1c641d522_TypeKind> _13830_elem) {
	_2206c697e_StrBuilder _13917_obj = static__2206c6c9d_New(45LL);;
	_2206d0625_WriteStr(&_13917_obj, jule::Str("jule::Slice<", 12));
	_2206d0625_WriteStr(&_13917_obj, _1aaabe8e2_kind(_self_, _13830_elem));
	_2206d08cd_WriteByte(&_13917_obj, '>');
	return _2206d0e1c_Str(&_13917_obj);;
}



inline jule::Str _1aaabbb42_slice(_1aaab9348_typeCoder* _self_, jule::Ptr<_1c642a5ea_Slc> _14728_s) {
	return _1aaabb801_asSlice(_self_, (*(_14728_s))._field_Elem);;
}



inline jule::Str _1aaabbe83_mapType(_1aaab9348_typeCoder* _self_, jule::Ptr<_1c642bc8e_Map> _15230_m) {
	_2206c697e_StrBuilder _15317_obj = static__2206c6c9d_New(43LL);;
	_2206d0625_WriteStr(&_15317_obj, jule::Str("jule::Map<", 10));
	_2206d0625_WriteStr(&_15317_obj, _1aaabe8e2_kind(_self_, (*(_15230_m))._field_Key));
	_2206d08cd_WriteByte(&_15317_obj, ',');
	_2206d0625_WriteStr(&_15317_obj, _1aaabe8e2_kind(_self_, (*(_15230_m))._field_Val));
	_2206d08cd_WriteByte(&_15317_obj, '>');
	return _2206d0e1c_Str(&_15317_obj);;
}



inline jule::Str _1aaabc2c4_traitIdent(_1aaab9348_typeCoder* _self_, jule::Str _16229_ident) {
	_2206c697e_StrBuilder _16317_obj = static__2206c6c9d_New(static_cast<jule::I64>((13LL + _16229_ident.len())));;
	_2206d0625_WriteStr(&_16317_obj, jule::Str("jule::Trait<", 12));
	_2206d0625_WriteStr(&_16317_obj, _16229_ident);
	_2206d08cd_WriteByte(&_16317_obj, '>');
	return _2206d0e1c_Str(&_16317_obj);;
}



inline jule::Str _1aaabc615_traitDecl(_1aaab9348_typeCoder* _self_, jule::Ptr<_1c62e2e96_Trait> _17128_t) {
	return _1aaabc2c4_traitIdent(_self_, static__1aa9e3e10_traitDecl(_17128_t));;
}



inline jule::Str _1aaabc956_structure(_1aaab9348_typeCoder* _self_, jule::Ptr<_1c62b9d3b_Struct> _17628_s) {
	_2206c697e_StrBuilder _17717_rep = static__2206c6c9d_New(32LL);;
	if (((*(_17628_s))._field_Binded && (!(_1aaac67d9_hasDirective(&((*(_17628_s))._field_Directives), jule::Str("typedef", 7)))))) {
		_2206d0625_WriteStr(&_17717_rep, jule::Str("struct ", 7));
	};
	_2206d0625_WriteStr(&_17717_rep, static__1aa9e4493_structure(&(_17628_s)));
	return _2206d0e1c_Str(&_17717_rep);;
}



inline jule::Str _1aaabcc97_structureIns(_1aaab9348_typeCoder* _self_, jule::Ptr<_1c62bcab9_StructIns> _18635_s) {
	if ((*((*(_18635_s))._field_Decl))._field_Binded) {
		_2206c697e_StrBuilder _18821_ident = static__2206c6c9d_New(32LL);;
		_2206d0625_WriteStr(&_18821_ident, static__1aa9e475c_structureIns(&(_18635_s)));
		if (((*(_18635_s))._field_Generics.len() > 0LL)) {
			_2206d08cd_WriteByte(&_18821_ident, '<');
			{
				auto expr = &((*(_18635_s))._field_Generics);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1bac60a73:;
				if (it != expr_end) {
					jule::I64 _19222_i = it - expr->begin();
					jule::Ptr<_1c641bb3b_InsGeneric> _19229_g = *it;
					{
						_2206d0625_WriteStr(&_18821_ident, _1aaabe8e2_kind(_self_, (*(_19229_g))._field_Kind));
						if ((((*(_18635_s))._field_Generics.len() - _19222_i) > 1LL)) {
							_2206d08cd_WriteByte(&_18821_ident, ',');
						};
					}
					_iter_next_1bac60a73:;
					++it;
					_19222_i++;
					goto _iter_begin_1bac60a73;
				}
				_iter_end_1bac60a73:;
			};
			_2206d08cd_WriteByte(&_18821_ident, '>');
		};
		jule::Ptr<_1c6298666_Directive> _20017_d = _1aaac6421_findDirective(&((*((*(_18635_s))._field_Decl))._field_Directives), jule::Str("namespace", 9));;
		if ((_20017_d != nullptr)) {
			jule::Str _20225_buf = _2206d0e1c_Str(&_18821_ident);;
			_2206d111a_Clear(&_18821_ident);
			_2206d0625_WriteStr(&_18821_ident, _1aaab682e_concatAllParts((*(_20017_d))._field_Args));
			_2206d0625_WriteStr(&_18821_ident, jule::Str("::", 2));
			_2206d0625_WriteStr(&_18821_ident, _20225_buf);
		};
		return _2206d0e1c_Str(&_18821_ident);;
	};
	return static__1aa9e475c_structureIns(&(_18635_s));;
}



inline jule::Str _1aaabd0d8_array(_1aaab9348_typeCoder* _self_, jule::Ptr<_1c642c91b_Arr> _21428_a) {
	_2206c697e_StrBuilder _21517_obj = static__2206c6c9d_New(45LL);;
	_2206d0625_WriteStr(&_21517_obj, jule::Str("jule::Array<", 12));
	_2206d0625_WriteStr(&_21517_obj, _1aaabe8e2_kind(_self_, (*(_21428_a))._field_Elem));
	_2206d08cd_WriteByte(&_21517_obj, ',');
	_2206d0625_WriteStr(&_21517_obj, _1dc250063_Itoa((*(_21428_a))._field_N));
	_2206d08cd_WriteByte(&_21517_obj, '>');
	return _2206d0e1c_Str(&_21517_obj);;
}



inline jule::Str _1aaabd76a_paramIns(_1aaab9348_typeCoder* _self_, jule::Ptr<_1c62d1b55_ParamIns>* _24132_p) {
	_2206c697e_StrBuilder _24217_obj = static__2206c6c9d_New(32LL);;
	if ((*((*((*(_24132_p))))._field_Decl))._field_Variadic) {
		_2206d0625_WriteStr(&_24217_obj, jule::Str("jule::Slice<", 12));
		_2206d0625_WriteStr(&_24217_obj, _1aaabe8e2_kind(_self_, (*((*(_24132_p))))._field_Kind));
		_2206d08cd_WriteByte(&_24217_obj, '>');
	} else {
		_2206d0625_WriteStr(&_24217_obj, _1aaabe8e2_kind(_self_, (*((*(_24132_p))))._field_Kind));
	};
	if ((*((*((*(_24132_p))))._field_Decl))._field_Reference) {
		_2206d08cd_WriteByte(&_24217_obj, '*');
	};
	return _2206d0e1c_Str(&_24217_obj);;
}



inline void _1aaabde1e_funcInsResult(_1aaab9348_typeCoder* _self_, _2206c697e_StrBuilder* _27137_s, jule::Ptr<_1c62d2b01_FnIns>* _27157_f) {
	if (_1c62d0170_IsVoid((*((*(_27157_f))))._field_Decl.ptr())) {
		if ((*((*((*(_27157_f))))._field_Decl))._field_Exceptional) {
			_2206d0625_WriteStr(_27137_s, jule::Str("jule::VoidExceptional", 21));
		} else {
			_2206d0625_WriteStr(_27137_s, jule::Str("void", 4));
		};
		return;;
	};
	if ((*((*((*(_27157_f))))._field_Decl))._field_Exceptional) {
		_2206d0625_WriteStr(_27137_s, jule::Str("jule::Exceptional<", 18));
		_1aaac46a5_codeMut1((*(_self_))._field_rc.ptr(), _27137_s, &((*((*(_27157_f))))._field_Result));
		_2206d08cd_WriteByte(_27137_s, '>');
		return;;
	};
	_1aaac46a5_codeMut1((*(_self_))._field_rc.ptr(), _27137_s, &((*((*(_27157_f))))._field_Result));
}



inline jule::Str _1aaabe260_anonFunc(_1aaab9348_typeCoder* _self_, jule::Ptr<_1c62d2b01_FnIns> _28931_f) {
	if ((((*(_28931_f))._field_Result != nullptr) && (_1c6422999_Tup((*(_28931_f))._field_Result.ptr()) != nullptr))) {
		_1aaaa5e17_pushResultIns((*(_self_))._field_oc, &(_28931_f));
	};
	_2206c697e_StrBuilder _29317_decl = static__2206c6c9d_New(20LL);;
	_1aaabde1e_funcInsResult(_self_, &(_29317_decl), &(_28931_f));
	_2206d08cd_WriteByte(&_29317_decl, '(');
	if (((*(_28931_f))._field_Params.len() > 0LL)) {
		{
			auto expr = &((*(_28931_f))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1acb85d19:;
			if (it != expr_end) {
				jule::I64 _29718_i = it - expr->begin();
				jule::Ptr<_1c62d1b55_ParamIns> _29725_param = *it;
				{
					if (_1c62cd844_IsSelf((*(_29725_param))._field_Decl.ptr())) {
						goto _iter_next_1acb85d19;
					};
					_2206d0625_WriteStr(&_29317_decl, _1aaabd76a_paramIns(_self_, &(_29725_param)));
					if ((((*(_28931_f))._field_Params.len() - _29718_i) > 1LL)) {
						_2206d08cd_WriteByte(&_29317_decl, ',');
					};
				}
				_iter_next_1acb85d19:;
				++it;
				_29718_i++;
				goto _iter_begin_1acb85d19;
			}
			_iter_end_1acb85d19:;
		};
	} else {
		_2206d0625_WriteStr(&_29317_decl, jule::Str("void", 4));
	};
	_2206d08cd_WriteByte(&_29317_decl, ')');
	return _2206d0e1c_Str(&_29317_decl);;
}



inline jule::Str _1aaabe5a1_func(_1aaab9348_typeCoder* _self_, jule::Ptr<_1c62d2b01_FnIns> _31427_f) {
	_2206c697e_StrBuilder _31517_obj = static__2206c6c9d_New(42LL);;
	_2206d0625_WriteStr(&_31517_obj, jule::Str("jule::Fn<", 9));
	_2206d0625_WriteStr(&_31517_obj, _1aaabe260_anonFunc(_self_, _31427_f));
	_2206d08cd_WriteByte(&_31517_obj, '>');
	return _2206d0e1c_Str(&_31517_obj);;
}



inline jule::Str _1aaabe8e2_kind(_1aaab9348_typeCoder* _self_, jule::Ptr<_1c641d522_TypeKind> _32327_k) {
	{
		
		if ((_1c64221e6_Struct(_32327_k.ptr()) != nullptr)) {
			_case_begin_1acb8c5d4:;
			{
				return _1aaabcc97_structureIns(_self_, _1c64221e6_Struct(_32327_k.ptr()));;
			}
		}
		else if (_1c641e369_Binded(_32327_k.ptr())) {
			_case_begin_1acb8c65b:;
			{
				return (*(_32327_k))._field_BindIdent;;
			}
		}
		else if ((_1c6420b73_Prim(_32327_k.ptr()) != nullptr)) {
			_case_begin_1acb8c6d3:;
			{
				return _1aaaba019_prim(_self_, _1c6420b73_Prim(_32327_k.ptr()));;
			}
		}
		else if ((_1c6422999_Tup(_32327_k.ptr()) != nullptr)) {
			_case_begin_1acb8c75a:;
			{
				return _1aaaba35a_tuple(_self_, _1c6422999_Tup(_32327_k.ptr()));;
			}
		}
		else if ((_1c6420e09_Sptr(_32327_k.ptr()) != nullptr)) {
			_case_begin_1acb8c7d2:;
			{
				return _1aaaba9dc_sptr(_self_, _1c6420e09_Sptr(_32327_k.ptr()));;
			}
		}
		else if ((_1c6421190_Ptr(_32327_k.ptr()) != nullptr)) {
			_case_begin_1acb8c859:;
			{
				return _1aaabad2d_ptr(_self_, _1c6421190_Ptr(_32327_k.ptr()));;
			}
		}
		else if ((_1c6421426_Enum(_32327_k.ptr()) != nullptr)) {
			_case_begin_1acb8c8d1:;
			{
				return _1aaabb16e_enumDecl(_self_, _1c6421426_Enum(_32327_k.ptr()));;
			}
		}
		else if ((_1c64216ac_TypeEnum(_32327_k.ptr()) != nullptr)) {
			_case_begin_1acb8c958:;
			{
				return _1aaabb4b0_typeEnumDecl(_self_, _1c64216ac_TypeEnum(_32327_k.ptr()));;
			}
		}
		else if ((_1c6421bc9_Slc(_32327_k.ptr()) != nullptr)) {
			_case_begin_1acb8c9d0:;
			{
				return _1aaabbb42_slice(_self_, _1c6421bc9_Slc(_32327_k.ptr()));;
			}
		}
		else if ((_1c6422713_Map(_32327_k.ptr()) != nullptr)) {
			_case_begin_1acb8ca57:;
			{
				return _1aaabbe83_mapType(_self_, _1c6422713_Map(_32327_k.ptr()));;
			}
		}
		else if ((_1c642247c_Trait(_32327_k.ptr()) != nullptr)) {
			_case_begin_1acb8cace:;
			{
				return _1aaabc615_traitDecl(_self_, _1c642247c_Trait(_32327_k.ptr()));;
			}
		}
		else if ((_1c6421943_Arr(_32327_k.ptr()) != nullptr)) {
			_case_begin_1acb8cb56:;
			{
				return _1aaabd0d8_array(_self_, _1c6421943_Arr(_32327_k.ptr()));;
			}
		}
		else if ((_1c6421e60_Fn(_32327_k.ptr()) != nullptr)) {
			_case_begin_1acb8cbcd:;
			{
				return _1aaabe5a1_func(_self_, _1c6421e60_Fn(_32327_k.ptr()));;
			}
		}
		_match_end_1acb8c408:;
	};
	{
		auto &_match_expr{ (*(_32327_k))._field_Kind };
		
		if (_match_expr.type_is(true, 27)) {
			_case_begin_1acb8cc88:;
			{
				return (*((*(_32327_k))._field_Kind.cast_ptr<_1aaab8743_customType>(27)))._field_kind;;
			}
		}
		else {
			_case_begin_1acb95e28:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);;
			}
		}
		_match_end_1acb95dc3:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1aaab9348_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "rc:" << _Src._field_rc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aaac2120_resultCoder> static__1aaac25e8_new(jule::Ptr<_1aaab9348_typeCoder>* _37724_tc) {
	return jule::new_ptr<_1aaac2120_resultCoder>(_1aaac2120_resultCoder{._field_tc=(*(_37724_tc))});;
}



inline void _1aaac295b_ptr(_1aaac2120_resultCoder* _self_, _2206c697e_StrBuilder* _38127_s, jule::Ptr<_1c642d3de_Ptr> _38146_p) {
	_2206d0625_WriteStr(_38127_s, jule::Str("p", 1));
	_1aaac4342_codeMut(_self_, _38127_s, &((*(_38146_p))._field_Elem));
}



inline void _1aaac2cbe_sptr(_1aaac2120_resultCoder* _self_, _2206c697e_StrBuilder* _38628_s, jule::Ptr<_1c6429b27_Sptr> _38647_p) {
	_2206d0625_WriteStr(_38628_s, jule::Str("x", 1));
	_1aaac4342_codeMut(_self_, _38628_s, &((*(_38647_p))._field_Elem));
}



inline void _1aaac3132_mapType(_1aaac2120_resultCoder* _self_, _2206c697e_StrBuilder* _39131_s, jule::Ptr<_1c642bc8e_Map> _39150_p) {
	_2206d0625_WriteStr(_39131_s, jule::Str("m", 1));
	_1aaac4342_codeMut(_self_, _39131_s, &((*(_39150_p))._field_Key));
	_1aaac4342_codeMut(_self_, _39131_s, &((*(_39150_p))._field_Val));
}



inline void _1aaac3495_slice(_1aaac2120_resultCoder* _self_, _2206c697e_StrBuilder* _39729_s, jule::Ptr<_1c642a5ea_Slc> _39748_slc) {
	_2206d0625_WriteStr(_39729_s, jule::Str("s", 1));
	_1aaac4342_codeMut(_self_, _39729_s, &((*(_39748_slc))._field_Elem));
}



inline void _1aaac3808_arr(_1aaac2120_resultCoder* _self_, _2206c697e_StrBuilder* _40227_s, jule::Ptr<_1c642c91b_Arr> _40246_arr) {
	_2206d0625_WriteStr(_40227_s, jule::Str("a", 1));
	_2206d0625_WriteStr(_40227_s, _1dc24ec99_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>((*(_40246_arr))._field_N)), 16LL));
	_1aaac4342_codeMut(_self_, _40227_s, &((*(_40246_arr))._field_Elem));
}



inline void _1aaac3b6b_func(_1aaac2120_resultCoder* _self_, _2206c697e_StrBuilder* _40828_s, jule::Ptr<_1c62d2b01_FnIns> _40847_f) {
	_2206d0625_WriteStr(_40828_s, jule::Str("f", 1));
	{
		auto expr = &((*(_40847_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb9d0a6:;
		if (it != expr_end) {
			jule::Ptr<_1c62d1b55_ParamIns> _41021_p = *it;
			{
				if ((*((*(_41021_p))._field_Decl))._field_Reference) {
					_2206d0625_WriteStr(_40828_s, jule::Str("r", 1));
				};
				_1aaac4342_codeMut(_self_, _40828_s, &((*(_41021_p))._field_Kind));
			}
			_iter_next_1acb9d0a6:;
			++it;
			goto _iter_begin_1acb9d0a6;
		}
		_iter_end_1acb9d0a6:;
	};
	if (((*(_40847_f))._field_Result != nullptr)) {
		_1aaac4342_codeMut(_self_, _40828_s, &((*(_40847_f))._field_Result));
	};
}



inline void _1aaac3ece_tup(_1aaac2120_resultCoder* _self_, _2206c697e_StrBuilder* _42127_s, jule::Ptr<_1c642b1de_Tuple> _42146_tup) {
	{
		auto expr = &((*(_42146_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acba074b:;
		if (it != expr_end) {
			jule::Ptr<_1c641d522_TypeKind> _42221_t = *it;
			{
				_2206d0625_WriteStr(_42127_s, jule::Str("__jule_tuple_", 13));
				_1aaac4342_codeMut(_self_, _42127_s, &(_42221_t));
			}
			_iter_next_1acba074b:;
			++it;
			goto _iter_begin_1acba074b;
		}
		_iter_end_1acba074b:;
	};
}



inline void _1aaac4342_codeMut(_1aaac2120_resultCoder* _self_, _2206c697e_StrBuilder* _42831_s, jule::Ptr<_1c641d522_TypeKind>* _42851_t) {
	{
		auto &_match_expr{ (*((*(_42851_t))))._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_1acba19b1:;
			{
				_1aaac295b_ptr(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_1c642d3de_Ptr>(26));
			}
		}
		else if (_match_expr.type_is(true, 21)) {
			_case_begin_1acba1d79:;
			{
				_1aaac2cbe_sptr(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_1c6429b27_Sptr>(21));
			}
		}
		else if (_match_expr.type_is(true, 24)) {
			_case_begin_1acba1de0:;
			{
				_1aaac3132_mapType(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_1c642bc8e_Map>(24));
			}
		}
		else if (_match_expr.type_is(true, 22)) {
			_case_begin_1acba1e56:;
			{
				_1aaac3495_slice(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_1c642a5ea_Slc>(22));
			}
		}
		else if (_match_expr.type_is(true, 25)) {
			_case_begin_1acba1ecd:;
			{
				_1aaac3808_arr(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_1c642c91b_Arr>(25));
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1acba2462:;
			{
				_1aaac3b6b_func(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_1c62d2b01_FnIns>(1));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1acba24d9:;
			{
				jule::Ptr<_1c62e5691_Enum> _44317_te = (*((*(_42851_t))))._field_Kind.cast_ptr<_1c62e5691_Enum>(3);;
				_2206d0625_WriteStr(_42831_s, static__1aa9e3184_toOut(&((*(_44317_te))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_44317_te))));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1acba2561:;
			{
				jule::Ptr<_1c62e6d9b_TypeEnum> _44617_te = (*((*(_42851_t))))._field_Kind.cast_ptr<_1c62e6d9b_TypeEnum>(4);;
				_2206d0625_WriteStr(_42831_s, static__1aa9e3184_toOut(&((*(_44617_te))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_44617_te))));
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1acba25d8:;
			{
				jule::Ptr<_1c62bcab9_StructIns> _44921_si = (*((*(_42851_t))))._field_Kind.cast_ptr<_1c62bcab9_StructIns>(0);;
				_2206d0625_WriteStr(_42831_s, static__1aa9e475c_structureIns(&(_44921_si)));
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1acba2660:;
			{
				jule::Ptr<_1c62e2e96_Trait> _45221_trt = (*((*(_42851_t))))._field_Kind.cast_ptr<_1c62e2e96_Trait>(2);;
				_2206d0625_WriteStr(_42831_s, static__1aa9e3e10_traitDecl(_45221_trt));
			}
		}
		else if (_match_expr.type_is(true, 20)) {
			_case_begin_1acba26d7:;
			{
				_2206d0625_WriteStr(_42831_s, (*((*((*(_42851_t))))._field_Kind.cast_ptr<_1c64260eb_Prim>(20)))._field_Kind);
			}
		}
		else if (_match_expr.type_is(true, 23)) {
			_case_begin_1acba275e:;
			{
				_1aaac3ece_tup(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_1c642b1de_Tuple>(23));
			}
		}
		else {
			_case_begin_1acba1d13:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:459:13"));;
			}
		}
		_match_end_1acba1cad:;
	};
}



inline void _1aaac46a5_codeMut1(_1aaac2120_resultCoder* _self_, _2206c697e_StrBuilder* _46332_s, jule::Ptr<_1c641d522_TypeKind>* _46352_t) {
	jule::Ptr<_1c642b1de_Tuple> _46417_tup = _1c6422999_Tup((*(_46352_t)).ptr());;
	if ((_46417_tup != nullptr)) {
		_1aaac3ece_tup(_self_, _46332_s, _46417_tup);
	} else {
		_2206d0625_WriteStr(_46332_s, _1aaabe8e2_kind((*(_self_))._field_tc.ptr(), (*(_46352_t))));
	};
}



inline jule::Str _1aaac49b3_code(_1aaac2120_resultCoder* _self_, jule::Ptr<_1c641d522_TypeKind>* _47228_t) {
	_2206c697e_StrBuilder _47317_s = static__2206c6c9d_New(20LL);;
	_1aaac4342_codeMut(_self_, &(_47317_s), _47228_t);
	return _2206d0e1c_Str(&_47317_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1aaac2120_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "tc:" << _Src._field_tc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1acbada67_Name(_1acbadc21_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1acbae00c_What(_1acbadc21_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1acbae150_Reset(_1acbadc21_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1acbae293_Short(_1acbadc21_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1acbadc21_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1acbb21b9_Name(_1acbb2582_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1acbb230c_What(_1acbb2582_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1acbb286d_Reset(_1acbb2582_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1acbb29b1_Short(_1acbb2582_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1acbb2582_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1acbb58b5_Name(_1acbb5c7d_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1acbb5a08_What(_1acbb5c7d_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1acbb6069_Reset(_1acbb5c7d_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1acbb61ac_Short(_1acbb5c7d_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1acbb5c7d_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1acbb9105_Name(_1acbb94bd_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1acbb9248_What(_1acbb94bd_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1acbb97a9_Reset(_1acbb94bd_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1acbb98ec_Short(_1acbb94bd_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1acbb94bd_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1acbbc801_Name(_1acbbcbb9_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1acbbc944_What(_1acbbcbb9_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1acbbcea5_Reset(_1acbbcbb9_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1acbbd0e8_Short(_1acbbcbb9_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1acbbcbb9_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aab3d961_FlagSet> static__1aab3dc4c_New(void) {
	return jule::new_ptr<_1aab3d961_FlagSet>(_1aab3d961_FlagSet{._field_flags=jule::Slice<jule::Trait<_1aab3bdb0_CommonFlag>>::alloc(0LL, 20LL)});;
}



inline jule::Trait<_1aab3bdb0_CommonFlag> _1aab3e1c0_FindFlag(_1aab3d961_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acbc7454:;
		if (it != expr_end) {
			jule::Trait<_1aab3bdb0_CommonFlag> _7221_flag = *it;
			{
				if ((_1aab3bdb0_CommonFlag_mptr_data[(_7221_flag).type_offset]._1aab0ac4c_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;;
				};
			}
			_iter_next_1acbc7454:;
			++it;
			goto _iter_begin_1acbc7454;
		}
		_iter_end_1acbc7454:;
	};
	return nullptr;;
}



inline jule::Trait<_1aab3bdb0_CommonFlag> _1aab3e511_FindFlagShort(_1aab3d961_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acbc8c5d:;
		if (it != expr_end) {
			jule::Trait<_1aab3bdb0_CommonFlag> _8221_flag = *it;
			{
				if ((_1aab3bdb0_CommonFlag_mptr_data[(_8221_flag).type_offset]._1aab0ade5_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;;
				};
			}
			_iter_next_1acbc8c5d:;
			++it;
			goto _iter_begin_1acbc8c5d;
		}
		_iter_end_1acbc8c5d:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1aab3ead8_Parse(_1aab3d961_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_1aab413e2_argParser _11617_ap = _1aab413e2_argParser{._field_set=(*(_self_)), ._field_args=_11524_args, };;
	({
		auto except = _1aab428dd_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(), _11617_ap._field_content);;
}



inline jule::Ptr<_1acbbcbb9_Flag> _1acc3a297_addFlagCommon(_1aab3d961_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1acc3ba5c:;
			{
				goto _match_end_1acc3b9e6;
			}
		}
		_match_end_1acc3b9e6:;
	};
	if ((_1aab3e1c0_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1aab3e511_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1acbbcbb9_Flag> _14817_flag = jule::new_ptr<_1acbbcbb9_Flag>(_1acbbcbb9_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_1aab3bdb0_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_1aab3bdb0_CommonFlag>(_14817_flag, 4)); };
	return _14817_flag;;
}

inline jule::Ptr<_1acbb94bd_Flag> _1acc438aa_addFlagCommon(_1aab3d961_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1acc4512b:;
			{
				goto _match_end_1acc450b5;
			}
		}
		_match_end_1acc450b5:;
	};
	if ((_1aab3e1c0_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1aab3e511_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1acbb94bd_Flag> _14817_flag = jule::new_ptr<_1acbb94bd_Flag>(_1acbb94bd_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_1aab3bdb0_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_1aab3bdb0_CommonFlag>(_14817_flag, 3)); };
	return _14817_flag;;
}



inline void _1acc3821d_AddVar(_1aab3d961_FlagSet* _self_, jule::Ptr<jule::Str> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1acbbcbb9_Flag> _17617_flag = _1acc3a297_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	(*(_17617_flag))._field_default=(*(_17532_var));
	(*(_17617_flag))._field_data=_17532_var;
}

inline void _1acc41875_AddVar(_1aab3d961_FlagSet* _self_, jule::Ptr<jule::Bool> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1acbb94bd_Flag> _17617_flag = _1acc438aa_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	(*(_17617_flag))._field_default=(*(_17532_var));
	(*(_17617_flag))._field_data=_17532_var;
}





std::ostream &operator<<(std::ostream &_Stream, _1aab3d961_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _1acbd0b66_parseInteger(_1aab413e2_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)> _19039_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_19031_s))).empty()) {
			_case_begin_1acbd3619:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_2218bcd3e_HasPrefix((*(_19031_s)), jule::Str("0x", 2))) {
			_case_begin_1acbd3b8b:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_2218bcd3e_HasPrefix((*(_19031_s)), jule::Str("0b", 2))) {
			_case_begin_1acbd396b:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_2218bcd3e_HasPrefix((*(_19031_s)), jule::Str("0o", 2))) {
			_case_begin_1acbd39d2:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_1acbd32d9:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1acbd3273:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1acbd31a7:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1acbd8520_parseInteger(_1aab413e2_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)> _19039_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_19031_s))).empty()) {
			_case_begin_1acbdae7e:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_2218bcd3e_HasPrefix((*(_19031_s)), jule::Str("0x", 2))) {
			_case_begin_1acbdb501:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_2218bcd3e_HasPrefix((*(_19031_s)), jule::Str("0b", 2))) {
			_case_begin_1acbdb2d1:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_2218bcd3e_HasPrefix((*(_19031_s)), jule::Str("0o", 2))) {
			_case_begin_1acbdb347:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_1acbdab4e:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1acbdaad8:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1acbdaa1c:;
	};
	return __jule_func_result;;
}



inline jule::Str _1aab41c0b_getData(_1aab413e2_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1aab41e81_processFlag(_1aab413e2_argParser* _self_, jule::Trait<_1aab3bdb0_CommonFlag>* _21735_flag) {
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1acbccd83:;
			{
				jule::Ptr<_1acbb94bd_Flag> _22021_bf = (*(_21735_flag)).cast_ptr<_1acbb94bd_Flag>(3);;
				(*((*(_22021_bf))._field_data))=(!((*(_22021_bf))._field_default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_1acbccd2d:;
	};
	jule::Str _22513_data = _1aab41c0b_getData(_self_);;
	if ((_22513_data).empty()) {
		return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1aab3bdb0_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1aab0ac4c_Name((*(_21735_flag)))) + jule::Str(": expression missing", 20)), &__jule_any_type4));
	};
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1acbcec64:;
			{
				jule::Ptr<_1acbadc21_Flag> _23221_intf = (*(_21735_flag)).cast_ptr<_1acbadc21_Flag>(0);;
				jule::Bool _23332_ok = false;;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1acbd0b66_parseInteger(_self_, &(_22513_data), jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _23370_s, jule::I64 _23378_base) mutable -> __jule_tuple_i64__jule_tuple_bool {
						__jule_tuple_i64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::I64>(({
							auto except = _1dc23d6e4_ParseInt(_23370_s, _23378_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LL;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*((*(_23221_intf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23332_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23332_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1aab3bdb0_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1aab0ac4c_Name((*(_21735_flag)))) + jule::Str(": expression must be valid signed integer", 41)), &__jule_any_type4));
				};
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1acbcecca:;
			{
				jule::Ptr<_1acbb2582_Flag> _24021_uintf = (*(_21735_flag)).cast_ptr<_1acbb2582_Flag>(1);;
				jule::Bool _24133_ok = false;;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1acbd8520_parseInteger(_self_, &(_22513_data), jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _24171_s, jule::I64 _24179_base) mutable -> __jule_tuple_u64__jule_tuple_bool {
						__jule_tuple_u64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(({
							auto except = _1dc23d23d_ParseUint(_24171_s, _24179_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LLU;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*((*(_24021_uintf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_24133_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_24133_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1aab3bdb0_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1aab0ac4c_Name((*(_21735_flag)))) + jule::Str(": expression must be valid unsigned integer", 43)), &__jule_any_type4));
				};
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1acbced41:;
			{
				jule::Ptr<_1acbb5c7d_Flag> _24821_ff = (*(_21735_flag)).cast_ptr<_1acbb5c7d_Flag>(2);;
				(*((*(_24821_ff))._field_data))=static_cast<jule::F64>(({
					auto except = _1dc245146_ParseFloat(_22513_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1aab3bdb0_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1aab0ac4c_Name((*(_21735_flag)))) + jule::Str(": expression must be valid floating-point", 41)), &__jule_any_type4));
					} 0;});
				}));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1acbceda7:;
			{
				(*((*((*(_21735_flag)).cast_ptr<_1acbbcbb9_Flag>(4)))._field_data))=_22513_data;
			}
		}
		_match_end_1acbce417:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1aab42239_singleDash(_1aab413e2_argParser* _self_, jule::Str* _25730_arg) {
	if (((*(_25730_arg)).len() == 1LL)) {
		return jule::VoidExceptional(jule::Any(((*(_25730_arg)) + jule::Str(": missing argument", 18)), &__jule_any_type4));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>((*(_25730_arg))).slice(1LL);;
	{
		auto expr = &(_26113_rarg);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acbe2e0e:;
		if (it != expr_end) {
			jule::I32 *_26216_r = it;
			{
				jule::Trait<_1aab3bdb0_CommonFlag> _26321_flag = _1aab3e511_FindFlagShort(&(*(_self_))._field_set, (*(_26216_r)));;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(jule::Any((((*(_25730_arg)) + jule::Str(": flag is not exist: ", 21)) + jule::Str::from_rune((*(_26216_r)))), &__jule_any_type4));
				};
				({
					auto except = _1aab41e81_processFlag(_self_, &(_26321_flag));
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1acbe2e0e:;
			++it;
			goto _iter_begin_1acbe2e0e;
		}
		_iter_end_1acbe2e0e:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1aab424e2_doubleDash(_1aab413e2_argParser* _self_, jule::Str* _27230_arg) {
	if (((*(_27230_arg)).len() == 2LL)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str(": missing argument", 18)), &__jule_any_type4));
	};
	jule::Trait<_1aab3bdb0_CommonFlag> _27617_flag = _1aab3e1c0_FindFlag(&(*(_self_))._field_set, (*(_27230_arg)).slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str(": flag is not exist", 19)), &__jule_any_type4));
	};
	({
		auto except = _1aab41e81_processFlag(_self_, &(_27617_flag));
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1aab426e0_tryArg(_1aab413e2_argParser* _self_) {
	jule::Str _28413_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28413_arg[0LL] == '-')) {
		if (((_28413_arg.len() > 1LL) && (_28413_arg[1LL] == '-'))) {
			({
				auto except = _1aab424e2_doubleDash(_self_, &(_28413_arg));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _1aab42239_singleDash(_self_, &(_28413_arg));
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_28413_arg); };
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1aab428dd_parse(_1aab413e2_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1aab426e0_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1acbe9971:;
	}
	_iter_end_1acbe9971:;;
	return jule::VoidExceptional();
}





std::ostream &operator<<(std::ostream &_Stream, _1aab413e2_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aaaa472e_ObjectCoder> static__1aaaa4b2a_New(jule::Ptr<_1a9ed6249_IR>* _9324_ir, _1aaaa2c16_SerializationInfo _9333_info) {
	jule::Ptr<_1aaaa472e_ObjectCoder> _9417_oc = jule::new_ptr<_1aaaa472e_ObjectCoder>(_1aaaa472e_ObjectCoder{._field_ir=(*(_9324_ir)), ._field_info=_9333_info, });;
	(*(_9417_oc))._field_ec=static__1aa9ce57c_new(&(_9417_oc));
	(*(_9417_oc))._field_sc=static__1aa9c55b7_new(&(_9417_oc));
	(*(_9417_oc))._field_tc=static__1aaab9887_new(&(_9417_oc));
	return _9417_oc;;
}



inline void _1aaaa4dd3_write(jule::Ptr<_1aaaa472e_ObjectCoder> _self_, jule::Str _10425_s) {
	_2206d0625_WriteStr(&(*(_self_))._field_Obj, _10425_s);
}



inline void _1aaaa50d1_addIndent(jule::Ptr<_1aaaa472e_ObjectCoder> _self_) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_indentBuffer; __jule_push_dest.push(9LLU); };
}



inline void _1aaaa52ce_doneIndent(jule::Ptr<_1aaaa472e_ObjectCoder> _self_) {
	(*(_self_))._field_indentBuffer=(*(_self_))._field_indentBuffer.slice(0LL, ((*(_self_))._field_indentBuffer.len() - 1LL));
}



inline void _1aaaa54cc_indent(jule::Ptr<_1aaaa472e_ObjectCoder> _self_) {
	_2206d036c_Write(&(*(_self_))._field_Obj, (*(_self_))._field_indentBuffer);
}



inline jule::I64 _1aaaa581d_findAnyType(jule::Ptr<_1aaaa472e_ObjectCoder> _self_, jule::Ptr<_1c641d522_TypeKind>* _12336_t) {
	{
		auto expr = &((*(_self_))._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bab110a5:;
		if (it != expr_end) {
			jule::I64 _12414_i = it - expr->begin();
			jule::Ptr<_1c641d522_TypeKind> _12421_at = *it;
			{
				if (_1c641dc2b_Equal(_12421_at, (*(_12336_t)))) {
					return _12414_i;;
				};
			}
			_iter_next_1bab110a5:;
			++it;
			_12414_i++;
			goto _iter_begin_1bab110a5;
		}
		_iter_end_1bab110a5:;
	};
	return -1LL;;
}



inline jule::I64 _1aaaa5b5e_pushAnyType(jule::Ptr<_1aaaa472e_ObjectCoder> _self_, jule::Ptr<_1c641d522_TypeKind> _13235_t) {
	if ((_1c6421426_Enum(_13235_t.ptr()) != nullptr)) {
		_13235_t=(*((*(_1c6421426_Enum(_13235_t.ptr())))._field_Kind))._field_Kind;
	};
	jule::I64 _13617_i = _1aaaa581d_findAnyType(_self_, &(_13235_t));;
	if ((_13617_i != -1LL)) {
		return _13617_i;;
	};
	_13617_i=static_cast<jule::I64>((*(_self_))._field_anyTypeMap.len());
	{ jule::Slice<jule::Ptr<_1c641d522_TypeKind>> &__jule_push_dest = (*(_self_))._field_anyTypeMap; __jule_push_dest.push(_13235_t); };
	jule::Str _14213_si = _1dc250063_Itoa(_13617_i);;
	if ((_1c6420e09_Sptr(_13235_t.ptr()) != nullptr)) {
		jule::Str _14417_elem_kind = _1aaabe8e2_kind((*(_self_))._field_tc.ptr(), (*(_1c6420e09_Sptr(_13235_t.ptr())))._field_Elem);;
		jule::Str _14517_kind = _1aaaba69b_asSptr((*(_self_))._field_tc.ptr(), _14417_elem_kind);;
		_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str("void __jule_any_type", 20));
		_2206d0625_WriteStr(&(*(_self_))._field_anyObj, _14213_si);
		_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64));
		_2206d0625_WriteStr(&(*(_self_))._field_anyObj, _14417_elem_kind);
		_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str(">().dealloc(); }\n", 17));
		_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str("struct jule::Any::Type ", 23));
		_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str("__jule_any_type", 15));
		_2206d0625_WriteStr(&(*(_self_))._field_anyObj, _14213_si);
		_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str("{.dealloc=__jule_any_type", 25));
		_2206d0625_WriteStr(&(*(_self_))._field_anyObj, _14213_si);
		_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str("_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 58));
		_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str("jule::Bool __jule_any_type", 26));
		_2206d0625_WriteStr(&(*(_self_))._field_anyObj, _14213_si);
		_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str("_compare(const jule::Any &any, const ", 37));
		_2206d0625_WriteStr(&(*(_self_))._field_anyObj, _14517_kind);
		_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str(" &other) { return any.type == &__jule_any_type", 46));
		_2206d0625_WriteStr(&(*(_self_))._field_anyObj, _14213_si);
		_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52));
	} else {
		jule::Bool _17117_comparable = _1c641eb1c_Comparable(_13235_t.ptr());;
		jule::Str _17217_kind = _1aaabe8e2_kind((*(_self_))._field_tc.ptr(), _13235_t);;
		if (_17217_kind.equal("[<unimplemented_type_kind>]", 27)) {
			jule::outln(_1c641d8da_Str(_13235_t.ptr()));
		};
		_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str("void __jule_any_type", 20));
		_2206d0625_WriteStr(&(*(_self_))._field_anyObj, _14213_si);
		_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64));
		_2206d0625_WriteStr(&(*(_self_))._field_anyObj, _17217_kind);
		_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str(">().dealloc(); }\n", 17));
		if (_17117_comparable) {
			_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str("jule::Bool __jule_any_type", 26));
			_2206d0625_WriteStr(&(*(_self_))._field_anyObj, _14213_si);
			_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str("_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<", 66));
			_2206d0625_WriteStr(&(*(_self_))._field_anyObj, _17217_kind);
			_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str("*>(alloc) == *reinterpret_cast<", 31));
			_2206d0625_WriteStr(&(*(_self_))._field_anyObj, _17217_kind);
			_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str("*>(other); }\n", 13));
		};
		_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str("jule::Str __jule_any_type", 25));
		_2206d0625_WriteStr(&(*(_self_))._field_anyObj, _14213_si);
		_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str("_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<", 76));
		if ((_1c6421190_Ptr(_13235_t.ptr()) == nullptr)) {
			_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str("const ", 6));
			_2206d0625_WriteStr(&(*(_self_))._field_anyObj, _17217_kind);
		} else {
			_2206d0625_WriteStr(&(*(_self_))._field_anyObj, _17217_kind);
			_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str("* const", 7));
		};
		_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str("*>(alloc)); }\n", 14));
		_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str("struct jule::Any::Type ", 23));
		_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str("__jule_any_type", 15));
		_2206d0625_WriteStr(&(*(_self_))._field_anyObj, _14213_si);
		_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str("{.dealloc=__jule_any_type", 25));
		_2206d0625_WriteStr(&(*(_self_))._field_anyObj, _14213_si);
		_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str("_dealloc, ", 10));
		if (_17117_comparable) {
			_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str(".eq=__jule_any_type", 19));
			_2206d0625_WriteStr(&(*(_self_))._field_anyObj, _14213_si);
			_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str("_eq, ", 5));
		};
		_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str(".to_str=__jule_any_type", 23));
		_2206d0625_WriteStr(&(*(_self_))._field_anyObj, _14213_si);
		_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str("_to_str};\n", 10));
		if (_17117_comparable) {
			_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str("jule::Bool __jule_any_type", 26));
			_2206d0625_WriteStr(&(*(_self_))._field_anyObj, _14213_si);
			_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str("_compare(const jule::Any &any, const ", 37));
			_2206d0625_WriteStr(&(*(_self_))._field_anyObj, _17217_kind);
			_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str(" &other) { return any.type == &__jule_any_type", 46));
			_2206d0625_WriteStr(&(*(_self_))._field_anyObj, _14213_si);
			_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str(" && __jule_any_type", 19));
			_2206d0625_WriteStr(&(*(_self_))._field_anyObj, _14213_si);
			_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str("_eq(any.data.alloc, (void*)&other); }\n", 38));
		};
	};
	return _13617_i;;
}



inline void _1aaaa5e17_pushResultIns(jule::Ptr<_1aaaa472e_ObjectCoder> _self_, jule::Ptr<_1c62d2b01_FnIns>* _24038_f) {
	jule::Str _24113_s = _1aaac49b3_code((*((*(_self_))._field_tc))._field_rc.ptr(), &((*((*(_24038_f))))._field_Result));;
	jule::Bool _24217_ok = false;;
	(*(_self_))._field_resultMap.lookup(_24113_s, nullptr, &(_24217_ok));
	if (_24217_ok) {
		return;;
	};
	(*(_self_))._field_resultMap[_24113_s]=false;
	_2206d0625_WriteStr(&(*(_self_))._field_resultDecls, jule::Str("struct ", 7));
	_2206d0625_WriteStr(&(*(_self_))._field_resultDecls, _24113_s);
	_2206d0625_WriteStr(&(*(_self_))._field_resultDecls, jule::Str(" {\n", 3));
	{
		auto expr = &((*(_1c6422999_Tup((*((*(_24038_f))))._field_Result.ptr())))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bab3159d:;
		if (it != expr_end) {
			jule::I64 _25014_i = it - expr->begin();
			jule::Ptr<_1c641d522_TypeKind> _25021_t = *it;
			{
				_2206d08cd_WriteByte(&(*(_self_))._field_resultDecls, 9LLU);
				_2206d0625_WriteStr(&(*(_self_))._field_resultDecls, _1aaabe8e2_kind((*(_self_))._field_tc.ptr(), _25021_t));
				_2206d08cd_WriteByte(&(*(_self_))._field_resultDecls, ' ');
				_2206d0625_WriteStr(&(*(_self_))._field_resultDecls, jule::Str("__jule_result_arg", 17));
				_2206d0625_WriteStr(&(*(_self_))._field_resultDecls, _1dc250063_Itoa(_25014_i));
				_2206d0625_WriteStr(&(*(_self_))._field_resultDecls, jule::Str(";\n", 2));
			}
			_iter_next_1bab3159d:;
			++it;
			_25014_i++;
			goto _iter_begin_1bab3159d;
		}
		_iter_end_1bab3159d:;
	};
	_2206d0625_WriteStr(&(*(_self_))._field_resultDecls, jule::Str("};\n", 3));
}



inline void _1aaaa61c0_pushResult(jule::Ptr<_1aaaa472e_ObjectCoder> _self_, jule::Ptr<_1c62cebec_Fn>* _26135_f) {
	if ((_1c62d0170_IsVoid((*(_26135_f)).ptr()) || ((*((*((*(_26135_f))))._field_Result))._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I64 _26517_n = (*((*(_26135_f))))._field_Instances.len();;
	if (((*((*(_26135_f))))._field_Generics.len() == 0LL)) {
		_26517_n=1LL;
	};
	{
		auto expr = (*((*(_26135_f))))._field_Instances.slice(0LL, _26517_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1bab369b0:;
		if (it != expr_end) {
			jule::Ptr<_1c62d2b01_FnIns> _26921_ins = *it;
			{
				_1aaaa5e17_pushResultIns(_self_, &(_26921_ins));
			}
			_iter_next_1bab369b0:;
			++it;
			goto _iter_begin_1bab369b0;
		}
		_iter_end_1bab369b0:;
	};
}



inline jule::I64 _1aaaa65bb_findTypeOffsetS(_1aaaa472e_ObjectCoder* _self_, jule::Ptr<_1c62e2e96_Trait> _27430_t, jule::Ptr<_1c62bcab9_StructIns> _27445_s) {
	if (((*(_27430_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bab37e9a:;
		if (it != expr_end) {
			jule::Ptr<_1aaaa32dd_traitHash> *_27816_hash = it;
			{
				if ((((*((*(_27816_hash))))._field_t == _27430_t) && ((*((*(_27816_hash))))._field_s == _27445_s))) {
					return (*((*(_27816_hash))))._field_i;;
				};
			}
			_iter_next_1bab37e9a:;
			++it;
			goto _iter_begin_1bab37e9a;
		}
		_iter_end_1bab37e9a:;
	};
	return -1LL;;
}



inline jule::I64 _1aaaa69b7_findTypeOffset(_1aaaa472e_ObjectCoder* _self_, jule::Ptr<_1c62e2e96_Trait> _28629_t, jule::Ptr<_1c641d522_TypeKind> _28644_k) {
	if (((*(_28629_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1c62bcab9_StructIns> _29017_s = nullptr;;
	if ((_1c6420e09_Sptr(_28644_k.ptr()) != nullptr)) {
		_28644_k=(*(_1c6420e09_Sptr(_28644_k.ptr())))._field_Elem;
	};
	_29017_s=_1c64221e6_Struct(_28644_k.ptr());
	if ((_29017_s == nullptr)) {
		return -1LL;;
	};
	return static_cast<jule::I64>(_1aaaa65bb_findTypeOffsetS(_self_, _28629_t, _29017_s));;
}



inline void _1aaaa6d2a_pushAndWriteMaskMapper(jule::Ptr<_1aaaa472e_ObjectCoder> _self_, jule::Ptr<_1c62e2e96_Trait> _30146_t1, jule::Ptr<_1c62e2e96_Trait> _30162_t2) {
	_2206c697e_StrBuilder _30217_ident = static__2206c6c9d_New(32LL);;
	_2206d0625_WriteStr(&_30217_ident, jule::Str("__jule_trait_offset_mapper_", 27));
	_2206d0625_WriteStr(&_30217_ident, _1dc24e8d1_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30162_t2))), 15LL));
	_2206d0625_WriteStr(&_30217_ident, jule::Str("_to_", 4));
	_2206d0625_WriteStr(&_30217_ident, _1dc24e8d1_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30146_t1))), 15LL));
	_2206d036c_Write(&(*(_self_))._field_Obj, _2206d18bd_Buf(&_30217_ident));
	{
		auto expr = &((*(_self_))._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bab3d5dd:;
		if (it != expr_end) {
			_1aaaa36b7_traitCast _31016_m = *it;
			{
				if (((_31016_m._field_t1 == _30146_t1) && (_31016_m._field_t2 == _30162_t2))) {
					return;;
				};
			}
			_iter_next_1bab3d5dd:;
			++it;
			goto _iter_begin_1bab3d5dd;
		}
		_iter_end_1bab3d5dd:;
	};
	{ jule::Slice<_1aaaa36b7_traitCast> &__jule_push_dest = (*(_self_))._field_traitCastMap; __jule_push_dest.push(_1aaaa36b7_traitCast{._field_t1=_30146_t1, ._field_t2=_30162_t2}); };
	;
	_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str("jule::Int", 9));
	_2206d08cd_WriteByte(&(*(_self_))._field_anyObj, ' ');
	_2206d036c_Write(&(*(_self_))._field_anyObj, _2206d18bd_Buf(&_30217_ident));
	_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str("(const jule::Int offset) noexcept { ", 36));
	{
		auto expr = &((*(_30146_t1))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bab4214c:;
		if (it != expr_end) {
			jule::Ptr<_1c62b9d3b_Struct> _32921_s1 = *it;
			{
				{
					auto expr = &((*(_30162_t2))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bab42988:;
					if (it != expr_end) {
						jule::Ptr<_1c62b9d3b_Struct> _33020_s2 = *it;
						{
							if ((_32921_s1 == _33020_s2)) {
								{
									auto expr = &((*(_32921_s1))._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1bab437e1:;
									if (it != expr_end) {
										jule::Ptr<_1c62bcab9_StructIns> _33233_s1i = *it;
										{
											jule::I64 _33329_i1 = _1aaaa65bb_findTypeOffsetS(_self_.ptr(), _30146_t1, _33233_s1i);;
											jule::I64 _33429_i2 = _1aaaa65bb_findTypeOffsetS(_self_.ptr(), _30162_t2, _33233_s1i);;
											_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str("if (offset == ", 14));
											_2206d0625_WriteStr(&(*(_self_))._field_anyObj, _1dc250063_Itoa(_33429_i2));
											_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str(") return ", 9));
											_2206d0625_WriteStr(&(*(_self_))._field_anyObj, _1dc250063_Itoa(_33329_i1));
											_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str("; ", 2));
										}
										_iter_next_1bab437e1:;
										++it;
										goto _iter_begin_1bab437e1;
									}
									_iter_end_1bab437e1:;
								};
							};
						}
						_iter_next_1bab42988:;
						++it;
						goto _iter_begin_1bab42988;
					}
					_iter_end_1bab42988:;
				};
			}
			_iter_next_1bab4214c:;
			++it;
			goto _iter_begin_1bab4214c;
		}
		_iter_end_1bab4214c:;
	};
	_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str(" return ", 8));
	_2206d0625_WriteStr(&(*(_self_))._field_anyObj, _1dc250063_Itoa(0LL));
	_2206d0625_WriteStr(&(*(_self_))._field_anyObj, jule::Str("; }\n", 4));
}



inline void _1aaaa70d3_locInfo(jule::Ptr<_1aaaa472e_ObjectCoder> _self_, jule::Ptr<_1c6283a3b_Token>* _35028_t) {
	jule::Str *_35114_loc = &((*((*((*(_35028_t))))._field_File))._field_Path);;
	if (_21e49099c_Production) {
		{
			
			if (_2218bcd3e_HasPrefix((*(_35114_loc)), _221a2e764_PathStdlib)) {
				_case_begin_1bab48c58:;
				{
					_1aa9dc546_cstrBytes(&((*(_self_))._field_Obj), (*(_35114_loc)).slice((_2218c98d9_Dir(_221a2e764_PathStdlib).len() + 1LL)));
				}
			}
			else if (_2218bcd3e_HasPrefix((*(_35114_loc)), (*((*(_self_))._field_ir))._field_Root)) {
				_case_begin_1bab48cbe:;
				{
					_1aa9dc546_cstrBytes(&((*(_self_))._field_Obj), (*(_35114_loc)).slice((_2218c98d9_Dir((*((*(_self_))._field_ir))._field_Root).len() + 1LL)));
				}
			}
			else {
				_case_begin_1bab487c4:;
				{
					_1aa9dc546_cstrBytes(&((*(_self_))._field_Obj), (*(_35114_loc)));
				}
			}
			_match_end_1bab48708:;
		};
	} else {
		_1aa9dc546_cstrBytes(&((*(_self_))._field_Obj), (*(_35114_loc)));
	};
	_1aaaa4dd3_write(_self_, jule::Str(":", 1));
	_1aaaa4dd3_write(_self_, _1dc250063_Itoa((*((*(_35028_t))))._field_Row));
	_1aaaa4dd3_write(_self_, jule::Str(":", 1));
	_1aaaa4dd3_write(_self_, _1dc250063_Itoa((*((*(_35028_t))))._field_Column));
}



inline void _1aaaa72d1_head(jule::Ptr<_1aaaa472e_ObjectCoder> _self_) {
	_1aaa9a280_Time _37713_time = static__1aaa9a846_Now();;
	_1aaa99aa9_AbsTime _37813_abs = _1aaa9c02e_Abs(&_37713_time);;
	_1aaaa4dd3_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_1aaaa4dd3_write(_self_, jule::Str("// JuleC version: ", 18));
	_1aaaa4dd3_write(_self_, jule::Str("jule0.0.15 @master", 18));
	_1aaaa4dd3_write(_self_, jule::Str("\n", 1));
	_1aaaa4dd3_write(_self_, jule::Str("// Date: ", 9));
	_1aaaa4dd3_write(_self_, _1dc24e8d1_FmtUint(_37813_abs._field_Day, 10LL));
	_1aaaa4dd3_write(_self_, jule::Str("/", 1));
	_1aaaa4dd3_write(_self_, _1dc24e8d1_FmtUint(_37813_abs._field_Month, 10LL));
	_1aaaa4dd3_write(_self_, jule::Str("/", 1));
	_1aaaa4dd3_write(_self_, _1dc24e8d1_FmtUint(_37813_abs._field_Year, 10LL));
	_1aaaa4dd3_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1aaaa4dd3_write(_self_, (*(_self_))._field_info._field_Compiler);
	_1aaaa4dd3_write(_self_, jule::Str(" ", 1));
	_1aaaa4dd3_write(_self_, (*(_self_))._field_info._field_CompilerCommand);
	_1aaaa4dd3_write(_self_, jule::Str("\n\n", 2));
	if (_21e49099c_Production) {
		_1aaaa4dd3_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_21e490309_RC))) {
		_1aaaa4dd3_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_21e4906d3_Safety))) {
		_1aaaa4dd3_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1aaaa74ce_links(_self_);
	_1aaaa4dd3_write(_self_, jule::Str("\n\n#include \"", 12));
	_1aaaa4dd3_write(_self_, _221a3007d_PathApi);
	_1aaaa4dd3_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _1aaaa74ce_links(jule::Ptr<_1aaaa472e_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bab5545c:;
		if (it != expr_end) {
			jule::Ptr<_1c63469de_ImportInfo> _41516_used = *it;
			{
				{
					
					if ((!((*(_41516_used))._field_Binded))) {
						_case_begin_1bab5621b:;
						{
							goto _iter_next_1bab5545c;
						}
					}
					else if (_22195bb58_IsStdHeaderPath((*(_41516_used))._field_Path)) {
						_case_begin_1bab56293:;
						{
							_1aaaa4dd3_write(_self_, jule::Str("#include ", 9));
							_1aaaa4dd3_write(_self_, (*(_41516_used))._field_Path);
							_1aaaa4dd3_write(_self_, jule::Str("\n", 1));
						}
					}
					else if (_22195be11_IsValidHeaderExt(_2218c8eb0_Ext((*(_41516_used))._field_Path))) {
						_case_begin_1bab5631a:;
						{
							_1aaaa4dd3_write(_self_, jule::Str("#include \"", 10));
							_1aaaa4dd3_write(_self_, (*(_41516_used))._field_Path);
							_1aaaa4dd3_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_1bab560ea:;
				};
			}
			_iter_next_1bab5545c:;
			++it;
			goto _iter_begin_1bab5545c;
		}
		_iter_end_1bab5545c:;
	};
}



inline void _1aaaa7787_prepareStructure(_1aaaa472e_ObjectCoder* _self_, jule::Ptr<_1c62b9d3b_Struct>* _43140_s) {
	{
		auto expr = &((*((*(_43140_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bab584a4:;
		if (it != expr_end) {
			jule::Ptr<_1c62bcab9_StructIns> _43221_ins = *it;
			{
				{
					auto expr = &((*(_43221_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bab59ac1:;
					if (it != expr_end) {
						jule::Ptr<_1c62cebec_Fn> _43325_m = *it;
						{
							if ((*(_43325_m))._field_Statically) {
								goto _iter_next_1bab59ac1;
							};
							{
								auto expr = &((*(_43325_m))._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1bab5a97e:;
								if (it != expr_end) {
									jule::Ptr<_1c62d2b01_FnIns> _43729_mins = *it;
									{
										jule::Ptr<_1c62d1b55_ParamIns> _43829_p = (*(_43729_mins))._field_Params[0LL];;
										if ((!(_1c62cdaca_IsRef((*(_43829_p))._field_Decl.ptr())))) {
											(*(_43829_p))._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(jule::new_ptr<_1aaab8743_customType>(_1aaab8743_customType{._field_kind=(_1aaabe8e2_kind((*(_self_))._field_tc.ptr(), (*(_43829_p))._field_Kind) + jule::Str("*", 1))}), 27)});
										} else {
											(*(_43829_p))._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(jule::new_ptr<_1aaab8743_customType>(_1aaab8743_customType{._field_kind=_1aaabe8e2_kind((*(_self_))._field_tc.ptr(), (*(_43829_p))._field_Kind)}), 27)});
										};
									}
									_iter_next_1bab5a97e:;
									++it;
									goto _iter_begin_1bab5a97e;
								}
								_iter_end_1bab5a97e:;
							};
						}
						_iter_next_1bab59ac1:;
						++it;
						goto _iter_begin_1bab59ac1;
					}
					_iter_end_1bab59ac1:;
				};
			}
			_iter_next_1bab584a4:;
			++it;
			goto _iter_begin_1bab584a4;
		}
		_iter_end_1bab584a4:;
	};
}



inline void _1aaaa7985_prepareStructures(jule::Ptr<_1aaaa472e_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bab5b166:;
		if (it != expr_end) {
			jule::Ptr<_1c62b9d3b_Struct> _45821_s = *it;
			{
				if (((*(_45821_s))._field_Token != nullptr)) {
					_1aaaa7787_prepareStructure(_self_.ptr(), &(_45821_s));
				};
			}
			_iter_next_1bab5b166:;
			++it;
			goto _iter_begin_1bab5b166;
		}
		_iter_end_1bab5b166:;
	};
}



inline void _1aaaa7c3d_iterPackages(jule::Ptr<_1aaaa472e_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_1c6349915_Package>*)> _46532_f) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bab5d61e:;
		if (it != expr_end) {
			jule::Ptr<_1c63469de_ImportInfo> _46621_used = *it;
			{
				if ((!((*(_46621_used))._field_Binded))) {
					_46532_f(&((*(_46621_used))._field_Package));
				};
			}
			_iter_next_1bab5d61e:;
			++it;
			goto _iter_begin_1bab5d61e;
		}
		_iter_end_1bab5d61e:;
	};
	_46532_f(&((*((*(_self_))._field_ir))._field_Main));
}



inline void _1aaaa7e3b_buildTraitMap(jule::Ptr<_1aaaa472e_ObjectCoder> _self_) {
	_1aaaa7c3d_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1c6349915_Package>*)>([=](jule::Ptr<_1c6349915_Package>* _47535_pkg) mutable -> void {
		_1aaab6521_iterFiles(_47535_pkg, jule::Fn<void(jule::Ptr<_1c63d8135_SymbolTable>*)>([=](jule::Ptr<_1c63d8135_SymbolTable>* _47636_file) mutable -> void {
			{
				auto expr = &((*((*(_47636_file))))._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1bab63c51:;
				if (it != expr_end) {
					jule::Ptr<_1c62e2e96_Trait> _47729_t = *it;
					{
						if (((*(_47729_t))._field_Token == nullptr)) {
							return;;
						};
						if (((*(_47729_t))._field_Implemented.len() == 0LL)) {
							jule::Ptr<_1aaaa32dd_traitHash> _48233_hash = jule::new_ptr<_1aaaa32dd_traitHash>(_1aaaa32dd_traitHash{._field_t=_47729_t, ._field_s=nullptr, ._field_i=0LL});;
							_2206c697e_StrBuilder _48733_b = static__2206c6c9d_New(static_cast<jule::I64>((*(_47729_t))._field_Ident.len()));;
							static__1aa9e2d10_writeIdentTo(&(_48733_b), &((*(_47729_t))._field_Ident));
							(*(_48233_hash))._field_ti=_2206d0e1c_Str(&_48733_b);
							{ jule::Slice<jule::Ptr<_1aaaa32dd_traitHash>> &__jule_push_dest = (*(_self_))._field_tmap; __jule_push_dest.push(_48233_hash); };
							goto _iter_next_1bab63c51;
						};
						jule::I64 _49329_i = 0LL;;
						{
							auto expr = &((*(_47729_t))._field_Implemented);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1bab64669:;
							if (it != expr_end) {
								jule::Ptr<_1c62b9d3b_Struct> _49433_s = *it;
								{
									{
										auto expr = &((*(_49433_s))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1bab6821c:;
										if (it != expr_end) {
											jule::Ptr<_1c62bcab9_StructIns> _49537_ins = *it;
											{
												jule::Ptr<_1aaaa32dd_traitHash> _49637_hash = jule::new_ptr<_1aaaa32dd_traitHash>(_1aaaa32dd_traitHash{._field_t=_47729_t, ._field_s=_49537_ins, ._field_i=_49329_i});;
												_2206c697e_StrBuilder _50137_b = static__2206c6c9d_New(static_cast<jule::I64>((*(_47729_t))._field_Ident.len()));;
												static__1aa9e2d10_writeIdentTo(&(_50137_b), &((*(_47729_t))._field_Ident));
												(*(_49637_hash))._field_ti=_2206d0e1c_Str(&_50137_b);
												{ jule::Slice<jule::Ptr<_1aaaa32dd_traitHash>> &__jule_push_dest = (*(_self_))._field_tmap; __jule_push_dest.push(_49637_hash); };
												(_49329_i)++;
											}
											_iter_next_1bab6821c:;
											++it;
											goto _iter_begin_1bab6821c;
										}
										_iter_end_1bab6821c:;
									};
								}
								_iter_next_1bab64669:;
								++it;
								goto _iter_begin_1bab64669;
							}
							_iter_end_1bab64669:;
						};
						_1aaab72be_pushMethodsFromInherits(&(_47729_t), &(_47729_t));
					}
					_iter_next_1bab63c51:;
					++it;
					goto _iter_begin_1bab63c51;
				}
				_iter_end_1bab63c51:;
			};
		}));
	}));
}



inline void _1aaaa8139_traitDecls(jule::Ptr<_1aaaa472e_ObjectCoder> _self_) {
	_1aaaa7c3d_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1c6349915_Package>*)>([=](jule::Ptr<_1c6349915_Package>* _51735_pkg) mutable -> void {
		_1aaab6521_iterFiles(_51735_pkg, jule::Fn<void(jule::Ptr<_1c63d8135_SymbolTable>*)>([=](jule::Ptr<_1c63d8135_SymbolTable>* _51836_file) mutable -> void {
			{
				auto expr = &((*((*(_51836_file))))._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1bab6be35:;
				if (it != expr_end) {
					jule::Ptr<_1c62e2e96_Trait> _51929_t = *it;
					{
						if (((*(_51929_t))._field_Token == nullptr)) {
							return;;
						};
						_1aaaa54cc_indent(_self_);
						_1aaaa4dd3_write(_self_, jule::Str("struct ", 7));
						_1aaaa4dd3_write(_self_, static__1aa9e3e10_traitDecl(_51929_t));
						_1aaaa4dd3_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_1bab6be35:;
					++it;
					goto _iter_begin_1bab6be35;
				}
				_iter_end_1bab6be35:;
			};
		}));
	}));
}



inline void _1aaaa83e2_structurePlainDecl(jule::Ptr<_1aaaa472e_ObjectCoder> _self_, jule::Ptr<_1c62b9d3b_Struct>* _53243_s) {
	{
		auto expr = &((*((*(_53243_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bab6456a:;
		if (it != expr_end) {
			jule::Ptr<_1c62bcab9_StructIns> _53321_ins = *it;
			{
				_1aaaa4dd3_write(_self_, jule::Str("struct ", 7));
				_1aaaa4dd3_write(_self_, static__1aa9e475c_structureIns(&(_53321_ins)));
				_1aaaa4dd3_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1bab6456a:;
			++it;
			goto _iter_begin_1bab6456a;
		}
		_iter_end_1bab6456a:;
	};
}



inline void _1aaaa85e0_structurePlainDecls(jule::Ptr<_1aaaa472e_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bab6e311:;
		if (it != expr_end) {
			jule::Ptr<_1c62b9d3b_Struct> _54121_s = *it;
			{
				if (((*(_54121_s))._field_Token != nullptr)) {
					_1aaaa83e2_structurePlainDecl(_self_, &(_54121_s));
				};
			}
			_iter_next_1bab6e311:;
			++it;
			goto _iter_begin_1bab6e311;
		}
		_iter_end_1bab6e311:;
	};
}



inline void _1aaaa8898_fieldDecl(jule::Ptr<_1aaaa472e_ObjectCoder> _self_, jule::Ptr<_1c62bc019_FieldIns>* _54834_f) {
	_1aaaa4dd3_write(_self_, _1aaabe8e2_kind((*(_self_))._field_tc.ptr(), (*((*(_54834_f))))._field_Kind));
	_1aaaa4dd3_write(_self_, jule::Str(" ", 1));
	_1aaaa4dd3_write(_self_, static__1aa9e4a26_field(&((*((*(_54834_f))))._field_Decl)));
	if (((*((*(_54834_f))))._field_Default == nullptr)) {
		if (_1aaac6aa3_shouldInitialized(&((*((*(_54834_f))))._field_Kind))) {
			_1aaaa4dd3_write(_self_, jule::Str(" = ", 3));
			_1aa9dba84_initExpr((*(_self_))._field_ec, (*((*(_54834_f))))._field_Kind);
		};
	} else {
		_1aaaa4dd3_write(_self_, jule::Str(" = ", 3));
		_1aa9d2508_possibleRefExpr((*(_self_))._field_ec, (*((*((*(_54834_f))))._field_Default))._field_Model);
	};
	_1aaaa4dd3_write(_self_, jule::Str(";", 1));
}



inline void _1aaaa8b51_structureDestructor(jule::Ptr<_1aaaa472e_ObjectCoder> _self_, jule::Ptr<_1c62bcab9_StructIns>* _56644_s) {
	;
	jule::Ptr<_1c62cebec_Fn> _56913_disposeMethod = _1c62bdb31_FindMethod((*(_56644_s)).ptr(), jule::Str("Dispose", 7), false);;
	jule::Bool _57017_disposed = static__1c638b308_Dispose(_56913_disposeMethod);;
	if ((!(_57017_disposed))) {
		return;;
	};
	_1aaaa4dd3_write(_self_, jule::Str("~", 1));
	_1aaaa4dd3_write(_self_, static__1aa9e475c_structureIns(_56644_s));
	_1aaaa4dd3_write(_self_, jule::Str("(void) { ", 9));
	_1aaaa4dd3_write(_self_, static__1aa9e387c_func(&(_56913_disposeMethod)));
	_1aaaa4dd3_write(_self_, jule::Str("(this); }", 9));
}



inline void _1aaaa8eb4_structureOperatorEq(jule::Ptr<_1aaaa472e_ObjectCoder> _self_, jule::Str* _58240_ident, jule::Ptr<_1c62bcab9_StructIns>* _58257_s) {
	if ((!((*((*(_58257_s))))._field_Comparable))) {
		return;;
	};
	if (((*((*(_58257_s))))._field_Operators._field_Eq != nullptr)) {
		_1aaaa9745_structureOperator(_self_, _58240_ident, &((*((*(_58257_s))))._field_Operators._field_Eq), jule::Str("==", 2));
		return;;
	};
	_1aaaa54cc_indent(_self_);
	if (_1a9edd2b7_Inline) {
		_1aaaa4dd3_write(_self_, jule::Str("inline ", 7));
	};
	_1aaaa4dd3_write(_self_, jule::Str("bool operator==(", 16));
	_1aaaa4dd3_write(_self_, (*(_58240_ident)));
	_1aaaa4dd3_write(_self_, jule::Str(" _other) {", 10));
	if (((*((*(_58257_s))))._field_Fields.len() > 0LL)) {
		_1aaaa50d1_addIndent(_self_);
		_1aaaa4dd3_write(_self_, jule::Str("\n", 1));
		_1aaaa54cc_indent(_self_);
		_1aaaa4dd3_write(_self_, jule::Str("return ", 7));
		_1aaaa50d1_addIndent(_self_);
		jule::Bool _60521_writed = false;;
		{
			auto expr = &((*((*(_58257_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bab7d809:;
			if (it != expr_end) {
				jule::Ptr<_1c62bc019_FieldIns> _60625_f = *it;
				{
					jule::Ptr<_1c62bcab9_StructIns> _60821_strct = _1c64221e6_Struct((*(_60625_f))._field_Kind.ptr());;
					if ((((_60821_strct != nullptr) && ((*(_60821_strct))._field_Decl != nullptr)) && (*((*(_60821_strct))._field_Decl))._field_Binded)) {
						goto _iter_next_1bab7d809;
					};
					if (_60521_writed) {
						_1aaaa4dd3_write(_self_, jule::Str(" &&", 3));
					};
					_60521_writed=true;
					_1aaaa4dd3_write(_self_, jule::Str("\n", 1));
					_1aaaa54cc_indent(_self_);
					_1aaaa4dd3_write(_self_, jule::Str("this->", 6));
					jule::Str _61921_fIdent = static__1aa9e4a26_field(&((*(_60625_f))._field_Decl));;
					_1aaaa4dd3_write(_self_, _61921_fIdent);
					_1aaaa4dd3_write(_self_, jule::Str(" == _other.", 11));
					_1aaaa4dd3_write(_self_, _61921_fIdent);
				}
				_iter_next_1bab7d809:;
				++it;
				goto _iter_begin_1bab7d809;
			}
			_iter_end_1bab7d809:;
		};
		_1aaaa52ce_doneIndent(_self_);
		if ((!(_60521_writed))) {
			_1aaaa4dd3_write(_self_, jule::Str("true", 4));
		};
		_1aaaa4dd3_write(_self_, jule::Str(";\n", 2));
		_1aaaa52ce_doneIndent(_self_);
		_1aaaa54cc_indent(_self_);
		_1aaaa4dd3_write(_self_, jule::Str("}", 1));
	} else {
		_1aaaa4dd3_write(_self_, jule::Str(" return true; }", 15));
	};
	_1aaaa4dd3_write(_self_, jule::Str("\n\n", 2));
}



inline void _1aaaa9327_structureOperatorNotEq(jule::Ptr<_1aaaa472e_ObjectCoder> _self_, jule::Str* _63843_ident, jule::Ptr<_1c62bcab9_StructIns>* _63860_s) {
	if ((!((*((*(_63860_s))))._field_Comparable))) {
		return;;
	};
	_1aaaa54cc_indent(_self_);
	if (_1a9edd2b7_Inline) {
		_1aaaa4dd3_write(_self_, jule::Str("inline ", 7));
	};
	_1aaaa4dd3_write(_self_, jule::Str("bool operator!=(", 16));
	_1aaaa4dd3_write(_self_, (*(_63843_ident)));
	_1aaaa4dd3_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1aaaa9745_structureOperator(jule::Ptr<_1aaaa472e_ObjectCoder> _self_, jule::Str* _65238_ident, jule::Ptr<_1c62d2b01_FnIns>* _65255_f, jule::Str _65266_op) {
	if (((*(_65255_f)) == nullptr)) {
		return;;
	};
	jule::Bool _65713_unary = ((*((*(_65255_f))))._field_Params.len() == 1LL);;
	jule::Bool _65813_assignment = _1c62d0170_IsVoid((*((*(_65255_f))))._field_Decl.ptr());;
	_1aaaa54cc_indent(_self_);
	if (_1a9edd2b7_Inline) {
		_1aaaa4dd3_write(_self_, jule::Str("inline ", 7));
	};
	if (_65813_assignment) {
		_1aaaa4dd3_write(_self_, (*(_65238_ident)));
		_1aaaa4dd3_write(_self_, jule::Str("&", 1));
	} else {
		if ((_1c6420b73_Prim((*((*(_65255_f))))._field_Result.ptr()) == nullptr)) {
			_1aaaa4dd3_write(_self_, (*(_65238_ident)));
		} else {
			_1aaaa4dd3_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_1aaaa4dd3_write(_self_, jule::Str(" operator", 9));
	_1aaaa4dd3_write(_self_, _65266_op);
	_1aaaa4dd3_write(_self_, jule::Str("(", 1));
	if ((!(_65713_unary))) {
		jule::Ptr<_1c62d1b55_ParamIns> _68021_p = (*((*(_65255_f))))._field_Params[1LL];;
		_1aaaa4dd3_write(_self_, _1aaabd76a_paramIns((*(_self_))._field_tc.ptr(), &(_68021_p)));
		_1aaaa4dd3_write(_self_, jule::Str(" _other", 7));
	};
	_1aaaa4dd3_write(_self_, jule::Str(") { ", 4));
	if ((!(_65813_assignment))) {
		_1aaaa4dd3_write(_self_, jule::Str("return ", 7));
	};
	_1aaaa4dd3_write(_self_, static__1aa9e3b46_funcIns(_65255_f));
	if ((!(_65713_unary))) {
		_1aaaa4dd3_write(_self_, jule::Str("(this, _other); ", 16));
		if (_65813_assignment) {
			_1aaaa4dd3_write(_self_, jule::Str("return *this; ", 14));
		};
		_1aaaa4dd3_write(_self_, jule::Str("}", 1));
	} else {
		_1aaaa4dd3_write(_self_, jule::Str("(this); }", 9));
	};
	_1aaaa4dd3_write(_self_, jule::Str("\n\n", 2));
}



inline void _1aaaa99ed_structureOperators(jule::Ptr<_1aaaa472e_ObjectCoder> _self_, jule::Ptr<_1c62bcab9_StructIns>* _70143_s) {
	jule::Str _70213_ident = static__1aa9e475c_structureIns(_70143_s);;
	_1aaaa8eb4_structureOperatorEq(_self_, &(_70213_ident), _70143_s);
	_1aaaa9327_structureOperatorNotEq(_self_, &(_70213_ident), _70143_s);
	_1aaaa9745_structureOperator(_self_, &(_70213_ident), &((*((*(_70143_s))))._field_Operators._field_Gt), jule::Str(">", 1));
	_1aaaa9745_structureOperator(_self_, &(_70213_ident), &((*((*(_70143_s))))._field_Operators._field_GtEq), jule::Str(">=", 2));
	_1aaaa9745_structureOperator(_self_, &(_70213_ident), &((*((*(_70143_s))))._field_Operators._field_Lt), jule::Str("<", 1));
	_1aaaa9745_structureOperator(_self_, &(_70213_ident), &((*((*(_70143_s))))._field_Operators._field_LtEq), jule::Str("<=", 2));
	_1aaaa9745_structureOperator(_self_, &(_70213_ident), &((*((*(_70143_s))))._field_Operators._field_Shl), jule::Str("<<", 2));
	_1aaaa9745_structureOperator(_self_, &(_70213_ident), &((*((*(_70143_s))))._field_Operators._field_Shr), jule::Str(">>", 2));
	_1aaaa9745_structureOperator(_self_, &(_70213_ident), &((*((*(_70143_s))))._field_Operators._field_Add), jule::Str("+", 1));
	_1aaaa9745_structureOperator(_self_, &(_70213_ident), &((*((*(_70143_s))))._field_Operators._field_Sub), jule::Str("-", 1));
	_1aaaa9745_structureOperator(_self_, &(_70213_ident), &((*((*(_70143_s))))._field_Operators._field_Div), jule::Str("/", 1));
	_1aaaa9745_structureOperator(_self_, &(_70213_ident), &((*((*(_70143_s))))._field_Operators._field_Mul), jule::Str("*", 1));
	_1aaaa9745_structureOperator(_self_, &(_70213_ident), &((*((*(_70143_s))))._field_Operators._field_Mod), jule::Str("%", 1));
	_1aaaa9745_structureOperator(_self_, &(_70213_ident), &((*((*(_70143_s))))._field_Operators._field_BitAnd), jule::Str("&", 1));
	_1aaaa9745_structureOperator(_self_, &(_70213_ident), &((*((*(_70143_s))))._field_Operators._field_BitOr), jule::Str("|", 1));
	_1aaaa9745_structureOperator(_self_, &(_70213_ident), &((*((*(_70143_s))))._field_Operators._field_BitXor), jule::Str("^", 1));
	_1aaaa9745_structureOperator(_self_, &(_70213_ident), &((*((*(_70143_s))))._field_Operators._field_Neg), jule::Str("-", 1));
	_1aaaa9745_structureOperator(_self_, &(_70213_ident), &((*((*(_70143_s))))._field_Operators._field_Pos), jule::Str("+", 1));
	_1aaaa9745_structureOperator(_self_, &(_70213_ident), &((*((*(_70143_s))))._field_Operators._field_BitNot), jule::Str("~", 1));
	_1aaaa9745_structureOperator(_self_, &(_70213_ident), &((*((*(_70143_s))))._field_Operators._field_AddAssign), jule::Str("+=", 2));
	_1aaaa9745_structureOperator(_self_, &(_70213_ident), &((*((*(_70143_s))))._field_Operators._field_SubAssign), jule::Str("-=", 2));
	_1aaaa9745_structureOperator(_self_, &(_70213_ident), &((*((*(_70143_s))))._field_Operators._field_DivAssign), jule::Str("/=", 2));
	_1aaaa9745_structureOperator(_self_, &(_70213_ident), &((*((*(_70143_s))))._field_Operators._field_MulAssign), jule::Str("*=", 2));
	_1aaaa9745_structureOperator(_self_, &(_70213_ident), &((*((*(_70143_s))))._field_Operators._field_ModAssign), jule::Str("%=", 2));
	_1aaaa9745_structureOperator(_self_, &(_70213_ident), &((*((*(_70143_s))))._field_Operators._field_ShlAssign), jule::Str("<<=", 3));
	_1aaaa9745_structureOperator(_self_, &(_70213_ident), &((*((*(_70143_s))))._field_Operators._field_ShrAssign), jule::Str(">>=", 3));
	_1aaaa9745_structureOperator(_self_, &(_70213_ident), &((*((*(_70143_s))))._field_Operators._field_BitOrAssign), jule::Str("|=", 2));
	_1aaaa9745_structureOperator(_self_, &(_70213_ident), &((*((*(_70143_s))))._field_Operators._field_BitAndAssign), jule::Str("&=", 2));
	_1aaaa9745_structureOperator(_self_, &(_70213_ident), &((*((*(_70143_s))))._field_Operators._field_BitXorAssign), jule::Str("^=", 2));
}



inline void _1aaaa9ca6_structureInsDecl(jule::Ptr<_1aaaa472e_ObjectCoder> _self_, jule::Ptr<_1c62bcab9_StructIns>* _74041_s) {
	{
		auto expr = &((*((*(_74041_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baba1057:;
		if (it != expr_end) {
			jule::Ptr<_1c62cebec_Fn> _74121_m = *it;
			{
				if (_1aaab7852_isHeadDecl(&(_74121_m))) {
					_1aaaab24c_funcDecl(_self_, &(_74121_m), false);
				};
			}
			_iter_next_1baba1057:;
			++it;
			goto _iter_begin_1baba1057;
		}
		_iter_end_1baba1057:;
	};
	_1aaaa4dd3_write(_self_, jule::Str("struct ", 7));
	jule::Str _74813_outIdent = static__1aa9e475c_structureIns(_74041_s);;
	_1aaaa4dd3_write(_self_, _74813_outIdent);
	_1aaaa4dd3_write(_self_, jule::Str(" {\n", 3));
	_1aaaa50d1_addIndent(_self_);
	{
		auto expr = &((*((*(_74041_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baba2e05:;
		if (it != expr_end) {
			jule::Ptr<_1c62bc019_FieldIns> _75421_f = *it;
			{
				_1aaaa54cc_indent(_self_);
				_1aaaa8898_fieldDecl(_self_, &(_75421_f));
				_1aaaa4dd3_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_1baba2e05:;
			++it;
			goto _iter_begin_1baba2e05;
		}
		_iter_end_1baba2e05:;
	};
	_1aaaa54cc_indent(_self_);
	_1aaaa8b51_structureDestructor(_self_, _74041_s);
	_1aaaa4dd3_write(_self_, jule::Str("\n\n", 2));
	_1aaaa99ed_structureOperators(_self_, _74041_s);
	_1aaaa4dd3_write(_self_, jule::Str("\n", 1));
	_1aaaa52ce_doneIndent(_self_);
	_1aaaa54cc_indent(_self_);
	_1aaaa4dd3_write(_self_, jule::Str("};", 2));
}



inline void _1aaaaa05e_structureDecl(jule::Ptr<_1aaaa472e_ObjectCoder> _self_, jule::Ptr<_1c62b9d3b_Struct>* _77238_s) {
	{
		auto expr = &((*((*(_77238_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baba6c72:;
		if (it != expr_end) {
			jule::Ptr<_1c62bcab9_StructIns> _77321_ins = *it;
			{
				_1aaaa9ca6_structureInsDecl(_self_, &(_77321_ins));
			}
			_iter_next_1baba6c72:;
			++it;
			goto _iter_begin_1baba6c72;
		}
		_iter_end_1baba6c72:;
	};
}



inline void _1aaaaa25c_structureDecls(jule::Ptr<_1aaaa472e_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baba75d0:;
		if (it != expr_end) {
			jule::Ptr<_1c62b9d3b_Struct> _77921_s = *it;
			{
				if (((*(_77921_s))._field_Token != nullptr)) {
					_1aaaaa05e_structureDecl(_self_, &(_77921_s));
					_1aaaa4dd3_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_1baba75d0:;
			++it;
			goto _iter_begin_1baba75d0;
		}
		_iter_end_1baba75d0:;
	};
}



inline void _1aaaaa45a_structureMethodDecls(jule::Ptr<_1aaaa472e_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baba857b:;
		if (it != expr_end) {
			jule::Ptr<_1c62b9d3b_Struct> _78821_s = *it;
			{
				if (((*(_78821_s))._field_Token != nullptr)) {
					{
						auto expr = &((*(_78821_s))._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1babaa5c2:;
						if (it != expr_end) {
							jule::Ptr<_1c62bcab9_StructIns> _79029_ins = *it;
							{
								{
									auto expr = &((*(_79029_ins))._field_Methods);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1babab01d:;
									if (it != expr_end) {
										jule::Ptr<_1c62cebec_Fn> _79133_m = *it;
										{
											if ((!(_1aaab7852_isHeadDecl(&(_79133_m))))) {
												_1aaaa61c0_pushResult(_self_, &(_79133_m));
												_1aaaab24c_funcDecl(_self_, &(_79133_m), false);
											};
										}
										_iter_next_1babab01d:;
										++it;
										goto _iter_begin_1babab01d;
									}
									_iter_end_1babab01d:;
								};
							}
							_iter_next_1babaa5c2:;
							++it;
							goto _iter_begin_1babaa5c2;
						}
						_iter_end_1babaa5c2:;
					};
				};
			}
			_iter_next_1baba857b:;
			++it;
			goto _iter_begin_1baba857b;
		}
		_iter_end_1baba857b:;
	};
}



inline void _1aaaaa713_paramsDecls(jule::Ptr<_1aaaa472e_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1c62d1b55_ParamIns>>* _80336_params) {
	if (((*(_80336_params)).len() == 0LL)) {
		_1aaaa4dd3_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1aaaa4dd3_write(_self_, jule::Str("(", 1));
	{
		auto expr = _80336_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1babaad20:;
		if (it != expr_end) {
			jule::I64 _81014_i = it - expr->begin();
			jule::Ptr<_1c62d1b55_ParamIns> _81021_p = *it;
			{
				_1aaaa4dd3_write(_self_, _1aaabd76a_paramIns((*(_self_))._field_tc.ptr(), &(_81021_p)));
				if ((((*(_80336_params)).len() - _81014_i) > 1LL)) {
					_1aaaa4dd3_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1babaad20:;
			++it;
			_81014_i++;
			goto _iter_begin_1babaad20;
		}
		_iter_end_1babaad20:;
	};
	_1aaaa4dd3_write(_self_, jule::Str(")", 1));
}



inline void _1aaaaaa76_funcHead(jule::Ptr<_1aaaa472e_ObjectCoder> _self_, jule::Ptr<_1c62d2b01_FnIns>* _82033_f, jule::Bool _82044_ptr) {
	if ((((!(_82044_ptr)) && _1a9edd2b7_Inline) && (!(_1c62d068c_IsEntryPoint((*((*(_82033_f))))._field_Decl.ptr()))))) {
		_1aaaa4dd3_write(_self_, jule::Str("inline ", 7));
	};
	_1aaabde1e_funcInsResult((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Obj), _82033_f);
	if (_82044_ptr) {
		_1aaaa4dd3_write(_self_, jule::Str("(*", 2));
		_1aaaa4dd3_write(_self_, static__1aa9e3b46_funcIns(_82033_f));
		_1aaaa4dd3_write(_self_, jule::Str(")", 1));
	} else {
		_1aaaa4dd3_write(_self_, jule::Str(" ", 1));
		_1aaaa4dd3_write(_self_, static__1aa9e3b46_funcIns(_82033_f));
	};
}



inline void _1aaaaadd9_funcDeclIns(jule::Ptr<_1aaaa472e_ObjectCoder> _self_, jule::Ptr<_1c62d2b01_FnIns>* _83536_f, jule::Bool _83547_ptr) {
	_1aaaa54cc_indent(_self_);
	_1aaaaaa76_funcHead(_self_, _83536_f, _83547_ptr);
	_1aaaaa713_paramsDecls(_self_, &((*((*(_83536_f))))._field_Params));
	_1aaaa4dd3_write(_self_, jule::Str(";\n", 2));
}



inline void _1aaaab24c_funcDecl(jule::Ptr<_1aaaa472e_ObjectCoder> _self_, jule::Ptr<_1c62cebec_Fn>* _84233_f, jule::Bool _84241_ptr) {
	{
		auto expr = &((*((*(_84233_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1babb54bc:;
		if (it != expr_end) {
			jule::Ptr<_1c62d2b01_FnIns> _84321_c = *it;
			{
				_1aaaaadd9_funcDeclIns(_self_, &(_84321_c), _84241_ptr);
			}
			_iter_next_1babb54bc:;
			++it;
			goto _iter_begin_1babb54bc;
		}
		_iter_end_1babb54bc:;
	};
}



inline void _1aaaab66a_funcDeclTrait(jule::Ptr<_1aaaa472e_ObjectCoder> _self_, jule::Ptr<_1c62e2e96_Trait>* _84838_t, jule::Ptr<_1c62cebec_Fn>* _84854_f, jule::Bool _84862_ptr) {
	{
		auto expr = &((*((*(_84854_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1babb6853:;
		if (it != expr_end) {
			jule::Ptr<_1c62d2b01_FnIns> _84921_c = *it;
			{
				jule::Ptr<_1c641d522_TypeKind> _85021_k = (*((*(_84921_c))._field_Params[0LL]))._field_Kind;;
				(*((*(_84921_c))._field_Params[0LL]))._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>((*(_84838_t)), 2)});
				_1aaaaadd9_funcDeclIns(_self_, &(_84921_c), _84862_ptr);
				(*((*(_84921_c))._field_Params[0LL]))._field_Kind=_85021_k;
			}
			_iter_next_1babb6853:;
			++it;
			goto _iter_begin_1babb6853;
		}
		_iter_end_1babb6853:;
	};
}



inline void _1aaaab868_funcDecls(jule::Ptr<_1aaaa472e_ObjectCoder> _self_) {
	_1aaaa7c3d_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1c6349915_Package>*)>([=](jule::Ptr<_1c6349915_Package>* _85835_pkg) mutable -> void {
		_1aaab6521_iterFiles(_85835_pkg, jule::Fn<void(jule::Ptr<_1c63d8135_SymbolTable>*)>([=](jule::Ptr<_1c63d8135_SymbolTable>* _85936_file) mutable -> void {
			{
				auto expr = &((*((*(_85936_file))))._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1babbb01c:;
				if (it != expr_end) {
					jule::Ptr<_1c62cebec_Fn> _86029_f = *it;
					{
						if (((!((*(_86029_f))._field_Binded)) && ((*(_86029_f))._field_Token != nullptr))) {
							_1aaaa61c0_pushResult(_self_, &(_86029_f));
							_1aaaab24c_funcDecl(_self_, &(_86029_f), false);
						};
					}
					_iter_next_1babbb01c:;
					++it;
					goto _iter_begin_1babbb01c;
				}
				_iter_end_1babbb01c:;
			};
		}));
	}));
}



inline void _1aaaabbcb_traitDataTypeMethods(jule::Ptr<_1aaaa472e_ObjectCoder> _self_, jule::Ptr<_1c62e2e96_Trait>* _87045_owner, jule::Ptr<_1c62e2e96_Trait>* _87065_t) {
	{
		auto expr = &((*((*(_87065_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1babbabba:;
		if (it != expr_end) {
			jule::Ptr<_1c62cebec_Fn> _87121_m = *it;
			{
				jule::Ptr<_1c62d2b01_FnIns> _87221_ins = (*(_87121_m))._field_Instances[0LL];;
				jule::Ptr<_1c62d1b55_ParamIns> _87321_p = (*(_87221_ins))._field_Params[0LL];;
				(*(_87321_p))._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>((*(_87065_t)), 2)});
				{
					auto expr = (*(_87221_ins))._field_Params.slice(1LL);
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_1babbe9b0:;
					if (it != expr_end) {
						jule::I64 _87718_i = it - expr.begin();
						jule::Ptr<_1c62d1b55_ParamIns> _87725_ip = *it;
						{
							if (_1c6286764_IsAnonIdent((*((*(_87725_ip))._field_Decl))._field_Ident)) {
								(*((*(_87725_ip))._field_Decl))._field_Ident=(jule::Str("_", 1) + _1dc250063_Itoa(_87718_i));
							};
						}
						_iter_next_1babbe9b0:;
						++it;
						_87718_i++;
						goto _iter_begin_1babbe9b0;
					}
					_iter_end_1babbe9b0:;
				};
				if ((!(_21e49099c_Production))) {
					jule::Ptr<_1c62d1b55_ParamIns> _88325_lp = (*(_87221_ins))._field_Params[((*(_87221_ins))._field_Params.len() - 1LL)];;
					{
						auto &_match_expr{ (*((*(_88325_lp))._field_Kind))._field_Kind };
						
						if (_match_expr.type_is(true, 27)) {
							_case_begin_1babc429a:;
							{
								goto _match_end_1babc252e;
							}
						}
						else {
							_case_begin_1babc2584:;
							{
								{ jule::Slice<jule::Ptr<_1c62d1b55_ParamIns>> &__jule_push_dest = (*(_87221_ins))._field_Params; __jule_push_dest.push(jule::new_ptr<_1c62d1b55_ParamIns>(_1c62d1b55_ParamIns{._field_Decl=jule::new_ptr<_1c62cd228_Param>(_1c62cd228_Param{._field_Ident=jule::Str("__file", 6)}), ._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(jule::new_ptr<_1aaab8743_customType>(_1aaab8743_customType{._field_kind=jule::Str("const char*", 11)}), 27)})})); };
							}
						}
						_match_end_1babc252e:;
					};
				};
				_1aaaa61c0_pushResult(_self_, &(_87121_m));
				_1aaaab66a_funcDeclTrait(_self_, _87045_owner, &(_87121_m), true);
			}
			_iter_next_1babbabba:;
			++it;
			goto _iter_begin_1babbabba;
		}
		_iter_end_1babbabba:;
	};
}



inline void _1aaaabdc9_traitDataTypes(jule::Ptr<_1aaaa472e_ObjectCoder> _self_) {
	_1aaaa7c3d_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1c6349915_Package>*)>([=](jule::Ptr<_1c6349915_Package>* _90635_pkg) mutable -> void {
		_1aaab6521_iterFiles(_90635_pkg, jule::Fn<void(jule::Ptr<_1c63d8135_SymbolTable>*)>([=](jule::Ptr<_1c63d8135_SymbolTable>* _90736_file) mutable -> void {
			{
				auto expr = &((*((*(_90736_file))))._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1babc6225:;
				if (it != expr_end) {
					jule::Ptr<_1c62e2e96_Trait> _90829_t = *it;
					{
						if (((*(_90829_t))._field_Token == nullptr)) {
							return;;
						};
						if (((*(_90829_t))._field_Methods.len() == 0LL)) {
							goto _iter_next_1babc6225;
						};
						_1aaaa4dd3_write(_self_, jule::Str("struct ", 7));
						_1aaaa4dd3_write(_self_, static__1aa9e3e10_traitDecl(_90829_t));
						_1aaaa4dd3_write(_self_, jule::Str("MptrData", 8));
						_1aaaa4dd3_write(_self_, jule::Str(" {\n", 3));
						_1aaaa50d1_addIndent(_self_);
						_1aaaabbcb_traitDataTypeMethods(_self_, &(_90829_t), &(_90829_t));
						_1aaaa52ce_doneIndent(_self_);
						_1aaaa54cc_indent(_self_);
						_1aaaa4dd3_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_1babc6225:;
					++it;
					goto _iter_begin_1babc6225;
				}
				_iter_end_1babc6225:;
			};
		}));
	}));
}



inline void _1aaaac182_paramIns(jule::Ptr<_1aaaa472e_ObjectCoder> _self_, jule::Ptr<_1c62d1b55_ParamIns>* _92933_p) {
	_1aaaa4dd3_write(_self_, _1aaabd76a_paramIns((*(_self_))._field_tc.ptr(), _92933_p));
	_1aaaa4dd3_write(_self_, jule::Str(" ", 1));
	_1aaaa4dd3_write(_self_, static__1aa9e41c9_param(&((*((*(_92933_p))))._field_Decl)));
}



inline void _1aaaac43a_paramsIns(jule::Ptr<_1aaaa472e_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1c62d1b55_ParamIns>>* _93534_params) {
	if (((*(_93534_params)).len() == 0LL)) {
		_1aaaa4dd3_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1aaaa4dd3_write(_self_, jule::Str("(", 1));
	{
		auto expr = _93534_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1babcb390:;
		if (it != expr_end) {
			jule::I64 _94114_i = it - expr->begin();
			jule::Ptr<_1c62d1b55_ParamIns> _94121_p = *it;
			{
				_1aaaac182_paramIns(_self_, &(_94121_p));
				if ((((*(_93534_params)).len() - _94114_i) > 1LL)) {
					_1aaaa4dd3_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1babcb390:;
			++it;
			_94114_i++;
			goto _iter_begin_1babcb390;
		}
		_iter_end_1babcb390:;
	};
	_1aaaa4dd3_write(_self_, jule::Str(")", 1));
}



inline void _1aaaac79d_varInitExpr(jule::Ptr<_1aaaa472e_ObjectCoder> _self_, jule::Ptr<_1c6389da6_Var>* _95036_v, jule::Fn<void(void)> _95045_init) {
	if ((*((*(_95036_v))))._field_Statically) {
		_1aaaa4dd3_write(_self_, jule::Str("static ", 7));
	};
	_1aaaa4dd3_write(_self_, _1aaabe8e2_kind((*(_self_))._field_tc.ptr(), (*((*((*(_95036_v))))._field_Kind))._field_Kind));
	_1aaaa4dd3_write(_self_, jule::Str(" ", 1));
	if ((*((*(_95036_v))))._field_Reference) {
		_1aaaa4dd3_write(_self_, jule::Str("*", 1));
	};
	_1aaaa4dd3_write(_self_, static__1aa9e4ce0_var((*(_95036_v))));
	if ((_95045_init != nullptr)) {
		_1aaaa4dd3_write(_self_, jule::Str(" = ", 3));
		_95045_init();
	};
	_1aaaa4dd3_write(_self_, jule::Str(";", 1));
}



inline void _1aaab28b3_var(jule::Ptr<_1aaaa472e_ObjectCoder> _self_, jule::Ptr<_1c6389da6_Var> _96827_v) {
	if (_1c628649a_IsIgnoreIdent((*(_96827_v))._field_Ident)) {
		return;;
	};
	if ((((*(_96827_v))._field_Value != nullptr) && ((*((*(_96827_v))._field_Value))._field_Expr != nullptr))) {
		if (((*((*((*(_96827_v))._field_Value))._field_Data))._field_Model != nullptr)) {
			if ((*(_96827_v))._field_Reference) {
				_1aaaac79d_varInitExpr(_self_, &(_96827_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1aaaa4dd3_write(_self_, jule::Str("&(", 2));
					_1aa9db7cb_model((*(_self_))._field_ec, (*((*((*(_96827_v))._field_Value))._field_Data))._field_Model);
					_1aaaa4dd3_write(_self_, jule::Str(")", 1));
				}));
			} else {
				_1aaaac79d_varInitExpr(_self_, &(_96827_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1aa9d2508_possibleRefExpr((*(_self_))._field_ec, (*((*((*(_96827_v))._field_Value))._field_Data))._field_Model);
				}));
			};
			return;;
		};
		_1aaaac79d_varInitExpr(_self_, &(_96827_v), nullptr);
		return;;
	};
	if ((*(_96827_v))._field_Reference) {
		_1aaaac79d_varInitExpr(_self_, &(_96827_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1aaaa4dd3_write(_self_, jule::Str("nullptr", 7));
		}));
		return;;
	};
	if (_1aaac6aa3_shouldInitialized(&((*((*(_96827_v))._field_Kind))._field_Kind))) {
		_1aaaac79d_varInitExpr(_self_, &(_96827_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1aa9dba84_initExpr((*(_self_))._field_ec, (*((*(_96827_v))._field_Kind))._field_Kind);
		}));
		return;;
	};
	_1aaaac79d_varInitExpr(_self_, &(_96827_v), nullptr);
}



inline void _1aaab2b6b_funcIns(jule::Ptr<_1aaaa472e_ObjectCoder> _self_, jule::Ptr<_1c62d2b01_FnIns>* _99932_f) {
	_1aaaaaa76_funcHead(_self_, _99932_f, false);
	_1aaaac43a_paramsIns(_self_, &((*((*(_99932_f))))._field_Params));
	_1aaaa4dd3_write(_self_, jule::Str(" ", 1));
	_1aa9cb238_funcScope((*(_self_))._field_sc, (*(_99932_f)));
	if (((*((*(_99932_f))))._field_Scope != nullptr)) {
		_1aaaa4dd3_write(_self_, jule::Str("\n\n", 2));
	};
}



inline void _1aaab2e24_func(jule::Ptr<_1aaaa472e_ObjectCoder> _self_, jule::Ptr<_1c62cebec_Fn>* _100929_f) {
	{
		auto expr = &((*((*(_100929_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1babdd726:;
		if (it != expr_end) {
			jule::Ptr<_1c62d2b01_FnIns> _101021_ins = *it;
			{
				_1aaab2b6b_funcIns(_self_, &(_101021_ins));
			}
			_iter_next_1babdd726:;
			++it;
			goto _iter_begin_1babdd726;
		}
		_iter_end_1babdd726:;
	};
}



inline void _1aaab3287_funcTrait(jule::Ptr<_1aaaa472e_ObjectCoder> _self_, jule::Ptr<_1aaaa32dd_traitHash>* _101534_hash, jule::Ptr<_1c62cebec_Fn>* _101557_f) {
	jule::Str _101613_ident = (*((*(_101557_f))))._field_Ident;;
	{
		auto expr = &((*((*(_101557_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1babdeeb9:;
		if (it != expr_end) {
			jule::Ptr<_1c62d2b01_FnIns> _101721_ins = *it;
			{
				(*(_101721_ins))._field_Scope=nullptr;
				_2206c697e_StrBuilder _102021_s = static__2206c6c9d_New(static_cast<jule::I64>((((((*((*(_101557_f))))._field_Ident.len() + _101613_ident.len()) + (*((*(_101534_hash))))._field_ti.len()) + 2LL) + 4LLU)));;
				_2206d0625_WriteStr(&_102021_s, _101613_ident);
				_2206d08cd_WriteByte(&_102021_s, '_');
				_2206d0625_WriteStr(&_102021_s, (*((*(_101534_hash))))._field_ti);
				_2206d08cd_WriteByte(&_102021_s, '_');
				_2206d0625_WriteStr(&_102021_s, _1dc250063_Itoa((*((*(_101534_hash))))._field_i));
				(*((*(_101557_f))))._field_Ident=_2206d0e1c_Str(&_102021_s);
				jule::Ptr<_1c641d522_TypeKind> _102921_k = (*((*(_101721_ins))._field_Params[0LL]))._field_Kind;;
				(*((*(_101721_ins))._field_Params[0LL]))._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>((*((*(_101534_hash))))._field_t, 2)});
				_1aaab2b6b_funcIns(_self_, &(_101721_ins));
				(*((*(_101721_ins))._field_Params[0LL]))._field_Kind=_102921_k;
			}
			_iter_next_1babdeeb9:;
			++it;
			goto _iter_begin_1babdeeb9;
		}
		_iter_end_1babdeeb9:;
	};
	(*((*(_101557_f))))._field_Ident=_101613_ident;
}



inline void _1aaab35ea_traitWrapper(jule::Ptr<_1aaaa472e_ObjectCoder> _self_, jule::Ptr<_1c62cebec_Fn>* _103737_m, jule::Ptr<_1aaaa32dd_traitHash>* _103750_hash) {
	_1aaab3287_funcTrait(_self_, _103750_hash, _103737_m);
	if (((*((*(_103750_hash))))._field_s == nullptr)) {
		if (_21e49099c_Production) {
			_1aaaa4dd3_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
		} else {
			_1aaaa4dd3_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
		};
		return;;
	};
	jule::Bool _104913_ptr = (!(_1c62cdaca_IsRef((*((*(_103737_m))))._field_Params[0LL].ptr())));;
	jule::Ptr<_1c62cebec_Fn> _105117_sm = _1c62bdb31_FindMethod((*((*(_103750_hash))))._field_s.ptr(), (*((*(_103737_m))))._field_Ident, false);;
	if (((_105117_sm == nullptr) || ((*(_105117_sm))._field_Instances.len() == 0LL))) {
		return;;
	};
	_1aaaa50d1_addIndent(_self_);
	_1aaaa4dd3_write(_self_, jule::Str("{\n", 2));
	_1aaaa54cc_indent(_self_);
	if (((*(_105117_sm))._field_Exceptional || (!(_1c62d0170_IsVoid(_105117_sm.ptr()))))) {
		_1aaaa4dd3_write(_self_, jule::Str("return ", 7));
	};
	_1aaaa4dd3_write(_self_, static__1aa9e387c_func(&(_105117_sm)));
	_1aaaa4dd3_write(_self_, jule::Str("(", 1));
	if (_104913_ptr) {
		_1aaaa4dd3_write(_self_, jule::Str("_self_.safe_ptr<", 16));
		_1aaaa4dd3_write(_self_, _1aaabcc97_structureIns((*(_self_))._field_tc.ptr(), (*((*(_103750_hash))))._field_s));
		_1aaaa4dd3_write(_self_, jule::Str(">(", 2));
		if ((!(_21e49099c_Production))) {
			_1aaaa4dd3_write(_self_, jule::Str("_00___file", 10));
		};
		_1aaaa4dd3_write(_self_, jule::Str(")", 1));
	} else {
		_1aaaa4dd3_write(_self_, jule::Str("_self_.data.as<", 15));
		_1aaaa4dd3_write(_self_, _1aaabc956_structure((*(_self_))._field_tc.ptr(), (*(_105117_sm))._field_Owner));
		_1aaaa4dd3_write(_self_, jule::Str(">()", 3));
	};
	{
		auto expr = (*((*(_103737_m))))._field_Params.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1babeb68a:;
		if (it != expr_end) {
			jule::Ptr<_1c62cd228_Param> _107716_mp = *it;
			{
				_1aaaa4dd3_write(_self_, jule::Str(", ", 2));
				_1aaaa4dd3_write(_self_, static__1aa9e41c9_param(&(_107716_mp)));
			}
			_iter_next_1babeb68a:;
			++it;
			goto _iter_begin_1babeb68a;
		}
		_iter_end_1babeb68a:;
	};
	_1aaaa4dd3_write(_self_, jule::Str(");\n}\n", 5));
	_1aaaa52ce_doneIndent(_self_);
}



inline void _1aaab37e8_traitWrappers(jule::Ptr<_1aaaa472e_ObjectCoder> _self_) {
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bac016b2:;
		if (it != expr_end) {
			jule::Ptr<_1aaaa32dd_traitHash> _108621_hash = *it;
			{
				{
					auto expr = &((*((*(_108621_hash))._field_t))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bac020db:;
					if (it != expr_end) {
						jule::Ptr<_1c62cebec_Fn> _108725_m = *it;
						{
							_1aaab35ea_traitWrapper(_self_, &(_108725_m), &(_108621_hash));
						}
						_iter_next_1bac020db:;
						++it;
						goto _iter_begin_1bac020db;
					}
					_iter_end_1bac020db:;
				};
			}
			_iter_next_1bac016b2:;
			++it;
			goto _iter_begin_1bac016b2;
		}
		_iter_end_1bac016b2:;
	};
}



inline void _1aaab3b5b_traitDataMethods(jule::Ptr<_1aaaa472e_ObjectCoder> _self_, jule::Ptr<_1c62e2e96_Trait>* _109341_t, jule::Ptr<_1aaaa32dd_traitHash>* _109353_hash) {
	{
		auto expr = &((*((*(_109341_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bac02bd0:;
		if (it != expr_end) {
			jule::Ptr<_1c62cebec_Fn> _109421_m = *it;
			{
				jule::Str _109517_mIdent = static__1aa9e387c_func(&(_109421_m));;
				_1aaaa54cc_indent(_self_);
				_1aaaa4dd3_write(_self_, jule::Str(".", 1));
				_1aaaa4dd3_write(_self_, _109517_mIdent);
				_1aaaa4dd3_write(_self_, jule::Str("=", 1));
				_1aaaa4dd3_write(_self_, _109517_mIdent);
				_1aaaa4dd3_write(_self_, jule::Str("_", 1));
				_1aaaa4dd3_write(_self_, (*((*(_109353_hash))))._field_ti);
				_1aaaa4dd3_write(_self_, jule::Str("_", 1));
				_1aaaa4dd3_write(_self_, _1dc250063_Itoa((*((*(_109353_hash))))._field_i));
				_1aaaa4dd3_write(_self_, jule::Str(",\n", 2));
			}
			_iter_next_1bac02bd0:;
			++it;
			goto _iter_begin_1bac02bd0;
		}
		_iter_end_1bac02bd0:;
	};
}



inline void _1aaab3ebe_traitData(jule::Ptr<_1aaaa472e_ObjectCoder> _self_, jule::Ptr<_1aaaa32dd_traitHash>* _110934_hash, jule::Ptr<_1c62e2e96_Trait>* _110957_old) {
	if (((*((*((*(_110934_hash))))._field_t))._field_Methods.len() == 0LL)) {
		return;;
	};
	jule::Str _111313_ident = static__1aa9e3e10_traitDecl((*((*(_110934_hash))))._field_t);;
	if (((*((*(_110934_hash))))._field_t != (*(_110957_old)))) {
		if (((*(_110957_old)) != nullptr)) {
			_1aaaa52ce_doneIndent(_self_);
			_1aaaa54cc_indent(_self_);
			_1aaaa4dd3_write(_self_, jule::Str("};\n", 3));
		};
		_1aaaa4dd3_write(_self_, jule::Str("static ", 7));
		_1aaaa4dd3_write(_self_, _111313_ident);
		_1aaaa4dd3_write(_self_, jule::Str("MptrData ", 9));
		_1aaaa4dd3_write(_self_, _111313_ident);
		_1aaaa4dd3_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
		(*(_110957_old))=(*((*(_110934_hash))))._field_t;
		_1aaaa50d1_addIndent(_self_);
	};
	_1aaaa54cc_indent(_self_);
	_1aaaa4dd3_write(_self_, jule::Str("{\n", 2));
	_1aaaa50d1_addIndent(_self_);
	_1aaab3b5b_traitDataMethods(_self_, &((*((*(_110934_hash))))._field_t), _110934_hash);
	_1aaaa52ce_doneIndent(_self_);
	_1aaaa54cc_indent(_self_);
	_1aaaa4dd3_write(_self_, jule::Str("},\n", 3));
}



inline void _1aaab41bc_traitDatas(jule::Ptr<_1aaaa472e_ObjectCoder> _self_) {
	jule::Ptr<_1c62e2e96_Trait> _113817_old = nullptr;;
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bac0d328:;
		if (it != expr_end) {
			jule::Ptr<_1aaaa32dd_traitHash> _113921_hash = *it;
			{
				_1aaab3ebe_traitData(_self_, &(_113921_hash), &(_113817_old));
			}
			_iter_next_1bac0d328:;
			++it;
			goto _iter_begin_1bac0d328;
		}
		_iter_end_1bac0d328:;
	};
	if ((_113817_old != nullptr)) {
		_1aaaa52ce_doneIndent(_self_);
		_1aaaa54cc_indent(_self_);
		_1aaaa4dd3_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _1aaab43ba_globals(jule::Ptr<_1aaaa472e_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bac101a4:;
		if (it != expr_end) {
			jule::Ptr<_1c6389da6_Var> _115021_v = *it;
			{
				_1aaaa4dd3_write(_self_, _1aaabe8e2_kind((*(_self_))._field_tc.ptr(), (*((*(_115021_v))._field_Kind))._field_Kind));
				_1aaaa4dd3_write(_self_, jule::Str(" ", 1));
				_1aaaa4dd3_write(_self_, static__1aa9e4ce0_var(_115021_v));
				_1aaaa4dd3_write(_self_, jule::Str(" = ", 3));
				_1aa9db7cb_model((*(_self_))._field_ec, (*((*((*(_115021_v))._field_Value))._field_Data))._field_Model);
				_1aaaa4dd3_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1bac101a4:;
			++it;
			goto _iter_begin_1bac101a4;
		}
		_iter_end_1bac101a4:;
	};
}



inline void _1aaab45b8_decls(jule::Ptr<_1aaaa472e_ObjectCoder> _self_) {
	_1aaaa8139_traitDecls(_self_);
	_1aaaa85e0_structurePlainDecls(_self_);
	_1aaaaa25c_structureDecls(_self_);
	(*(_self_))._field_headPos=static_cast<jule::I64>(_2206d13a1_Len(&(*(_self_))._field_Obj));
	_1aaaaa45a_structureMethodDecls(_self_);
	_1aaaab868_funcDecls(_self_);
	_1aaaa4dd3_write(_self_, jule::Str("\n\n", 2));
	_1aaaabdc9_traitDataTypes(_self_);
	_1aaaa4dd3_write(_self_, jule::Str("\n\n", 2));
	_1aaab37e8_traitWrappers(_self_);
	_1aaaa4dd3_write(_self_, jule::Str("\n\n", 2));
	_1aaab41bc_traitDatas(_self_);
	_1aaaa4dd3_write(_self_, jule::Str("\n\n", 2));
	(*(_self_))._field_declPos=static_cast<jule::I64>(_2206d13a1_Len(&(*(_self_))._field_Obj));
	_1aaab43ba_globals(_self_);
}



inline void _1aaab4871_structureMethods(jule::Ptr<_1aaaa472e_ObjectCoder> _self_, jule::Ptr<_1c62bcab9_StructIns>* _117841_s) {
	{
		auto expr = &((*((*(_117841_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bac18124:;
		if (it != expr_end) {
			jule::Ptr<_1c62cebec_Fn> _117921_f = *it;
			{
				_1aaab2e24_func(_self_, &(_117921_f));
				_1aaaa4dd3_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1bac18124:;
			++it;
			goto _iter_begin_1bac18124;
		}
		_iter_end_1bac18124:;
	};
}



inline void _1aaab4b29_structureOstream(jule::Ptr<_1aaaa472e_ObjectCoder> _self_, jule::Ptr<_1c62bcab9_StructIns>* _118541_s) {
	_1aaaa54cc_indent(_self_);
	_1aaaa4dd3_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_1aaaa4dd3_write(_self_, static__1aa9e475c_structureIns(_118541_s));
	_1aaaa4dd3_write(_self_, jule::Str(" _Src) {\n", 9));
	_1aaaa50d1_addIndent(_self_);
	_1aaaa54cc_indent(_self_);
	jule::Ptr<_1c62cebec_Fn> _119317_fts = _1c62bdb31_FindMethod((*(_118541_s)).ptr(), jule::Str("Str", 3), false);;
	if (static__1c638b5c2_Str(_119317_fts)) {
		_1aaaa4dd3_write(_self_, jule::Str("_Stream << ", 11));
		_1aaaa4dd3_write(_self_, static__1aa9e387c_func(&(_119317_fts)));
		_1aaaa4dd3_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_1aaaa4dd3_write(_self_, jule::Str("_Stream << \"", 12));
		_1aa9dc546_cstrBytes(&((*(_self_))._field_Obj), (*((*((*(_118541_s))))._field_Decl))._field_Ident);
		_1aaaa4dd3_write(_self_, jule::Str("{\";\n", 4));
		{
			auto expr = &((*((*(_118541_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bac1cd71:;
			if (it != expr_end) {
				jule::I64 _120318_i = it - expr->begin();
				jule::Ptr<_1c62bc019_FieldIns> _120325_f = *it;
				{
					_1aaaa54cc_indent(_self_);
					_1aaaa4dd3_write(_self_, jule::Str("_Stream << \"", 12));
					_1aa9dc546_cstrBytes(&((*(_self_))._field_Obj), (*((*(_120325_f))._field_Decl))._field_Ident);
					_1aaaa4dd3_write(_self_, jule::Str(":", 1));
					jule::Ptr<_1c62bcab9_StructIns> _121021_strct = _1c64221e6_Struct((*(_120325_f))._field_Kind.ptr());;
					if ((((_121021_strct != nullptr) && ((*(_121021_strct))._field_Decl != nullptr)) && (*((*(_121021_strct))._field_Decl))._field_Binded)) {
						_1aaaa4dd3_write(_self_, jule::Str(" cpp.", 5));
						_1aaaa4dd3_write(_self_, static__1aa9e4a26_field(&((*(_120325_f))._field_Decl)));
						_1aaaa4dd3_write(_self_, jule::Str("\"", 1));
					} else {
						_1aaaa4dd3_write(_self_, jule::Str("\" << _Src.", 10));
						_1aaaa4dd3_write(_self_, static__1aa9e4a26_field(&((*(_120325_f))._field_Decl)));
					};
					if (((_120318_i + 1LL) < (*((*(_118541_s))))._field_Fields.len())) {
						_1aaaa4dd3_write(_self_, jule::Str(" << \", \"", 8));
					};
					_1aaaa4dd3_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_1bac1cd71:;
				++it;
				_120318_i++;
				goto _iter_begin_1bac1cd71;
			}
			_iter_end_1bac1cd71:;
		};
		_1aaaa54cc_indent(_self_);
		_1aaaa4dd3_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_1aaaa54cc_indent(_self_);
	_1aaaa4dd3_write(_self_, jule::Str("return _Stream;\n", 16));
	_1aaaa52ce_doneIndent(_self_);
	_1aaaa4dd3_write(_self_, jule::Str("}", 1));
}



inline void _1aaab4dd2_structureIns(jule::Ptr<_1aaaa472e_ObjectCoder> _self_, jule::Ptr<_1c62bcab9_StructIns>* _123637_s) {
	_1aaab4871_structureMethods(_self_, _123637_s);
	_1aaaa4dd3_write(_self_, jule::Str("\n\n", 2));
	_1aaab4b29_structureOstream(_self_, _123637_s);
}



inline void _1aaab518a_structure(jule::Ptr<_1aaaa472e_ObjectCoder> _self_, jule::Ptr<_1c62b9d3b_Struct>* _124234_s) {
	{
		auto expr = &((*((*(_124234_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bac277a4:;
		if (it != expr_end) {
			jule::Ptr<_1c62bcab9_StructIns> _124321_ins = *it;
			{
				_1aaab4dd2_structureIns(_self_, &(_124321_ins));
				_1aaaa4dd3_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1bac277a4:;
			++it;
			goto _iter_begin_1bac277a4;
		}
		_iter_end_1bac277a4:;
	};
}



inline void _1aaab5388_structures(jule::Ptr<_1aaaa472e_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bac28101:;
		if (it != expr_end) {
			jule::Ptr<_1c62b9d3b_Struct> _125021_s = *it;
			{
				if (((*(_125021_s))._field_Token != nullptr)) {
					_1aaab518a_structure(_self_, &(_125021_s));
					_1aaaa4dd3_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1bac28101:;
			++it;
			goto _iter_begin_1bac28101;
		}
		_iter_end_1bac28101:;
	};
}



inline void _1aaab5586_funcs(jule::Ptr<_1aaaa472e_ObjectCoder> _self_) {
	_1aaaa7c3d_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1c6349915_Package>*)>([=](jule::Ptr<_1c6349915_Package>* _125935_pkg) mutable -> void {
		_1aaab6521_iterFiles(_125935_pkg, jule::Fn<void(jule::Ptr<_1c63d8135_SymbolTable>*)>([=](jule::Ptr<_1c63d8135_SymbolTable>* _126036_file) mutable -> void {
			{
				auto expr = &((*((*(_126036_file))))._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1bac321c6:;
				if (it != expr_end) {
					jule::Ptr<_1c62cebec_Fn> _126129_f = *it;
					{
						if (((!(_21e490040_Test)) && _1aaac67d9_hasDirective(&((*(_126129_f))._field_Directives), jule::Str("test", 4)))) {
							goto _iter_next_1bac321c6;
						};
						if (((!((*(_126129_f))._field_Binded)) && ((*(_126129_f))._field_Token != nullptr))) {
							_1aaab2e24_func(_self_, &(_126129_f));
							_1aaaa4dd3_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_1bac321c6:;
					++it;
					goto _iter_begin_1bac321c6;
				}
				_iter_end_1bac321c6:;
			};
		}));
	}));
}



inline void _1aaab583e_pushInit(jule::Ptr<_1aaaa472e_ObjectCoder> _self_, jule::Ptr<_1c6349915_Package>* _127433_pkg) {
	_1aaab6521_iterFiles(_127433_pkg, jule::Fn<void(jule::Ptr<_1c63d8135_SymbolTable>*)>([=](jule::Ptr<_1c63d8135_SymbolTable>* _127532_file) mutable -> void {
		{
			auto expr = &((*((*(_127532_file))))._field_Funcs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bac34c67:;
			if (it != expr_end) {
				jule::Ptr<_1c62cebec_Fn> _127620_f = *it;
				{
					if ((*(_127620_f))._field_Ident.equal("init", 4)) {
						_1aaaa54cc_indent(_self_);
						_1aaaa4dd3_write(_self_, static__1aa9e387c_func(&(_127620_f)));
						_1aaaa4dd3_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_1bac34c67:;
				++it;
				goto _iter_begin_1bac34c67;
			}
			_iter_end_1bac34c67:;
		};
	}));
}



inline void _1aaab5a3c_initCaller(jule::Ptr<_1aaaa472e_ObjectCoder> _self_) {
	_1aaaa4dd3_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_1aaaa50d1_addIndent(_self_);
	_1aaaa7c3d_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1c6349915_Package>*)>([=](jule::Ptr<_1c6349915_Package>* _128935_pkg) mutable -> void {
		_1aaab583e_pushInit(_self_, _128935_pkg);
	}));
	_1aaaa52ce_doneIndent(_self_);
	_1aaaa4dd3_write(_self_, jule::Str("\n}", 2));
}



inline void _1aaab5c3a_end(jule::Ptr<_1aaaa472e_ObjectCoder> _self_) {
	_1aaaa4dd3_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_21e490040_Test) {
		_1aaaa4dd3_write(_self_, jule::Str("test_point();", 13));
	} else {
		_1aaaa4dd3_write(_self_, jule::Str("entry_point();", 14));
	};
	_1aaaa4dd3_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1aaab5e38_serializeHead(jule::Ptr<_1aaaa472e_ObjectCoder> _self_) {
	_1aaaa7985_prepareStructures(_self_);
	_1aaaa7e3b_buildTraitMap(_self_);
	_1aaaa72d1_head(_self_);
	_1aaaa4dd3_write(_self_, jule::Str("\n", 1));
	_1aaab45b8_decls(_self_);
	if ((_2206d13a1_Len(&(*(_self_))._field_resultDecls) > 0LL)) {
		jule::Slice<jule::U8> _132421_head = jule::append(jule::Slice<jule::U8>::alloc(0LL, 0LL, 0),_2206d18bd_Buf(&(*(_self_))._field_Obj).slice(0LL, (*(_self_))._field_headPos));;
		(_132421_head).append(_2206d18bd_Buf(&(*(_self_))._field_resultDecls));;
		(*(_self_))._field_declPos+=_2206d13a1_Len(&(*(_self_))._field_resultDecls);
		(_132421_head).append(_2206d18bd_Buf(&(*(_self_))._field_Obj).slice((*(_self_))._field_headPos));;
		{
			_2206d1b76_SetBuf(&(*(_self_))._field_Obj, _132421_head);
		};
	};
	_1aaaa4dd3_write(_self_, jule::Str("\n", 1));
	_1aaab5388_structures(_self_);
	_1aaab5586_funcs(_self_);
	_1aaab5a3c_initCaller(_self_);
	_1aaaa4dd3_write(_self_, jule::Str("\n\n", 2));
	if ((_2206d13a1_Len(&(*(_self_))._field_anyObj) > 0LL)) {
		jule::Slice<jule::U8> _133821_head = jule::append(jule::Slice<jule::U8>::alloc(0LL, 0LL, 0),_2206d18bd_Buf(&(*(_self_))._field_Obj).slice(0LL, (*(_self_))._field_declPos));;
		(_133821_head).append(_2206d18bd_Buf(&(*(_self_))._field_anyObj));;
		(_133821_head).append(_2206d18bd_Buf(&(*(_self_))._field_Obj).slice((*(_self_))._field_declPos));;
		{
			_2206d1b76_SetBuf(&(*(_self_))._field_Obj, _133821_head);
		};
	};
}



inline void _1aaab6136_Serialize(jule::Ptr<_1aaaa472e_ObjectCoder> _self_) {
	_1aaab5e38_serializeHead(_self_);
	_1aaab5c3a_end(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1aaaa472e_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Obj:" << _Src._field_Obj << ", ";
	_Stream << "resultDecls:" << _Src._field_resultDecls << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "traitCastMap:" << _Src._field_traitCastMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "tc:" << _Src._field_tc << ", ";
	_Stream << "headPos:" << _Src._field_headPos << ", ";
	_Stream << "declPos:" << _Src._field_declPos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa1279a6_ObjectDeadCode> static__1aa13175c_new(jule::Ptr<_1a9ed6249_IR>* _3424_ir) {
	return jule::new_ptr<_1aa1279a6_ObjectDeadCode>(_1aa1279a6_ObjectDeadCode{._field_ir=(*(_3424_ir))});;
}



inline jule::Bool _1ad8e51d7_isLive(jule::Ptr<_1aa1279a6_ObjectDeadCode> _self_, jule::Ptr<_1c62e2e96_Trait>* _4030_t) {
	jule::Slice<jule::Ptr<_1c62e2e96_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1ad8e6e53:;
			{
				_4117_live=(*(_self_))._field_live._field_traits;
			}
		}
		_match_end_1ad8e6c55:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad8e6eb9:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1ad8e6eb9:;
			++it;
			_5213_i++;
			goto _iter_begin_1ad8e6eb9;
		}
		_iter_end_1ad8e6eb9:;
	};
	return false;;
}

inline jule::Bool _1ad8eac37_isLive(jule::Ptr<_1aa1279a6_ObjectDeadCode> _self_, jule::Ptr<_1c62d2b01_FnIns>* _4030_t) {
	jule::Slice<jule::Ptr<_1c62d2b01_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1ad8ec7d8:;
			{
				_4117_live=(*(_self_))._field_live._field_fns;
			}
		}
		_match_end_1ad8ec72d:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad8ed4ed:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1ad8ed4ed:;
			++it;
			_5213_i++;
			goto _iter_begin_1ad8ed4ed;
		}
		_iter_end_1ad8ed4ed:;
	};
	return false;;
}

inline jule::Bool _1ad9022c1_isLive(jule::Ptr<_1aa1279a6_ObjectDeadCode> _self_, jule::Ptr<_1c62bcab9_StructIns>* _4030_t) {
	jule::Slice<jule::Ptr<_1c62bcab9_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1ad906c54:;
			{
				_4117_live=(*(_self_))._field_live._field_structs;
			}
		}
		_match_end_1ad906abc:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad906d31:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1ad906d31:;
			++it;
			_5213_i++;
			goto _iter_begin_1ad906d31;
		}
		_iter_end_1ad906d31:;
	};
	return false;;
}

inline jule::Bool _1ad909c68_isLive(jule::Ptr<_1aa1279a6_ObjectDeadCode> _self_, jule::Ptr<_1c6389da6_Var>* _4030_t) {
	jule::Slice<jule::Ptr<_1c6389da6_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1ad90b8b3:;
			{
				_4117_live=(*(_self_))._field_live._field_vars;
			}
		}
		_match_end_1ad90b792:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad90b84c:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1ad90b84c:;
			++it;
			_5213_i++;
			goto _iter_begin_1ad90b84c;
		}
		_iter_end_1ad90b84c:;
	};
	return false;;
}



inline void _1ad8e55a0_pushLive(jule::Ptr<_1aa1279a6_ObjectDeadCode> _self_, jule::Ptr<_1c62e2e96_Trait> _6035_t) {
	{
		
{
			_case_begin_1ad8e9164:;
			{
				{ jule::Slice<jule::Ptr<_1c62e2e96_Trait>> &__jule_push_dest = (*(_self_))._field_live._field_traits; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1ad8e8e66:;
	};
}

inline void _1ad8eb0bc_pushLive(jule::Ptr<_1aa1279a6_ObjectDeadCode> _self_, jule::Ptr<_1c62d2b01_FnIns> _6035_t) {
	{
		
{
			_case_begin_1ad90017b:;
			{
				{ jule::Slice<jule::Ptr<_1c62d2b01_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1ad90005a:;
	};
}

inline void _1ad902854_pushLive(jule::Ptr<_1aa1279a6_ObjectDeadCode> _self_, jule::Ptr<_1c62bcab9_StructIns> _6035_t) {
	{
		
{
			_case_begin_1ad904108:;
			{
				{ jule::Slice<jule::Ptr<_1c62bcab9_StructIns>> &__jule_push_dest = (*(_self_))._field_live._field_structs; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1ad903e71:;
	};
}

inline void _1ad90a131_pushLive(jule::Ptr<_1aa1279a6_ObjectDeadCode> _self_, jule::Ptr<_1c6389da6_Var> _6035_t) {
	{
		
{
			_case_begin_1ad90de59:;
			{
				{ jule::Slice<jule::Ptr<_1c6389da6_Var>> &__jule_push_dest = (*(_self_))._field_live._field_vars; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1ad90dd9e:;
	};
}



inline void _1aa119019_setReferencesAsLive(jule::Ptr<_1aa1279a6_ObjectDeadCode> _self_, jule::Ptr<_1c62d5c9c_ReferenceStack>* _7344_rs) {
	if (((*(_7344_rs)) == nullptr)) {
		return;;
	};
	jule::I64 _7717_i = 0LL;;
	for (; (_7717_i < _1c62d6495_Len((*(_7344_rs)).ptr())); (_7717_i)++) {
		{
			jule::Any _7921_ref = _1c62d67d6_At((*(_7344_rs)).ptr(), _7717_i);;
			{
				auto &_match_expr{ _7921_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_1ad8e3e50:;
					{
						jule::Ptr<_1c62e2e96_Trait> _8225_t = _7921_ref.cast_ptr<_1c62e2e96_Trait>(&__jule_any_type10);;
						if (_1ad8e51d7_isLive(_self_, &(_8225_t))) {
							goto _iter_next_1ad8e314c;
						};
						_1ad8e55a0_pushLive(_self_, _8225_t);
						{
							auto expr = &((*(_8225_t))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1ad8e4b21:;
							if (it != expr_end) {
								jule::Ptr<_1c62cebec_Fn> _8729_ins = *it;
								{
									{
										auto expr = &((*(_8729_ins))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1ad8e5dec:;
										if (it != expr_end) {
											jule::Ptr<_1c62d2b01_FnIns> _8833_mins = *it;
											{
												if (_1ad8eac37_isLive(_self_, &(_8833_mins))) {
													goto _iter_next_1ad8e5dec;
												};
												_1ad8eb0bc_pushLive(_self_, _8833_mins);
												_1aa119019_setReferencesAsLive(_self_, &((*(_8833_mins))._field_Refers));
											}
											_iter_next_1ad8e5dec:;
											++it;
											goto _iter_begin_1ad8e5dec;
										}
										_iter_end_1ad8e5dec:;
									};
								}
								_iter_next_1ad8e4b21:;
								++it;
								goto _iter_begin_1ad8e4b21;
							}
							_iter_end_1ad8e4b21:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1ad8e3eb6:;
					{
						jule::Ptr<_1c62d2b01_FnIns> _9725_f = _7921_ref.cast_ptr<_1c62d2b01_FnIns>(&__jule_any_type7);;
						if (_1ad8eac37_isLive(_self_, &(_9725_f))) {
							goto _match_end_1ad8e3d95;
						};
						if ((((*(_9725_f))._field_Owner != nullptr) && (!((*((*(_9725_f))._field_Decl))._field_Statically)))) {
							if ((!(_1ad9022c1_isLive(_self_, &((*(_9725_f))._field_Owner))))) {
								_1ad902854_pushLive(_self_, (*(_9725_f))._field_Owner);
								_1aa119019_setReferencesAsLive(_self_, &((*((*(_9725_f))._field_Owner))._field_Refers));
							};
						};
						_1ad8eb0bc_pushLive(_self_, _9725_f);
						_1aa119019_setReferencesAsLive(_self_, &((*(_9725_f))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_1ad8e402c:;
					{
						jule::Ptr<_1c6389da6_Var> _11025_v = _7921_ref.cast_ptr<_1c6389da6_Var>(&__jule_any_type8);;
						if (_1ad909c68_isLive(_self_, &(_11025_v))) {
							goto _match_end_1ad8e3d95;
						};
						_1ad90a131_pushLive(_self_, _11025_v);
						_1aa119019_setReferencesAsLive(_self_, &((*(_11025_v))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_1ad8e4093:;
					{
						jule::Ptr<_1c62bcab9_StructIns> _11725_s = _7921_ref.cast_ptr<_1c62bcab9_StructIns>(&__jule_any_type9);;
						if (_1ad9022c1_isLive(_self_, &(_11725_s))) {
							goto _match_end_1ad8e3d95;
						};
						_1ad902854_pushLive(_self_, _11725_s);
						_1aa119019_setReferencesAsLive(_self_, &((*(_11725_s))._field_Refers));
						{
							auto expr = &((*(_11725_s))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1ad910763:;
							if (it != expr_end) {
								jule::Ptr<_1c62cebec_Fn> _12329_m = *it;
								{
									{
										auto expr = &((*(_12329_m))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1ad912ca4:;
										if (it != expr_end) {
											jule::Ptr<_1c62d2b01_FnIns> _12433_ins = *it;
											{
												if (_1ad8eac37_isLive(_self_, &(_12433_ins))) {
													goto _iter_next_1ad912ca4;
												};
												if (_1aa134067_isTraitMethod(&(_11725_s), &(_12433_ins))) {
													_1ad8eb0bc_pushLive(_self_, _12433_ins);
													_1aa119019_setReferencesAsLive(_self_, &((*(_12433_ins))._field_Refers));
												};
											}
											_iter_next_1ad912ca4:;
											++it;
											goto _iter_begin_1ad912ca4;
										}
										_iter_end_1ad912ca4:;
									};
								}
								_iter_next_1ad910763:;
								++it;
								goto _iter_begin_1ad910763;
							}
							_iter_end_1ad910763:;
						};
					}
				}
				_match_end_1ad8e3d95:;
			};
		}
	_iter_next_1ad8e314c:;
	}
	_iter_end_1ad8e314c:;;
}



inline void _1aa1192c2_inits(jule::Ptr<_1aa1279a6_ObjectDeadCode> _self_, jule::Ptr<_1c6349915_Package>* _14130_pkg) {
	{
		auto expr = &((*((*(_14130_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad909273:;
		if (it != expr_end) {
			jule::Ptr<_1c63d8135_SymbolTable> _14221_file = *it;
			{
				{
					auto expr = &((*(_14221_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad913601:;
					if (it != expr_end) {
						jule::Ptr<_1c62cebec_Fn> _14325_f = *it;
						{
							if ((*(_14325_f))._field_Ident.equal("init", 4)) {
								jule::Ptr<_1c62d2b01_FnIns> _14529_ins = (*(_14325_f))._field_Instances[0LL];;
								{ jule::Slice<jule::Ptr<_1c62d2b01_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_14529_ins); };
								_1aa119019_setReferencesAsLive(_self_, &((*(_14529_ins))._field_Refers));
							};
						}
						_iter_next_1ad913601:;
						++it;
						goto _iter_begin_1ad913601;
					}
					_iter_end_1ad913601:;
				};
			}
			_iter_next_1ad909273:;
			++it;
			goto _iter_begin_1ad909273;
		}
		_iter_end_1ad909273:;
	};
}



inline void _1aa131938_collectLivePackage(jule::Ptr<_1aa1279a6_ObjectDeadCode> _self_, jule::Ptr<_1c6349915_Package>* _15343_pkg) {
	_1aa1192c2_inits(_self_, _15343_pkg);
	if (_21e490040_Test) {
		{
			auto expr = &((*((*(_15343_pkg))))._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad91843b:;
			if (it != expr_end) {
				jule::Ptr<_1c63d8135_SymbolTable> _15925_file = *it;
				{
					{
						auto expr = &((*(_15925_file))._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ad918d87:;
						if (it != expr_end) {
							jule::Ptr<_1c62cebec_Fn> _16029_f = *it;
							{
								if (_1aa133b9e_hasDirective(&((*(_16029_f))._field_Directives), jule::Str("test", 4))) {
									jule::Ptr<_1c62d2b01_FnIns> _16233_ins = (*(_16029_f))._field_Instances[0LL];;
									{ jule::Slice<jule::Ptr<_1c62d2b01_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_16233_ins); };
									_1aa119019_setReferencesAsLive(_self_, &((*(_16233_ins))._field_Refers));
								};
							}
							_iter_next_1ad918d87:;
							++it;
							goto _iter_begin_1ad918d87;
						}
						_iter_end_1ad918d87:;
					};
				}
				_iter_next_1ad91843b:;
				++it;
				goto _iter_begin_1ad91843b;
			}
			_iter_end_1ad91843b:;
		};
	};
}



inline void _1aa131b03_collectLive(jule::Ptr<_1aa1279a6_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad919a47:;
		if (it != expr_end) {
			jule::Ptr<_1c63469de_ImportInfo> _17221_used = *it;
			{
				if ((!((*(_17221_used))._field_Binded))) {
					_1aa131938_collectLivePackage(_self_, &((*(_17221_used))._field_Package));
				};
			}
			_iter_next_1ad919a47:;
			++it;
			goto _iter_begin_1ad919a47;
		}
		_iter_end_1ad919a47:;
	};
	_1aa131938_collectLivePackage(_self_, &((*((*(_self_))._field_ir))._field_Main));
	jule::Ptr<_1c62cebec_Fn> _18017_main = _1c634ae99_FindFn((*((*(_self_))._field_ir))._field_Main.ptr(), jule::Str("main", 4), false);;
	jule::Ptr<_1c62d2b01_FnIns> _18117_ins = (*(_18017_main))._field_Instances[0LL];;
	{ jule::Slice<jule::Ptr<_1c62d2b01_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_18117_ins); };
	_1aa119019_setReferencesAsLive(_self_, &((*(_18117_ins))._field_Refers));
}



inline void _1aa131dab_removeDeadGlobals(jule::Ptr<_1aa1279a6_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1c6389da6_Var>>* _18642_vars) {
	jule::I64 _18717_i = 0LL;;
	while ((_18717_i < (*(_18642_vars)).len())) {
		{
			jule::Ptr<_1c6389da6_Var> _18917_v = (*(_18642_vars))[_18717_i];;
			if (_1ad909c68_isLive(_self_, &(_18917_v))) {
				(_18717_i)++;
				goto _iter_next_1ad920234;
			};
			(*(_18642_vars))=jule::append((*(_18642_vars)).slice(0LL, _18717_i),(*(_18642_vars)).slice((_18717_i + 1LL)));
		}
	_iter_next_1ad920234:;
	}
	_iter_end_1ad920234:;;
}



inline void _1aa132164_removeDeadFns(jule::Ptr<_1aa1279a6_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1c62cebec_Fn>>* _19838_funcs) {
	jule::I64 _19917_i = 0LL;;
	while ((_19917_i < (*(_19838_funcs)).len())) {
		{
			jule::Ptr<_1c62cebec_Fn> _20121_f = (*(_19838_funcs))[_19917_i];;
			jule::I64 _20221_j = 0LL;;
			while ((_20221_j < (*(_20121_f))._field_Instances.len())) {
				{
					jule::Ptr<_1c62d2b01_FnIns> _20421_ins = (*(_20121_f))._field_Instances[_20221_j];;
					if (_1ad8eac37_isLive(_self_, &(_20421_ins))) {
						(_20221_j)++;
						goto _iter_next_1ad923336;
					};
					(*(_20121_f))._field_Instances=jule::append((*(_20121_f))._field_Instances.slice(0LL, _20221_j),(*(_20121_f))._field_Instances.slice((_20221_j + 1LL)));
				}
			_iter_next_1ad923336:;
			}
			_iter_end_1ad923336:;;
			if (((*(_20121_f))._field_Instances.len() == 0LL)) {
				(*(_19838_funcs))=jule::append((*(_19838_funcs)).slice(0LL, _19917_i),(*(_19838_funcs)).slice((_19917_i + 1LL)));
				goto _iter_next_1ad922533;
			};
			(_19917_i)++;
		}
	_iter_next_1ad922533:;
	}
	_iter_end_1ad922533:;;
}



inline void _1aa13241c_removeDeadStructs(jule::Ptr<_1aa1279a6_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1c62b9d3b_Struct>>* _21942_structs) {
	jule::I64 _22017_i = 0LL;;
	while ((_22017_i < (*(_21942_structs)).len())) {
		{
			jule::Ptr<_1c62b9d3b_Struct> _22221_s = (*(_21942_structs))[_22017_i];;
			jule::I64 _22321_j = 0LL;;
			while ((_22321_j < (*(_22221_s))._field_Instances.len())) {
				{
					jule::Ptr<_1c62bcab9_StructIns> _22525_ins = (*(_22221_s))._field_Instances[_22321_j];;
					_1aa132164_removeDeadFns(_self_, &((*(_22525_ins))._field_Methods));
					if ((((*(_22525_ins))._field_Methods.len() != 0LL) || _1ad9022c1_isLive(_self_, &(_22525_ins)))) {
						(_22321_j)++;
						goto _iter_next_1ad9277e1;
					};
					(*(_22221_s))._field_Instances=jule::append((*(_22221_s))._field_Instances.slice(0LL, _22321_j),(*(_22221_s))._field_Instances.slice((_22321_j + 1LL)));
				}
			_iter_next_1ad9277e1:;
			}
			_iter_end_1ad9277e1:;;
			if (((*(_22221_s))._field_Instances.len() == 0LL)) {
				(*(_21942_structs))=jule::append((*(_21942_structs)).slice(0LL, _22017_i),(*(_21942_structs)).slice((_22017_i + 1LL)));
				goto _iter_next_1ad9269dd;
			};
			(_22017_i)++;
		}
	_iter_next_1ad9269dd:;
	}
	_iter_end_1ad9269dd:;;
}



inline void _1aa1326c5_removeDeadTraits(jule::Ptr<_1aa1279a6_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1c62e2e96_Trait>>* _24141_traits) {
	jule::I64 _24217_i = 0LL;;
	while ((_24217_i < (*(_24141_traits)).len())) {
		{
			jule::Ptr<_1c62e2e96_Trait> _24421_t = (*(_24141_traits))[_24217_i];;
			if ((!(_1ad8e51d7_isLive(_self_, &(_24421_t))))) {
				(*(_24141_traits))=jule::append((*(_24141_traits)).slice(0LL, _24217_i),(*(_24141_traits)).slice((_24217_i + 1LL)));
				goto _iter_next_1ad92ba04;
			};
			jule::I64 _24921_j = 0LL;;
			while ((_24921_j < (*(_24421_t))._field_Implemented.len())) {
				{
					jule::Ptr<_1c62b9d3b_Struct> _25121_s = (*(_24421_t))._field_Implemented[_24921_j];;
					if (((*(_25121_s))._field_Instances.len() > 0LL)) {
						(_24921_j)++;
						goto _iter_next_1ad92c384;
					};
					(*(_24421_t))._field_Implemented=jule::append((*(_24421_t))._field_Implemented.slice(0LL, _24921_j),(*(_24421_t))._field_Implemented.slice((_24921_j + 1LL)));
				}
			_iter_next_1ad92c384:;
			}
			_iter_end_1ad92c384:;;
			(_24217_i)++;
		}
	_iter_next_1ad92ba04:;
	}
	_iter_end_1ad92ba04:;;
}



inline void _1aa13297d_removeDeadsFile(jule::Ptr<_1aa1279a6_ObjectDeadCode> _self_, jule::Ptr<_1c63d8135_SymbolTable>* _26240_file) {
	_1aa132164_removeDeadFns(_self_, &((*((*(_26240_file))))._field_Funcs));
	_1aa13241c_removeDeadStructs(_self_, &((*((*(_26240_file))))._field_Structs));
	_1aa1326c5_removeDeadTraits(_self_, &((*((*(_26240_file))))._field_Traits));
	_1aa131dab_removeDeadGlobals(_self_, &((*((*(_26240_file))))._field_Vars));
}



inline void _1aa132c36_removeDeadsPackage(jule::Ptr<_1aa1279a6_ObjectDeadCode> _self_, jule::Ptr<_1c6349915_Package>* _26943_pkg) {
	{
		auto expr = &((*((*(_26943_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad9327c9:;
		if (it != expr_end) {
			jule::Ptr<_1c63d8135_SymbolTable> _27021_file = *it;
			{
				_1aa13297d_removeDeadsFile(_self_, &(_27021_file));
			}
			_iter_next_1ad9327c9:;
			++it;
			goto _iter_begin_1ad9327c9;
		}
		_iter_end_1ad9327c9:;
	};
}



inline void _1aa132e34_removeDeads(jule::Ptr<_1aa1279a6_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad933137:;
		if (it != expr_end) {
			jule::Ptr<_1c63469de_ImportInfo> _27621_used = *it;
			{
				if ((!((*(_27621_used))._field_Binded))) {
					_1aa132c36_removeDeadsPackage(_self_, &((*(_27621_used))._field_Package));
				};
			}
			_iter_next_1ad933137:;
			++it;
			goto _iter_begin_1ad933137;
		}
		_iter_end_1ad933137:;
	};
	_1aa132c36_removeDeadsPackage(_self_, &((*((*(_self_))._field_ir))._field_Main));
}



inline void _1aa133132_elimanate(jule::Ptr<_1aa1279a6_ObjectDeadCode> _self_) {
	_1aa131b03_collectLive(_self_);
	_1aa132e34_removeDeads(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1aa1279a6_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_1a9ed6249_IR__jule_tuple_s_221968cb9_Log static__1a9ed66ab_Build(jule::Str _2721_path, jule::I64 _2732_flags) {
	__jule_tuple_x_1a9ed6249_IR__jule_tuple_s_221968cb9_Log __jule_func_result;
	jule::Ptr<_1a9ed3785_JuleImporter> _2817_importer = static__1a9ed3b81_New(_1a9ed8191_buildCompileInfo());;
	jule::Slice<jule::Ptr<_1c6297379_Ast>> _2918_files;;
	jule::Slice<_221968cb9_Log> _2929_logs;;
	({
		__jule_tuple_sx_1c6297379_Ast__jule_tuple_s_221968cb9_Log __jule_assign_result = _1a9ed516b_ImportPackage(_2817_importer.ptr(), _2721_path, true);
		_2918_files = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Str _3313_root = _2721_path;;
	if ((_2918_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1c6349915_Package> _3918_pkg;;
	({
		__jule_tuple_x_1c6349915_Package__jule_tuple_s_221968cb9_Log __jule_assign_result = _1c643e6ec_AnalyzePackage(_2918_files, jule::Trait<_1c6343ac9_Importer>(_2817_importer, 0), _2732_flags);
		_3918_pkg = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1a9ed6249_IR> _4417_ir = jule::new_ptr<_1a9ed6249_IR>(_1a9ed6249_IR{._field_Root=_3313_root, ._field_Main=_3918_pkg, ._field_Used=_1a9ed3e17_AllPackages(_2817_importer.ptr()), });;
	(*(_4417_ir))._field_Passes=_1a9ed7e82_getAllUniquePasses(&((*(_4417_ir))._field_Main), (*(_4417_ir))._field_Used);
	__jule_func_result.__jule_result_arg0 = _4417_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1a9ed6b95_appendStructs(_1a9ed6249_IR* _self_, jule::Ptr<_1c6349915_Package>* _5633_p, jule::Slice<jule::Ptr<_1c62b9d3b_Struct>>* _5657_buffer) {
	{
		auto expr = &((*((*(_5633_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad8aaa2c:;
		if (it != expr_end) {
			jule::Ptr<_1c63d8135_SymbolTable> _5721_f = *it;
			{
				{
					auto expr = &((*(_5721_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad8ab445:;
					if (it != expr_end) {
						jule::Ptr<_1c62b9d3b_Struct> _5825_s = *it;
						{
							if ((!((*(_5825_s))._field_Binded))) {
								{ jule::Slice<jule::Ptr<_1c62b9d3b_Struct>> &__jule_push_dest = (*(_5657_buffer)); __jule_push_dest.push(_5825_s); };
							};
						}
						_iter_next_1ad8ab445:;
						++it;
						goto _iter_begin_1ad8ab445;
					}
					_iter_end_1ad8ab445:;
				};
			}
			_iter_next_1ad8aaa2c:;
			++it;
			goto _iter_begin_1ad8aaa2c;
		}
		_iter_end_1ad8aaa2c:;
	};
}



inline jule::Slice<jule::Ptr<_1c62b9d3b_Struct>> _1a9ed6e2b_GetAllStructures(_1a9ed6249_IR* _self_) {
	jule::Slice<jule::Ptr<_1c62b9d3b_Struct>> _6917_buffer = nullptr;;
	_1a9ed6b95_appendStructs(_self_, &((*(_self_))._field_Main), &(_6917_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad8ac457:;
		if (it != expr_end) {
			jule::Ptr<_1c63469de_ImportInfo> _7121_u = *it;
			{
				if ((!((*(_7121_u))._field_Binded))) {
					_1a9ed6b95_appendStructs(_self_, &((*(_7121_u))._field_Package), &(_6917_buffer));
				};
			}
			_iter_next_1ad8ac457:;
			++it;
			goto _iter_begin_1ad8ac457;
		}
		_iter_end_1ad8ac457:;
	};
	return _6917_buffer;;
}



inline void _1a9ed728e_appendGlobals(_1a9ed6249_IR* _self_, jule::Ptr<_1c6349915_Package>* _7933_p, jule::Slice<jule::Ptr<_1c6389da6_Var>>* _7957_buffer) {
	{
		auto expr = &((*((*(_7933_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad8add0a:;
		if (it != expr_end) {
			jule::Ptr<_1c63d8135_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &((*(_8021_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad8ae723:;
					if (it != expr_end) {
						jule::Ptr<_1c6389da6_Var> _8125_v = *it;
						{
							if (((((*(_8125_v))._field_Token != nullptr) && (!((*(_8125_v))._field_Binded))) && (!((*(_8125_v))._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_1c6389da6_Var>> &__jule_push_dest = (*(_7957_buffer)); __jule_push_dest.push(_8125_v); };
							};
						}
						_iter_next_1ad8ae723:;
						++it;
						goto _iter_begin_1ad8ae723;
					}
					_iter_end_1ad8ae723:;
				};
			}
			_iter_next_1ad8add0a:;
			++it;
			goto _iter_begin_1ad8add0a;
		}
		_iter_end_1ad8add0a:;
	};
}



inline jule::Slice<jule::Ptr<_1c6389da6_Var>> _1a9ed7525_GetAllGlobals(_1a9ed6249_IR* _self_) {
	jule::Slice<jule::Ptr<_1c6389da6_Var>> _9217_buffer = nullptr;;
	_1a9ed728e_appendGlobals(_self_, &((*(_self_))._field_Main), &(_9217_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad8aee93:;
		if (it != expr_end) {
			jule::Ptr<_1c63469de_ImportInfo> _9421_u = *it;
			{
				if ((!((*(_9421_u))._field_Binded))) {
					_1a9ed728e_appendGlobals(_self_, &((*(_9421_u))._field_Package), &(_9217_buffer));
				};
			}
			_iter_next_1ad8aee93:;
			++it;
			goto _iter_begin_1ad8aee93;
		}
		_iter_end_1ad8aee93:;
	};
	return _9217_buffer;;
}



inline void _1a9ed7723_Order(_1a9ed6249_IR* _self_) {
	(*(_self_))._field_Ordered._field_Structs=_1a9ed6e2b_GetAllStructures(_self_);
	(*(_self_))._field_Ordered._field_Globals=_1a9ed7525_GetAllGlobals(_self_);
	static__1a9ed9604_orderStructures(&((*(_self_))._field_Ordered._field_Structs));
	static__1a9ed9835_orderVars(&((*(_self_))._field_Ordered._field_Globals));
}





std::ostream &operator<<(std::ostream &_Stream, _1a9ed6249_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c62bce3d_Str(_1c62bcab9_StructIns* _self_) {
	_2206c697e_StrBuilder _23917_kind = static__2206c6c9d_New(32LL);;
	_2206d0625_WriteStr(&_23917_kind, (*((*(_self_))._field_Decl))._field_Ident);
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		_2206d08cd_WriteByte(&_23917_kind, '[');
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac509db9:;
			if (it != expr_end) {
				jule::I64 _24317_i = it - expr->begin();
				jule::Ptr<_1c641bb3b_InsGeneric> *_24320_g = it;
				{
					_2206d0625_WriteStr(&_23917_kind, _1c641d8da_Str((*((*(_24320_g))))._field_Kind.ptr()));
					if ((_24317_i < ((*(_self_))._field_Generics.len() - 1LL))) {
						_2206d08cd_WriteByte(&_23917_kind, ',');
					};
				}
				_iter_next_1ac509db9:;
				++it;
				_24317_i++;
				goto _iter_begin_1ac509db9;
			}
			_iter_end_1ac509db9:;
		};
		_2206d08cd_WriteByte(&_23917_kind, ']');
	};
	return _2206d0e1c_Str(&_23917_kind);;
}



inline jule::Bool _1c62bd27e_Equal(jule::Ptr<_1c62bcab9_StructIns> _self_, jule::Ptr<_1c641d522_TypeKind> _25521_other) {
	jule::Ptr<_1c62bcab9_StructIns> _25613_s = _1c64221e6_Struct(_25521_other.ptr());;
	if ((_25613_s == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Decl != (*(_25613_s))._field_Decl)) {
		return false;;
	};
	if (((*(_self_))._field_Generics.len() != (*(_25613_s))._field_Generics.len())) {
		return false;;
	};
	jule::I64 _26917_i = 0LL;;
	for (; (_26917_i < (*(_self_))._field_Generics.len()); (_26917_i)++) {
		{
			if ((!(_1c641dc2b_Equal((*((*(_self_))._field_Generics[_26917_i]))._field_Kind, (*((*(_25613_s))._field_Generics[_26917_i]))._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1ac50e30d:;
	}
	_iter_end_1ac50e30d:;;
	return true;;
}



inline jule::Bool _1c62bd735_Same(_1c62bcab9_StructIns* _self_, jule::Ptr<_1c62bcab9_StructIns> _28319_s) {
	if ((((*(_self_))._field_Decl != (*(_28319_s))._field_Decl) || ((*(_28319_s))._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac511178:;
		if (it != expr_end) {
			jule::I64 _28713_i = it - expr->begin();
			jule::Ptr<_1c641bb3b_InsGeneric> *_28716_g = it;
			{
				jule::Ptr<_1c641bb3b_InsGeneric> _28817_g2 = (*(_28319_s))._field_Generics[_28713_i];;
				if ((((*((*((*(_28716_g))))._field_Kind))._field_BindIdent != (*((*(_28817_g2))._field_Kind))._field_BindIdent) || (!(_1c641dc2b_Equal((*((*(_28716_g))))._field_Kind, (*(_28817_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1ac511178:;
			++it;
			_28713_i++;
			goto _iter_begin_1ac511178;
		}
		_iter_end_1ac511178:;
	};
	return true;;
}



inline jule::Ptr<_1c62cebec_Fn> _1c62bdb31_FindMethod(_1c62bcab9_StructIns* _self_, jule::Str _29829_ident, jule::Bool _29841_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5146a9:;
		if (it != expr_end) {
			jule::Ptr<_1c62cebec_Fn> _29921_f = *it;
			{
				if ((((*(_29921_f))._field_Statically == _29841_statically) && ((*(_29921_f))._field_Ident == _29829_ident))) {
					return _29921_f;;
				};
			}
			_iter_next_1ac5146a9:;
			++it;
			goto _iter_begin_1ac5146a9;
		}
		_iter_end_1ac5146a9:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c62bc019_FieldIns> _1c62bde72_FindField(_1c62bcab9_StructIns* _self_, jule::Str _30928_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5159c9:;
		if (it != expr_end) {
			jule::Ptr<_1c62bc019_FieldIns> _31021_f = *it;
			{
				if (((*((*(_31021_f))._field_Decl))._field_Ident == _30928_ident)) {
					return _31021_f;;
				};
			}
			_iter_next_1ac5159c9:;
			++it;
			goto _iter_begin_1ac5159c9;
		}
		_iter_end_1ac5159c9:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c6389da6_Var> _1c62be2b3_FindStatic(_1c62bcab9_StructIns* _self_, jule::Str _32029_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac516bea:;
		if (it != expr_end) {
			jule::Ptr<_1c6389da6_Var> _32121_v = *it;
			{
				if (((*(_32121_v))._field_Ident == _32029_ident)) {
					return _32121_v;;
				};
			}
			_iter_next_1ac516bea:;
			++it;
			goto _iter_begin_1ac516bea;
		}
		_iter_end_1ac516bea:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c62bcab9_StructIns _Src) {
	_Stream << _1c62bce3d_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_221a270ec_Cmd> static__221a2751a_New(jule::Str _2619_path) {
	return jule::new_ptr<_221a270ec_Cmd>(_221a270ec_Cmd{._field_path=_2619_path, });;
}



inline jule::VoidExceptional _221a27718_Spawn(_221a270ec_Cmd* _self_) {
	({
		auto except = _221a2b70b_spawn(_self_);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _221a27b9c_Wait(_221a270ec_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(({
		auto except = _221a2bb90_wait(_self_);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I64>(except.error);
		} 0;});
	})));;
}



inline jule::VoidExceptional _221a2b70b_spawn(_221a270ec_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess != nullptr)) {
		jule::panic(jule::Str("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_windows.jule:43:13"));;
	};
	STARTUPINFOW _4517_startupInfo = (STARTUPINFOW){};;
	PROCESS_INFORMATION _4617_processInfo = (PROCESS_INFORMATION){};;
	{
		ZeroMemory((&(_4517_startupInfo)), static_cast<jule::U64>(sizeof(_4517_startupInfo)));
		ZeroMemory((&(_4617_processInfo)), static_cast<jule::U64>(sizeof(_4617_processInfo)));
	};
	_4517_startupInfo.cb=static_cast<jule::U64>(sizeof(_4517_startupInfo));
	jule::Slice<jule::Str> _5217_args = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len()));;
	_5217_args[0LL]=(*(_self_))._field_path;
	(_5217_args).append((*(_self_))._field_Args);;
	jule::Slice<jule::U16> _5513_argv = _2204b4e76_Utf16FromStr(_221a2c311_makeCmdLine(_5217_args));;
	jule::Slice<jule::U16> _5613_env = ({
		auto except = _221a2c6da_createEnvBlock((*(_self_))._field_Env);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional(except.error);
		} jule::Slice<jule::U16>(nullptr);});
	});;
	jule::U16* _5717_envp = (&(_5613_env[0LL]));;
	if (((*(_self_))._field_Env.len() == 0LL)) {
		_5717_envp=nullptr;
	};
	;
	{
		if ((CreateProcessW(nullptr, ((wchar_t*)((&(_5513_argv[0LL])))), nullptr, nullptr, 0LL, 1024LLU, _5717_envp, nullptr, (&(_4517_startupInfo)), (&(_4617_processInfo))) == 0LL)) {
			return jule::VoidExceptional(jule::Any(_221a2d93e_getLastProcessError(), &__jule_any_type0));
		};
	};
	(*(_self_))._field_attrs._field_hProcess=_4617_processInfo.hProcess;
	(*(_self_))._field_attrs._field_hThread=_4617_processInfo.hThread;
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _221a2bb90_wait(_221a270ec_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess == nullptr)) {
		jule::panic(jule::Str("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_windows.jule:86:13"));;
	};
	{
		WaitForSingleObject((*(_self_))._field_attrs._field_hProcess, INFINITE);
	};
	__jule_unsigned_long _8917_exitCode = static_cast<__jule_unsigned_long>(4294967295LLU);;
	{
		GetExitCodeProcess((*(_self_))._field_attrs._field_hProcess, (&(_8917_exitCode)));
		_2204de456_CloseHandle(static_cast<jule::Uintptr>(((jule::Uintptr)((*(_self_))._field_attrs._field_hProcess))));
		_2204de456_CloseHandle(static_cast<jule::Uintptr>(((jule::Uintptr)((*(_self_))._field_attrs._field_hThread))));
	};
	(*(_self_))._field_attrs._field_hProcess=nullptr;
	(*(_self_))._field_attrs._field_hThread=nullptr;
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(static_cast<jule::I64>(_8917_exitCode)));;
}





std::ostream &operator<<(std::ostream &_Stream, _221a270ec_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "attrs:" << _Src._field_attrs << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}



inline jule::I32 _2204b400d_DecodeRune(jule::I32 _6815_r1, jule::I32 _6825_r2) {
	if (((((55296LL <= _6815_r1) && (_6815_r1 < 56320LL)) && (56320LL <= _6825_r2)) && (_6825_r2 < 57344LL))) {
		return static_cast<jule::I32>(((((_6815_r1 - 55296LL) << 10LL) | (_6825_r2 - 56320LL)) + 65536LL));;
	};
	return 65533LL;;
}



inline __jule_tuple_i32__jule_tuple_i32 _2204b42c7_EncodeRune(jule::I32 _7819_r) {
	__jule_tuple_i32__jule_tuple_i32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((_7819_r < 65536LL) || (_7819_r > 1114111LL))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 65533LL;
		return __jule_func_result;;
	};
	_7819_r-=65536LL;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((55296LL + ((_7819_r >> 10LL) & 1023LL)));
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>((56320LL + (_7819_r & 1023LL)));
	return __jule_func_result;;
}



inline jule::Slice<jule::U16> _2204b4618_Encode(jule::Slice<jule::I32> _8711_s) {
	jule::I64 _8813_n = _8711_s.len();;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aab50544:;
		if (it != expr_end) {
			jule::I32 *_8912_v = it;
			{
				if (((*(_8912_v)) >= 65536LL)) {
					(_8813_n)++;
				};
			}
			_iter_next_1aab50544:;
			++it;
			goto _iter_begin_1aab50544;
		}
		_iter_end_1aab50544:;
	};
	jule::Slice<jule::U16> _9513_a = jule::Slice<jule::U16>::alloc(_8813_n, _8813_n, 0);;
	_8813_n=0LL;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aab51b94:;
		if (it != expr_end) {
			jule::I32 *_9712_v = it;
			{
				{
					
					if (((0LL <= (*(_9712_v))) && ((*(_9712_v)) < 55296LL)) || ((57344LL <= (*(_9712_v))) && ((*(_9712_v)) < 65536LL))) {
						_case_begin_1aab529db:;
						{
							_9513_a[_8813_n]=static_cast<jule::U16>(static_cast<jule::U16>((*(_9712_v))));
							(_8813_n)++;
						}
					}
					else if (((65536LL <= (*(_9712_v))) && ((*(_9712_v)) <= 1114111LL))) {
						_case_begin_1aab528ed:;
						{
							jule::I32 _10518_r1 = 0;;
							jule::I32 _10522_r2 = 0;;
							({
								__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _2204b42c7_EncodeRune((*(_9712_v)));
								_10518_r1 = __jule_assign_result.__jule_result_arg0;
								_10522_r2 = __jule_assign_result.__jule_result_arg1;
							});
							_9513_a[_8813_n]=static_cast<jule::U16>(static_cast<jule::U16>(_10518_r1));
							_9513_a[(_8813_n + 1LL)]=static_cast<jule::U16>(static_cast<jule::U16>(_10522_r2));
							_8813_n+=2LL;
						}
					}
					else {
						_case_begin_1aab52557:;
						{
							_9513_a[_8813_n]=static_cast<jule::U16>(65533LLU);
							(_8813_n)++;
						}
					}
					_match_end_1aab5248b:;
				};
			}
			_iter_next_1aab51b94:;
			++it;
			goto _iter_begin_1aab51b94;
		}
		_iter_end_1aab51b94:;
	};
	return _9513_a.slice(0LL, _8813_n);;
}



inline jule::Slice<jule::I32> _2204b48d2_Decode(jule::Slice<jule::U16> _11911_s) {
	jule::Slice<jule::I32> _12013_a = jule::Slice<jule::I32>::alloc(_11911_s.len(), _11911_s.len(), 0);;
	jule::I64 _12113_n = 0LL;;
	jule::I64 _12213_i = 0LL;;
	for (; (_12213_i < _11911_s.len()); (_12213_i)++) {
		{
			jule::U16 _12413_r = _11911_s[_12213_i];;
			{
				
				if ((_12413_r < 55296LLU) || (57344LL <= _12413_r)) {
					_case_begin_1aab570c8:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(static_cast<jule::I32>(_12413_r));
					}
				}
				else if (((((_12413_r < 56320LLU) && ((_12213_i + 1LL) < _11911_s.len())) && (56320LL <= _11911_s[(_12213_i + 1LL)])) && (_11911_s[(_12213_i + 1LL)] < 57344LLU))) {
					_case_begin_1aab56d53:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(_2204b400d_DecodeRune(static_cast<jule::I32>(static_cast<jule::I32>(_12413_r)), static_cast<jule::I32>(static_cast<jule::I32>(_11911_s[(_12213_i + 1LL)]))));
						(_12213_i)++;
					}
				}
				else {
					_case_begin_1aab569ac:;
					{
						_12013_a[_12113_n]=65533LL;
					}
				}
				_match_end_1aab56946:;
			};
			(_12113_n)++;
		}
	_iter_next_1aab555c1:;
	}
	_iter_end_1aab555c1:;;
	return _12013_a.slice(0LL, _12113_n);;
}



inline jule::Slice<jule::U16> _2204b4c23_AppendRune(jule::Slice<jule::U16> _14919_a, jule::I32 _14929_r) {
	{
		
		if (((0LL <= _14929_r) && (_14929_r < 55296LL)) || ((57344LL <= _14929_r) && (_14929_r < 65536LL))) {
			_case_begin_1aab59b69:;
			{
				return jule::append(_14919_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(static_cast<jule::U16>(_14929_r))}));;
			}
		}
		else if (((65536LL <= _14929_r) && (_14929_r <= 1114111LL))) {
			_case_begin_1aab59be1:;
			{
				jule::I32 _15614_r1 = 0;;
				jule::I32 _15618_r2 = 0;;
				({
					__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _2204b42c7_EncodeRune(_14929_r);
					_15614_r1 = __jule_assign_result.__jule_result_arg0;
					_15618_r2 = __jule_assign_result.__jule_result_arg1;
				});
				return jule::append(_14919_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(static_cast<jule::U16>(_15614_r1)),static_cast<jule::U16>(static_cast<jule::U16>(_15618_r2))}));;
			}
		}
		_match_end_1aab59a6a:;
	};
	return jule::append(_14919_a,jule::Slice<jule::U16>::make({65533LLU}));;
}



inline jule::Slice<jule::U16> _2204b4e76_Utf16FromStr(jule::Str _1417_s) {
	;
	jule::Slice<jule::I32> _209_runes = static_cast<jule::Slice<jule::I32>>(_1417_s);;
	jule::Slice<jule::U16> _2113_buff = jule::Slice<jule::U16>::alloc(0LL, _209_runes.len(), 0);;
	{
		auto expr = &(_209_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aab652b2:;
		if (it != expr_end) {
			jule::I32 *_2212_r = it;
			{
				if (((*(_2212_r)) == 0LL)) {
					goto _iter_end_1aab652b2;
				};
				_2113_buff=_2204b4c23_AppendRune(_2113_buff, (*(_2212_r)));
			}
			_iter_next_1aab652b2:;
			++it;
			goto _iter_begin_1aab652b2;
		}
		_iter_end_1aab652b2:;
	};
	return _2204b4c23_AppendRune(_2113_buff, 0LL);;
}



inline jule::Str _2204b5284_Utf16ToStr(jule::Slice<jule::U16> _3415_s) {
	if ((_3415_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _3813_codePage = _3415_s;;
	{
		auto expr = &(_3415_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aab67924:;
		if (it != expr_end) {
			jule::I64 _399_i = it - expr->begin();
			jule::U16 *_3912_v = it;
			{
				if (((*(_3912_v)) == 0LLU)) {
					(_3813_codePage).mut_slice(0LL, _399_i);;
					goto _iter_end_1aab67924;
				};
			}
			_iter_next_1aab67924:;
			++it;
			_399_i++;
			goto _iter_begin_1aab67924;
		}
		_iter_end_1aab67924:;
	};
	return static_cast<jule::Str>(_2204b48d2_Decode(_3813_codePage));;
}



inline jule::Str _2204b554d_U16PtrToStr(jule::U16* _5023_s) {
	if ((_5023_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _5513_codePage = nullptr;;
	jule::I64 _5613_i = 0LL;;
	for (; ; (_5613_i)++) {
		{
			jule::U16 _5813_r = _5023_s[_5613_i];;
			if ((_5813_r == 0LLU)) {
				return static_cast<jule::Str>(_2204b48d2_Decode(_5513_codePage));;
			};
			{ jule::Slice<jule::U16> &__jule_push_dest = _5513_codePage; __jule_push_dest.push(_5813_r); };
		}
	_iter_next_1aab68a02:;
	}
	_iter_end_1aab68a02:;;
	return jule::Str();;
}



inline jule::I64 _21e490d54_GetLastErrno(void) {
	return errno;;
}



inline jule::Uintptr _2204de18c_GetStdHandle(jule::Uintptr _6417_stdh) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(GetStdHandle(_6417_stdh))));;
}



inline jule::Bool _2204de456_CloseHandle(jule::Uintptr _6523_stdh) {
	return CloseHandle(((void*)(_6523_stdh)));;
}



inline jule::I64 _2204de7ca_Wstat(jule::U16* _6817_path, struct _stat* _6833_stat) {
	return static_cast<jule::I64>(_wstat(((wchar_t*)(_6817_path)), _6833_stat));;
}



inline jule::I64 _2204dec09_Wopen(jule::U16* _7317_path, jule::I64 _7329_flag, jule::I64 _7340_mode) {
	return static_cast<jule::I64>(_wopen(((wchar_t*)((&(_7317_path[0LL])))), _7329_flag, _7340_mode));;
}



inline jule::U32 _2204dee18_GetLastError(void) {
	return static_cast<jule::U32>(GetLastError());;
}



inline jule::U32 _2204e028c_GetCurrentDirectory(jule::U32 _8231_bufflen, jule::U16* _8249_buff) {
	return static_cast<jule::U32>(GetCurrentDirectoryW(_8231_bufflen, ((wchar_t*)(_8249_buff))));;
}



inline jule::Bool _2204e0820_DeleteFile(jule::U16* _9322_path) {
	return DeleteFileW(((wchar_t*)(_9322_path)));;
}



inline jule::Bool _2204e0ad9_CreateDirectory(jule::U16* _9827_path) {
	return CreateDirectoryW(((wchar_t*)(_9827_path)), nullptr);;
}



inline jule::Bool _2204e0da3_RemoveDirectory(jule::U16* _10327_path) {
	return RemoveDirectoryW(((wchar_t*)(_10327_path)));;
}



inline jule::U32 _2204e138c_GetFullPathName(jule::U16* _10827_path, jule::U32 _10839_bufflen, jule::U16* _1095_buff, jule::U16** _10917_fname) {
	return static_cast<jule::U32>(GetFullPathNameW(((wchar_t*)(_10827_path)), _10839_bufflen, ((wchar_t*)(_1095_buff)), ((wchar_t**)(_10917_fname))));;
}



inline jule::Bool _2204e1711_GetConsoleMode(jule::Uintptr _11419_handle, jule::I64* _11440_mode) {
	return GetConsoleMode(((HANDLE)(_11419_handle)), ((DWORD*)(_11440_mode)));;
}



inline jule::Bool _2204e1cd8_SetConsoleMode(jule::Uintptr _11919_handle, jule::I64 _11935_mode) {
	return SetConsoleMode(((HANDLE)(_11919_handle)), static_cast<DWORD>(_11935_mode));;
}



inline jule::Bool _2204e236b_WriteConsole(jule::Uintptr _12424_handle, jule::U16* _12440_buffer, jule::I64 _12454_toWrite, jule::I64* _12510_written, void* _12524_reserved) {
	return WriteConsoleW(((HANDLE)(_12424_handle)), ((void*)(_12440_buffer)), static_cast<DWORD>(_12454_toWrite), ((DWORD*)((*(_12510_written)))), _12524_reserved);;
}



inline jule::Bool _2204e2855_ReadConsole(jule::Uintptr _13223_handle, jule::U16* _13243_buffer, jule::I64 _13257_toRead, jule::I64* _13310_readed) {
	return ReadConsoleW(((HANDLE)(_13223_handle)), ((void*)(_13243_buffer)), static_cast<DWORD>(_13257_toRead), ((DWORD*)(_13310_readed)), nullptr);;
}



inline jule::Uintptr _2204e2dd8_FindFirstFile(jule::U16* _14425_path, WIN32_FIND_DATAW* _14441_data) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(FindFirstFileW(((wchar_t*)(_14425_path)), _14441_data))));;
}



inline jule::I64 _2204e325c_FindNextFile(jule::Uintptr _14924_h, WIN32_FIND_DATAW* _14939_data) {
	return static_cast<jule::I64>(FindNextFileW(((HANDLE)(_14924_h)), _14939_data));;
}



inline jule::I64 _2204e3526_FindClose(jule::Uintptr _15414_h) {
	return static_cast<jule::I64>(FindClose(((HANDLE)(_15414_h))));;
}



inline jule::I64 _2204e5638_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n) {
	return static_cast<jule::I64>(read(_2016_handle, _2033_buff, _2048_n));;
}



inline jule::I64 _2204e59ce_Close(jule::I64 _2510_handle) {
	return static_cast<jule::I64>(close(_2510_handle));;
}



inline jule::I64 _2204e5e0d_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n) {
	return static_cast<jule::I64>(write(_2817_handle, _2830_buff, _2845_n));;
}



inline void _2204e613e_Exit(jule::I64 _339_code) {
	exit(_339_code);
}



inline jule::Slice<jule::U8> _22050c4b8_Stobs(jule::Str* _911_s) {
	return (*(_911_s)).fake_slice();;
}



inline __jule_tuple_i32__jule_tuple_int _22061dc39_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1869_p0 = _18215_p[0LL];;
	jule::U8 _1879_x = _22061ca90_first[static_cast<jule::I64>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_18215_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _1959_sz = static_cast<jule::I64>((_1879_x & 7LLU));;
	_22061d123_acceptRange _1969_accept = _22061d431_acceptRanges[static_cast<jule::I64>((_1879_x >> 4LLU))];;
	if ((_18215_p.len() < _1959_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2009_b1 = _18215_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2079_b2 = _18215_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2149_b3 = _18215_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _22061e344_DecodeLastRune(jule::Slice<jule::U8> _27619_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_27619_p.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I64 _2809_end = _27619_p.len();;
	jule::I64 _28113_start = (_2809_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(static_cast<jule::I32>(_27619_p[_28113_start]));
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_220620d6d_RuneStart(_27619_p[_28113_start])) {
				goto _iter_end_1aac0c304;
			};
		}
	_iter_next_1aac0c304:;
	}
	_iter_end_1aac0c304:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22061dc39_DecodeRune(_27619_p.slice(_28113_start, _2809_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_28113_start + __jule_func_result.__jule_result_arg1) != _2809_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::I64 _22061e8c7_RuneLen(jule::I32 _35212_r) {
	{
		
		if ((_35212_r < 0LL)) {
			_case_begin_1aac137e4:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 127LL)) {
			_case_begin_1aac1386b:;
			{
				return 1LL;;
			}
		}
		else if ((_35212_r <= 2047LL)) {
			_case_begin_1aac138e3:;
			{
				return 2LL;;
			}
		}
		else if (((55296LL <= _35212_r) && (_35212_r <= 57343LL))) {
			_case_begin_1aac1396a:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 65535LL)) {
			_case_begin_1aac13bbd:;
			{
				return 3LL;;
			}
		}
		else if ((_35212_r <= 1114111LL)) {
			_case_begin_1aac13c45:;
			{
				return 4LL;;
			}
		}
		else {
			_case_begin_1aac1376c:;
			{
				return -1LL;;
			}
		}
		_match_end_1aac136c3:;
	};
}



inline jule::I64 _22061ed28_EncodeRune(jule::Slice<jule::U8> _37419_p, jule::I32 _37434_r) {
	jule::U32 _3769_i = static_cast<jule::U32>(_37434_r);;
	{
		
		if ((_3769_i <= 127LLU)) {
			_case_begin_1aac1dada:;
			{
				_37419_p[0LL]=static_cast<jule::U8>(static_cast<jule::U8>(_37434_r));
				return 1LL;;
			}
		}
		else if ((_3769_i <= 2047LLU)) {
			_case_begin_1aac16770:;
			{
				_37419_p[0LL]=static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_37434_r >> 6LL))));
				_37419_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU)));
				return 2LL;;
			}
		}
		else if ((_3769_i > 1114111LLU) || ((55296LL <= _3769_i) && (_3769_i <= 57343LLU))) {
			_case_begin_1aac1d931:;
			{
				_37434_r=65533LL;
				goto _case_begin_1aac1d997;
			}
		}
		else if ((_3769_i <= 65535LLU)) {
			_case_begin_1aac1d997:;
			{
				_37419_p[0LL]=static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_37434_r >> 12LL))));
				_37419_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU)));
				_37419_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU)));
				return 3LL;;
			}
		}
		else {
			_case_begin_1aac163c9:;
			{
				_37419_p[0LL]=static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_37434_r >> 18LL))));
				_37419_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37434_r >> 12LL)) & 63LLU)));
				_37419_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU)));
				_37419_p[3LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU)));
				return 4LL;;
			}
		}
		_match_end_1aac16363:;
	};
}



inline jule::Slice<jule::U8> _22062019c_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40530_r))}));;
	};
	return _220620521_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _220620521_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_1aac26384:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_1aac266a3:;
			{
				_41242_r=128LL;
				goto _case_begin_1aac2431b;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_1aac2431b:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else {
			_case_begin_1aac242a5:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		_match_end_1aac2423e:;
	};
}



inline jule::I64 _220620aa4_RuneCountStr(jule::Str _47317_s) {
	jule::I64 __jule_func_result = 0;
	jule::I64 _47413_i = 0LL;;
	for (; (_47413_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _47617_c = _47317_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_1aac3038d;
			};
			jule::U8 _48213_x = _22061ca90_first[static_cast<jule::I64>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_1aac3038d;
			};
			jule::I64 _48717_size = static_cast<jule::I64>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47317_s.len())) {
				(_47413_i)++;
				goto _iter_next_1aac3038d;
			};
			_22061d123_acceptRange _49213_accept = _22061d431_acceptRanges[static_cast<jule::I64>((_48213_x >> 4LLU))];;
			_47617_c=_47317_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47317_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47317_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_1aac3038d:;
	}
	_iter_end_1aac3038d:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _220620d6d_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I64 _22070c399_getLastOsErrorWindows(void) {
	jule::U32 _169_err = _2204dee18_GetLastError();;
	{
		auto &_match_expr{ _169_err };
		
		if (_match_expr == 5LL) {
			_case_begin_1aac59c14:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1aac5b8d6:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1aac5b94c:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 123LL) {
			_case_begin_1aac5b9b3:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else {
			_case_begin_1aac59d57:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		_match_end_1aac59d02:;
	};
}



inline jule::Slice<jule::Str> _22070d433_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _22070d8c8_WorkingDir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(), ({
		auto except = _22070e80d_getwd();
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));;
}



inline jule::Exceptional<jule::Str> _22070e80d_getwd(void) {
	jule::Array<jule::U16,261> _1513_buff = jule::Array<jule::U16,261>();;
	jule::U32 _169_n = _2204e028c_GetCurrentDirectory(261LLU, (&(_1513_buff[0LL])));;
	if ((_169_n == 0LLU)) {
		return jule::Exceptional<jule::Str>(jule::Any(_22070c399_getLastOsErrorWindows(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::Str>(jule::Any(), _2204b554d_U16PtrToStr((&(_1513_buff[0LL]))));;
}



inline jule::Bool _221810a84_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_221875a2d__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _22187e130_isExcludingLatin(_221819ce1_Letter, _7613_r);;
}



inline jule::Bool _22187d4a3_is16(jule::Slice<_22187b715_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab8c9c6d:;
			if (it != expr_end) {
				jule::I64 _19313_i = it - expr->begin();
				{
					_22187b715_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < (*(_19417_range))._field_Lo)) {
							return false;;
						};
						if ((_19128_r <= (*(_19417_range))._field_Hi)) {
							return (((*(_19417_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_19417_range))._field_Lo),(*(_19417_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1ab8c9c6d:;
				++it;
				_19313_i++;
				goto _iter_begin_1ab8c9c6d;
			}
			_iter_end_1ab8c9c6d:;
		};
		return false;;
	};
	jule::I64 _20813_lo = 0LL;;
	jule::I64 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I64 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_22187b715_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if ((((*(_21213_range))._field_Lo <= _19128_r) && (_19128_r <= (*(_21213_range))._field_Hi))) {
					return (((*(_21213_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_21213_range))._field_Lo),(*(_21213_range))._field_Stride) == 0LLU));;
				};
				if ((_19128_r < (*(_21213_range))._field_Lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I64>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_1ab8c8a08:;
	}
	_iter_end_1ab8c8a08:;;
	return false;;
}



inline jule::Bool _22187d827_is32(jule::Slice<_22187bc43_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab8cccc6:;
			if (it != expr_end) {
				jule::I64 _23013_i = it - expr->begin();
				{
					_22187bc43_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < (*(_23117_range))._field_Lo)) {
							return false;;
						};
						if ((_22828_r <= (*(_23117_range))._field_Hi)) {
							return (((*(_23117_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_23117_range))._field_Lo),(*(_23117_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1ab8cccc6:;
				++it;
				_23013_i++;
				goto _iter_begin_1ab8cccc6;
			}
			_iter_end_1ab8cccc6:;
		};
		return false;;
	};
	jule::I64 _24513_lo = 0LL;;
	jule::I64 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I64 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_22187bc43_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if ((((*(_24913_range))._field_Lo <= _22828_r) && (_22828_r <= (*(_24913_range))._field_Hi))) {
					return (((*(_24913_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_24913_range))._field_Lo),(*(_24913_range))._field_Stride) == 0LLU));;
				};
				if ((_22828_r < (*(_24913_range))._field_Lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I64>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_1ab8ccb83:;
	}
	_iter_end_1ab8ccb83:;;
	return false;;
}



inline jule::Bool _22187e130_isExcludingLatin(jule::Ptr<_22187c1e9_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_22187b715_Range16> *_28014_R16 = &((*(_27821_rangeTab))._field_R16);;
		jule::I64 _28213_off = (*(_27821_rangeTab))._field_LatinOffset;;
		if ((((*(_28014_R16)).len() > _28213_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_28014_R16))[((*(_28014_R16)).len() - 1LL)]._field_Hi)))) {
			return _22187d4a3_is16((*(_28014_R16)).slice(_28213_off), static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));;
		};
	};
	jule::Slice<_22187bc43_Range32> *_28710_R32 = &((*(_27821_rangeTab))._field_R32);;
	if ((((*(_28710_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_28710_R32))[0LL]._field_Lo)))) {
		return _22187d827_is32((*(_28710_R32)), static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));;
	};
	return false;;
}



inline jule::Bool _22187e3e9_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_221875a2d__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _22187e130_isExcludingLatin(_221821347_Upper, _29512_r);;
}



inline jule::I64 _2218a9402_FindByte(jule::Slice<jule::U8> _3713_s, jule::U8 _3724_b) {
	{
		auto expr = &(_3713_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8e45d4:;
		if (it != expr_end) {
			jule::I64 _399_i = it - expr->begin();
			jule::U8 *_3912_se = it;
			{
				if (((*(_3912_se)) == _3724_b)) {
					return _399_i;;
				};
			}
			_iter_next_1ab8e45d4:;
			++it;
			_399_i++;
			goto _iter_begin_1ab8e45d4;
		}
		_iter_end_1ab8e45d4:;
	};
	return -1LL;;
}



inline jule::I64 _2218bb8a9_FindLastByte(jule::Slice<jule::U8> _5017_s, jule::U8 _5028_b) {
	if ((_5017_s.len() == 0LL)) {
		return -1LL;;
	};
	jule::U8* _549_first = (&(_5017_s[0LL]));;
	jule::U8* _5513_it = (&(_5017_s[(_5017_s.len() - 1LL)]));;
	for (; (_5513_it >= _549_first); (_5513_it)--) {
		{
			{
				if (((*(_5513_it)) == _5028_b)) {
					return static_cast<jule::I64>(((jule::I64)((_5513_it - _549_first))));;
				};
			};
		}
	_iter_next_1ab8e6053:;
	}
	_iter_end_1ab8e6053:;;
	return -1LL;;
}



inline jule::I64 _2218bbc61_FindByteStr(jule::Str* _6717_s, jule::U8 _6725_b) {
	return static_cast<jule::I64>(_2218a9402_FindByte(_22050c4b8_Stobs(_6717_s), _6725_b));;
}



inline jule::I64 _2218bc0d5_FindLastByteStr(jule::Str* _7221_s, jule::U8 _7229_b) {
	return static_cast<jule::I64>(_2218bb8a9_FindLastByte(_22050c4b8_Stobs(_7221_s), _7229_b));;
}



inline jule::Str _2218bc547_Repeat(jule::Str _1211_s, jule::I64 _1223_n) {
	if ((_1223_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1211_s.len() > jule::div(jule::MAX_I64,_1223_n))) {
		jule::panic(jule::Str("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:17:9"));;
	};
	_2206c697e_StrBuilder _2013_ss = static__2206c6c9d_New(static_cast<jule::I64>((_1211_s.len() * _1223_n)));;
	for (; (_1223_n > 0LL); (_1223_n)--) {
		{
			_2206d0625_WriteStr(&_2013_ss, _1211_s);
		}
	_iter_next_1ab90a573:;
	}
	_iter_end_1ab90a573:;;
	return _2206d0e1c_Str(&_2013_ss);;
}



inline jule::Bool _2218bc9ba_hasPrefix(jule::Str* _2715_s, jule::Str* _2724_sub, jule::I64 _2738_start) {
	if ((((*(_2724_sub)).len() == 0LL) || (((*(_2715_s)).len() - _2738_start) < (*(_2724_sub)).len()))) {
		return false;;
	};
	jule::I64 _3213_i = 0LL;;
	for (; (_3213_i < (*(_2724_sub)).len()); ({
		jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_3213_i + 1LL));
		jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_2738_start + 1LL));
		_3213_i = ___jule_assign_arg;
		_2738_start = _1___jule_assign_arg;
	})) {
		{
			if (((*(_2715_s))[_2738_start] != (*(_2724_sub))[_3213_i])) {
				return false;;
			};
		}
	_iter_next_1ab90d422:;
	}
	_iter_end_1ab90d422:;;
	return true;;
}



inline jule::Bool _2218bcd3e_HasPrefix(jule::Str _4214_s, jule::Str _4222_sub) {
	return _2218bc9ba_hasPrefix(&(_4214_s), &(_4222_sub), 0LL);;
}



inline jule::Bool _2218bd2e5_hasSuffix(jule::Str* _4615_s, jule::Str* _4624_sub, jule::I64 _4638_start) {
	if ((((*(_4624_sub)).len() == 0LL) || (((*(_4615_s)).len() - _4638_start) < (*(_4624_sub)).len()))) {
		return false;;
	};
	_4638_start=static_cast<jule::I64>(((*(_4615_s)).len() - _4638_start));
	jule::I64 _5213_i = 0LL;;
	for (; (_5213_i < (*(_4624_sub)).len()); (_5213_i)++) {
		{
			if (((*(_4615_s))[((_4638_start - _5213_i) - 1LL)] != (*(_4624_sub))[(((*(_4624_sub)).len() - _5213_i) - 1LL)])) {
				return false;;
			};
		}
	_iter_next_1ab91026a:;
	}
	_iter_end_1ab91026a:;;
	return true;;
}



inline jule::Bool _2218bd636_HasSuffix(jule::Str _6214_s, jule::Str _6222_sub) {
	return _2218bd2e5_hasSuffix(&(_6214_s), &(_6222_sub), 0LL);;
}



inline jule::I64 _2218bda65_FindAt(jule::Str _7011_s, jule::Str _7019_sub, jule::I64 _7033_i) {
	if ((((_7033_i < 0LL) || (_7011_s.len() < _7019_sub.len())) || (_7019_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_7033_i < _7011_s.len()); (_7033_i)++) {
		{
			if (_2218bc9ba_hasPrefix(&(_7011_s), &(_7019_sub), _7033_i)) {
				return _7033_i;;
			};
		}
	_iter_next_1ab91314c:;
	}
	_iter_end_1ab91314c:;;
	return -1LL;;
}



inline jule::I64 _2218be428_FindLastAt(jule::Str _9315_s, jule::Str _9323_sub, jule::I64 _9333_i) {
	jule::I64 _9413_j = ((_9333_i - _9323_sub.len()) + 1LL);;
	if (((((_9323_sub.len() == 0LL) || (_9333_i < 0LL)) || (_9333_i >= _9315_s.len())) || (_9413_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_1ab91646e:;
	for (; (_9413_j >= 0LL); (_9413_j)--) {
		{
			jule::I64 _10017_k = _9413_j;;
			jule::I64 _10117_z = 0LL;;
			for (; (_10117_z < _9323_sub.len()); ({
				jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_10017_k + 1LL));
				jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_10117_z + 1LL));
				_10017_k = ___jule_assign_arg;
				_10117_z = _1___jule_assign_arg;
			})) {
				{
					if ((_9315_s[_10017_k] != _9323_sub[_10117_z])) {
						goto _iter_next_1ab9160ea;
					};
				}
			_iter_next_1ab917261:;
			}
			_iter_end_1ab917261:;;
			return _9413_j;;
		}
	_iter_next_1ab9160ea:;
	}
	_iter_end_1ab9160ea:;;
	return -1LL;;
}



inline jule::I64 _2218be79c_FindLast(jule::Str _11513_s, jule::Str _11521_sub) {
	return static_cast<jule::I64>(_2218be428_FindLastAt(_11513_s, _11521_sub, static_cast<jule::I64>((_11513_s.len() - 1LL))));;
}



inline jule::I64 _2218c0b77_findRune(jule::Slice<jule::U8>* _17114_s, jule::I32 _17125_r) {
	jule::I64 _17213_i = 0LL;;
	while ((_17213_i < (*(_17114_s)).len())) {
		{
			jule::I32 _17414_br = 0;;
			jule::I64 _17418_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22061dc39_DecodeRune((*(_17114_s)).slice(_17213_i));
				_17414_br = __jule_assign_result.__jule_result_arg0;
				_17418_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_17125_r == _17414_br)) {
				return _17213_i;;
			};
			_17213_i+=_17418_n;
		}
	_iter_next_1ab91e884:;
	}
	_iter_end_1ab91e884:;;
	return -1LL;;
}



inline jule::I64 _2218c1529_FindLastByte(jule::Str _19317_s, jule::U8 _19325_b) {
	return static_cast<jule::I64>(_2218bc0d5_FindLastByteStr(&(_19317_s), _19325_b));;
}



inline jule::I64 _2218c241a_FindAny(jule::Str _22812_s, jule::Str _22820_runes) {
	jule::Slice<jule::U8> _2299_sb = _22050c4b8_Stobs(&(_22812_s));;
	jule::Slice<jule::U8> _23013_rb = _22050c4b8_Stobs(&(_22820_runes));;
	jule::I64 _23113_i = 0LL;;
	while ((_23113_i < _2299_sb.len())) {
		{
			jule::I32 _23314_r = 0;;
			jule::I64 _23317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22061dc39_DecodeRune(_2299_sb.slice(_23113_i));
				_23314_r = __jule_assign_result.__jule_result_arg0;
				_23317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_2218c0b77_findRune(&(_23013_rb), _23314_r) != -1LL)) {
				return _23113_i;;
			};
			_23113_i+=_23317_n;
		}
	_iter_next_1ab924bca:;
	}
	_iter_end_1ab924bca:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _2218c2bbd_Split(jule::Str _26210_s, jule::Str _26218_sub, jule::I64 _26232_n) {
	jule::I64 _26313_cap = _26232_n;;
	if ((_26232_n < 0LL)) {
		_26313_cap=16LLU;
	};
	jule::Slice<jule::Str> _26713_parts = jule::Slice<jule::Str>::alloc(0LL, _26313_cap);;
	if ((_26232_n == 0LL)) {
		return _26713_parts;;
	};
	if ((_26232_n < 0LL)) {
		_26232_n=static_cast<jule::I64>(_26210_s.len());
	};
	jule::I64 _27413_i = 0LL;;
	for (; (_26232_n > 0LL); (_26232_n)--) {
		{
			jule::I64 _27613_j = _2218bda65_FindAt(_26210_s, _26218_sub, _27413_i);;
			if ((_27613_j == -1LL)) {
				goto _iter_end_1ab92ae56;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _26713_parts; __jule_push_dest.push(_26210_s.slice(_27413_i, _27613_j)); };
			_27413_i=static_cast<jule::I64>((_27613_j + _26218_sub.len()));
		}
	_iter_next_1ab92ae56:;
	}
	_iter_end_1ab92ae56:;;
	if (((_26232_n > 0LL) && (_27413_i < _26210_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _26713_parts; __jule_push_dest.push(_26210_s.slice(_27413_i)); };
	};
	return _26713_parts;;
}



inline jule::Bool _2218c3042_Contains(jule::Str _29013_s, jule::Str _29021_sub) {
	return (_2218bda65_FindAt(_29013_s, _29021_sub, 0LL) != -1LL);;
}



inline jule::Bool _2218c3aae_ContainsAny(jule::Str _30616_s, jule::Str _30624_runes) {
	return (_2218c241a_FindAny(_30616_s, _30624_runes) != -1LL);;
}



inline jule::I64 _2218c3e33_Count(jule::Str _31210_s, jule::Str _31218_sub) {
	if ((_31218_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _31613_n = 0LL;;
	jule::I64 _31713_i = 0LL;;
	for (;;) {
		{
			jule::I64 _31913_j = _2218bda65_FindAt(_31210_s, _31218_sub, _31713_i);;
			if ((_31913_j == -1LL)) {
				goto _iter_end_1ab93117b;
			};
			(_31613_n)++;
			_31713_i=static_cast<jule::I64>((_31913_j + _31218_sub.len()));
		}
	_iter_next_1ab93117b:;
	}
	_iter_end_1ab93117b:;;
	return _31613_n;;
}



inline jule::Str _2218c441c_Replace(jule::Str _33212_s, jule::Str _33220_sub, jule::Str _33230_new, jule::I64 _33244_n) {
	if (((_33244_n == 0LL) || (_33220_sub == _33230_new))) {
		return _33212_s;;
	};
	jule::I64 _3379_m = _2218c3e33_Count(_33212_s, _33220_sub);;
	if ((_3379_m == 0LL)) {
		return _33212_s;;
	};
	if (((_33244_n < 0LL) || (_3379_m < _33244_n))) {
		_33244_n=_3379_m;
	};
	_2206c697e_StrBuilder _34513_ss = static__2206c6c9d_New(static_cast<jule::I64>((_33212_s.len() + (_33244_n * (_33230_new.len() - _33220_sub.len())))));;
	jule::I64 _34613_i = 0LL;;
	for (; (_33244_n > 0LL); (_33244_n)--) {
		{
			jule::I64 _34813_j = _2218bda65_FindAt(_33212_s, _33220_sub, _34613_i);;
			if ((_34813_j == -1LL)) {
				goto _iter_end_1ab934aec;
			};
			_2206d0625_WriteStr(&_34513_ss, _33212_s.slice(_34613_i, _34813_j));
			_2206d0625_WriteStr(&_34513_ss, _33230_new);
			_34613_i=static_cast<jule::I64>((_34813_j + _33220_sub.len()));
		}
	_iter_next_1ab934aec:;
	}
	_iter_end_1ab934aec:;;
	_2206d0625_WriteStr(&_34513_ss, _33212_s.slice(_34613_i));
	return _2206d0e1c_Str(&_34513_ss);;
}



inline void _2218c11b6_trimLeft(jule::Slice<jule::U8>* _38818_s, jule::Slice<jule::U8>* _38830_cutset) {
	jule::I64 _38913_i = 0LL;;
	while ((_38913_i < (*(_38818_s)).len())) {
		{
			jule::I32 _39114_r = 0;;
			jule::I64 _39117_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22061dc39_DecodeRune((*(_38818_s)).slice(_38913_i));
				_39114_r = __jule_assign_result.__jule_result_arg0;
				_39117_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_2218c0b77_findRune(_38830_cutset, _39114_r) == -1LL)) {
				((*(_38818_s))).mut_slice(_38913_i);;
				return;;
			};
			_38913_i+=_39117_n;
		}
	_iter_next_1ab939ddd:;
	}
	_iter_end_1ab939ddd:;;
	(*(_38818_s))=nullptr;
}



inline jule::Str _2218c55b6_TrimLeft(jule::Str _40313_s, jule::Str _40321_cutset) {
	jule::Slice<jule::U8> _40413_bytes = _22050c4b8_Stobs(&(_40313_s));;
	jule::Slice<jule::U8> _4059_bcutset = _22050c4b8_Stobs(&(_40321_cutset));;
	_2218c11b6_trimLeft(&(_40413_bytes), &(_4059_bcutset));
	return static_cast<jule::Str>(_40413_bytes);;
}



inline void _2218c58a2_trimRight(jule::Slice<jule::U8>* _41019_s, jule::Slice<jule::U8>* _41031_cutset) {
	jule::I64 _41113_i = (*(_41019_s)).len();;
	while ((_41113_i > 0LL)) {
		{
			jule::I32 _41314_r = 0;;
			jule::I64 _41317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22061e344_DecodeLastRune((*(_41019_s)).slice(0LL, _41113_i));
				_41314_r = __jule_assign_result.__jule_result_arg0;
				_41317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_2218c0b77_findRune(_41031_cutset, _41314_r) == -1LL)) {
				((*(_41019_s))).mut_slice(0LL, _41113_i);;
				return;;
			};
			_41113_i-=_41317_n;
		}
	_iter_next_1ab93ca39:;
	}
	_iter_end_1ab93ca39:;;
	(*(_41019_s))=nullptr;
}



inline jule::Str _2218c609a_Trim(jule::Str _4349_s, jule::Str _43417_cutset) {
	jule::Slice<jule::U8> _43513_bytes = _22050c4b8_Stobs(&(_4349_s));;
	jule::Slice<jule::U8> _4369_bcutset = _22050c4b8_Stobs(&(_43417_cutset));;
	_2218c11b6_trimLeft(&(_43513_bytes), &(_4369_bcutset));
	_2218c58a2_trimRight(&(_43513_bytes), &(_4369_bcutset));
	return static_cast<jule::Str>(_43513_bytes);;
}



inline jule::Bool _2206d2704_IsPathSep(jule::U8 _4914_c) {
	return ((_4914_c == 92LLU) || (_4914_c == '/'));;
}



inline jule::Bool _2206d2a12_isSlash(jule::U8 _5312_c) {
	return ((_5312_c == '\\') || (_5312_c == '/'));;
}



inline jule::U8 _2206d2ccb_toUpper(jule::U8 _5512_c) {
	if ((('a' <= _5512_c) && (_5512_c <= 'z'))) {
		return static_cast<jule::U8>((_5512_c - 32LL));;
	};
	return _5512_c;;
}



inline jule::I64 _2206d33d6_volumeNameLen(jule::Str _8318_path) {
	if ((_8318_path.len() < 2LL)) {
		return 0LL;;
	};
	jule::U8 _889_c = _8318_path[0LL];;
	if (((_8318_path[1LL] == ':') && ((('a' <= _889_c) && (_889_c <= 'z')) || (('A' <= _889_c) && (_889_c <= 'Z'))))) {
		return 2LL;;
	};
	if (((!(_2206d2a12_isSlash(_8318_path[0LL]))) || (!(_2206d2a12_isSlash(_8318_path[1LL]))))) {
		return 0LL;;
	};
	jule::Str _9610_p1;;
	jule::Str _9618_rest;;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2206d36a0_cutPath(_8318_path.slice(2LL));
		_9610_p1 = __jule_assign_result.__jule_result_arg0;
		_9618_rest = __jule_assign_result.__jule_result_arg1;
	});
	jule::Str _9713_p2 = jule::Str();;
	jule::Bool _9813_ok = false;;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2206d36a0_cutPath(_9618_rest);
		_9713_p2 = __jule_assign_result.__jule_result_arg0;
		_9618_rest = __jule_assign_result.__jule_result_arg1;
		_9813_ok = __jule_assign_result.__jule_result_arg2;
	});
	if ((!(_9813_ok))) {
		return static_cast<jule::I64>(_8318_path.len());;
	};
	if (((!_9610_p1.equal(".", 1)) && (!_9610_p1.equal("?", 1)))) {
		return static_cast<jule::I64>(((_8318_path.len() - _9618_rest.len()) - 1LL));;
	};
	if (((((_9713_p2.len() == 3LL) && (_2206d2ccb_toUpper(_9713_p2[0LL]) == 'U')) && (_2206d2ccb_toUpper(_9713_p2[1LL]) == 'N')) && (_2206d2ccb_toUpper(_9713_p2[2LL]) == 'C'))) {
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2206d36a0_cutPath(_9618_rest);
			_9618_rest = __jule_assign_result.__jule_result_arg1;
		});
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2206d36a0_cutPath(_9618_rest);
			_9618_rest = __jule_assign_result.__jule_result_arg1;
			_9813_ok = __jule_assign_result.__jule_result_arg2;
		});
		if ((!(_9813_ok))) {
			return static_cast<jule::I64>(_8318_path.len());;
		};
	};
	return static_cast<jule::I64>(((_8318_path.len() - _9618_rest.len()) - 1LL));;
}



inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _2206d36a0_cutPath(jule::Str _12012_path) {
	__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg2 = false;
	{
		auto expr = &(_12012_path);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9585e3:;
		if (it != expr_end) {
			jule::I64 _1219_i = it - expr->begin();
			{
				if (_2206d2a12_isSlash(_12012_path[_1219_i])) {
					__jule_func_result.__jule_result_arg0 = _12012_path.slice(0LL, _1219_i);
					__jule_func_result.__jule_result_arg1 = _12012_path.slice((_1219_i + 1LL));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1ab9585e3:;
			++it;
			_1219_i++;
			goto _iter_begin_1ab9585e3;
		}
		_iter_end_1ab9585e3:;
	};
	__jule_func_result.__jule_result_arg0 = _12012_path;
	__jule_func_result.__jule_result_arg1 = jule::Str();
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _2206d3969_fullPath(jule::Str _12913_name) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::U16> _1309_utf16Name = _2204b4e76_Utf16FromStr(_12913_name);;
	jule::U16* _1319_p = (&(_1309_utf16Name[0LL]));;
	jule::U32 _13213_n = 100LLU;;
	for (;;) {
		{
			jule::Slice<jule::U16> _13417_buff = jule::Slice<jule::U16>::alloc(static_cast<jule::I64>(_13213_n), static_cast<jule::I64>(_13213_n), 0);;
			_13213_n=static_cast<jule::U32>(_2204e138c_GetFullPathName(_1319_p, static_cast<jule::U32>(static_cast<jule::U32>(_13417_buff.len())), (&(_13417_buff[0LL])), nullptr));
			if ((_13213_n == 0LLU)) {
				__jule_func_result.__jule_result_arg0 = jule::Str();
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			};
			if ((_13213_n <= static_cast<jule::U32>(_13417_buff.len()))) {
				__jule_func_result.__jule_result_arg0 = _2204b5284_Utf16ToStr(_13417_buff.slice(0LL, static_cast<jule::I64>(_13213_n)));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			};
		}
	_iter_next_1ab95a826:;
	}
	_iter_end_1ab95a826:;;
	__jule_func_result.__jule_result_arg0 = jule::Str();
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _2206d3d10_abs(jule::Str _14612_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_14612_path).empty()) {
		_14612_path=jule::Str(".", 1);
	};
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2206d3969_fullPath(_14612_path);
		_14612_path = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(__jule_func_result.__jule_result_arg1))) {
		__jule_func_result.__jule_result_arg0 = jule::Str();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _2218c82cd_Clean(_14612_path);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _2206d40c9_join(jule::Slice<jule::Str> _16013_elem) {
	_2206c697e_StrBuilder _16113_s = static__2206c6c9d_New(16LL);;
	jule::U8 _16213_lastChar = 0LLU;;
	{
		auto expr = &(_16013_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab95e880:;
		if (it != expr_end) {
			jule::Str _16317_e = *it;
			{
				{
					
					if ((_2206d13a1_Len(&_16113_s) == 0LL)) {
						_case_begin_1ab9605d9:;
					}
					else if (_2206d2a12_isSlash(_16213_lastChar)) {
						_case_begin_1ab960a4b:;
						{
							while (((_16317_e.len() > 0LL) && _2206d2a12_isSlash(_16317_e[0LL]))) {
								{
									(_16317_e).mut_slice(1LL);;
								}
							_iter_next_1ab961134:;
							}
							_iter_end_1ab961134:;;
						}
					}
					else if ((_16213_lastChar == ':')) {
						_case_begin_1ab9602a9:;
					}
					else {
						_case_begin_1ab960243:;
						{
							_2206d08cd_WriteByte(&_16113_s, '\\');
							_16213_lastChar='\\';
						}
					}
					_match_end_1ab960188:;
				};
				if ((_16317_e.len() > 0LL)) {
					_2206d0625_WriteStr(&_16113_s, _16317_e);
					_16213_lastChar=_16317_e[(_16317_e.len() - 1LL)];
				};
			}
			_iter_next_1ab95e880:;
			++it;
			goto _iter_begin_1ab95e880;
		}
		_iter_end_1ab95e880:;
	};
	if ((_2206d13a1_Len(&_16113_s) == 0LL)) {
		return jule::Str();;
	};
	return _2218c82cd_Clean(_2206d0e1c_Str(&_16113_s));;
}



inline jule::Str _2218c82cd_Clean(jule::Str _10914_path) {
	jule::Str _1109_originalPath = _10914_path;;
	jule::I64 _1119_volLen = _2206d33d6_volumeNameLen(_10914_path);;
	(_10914_path).mut_slice(_1119_volLen);;
	if ((_10914_path).empty()) {
		if ((((_1119_volLen > 1LL) && _2206d2704_IsPathSep(_1109_originalPath[0LL])) && _2206d2704_IsPathSep(_1109_originalPath[1LL]))) {
			return _2218c88a5_FromSlash(_1109_originalPath);;
		};
		return (_1109_originalPath + jule::Str(".", 1));;
	};
	jule::Bool _1209_rooted = _2206d2704_IsPathSep(_10914_path[0LL]);;
	jule::I64 _1279_n = _10914_path.len();;
	_2218c7475_lazyBuff _12813_out = _2218c7475_lazyBuff{._field_path=_22050c4b8_Stobs(&(_10914_path)), ._field_volAndPath=_1109_originalPath, ._field_volLen=_1119_volLen};;
	jule::I64 _13314_r = 0;;
	jule::I64 _13321_dotdot = 0;;
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		_13314_r = ___jule_assign_arg;
		_13321_dotdot = _1___jule_assign_arg;
	});
	if (_1209_rooted) {
		_2218c7b7e_append(&_12813_out, 92LLU);
		({
			jule::I64 ___jule_assign_arg = 1LL;
			jule::I64 _1___jule_assign_arg = 1LL;
			_13314_r = ___jule_assign_arg;
			_13321_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_13314_r < _1279_n)) {
		{
			{
				
				if (_2206d2704_IsPathSep(_10914_path[_13314_r])) {
					_case_begin_1ab96aa12:;
					{
						(_13314_r)++;
					}
				}
				else if (((_10914_path[_13314_r] == '.') && (((_13314_r + 1LL) == _1279_n) || _2206d2704_IsPathSep(_10914_path[(_13314_r + 1LL)])))) {
					_case_begin_1ab967547:;
					{
						(_13314_r)++;
					}
				}
				else if ((((_10914_path[_13314_r] == '.') && (_10914_path[(_13314_r + 1LL)] == '.')) && (((_13314_r + 2LL) == _1279_n) || _2206d2704_IsPathSep(_10914_path[(_13314_r + 2LL)])))) {
					_case_begin_1ab9675ad:;
					{
						_13314_r+=2LL;
						{
							
							if ((_12813_out._field_w > _13321_dotdot)) {
								_case_begin_1ab96d77e:;
								{
									(_12813_out._field_w)--;
									while (((_12813_out._field_w > _13321_dotdot) && (!(_2206d2704_IsPathSep(static_cast<jule::U8>(_2218c78c6_index(&_12813_out, _12813_out._field_w))))))) {
										{
											(_12813_out._field_w)--;
										}
									_iter_next_1ab96e30c:;
									}
									_iter_end_1ab96e30c:;;
								}
							}
							else if ((!(_1209_rooted))) {
								_case_begin_1ab96db25:;
								{
									if ((_12813_out._field_w > 0LL)) {
										_2218c7b7e_append(&_12813_out, 92LLU);
									};
									_2218c7b7e_append(&_12813_out, '.');
									_2218c7b7e_append(&_12813_out, '.');
									_13321_dotdot=_12813_out._field_w;
								}
							}
							_match_end_1ab96daae:;
						};
					}
				}
				else {
					_case_begin_1ab9674d1:;
					{
						if (((_1209_rooted && (_12813_out._field_w != 1LL)) || ((!(_1209_rooted)) && (_12813_out._field_w != 0LL)))) {
							_2218c7b7e_append(&_12813_out, 92LLU);
						};
						if ((((true && (_12813_out._field_w == 0LL)) && (_12813_out._field_volLen == 0LL)) && (_13314_r != 0LL))) {
							jule::I64 _17625_i = _13314_r;;
							for (; ((_17625_i < _1279_n) && (!(_2206d2704_IsPathSep(_10914_path[_17625_i])))); (_17625_i)++) {
								{
									if ((_10914_path[_17625_i] == ':')) {
										_2218c7b7e_append(&_12813_out, '.');
										_2218c7b7e_append(&_12813_out, 92LLU);
										goto _iter_end_1ab968e94;
									};
								}
							_iter_next_1ab968e94:;
							}
							_iter_end_1ab968e94:;;
						};
						for (; ((_13314_r < _1279_n) && (!(_2206d2704_IsPathSep(_10914_path[_13314_r])))); (_13314_r)++) {
							{
								_2218c7b7e_append(&_12813_out, _10914_path[_13314_r]);
							}
						_iter_next_1ab96a506:;
						}
						_iter_end_1ab96a506:;;
					}
				}
				_match_end_1ab9671a1:;
			};
		}
	_iter_next_1ab966aeb:;
	}
	_iter_end_1ab966aeb:;;
	if ((_12813_out._field_w == 0LL)) {
		_2218c7b7e_append(&_12813_out, '.');
	};
	return _2218c88a5_FromSlash(_2218c7e15_string(&_12813_out));;
}



inline jule::Str _2218c88a5_FromSlash(jule::Str _21214_path) {
	;
	return _2218c441c_Replace(_21214_path, jule::Str("/", 1), jule::Str("\\", 1), -1LL);;
}



inline jule::Str _2218c8be6_Join(jule::Slice<jule::Str> _2269_elem) {
	return _2206d40c9_join(_2269_elem);;
}



inline jule::Str _2218c8eb0_Ext(jule::Str _2318_path) {
	jule::I64 _23213_i = (_2318_path.len() - 1LL);;
	for (; ((_23213_i >= 0LL) && (!(_2206d2704_IsPathSep(_2318_path[_23213_i])))); (_23213_i)--) {
		{
			if ((_2318_path[_23213_i] == '.')) {
				return _2318_path.slice(_23213_i);;
			};
		}
	_iter_next_1ab972684:;
	}
	_iter_end_1ab972684:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _2218c9279_Abs(jule::Str _2468_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Str _24710_abs_path;;
	jule::Bool _24720_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2206d3d10_abs(_2468_path);
		_24710_abs_path = __jule_assign_result.__jule_result_arg0;
		_24720_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _24710_abs_path;
	__jule_func_result.__jule_result_arg1 = _24720_ok;
	return __jule_func_result;;
}



inline jule::Str _2218c9543_Base(jule::Str _25513_path) {
	if ((_25513_path).empty()) {
		return jule::Str(".", 1);;
	};
	while (((_25513_path.len() > 0LL) && _2206d2704_IsPathSep(_25513_path[(_25513_path.len() - 1LL)]))) {
		{
			(_25513_path).mut_slice(0LL, (_25513_path.len() - 1LL));;
		}
	_iter_next_1ab974cb3:;
	}
	_iter_end_1ab974cb3:;;
	(_25513_path).mut_slice(_2218c9ba3_VolumeName(_25513_path).len());;
	jule::I64 _26613_i = (_25513_path.len() - 1LL);;
	while (((_26613_i >= 0LL) && (!(_2206d2704_IsPathSep(_25513_path[_26613_i]))))) {
		{
			(_26613_i)--;
		}
	_iter_next_1ab97648a:;
	}
	_iter_end_1ab97648a:;;
	if ((_26613_i >= 0LL)) {
		(_25513_path).mut_slice((_26613_i + 1LL));;
	};
	if ((_25513_path).empty()) {
		return jule::Str("\\", 1);;
	};
	return _25513_path;;
}



inline jule::Str _2218c98d9_Dir(jule::Str _2868_path) {
	jule::Str _2879_vol = _2218c9ba3_VolumeName(_2868_path);;
	jule::I64 _28813_i = (_2868_path.len() - 1LL);;
	while (((_28813_i >= _2879_vol.len()) && (!(_2206d2704_IsPathSep(_2868_path[_28813_i]))))) {
		{
			(_28813_i)--;
		}
	_iter_next_1ab978569:;
	}
	_iter_end_1ab978569:;;
	jule::Str _2929_dir = _2218c82cd_Clean(_2868_path.slice(_2879_vol.len(), (_28813_i + 1LL)));;
	if ((_2929_dir.equal(".", 1) && (_2879_vol.len() > 2LL))) {
		return _2879_vol;;
	};
	return (_2879_vol + _2929_dir);;
}



inline jule::Str _2218c9ba3_VolumeName(jule::Str _30415_path) {
	return _2218c88a5_FromSlash(_30415_path.slice(0LL, _2206d33d6_volumeNameLen(_30415_path)));;
}



inline jule::I64 _2205064e5_getLastFsError(void) {
	jule::I64 _729_err = _21e490d54_GetLastErrno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1ab992297:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1ab99196c:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1ab991b48:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1ab991bae:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1ab991c25:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1ab991c8b:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 132LL) {
			_case_begin_1ab9923c9:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1ab992440:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1ab9924a6:;
			{
				return static_cast<jule::I64>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1ab99251c:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1ab992594:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1ab99261b:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1ab992693:;
			{
				return static_cast<jule::I64>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1ab99271a:;
			{
				return static_cast<jule::I64>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1ab992792:;
			{
				return static_cast<jule::I64>(14LL);;
			}
		}
		else if (_match_expr == 124LL) {
			_case_begin_1ab992819:;
			{
				return static_cast<jule::I64>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1ab992891:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1ab992918:;
			{
				return static_cast<jule::I64>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1ab992990:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1ab992a17:;
			{
				return static_cast<jule::I64>(19LL);;
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1ab992a8e:;
			{
				return static_cast<jule::I64>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1ab992b16:;
			{
				return static_cast<jule::I64>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1ab992b8d:;
			{
				return static_cast<jule::I64>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1ab992c15:;
			{
				return static_cast<jule::I64>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1ab992c8c:;
			{
				return static_cast<jule::I64>(24LL);;
			}
		}
		else if (_match_expr == 119LL) {
			_case_begin_1ab992d14:;
			{
				return static_cast<jule::I64>(25LL);;
			}
		}
		else if (_match_expr == 104LL) {
			_case_begin_1ab992d8b:;
			{
				return static_cast<jule::I64>(26LL);;
			}
		}
		else if (_match_expr == 41LL) {
			_case_begin_1ab992e13:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else {
			_case_begin_1ab991ad2:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1ab991a7c:;
	};
}



inline jule::Bool _220622c82_isConsoleHandle(jule::Uintptr _11320_handle) {
	return (((_11320_handle == _2204dd8b7_STDIN) || (_11320_handle == _2204ddb81_STDOUT)) || (_11320_handle == _2204dde17_STDERR));;
}



inline void _221a2c047_appendEscapeArg(_2206c697e_StrBuilder* _10225_s, jule::Str _10240_arg) {
	if ((_10240_arg.len() == 0LL)) {
		_2206d0625_WriteStr(_10225_s, jule::Str("\"\"", 2));
		return;;
	};
	jule::Bool _10813_needsBackslash = false;;
	jule::Bool _10913_hasSpace = false;;
	jule::I64 _11013_i = 0LL;;
	for (; (_11013_i < _10240_arg.len()); (_11013_i)++) {
		{
			{
				auto &_match_expr{ _10240_arg[_11013_i] };
				
				if (_match_expr == '\"' || _match_expr == '\\') {
					_case_begin_1ab9d61a9:;
					{
						_10813_needsBackslash=true;
					}
				}
				else if (_match_expr == ' ' || _match_expr == '\t') {
					_case_begin_1ab9d6231:;
					{
						_10913_hasSpace=true;
					}
				}
				_match_end_1ab9d60aa:;
			};
		}
	_iter_next_1ab9d5a7c:;
	}
	_iter_end_1ab9d5a7c:;;
	if (((!(_10813_needsBackslash)) && (!(_10913_hasSpace)))) {
		_2206d0625_WriteStr(_10225_s, _10240_arg);
		return;;
	};
	if ((!(_10813_needsBackslash))) {
		_2206d08cd_WriteByte(_10225_s, '\"');
		_2206d0625_WriteStr(_10225_s, _10240_arg);
		_2206d08cd_WriteByte(_10225_s, '\"');
		return;;
	};
	if (_10913_hasSpace) {
		_2206d08cd_WriteByte(_10225_s, '\"');
	};
	jule::I64 _13613_slashes = 0LL;;
	_11013_i=0LL;
	for (; (_11013_i < _10240_arg.len()); (_11013_i)++) {
		{
			jule::U8 _13913_c = _10240_arg[_11013_i];;
			{
				auto &_match_expr{ _13913_c };
				
				if (_match_expr == '\\') {
					_case_begin_1ab9d907a:;
					{
						(_13613_slashes)++;
					}
				}
				else if (_match_expr == '\"') {
					_case_begin_1ab9d9278:;
					{
						for (; (_13613_slashes > 0LL); (_13613_slashes)--) {
							{
								_2206d08cd_WriteByte(_10225_s, '\\');
							}
						_iter_next_1ab9d9cd4:;
						}
						_iter_end_1ab9d9cd4:;;
						_2206d08cd_WriteByte(_10225_s, '\\');
					}
				}
				else {
					_case_begin_1ab9d9212:;
					{
						_13613_slashes=0LL;
					}
				}
				_match_end_1ab9d91ac:;
			};
			_2206d08cd_WriteByte(_10225_s, _13913_c);
		}
	_iter_next_1ab9d5d24:;
	}
	_iter_end_1ab9d5d24:;;
	if (_10913_hasSpace) {
		for (; (_13613_slashes > 0LL); (_13613_slashes)--) {
			{
				_2206d08cd_WriteByte(_10225_s, '\\');
			}
		_iter_next_1ab9d92de:;
		}
		_iter_end_1ab9d92de:;;
		_2206d08cd_WriteByte(_10225_s, '\"');
	};
}



inline jule::Str _221a2c311_makeCmdLine(jule::Slice<jule::Str> _16316_args) {
	_2206c697e_StrBuilder _16413_s = static__2206c6c9d_New(16LL);;
	{
		auto expr = &(_16316_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9db5ee:;
		if (it != expr_end) {
			jule::Str *_16512_arg = it;
			{
				if ((_2206d13a1_Len(&_16413_s) > 0LL)) {
					_2206d08cd_WriteByte(&_16413_s, ' ');
				};
				_221a2c047_appendEscapeArg(&(_16413_s), (*(_16512_arg)));
			}
			_iter_next_1ab9db5ee:;
			++it;
			goto _iter_begin_1ab9db5ee;
		}
		_iter_end_1ab9db5ee:;
	};
	return _2206d0e1c_Str(&_16413_s);;
}



inline jule::Exceptional<jule::Slice<jule::U16>> _221a2c6da_createEnvBlock(jule::Slice<jule::Str> _17919_env) {
	if ((_17919_env.len() == 0LL)) {
		return jule::Exceptional<jule::Slice<jule::U16>>(jule::Any(), _2204b4618_Encode(jule::Slice<jule::I32>::make({0LL,0LL})));;
	};
	jule::I64 _18313_n = 0LL;;
	{
		auto expr = &(_17919_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9dd546:;
		if (it != expr_end) {
			jule::Str *_18412_s = it;
			{
				if ((_2218bbc61_FindByteStr(_18412_s, 0LLU) != -1LL)) {
					return jule::Exceptional<jule::Slice<jule::U16>>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
				};
				_18313_n+=((*(_18412_s)).len() + 1LL);
			}
			_iter_next_1ab9dd546:;
			++it;
			goto _iter_begin_1ab9dd546;
		}
		_iter_end_1ab9dd546:;
	};
	(_18313_n)++;
	jule::Slice<jule::U16> _19113_b = jule::Slice<jule::U16>::alloc(0LL, _18313_n, 0);;
	{
		auto expr = &(_17919_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9d8970:;
		if (it != expr_end) {
			jule::Str *_19212_s = it;
			{
				{
					auto expr = static_cast<jule::Slice<jule::I32>>((*(_19212_s)));
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_1ab9e045a:;
					if (it != expr_end) {
						jule::I32 _19316_c = *it;
						{
							_19113_b=_2204b4c23_AppendRune(_19113_b, _19316_c);
						}
						_iter_next_1ab9e045a:;
						++it;
						goto _iter_begin_1ab9e045a;
					}
					_iter_end_1ab9e045a:;
				};
				_19113_b=_2204b4c23_AppendRune(_19113_b, 0LL);
			}
			_iter_next_1ab9d8970:;
			++it;
			goto _iter_begin_1ab9d8970;
		}
		_iter_end_1ab9d8970:;
	};
	_19113_b=_2204b4c23_AppendRune(_19113_b, 0LL);
	return jule::Exceptional<jule::Slice<jule::U16>>(jule::Any(), _19113_b);;
}



inline jule::I64 _221a2d71e_processErrorFromCode(jule::I64 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 5LL) {
			_case_begin_1ab9ddbd9:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 2LL || _match_expr == 3LL) {
			_case_begin_1ab9e1291:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else {
			_case_begin_1ab9e122a:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		_match_end_1ab9dd90e:;
	};
}



inline jule::I64 _221a2d93e_getLastProcessError(void) {
	return _221a2d71e_processErrorFromCode(static_cast<jule::I64>(static_cast<jule::I64>(_2204dee18_GetLastError())));;
}



inline void _221a2e258_Exit(jule::I64 _129_code) {
	_2204e613e_Exit(_129_code);
}



inline jule::Str _221a2e467_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _22195bb58_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _22195be11_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_22195a78e_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba17d56:;
		if (it != expr_end) {
			jule::Str *_3212_validExt = it;
			{
				if ((_3121_ext == (*(_3212_validExt)))) {
					return true;;
				};
			}
			_iter_next_1aba17d56:;
			++it;
			goto _iter_begin_1aba17d56;
		}
		_iter_end_1aba17d56:;
	};
	return false;;
}



inline jule::Bool _22195c1ca_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_221959dba_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba193a7:;
		if (it != expr_end) {
			jule::Str *_4512_e = it;
			{
				if ((_4118_ext == (*(_4512_e)))) {
					return true;;
				};
			}
			_iter_next_1aba193a7:;
			++it;
			goto _iter_begin_1aba193a7;
		}
		_iter_end_1aba193a7:;
	};
	{
		auto expr = &(_22195ba59_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba192db:;
		if (it != expr_end) {
			jule::Str *_5012_e = it;
			{
				if ((_4118_ext == (*(_5012_e)))) {
					return true;;
				};
			}
			_iter_next_1aba192db:;
			++it;
			goto _iter_begin_1aba192db;
		}
		_iter_end_1aba192db:;
	};
	return false;;
}



inline jule::Str _22196922b_Logf(jule::Str _3159_fmt, jule::Slice<jule::Any> _31522_args) {
	return _221969bbb_applyFmt(_3159_fmt, _31522_args);;
}



inline jule::Str _221969539_argToStr(jule::Any _31913_arg) {
	{
		auto &_match_expr{ _31913_arg };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1aba19a4a:;
			{
				return _31913_arg.cast<jule::Str>(&__jule_any_type4);;
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1aba1b4db:;
			{
				return jule::Str::from_byte(_31913_arg.cast<jule::U8>(&__jule_any_type130));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1aba1b552:;
			{
				return jule::Str::from_rune(_31913_arg.cast<jule::I32>(&__jule_any_type6));;
			}
		}
		else {
			_case_begin_1aba1ae14:;
			{
				return jule::Str("<fmt?>", 6);;
			}
		}
		_match_end_1aba1adae:;
	};
}



inline jule::I64 _221969803_findNextFmt(jule::Str _33216_fmt) {
	{
		auto expr = &(_33216_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba1c2bc:;
		if (it != expr_end) {
			jule::I64 _3339_i = it - expr->begin();
			jule::U8 *_33312_b = it;
			{
				if (((*(_33312_b)) == '@')) {
					return _3339_i;;
				};
			}
			_iter_next_1aba1c2bc:;
			++it;
			_3339_i++;
			goto _iter_begin_1aba1c2bc;
		}
		_iter_end_1aba1c2bc:;
	};
	return -1LL;;
}



inline jule::Str _221969bbb_applyFmt(jule::Str _34117_fmt, jule::Slice<jule::Any> _34127_args) {
	_2206c697e_StrBuilder _34213_s = static__2206c6c9d_New(32LL);;
	{
		auto expr = &(_34127_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba1cc18:;
		if (it != expr_end) {
			jule::Any *_34312_arg = it;
			{
				jule::I64 _34413_i = _221969803_findNextFmt(_34117_fmt);;
				if ((_34413_i == -1LL)) {
					goto _iter_end_1aba1cc18;
				};
				_2206d0625_WriteStr(&_34213_s, _34117_fmt.slice(0LL, _34413_i));
				_2206d0625_WriteStr(&_34213_s, _221969539_argToStr((*(_34312_arg))));
				(_34117_fmt).mut_slice((_34413_i + 1LL));;
			}
			_iter_next_1aba1cc18:;
			++it;
			goto _iter_begin_1aba1cc18;
		}
		_iter_end_1aba1cc18:;
	};
	_2206d0625_WriteStr(&_34213_s, _34117_fmt);
	return _2206d0e1c_Str(&_34213_s);;
}



inline jule::Bool _22196aa35_IsTopDirective(jule::Str _2219_directive) {
	return (_2219_directive.equal("pass", 4) || _2219_directive.equal("build", 5));;
}



inline jule::Bool _22196be87_IsWindows(jule::Str _3714_os) {
	return _3714_os.equal("windows", 7);;
}



inline jule::Bool _22196c262_IsDarwin(jule::Str _4013_os) {
	return _4013_os.equal("darwin", 6);;
}



inline jule::Bool _22196c52b_IsLinux(jule::Str _4312_os) {
	return _4312_os.equal("linux", 5);;
}



inline jule::Bool _22196c86c_IsI386(jule::Str _4611_arch) {
	return _4611_arch.equal("i386", 4);;
}



inline jule::Bool _22196cb36_IsAmd64(jule::Str _4912_arch) {
	return _4912_arch.equal("amd64", 5);;
}



inline jule::Bool _22196ce00_IsArm64(jule::Str _5212_arch) {
	return _5212_arch.equal("arm64", 5);;
}



inline jule::Bool _22196d1b9_IsUnix(jule::Str _5511_os) {
	return (_22196c262_IsDarwin(_5511_os) || _22196c52b_IsLinux(_5511_os));;
}



inline jule::Bool _22196d560_Is32Bit(jule::Str _5812_arch) {
	return _22196c86c_IsI386(_5812_arch);;
}



inline jule::Bool _22196d829_Is64Bit(jule::Str _6112_arch) {
	return (_22196cb36_IsAmd64(_6112_arch) || _22196ce00_IsArm64(_6112_arch));;
}



inline void _221a30743_init(void) {
	jule::Str _2513_path = _221a2e467_Executable();;
	if ((_2513_path).empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_221a2ec70_PathWd=({
			auto except = _22070d8c8_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_221a2e9b7_PathExec=_2218c98d9_Dir(_2513_path);
		_221a2e764_PathStdlib=_2218c8be6_Join(jule::Slice<jule::Str>::make({_221a2e9b7_PathExec,jule::Str("..", 2),jule::Str("std", 3)}));
		_221a3007d_PathApi=_2218c8be6_Join(jule::Slice<jule::Str>::make({_221a2e9b7_PathExec,jule::Str("..", 2),jule::Str("api", 3),jule::Str("jule.hpp", 8)}));
	};
}



inline jule::I64 _1dc1e1466_LeadingZeros64(jule::U64 _6119_x) {
	return static_cast<jule::I64>((64LL - _1dc1e8d64_Len64(_6119_x)));;
}



inline jule::I64 _1dc1e23bd_TrailingZeros(jule::U64 _8318_x) {
	;
	return static_cast<jule::I64>(_1dc1e30e4_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8318_x))));;
}



inline jule::I64 _1dc1e2d2a_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1dc1e1a82__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]));;
}



inline jule::I64 _1dc1e30e4_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1dc1e2148__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]));;
}



inline jule::I64 _1dc1e8a9a_Len32(jule::U32 _35214_x) {
	jule::I64 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35214_x)])));
	return __jule_func_result;;
}



inline jule::I64 _1dc1e8d64_Len64(jule::U64 _36614_x) {
	jule::I64 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36614_x)])));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1dc1e9b01_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>(((_41510_x + _41518_y) + _41526_carry));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1dc1eb40a_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5019_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((_49910_x * _49918_y));
	return __jule_func_result;;
}



inline jule::U32 _206dc2946_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _206dc2c54_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _206dc301d_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _206dc335e_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _206dc5916_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1abb0a157:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1dc204116_IsInf(_4714_f, 0LL) || _1dc203a0b_IsNaN(_4714_f)) {
			_case_begin_1abb0a1ce:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1abb0a07a:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1dc2043d0_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5613_x = _206dc301d_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I64>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_206dc335e_F64FromBits(_5613_x));
	return __jule_func_result;;
}



inline jule::F64 _1dc2036ed_NaN(void) {
	return static_cast<jule::F64>(_206dc335e_F64FromBits(9221120237041090561LLU));;
}



inline jule::Bool _1dc203a0b_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);;
}



inline jule::F64 _1dc203cc5_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return static_cast<jule::F64>(_206dc335e_F64FromBits(9218868437227405312LLU));;
	};
	return static_cast<jule::F64>(_206dc335e_F64FromBits(18442240474082181120LLU));;
}



inline jule::Bool _1dc204116_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1dc2043d0_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1dc206789_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((_8214_x * 4503599627370496LLU));
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1dc205da4_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1dc203a0b_IsNaN(_1118_x) || _1dc204116_IsInf(_1118_x, 1LL)) {
			_case_begin_1abb4886b:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1abb488e3:;
			{
				return static_cast<jule::F64>(_1dc2036ed_NaN());;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1abb4896a:;
			{
				return static_cast<jule::F64>(_1dc203cc5_Inf(-1LL));;
			}
		}
		_match_end_1abb487a0:;
	};
	jule::F64 _13314_f1 = 0;;
	jule::I64 _13322_ki = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _206dc5916_Frexp(_1118_x);
		_13314_f1 = __jule_assign_result.__jule_result_arg0;
		_13322_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));;
}



inline jule::F64 _1dc206789_Abs(jule::F64 _438_x) {
	return static_cast<jule::F64>(_206dc335e_F64FromBits(static_cast<jule::U64>((_206dc301d_F64Bits(_438_x) & 9223372036854775807LLU))));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1dc20d483_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _469_absF = _1dc206789_Abs(_449_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_absF > 4503599627370496LL)) {
		_4713_i=_449_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_absF + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_absF)) {
			{
				(_4713_i)--;
			}
		_iter_next_1abbae5a2:;
		}
		_iter_end_1abbae5a2:;;
		if ((_449_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	__jule_func_result.__jule_result_arg0 = _4713_i;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::F64>((_449_f - _4713_i));
	return __jule_func_result;;
}



inline jule::F64 _1dc20dc8b_Log2(jule::F64 _449_x) {
	jule::F64 _4510_frac = 0;;
	jule::I64 _4516_exp = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _206dc5916_Frexp(_449_x);
		_4510_frac = __jule_assign_result.__jule_result_arg0;
		_4516_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));;
	};
	return static_cast<jule::F64>(((_1dc205da4_Log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));;
}



inline jule::Str _1dc2382c1_FmtFloat(jule::F64 _7813_f, jule::U8 _7821_fmt, jule::I64 _7832_prec, jule::I64 _7843_bit_size) {
	return static_cast<jule::Str>(_1dc2388a9_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _1dc23bc53_max(static_cast<jule::I64>((_7832_prec + 4LL)), 24LL), 0), _7813_f, _7821_fmt, _7832_prec, _7843_bit_size));;
}



inline jule::Slice<jule::U8> _1dc2388a9_genericFtoa(jule::Slice<jule::U8> _8220_dst, jule::F64 _8233_val, jule::U8 _8243_fmt, jule::I64 _8258_prec, jule::I64 _8269_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_1dc23708e_floatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8269_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1c6aea67c:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_206dc2946_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8233_val)))));
				_8413_flt=((jule::Ptr<_1dc23708e_floatInfo>)((&(_1dc23748a_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1c6aea3c4:;
			{
				_8313_bits=static_cast<jule::U64>(_206dc301d_F64Bits(_8233_val));
				_8413_flt=((jule::Ptr<_1dc23708e_floatInfo>)((&(_1dc237798_f64info))));
			}
		}
		else {
			_case_begin_1c6ae9ec8:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1c6ae9e73:;
	};
	jule::Bool _969_neg = ((_8313_bits >> ((*(_8413_flt))._field_expbits + (*(_8413_flt))._field_mantbits)) != 0LLU);;
	jule::I64 _9713_exp = (static_cast<jule::I64>((_8313_bits >> (*(_8413_flt))._field_mantbits)) & static_cast<jule::I64>(((1LL << (*(_8413_flt))._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << (*(_8413_flt))._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << (*(_8413_flt))._field_expbits) - 1LL)))) {
			_case_begin_1c6aee483:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_1c6b0151d:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'n','a','n'}));;
						}
					}
					else if (_969_neg) {
						_case_begin_1c6b00594:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));;
						}
					}
					else {
						_case_begin_1c6b0052d:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));;
						}
					}
					_match_end_1c6b00462:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1c6aee5b5:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_1c6aed691:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << (*(_8413_flt))._field_mantbits);
			}
		}
		_match_end_1c6aed806:;
	};
	_9713_exp+=(*(_8413_flt))._field_bias;
	if ((_8243_fmt == 'b')) {
		return _1dc23ad51_fmtB(_8220_dst, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	if (((_8243_fmt == 'x') || (_8243_fmt == 'X'))) {
		return _1dc23b55a_fmtX(_8220_dst, _8258_prec, _8243_fmt, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	;
	_1dc237c3d_decimalSlice _13213_digs = _1dc237c3d_decimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8258_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_1dc246c19_ryuFtoaShortest(&(_13213_digs), _9813_mant, static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>((*(_8413_flt))._field_mantbits))), &((*(_8413_flt))));
		_13313_ok=true;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c6b04cd5:;
				{
					_8258_prec=static_cast<jule::I64>(_1dc23bc53_max(static_cast<jule::I64>((_13213_digs._field_nd - 1LL)), 0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1c6b04d4b:;
				{
					_8258_prec=static_cast<jule::I64>(_1dc23bc53_max(static_cast<jule::I64>((_13213_digs._field_nd - _13213_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1c6b04db2:;
				{
					_8258_prec=_13213_digs._field_nd;
				}
			}
			_match_end_1c6b03c3a:;
		};
	} else if ((_8243_fmt != 'f')) {
		jule::I64 _15217_digits = _8258_prec;;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c6b069eb:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1c6b06be9:;
				{
					if ((_8258_prec == 0LL)) {
						_8258_prec=1LL;
					};
					_15217_digits=_8258_prec;
				}
			}
			else {
				_case_begin_1c6b06b83:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_1c6b06b2d:;
		};
		if (((_8269_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1dc24594e_ryuFtoaFixed32(&(_13213_digs), static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)), static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>((*(_8413_flt))._field_mantbits))), _15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1dc245de4_ryuFtoaFixed64(&(_13213_digs), _9813_mant, static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>((*(_8413_flt))._field_mantbits))), _15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _1dc23902a_bigFtoa(_8220_dst, _8258_prec, _8243_fmt, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	return _1dc239701_fmtDigits(_8220_dst, _1359_shortest, _969_neg, _13213_digs, _8258_prec, _8243_fmt);;
}



inline jule::Slice<jule::U8> _1dc23902a_bigFtoa(jule::Slice<jule::U8> _18216_dst, jule::I64 _18233_prec, jule::U8 _18244_fmt, jule::Bool _18255_neg, jule::U64 _1835_mant, jule::I64 _18316_exp, _1dc23708e_floatInfo* _18327_flt) {
	_1dc24aa31_decimal _18413_d = _1dc24aa31_decimal{};;
	_1dc24add8_assign(&_18413_d, _1835_mant);
	_1dc24b191_shift(&_18413_d, static_cast<jule::I64>((_18316_exp - static_cast<jule::I64>((*(_18327_flt))._field_mantbits))));
	_1dc237c3d_decimalSlice _18713_digs = _1dc237c3d_decimalSlice{};;
	jule::Bool _1889_shortest = (_18233_prec < 0LL);;
	if (_1889_shortest) {
		_1dc239b52_roundShortest(&(_18413_d), _1835_mant, _18316_exp, _18327_flt);
		_18713_digs=_1dc237c3d_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c6b0cea8:;
				{
					_18233_prec=static_cast<jule::I64>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1c6b0dc89:;
				{
					_18233_prec=static_cast<jule::I64>(_1dc23bc53_max(static_cast<jule::I64>((_18713_digs._field_nd - _18713_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1c6b0dd00:;
				{
					_18233_prec=_18713_digs._field_nd;
				}
			}
			_match_end_1c6b0db35:;
		};
	} else {
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c6b1040b:;
				{
					_1dc24b9aa_round(&_18413_d, static_cast<jule::I64>((_18233_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1c6b10483:;
				{
					_1dc24b9aa_round(&_18413_d, static_cast<jule::I64>((_18413_d._field_dp + _18233_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1c6b1050a:;
				{
					if ((_18233_prec == 0LL)) {
						_18233_prec=1LL;
					};
					_1dc24b9aa_round(&_18413_d, _18233_prec);
				}
			}
			_match_end_1c6b10362:;
		};
		_18713_digs=_1dc237c3d_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
	};
	return _1dc239701_fmtDigits(_18216_dst, _1889_shortest, _18255_neg, _18713_digs, _18233_prec, _18244_fmt);;
}



inline jule::Slice<jule::U8> _1dc239701_fmtDigits(jule::Slice<jule::U8> _21918_dst, jule::Bool _21931_shortest, jule::Bool _21947_neg, _1dc237c3d_decimalSlice _2205_digs, jule::I64 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1c6b137c7:;
			{
				return _1dc23a1e6_fmtE(_21918_dst, _21947_neg, _2205_digs, _22029_prec, _22040_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1c6b1383d:;
			{
				return _1dc23a6d0_fmtF(_21918_dst, _21947_neg, _2205_digs, _22029_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1c6b138a4:;
			{
				jule::I64 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21931_shortest) {
					_22817_eprec=6LL;
				};
				jule::I64 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _1dc23a1e6_fmtE(_21918_dst, _21947_neg, _2205_digs, static_cast<jule::I64>((_22029_prec - 1LL)), static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));;
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _1dc23a6d0_fmtF(_21918_dst, _21947_neg, _2205_digs, static_cast<jule::I64>(_1dc23bc53_max(static_cast<jule::I64>((_22029_prec - _2205_digs._field_dp)), 0LL)));;
			}
		}
		_match_end_1c6b136d9:;
	};
	return jule::append(_21918_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));;
}



inline void _1dc239b52_roundShortest(_1dc24aa31_decimal* _25723_d, jule::U64 _25735_mant, jule::I64 _25746_exp, _1dc23708e_floatInfo* _25757_flt) {
	if ((_25735_mant == 0LLU)) {
		(*(_25723_d))._field_nd=0LL;
		return;;
	};
	jule::I64 _2789_minexp = ((*(_25757_flt))._field_bias + 1LL);;
	if (((_25746_exp > _2789_minexp) && ((332LL * ((*(_25723_d))._field_dp - (*(_25723_d))._field_nd)) >= (100LL * (_25746_exp - static_cast<jule::I64>((*(_25757_flt))._field_mantbits)))))) {
		return;;
	};
	_1dc24aa31_decimal _28713_upper = _1dc24aa31_decimal{};;
	_1dc24add8_assign(&_28713_upper, static_cast<jule::U64>(((_25735_mant << 1LLU) + 1LLU)));
	_1dc24b191_shift(&_28713_upper, static_cast<jule::I64>(((_25746_exp - static_cast<jule::I64>((*(_25757_flt))._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I64 _29813_explo = 0LL;;
	if (((_25735_mant > (1LLU << (*(_25757_flt))._field_mantbits)) || (_25746_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25735_mant - 1LLU));
		_29813_explo=_25746_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25735_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I64>((_25746_exp - 1LL));
	};
	_1dc24aa31_decimal _30613_lower = _1dc24aa31_decimal{};;
	_1dc24add8_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_1dc24b191_shift(&_30613_lower, static_cast<jule::I64>(((_29813_explo - static_cast<jule::I64>((*(_25757_flt))._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25735_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I64 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I64 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + (*(_25723_d))._field_dp);;
			if ((_33513_mi >= (*(_25723_d))._field_nd)) {
				goto _iter_end_1c6b205b4;
			};
			jule::I64 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=(*(_25723_d))._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_1c6b25157:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_1c6b251bd:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_1c6b25234:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_1c6b250ad:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_1c6b27c3c:;
					{
						_1dc24b9aa_round(_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_1c6b27ca3:;
					{
						_1dc24b449_roundDown(_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_1c6b27d19:;
					{
						_1dc24b702_roundUp(_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_1c6b27b93:;
			};
		}
	_iter_next_1c6b205b4:;
	}
	_iter_end_1c6b205b4:;;
}



inline jule::Slice<jule::U8> _1dc23a1e6_fmtE(jule::Slice<jule::U8> _39613_dst, jule::Bool _39626_neg, _1dc237c3d_decimalSlice _39637_d, jule::I64 _39654_prec, jule::U8 _39665_fmt) {
	if (_39626_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _40313_ch = '0';;
	if ((_39637_d._field_nd != 0LL)) {
		_40313_ch=_39637_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push(_40313_ch); };
	if ((_39654_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push('.'); };
		jule::I64 _41217_i = 1LL;;
		jule::I64 _41313_m = _1dc23b8ce_min(_39637_d._field_nd, static_cast<jule::I64>((_39654_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			(_39613_dst).append(_39637_d._field_d.slice(_41217_i, _41313_m));;
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39654_prec); (_41217_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1c6b2c7e1:;
		}
		_iter_end_1c6b2c7e1:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push(_39665_fmt); };
	jule::I64 _42513_exp = (_39637_d._field_dp - 1LL);;
	if ((_39637_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I64>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push(_40313_ch); };
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_1c6b2eda9:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0'))); };
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_1c6b2e859:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0'))); };
			}
		}
		else {
			_case_begin_1c6b2e408:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0'))); };
			}
		}
		_match_end_1c6b2db77:;
	};
	return _39613_dst;;
}



inline jule::Slice<jule::U8> _1dc23a6d0_fmtF(jule::Slice<jule::U8> _45113_dst, jule::Bool _45126_neg, _1dc237c3d_decimalSlice _45137_d, jule::I64 _45154_prec) {
	if (_45126_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('-'); };
	};
	if ((_45137_d._field_dp > 0LL)) {
		jule::I64 _45917_m = _1dc23b8ce_min(_45137_d._field_nd, _45137_d._field_dp);;
		(_45113_dst).append(_45137_d._field_d.slice(0LL, _45917_m));;
		for (; (_45917_m < _45137_d._field_dp); (_45917_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1c6b3331e:;
		}
		_iter_end_1c6b3331e:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('0'); };
	};
	if ((_45154_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('.'); };
		jule::I64 _47017_i = 0LL;;
		for (; (_47017_i < _45154_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47317_j = (_45137_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45137_d._field_nd))) {
					_47221_ch=_45137_d._field_d[_47317_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push(_47221_ch); };
			}
		_iter_next_1c6b34650:;
		}
		_iter_end_1c6b34650:;;
	};
	return _45113_dst;;
}



inline jule::Slice<jule::U8> _1dc23ad51_fmtB(jule::Slice<jule::U8> _48413_dst, jule::Bool _48426_neg, jule::U64 _48437_mant, jule::I64 _48452_exp, _1dc23708e_floatInfo* _48463_flt) {
	if (_48426_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48413_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1dc250c12_fmtBits(_48413_dst, _48437_mant, 10LL, false, true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48413_dst; __jule_push_dest.push('p'); };
	_48452_exp-=static_cast<jule::I64>((*(_48463_flt))._field_mantbits);
	if ((_48452_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48413_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1dc250c12_fmtBits(_48413_dst, static_cast<jule::U64>(static_cast<jule::U64>(_48452_exp)), 10LL, (_48452_exp < 0LL), true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48413_dst;;
}



inline jule::Slice<jule::U8> _1dc23b55a_fmtX(jule::Slice<jule::U8> _50613_dst, jule::I64 _50626_prec, jule::U8 _50637_fmt, jule::Bool _50648_neg, jule::U64 _5079_mant, jule::I64 _50724_exp, _1dc23708e_floatInfo* _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - (*(_50735_flt))._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_1c6b387db:;
	}
	_iter_end_1c6b387db:;;
	if (((_50626_prec >= 0LL) && (_50626_prec < 15LL))) {
		jule::U64 _52113_shift = static_cast<jule::U64>((_50626_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50637_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50648_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_50637_fmt); __jule_push_dest.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU))))); };
	_5079_mant<<=4LLU;
	if (((_50626_prec < 0LL) && (_5079_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push('.'); };
		while ((_5079_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]); };
				_5079_mant<<=4LLU;
			}
		_iter_next_1c6b407b0:;
		}
		_iter_end_1c6b407b0:;;
	} else if ((_50626_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push('.'); };
		jule::I64 _55817_i = 0LL;;
		for (; (_55817_i < _50626_prec); (_55817_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]); };
				_5079_mant<<=4LLU;
			}
		_iter_next_1c6b4198c:;
		}
		_iter_end_1c6b4198c:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50637_fmt == _1dc23c88b_lower(_50637_fmt))) {
		_56613_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_56613_ch); };
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I64>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_56613_ch); };
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_1c6b3de1d:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0'))); };
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_1c6b3de84:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0'))); };
			}
		}
		else {
			_case_begin_1c6b44352:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0'))); };
			}
		}
		_match_end_1c6b43098:;
	};
	return _50613_dst;;
}



inline jule::I64 _1dc23b8ce_min(jule::I64 _5918_a, jule::I64 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;;
	};
	return _59116_b;;
}



inline jule::I64 _1dc23bc53_max(jule::I64 _5988_a, jule::I64 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;;
	};
	return _59816_b;;
}



inline jule::U8 _1dc23c88b_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | 32LL));;
}



inline __jule_tuple_u64__jule_tuple__22257de2d_ConvError _1dc23cd0e_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__22257de2d_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (((*(_5119_s))).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_1c6b4a666:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_1c6b4a567:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_1dc23c88b_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_1c6b4c0b3:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1dc23c88b_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_1c6b4bed6:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1dc23c88b_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_1c6b4bba6:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1c6b4bb40:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_1c6b4ba74:;
					};
				};
			}
		}
		else {
			_case_begin_1c6b499ea:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1c6b49d4c:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=64LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1c6b50ec9:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1c6b5087a:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1c6b50b00:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5131_base)) + 1LLU));
			}
		}
		_match_end_1c6b50a89:;
	};
	jule::U64 _10013_maxVal = 0LLU;;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1c6b52294:;
			{
				_10013_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1c6b5230a:;
			{
				_10013_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1c6b50b77:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6b52edc:;
		if (it != expr_end) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1c6b5421e:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _1dc23c88b_lower(_10912_c)) && (_1dc23c88b_lower(_10912_c) <= 'z'))) {
						_case_begin_1c6b5410e:;
						{
							_11017_d=static_cast<jule::U8>(((_1dc23c88b_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1c6b53c35:;
						{
							goto _iter_next_1c6b52edc;
						}
					}
					else {
						_case_begin_1c6b53bbe:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1c6b53b69:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
					return __jule_func_result;;
				};
				if ((_10813_n >= _9013_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_10813_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_10813_n=_13213_n1;
			}
			_iter_next_1c6b52edc:;
			++it;
			goto _iter_begin_1c6b52edc;
		}
		_iter_end_1c6b52edc:;
	};
	__jule_func_result.__jule_result_arg0 = _10813_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1dc23d23d_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bit_size) {
	jule::U64 _14710_un = 0;;
	jule::I64 _14714_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__22257de2d_ConvError __jule_assign_result = _1dc23cd0e_parseUint(&(_14618_s), _14630_base, _14645_bit_size);
		_14710_un = __jule_assign_result.__jule_result_arg0;
		_14714_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_14714_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(jule::Any(_14714_err, &__jule_any_type0));
	};
	return jule::Exceptional<jule::U64>(jule::Any(), _14710_un);;
}



inline jule::Exceptional<jule::I64> _1dc23d6e4_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if ((_17217_s).empty()) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
	};
	jule::Bool _17813_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_17813_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un = 0;;
	jule::I64 _18718_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__22257de2d_ConvError __jule_assign_result = _1dc23cd0e_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_18714_un = __jule_assign_result.__jule_result_arg0;
		_18718_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18718_err != static_cast<jule::I64>(0LL)) && (_18718_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(jule::Any(_18718_err, &__jule_any_type0));
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17240_bitSize - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _20313_n);;
}



inline __jule_tuple_f64__jule_tuple_bool _1dc23e3d7_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_206dc335e_F64FromBits(9223372036854775808LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _579_clz = _1dc1e1466_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_579_clz);
	;
	jule::U64 _6013_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_xHi = 0;;
	jule::U64 _6323_xLo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dc1eb40a_Mul64(_4122_man, _1dc240240_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_6314_xHi = __jule_assign_result.__jule_result_arg0;
		_6323_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_6314_xHi & 511LLU) == 511LLU) && ((_6323_xLo + _4122_man) < _4122_man))) {
		jule::U64 _6714_yHi = 0;;
		jule::U64 _6719_yLo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dc1eb40a_Mul64(_4122_man, _1dc240240_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_6714_yHi = __jule_assign_result.__jule_result_arg0;
			_6719_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _6818_mergedHi = 0;;
		jule::U64 _6828_mergedLo = 0;;
		({
			jule::U64 ___jule_assign_arg = _6314_xHi;
			jule::U64 _1___jule_assign_arg = (_6323_xLo + _6714_yHi);
			_6818_mergedHi = ___jule_assign_arg;
			_6828_mergedLo = _1___jule_assign_arg;
		});
		if ((_6828_mergedLo < _6323_xLo)) {
			(_6818_mergedHi)++;
		};
		if (((((_6818_mergedHi & 511LLU) == 511LLU) && ((_6828_mergedLo + 1LLU) == 0LLU)) && ((_6719_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _6818_mergedHi;
			jule::U64 _1___jule_assign_arg = _6828_mergedLo;
			_6314_xHi = ___jule_assign_arg;
			_6323_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _799_msb = (_6314_xHi >> 63LLU);;
	jule::U64 _8013_retMantissa = (_6314_xHi >> (_799_msb + 9LLU));;
	_6013_retExp2-=(1LLU ^ _799_msb);
	if ((((_6323_xLo == 0LLU) && ((_6314_xHi & 511LLU) == 0LLU)) && ((_8013_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_8013_retMantissa+=(_8013_retMantissa & 1LLU);
	_8013_retMantissa>>=1LLU;
	if (((_8013_retMantissa >> 53LLU) > 0LLU)) {
		_8013_retMantissa>>=1LLU;
		_6013_retExp2+=1LLU;
	};
	if (((_6013_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _10313_retBits = ((_6013_retExp2 << 52LLU) | (_8013_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_10313_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_206dc335e_F64FromBits(_10313_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1dc23e827_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_206dc2c54_F32FromBits(2147483648LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _1329_clz = _1dc1e1466_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1329_clz);
	;
	jule::U64 _13513_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi = 0;;
	jule::U64 _13824_x_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dc1eb40a_Mul64(_11022_man, _1dc240240_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_13814_x_hi = __jule_assign_result.__jule_result_arg0;
		_13824_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _14214_y_hi = 0;;
		jule::U64 _14220_y_lo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dc1eb40a_Mul64(_11022_man, _1dc240240_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_14214_y_hi = __jule_assign_result.__jule_result_arg0;
			_14220_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _14318_merged_hi = 0;;
		jule::U64 _14329_merged_lo = 0;;
		({
			jule::U64 ___jule_assign_arg = _13814_x_hi;
			jule::U64 _1___jule_assign_arg = (_13824_x_lo + _14214_y_hi);
			_14318_merged_hi = ___jule_assign_arg;
			_14329_merged_lo = _1___jule_assign_arg;
		});
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _14318_merged_hi;
			jule::U64 _1___jule_assign_arg = _14329_merged_lo;
			_13814_x_hi = ___jule_assign_arg;
			_13824_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_retMantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_retExp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_15513_retMantissa+=(_15513_retMantissa & 1LLU);
	_15513_retMantissa>>=1LLU;
	if (((_15513_retMantissa >> 24LLU) > 0LLU)) {
		_15513_retMantissa>>=1LLU;
		_13513_retExp2+=1LLU;
	};
	if (((_13513_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _17813_retBits = ((_13513_retExp2 << 23LLU) | (_15513_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_17813_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_206dc2c54_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_retBits))));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I64 _1dc241681_commonPrefixLenIgnoreCase(jule::Slice<jule::U8>* _4631_s, jule::Str _4642_prefix) {
	jule::I64 _4713_n = _4642_prefix.len();;
	if ((_4713_n > (*(_4631_s)).len())) {
		_4713_n=static_cast<jule::I64>((*(_4631_s)).len());
	};
	jule::I64 _5113_i = 0LL;;
	for (; (_5113_i < _4713_n); (_5113_i)++) {
		{
			jule::U8 _5317_c = (*(_4631_s))[_5113_i];;
			if ((('A' <= _5317_c) && (_5317_c <= 'Z'))) {
				_5317_c+=32LL;
			};
			if ((_5317_c != _4642_prefix[_5113_i])) {
				return _5113_i;;
			};
		}
	_iter_next_1abda6810:;
	}
	_iter_end_1abda6810:;;
	return _4713_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1dc24198e_special(jule::Slice<jule::U8> _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I64 _7313_sign = 1LL;;
	jule::I64 _7413_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1abdaa34c:;
			{
				if ((_6912_s[0LL] == '-')) {
					_7313_sign=-1LL;
				};
				_7413_nsign=1LL;
				{
					jule::Slice<jule::U8>* _8321_sp = (&(_6912_s));;
					(*(_8321_sp))=(*(_8321_sp)).slice(1LL);
				};
				goto _case_begin_1abdaa3c4;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1abdaa3c4:;
			{
				jule::I64 _8817_caseN = _1dc241681_commonPrefixLenIgnoreCase(&(_6912_s), jule::Str("infinity", 8));;
				if (((3LL < _8817_caseN) && (_8817_caseN < 8LL))) {
					_8817_caseN=3LL;
				};
				if (((_8817_caseN == 3LL) || (_8817_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1dc203cc5_Inf(_7313_sign));
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_7413_nsign + __jule_func_result.__jule_result_arg1));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1abdaa44b:;
			{
				if ((_1dc241681_commonPrefixLenIgnoreCase(&(_6912_s), jule::Str("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1dc2036ed_NaN());
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1abdaa281:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1dc241c58_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1abdb0918:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1abdb0b8d:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1abdb0ac2:;
	};
	jule::U64 _12213_base = 10LLU;;
	jule::I64 _12313_maxMantDigits = 19LL;;
	jule::U8 _12413_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_1dc23c88b_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_12213_base=16LLU;
		_12313_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_12413_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _13213_sawdot = false;;
	jule::Bool _13313_sawdigits = false;;
	jule::I64 _13413_nd = 0LL;;
	jule::I64 _13513_ndMant = 0LL;;
	jule::I64 _13613_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _13813_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_13813_c == '_')) {
					_case_begin_1abdb5ba4:;
					{
						goto _iter_next_1abdb0374;
					}
				}
				else if ((_13813_c == '.')) {
					_case_begin_1abdb5c2b:;
					{
						if (_13213_sawdot) {
							goto _julec_label_1abdba55a;
						};
						_13213_sawdot=true;
						_13613_dp=_13413_nd;
						goto _iter_next_1abdb0374;
					}
				}
				else if ((('0' <= _13813_c) && (_13813_c <= '9'))) {
					_case_begin_1abdb5ca3:;
					{
						_13313_sawdigits=true;
						if (((_13813_c == '0') && (_13413_nd == 0LL))) {
							(_13613_dp)--;
							goto _iter_next_1abdb0374;
						};
						(_13413_nd)++;
						if ((_13513_ndMant < _12313_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_12213_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_13813_c - '0'));
							(_13513_ndMant)++;
						} else if ((_13813_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1abdb0374;
					}
				}
				else if ((((_12213_base == 16LLU) && ('a' <= _1dc23c88b_lower(_13813_c))) && (_1dc23c88b_lower(_13813_c) <= 'f'))) {
					_case_begin_1abdb5d2a:;
					{
						_13313_sawdigits=true;
						(_13413_nd)++;
						if ((_13513_ndMant < _12313_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_1dc23c88b_lower(_13813_c) - 'a') + 10LLU));
							(_13513_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1abdb0374;
					}
				}
				_match_end_1abdb5ac7:;
			};
			goto _iter_end_1abdb0374;
		}
	_iter_next_1abdb0374:;
	}
	_iter_end_1abdb0374:;;
	_julec_label_1abdba55a:;
	if ((!(_13313_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_13213_sawdot))) {
		_13613_dp=_13413_nd;
	};
	if ((_12213_base == 16LLU)) {
		_13613_dp*=4LL;
		_13513_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_1dc23c88b_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _12413_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I64 _20117_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_20117_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _21117_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1abdbd7b1;
				};
				if ((_21117_e < 10000LL)) {
					_21117_e=static_cast<jule::I64>((((_21117_e * 10LL) + static_cast<jule::I64>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0'));
				};
			}
		_iter_next_1abdbd7b1:;
		}
		_iter_end_1abdbd7b1:;;
		_13613_dp+=(_21117_e * _20117_esign);
	} else if ((_12213_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=static_cast<jule::I64>((_13613_dp - _13513_ndMant));
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1dc2437d7_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48616_mantissa >> _1dc237798_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(static_cast<jule::F64>(_48616_mantissa));
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F64>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_1abdc70e4:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_1abdc716b:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1dc242b7c_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((__jule_func_result.__jule_result_arg0 * _1dc242b7c_f64pow10[_48635_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_1abdc71e3:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(jule::div(__jule_func_result.__jule_result_arg0,_1dc242b7c_f64pow10[(-(_48635_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1abdc6a94:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1dc243c16_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_52016_mantissa >> _1dc23748a_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(static_cast<jule::F32>(_52016_mantissa));
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F32>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_1abdcb4d3:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_1abdcb55a:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1dc242ebd_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>((__jule_func_result.__jule_result_arg0 * _1dc242ebd_f32pow10[_52035_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_1abdcb5d2:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(jule::div(__jule_func_result.__jule_result_arg0,_1dc242ebd_f32pow10[(-(_52035_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1abdcae83:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__22257de2d_ConvError _1dc2442aa_atofHex(_1dc23708e_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__22257de2d_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I64 _5579_maxExp = ((static_cast<jule::I64>((1LL << (*(_55613_flt))._field_expbits)) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I64 _5589_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I64>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && ((_55633_mantissa >> ((*(_55613_flt))._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55633_mantissa<<=1LLU;
			(_55652_exp)--;
		}
	_iter_next_1abdd0927:;
	}
	_iter_end_1abdd0927:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while (((_55633_mantissa >> ((1LLU + (*(_55613_flt))._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55633_mantissa=static_cast<jule::U64>(((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU)));
			(_55652_exp)++;
		}
	_iter_next_1abdd26b5:;
	}
	_iter_end_1abdd26b5:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5589_minExp - 2LL)))) {
		{
			_55633_mantissa=static_cast<jule::U64>(((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU)));
			(_55652_exp)++;
		}
	_iter_next_1abdd24b7:;
	}
	_iter_end_1abdd24b7:;;
	jule::U64 _58813_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa>>=2LLU;
	_58813_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_58813_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == (1LLU << (1LLU + (*(_55613_flt))._field_mantbits)))) {
			_55633_mantissa>>=1LLU;
			(_55652_exp)++;
		};
	};
	if (((_55633_mantissa >> (*(_55613_flt))._field_mantbits) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I64 _60313_err = static_cast<jule::I64>(0LL);;
	if ((_55652_exp > _5579_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << (*(_55613_flt))._field_mantbits)));
		_55652_exp=static_cast<jule::I64>((_5579_maxExp + 1LL));
		_60313_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _61013_bits = (_55633_mantissa & ((1LLU << (*(_55613_flt))._field_mantbits) - 1LLU));;
	_61013_bits|=(static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_55613_flt))._field_expbits) - 1LL)))) << (*(_55613_flt))._field_mantbits);
	if (_55662_neg) {
		_61013_bits|=((1LLU << (*(_55613_flt))._field_mantbits) << (*(_55613_flt))._field_expbits);
	};
	if (((*(_55613_flt)) == _1dc23748a_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_206dc2c54_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_61013_bits)))));
		__jule_func_result.__jule_result_arg1 = _60313_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_206dc335e_F64FromBits(_61013_bits));
	__jule_func_result.__jule_result_arg1 = _60313_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__22257de2d_ConvError _1dc244684_atof32(jule::Str* _62112_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__22257de2d_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _62314_val = 0;;
		jule::I64 _62319__n = 0;;
		jule::Bool _62323_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dc24198e_special(_22050c4b8_Stobs(_62112_s));
			_62314_val = __jule_assign_result.__jule_result_arg0;
			_62319__n = __jule_assign_result.__jule_result_arg1;
			_62323_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62323_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_62314_val));
			__jule_func_result.__jule_result_arg1 = _62319__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _62910_mantissa = 0;;
	jule::I64 _62920_exp = 0;;
	jule::Bool _62925_neg = false;;
	jule::Bool _62930_trunc = false;;
	jule::Bool _62937_hex = false;;
	jule::I64 _62942__n = 0;;
	jule::Bool _62950_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dc241c58_readFloat(_62112_s);
		_62910_mantissa = __jule_assign_result.__jule_result_arg0;
		_62920_exp = __jule_assign_result.__jule_result_arg1;
		_62925_neg = __jule_assign_result.__jule_result_arg2;
		_62930_trunc = __jule_assign_result.__jule_result_arg3;
		_62937_hex = __jule_assign_result.__jule_result_arg4;
		_62942__n = __jule_assign_result.__jule_result_arg5;
		_62950_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62942__n;
	if ((!(_62950_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_62937_hex) {
		jule::F64 _63617_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__22257de2d_ConvError __jule_assign_result = _1dc2442aa_atofHex(&(_1dc23748a_f32info), _62910_mantissa, _62920_exp, _62925_neg, _62930_trunc);
			_63617_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_63617_ff));
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62930_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1dc243c16_atof32exact(_62910_mantissa, _62920_exp, _62925_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62950_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62950_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1dc23e827_eiselLemire32(_62910_mantissa, _62920_exp, _62925_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62950_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62950_ok) {
			if ((!(_62930_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _65821_fUp = 0.0f;;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1dc23e827_eiselLemire32(static_cast<jule::U64>((_62910_mantissa + 1LLU)), _62920_exp, _62925_neg);
				_65821_fUp = __jule_assign_result.__jule_result_arg0;
				_62950_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62950_ok && (__jule_func_result.__jule_result_arg0 == _65821_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1dc24aa31_decimal _66713_d = _1dc24aa31_decimal{};;
	if ((!(_1dc2423eb_set(&_66713_d, _22050c4b8_Stobs(_62112_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _67110_b = 0;;
	jule::Bool _67113_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1dc24273c_floatBits(&_66713_d, &(_1dc23748a_f32info));
		_67110_b = __jule_assign_result.__jule_result_arg0;
		_67113_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_206dc2c54_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_67110_b))));
	if (_67113_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__22257de2d_ConvError _1dc24494d_atof64(jule::Str* _67912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__22257de2d_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _68114_val = 0;;
		jule::I64 _68119__n = 0;;
		jule::Bool _68123_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dc24198e_special(_22050c4b8_Stobs(_67912_s));
			_68114_val = __jule_assign_result.__jule_result_arg0;
			_68119__n = __jule_assign_result.__jule_result_arg1;
			_68123_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68123_ok) {
			__jule_func_result.__jule_result_arg0 = _68114_val;
			__jule_func_result.__jule_result_arg1 = _68119__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _68710_mantissa = 0;;
	jule::I64 _68720_exp = 0;;
	jule::Bool _68725_neg = false;;
	jule::Bool _68730_trunc = false;;
	jule::Bool _68737_hex = false;;
	jule::I64 _68742__n = 0;;
	jule::Bool _68750_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dc241c58_readFloat(_67912_s);
		_68710_mantissa = __jule_assign_result.__jule_result_arg0;
		_68720_exp = __jule_assign_result.__jule_result_arg1;
		_68725_neg = __jule_assign_result.__jule_result_arg2;
		_68730_trunc = __jule_assign_result.__jule_result_arg3;
		_68737_hex = __jule_assign_result.__jule_result_arg4;
		_68742__n = __jule_assign_result.__jule_result_arg5;
		_68750_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68742__n;
	if ((!(_68750_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_68737_hex) {
		({
			__jule_tuple_f64__jule_tuple__22257de2d_ConvError __jule_assign_result = _1dc2442aa_atofHex(&(_1dc237798_f64info), _68710_mantissa, _68720_exp, _68725_neg, _68730_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68730_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1dc2437d7_atof64exact(_68710_mantissa, _68720_exp, _68725_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68750_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68750_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1dc23e3d7_eiselLemire64(_68710_mantissa, _68720_exp, _68725_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68750_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68750_ok) {
			if ((!(_68730_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _71521_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1dc23e3d7_eiselLemire64(static_cast<jule::U64>((_68710_mantissa + 1LLU)), _68720_exp, _68725_neg);
				_71521_fUp = __jule_assign_result.__jule_result_arg0;
				_68750_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68750_ok && (__jule_func_result.__jule_result_arg0 == _71521_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1dc24aa31_decimal _72413_d = _1dc24aa31_decimal{};;
	if ((!(_1dc2423eb_set(&_72413_d, _22050c4b8_Stobs(_67912_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _72810_b = 0;;
	jule::Bool _72813_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1dc24273c_floatBits(&_72413_d, &(_1dc237798_f64info));
		_72810_b = __jule_assign_result.__jule_result_arg0;
		_72813_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_206dc335e_F64FromBits(_72810_b));
	if (_72813_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__22257de2d_ConvError _1dc244cc2_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__22257de2d_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _73814_f = 0;;
		jule::I64 _73817_n = 0;;
		jule::I64 _73820_err = 0LL;;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__22257de2d_ConvError __jule_assign_result = _1dc244684_atof32(_73622_s);
			_73814_f = __jule_assign_result.__jule_result_arg0;
			_73817_n = __jule_assign_result.__jule_result_arg1;
			_73820_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_73814_f));
		__jule_func_result.__jule_result_arg1 = _73817_n;
		__jule_func_result.__jule_result_arg2 = _73820_err;
		return __jule_func_result;;
	};
	jule::F64 _74110_f = 0;;
	jule::I64 _74113_n = 0;;
	jule::I64 _74116_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__22257de2d_ConvError __jule_assign_result = _1dc24494d_atof64(_73622_s);
		_74110_f = __jule_assign_result.__jule_result_arg0;
		_74113_n = __jule_assign_result.__jule_result_arg1;
		_74116_err = __jule_assign_result.__jule_result_arg2;
	});
	__jule_func_result.__jule_result_arg0 = _74110_f;
	__jule_func_result.__jule_result_arg1 = _74113_n;
	__jule_func_result.__jule_result_arg2 = _74116_err;
	return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1dc245146_ParseFloat(jule::Str _76915_s, jule::I64 _76923_bitSize) {
	jule::F64 _77010_f = 0;;
	jule::I64 _77013_n = 0;;
	jule::I64 _77016_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__22257de2d_ConvError __jule_assign_result = _1dc244cc2_parseFloatPrefix(&(_76915_s), _76923_bitSize);
		_77010_f = __jule_assign_result.__jule_result_arg0;
		_77013_n = __jule_assign_result.__jule_result_arg1;
		_77016_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_77013_n != _76915_s.len()) && ((_77016_err == static_cast<jule::I64>(0LL)) || (_77016_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
	};
	if ((_77016_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(jule::Any(_77016_err, &__jule_any_type0));
	};
	return jule::Exceptional<jule::F64>(jule::Any(), _77010_f);;
}



inline void _1dc24594e_ryuFtoaFixed32(_1dc237c3d_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _6213_e2 = _4956_exp;;
	jule::I64 _639_b = _1dc1e8a9a_Len32(_4945_mant);;
	if ((_639_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I64>(_639_b) - 25LL);
	};
	jule::I64 _749_q = (((-(_1dc246ed3_mulByLog2Log10(static_cast<jule::I64>((_6213_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di = 0;;
	jule::I64 _8118_dexp2 = 0;;
	jule::Bool _8129_d0 = false;;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dc248897_mult64bitPow10(_4945_mant, _6213_e2, _749_q);
		_8114_di = __jule_assign_result.__jule_result_arg0;
		_8118_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8129_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _1dc24914a_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)), static_cast<jule::I64>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U64 _949_extra = static_cast<jule::U64>((-(_8118_dexp2)));;
	jule::U32 _959_extraMask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	({
		jule::U32 ___jule_assign_arg = static_cast<jule::U32>((_8114_di >> _949_extra));
		jule::U32 _1___jule_assign_arg = static_cast<jule::U32>((_8114_di & _959_extraMask));
		_8114_di = ___jule_assign_arg;
		_9713_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _9913_roundUp = false;;
	if (_7913_exact) {
		_9913_roundUp=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_roundUp=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_1dc246741_formatDecimal(_4924_d, static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)), (!(_8129_d0)), _9913_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_749_q;
}



inline void _1dc245de4_ryuFtoaFixed64(_1dc237c3d_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _13113_e2 = _12156_exp;;
	jule::I64 _1329_b = _1dc1e8d64_Len64(_12145_mant);;
	if ((_1329_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U64>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I64>(_1329_b) - 55LL);
	};
	jule::I64 _1469_q = (((-(_1dc246ed3_mulByLog2Log10(static_cast<jule::I64>((_13113_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di = 0;;
	jule::I64 _15318_dexp2 = 0;;
	jule::Bool _15329_d0 = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dc248cc6_mult128bitPow10(_12145_mant, _13113_e2, _1469_q);
		_15314_di = __jule_assign_result.__jule_result_arg0;
		_15318_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15329_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _1dc24914a_divisibleByPow5(_12145_mant, static_cast<jule::I64>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U64 _1669_extra = static_cast<jule::U64>((-(_15318_dexp2)));;
	jule::U64 _1679_extraMask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_15314_di >> _1669_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_15314_di & _1679_extraMask));
		_15314_di = ___jule_assign_arg;
		_16913_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _17113_roundUp = false;;
	if (_15113_exact) {
		_17113_roundUp=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_roundUp=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_1dc246741_formatDecimal(_12124_d, _15314_di, (!(_15329_d0)), _17113_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1469_q;
}



inline void _1dc246741_formatDecimal(_1dc237c3d_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2019_max = _1dc246235_u64pow10[_20088_prec];;
	jule::I64 _20213_trimmed = 0LL;;
	while ((_20044_m >= _2019_max)) {
		{
			jule::U64 _20414_a = 0;;
			jule::U64 _20417_b = 0;;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_20414_a = ___jule_assign_arg;
				_20417_b = _1___jule_assign_arg;
			});
			_20044_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20417_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1abe176ea:;
	}
	_iter_end_1abe176ea:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2019_max)) {
		_20044_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U64 _22913_n = static_cast<jule::U64>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20088_prec));
	jule::U64 _23113_v = _20044_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU)));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL)));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_23113_v / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_23113_v % 100LL));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			};
			_22913_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I64>((_22913_n + 1LLU))]=jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 1LLU))];
			(*(_20023_d))._field_d[static_cast<jule::I64>((_22913_n + 0LLU))]=jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 0LLU))];
			_23113_v=_23317_v1;
		}
	_iter_next_1abe1a1d1:;
	}
	_iter_end_1abe1a1d1:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_22913_n)]=jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23113_v) + 1LLU))];
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_22913_n)]=jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((2LL * _23113_v))];
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_1abe213b3:;
	}
	_iter_end_1abe213b3:;;
	(*(_20023_d))._field_dp=static_cast<jule::I64>(((*(_20023_d))._field_nd + _20213_trimmed));
}



inline void _1dc246c19_ryuFtoaShortest(_1dc237c3d_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1dc23708e_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1dc1e30e4_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_1dc247ce7_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _27310_ml = 0;;
	jule::U64 _27314_mc = 0;;
	jule::U64 _27318_mu = 0;;
	jule::I64 _27326_e2 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1dc2476cb_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_27310_ml = __jule_assign_result.__jule_result_arg0;
		_27314_mc = __jule_assign_result.__jule_result_arg1;
		_27318_mu = __jule_assign_result.__jule_result_arg2;
		_27326_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27326_e2 == 0LL)) {
		_1dc247ce7_ryuDigits(_26125_d, _27310_ml, _27314_mc, _27318_mu, true, false);
		return;;
	};
	jule::I64 _2799_q = (_1dc246ed3_mulByLog2Log10(static_cast<jule::I64>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if (((*(_26168_flt)) == _1dc23748a_f32info)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dc248897_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)), _27326_e2, _2799_q);
			_29017_dl32 = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dc248897_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)), _27326_e2, _2799_q);
			_29117_dc32 = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dc248897_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)), _27326_e2, _2799_q);
			_29217_du32 = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32));
			_28313_dl = ___jule_assign_arg;
			_28413_dc = _1___jule_assign_arg;
			_28513_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dc248cc6_mult128bitPow10(_27310_ml, _27326_e2, _2799_q);
			_28313_dl = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dc248cc6_mult128bitPow10(_27314_mc, _27326_e2, _2799_q);
			_28413_dc = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dc248cc6_mult128bitPow10(_27318_mu, _27326_e2, _2799_q);
			_28513_du = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_28613_dl0 = ___jule_assign_arg;
			_28713_dc0 = _1___jule_assign_arg;
			_28813_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_1dc24914a_divisibleByPow5(_27310_ml, static_cast<jule::I64>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_1dc24914a_divisibleByPow5(_27314_mc, static_cast<jule::I64>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_1dc24914a_divisibleByPow5(_27318_mu, static_cast<jule::I64>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U64 _3259_extra = static_cast<jule::U64>((-(_27326_e2)));;
	jule::U64 _3269_extraMask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28313_dl >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28313_dl & _3269_extraMask));
		_28313_dl = ___jule_assign_arg;
		_32813_fracl = _1___jule_assign_arg;
	});
	jule::U64 _33013_fracc = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28413_dc >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28413_dc & _3269_extraMask));
		_28413_dc = ___jule_assign_arg;
		_33013_fracc = _1___jule_assign_arg;
	});
	jule::U64 _33213_fracu = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28513_du >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28513_du & _3269_extraMask));
		_28513_du = ___jule_assign_arg;
		_33213_fracu = _1___jule_assign_arg;
	});
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_1dc247ce7_ryuDigits(_26125_d, _28313_dl, _28413_dc, _28513_du, _3669_c0, _34713_cup);
	(*(_26125_d))._field_dp-=_2799_q;
}



inline jule::I64 _1dc246ed3_mulByLog2Log10(jule::I64 _37719_x) {
	return static_cast<jule::I64>(((_37719_x * 78913LL) >> 18LL));;
}



inline jule::I64 _1dc24729c_mulByLog10Log2(jule::I64 _38719_x) {
	return static_cast<jule::I64>(((_38719_x * 108853LL) >> 15LL));;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1dc2476cb_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1dc23708e_floatInfo* _3966_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << (*(_3966_flt))._field_mantbits)) || (_39529_exp == (((*(_3966_flt))._field_bias + 1LL) - static_cast<jule::I64>((*(_3966_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((2LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) + 1LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 1LL));
	} else {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((4LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) + 2LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 2LL));
	};
	return __jule_func_result;;
}



inline void _1dc247ce7_ryuDigits(_1dc237c3d_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _41014_lhi = 0;;
	jule::U32 _41019_llo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1dc249414_divmod1e9(_40936_lower);
		_41014_lhi = __jule_assign_result.__jule_result_arg0;
		_41019_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41110_chi = 0;;
	jule::U32 _41115_clo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1dc249414_divmod1e9(_40948_central);
		_41110_chi = __jule_assign_result.__jule_result_arg0;
		_41115_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41210_uhi = 0;;
	jule::U32 _41215_ulo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1dc249414_divmod1e9(_40962_upper);
		_41210_uhi = __jule_assign_result.__jule_result_arg0;
		_41215_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_41210_uhi == 0LLU)) {
		_1dc248468_ryuDigits32(_40919_d, _41019_llo, _41115_clo, _41215_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41115_clo == 0LLU));
		_40992_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40992_cup));
		_1dc248468_ryuDigits32(_40919_d, _41014_lhi, _41110_chi, _41210_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U64 _42817_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = 0;;
				jule::U32 _43122_v2 = 0;;
				({
					jule::U32 ___jule_assign_arg = (_42917_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_42917_v % 10LL);
					_43118_v1 = ___jule_assign_arg;
					_43122_v2 = _1___jule_assign_arg;
				});
				_42917_v=_43118_v1;
				(_42817_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I64>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_1abe3e5ac:;
		}
		_iter_end_1abe3e5ac:;;
		(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(static_cast<jule::I64>(_42817_n));
		(*(_40919_d))._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42817_n)));
		_1dc248468_ryuDigits32(_40919_d, _41019_llo, _41115_clo, _41215_ulo, _40978_c0, _40992_cup, static_cast<jule::I64>(((*(_40919_d))._field_nd + 8LL)));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1abe4211a:;
	}
	_iter_end_1abe4211a:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(1LL);
		}
	_iter_next_1abe42b32:;
	}
	_iter_end_1abe42b32:;;
}



inline void _1dc248468_ryuDigits32(_1dc237c3d_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		(*(_45421_d))._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _46013_trimmed = 0LL;;
	jule::I64 _46313_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = 0;;
			jule::U32 _47125_cdigit = 0;;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_47118_c = ___jule_assign_arg;
				_47125_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_1abe44947;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_cNextDigit == 0LL));
			_46313_cNextDigit=static_cast<jule::I64>(static_cast<jule::I64>(_47125_cdigit));
			({
				jule::U32 ___jule_assign_arg = _47013_l;
				jule::U32 _1___jule_assign_arg = _47118_c;
				jule::U32 _2___jule_assign_arg = _47213_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4559_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1abe44947:;
	}
	_iter_end_1abe44947:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_cNextDigit > 5LL) || ((_46313_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_46313_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45458_central;;
	jule::I64 _51013_n = _45554_endindex;;
	while ((_51013_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _51214_v1 = 0;;
			jule::U32 _51218_v2 = 0;;
			({
				jule::U32 ___jule_assign_arg = (_50913_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_50913_v % 100LL);
				_51214_v1 = ___jule_assign_arg;
				_51218_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_51013_n]=jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 1LLU))];
			(*(_45421_d))._field_d[(_51013_n - 1LL)]=jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 0LLU))];
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_1abe4ad05:;
	}
	_iter_end_1abe4ad05:;;
	if ((_51013_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	(*(_45421_d))._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	(*(_45421_d))._field_dp=static_cast<jule::I64>(((*(_45421_d))._field_nd + _46013_trimmed));
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1dc248897_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_53419_m << 6LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_53431_e2 - 6LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _1dc240240_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi = 0;;
	jule::U64 _54814_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dc1eb40a_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)), _54313_pow);
		_54810_hi = __jule_assign_result.__jule_result_arg0;
		_54814_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1dc24729c_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_54814_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1dc248cc6_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>((_56220_m << 8LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_56232_e2 - 8LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _1dc240240_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1dc24729c_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _57910_l1 = 0;;
	jule::U64 _57914_l0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dc1eb40a_Mul64(_56220_m, _57113_pow[0LL]);
		_57910_l1 = __jule_assign_result.__jule_result_arg0;
		_57914_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58014_h1 = 0;;
	jule::U64 _58018_h0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dc1eb40a_Mul64(_56220_m, _57113_pow[1LL]);
		_58014_h1 = __jule_assign_result.__jule_result_arg0;
		_58018_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58110_mid = 0;;
	jule::U64 _58115_carry = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dc1e9b01_Add64(_57910_l1, _58018_h0, 0LLU);
		_58110_mid = __jule_assign_result.__jule_result_arg0;
		_58115_carry = __jule_assign_result.__jule_result_arg1;
	});
	_58014_h1+=_58115_carry;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1dc24914a_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I64 _59013_i = 0LL;;
	for (; (_59013_i < _58632_k); (_59013_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m/=5LLU;
		}
	_iter_next_1abe59297:;
	}
	_iter_end_1abe59297:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1dc249414_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL)));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL)));
		return __jule_func_result;;
	};
}



inline void _1dc24c37e_trim(_1dc24aa31_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_1abe5c93d:;
	}
	_iter_end_1abe5c93d:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _1dc24c66a_rightShift(_1dc24aa31_decimal* _28420_a, jule::U64 _28432_k) {
	jule::I64 _28513_r = 0LL;;
	jule::I64 _28613_w = 0LL;;
	jule::U64 _28913_n = 0LLU;;
	for (; ((_28913_n >> _28432_k) == 0LLU); (_28513_r)++) {
		{
			if ((_28513_r >= (*(_28420_a))._field_nd)) {
				if ((_28913_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while (((_28913_n >> _28432_k) == 0LLU)) {
					{
						_28913_n=static_cast<jule::U64>((_28913_n * 10LLU));
						(_28513_r)++;
					}
				_iter_next_1abe611b1:;
				}
				_iter_end_1abe611b1:;;
				goto _iter_end_1abe5e610;
			};
			jule::U64 _30313_c = static_cast<jule::U64>((*(_28420_a))._field_d[_28513_r]);;
			_28913_n=static_cast<jule::U64>((((_28913_n * 10LLU) + _30313_c) - '0'));
		}
	_iter_next_1abe5e610:;
	}
	_iter_end_1abe5e610:;;
	(*(_28420_a))._field_dp-=(_28513_r - 1LL);
	jule::U64 _3089_mask = static_cast<jule::U64>((static_cast<jule::U64>((1LL << _28432_k)) - 1LLU));;
	for (; (_28513_r < (*(_28420_a))._field_nd); (_28513_r)++) {
		{
			jule::U64 _31213_c = static_cast<jule::U64>((*(_28420_a))._field_d[_28513_r]);;
			jule::U64 _31313_dig = (_28913_n >> _28432_k);;
			_28913_n&=_3089_mask;
			(*(_28420_a))._field_d[_28613_w]=static_cast<jule::U8>(static_cast<jule::U8>((_31313_dig + '0')));
			(_28613_w)++;
			_28913_n=static_cast<jule::U64>((((_28913_n * 10LLU) + _31213_c) - '0'));
		}
	_iter_next_1abe62b63:;
	}
	_iter_end_1abe62b63:;;
	while ((_28913_n > 0LLU)) {
		{
			jule::U64 _32213_dig = (_28913_n >> _28432_k);;
			_28913_n&=_3089_mask;
			if ((_28613_w < 800LL)) {
				(*(_28420_a))._field_d[_28613_w]=static_cast<jule::U8>(static_cast<jule::U8>((_32213_dig + '0')));
				(_28613_w)++;
			} else if ((_32213_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_28913_n=static_cast<jule::U64>((_28913_n * 10LLU));
		}
	_iter_next_1abe63317:;
	}
	_iter_end_1abe63317:;;
	(*(_28420_a))._field_nd=_28613_w;
	_1dc24c37e_trim(_28420_a);
}



inline jule::Bool _1dc24cb21_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s) {
	jule::I64 _33913_i = 0LL;;
	for (; (_33913_i < (*(_33846_s)).len()); (_33913_i)++) {
		{
			if ((_33913_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_33913_i] != (*(_33846_s))[_33913_i])) {
				return (_33821_b[_33913_i] < (*(_33846_s))[_33913_i]);;
			};
		}
	_iter_next_1abe67283:;
	}
	_iter_end_1abe67283:;;
	return false;;
}



inline void _1dc24cdc9_leftShift(_1dc24aa31_decimal* _35219_a, jule::U64 _35231_k) {
	jule::I64 _35313_delta = _1dc24a437_leftCheats[static_cast<jule::I64>(_35231_k)]._field_delta;;
	if (_1dc24cb21_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &(_1dc24a437_leftCheats[static_cast<jule::I64>(_35231_k)]._field_cutoff))) {
		(_35313_delta)--;
	};
	jule::I64 _35813_r = (*(_35219_a))._field_nd;;
	jule::I64 _35913_w = ((*(_35219_a))._field_nd + _35313_delta);;
	jule::U64 _36213_n = 0LLU;;
	(_35813_r)--;
	for (; (_35813_r >= 0LL); (_35813_r)--) {
		{
			_36213_n+=((static_cast<jule::U64>((*(_35219_a))._field_d[_35813_r]) - '0') << _35231_k);
			jule::U64 _36613_quo = (_36213_n / 10LLU);;
			jule::U64 _36713_rem = (_36213_n - (10LLU * _36613_quo));;
			(_35913_w)--;
			if ((_35913_w < 800LL)) {
				(*(_35219_a))._field_d[_35913_w]=static_cast<jule::U8>(static_cast<jule::U8>((_36713_rem + '0')));
			} else if ((_36713_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_36213_n=_36613_quo;
		}
	_iter_next_1abe6a6c6:;
	}
	_iter_end_1abe6a6c6:;;
	while ((_36213_n > 0LLU)) {
		{
			jule::U64 _37913_quo = (_36213_n / 10LLU);;
			jule::U64 _38013_rem = (_36213_n - (10LLU * _37913_quo));;
			(_35913_w)--;
			if ((_35913_w < 800LL)) {
				(*(_35219_a))._field_d[_35913_w]=static_cast<jule::U8>(static_cast<jule::U8>((_38013_rem + '0')));
			} else if ((_38013_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_36213_n=_37913_quo;
		}
	_iter_next_1abe6ab9e:;
	}
	_iter_end_1abe6ab9e:;;
	(*(_35219_a))._field_nd+=_35313_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_35313_delta;
	_1dc24c37e_trim(_35219_a);
}



inline jule::Bool _1dc24d24d_shouldRoundUp(_1dc24aa31_decimal* _39919_a, jule::I64 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && ((((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _1dc24e8d1_FmtUint(jule::U64 _6012_i, jule::I64 _6020_base) {
	if (((true && (_6012_i < 100LLU)) && (_6020_base == 10LL))) {
		return _1dc2503a4_small(static_cast<jule::I64>(static_cast<jule::I64>(_6012_i)));;
	};
	jule::Str _6413_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1dc250c12_fmtBits(nullptr, _6012_i, _6020_base, false, false);
		_6413_s = __jule_assign_result.__jule_result_arg1;
	});
	return _6413_s;;
}



inline jule::Str _1dc24ec99_FmtInt(jule::I64 _7111_i, jule::I64 _7119_base) {
	if ((((true && (0LL <= _7111_i)) && (_7111_i < 100LL)) && (_7119_base == 10LL))) {
		return _1dc2503a4_small(static_cast<jule::I64>(static_cast<jule::I64>(_7111_i)));;
	};
	jule::Str _7513_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1dc250c12_fmtBits(nullptr, static_cast<jule::U64>(static_cast<jule::U64>(_7111_i)), _7119_base, (_7111_i < 0LL), false);
		_7513_s = __jule_assign_result.__jule_result_arg1;
	});
	return _7513_s;;
}



inline jule::Str _1dc250063_Itoa(jule::I64 _809_i) {
	return _1dc24ec99_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_809_i)), 10LL);;
}



inline jule::Str _1dc2503a4_small(jule::I64 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i, (_8510_i + 1LL));;
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU), ((_8510_i << 1LLU) + 2LL));;
}



inline jule::Bool _1dc25066d_isPowerOfTwo(jule::I64 _9217_x) {
	return ((_9217_x & (_9217_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _1dc250c12_fmtBits(jule::Slice<jule::U8> _10116_dst, jule::U64 _10133_u, jule::I64 _10141_base, jule::Bool _10152_neg, jule::Bool _10163_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10141_base < 2LL) || (_10141_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I64 _10813_i = _10713_a.len();;
	if (_10152_neg) {
		_10133_u=static_cast<jule::U64>((-(_10133_u)));
	};
	if ((_10141_base == 10LL)) {
		;
		jule::U64 _14917_us = static_cast<jule::U64>(_10133_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U64 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 1LLU))];
				_10713_a[(_10813_i + 0LL)]=jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 0LLU))];
			}
		_iter_next_1abea504b:;
		}
		_iter_end_1abea504b:;;
		jule::U64 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15913_is + 1LLU))];
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_15913_is)];
		};
	} else if (_1dc25066d_isPowerOfTwo(_10141_base)) {
		jule::U64 _17413_shift = (static_cast<jule::U64>(_1dc1e23bd_TrailingZeros(static_cast<jule::U64>(static_cast<jule::U64>(_10141_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10141_base);;
		jule::U64 _17613_m = (static_cast<jule::U64>(_10141_base) - 1LLU);;
		while ((_10133_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>((static_cast<jule::U64>(_10133_u) & _17613_m))];
				_10133_u>>=_17413_shift;
			}
		_iter_next_1abead20d:;
		}
		_iter_end_1abead20d:;;
		(_10813_i)--;
		_10713_a[_10813_i]=jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))];
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10141_base);;
		while ((_10133_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10133_u,_18713_b);;
				_10713_a[_10813_i]=jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>((_10133_u - (_19317_q * _18713_b))))];
				_10133_u=_19317_q;
			}
		_iter_next_1abead97d:;
		}
		_iter_end_1abead97d:;;
		(_10813_i)--;
		_10713_a[_10813_i]=jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))];
	};
	if (_10152_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10163_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10116_dst,_10713_a.slice(_10813_i));
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return __jule_func_result;;
}



inline jule::Str _1dc25220d_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1abec7612:;
			{
				return _1dc251707_SysInt;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1abec7678:;
			{
				return _1dc2519c1_SysUint;;
			}
		}
		else {
			_case_begin_1abec70c3:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1abec47eb:;
	};
}



inline jule::I64 _1dc2524c7_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1abec8778:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_1abec88aa:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_1abec8921:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_1abec8987:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1abec89ed:;
			{
				return _1dc2513e9_BitSize;;
			}
		}
		else {
			_case_begin_1abec838d:;
			{
				return -1LL;;
			}
		}
		_match_end_1abec8327:;
	};
}



inline jule::Str _1dc252818_IntFromBits(jule::I64 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1abeca439:;
			{
				return jule::Str("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1abecad41:;
			{
				return jule::Str("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1abecada7:;
			{
				return jule::Str("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1abecae1d:;
			{
				return jule::Str("i64", 3);;
			}
		}
		else {
			_case_begin_1abeca8ce:;
			{
				return jule::Str();;
			}
		}
		_match_end_1abeca868:;
	};
}



inline jule::Str _1dc252ad2_UintFromBits(jule::I64 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1abecb1c6:;
			{
				return jule::Str("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1abecc0b7:;
			{
				return jule::Str("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1abecc12d:;
			{
				return jule::Str("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1abecc194:;
			{
				return jule::Str("u64", 3);;
			}
		}
		else {
			_case_begin_1abecba67:;
			{
				return jule::Str();;
			}
		}
		_match_end_1abecba01:;
	};
}



inline jule::Str _1dc252d9b_FloatFromBits(jule::I64 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1abecc45d:;
			{
				return jule::Str("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1abecd34e:;
			{
				return jule::Str("f64", 3);;
			}
		}
		else {
			_case_begin_1abecccee:;
			{
				return jule::Str();;
			}
		}
		_match_end_1abeccc88:;
	};
}



inline jule::Bool _1dc2539e5_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit) {
	({
		auto except = _1dc245146_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I64 _1dc253cae_BitsizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1abed3211:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1abed2b28:;
			{
				return 64LLU;;
			}
		}
		_match_end_1abed171a:;
	};
}



inline jule::I64 _1dc254078_BitsizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1abed3e9d:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1abed4058:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1abed40be:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1abed34db:;
			{
				return 64LLU;;
			}
		}
		_match_end_1abed3a5d:;
	};
}



inline jule::I64 _1dc254342_BitsizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1abed5a0a:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1abed5ab5:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1abed5b2b:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1abed54bb:;
			{
				return 64LLU;;
			}
		}
		_match_end_1abed50ae:;
	};
}



inline void _1dc2544b8_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _221a30611_Arch };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_1abed6973:;
				{
					_1dc2513e9_BitSize=64LLU;
					_1dc251707_SysInt=jule::Str("i64", 3);
					_1dc2519c1_SysUint=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_1abed6a0b:;
				{
					_1dc2513e9_BitSize=32LLU;
					_1dc251707_SysInt=jule::Str("i32", 3);
					_1dc2519c1_SysUint=jule::Str("u32", 3);
				}
			}
			_match_end_1abed68eb:;
		};
	};
}



inline void _1dc25463e_init(void) {
	_1dc2544b8_UpdateTarget();
}



inline jule::I64 _1dc25849a_MinI(jule::Str _6113_k) {
	_6113_k=_1dc25220d_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1abed5ca2:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1abed8b62:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1abed8bc8:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1abed8c3e:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1abed5dd4:;
			{
				return 0LL;;
			}
		}
		_match_end_1abed5d7e:;
	};
}



inline jule::I64 _1dc2587a8_MaxI(jule::Str _7913_k) {
	_7913_k=_1dc25220d_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1abed8ed6:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1abeda26d:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1abeda2d4:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1abeda34a:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1abed98ee:;
			{
				return 0LL;;
			}
		}
		_match_end_1abeda108:;
	};
}



inline jule::U64 _1dc258a72_MaxU(jule::Str _9713_k) {
	_9713_k=_1dc25220d_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1abeda5e2:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1abedb879:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1abedb8e0:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1abedb956:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1abedb00a:;
			{
				return 0LLU;;
			}
		}
		_match_end_1abedb714:;
	};
}



inline jule::F64 _1dc258ca3_Min(jule::Str _11512_k) {
	_11512_k=_1dc25220d_RealKindOf(_11512_k);
	jule::I64 _1179_i = _1dc25849a_MinI(_11512_k);;
	if ((_1179_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1179_i));;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1abede030:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1abedd969:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1abedd3e7:;
			{
				return 0LL;;
			}
		}
		_match_end_1abedd6b1:;
	};
}



inline jule::F64 _1dc25906c_Max(jule::Str _13312_k) {
	_13312_k=_1dc25220d_RealKindOf(_13312_k);
	jule::I64 _1359_i = _1dc2587a8_MaxI(_13312_k);;
	if ((_1359_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1359_i));;
	};
	jule::U64 _1399_u = _1dc258a72_MaxU(_13312_k);;
	if ((_1399_u != 0LLU)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1399_u));;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1abee1395:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1abee0cce:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1abee0718:;
			{
				return 0LL;;
			}
		}
		_match_end_1abee0a26:;
	};
}



inline jule::Bool _1dc2594e0_IsI8Compatible(jule::Str _623_k) {
	return _623_k.equal("i8", 2);;
}



inline jule::Bool _1dc2597ed_IsI16Compatible(jule::Str _1124_k) {
	return (_1124_k.equal("i8", 2) || _1124_k.equal("i16", 3));;
}



inline jule::Bool _1dc259ab7_IsI32Compatible(jule::Str _1724_k) {
	return (((_1724_k.equal("i8", 2) || _1724_k.equal("i16", 3)) || _1724_k.equal("i32", 3)) || _1724_k.equal("u8", 2));;
}



inline jule::Bool _1dc259e08_IsI64Compatible(jule::Str _2524_k) {
	return (((_2524_k.equal("i8", 2) || _2524_k.equal("i16", 3)) || _2524_k.equal("i32", 3)) || _2524_k.equal("i64", 3));;
}



inline jule::Bool _1dc25a1c2_IsU8Compatible(jule::Str _3323_k) {
	return _3323_k.equal("u8", 2);;
}



inline jule::Bool _1dc25a48b_IsU16Compatible(jule::Str _3824_k) {
	return (_3824_k.equal("u8", 2) || _3824_k.equal("u16", 3));;
}



inline jule::Bool _1dc25a755_IsU32Compatible(jule::Str _4324_k) {
	return ((_4324_k.equal("u8", 2) || _4324_k.equal("u16", 3)) || _4324_k.equal("u32", 3));;
}



inline jule::Bool _1dc25aaeb_IsU64Compatible(jule::Str _5024_k) {
	return (((_5024_k.equal("u8", 2) || _5024_k.equal("u16", 3)) || _5024_k.equal("u32", 3)) || _5024_k.equal("u64", 3));;
}



inline jule::Bool _1dc25adb5_IsF32Compatible(jule::Str _5824_k) {
	return _5824_k.equal("f32", 3);;
}



inline jule::Bool _1dc25b17e_IsF64Compatible(jule::Str _6324_k) {
	return _6324_k.equal("f64", 3);;
}



inline jule::Bool _1dc25b503_TypesAreCompatible(jule::Str _7027_k1, jule::Str _7036_k2) {
	{
		auto &_match_expr{ _7027_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1abee68b7:;
			{
				return true;;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1abee6bc5:;
			{
				return _7036_k2.equal("int", 3);;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1abee6e4a:;
			{
				return _7036_k2.equal("uintptr", 7);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1abee6eb1:;
			{
				return _7036_k2.equal("uint", 4);;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1abee7027:;
			{
				return _1dc2594e0_IsI8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1abee708d:;
			{
				return _1dc2597ed_IsI16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1abee719d:;
			{
				return _1dc259ab7_IsI32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1abee7214:;
			{
				return _1dc259e08_IsI64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1abee727a:;
			{
				return _1dc25a1c2_IsU8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1abee72e1:;
			{
				return _1dc25a48b_IsU16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1abee7368:;
			{
				return _1dc25a755_IsU32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1abee73e0:;
			{
				return _1dc25aaeb_IsU64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1abee7467:;
			{
				return _1dc25adb5_IsF32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1abee74de:;
			{
				return _1dc25b17e_IsF64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1abee7566:;
			{
				return _7036_k2.equal("bool", 4);;
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1abee75dd:;
			{
				return _7036_k2.equal("str", 3);;
			}
		}
		else {
			_case_begin_1abee6a2c:;
			{
				return false;;
			}
		}
		_match_end_1abee175d:;
	};
}



inline jule::Bool _1dc25b7bc_IsI16Greater(jule::Str _11021_k) {
	return _11021_k.equal("i8", 2);;
}



inline jule::Bool _1dc25ba86_IsI32Greater(jule::Str _11521_k) {
	return (_11521_k.equal("i8", 2) || _11521_k.equal("i16", 3));;
}



inline jule::Bool _1dc25bd50_IsI64Greater(jule::Str _12021_k) {
	return ((_12021_k.equal("i8", 2) || _12021_k.equal("i16", 3)) || _12021_k.equal("i32", 3));;
}



inline jule::Bool _1dc25c119_IsU16Greater(jule::Str _12721_k) {
	return _12721_k.equal("u8", 2);;
}



inline jule::Bool _1dc25c58c_IsU32Greater(jule::Str _13221_k) {
	return (_13221_k.equal("u8", 2) || _13221_k.equal("u16", 3));;
}



inline jule::Bool _1dc25c856_IsU64Greater(jule::Str _13821_k) {
	return ((_13821_k.equal("u8", 2) || _13821_k.equal("u16", 3)) || _13821_k.equal("u32", 3));;
}



inline jule::Bool _1dc25cb20_IsF32Greater(jule::Str _14517_k) {
	return (!_14517_k.equal("f64", 3));;
}



inline jule::Bool _1dc25cdd9_IsF64Greater(jule::Str _15017_k) {
	return true;;
}



inline jule::Bool _1dc25d25d_IsGreater(jule::Str _15518_k1, jule::Str _15527_k2) {
	{
		auto &_match_expr{ _15518_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1abeee6a0:;
			{
				return _1dc25e2b4_IsSigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1abeeea13:;
			{
				return _1dc25e5c2_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1abeeea8a:;
			{
				return _1dc25e5c2_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1abeeecdd:;
			{
				return _1dc25b7bc_IsI16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1abeeed65:;
			{
				return _1dc25ba86_IsI32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1abeeeddc:;
			{
				return _1dc25bd50_IsI64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1abeeee64:;
			{
				return _1dc25c119_IsU16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1ac000041:;
			{
				return _1dc25c58c_IsU32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1ac0000b8:;
			{
				return _1dc25c856_IsU64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1ac000140:;
			{
				return _1dc25cb20_IsF32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1ac0001b7:;
			{
				return _1dc25cdd9_IsF64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1ac00023e:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1abeee89d:;
			{
				return false;;
			}
		}
		_match_end_1abeee826:;
	};
}



inline jule::Bool _1dc25e2b4_IsSigInt(jule::Str _2717_k) {
	return ((((_2717_k.equal("i8", 2) || _2717_k.equal("i16", 3)) || _2717_k.equal("i32", 3)) || _2717_k.equal("i64", 3)) || _2717_k.equal("int", 3));;
}



inline jule::Bool _1dc25e5c2_IsUnsigInt(jule::Str _3619_k) {
	return (((((_3619_k.equal("u8", 2) || _3619_k.equal("u16", 3)) || _3619_k.equal("u32", 3)) || _3619_k.equal("u64", 3)) || _3619_k.equal("uint", 4)) || _3619_k.equal("uintptr", 7));;
}



inline jule::Bool _1dc25e88b_IsInt(jule::Str _4610_k) {
	return (_1dc25e2b4_IsSigInt(_4610_k) || _1dc25e5c2_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1dc25ebcc_IsFloat(jule::Str _5112_k) {
	return (_5112_k.equal("f32", 3) || _5112_k.equal("f64", 3));;
}



inline jule::Bool _1dc25ee96_IsNum(jule::Str _5610_k) {
	return (_1dc25e88b_IsInt(_5610_k) || _1dc25ebcc_IsFloat(_5610_k));;
}



inline jule::Bool _1dc260260_IsSigNum(jule::Str _6113_k) {
	return (_1dc25e2b4_IsSigInt(_6113_k) || _1dc25ebcc_IsFloat(_6113_k));;
}



inline void _1dc2695aa_lshiftUnsig(_1dc260590_Const* _59021_c, _1dc260590_Const* _59032_x) {
	jule::U64 _5919_l = _1dc262ebb_AsU64(_59021_c);;
	jule::U64 _5929_r = _1dc262ebb_AsU64(_59032_x);;
	_1dc2637b3_SetU64(_59021_c, static_cast<jule::U64>((_5919_l << _5929_r)));
}



inline void _1dc2698da_rshiftUnsig(_1dc260590_Const* _59621_c, _1dc260590_Const* _59632_x) {
	jule::U64 _5979_l = _1dc262ebb_AsU64(_59621_c);;
	jule::U64 _5989_r = _1dc262ebb_AsU64(_59632_x);;
	_1dc2637b3_SetU64(_59621_c, static_cast<jule::U64>((_5979_l >> _5989_r)));
}



inline jule::Bool _1c6284278_IsUnaryOp(jule::U64 _33414_id) {
	{
		auto expr = &(_1c61d99b4_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac188273:;
		if (it != expr_end) {
			jule::U64 *_33512_op = it;
			{
				if ((_33414_id == (*(_33512_op)))) {
					return true;;
				};
			}
			_iter_next_1ac188273:;
			++it;
			goto _iter_begin_1ac188273;
		}
		_iter_end_1ac188273:;
	};
	return false;;
}



inline jule::Bool _1c6284586_IsBinOp(jule::U64 _34412_id) {
	{
		auto expr = &(_1c61d9d05_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1885d6:;
		if (it != expr_end) {
			jule::U64 *_34512_op = it;
			{
				if ((_34412_id == (*(_34512_op)))) {
					return true;;
				};
			}
			_iter_next_1ac1885d6:;
			++it;
			goto _iter_begin_1ac1885d6;
		}
		_iter_end_1ac1885d6:;
	};
	return false;;
}



inline jule::Bool _1c6284b91_IsStr(jule::Str _36410_k) {
	return (!(_36410_k).empty() && ((_36410_k[0LL] == '\"') || _1c6284e5a_IsRawStr(_36410_k)));;
}



inline jule::Bool _1c6284e5a_IsRawStr(jule::Str _36713_k) {
	return (!(_36713_k).empty() && (_36713_k[0LL] == '`'));;
}



inline jule::Bool _1c6285224_IsRune(jule::Str _37111_k) {
	return (!(_37111_k).empty() && (_37111_k[0LL] == '\''));;
}



inline jule::Bool _1c6285b4d_IsFloat(jule::Str _38012_k) {
	if (_2218bcd3e_HasPrefix(_38012_k, jule::Str("0x", 2))) {
		return _2218c3aae_ContainsAny(_38012_k, jule::Str(".pP", 3));;
	};
	return _2218c3aae_ContainsAny(_38012_k, jule::Str(".eE", 3));;
}



inline jule::Bool _1c6285e17_IsNum(jule::Str _38810_k) {
	if ((_38810_k).empty()) {
		return false;;
	};
	jule::U8 _3939_b = _38810_k[0LL];;
	return ((_3939_b == '.') || (('0' <= _3939_b) && (_3939_b <= '9')));;
}



inline jule::Bool _1c628649a_IsIgnoreIdent(jule::Str _40318_ident) {
	return _40318_ident.equal("_", 1);;
}



inline jule::Bool _1c6286764_IsAnonIdent(jule::Str _40616_ident) {
	return _40616_ident.equal("<anonymous>", 11);;
}



inline jule::Bool _1c6286ce7_IsSpace(jule::I32 _41912_r) {
	{
		auto expr = &(_1c61d973e_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac190bb5:;
		if (it != expr_end) {
			jule::I32 *_42012_cr = it;
			{
				if ((_41912_r == (*(_42012_cr)))) {
					return true;;
				};
			}
			_iter_next_1ac190bb5:;
			++it;
			goto _iter_begin_1ac190bb5;
		}
		_iter_end_1ac190bb5:;
	};
	return false;;
}



inline jule::Bool _1c628726a_IsLetter(jule::I32 _42913_r) {
	return _221810a84_IsLetter(_42913_r);;
}



inline jule::Bool _1c62877ed_IsDecimal(jule::U8 _44914_b) {
	return (('0' <= _44914_b) && (_44914_b <= '9'));;
}



inline jule::Bool _1c6287ab7_IsBinary(jule::U8 _45213_b) {
	return ((_45213_b == '0') || (_45213_b == '1'));;
}



inline jule::Bool _1c6287d81_IsOctal(jule::U8 _45512_b) {
	return (('0' <= _45512_b) && (_45512_b <= '7'));;
}



inline jule::Bool _1c628814a_IsHex(jule::U8 _45810_b) {
	{
		
		if ((('0' <= _45810_b) && (_45810_b <= '9'))) {
			_case_begin_1ac1948de:;
			{
				return true;;
			}
		}
		else if ((('a' <= _45810_b) && (_45810_b <= 'f'))) {
			_case_begin_1ac194966:;
			{
				return true;;
			}
		}
		else if ((('A' <= _45810_b) && (_45810_b <= 'F'))) {
			_case_begin_1ac1949dd:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ac194823:;
			{
				return false;;
			}
		}
		_match_end_1ac193778:;
	};
}



inline jule::Bool _1c6288414_IsAssign(jule::U64 _47313_id) {
	return (((((((_47313_id == static_cast<jule::U64>(1LLU)) || (_47313_id == static_cast<jule::U64>(27LLU))) || (_47313_id == static_cast<jule::U64>(30LLU))) || (_47313_id == static_cast<jule::U64>(32LLU))) || (_47313_id == static_cast<jule::U64>(24LLU))) || (_47313_id == static_cast<jule::U64>(74LLU))) || (_47313_id == static_cast<jule::U64>(62LLU)));;
}



inline jule::Bool _1c62886cd_IsPostfixOp(jule::U64 _48416_id) {
	{
		auto expr = &(_1c627ceec_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1962e7:;
		if (it != expr_end) {
			jule::U64 *_48512_op = it;
			{
				if ((_48416_id == (*(_48512_op)))) {
					return true;;
				};
			}
			_iter_next_1ac1962e7:;
			++it;
			goto _iter_begin_1ac1962e7;
		}
		_iter_end_1ac1962e7:;
	};
	return false;;
}



inline jule::Bool _1c6288997_IsAssignOp(jule::U64 _49415_id) {
	if (_1c62886cd_IsPostfixOp(_49415_id)) {
		return true;;
	};
	{
		auto expr = &(_1c627d2e9_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1982e9:;
		if (it != expr_end) {
			jule::U64 *_49812_op = it;
			{
				if ((_49415_id == (*(_49812_op)))) {
					return true;;
				};
			}
			_iter_next_1ac1982e9:;
			++it;
			goto _iter_begin_1ac1982e9;
		}
		_iter_end_1ac1982e9:;
	};
	return false;;
}



inline jule::Ptr<_1c6289305_File> _1c628a69c_NewFileSet(jule::Str _5715_path) {
	return jule::new_ptr<_1c6289305_File>(_1c6289305_File{._field_Path=_5715_path, });;
}



inline _221968cb9_Log _1c628c1e8_makeErr(jule::I64 _10012_row, jule::I64 _10022_col, jule::Ptr<_1c6289305_File>* _10033_f, jule::Str _10043_fmt, jule::Slice<jule::Any> _10056_args) {
	return _221968cb9_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_10012_row, ._field_Column=_10022_col, ._field_Path=(*((*(_10033_f))))._field_Path, ._field_Text=_22196922b_Logf(_10043_fmt, _10056_args), };;
}



inline jule::Bool _1c628c5b1_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix) {
	if (((*(_11020_bytes)).len() < _11035_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11035_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1a3238:;
		if (it != expr_end) {
			jule::I64 _1149_i = it - expr->begin();
			{
				if (((*(_11020_bytes))[_1149_i] != _11035_prefix[_1149_i])) {
					return false;;
				};
			}
			_iter_next_1ac1a3238:;
			++it;
			_1149_i++;
			goto _iter_begin_1ac1a3238;
		}
		_iter_end_1ac1a3238:;
	};
	return true;;
}



inline jule::Str _1c628c935_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I64 _12232_i) {
	jule::Str __jule_func_result;
	(_12232_i)++;
	if ((_12232_i >= (*(_12215_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _12813_b = (*(_12215_txt))[_12232_i];;
	if ((_12813_b == '_')) {
		return __jule_func_result;;
	};
	if (((_12813_b == '+') || (_12813_b == '-'))) {
		(_12232_i)++;
		if ((_12232_i >= (*(_12215_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12215_txt))[_12232_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I64 _1429_first = _12232_i;;
	for (; (_12232_i < (*(_12215_txt)).len()); (_12232_i)++) {
		{
			_12813_b=(*(_12215_txt))[_12232_i];
			if (((_12813_b != '_') && (!(_1c62877ed_IsDecimal(_12813_b))))) {
				goto _iter_end_1ac1a52a1;
			};
		}
	_iter_next_1ac1a52a1:;
	}
	_iter_end_1ac1a52a1:;;
	if ((_12232_i == _1429_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_12215_txt)).slice(0LL, _12232_i));
	return __jule_func_result;;
}



inline jule::Str _1c628cced_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I64 _15628_i) {
	return _1c628c935_floatFmtE(_15615_txt, _15628_i);;
}



inline jule::Str _1c628d172_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I64 _16036_i) {
	if (((*(_16019_txt))[_16036_i] != '.')) {
		return jule::Str();;
	};
	(_16036_i)++;
	_julec_label_1ac1a8062:;
	for (; (_16036_i < (*(_16019_txt)).len()); (_16036_i)++) {
		{
			jule::U8 _16813_b = (*(_16019_txt))[_16036_i];;
			{
				
				if ((_16813_b == '_') || _1c62877ed_IsDecimal(_16813_b)) {
					_case_begin_1ac1a8b23:;
					{
						goto _iter_next_1ac1a7ea7;
					}
				}
				else if (_1c628ea7a_isFloatFmtP(_16813_b, _16036_i)) {
					_case_begin_1ac1a8b9a:;
					{
						return _1c628cced_floatFmtP(_16019_txt, _16036_i);;
					}
				}
				else {
					_case_begin_1ac1a8a57:;
					{
						goto _iter_end_1ac1a7ea7;
					}
				}
				_match_end_1ac1a8a02:;
			};
		}
	_iter_next_1ac1a7ea7:;
	}
	_iter_end_1ac1a7ea7:;;
	return jule::Str();;
}



inline jule::Str _1c628d4e6_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I64 _18136_i) {
	_18136_i+=2LL;
	return _1c628c935_floatFmtE(_18119_txt, _18136_i);;
}



inline jule::Str _1c628d86a_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I64 _18635_i) {
	(_18635_i)++;
	return _1c628c935_floatFmtE(_18618_txt, _18635_i);;
}



inline jule::Str _1c628dcee_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I64 _19131_i) {
	jule::Str __jule_func_result;
	(_19131_i)++;
	if ((_19131_i >= (*(_19114_txt)).len())) {
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)));
		return __jule_func_result;;
	};
	if (((*(_19114_txt))[_19131_i] == '_')) {
		(_19131_i)--;
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
		return __jule_func_result;;
	};
	for (; (_19131_i < (*(_19114_txt)).len()); (_19131_i)++) {
		{
			jule::U8 _20113_b = (*(_19114_txt))[_19131_i];;
			if (((_19131_i > 1LL) && ((_20113_b == 'e') || (_20113_b == 'E')))) {
				__jule_func_result = _1c628c935_floatFmtE(_19114_txt, _19131_i);
				return __jule_func_result;;
			};
			if (((_20113_b != '_') && (!(_1c62877ed_IsDecimal(_20113_b))))) {
				goto _iter_end_1ac1aba6b;
			};
		}
	_iter_next_1ac1aba6b:;
	}
	_iter_end_1ac1aba6b:;;
	if ((_19131_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
	return __jule_func_result;;
}



inline jule::Str _1c628e0b8_commonNum(jule::Slice<jule::U8>* _21615_txt) {
	jule::Str __jule_func_result;
	jule::I64 _21713_i = 0LL;;
	_julec_label_1ac1ad5ea:;
	for (; (_21713_i < (*(_21615_txt)).len()); (_21713_i)++) {
		{
			jule::U8 _22013_b = (*(_21615_txt))[_21713_i];;
			{
				
				if ((_22013_b == '.')) {
					_case_begin_1ac1ae970:;
					{
						__jule_func_result = _1c628dcee_floatNum(_21615_txt, _21713_i);
						return __jule_func_result;;
					}
				}
				else if ((_22013_b == '_')) {
					_case_begin_1ac1ae9e7:;
					{
						goto _iter_next_1ac1add8c;
					}
				}
				else if (_1c628e706_isFloatFmtE(_22013_b, _21713_i)) {
					_case_begin_1ac1aea6e:;
					{
						__jule_func_result = _1c628c935_floatFmtE(_21615_txt, _21713_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1c62877ed_IsDecimal(_22013_b)))) {
					_case_begin_1ac1aeae6:;
					{
						goto _iter_end_1ac1add8c;
					}
				}
				_match_end_1ac1ae8a4:;
			};
		}
	_iter_next_1ac1add8c:;
	}
	_iter_end_1ac1add8c:;;
	if ((_21713_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_21615_txt)).slice(0LL, _21713_i));
	return __jule_func_result;;
}



inline jule::Str _1c628e382_binaryNum(jule::Slice<jule::U8>* _23915_txt) {
	jule::Str __jule_func_result;
	if ((!(_1c628c5b1_bytesHasPrefix(_23915_txt, jule::Str("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_23915_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _24813_i = 2LL;;
	for (; (_24813_i < (*(_23915_txt)).len()); (_24813_i)++) {
		{
			if ((((*(_23915_txt))[_24813_i] != '_') && (!(_1c6287ab7_IsBinary((*(_23915_txt))[_24813_i]))))) {
				goto _iter_end_1ac1b2984;
			};
		}
	_iter_next_1ac1b2984:;
	}
	_iter_end_1ac1b2984:;;
	if ((_24813_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_23915_txt)).slice(0LL, _24813_i));
	return __jule_func_result;;
}



inline jule::Bool _1c628e706_isFloatFmtE(jule::U8 _26116_b, jule::I64 _26125_i) {
	return ((_26125_i > 0LL) && ((_26116_b == 'e') || (_26116_b == 'E')));;
}



inline jule::Bool _1c628ea7a_isFloatFmtP(jule::U8 _26516_b, jule::I64 _26525_i) {
	return ((_26525_i > 0LL) && ((_26516_b == 'p') || (_26516_b == 'P')));;
}



inline jule::Bool _1c628edee_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I64 _26938_i) {
	if (((*(_26921_txt))[_26938_i] != '.')) {
		return false;;
	};
	(_26938_i)++;
	_julec_label_1ac1b55e1:;
	for (; (_26938_i < (*(_26921_txt)).len()); (_26938_i)++) {
		{
			jule::U8 _27613_b = (*(_26921_txt))[_26938_i];;
			{
				
				if ((_27613_b == '_') || _1c62877ed_IsDecimal(_27613_b)) {
					_case_begin_1ac1b649e:;
					{
						goto _iter_next_1ac1b5723;
					}
				}
				else if (_1c628ea7a_isFloatFmtP(_27613_b, _26938_i)) {
					_case_begin_1ac1b6526:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1ac1b63d3:;
					{
						goto _iter_end_1ac1b5723;
					}
				}
				_match_end_1ac1b637d:;
			};
		}
	_iter_next_1ac1b5723:;
	}
	_iter_end_1ac1b5723:;;
	return false;;
}



inline jule::Bool _1c6290273_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I64 _29033_i) {
	{
		
		if (((*(_29020_txt)).len() < 3LL)) {
			_case_begin_1ac1b77d0:;
			{
				goto _case_begin_1ac1b7857;
			}
		}
		else if (((*(_29020_txt))[_29033_i] != '.')) {
			_case_begin_1ac1b7857:;
			{
				goto _case_begin_1ac1b78ce;
			}
		}
		else if ((((*(_29020_txt))[(_29033_i + 1LL)] != 'p') && ((*(_29020_txt))[(_29033_i + 1LL)] != 'P'))) {
			_case_begin_1ac1b78ce:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1ac1b7703:;
			{
				return true;;
			}
		}
		_match_end_1ac1b7637:;
	};
}



inline jule::Bool _1c62905e7_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I64 _30334_i) {
	{
		
		if (((*(_30321_txt)).len() < 4LL)) {
			_case_begin_1ac1b954b:;
			{
				goto _case_begin_1ac1b95c3;
			}
		}
		else if (((*(_30321_txt))[_30334_i] != '.')) {
			_case_begin_1ac1b95c3:;
			{
				goto _case_begin_1ac1b964a;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 1LL)] != 'f') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'F'))) {
			_case_begin_1ac1b964a:;
			{
				goto _case_begin_1ac1b989d;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 2LL)] != 'p') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'P'))) {
			_case_begin_1ac1b989d:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1ac1b913e:;
			{
				return true;;
			}
		}
		_match_end_1ac1b9073:;
	};
}



inline jule::Str _1c6290a6a_octalNum(jule::Slice<jule::U8>* _31814_txt) {
	jule::Str __jule_func_result;
	if (((*(_31814_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31814_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I64 _32613_octalStart = 1LL;;
	jule::Bool _32813_o = false;;
	if (((*(_31814_txt))[1LL] == 'o')) {
		if (((*(_31814_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_32613_octalStart)++;
		_32813_o=true;
	};
	jule::I64 _33713_i = _32613_octalStart;;
	for (; (_33713_i < (*(_31814_txt)).len()); (_33713_i)++) {
		{
			jule::U8 _33913_b = (*(_31814_txt))[_33713_i];;
			if ((_33913_b == '.')) {
				if (_32813_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1c628dcee_floatNum(_31814_txt, _33713_i);
				return __jule_func_result;;
			};
			if (_1c628e706_isFloatFmtE(_33913_b, _33713_i)) {
				__jule_func_result = _1c628c935_floatFmtE(_31814_txt, _33713_i);
				return __jule_func_result;;
			};
			if (((_33913_b != '_') && (!(_1c6287d81_IsOctal(_33913_b))))) {
				goto _iter_end_1ac1bd792;
			};
		}
	_iter_next_1ac1bd792:;
	}
	_iter_end_1ac1bd792:;;
	if ((_33713_i == _32613_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_31814_txt)).slice(0LL, _33713_i));
	return __jule_func_result;;
}



inline jule::Str _1c6290d34_hexNum(jule::Slice<jule::U8>* _36012_txt) {
	jule::Str __jule_func_result;
	if (((*(_36012_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36012_txt))[0LL] != '0') || (((*(_36012_txt))[1LL] != 'x') && ((*(_36012_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I64 _36913_i = 2LL;;
	_julec_label_1ac1c26a8:;
	for (; (_36913_i < (*(_36012_txt)).len()); (_36913_i)++) {
		{
			jule::U8 _37213_b = (*(_36012_txt))[_36913_i];;
			{
				
				if (_1c6290273_isFloatFmtDotp(_36012_txt, _36913_i)) {
					_case_begin_1ac1c33ce:;
					{
						__jule_func_result = _1c628d86a_floatFmtDotp(_36012_txt, _36913_i);
						return __jule_func_result;;
					}
				}
				else if (_1c62905e7_isFloatFmtDotfp(_36012_txt, _36913_i)) {
					_case_begin_1ac1c3456:;
					{
						__jule_func_result = _1c628d4e6_floatFmtDotfp(_36012_txt, _36913_i);
						return __jule_func_result;;
					}
				}
				else if (_1c628ea7a_isFloatFmtP(_37213_b, _36913_i)) {
					_case_begin_1ac1c34cd:;
					{
						__jule_func_result = _1c628cced_floatFmtP(_36012_txt, _36913_i);
						return __jule_func_result;;
					}
				}
				else if (_1c628edee_isFloatFmtDotnp(_36012_txt, _36913_i)) {
					_case_begin_1ac1c3555:;
					{
						__jule_func_result = _1c628d172_floatFmtDotnp(_36012_txt, _36913_i);
						return __jule_func_result;;
					}
				}
				else if (((_37213_b != '_') && (!(_1c628814a_IsHex(_37213_b))))) {
					_case_begin_1ac1c35cc:;
					{
						goto _iter_end_1ac1c2840;
					}
				}
				_match_end_1ac1c3302:;
			};
		}
	_iter_next_1ac1c2840:;
	}
	_iter_end_1ac1c2840:;;
	if ((_36913_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_36012_txt)).slice(0LL, _36913_i));
	return __jule_func_result;;
}



inline jule::Str _1c62911a8_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I64 _39328_n) {
	jule::Str __jule_func_result;
	if (((*(_39315_txt)).len() < _39328_n)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _39913_i = 2LL;;
	for (; (_39913_i < _39328_n); (_39913_i)++) {
		{
			if ((!(_1c628814a_IsHex((*(_39315_txt))[_39913_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1ac1c5b51:;
	}
	_iter_end_1ac1c5b51:;;
	__jule_func_result=static_cast<jule::Str>((*(_39315_txt)).slice(0LL, _39328_n));
	return __jule_func_result;;
}



inline jule::Str _1c6291472_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt) {
	return _1c62911a8_hexEscape(_41127_txt, 10LL);;
}



inline jule::Str _1c629173b_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt) {
	return _1c62911a8_hexEscape(_41630_txt, 6LL);;
}



inline jule::Str _1c6291a05_hexByteEscape(jule::Slice<jule::U8>* _42119_txt) {
	return _1c62911a8_hexEscape(_42119_txt, 4LL);;
}



inline jule::Str _1c6291cbe_byteEscape(jule::Slice<jule::U8>* _42616_txt) {
	jule::Str __jule_func_result;
	if (((*(_42616_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1c6287d81_IsOctal((*(_42616_txt))[1LL]))) || (!(_1c6287d81_IsOctal((*(_42616_txt))[2LL])))) || (!(_1c6287d81_IsOctal((*(_42616_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_42616_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_221968cb9_Log> _1c6296cb3_Lex(jule::Ptr<_1c6289305_File> _80912_f, jule::I64 _80922_mode) {
	if ((_80912_f == nullptr)) {
		return nullptr;;
	};
	_1c629253e_lex _81413_lex = _1c629253e_lex{._field_mode=_80922_mode, ._field_file=_80912_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_1c6295355_newLine(&_81413_lex);
	_1c6293133_lex(&_81413_lex);
	if ((_81413_lex._field_errors.len() > 0LL)) {
		return _81413_lex._field_errors;;
	};
	(*(_80912_f))._field_Tokens=_81413_lex._field_tokens;
	return nullptr;;
}



inline jule::Bool _1c63639d9_FindModuleFile(jule::Slice<jule::Ptr<_220506a9a_DirEntry>>* _1220_dirents) {
	{
		auto expr = _1220_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2581de:;
		if (it != expr_end) {
			jule::Ptr<_220506a9a_DirEntry> *_1312_d = it;
			{
				if (((!(_220514cea_IsDir((*((*(_1312_d))))._field_Stat.ptr()))) && (*((*(_1312_d))))._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1ac2581de:;
			++it;
			goto _iter_begin_1ac2581de;
		}
		_iter_end_1ac2581de:;
	};
	return false;;
}



inline jule::Str _1c6363cb4_FindModuleFileDeep(jule::Str _2427_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_220506a9a_DirEntry>> _2617_dirents = ({
				auto except = static__2218ca1ae_Read(_2427_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1ac2592bc;
				} jule::Slice<jule::Ptr<_220506a9a_DirEntry>>(nullptr);});
			});;
			jule::Bool _3013_exist = _1c63639d9_FindModuleFile(&(_2617_dirents));;
			if (_3013_exist) {
				return _2427_path;;
			};
			jule::I64 _3513_n = _2427_path.len();;
			_2427_path=_2218c98d9_Dir(_2427_path);
			if ((_2427_path.len() == _3513_n)) {
				goto _iter_end_1ac2592bc;
			};
		}
	_iter_next_1ac2592bc:;
	}
	_iter_end_1ac2592bc:;;
	return jule::Str();;
}



inline jule::Slice<_221968cb9_Log> _1c636407d_CheckModuleFile(jule::Str* _4621_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__220512a95_Read(_2218c8be6_Join(jule::Slice<jule::Str>::make({(*(_4621_path)),jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_221968cb9_Log>::make({_221968cb9_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file could not checked because of a problem", 50), }});;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _539_s = _2218c609a_Trim(static_cast<jule::Str>(_479_bytes), jule::Str(" \n\r\t\v", 5));;
	if ((_539_s.len() != 0LL)) {
		return jule::Slice<_221968cb9_Log>::make({_221968cb9_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file has syntax error(s)", 31), }});;
	};
	return nullptr;;
}



inline jule::Bool _1c6364ab7_IsPub(jule::Str* _1011_ident) {
	if (((*(_1011_ident))[0LL] < 128LLU)) {
		jule::U8 _1213_b = (*(_1011_ident))[0LL];;
		return (('A' <= _1213_b) && (_1213_b <= 'Z'));;
	};
	jule::I32 _1510_r = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22061dc39_DecodeRune(_22050c4b8_Stobs(_1011_ident));
		_1510_r = __jule_assign_result.__jule_result_arg0;
	});
	return _22187e3e9_IsUpper(_1510_r);;
}



inline jule::Bool _1c63a9b95_IsAscii(jule::I32 _1012_r) {
	;
	return (_1012_r <= 127LL);;
}



inline jule::I32 _1c63c252b_ToRune(jule::Slice<jule::U8> _1811_bytes) {
	if ((_1811_bytes.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1811_bytes[0LL] == '\\') && (_1811_bytes.len() > 1LL))) {
		jule::I64 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_1c63c3131_runeFromEsqSeq(_1811_bytes, &(_2517_i)));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22061dc39_DecodeRune(_1811_bytes);
			_2313_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _2313_r;;
}



inline jule::Str _1c63c26d5_ToRawStr(jule::Slice<jule::U8> _3713_bytes) {
	return static_cast<jule::Str>(_3713_bytes);;
}



inline jule::Str _1c63c2a26_ToStr(jule::Slice<jule::U8> _4210_bytes) {
	if ((_4210_bytes.len() == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL, _4210_bytes.len(), 0);;
	jule::I64 _4813_i = 0LL;;
	while ((_4813_i < _4210_bytes.len())) {
		{
			jule::U8 _5013_b = _4210_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				(_4713_s).append(_1c63c34a5_strEsqSeq(_4210_bytes, &(_4813_i)));;
			} else {
				jule::I32 _5418_r = 0;;
				jule::I64 _5421_size = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22061dc39_DecodeRune(_4210_bytes.slice(_4813_i));
					_5418_r = __jule_assign_result.__jule_result_arg0;
					_5421_size = __jule_assign_result.__jule_result_arg1;
				});
				_4813_i+=_5421_size;
				_4713_s=_22062019c_AppendRune(_4713_s, _5418_r);
			};
		}
	_iter_next_1ac2648b0:;
	}
	_iter_end_1ac2648b0:;;
	return static_cast<jule::Str>(_4713_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1c63c2ce0_tryBtoaCommonEsq(jule::Slice<jule::U8> _6221_bytes) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_6221_bytes.len() < 2LL) || (_6221_bytes[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _6221_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1ac2684c9:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1ac268551:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1ac2685c8:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1ac268650:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1ac2686c7:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1ac26874e:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1ac2687c6:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1ac26884d:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1ac2688c5:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1ac26894c:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1ac268386:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1c63c3131_runeFromEsqSeq(jule::Slice<jule::U8> _9219_bytes, jule::I64* _9239_i) {
	jule::U8 _9310_b = 0;;
	jule::Bool _9313_ok = false;;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1c63c2ce0_tryBtoaCommonEsq(_9219_bytes.slice((*(_9239_i))));
		_9310_b = __jule_assign_result.__jule_result_arg0;
		_9313_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_9239_i)))++;
	if (_9313_ok) {
		((*(_9239_i)))++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9310_b));;
	};
	{
		auto &_match_expr{ _9219_bytes[(*(_9239_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1ac26cde6:;
			{
				;
				jule::I32 _10313_r = static_cast<jule::I32>(({
					auto except = _1dc23d23d_ParseUint(static_cast<jule::Str>(_9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 5LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:103:22"));
					(except.result);
				}));;
				(*(_9239_i))+=5LL;
				return _10313_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1ac26d15a:;
			{
				;
				jule::I32 _10813_r = static_cast<jule::I32>(({
					auto except = _1dc23d23d_ParseUint(static_cast<jule::Str>(_9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 9LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:108:22"));
					(except.result);
				}));;
				(*(_9239_i))+=9LL;
				return _10813_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1ac26d1c1:;
			{
				;
				jule::Slice<jule::U8> _11313_seq = _9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 3LL));;
				(*(_9239_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1dc23d23d_ParseUint(static_cast<jule::Str>(_11313_seq), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:115:18"));
					(except.result);
				})));;
			}
		}
		else {
			_case_begin_1ac26ba4e:;
			{
				;
				jule::Slice<jule::U8> _11813_seq = _9219_bytes.slice((*(_9239_i)), ((*(_9239_i)) + 3LL));;
				(*(_9239_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1dc23d23d_ParseUint(static_cast<jule::Str>(_11813_seq.slice(1LL)), 8LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:120:18"));
					(except.result);
				})));;
			}
		}
		_match_end_1ac26b9e9:;
	};
}



inline jule::Slice<jule::U8> _1c63c34a5_strEsqSeq(jule::Slice<jule::U8> _12414_bytes, jule::I64* _12434_i) {
	jule::I32 _1259_r = _1c63c3131_runeFromEsqSeq(_12414_bytes, _12434_i);;
	if ((_1259_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1259_r))});;
	};
	return static_cast<jule::Slice<jule::U8>>(jule::Str::from_rune(_1259_r));;
}



inline jule::I64 _1c650451a_findFormatPrefix(jule::Slice<jule::U8>* _1122_bytes, jule::I64* _1138_start) {
	jule::I64 _1213_i = (*(_1138_start));;
	while ((_1213_i < (*(_1122_bytes)).len())) {
		{
			jule::I32 _1414_r = 0;;
			jule::I64 _1417_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22061dc39_DecodeRune((*(_1122_bytes)).slice(_1213_i));
				_1414_r = __jule_assign_result.__jule_result_arg0;
				_1417_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1414_r == '{')) {
				return _1213_i;;
			};
			_1213_i+=_1417_size;
		}
	_iter_next_1ac29db3b:;
	}
	_iter_end_1ac29db3b:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1c65048a0_getFormatRange(jule::I64* _2824_i, jule::Slice<jule::U8>* _2837_bytes) {
	jule::I64 _299_start = (*(_2824_i));;
	jule::I64 _3013_braces = 0LL;;
	while (((*(_2824_i)) < (*(_2837_bytes)).len())) {
		{
			jule::I32 _3214_r = 0;;
			jule::I64 _3217_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22061dc39_DecodeRune((*(_2837_bytes)).slice((*(_2824_i))));
				_3214_r = __jule_assign_result.__jule_result_arg0;
				_3217_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2824_i))+=_3217_size;
			{
				auto &_match_expr{ _3214_r };
				
				if (_match_expr == '{') {
					_case_begin_1ac2a13e1:;
					{
						(_3013_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1ac2a14bd:;
					{
						(_3013_braces)--;
						if ((_3013_braces == 0LL)) {
							return (*(_2837_bytes)).slice(_299_start, (*(_2824_i)));;
						};
					}
				}
				_match_end_1ac2a0d19:;
			};
		}
	_iter_next_1ac2a0654:;
	}
	_iter_end_1ac2a0654:;;
	return nullptr;;
}



inline void _1c6504b8b_FmtByDefault(_2206c697e_StrBuilder* _4822_buf, jule::Any* _4840_arg) {
	if (((*(_4840_arg)) == nullptr)) {
		_2206d0625_WriteStr(_4822_buf, jule::Str("<nil>", 5));
		return;;
	};
	{
		auto &_match_expr{ (*(_4840_arg)) };
		
		if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1ac2a2920:;
			{
				_2206d0625_WriteStr(_4822_buf, _1dc2382c1_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>((*(_4840_arg)).cast<jule::F32>(&__jule_any_type131))), 'g', -1LL, 32LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ac2a3107:;
			{
				_2206d0625_WriteStr(_4822_buf, _1dc2382c1_FmtFloat(static_cast<jule::F64>((*(_4840_arg)).cast<jule::F64>(&__jule_any_type5)), 'g', -1LL, 64LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1ac2a2ab8:;
			{
				_2206d0625_WriteStr(_4822_buf, _1dc24ec99_FmtInt(static_cast<jule::I64>((*(_4840_arg)).cast<jule::I8>(&__jule_any_type132)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1ac2a2b2e:;
			{
				_2206d0625_WriteStr(_4822_buf, _1dc24ec99_FmtInt(static_cast<jule::I64>((*(_4840_arg)).cast<jule::I16>(&__jule_any_type133)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1ac2a3239:;
			{
				_2206d0625_WriteStr(_4822_buf, _1dc24ec99_FmtInt(static_cast<jule::I64>((*(_4840_arg)).cast<jule::I32>(&__jule_any_type6)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ac2a32a0:;
			{
				_2206d0625_WriteStr(_4822_buf, _1dc24ec99_FmtInt(static_cast<jule::I64>((*(_4840_arg)).cast<jule::I64>(&__jule_any_type1)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1ac2a3316:;
			{
				_2206d0625_WriteStr(_4822_buf, _1dc24e8d1_FmtUint(static_cast<jule::U64>((*(_4840_arg)).cast<jule::U8>(&__jule_any_type130)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1ac2a337c:;
			{
				_2206d0625_WriteStr(_4822_buf, _1dc24e8d1_FmtUint(static_cast<jule::U64>((*(_4840_arg)).cast<jule::U16>(&__jule_any_type134)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1ac2a33e3:;
			{
				_2206d0625_WriteStr(_4822_buf, _1dc24e8d1_FmtUint(static_cast<jule::U64>((*(_4840_arg)).cast<jule::U32>(&__jule_any_type135)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ac2a3459:;
			{
				_2206d0625_WriteStr(_4822_buf, _1dc24e8d1_FmtUint(static_cast<jule::U64>((*(_4840_arg)).cast<jule::U64>(&__jule_any_type2)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1ac2a34c0:;
			{
				_2206d0625_WriteStr(_4822_buf, (*(_4840_arg)).cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1ac2a3536:;
			{
				if ((*(_4840_arg)).cast<jule::Bool>(&__jule_any_type3)) {
					_2206d0625_WriteStr(_4822_buf, jule::Str("true", 4));
				} else {
					_2206d0625_WriteStr(_4822_buf, jule::Str("false", 5));
				};
			}
		}
		else {
			_case_begin_1ac2a2414:;
			{
				_2206d0625_WriteStr(_4822_buf, jule::to_str((*(_4840_arg))));
			}
		}
		_match_end_1ac2a17dc:;
	};
}



inline void _1c65050a9_applyFmtByDefault(_2206c697e_StrBuilder* _8727_buf, jule::I64* _8749_j, jule::Slice<jule::Any> _8757_args) {
	jule::Any _889_arg = _8757_args[(*(_8749_j))];;
	((*(_8749_j)))++;
	_1c6504b8b_FmtByDefault(_8727_buf, &(_889_arg));
}



inline void _1c650550a_applyFmt(jule::Slice<jule::U8>* _9518_fmt, _2206c697e_StrBuilder* _9536_buf, jule::I64* _9558_j, jule::Slice<jule::Any> _9566_args) {
	if (((*(_9518_fmt)).len() == 2LL)) {
		_1c65050a9_applyFmtByDefault(_9536_buf, _9558_j, _9566_args);
		return;;
	};
	if (((((((*(_9518_fmt)).len() == 4LL) && ((*(_9518_fmt))[0LL] == '{')) && ((*(_9518_fmt))[1LL] == '{')) && ((*(_9518_fmt))[2LL] == '}')) && ((*(_9518_fmt))[3LL] == '}'))) {
		_2206d0625_WriteStr(_9536_buf, jule::Str("{}", 2));
		return;;
	};
	_2206d036c_Write(_9536_buf, (*(_9518_fmt)));
}



inline jule::Str _1c650584b_Format(jule::Str* _11412_fmt, jule::Slice<jule::Any> _11422_args) {
	if ((_11422_args.len() == 0LL)) {
		return (*(_11412_fmt));;
	};
	jule::Slice<jule::U8> _11813_fmtBytes = _22050c4b8_Stobs(_11412_fmt);;
	_2206c697e_StrBuilder _11913_buf = static__2206c6c9d_New(static_cast<jule::I64>((*(_11412_fmt)).len()));;
	jule::I64 _12013_j = 0LL;;
	jule::I64 _12113_last = 0LL;;
	jule::I64 _12213_i = _1c650451a_findFormatPrefix(&(_11813_fmtBytes), &(_12113_last));;
	for (; (_12213_i != -1LL); _12213_i=static_cast<jule::I64>(_1c650451a_findFormatPrefix(&(_11813_fmtBytes), &(_12213_i)))) {
		{
			_2206d036c_Write(&_11913_buf, _11813_fmtBytes.slice(_12113_last, _12213_i));
			jule::Slice<jule::U8> _12517_format = _1c65048a0_getFormatRange(&(_12213_i), &(_11813_fmtBytes));;
			if ((_12517_format == nullptr)) {
				goto _iter_next_1ac2aeb5d;
			};
			_1c650550a_applyFmt(&(_12517_format), &(_11913_buf), &(_12013_j), _11422_args);
			if ((_12013_j >= _11422_args.len())) {
				_2206d036c_Write(&_11913_buf, _11813_fmtBytes.slice(_12213_i));
				_12113_last=static_cast<jule::I64>(_11813_fmtBytes.len());
				goto _iter_end_1ac2aeb5d;
			};
			_12113_last=_12213_i;
		}
	_iter_next_1ac2aeb5d:;
	}
	_iter_end_1ac2aeb5d:;;
	if ((_12113_last < _11813_fmtBytes.len())) {
		_2206d036c_Write(&_11913_buf, _11813_fmtBytes.slice(_12113_last));
	};
	return _2206d0e1c_Str(&_11913_buf);;
}



inline jule::Str _1c65078c5_Format(jule::Str _3011_fmt, jule::Slice<jule::Any> _3021_args) {
	return _1c650584b_Format(&(_3011_fmt), _3021_args);;
}



inline jule::Bool _1c62d4dcd_parameterUsesGenerics(jule::Ptr<_1c62d1b55_ParamIns>* _38431_p, jule::Slice<jule::Ptr<_1c62a6454_GenericDecl>>* _38446_generics) {
	if (_1c62cd844_IsSelf((*((*(_38431_p))))._field_Decl.ptr())) {
		return false;;
	};
	return _1c6438c79_kindUsesGenerics(&((*((*(_38431_p))))._field_Kind), _38446_generics);;
}



inline jule::Ptr<_1c64256e4_TypeSymbol> _1c62d762d_buildType(jule::Ptr<_1c6299249_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c64256e4_TypeSymbol>(_1c64256e4_TypeSymbol{._field_Decl=_9418_t, });;
}



inline jule::Ptr<_1c63de49e_Value> _1c62d793b_buildExpr(jule::Ptr<_1c629d57d_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c63de49e_Value>(_1c63de49e_Value{._field_Expr=_10318_expr, });;
}



inline jule::Ptr<_1c641c730_TypeAlias> _1c62d7c05_buildTypeAlias(jule::Ptr<_1c62b0aac_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1c641c730_TypeAlias>(_1c641c730_TypeAlias{._field_Scope=(*(_11223_decl))._field_Scope, ._field_Public=(*(_11223_decl))._field_Public, ._field_Binded=(*(_11223_decl))._field_Binded, ._field_Token=(*(_11223_decl))._field_Token, ._field_Ident=(*(_11223_decl))._field_Ident, ._field_Kind=_1c62d762d_buildType((*(_11223_decl))._field_Kind), });;
}



inline jule::Ptr<_1c62b6e48_Field> _1c62d8046_buildField(jule::Ptr<_1c62b4385_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1c62b6e48_Field>(_1c62b6e48_Field{._field_Token=(*(_12319_decl))._field_Token, ._field_Public=(*(_12319_decl))._field_Public, ._field_Mutable=(*(_12319_decl))._field_Mutable, ._field_Ident=(*(_12319_decl))._field_Ident, ._field_Kind=_1c62d762d_buildType((*(_12319_decl))._field_Kind), ._field_Default=(*(_12319_decl))._field_Default});;
}



inline jule::Slice<jule::Ptr<_1c62b6e48_Field>> _1c62d8310_buildFields(jule::Slice<jule::Ptr<_1c62b4385_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_1c62b6e48_Field>> _13513_fields = jule::Slice<jule::Ptr<_1c62b6e48_Field>>::alloc(0LL, (*(_13421_decls)).len());;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac54bcc9:;
		if (it != expr_end) {
			jule::Ptr<_1c62b4385_FieldDecl> _13617_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1c62b6e48_Field>> &__jule_push_dest = _13513_fields; __jule_push_dest.push(_1c62d8046_buildField(_13617_decl)); };
			}
			_iter_next_1ac54bcc9:;
			++it;
			goto _iter_begin_1ac54bcc9;
		}
		_iter_end_1ac54bcc9:;
	};
	return _13513_fields;;
}



inline jule::Ptr<_1c62b9d3b_Struct> _1c62d85c9_buildStruct(jule::Ptr<_1c62b4c7b_StructDecl> _14220_decl) {
	return jule::new_ptr<_1c62b9d3b_Struct>(_1c62b9d3b_Struct{._field_Token=(*(_14220_decl))._field_Token, ._field_Ident=(*(_14220_decl))._field_Ident, ._field_Fields=_1c62d8310_buildFields(&((*(_14220_decl))._field_Fields)), ._field_Public=(*(_14220_decl))._field_Public, ._field_Binded=(*(_14220_decl))._field_Binded, ._field_Directives=(*(_14220_decl))._field_Directives, ._field_Generics=(*(_14220_decl))._field_Generics, });;
}



inline jule::Ptr<_1c62cd228_Param> _1c62d8893_buildParam(jule::Ptr<_1c62a99a7_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1c62cd228_Param>(_1c62cd228_Param{._field_Token=(*(_15419_decl))._field_Token, ._field_Mutable=(*(_15419_decl))._field_Mutable, ._field_Variadic=(*(_15419_decl))._field_Variadic, ._field_Reference=(*(_15419_decl))._field_Reference, ._field_Kind=_1c62d762d_buildType((*(_15419_decl))._field_Kind), ._field_Ident=(*(_15419_decl))._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1c62cd228_Param>> _1c62d8c39_buildParams(jule::Slice<jule::Ptr<_1c62a99a7_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_1c62cd228_Param>> _16613_params = jule::Slice<jule::Ptr<_1c62cd228_Param>>::alloc(0LL, (*(_16521_decls)).len());;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac550d55:;
		if (it != expr_end) {
			jule::Ptr<_1c62a99a7_ParamDecl> _16717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1c62cd228_Param>> &__jule_push_dest = _16613_params; __jule_push_dest.push(_1c62d8893_buildParam(_16717_decl)); };
			}
			_iter_next_1ac550d55:;
			++it;
			goto _iter_begin_1ac550d55;
		}
		_iter_end_1ac550d55:;
	};
	return _16613_params;;
}



inline jule::Ptr<_1c62cc997_RetType> _1c62d9003_buildRetType(jule::Ptr<_1c629c13c_RetTypeDecl> _17321_decl) {
	if ((((*(_17321_decl))._field_Idents == nullptr) && ((*(_17321_decl))._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1c62cc997_RetType>(_1c62cc997_RetType{._field_Kind=_1c62d762d_buildType((*(_17321_decl))._field_Kind), ._field_Idents=(*(_17321_decl))._field_Idents});;
}



inline jule::Ptr<_1c62cebec_Fn> _1c62d92bc_buildFunc(jule::Ptr<_1c62aae09_FnDecl> _18318_decl) {
	return jule::new_ptr<_1c62cebec_Fn>(_1c62cebec_Fn{._field_Token=(*(_18318_decl))._field_Token, ._field_Global=(*(_18318_decl))._field_Global, ._field_Unsafety=(*(_18318_decl))._field_Unsafety, ._field_Public=(*(_18318_decl))._field_Public, ._field_Binded=(*(_18318_decl))._field_Binded, ._field_Statically=(*(_18318_decl))._field_Statically, ._field_Exceptional=(*(_18318_decl))._field_Exceptional, ._field_Ident=(*(_18318_decl))._field_Ident, ._field_Directives=(*(_18318_decl))._field_Directives, ._field_Scope=(*(_18318_decl))._field_Scope, ._field_Generics=(*(_18318_decl))._field_Generics, ._field_Result=_1c62d9003_buildRetType((*(_18318_decl))._field_Result), ._field_Params=_1c62d8c39_buildParams(&((*(_18318_decl))._field_Params)), });;
}



inline jule::Slice<jule::Ptr<_1c62cebec_Fn>> _1c62d9586_buildMethods(jule::Slice<jule::Ptr<_1c62aae09_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_1c62cebec_Fn>> _20213_methods = jule::Slice<jule::Ptr<_1c62cebec_Fn>>::alloc(0LL, (*(_20122_decls)).len());;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac555e26:;
		if (it != expr_end) {
			jule::Ptr<_1c62aae09_FnDecl> _20317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1c62cebec_Fn>> &__jule_push_dest = _20213_methods; __jule_push_dest.push(_1c62d92bc_buildFunc(_20317_decl)); };
			}
			_iter_next_1ac555e26:;
			++it;
			goto _iter_begin_1ac555e26;
		}
		_iter_end_1ac555e26:;
	};
	return _20213_methods;;
}



inline jule::Slice<jule::Ptr<_1c64256e4_TypeSymbol>> _1c62d9850_buildTraitInherits(jule::Slice<jule::Ptr<_1c6299249_TypeDecl>>* _20928_inherits) {
	jule::Slice<jule::Ptr<_1c64256e4_TypeSymbol>> _21013_symbols = jule::Slice<jule::Ptr<_1c64256e4_TypeSymbol>>::alloc(0LL, (*(_20928_inherits)).len());;
	{
		auto expr = _20928_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac55709d:;
		if (it != expr_end) {
			jule::Ptr<_1c6299249_TypeDecl> _21117_it = *it;
			{
				{ jule::Slice<jule::Ptr<_1c64256e4_TypeSymbol>> &__jule_push_dest = _21013_symbols; __jule_push_dest.push(_1c62d762d_buildType(_21117_it)); };
			}
			_iter_next_1ac55709d:;
			++it;
			goto _iter_begin_1ac55709d;
		}
		_iter_end_1ac55709d:;
	};
	return _21013_symbols;;
}



inline jule::Ptr<_1c62e2e96_Trait> _1c62d9b19_buildTrait(jule::Ptr<_1c62b54b8_TraitDecl> _21719_decl) {
	return jule::new_ptr<_1c62e2e96_Trait>(_1c62e2e96_Trait{._field_Token=(*(_21719_decl))._field_Token, ._field_Ident=(*(_21719_decl))._field_Ident, ._field_Public=(*(_21719_decl))._field_Public, ._field_Inherits=_1c62d9850_buildTraitInherits(&((*(_21719_decl))._field_Inherits)), ._field_Methods=_1c62d9586_buildMethods(&((*(_21719_decl))._field_Methods)), });;
}



inline jule::Ptr<_1c62e4b24_EnumItem> _1c62d9dd3_buildEnumItem(jule::Ptr<_1c62b2570_EnumItemDecl> _22722_decl) {
	return jule::new_ptr<_1c62e4b24_EnumItem>(_1c62e4b24_EnumItem{._field_Token=(*(_22722_decl))._field_Token, ._field_Ident=(*(_22722_decl))._field_Ident, ._field_Value=_1c62d793b_buildExpr((*(_22722_decl))._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1c62e4b24_EnumItem>> _1c62da19c_buildEnumItems(jule::Slice<jule::Ptr<_1c62b2570_EnumItemDecl>>* _23524_decls) {
	jule::Slice<jule::Ptr<_1c62e4b24_EnumItem>> _23613_items = jule::Slice<jule::Ptr<_1c62e4b24_EnumItem>>::alloc(0LL, (*(_23524_decls)).len());;
	{
		auto expr = _23524_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac55a36a:;
		if (it != expr_end) {
			jule::Ptr<_1c62b2570_EnumItemDecl> _23717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1c62e4b24_EnumItem>> &__jule_push_dest = _23613_items; __jule_push_dest.push(_1c62d9dd3_buildEnumItem(_23717_decl)); };
			}
			_iter_next_1ac55a36a:;
			++it;
			goto _iter_begin_1ac55a36a;
		}
		_iter_end_1ac55a36a:;
	};
	return _23613_items;;
}



inline jule::Ptr<_1c62e5691_Enum> _1c62da620_buildEnum(jule::Ptr<_1c62b3131_EnumDecl> _24318_decl) {
	return jule::new_ptr<_1c62e5691_Enum>(_1c62e5691_Enum{._field_Token=(*(_24318_decl))._field_Token, ._field_Public=(*(_24318_decl))._field_Public, ._field_Ident=(*(_24318_decl))._field_Ident, ._field_Kind=_1c62d762d_buildType((*(_24318_decl))._field_Kind), ._field_Items=_1c62da19c_buildEnumItems(&((*(_24318_decl))._field_Items))});;
}



inline jule::Ptr<_1c62e67c4_TypeEnumItem> _1c62da8d9_buildTypeEnumItem(jule::Ptr<_1c62b395b_TypeEnumItemDecl> _25326_decl) {
	return jule::new_ptr<_1c62e67c4_TypeEnumItem>(_1c62e67c4_TypeEnumItem{._field_Token=(*(_25326_decl))._field_Token, ._field_Ident=(*(_25326_decl))._field_Ident, ._field_Kind=_1c62d762d_buildType((*(_25326_decl))._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1c62e67c4_TypeEnumItem>> _1c62daba3_buildTypeEnumItems(jule::Slice<jule::Ptr<_1c62b395b_TypeEnumItemDecl>>* _26128_decls) {
	jule::Slice<jule::Ptr<_1c62e67c4_TypeEnumItem>> _26213_items = jule::Slice<jule::Ptr<_1c62e67c4_TypeEnumItem>>::alloc(0LL, (*(_26128_decls)).len());;
	{
		auto expr = _26128_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac55d637:;
		if (it != expr_end) {
			jule::Ptr<_1c62b395b_TypeEnumItemDecl> _26317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1c62e67c4_TypeEnumItem>> &__jule_push_dest = _26213_items; __jule_push_dest.push(_1c62da8d9_buildTypeEnumItem(_26317_decl)); };
			}
			_iter_next_1ac55d637:;
			++it;
			goto _iter_begin_1ac55d637;
		}
		_iter_end_1ac55d637:;
	};
	return _26213_items;;
}



inline jule::Ptr<_1c62e6d9b_TypeEnum> _1c62dae6c_buildTypeEnum(jule::Ptr<_1c62b40bb_TypeEnumDecl> _26922_decl) {
	return jule::new_ptr<_1c62e6d9b_TypeEnum>(_1c62e6d9b_TypeEnum{._field_Token=(*(_26922_decl))._field_Token, ._field_Public=(*(_26922_decl))._field_Public, ._field_Ident=(*(_26922_decl))._field_Ident, ._field_Items=_1c62daba3_buildTypeEnumItems(&((*(_26922_decl))._field_Items))});;
}



inline jule::Ptr<_1c6389da6_Var> _1c62db236_buildVar(jule::Ptr<_1c62abed7_VarDecl> _27817_decl) {
	return jule::new_ptr<_1c6389da6_Var>(_1c6389da6_Var{._field_Token=(*(_27817_decl))._field_Token, ._field_Ident=(*(_27817_decl))._field_Ident, ._field_Binded=(*(_27817_decl))._field_Binded, ._field_Constant=(*(_27817_decl))._field_Constant, ._field_Mutable=(*(_27817_decl))._field_Mutable, ._field_Public=(*(_27817_decl))._field_Public, ._field_Statically=(*(_27817_decl))._field_Statically, ._field_Reference=(*(_27817_decl))._field_Reference, ._field_Kind=_1c62d762d_buildType((*(_27817_decl))._field_Kind), ._field_Value=_1c62d793b_buildExpr((*(_27817_decl))._field_Expr), ._field_Refers=static__1c62d6099_new(), ._field_Directives=(*(_27817_decl))._field_Directives, });;
}



inline jule::Slice<jule::Ptr<_1c6389da6_Var>> _1c62db500_buildVars(jule::Slice<jule::Ptr<_1c62abed7_VarDecl>> _29518_decls) {
	jule::Slice<jule::Ptr<_1c6389da6_Var>> _29613_vars = jule::Slice<jule::Ptr<_1c6389da6_Var>>::alloc(0LL, _29518_decls.len());;
	{
		auto expr = &(_29518_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac562eaa:;
		if (it != expr_end) {
			jule::Ptr<_1c62abed7_VarDecl> _29717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1c6389da6_Var>> &__jule_push_dest = _29613_vars; __jule_push_dest.push(_1c62db236_buildVar(_29717_decl)); };
			}
			_iter_next_1ac562eaa:;
			++it;
			goto _iter_begin_1ac562eaa;
		}
		_iter_end_1ac562eaa:;
	};
	return _29613_vars;;
}



inline jule::Ptr<_1c631a320_Impl> _1c62db7b9_buildImpl(jule::Ptr<_1c62b5b28_Impl> _30318_decl) {
	return jule::new_ptr<_1c631a320_Impl>(_1c631a320_Impl{._field_Base=(*(_30318_decl))._field_Base, ._field_Dest=(*(_30318_decl))._field_Dest, ._field_Methods=_1c62d9586_buildMethods(&((*(_30318_decl))._field_Methods)), ._field_Statics=_1c62db500_buildVars((*(_30318_decl))._field_Statics)});;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6315d10_buildAsComptimeMethodData(jule::Ptr<_1c62d2b01_FnIns>* _141635_f) {
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>((*(_141635_f)), 1)}), });;
}



inline jule::Ptr<_1c63469de_ImportInfo> _1c631611d_findComptimePackage(jule::Ptr<_1c63679bb_Sema>* _142429_s) {
	return _1c6367e61_SelectPackage((*(_142429_s)).ptr(), jule::Fn<jule::Bool(jule::Ptr<_1c63469de_ImportInfo>)>([=](jule::Ptr<_1c63469de_ImportInfo> _142528_pkg) mutable -> jule::Bool {
		return (*(_142528_pkg))._field_LinkPath.equal("std::comptime", 13);;
	}));;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6316492_buildComptimeTypeInfoData(jule::Ptr<_1c63679bb_Sema>* _143035_s, jule::Ptr<_1c641d522_TypeKind>* _143050_t) {
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(_1c6367306_pushComptimeTypeInfo((*((*(_143035_s))))._field_meta.ptr(), _143050_t), 15)}), });;
}



inline jule::Ptr<_1c63dd35a_Data> _1c63166c3_buildComptimeValue(jule::Ptr<_1c63dd35a_Data>* _143828_d) {
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(jule::new_ptr<_1c6310227_comptimeValue>(_1c6310227_comptimeValue{._field_data=(*(_143828_d))}), 16)}), });;
}



inline jule::Bool _1c6319693_matchConstraint(jule::Str* _14221_c, jule::Ptr<_1c641d522_TypeKind>* _14234_g) {
	{
		auto &_match_expr{ (*(_14221_c)) };
		
		if (_match_expr == jule::Str("signed", 6)) {
			_case_begin_1ac7247dc:;
			{
				jule::Ptr<_1c64260eb_Prim> _14513_prim = _1c6420b73_Prim((*(_14234_g)).ptr());;
				if ((_14513_prim == nullptr)) {
					return false;;
				};
				return _1dc260260_IsSigNum((*(_14513_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("unsigned", 8)) {
			_case_begin_1ac725689:;
			{
				jule::Ptr<_1c64260eb_Prim> _15113_prim = _1c6420b73_Prim((*(_14234_g)).ptr());;
				if ((_15113_prim == nullptr)) {
					return false;;
				};
				return _1dc25e5c2_IsUnsigInt((*(_15113_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("float", 5)) {
			_case_begin_1ac725700:;
			{
				jule::Ptr<_1c64260eb_Prim> _15713_prim = _1c6420b73_Prim((*(_14234_g)).ptr());;
				if ((_15713_prim == nullptr)) {
					return false;;
				};
				return _1dc25ebcc_IsFloat((*(_15713_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("numeric", 7)) {
			_case_begin_1ac7258dc:;
			{
				jule::Ptr<_1c64260eb_Prim> _16313_prim = _1c6420b73_Prim((*(_14234_g)).ptr());;
				if ((_16313_prim == nullptr)) {
					return false;;
				};
				return _1dc25ee96_IsNum((*(_16313_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("mutable", 7)) {
			_case_begin_1ac725953:;
			{
				return _1c641eda3_Mutable((*(_14234_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str("immutable", 9)) {
			_case_begin_1ac7259b9:;
			{
				return (!(_1c641eda3_Mutable((*(_14234_g)).ptr())));;
			}
		}
		else if (_match_expr == jule::Str("comparable", 10)) {
			_case_begin_1ac725a30:;
			{
				return _1c641eb1c_Comparable((*(_14234_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str("ordered", 7)) {
			_case_begin_1ac725b40:;
			{
				return _1c6420139_Ordered((*(_14234_g)).ptr());;
			}
		}
		else {
			_case_begin_1ac71e2a9:;
			{
				return false;;
			}
		}
		_match_end_1ac71e5b7:;
	};
}



inline jule::Bool _1c63199a1_isBuiltinConstraint(jule::Str* _18125_ident) {
	{
		auto expr = &(_1c631798d_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac72b45e:;
		if (it != expr_end) {
			jule::Str *_18212_bc = it;
			{
				if (((*(_18125_ident)) == (*(_18212_bc)))) {
					return true;;
				};
			}
			_iter_next_1ac72b45e:;
			++it;
			goto _iter_begin_1ac72b45e;
		}
		_iter_end_1ac72b45e:;
	};
	return false;;
}



inline jule::Ptr<_1c6327a58_scopeChecker> _1c631c531_newScopeCheckerBase(jule::Ptr<_1c63679bb_Sema>* _5829_s, jule::Ptr<_1c62d2b01_FnIns> _5843_owner) {
	return jule::new_ptr<_1c6327a58_scopeChecker>(_1c6327a58_scopeChecker{._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_1c63d8135_SymbolTable>(), });;
}



inline jule::Ptr<_1c6327a58_scopeChecker> _1c631c8e9_newScopeChecker(jule::Ptr<_1c63679bb_Sema>* _6625_s, jule::Ptr<_1c62d2b01_FnIns> _6639_owner) {
	jule::Ptr<_1c6327a58_scopeChecker> _6713_base = _1c631c531_newScopeCheckerBase(_6625_s, _6639_owner);;
	(*(_6713_base))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1c63265b2_scopeLabel>>>(nullptr);
	(*(_6713_base))._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1c6326b45_scopeGoto>>>(nullptr);
	return _6713_base;;
}



inline jule::Ptr<_1c63265b2_scopeLabel> _1c631cc6d_findLabelParent(jule::Str* _7621_ident, jule::Ptr<_1c6327a58_scopeChecker> _7637_scope) {
	jule::Ptr<_1c63265b2_scopeLabel> _7713_label = _1c632b562_findLabelScope(_7637_scope, _7621_ident);;
	while ((_7713_label == nullptr)) {
		{
			if ((((*(_7637_scope))._field_parent == nullptr) || ((*(_7637_scope))._field_owner != nullptr))) {
				return nullptr;;
			};
			_7637_scope=(*(_7637_scope))._field_parent;
			_7713_label=_1c632b562_findLabelScope(_7637_scope, _7621_ident);
		}
	_iter_next_1ac7454cd:;
	}
	_iter_end_1ac7454cd:;;
	return _7713_label;;
}



inline jule::Bool _1c631d136_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1c6320754_Scope>* _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1ac746e6e:;
			{
				jule::Ptr<_1c62c3e88_FnCallExprModel> _9313_fcem = _9021_Model.cast_ptr<_1c62c3e88_FnCallExprModel>(&__jule_any_type34);;
				if (((*(_9313_fcem))._field_Except == (*(_9034_sc)))) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1ac746ed5:;
			{
				jule::Ptr<_1c63dd35a_Data> _9813_d = _9021_Model.cast_ptr<_1c63dd35a_Data>(&__jule_any_type24);;
				return _1c631d136_modelIsGotoScope((*(_9813_d))._field_Model, _9034_sc);;
			}
		}
		_match_end_1ac746e19:;
	};
	return false;;
}



inline jule::Bool _1c631d4aa_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_1c6320754_Scope>* _10434_sc) {
	{
		auto &_match_expr{ (*(_10421_stmt)) };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1ac748ea4:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1c6320754_Scope>(&__jule_any_type22) == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1ac74901a:;
			{
				return ((*((*(_10421_stmt)).cast_ptr<_1c6321689_InfIter>(&__jule_any_type36)))._field_Scope == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1ac749092:;
			{
				jule::Ptr<_1c632258b_RangeIter> _11113_it = (*(_10421_stmt)).cast_ptr<_1c632258b_RangeIter>(&__jule_any_type40);;
				return (((*(_11113_it))._field_Scope == (*(_10434_sc))) || _1c631d136_modelIsGotoScope((*((*(_11113_it))._field_Expr))._field_Model, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1ac749119:;
			{
				jule::Ptr<_1c6321b40_WhileIter> _11413_it = (*(_10421_stmt)).cast_ptr<_1c6321b40_WhileIter>(&__jule_any_type38);;
				return ((((*(_11413_it))._field_Scope == (*(_10434_sc))) || _1c631d136_modelIsGotoScope((*(_11413_it))._field_Expr, _10434_sc)) || _1c631d136_modelIsGotoScope((*(_11413_it))._field_Next, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1ac749339:;
			{
				jule::Ptr<_1c632488a_Match> _11913_m = (*(_10421_stmt)).cast_ptr<_1c632488a_Match>(&__jule_any_type47);;
				{
					auto expr = &((*(_11913_m))._field_Cases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac74d283:;
					if (it != expr_end) {
						jule::Ptr<_1c63254c3_Case> *_12016_c = it;
						{
							if (((*((*(_12016_c))))._field_Scope == (*(_10434_sc)))) {
								return true;;
							};
							{
								auto expr = &((*((*(_12016_c))))._field_Exprs);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ac74e2a6:;
								if (it != expr_end) {
									jule::Ptr<_1c63dd35a_Data> *_12420_expr = it;
									{
										if (_1c631d136_modelIsGotoScope((*((*(_12420_expr))))._field_Model, _10434_sc)) {
											return true;;
										};
									}
									_iter_next_1ac74e2a6:;
									++it;
									goto _iter_begin_1ac74e2a6;
								}
								_iter_end_1ac74e2a6:;
							};
						}
						_iter_next_1ac74d283:;
						++it;
						goto _iter_begin_1ac74d283;
					}
					_iter_end_1ac74d283:;
				};
				return (((*(_11913_m))._field_Default != nullptr) && ((*((*(_11913_m))._field_Default))._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1ac7493b1:;
			{
				jule::Ptr<_1c632138c_Conditional> _13213_c = (*(_10421_stmt)).cast_ptr<_1c632138c_Conditional>(&__jule_any_type35);;
				{
					auto expr = &((*(_13213_c))._field_Elifs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac750c03:;
					if (it != expr_end) {
						jule::Ptr<_1c6320b72_If> *_13316_elif = it;
						{
							if ((((*((*(_13316_elif))))._field_Scope == (*(_10434_sc))) || _1c631d136_modelIsGotoScope((*((*(_13316_elif))))._field_Expr, _10434_sc))) {
								return true;;
							};
						}
						_iter_next_1ac750c03:;
						++it;
						goto _iter_begin_1ac750c03;
					}
					_iter_end_1ac750c03:;
				};
				return (((*(_13213_c))._field_Default != nullptr) && ((*((*(_13213_c))._field_Default))._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1ac749438:;
			{
				jule::Ptr<_1c63dd35a_Data> _14013_d = (*(_10421_stmt)).cast_ptr<_1c63dd35a_Data>(&__jule_any_type24);;
				return _1c631d136_modelIsGotoScope((*(_14013_d))._field_Model, _10434_sc);;
			}
		}
		else {
			_case_begin_1ac73d031:;
			{
				return false;;
			}
		}
		_match_end_1ac748976:;
	};
}



inline jule::I64 _1c631d82e_countMatchType(jule::Ptr<_1c632488a_Match>* _14720_m, jule::Ptr<_1c641d522_TypeKind>* _14732_t) {
	jule::I64 _14813_n = 0LL;;
	jule::Str _1499_kind = _1c641d8da_Str((*(_14732_t)).ptr());;
	_julec_label_1ac753a5d:;
	{
		auto expr = &((*((*(_14720_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7539c5:;
		if (it != expr_end) {
			jule::Ptr<_1c63254c3_Case> *_15112_c = it;
			{
				if (((*(_15112_c)) == nullptr)) {
					goto _iter_next_1ac7539c5;
				};
				{
					auto expr = &((*((*(_15112_c))))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac754a1a:;
					if (it != expr_end) {
						jule::Ptr<_1c63dd35a_Data> *_15616_expr = it;
						{
							if (((*(_15616_expr)) == nullptr)) {
								goto _iter_end_1ac7539c5;
							};
							if ((_1499_kind == _1c641d8da_Str((*((*(_15616_expr))))._field_Model.cast_ptr<_1c641d522_TypeKind>(&__jule_any_type83).ptr()))) {
								(_14813_n)++;
							};
						}
						_iter_next_1ac754a1a:;
						++it;
						goto _iter_begin_1ac754a1a;
					}
					_iter_end_1ac754a1a:;
				};
			}
			_iter_next_1ac7539c5:;
			++it;
			goto _iter_begin_1ac7539c5;
		}
		_iter_end_1ac7539c5:;
	};
	return _14813_n;;
}



inline jule::Slice<jule::Ptr<_1c63dd35a_Data>> _1c631dae8_getDatasFromTupleData(jule::Ptr<_1c63dd35a_Data>* _17131_d) {
	if ((_1c6422999_Tup((*((*(_17131_d))))._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_17131_d))))._field_Model };
			
			if (_match_expr.type == &__jule_any_type81) {
				_case_begin_1ac7592d3:;
				{
					return (*((*((*(_17131_d))))._field_Model.cast_ptr<_1c62c76a6_TupleExprModel>(&__jule_any_type81)))._field_Datas;;
				}
			}
			else {
				_case_begin_1ac756995:;
				{
					jule::Ptr<_1c642b1de_Tuple> _17721_t = _1c6422999_Tup((*((*(_17131_d))))._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_1c63dd35a_Data>> _17821_r = jule::Slice<jule::Ptr<_1c63dd35a_Data>>::alloc(0LL, (*(_17721_t))._field_Types.len());;
					{
						auto expr = &((*(_17721_t))._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac757974:;
						if (it != expr_end) {
							jule::Ptr<_1c641d522_TypeKind> _17925_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_1c63dd35a_Data>> &__jule_push_dest = _17821_r; __jule_push_dest.push(jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_17925_kind, ._field_Mutable=true, })); };
							}
							_iter_next_1ac757974:;
							++it;
							goto _iter_begin_1ac757974;
						}
						_iter_end_1ac757974:;
					};
					return _17821_r;;
				}
			}
			_match_end_1ac756940:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1c63dd35a_Data>>::make({(*(_17131_d))});;
	};
}



inline jule::Bool _1c631e4ab_checkMut(jule::Ptr<_1c63679bb_Sema>* _20618_s, jule::Ptr<_1c63dd35a_Data>* _20629_left, jule::Ptr<_1c63dd35a_Data> _20646_right, jule::Ptr<_1c6283a3b_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*((*(_20629_left))))._field_Mutable))) {
			_case_begin_1ac75c58e:;
			{
				_1c636a606_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str("cannot assign to immutable storage", 34), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!((*(_20646_right))._field_Mutable))) && _1c641eda3_Mutable((*(_20646_right))._field_Kind.ptr()))) {
			_case_begin_1ac75c616:;
			{
				if ((((*(_20660_op))._field_Id != static_cast<jule::U64>(71LLU)) && (_1c64221e6_Struct((*(_20646_right))._field_Kind.ptr()) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1c636a606_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_20646_right))._field_Kind.ptr()), &__jule_any_type4)}));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ac75c4c3:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ac75c418:;
	};
}



inline jule::Bool _1c631e995_checkAssign(jule::Ptr<_1c63679bb_Sema>* _22521_s, jule::Ptr<_1c63dd35a_Data>* _22536_left, jule::Ptr<_1c63dd35a_Data> _22553_right, jule::Ptr<_1c6283a3b_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c62d2b01_FnIns> _2269_f = _1c6421e60_Fn((*((*(_22536_left))))._field_Kind.ptr());;
	if ((((_2269_f != nullptr) && ((*(_2269_f))._field_Decl != nullptr)) && (*((*(_2269_f))._field_Decl))._field_Global)) {
		_1c636a606_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("type is not support assignment", 30), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1c63ddc2e_IsConst((*(_22536_left)).ptr())) {
			_case_begin_1ac762c04:;
			{
				_1c636a606_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("constants is can't assign", 25), jule::Slice<jule::Any>());
				_1c636a969_pushSuggestion((*(_22521_s)).ptr(), jule::Str("remove constant qualifer if you need to assign", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*((*(_22536_left))))._field_Lvalue))) {
			_case_begin_1ac762c7b:;
			{
				_1c636a606_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("invalid expression: expected lvalue for assignment", 50), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1c631e4ab_checkMut(_22521_s, _22536_left, _22553_right, _22567_op)))) {
			_case_begin_1ac762d03:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ac762b38:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ac7622a8:;
	};
}



inline jule::Bool _1c631ec5e_isValidAstStForNextSt(jule::Any* _24731_n) {
	{
		auto &_match_expr{ (*(_24731_n)) };
		
		if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1ac763045:;
			{
				return (!((*((*(_24731_n)).cast_ptr<_1c62a7be7_AssignSt>(&__jule_any_type58)))._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1ac765223:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ac763496:;
			{
				return false;;
			}
		}
		_match_end_1ac764d6b:;
	};
}



inline jule::Bool _1c6320028_isValidStForNextSt(jule::Any* _25824_st) {
	{
		auto &_match_expr{ (*(_25824_st)) };
		
		if (_match_expr.type == &__jule_any_type43 || _match_expr.type == &__jule_any_type44 || _match_expr.type == &__jule_any_type46) {
			_case_begin_1ac765740:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1ac76606a:;
			{
				{
					auto &_match_expr{ (*((*(_25824_st)).cast_ptr<_1c63dd35a_Data>(&__jule_any_type24)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type34) {
						_case_begin_1ac767258:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1ac7671e2:;
						{
							return false;;
						}
					}
					_match_end_1ac76718c:;
				};
			}
		}
		else {
			_case_begin_1ac765d17:;
			{
				return false;;
			}
		}
		_match_end_1ac765cb2:;
	};
}



inline jule::Bool _1c63202e2_stmtIsDef(jule::Any* _27615_st) {
	{
		auto &_match_expr{ (*(_27615_st)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ac766ab5:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ac7673ac:;
			{
				return false;;
			}
		}
		_match_end_1ac766774:;
	};
}



inline jule::U64 _1c633e982_removeEqFromOp(jule::U64 _213819_op) {
	{
		auto &_match_expr{ _213819_op };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1ac7678a7:;
			{
				return static_cast<jule::U64>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1ac768435:;
			{
				return static_cast<jule::U64>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1ac76849b:;
			{
				return static_cast<jule::U64>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1ac7685bc:;
			{
				return static_cast<jule::U64>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1ac768633:;
			{
				return static_cast<jule::U64>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1ac768699:;
			{
				return static_cast<jule::U64>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1ac768721:;
			{
				return static_cast<jule::U64>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1ac768798:;
			{
				return static_cast<jule::U64>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1ac768864:;
			{
				return static_cast<jule::U64>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1ac7688ca:;
			{
				return static_cast<jule::U64>(66LLU);;
			}
		}
		else {
			_case_begin_1ac768127:;
			{
				return _213819_op;;
			}
		}
		_match_end_1ac7680b1:;
	};
}



inline jule::Ptr<_1c6389da6_Var> _1c6343ec5_findVarInPackage(jule::Slice<jule::Ptr<_1c63d8135_SymbolTable>>* _4626_files, jule::Str* _4650_ident, jule::Bool _4662_binded) {
	{
		auto expr = _4626_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8bc06c:;
		if (it != expr_end) {
			jule::Ptr<_1c63d8135_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1c6389da6_Var> _4817_v = _1c63d8a1a_FindVar(_4717_f.ptr(), (*(_4650_ident)), _4662_binded);;
				if ((_4817_v != nullptr)) {
					return _4817_v;;
				};
			}
			_iter_next_1ac8bc06c:;
			++it;
			goto _iter_begin_1ac8bc06c;
		}
		_iter_end_1ac8bc06c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c641c730_TypeAlias> _1c6344448_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1c63d8135_SymbolTable>>* _5832_files, jule::Str* _5856_ident, jule::Bool _5868_binded) {
	{
		auto expr = _5832_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8bd5ce:;
		if (it != expr_end) {
			jule::Ptr<_1c63d8135_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1c641c730_TypeAlias> _6017_ta = _1c63d8e16_FindTypeAlias(_5917_f.ptr(), (*(_5856_ident)), _5868_binded);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;;
				};
			}
			_iter_next_1ac8bd5ce:;
			++it;
			goto _iter_begin_1ac8bd5ce;
		}
		_iter_end_1ac8bd5ce:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c62b9d3b_Struct> _1c6344877_findStructInPackage(jule::Slice<jule::Ptr<_1c63d8135_SymbolTable>>* _7029_files, jule::Str* _7053_ident, jule::Bool _7065_binded) {
	{
		auto expr = _7029_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8beb41:;
		if (it != expr_end) {
			jule::Ptr<_1c63d8135_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1c62b9d3b_Struct> _7217_s = _1c63d9312_FindStruct(_7117_f.ptr(), (*(_7053_ident)), _7065_binded);;
				if ((_7217_s != nullptr)) {
					return _7217_s;;
				};
			}
			_iter_next_1ac8beb41:;
			++it;
			goto _iter_begin_1ac8beb41;
		}
		_iter_end_1ac8beb41:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c62cebec_Fn> _1c6344d2d_findFnInPackage(jule::Slice<jule::Ptr<_1c63d8135_SymbolTable>>* _8225_files, jule::Str* _8249_ident, jule::Bool _8261_binded) {
	{
		auto expr = _8225_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8c11a3:;
		if (it != expr_end) {
			jule::Ptr<_1c63d8135_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1c62cebec_Fn> _8417_f = _1c63d970d_FindFn(_8317_file.ptr(), (*(_8249_ident)), _8261_binded);;
				if ((_8417_f != nullptr)) {
					return _8417_f;;
				};
			}
			_iter_next_1ac8c11a3:;
			++it;
			goto _iter_begin_1ac8c11a3;
		}
		_iter_end_1ac8c11a3:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c62e2e96_Trait> _1c634516e_findTraitInPackage(jule::Slice<jule::Ptr<_1c63d8135_SymbolTable>>* _9428_files, jule::Str* _9452_ident) {
	{
		auto expr = _9428_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8c179c:;
		if (it != expr_end) {
			jule::Ptr<_1c63d8135_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1c62e2e96_Trait> _9617_t = _1c63d9a4e_FindTrait(_9517_f.ptr(), (*(_9452_ident)));;
				if ((_9617_t != nullptr)) {
					return _9617_t;;
				};
			}
			_iter_next_1ac8c179c:;
			++it;
			goto _iter_begin_1ac8c179c;
		}
		_iter_end_1ac8c179c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c62e5691_Enum> _1c63454e3_findEnumInPackage(jule::Slice<jule::Ptr<_1c63d8135_SymbolTable>>* _10627_files, jule::Str* _10651_ident) {
	{
		auto expr = _10627_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8c3859:;
		if (it != expr_end) {
			jule::Ptr<_1c63d8135_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1c62e5691_Enum> _10817_e = _1c63d9d90_FindEnum(_10717_f.ptr(), (*(_10651_ident)));;
				if ((_10817_e != nullptr)) {
					return _10817_e;;
				};
			}
			_iter_next_1ac8c3859:;
			++it;
			goto _iter_begin_1ac8c3859;
		}
		_iter_end_1ac8c3859:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c62e6d9b_TypeEnum> _1c6345867_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1c63d8135_SymbolTable>>* _11831_files, jule::Str* _11855_ident) {
	{
		auto expr = _11831_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8c4bce:;
		if (it != expr_end) {
			jule::Ptr<_1c63d8135_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_1c62e6d9b_TypeEnum> _12017_e = _1c63da1d1_FindTypeEnum(_11917_f.ptr(), (*(_11855_ident)));;
				if ((_12017_e != nullptr)) {
					return _12017_e;;
				};
			}
			_iter_next_1ac8c4bce:;
			++it;
			goto _iter_begin_1ac8c4bce;
		}
		_iter_end_1ac8c4bce:;
	};
	return nullptr;;
}



inline jule::Any _1c6345da6_defByIdentPackage(jule::Slice<jule::Ptr<_1c63d8135_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_binded) {
	{
		auto expr = _12927_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8c6296:;
		if (it != expr_end) {
			jule::Ptr<_1c63d8135_SymbolTable> _13017_file = *it;
			{
				jule::Any _13117_def = _1c63db19e_defByIdent(_13017_file.ptr(), _12951_ident, _12963_binded);;
				if ((_13117_def != nullptr)) {
					return _13117_def;;
				};
			}
			_iter_next_1ac8c6296:;
			++it;
			goto _iter_begin_1ac8c6296;
		}
		_iter_end_1ac8c6296:;
	};
	return nullptr;;
}



inline jule::Bool _1c634bde0_isStdPackage(jule::Str* _35518_f, jule::Str _35526_p) {
	return _2218bcd3e_HasPrefix((*(_35518_f)), _2218c8be6_Join(jule::Slice<jule::Str>::make({_221a2e764_PathStdlib,_35526_p})));;
}



inline jule::Bool _1c636515b_isValidModelForRef(jule::Any* _1328_m) {
	{
		auto &_match_expr{ (*(_1328_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ac8d6e11:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1ac8d6e77:;
			{
				jule::Ptr<_1c62c6a29_StructSubIdentExprModel> _1817_model = (*(_1328_m)).cast_ptr<_1c62c6a29_StructSubIdentExprModel>(&__jule_any_type97);;
				return _1c636515b_isValidModelForRef(&((*((*(_1817_model))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1ac8d6edd:;
			{
				jule::Ptr<_1c62c6188_TraitSubIdentExprModel> _2117_model = (*(_1328_m)).cast_ptr<_1c62c6188_TraitSubIdentExprModel>(&__jule_any_type96);;
				return _1c636515b_isValidModelForRef(&((*(_2117_model))._field_Expr));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ac8d7065:;
			{
				jule::Ptr<_1c62c2382_UnaryExprModel> _2417_unary = (*(_1328_m)).cast_ptr<_1c62c2382_UnaryExprModel>(&__jule_any_type110);;
				if (((*((*(_2417_unary))._field_Op))._field_Id != static_cast<jule::U64>(62LLU))) {
					return false;;
				};
				if ((_1c6421190_Ptr((*((*(_2417_unary))._field_Expr))._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1c6420e09_Sptr((*((*(_2417_unary))._field_Expr))._field_Kind.ptr()) == nullptr)) {
					return false;;
				};
				return _1c636515b_isValidModelForRef(&((*((*(_2417_unary))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1ac8d7252:;
			{
				jule::Ptr<_1c62c4818_IndexingExprModel> _3817_indexing = (*(_1328_m)).cast_ptr<_1c62c4818_IndexingExprModel>(&__jule_any_type45);;
				return _1c636515b_isValidModelForRef(&((*((*(_3817_indexing))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1ac8d6d9a:;
			{
				return false;;
			}
		}
		_match_end_1ac8d6938:;
	};
}



inline _221968cb9_Log _1c6365689_compilerErr(jule::Ptr<_1c6283a3b_Token>* _4517_token, jule::Bool _4532_line, jule::Str _4544_fmt, jule::Slice<jule::Any> _4557_args) {
	_221968cb9_Log _4613_log = _221968cb9_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_4517_token))))._field_Row, ._field_Column=(*((*(_4517_token))))._field_Column, ._field_Path=(*((*((*(_4517_token))))._field_File))._field_Path, ._field_Text=_22196922b_Logf(_4544_fmt, _4557_args), };;
	if (_4532_line) {
		_4613_log._field_Line=_1c628a2d4_GetRow((*((*(_4517_token))))._field_File.ptr(), (*((*(_4517_token))))._field_Row);
	};
	return _4613_log;;
}



inline jule::Bool _1c6365a0d_impIsLookupable(jule::Ptr<_1c63469de_ImportInfo>* _5921_i, jule::Str* _5938_ident) {
	if ((*((*(_5921_i))))._field_Binded) {
		return false;;
	};
	if ((!((*((*(_5921_i))))._field_ImportAll))) {
		if (((*((*(_5921_i))))._field_Selected.len() > 0LL)) {
			return _1c6349371_existIdent((*(_5921_i)).ptr(), (*(_5938_ident)));;
		};
	};
	return (*((*(_5921_i))))._field_ImportAll;;
}



inline void _1c6365cb6_appendRetVars(jule::Slice<jule::Ptr<_1c6389da6_Var>>* _7123_dest, jule::Ptr<_1c62d2b01_FnIns>* _7142_f) {
	if ((_1c62d0170_IsVoid((*((*(_7142_f))))._field_Decl.ptr()) || ((*((*(_7142_f))))._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1c641d522_TypeKind>> _7613_types = _1c62d3d00_Types((*(_7142_f)).ptr());;
	{
		auto expr = &((*((*((*((*(_7142_f))))._field_Decl))._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8e2e50:;
		if (it != expr_end) {
			jule::I64 _7710_i = it - expr->begin();
			jule::Ptr<_1c6283a3b_Token> _7717_ident = *it;
			{
				if ((_1c628649a_IsIgnoreIdent((*(_7717_ident))._field_Kind) || _1c6286764_IsAnonIdent((*(_7717_ident))._field_Kind))) {
					goto _iter_next_1ac8e2e50;
				};
				{ jule::Slice<jule::Ptr<_1c6389da6_Var>> &__jule_push_dest = (*(_7123_dest)); __jule_push_dest.push(jule::new_ptr<_1c6389da6_Var>(_1c6389da6_Var{._field_Scope=(*((*(_7142_f))))._field_Scope, ._field_Token=_7717_ident, ._field_Ident=(*(_7717_ident))._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_1c64256e4_TypeSymbol>(_1c64256e4_TypeSymbol{._field_Kind=_7613_types[_7710_i]}), ._field_Value=jule::new_ptr<_1c63de49e_Value>(_1c63de49e_Value{._field_Data=jule::new_ptr<_1c63dd35a_Data>()}), ._field_RetOrder=_7710_i, })); };
			}
			_iter_next_1ac8e2e50:;
			++it;
			_7710_i++;
			goto _iter_begin_1ac8e2e50;
		}
		_iter_end_1ac8e2e50:;
	};
	if ((((*((*((*((*(_7142_f))))._field_Decl))._field_Result))._field_Idents.len() == 1LL) && ((*(_7123_dest)).len() == 1LL))) {
		(*((*(_7123_dest))[((*(_7123_dest)).len() - 1LL)]))._field_RetOrder=-1LL;
	};
}



inline void _1c63660a2_appendParamVars(jule::Slice<jule::Ptr<_1c6389da6_Var>>* _10125_dest, jule::Ptr<_1c62d2b01_FnIns>* _10144_f) {
	if (((*((*(_10144_f))))._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_10144_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8e76d5:;
		if (it != expr_end) {
			jule::Ptr<_1c62d1b55_ParamIns> _10617_p = *it;
			{
				if ((_1c628649a_IsIgnoreIdent((*((*(_10617_p))._field_Decl))._field_Ident) || _1c6286764_IsAnonIdent((*((*(_10617_p))._field_Decl))._field_Ident))) {
					goto _iter_next_1ac8e76d5;
				};
				jule::Ptr<_1c6389da6_Var> _11117_v = jule::new_ptr<_1c6389da6_Var>(_1c6389da6_Var{._field_Scope=(*((*(_10144_f))))._field_Scope, ._field_Token=(*((*(_10617_p))._field_Decl))._field_Token, ._field_Ident=(*((*(_10617_p))._field_Decl))._field_Ident, ._field_Mutable=(*((*(_10617_p))._field_Decl))._field_Mutable, ._field_Used=true, ._field_Reference=(*((*(_10617_p))._field_Decl))._field_Reference, ._field_Kind=jule::new_ptr<_1c64256e4_TypeSymbol>(), ._field_Value=jule::new_ptr<_1c63de49e_Value>(_1c63de49e_Value{._field_Data=jule::new_ptr<_1c63dd35a_Data>()}), });;
				{
					
					if (_1c62cd844_IsSelf((*(_10617_p))._field_Decl.ptr())) {
						_case_begin_1ac8ec3cc:;
						{
							(*((*(_11117_v))._field_Kind))._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1c641d06b_Kind>((*((*(_10144_f))))._field_Owner, 0)});
							(*(_11117_v))._field_Reference=(!(_1c62cdaca_IsRef((*(_10617_p))._field_Decl.ptr())));
							if (_1c62cdaca_IsRef((*(_10617_p))._field_Decl.ptr())) {
								(*(_11117_v))._field_Ident=(*(_11117_v))._field_Ident.slice(1LL);
								(*((*((*(_11117_v))._field_Kind))._field_Kind))._field_Kind=jule::Trait<_1c641d06b_Kind>(jule::new_ptr<_1c6429b27_Sptr>(_1c6429b27_Sptr{._field_Elem=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_BindIdent=(*((*((*(_11117_v))._field_Kind))._field_Kind))._field_BindIdent, ._field_Kind=(*((*((*(_11117_v))._field_Kind))._field_Kind))._field_Kind})}), 21);
							};
						}
					}
					else if ((*((*(_10617_p))._field_Decl))._field_Variadic) {
						_case_begin_1ac8ebd9e:;
						{
							(*((*(_11117_v))._field_Kind))._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1c641d06b_Kind>(jule::new_ptr<_1c642a5ea_Slc>(_1c642a5ea_Slc{._field_Elem=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_BindIdent=(*((*(_10617_p))._field_Kind))._field_BindIdent, ._field_Kind=(*((*(_10617_p))._field_Kind))._field_Kind})}), 22)});
						}
					}
					else {
						_case_begin_1ac8eba4c:;
						{
							(*((*(_11117_v))._field_Kind))._field_Kind=(*(_10617_p))._field_Kind;
						}
					}
					_match_end_1ac8eb92b:;
				};
				{ jule::Slice<jule::Ptr<_1c6389da6_Var>> &__jule_push_dest = (*(_10125_dest)); __jule_push_dest.push(_11117_v); };
			}
			_iter_next_1ac8e76d5:;
			++it;
			goto _iter_begin_1ac8e76d5;
		}
		_iter_end_1ac8e76d5:;
	};
}



inline void _1c636638d_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1c641c730_TypeAlias>>* _16134_dest, jule::Ptr<_1c62d2b01_FnIns>* _16159_f) {
	jule::I64 _16213_size = (*((*(_16159_f))))._field_Generics.len();;
	if (((*((*((*(_16159_f))))._field_Decl))._field_Owner != nullptr)) {
		_16213_size+=(*((*((*((*(_16159_f))))._field_Decl))._field_Owner))._field_Generics.len();
	};
	if ((_16213_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_16159_f))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac904d30:;
		if (it != expr_end) {
			jule::I64 _17110_i = it - expr->begin();
			jule::Ptr<_1c641bb3b_InsGeneric> _17117_g = *it;
			{
				jule::Ptr<_1c62a6454_GenericDecl> _17217_decl = (*((*((*(_16159_f))))._field_Decl))._field_Generics[_17110_i];;
				{ jule::Slice<jule::Ptr<_1c641c730_TypeAlias>> &__jule_push_dest = (*(_16134_dest)); __jule_push_dest.push(jule::new_ptr<_1c641c730_TypeAlias>(_1c641c730_TypeAlias{._field_Scope=(*((*((*(_16159_f))))._field_Decl))._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=(*(_17217_decl))._field_Token, ._field_Ident=(*(_17217_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1c64256e4_TypeSymbol>(_1c64256e4_TypeSymbol{._field_Kind=(*(_17117_g))._field_Kind}), })); };
			}
			_iter_next_1ac904d30:;
			++it;
			_17110_i++;
			goto _iter_begin_1ac904d30;
		}
		_iter_end_1ac904d30:;
	};
	if (((*((*((*(_16159_f))))._field_Decl))._field_Owner != nullptr)) {
		jule::Ptr<_1c62bcab9_StructIns> _18417_owner = (*((*(_16159_f))))._field_Owner;;
		{
			auto expr = &((*(_18417_owner))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac90800e:;
			if (it != expr_end) {
				jule::I64 _18514_i = it - expr->begin();
				jule::Ptr<_1c641bb3b_InsGeneric> _18521_g = *it;
				{
					jule::Ptr<_1c62a6454_GenericDecl> _18621_decl = (*((*(_18417_owner))._field_Decl))._field_Generics[_18514_i];;
					{ jule::Slice<jule::Ptr<_1c641c730_TypeAlias>> &__jule_push_dest = (*(_16134_dest)); __jule_push_dest.push(jule::new_ptr<_1c641c730_TypeAlias>(_1c641c730_TypeAlias{._field_Scope=(*((*((*(_16159_f))))._field_Decl))._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=(*(_18621_decl))._field_Token, ._field_Ident=(*(_18621_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1c64256e4_TypeSymbol>(_1c64256e4_TypeSymbol{._field_Kind=(*(_18521_g))._field_Kind}), })); };
				}
				_iter_next_1ac90800e:;
				++it;
				_18514_i++;
				goto _iter_begin_1ac90800e;
			}
			_iter_end_1ac90800e:;
		};
	};
}



inline jule::Ptr<_1c63d8135_SymbolTable> _1c6366712_findFile(jule::Slice<jule::Ptr<_1c63d8135_SymbolTable>>* _19918_files, jule::Ptr<_1c6289305_File>* _19942_handler) {
	{
		auto expr = _19918_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac908cbd:;
		if (it != expr_end) {
			jule::Ptr<_1c63d8135_SymbolTable> _20017_fl = *it;
			{
				if (((*(_20017_fl))._field_File == (*(_19942_handler)))) {
					return _20017_fl;;
				};
			}
			_iter_next_1ac908cbd:;
			++it;
			goto _iter_begin_1ac908cbd;
		}
		_iter_end_1ac908cbd:;
	};
	return nullptr;;
}



inline void _1c6366bb8_pushSuggestion(_221968cb9_Log* _20830_log, jule::Str _20841_fmt, jule::Slice<jule::Any> _20854_args) {
	(*(_20830_log))._field_Suggestion=_22196922b_Logf(_20841_fmt, _20854_args);
}



inline void _1c6388190_pushImplemented(jule::Ptr<_1c62e2e96_Trait> _285624_t, jule::Ptr<_1c62b9d3b_Struct>* _285640_d) {
	_julec_label_1ac90c8e8:;
	{
		
		if (((*(_285624_t))._field_Implemented.len() > 0LL)) {
			_case_begin_1ac90d113:;
			{
				{
					auto expr = &((*(_285624_t))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac90ddc2:;
					if (it != expr_end) {
						jule::Ptr<_1c62b9d3b_Struct> _286016_s = *it;
						{
							if ((_286016_s == (*(_285640_d)))) {
								goto _match_end_1ac90cb18;
							};
						}
						_iter_next_1ac90ddc2:;
						++it;
						goto _iter_begin_1ac90ddc2;
					}
					_iter_end_1ac90ddc2:;
				};
				goto _case_begin_1ac90cb7e;
			}
		}
		else {
			_case_begin_1ac90cb7e:;
			{
				{ jule::Slice<jule::Ptr<_1c62b9d3b_Struct>> &__jule_push_dest = (*(_285624_t))._field_Implemented; __jule_push_dest.push((*(_285640_d))); };
			}
		}
		_match_end_1ac90cb18:;
	};
	{
		auto expr = &((*(_285624_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac90e81d:;
		if (it != expr_end) {
			jule::Ptr<_1c64256e4_TypeSymbol> _286917_i = *it;
			{
				_1c6388190_pushImplemented(_1c642247c_Trait((*(_286917_i))._field_Kind.ptr()), _285640_d);
			}
			_iter_next_1ac90e81d:;
			++it;
			goto _iter_begin_1ac90e81d;
		}
		_iter_end_1ac90e81d:;
	};
}



inline void _1c638847b_pushImplements(jule::Ptr<_1c62b9d3b_Struct>* _287424_s, jule::Ptr<_1c62e2e96_Trait> _287440_t) {
	_julec_label_1ac9108a7:;
	{
		
		if (((*((*(_287424_s))))._field_Implements.len() > 0LL)) {
			_case_begin_1ac9110c2:;
			{
				{
					auto expr = &((*((*(_287424_s))))._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac911d81:;
					if (it != expr_end) {
						jule::Ptr<_1c62e2e96_Trait> _287816_b = *it;
						{
							if ((_287816_b == _287440_t)) {
								goto _match_end_1ac910ac7;
							};
						}
						_iter_next_1ac911d81:;
						++it;
						goto _iter_begin_1ac911d81;
					}
					_iter_end_1ac911d81:;
				};
				goto _case_begin_1ac910b3d;
			}
		}
		else {
			_case_begin_1ac910b3d:;
			{
				{ jule::Slice<jule::Ptr<_1c62e2e96_Trait>> &__jule_push_dest = (*((*(_287424_s))))._field_Implements; __jule_push_dest.push(_287440_t); };
			}
		}
		_match_end_1ac910ac7:;
	};
	{
		auto expr = &((*(_287440_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9127cc:;
		if (it != expr_end) {
			jule::Ptr<_1c64256e4_TypeSymbol> _288717_i = *it;
			{
				_1c638847b_pushImplements(_287424_s, _1c642247c_Trait((*(_288717_i))._field_Kind.ptr()));
			}
			_iter_next_1ac9127cc:;
			++it;
			goto _iter_begin_1ac9127cc;
		}
		_iter_end_1ac9127cc:;
	};
}



inline jule::Bool _1c63c3c47_traitHasReferenceReceiver(jule::Ptr<_1c62e2e96_Trait>* _2731_t) {
	{
		auto expr = &((*((*(_2731_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb1d510:;
		if (it != expr_end) {
			jule::Ptr<_1c62cebec_Fn> *_2812_f = it;
			{
				if ((*((*(_2812_f))))._field_Statically) {
					goto _iter_next_1acb1d510;
				};
				jule::Ptr<_1c62cd228_Param> _3413_p = (*((*(_2812_f))))._field_Params[0LL];;
				if ((_1c62cdaca_IsRef(_3413_p.ptr()) && _1c62cd844_IsSelf(_3413_p.ptr()))) {
					return true;;
				};
			}
			_iter_next_1acb1d510:;
			++it;
			goto _iter_begin_1acb1d510;
		}
		_iter_end_1acb1d510:;
	};
	return false;;
}



inline jule::Bool _1c63c40cc_floatAssignable(jule::Str* _4221_kind, jule::Ptr<_1c63dd35a_Data>* _4233_d) {
	jule::Str _439_value = _1dc2382c1_FmtFloat(static_cast<jule::F64>(_1dc263252_AsF64((*((*(_4233_d))))._field_Constant.ptr())), 'g', -1LL, 64LL);;
	return _1dc2539e5_CheckBitFloat(_439_value, static_cast<jule::I64>(_1dc2524c7_BitsizeOf((*(_4221_kind)))));;
}



inline jule::Bool _1c63c4451_sigAssignable(jule::Str _4718_kind, jule::Ptr<_1c63dd35a_Data>* _4730_d) {
	jule::F64 _489_min = _1dc258ca3_Min(_4718_kind);;
	jule::F64 _499_max = _1dc25906c_Max(_4718_kind);;
	{
		
		if (_1dc26509a_IsF64((*((*(_4730_d))))._field_Constant.ptr())) {
			_case_begin_1acb224c0:;
			{
				jule::F64 _5213_x = _1dc26299e_ReadF64((*((*(_4730_d))))._field_Constant.ptr());;
				jule::F64 _5314_i = 0;;
				jule::F64 _5317_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1dc20d483_Modf(_5213_x);
					_5314_i = __jule_assign_result.__jule_result_arg0;
					_5317_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_5317_frac != 0LL)) {
					return false;;
				};
				return ((_5314_i >= _489_min) && (_5314_i <= _499_max));;
			}
		}
		else if (_1dc2647e7_IsU64((*((*(_4730_d))))._field_Constant.ptr())) {
			_case_begin_1acb22547:;
			{
				jule::F64 _5913_x = _1dc263252_AsF64((*((*(_4730_d))))._field_Constant.ptr());;
				if ((_5913_x <= _499_max)) {
					return true;;
				};
			}
		}
		else if (_1dc264561_IsI64((*((*(_4730_d))))._field_Constant.ptr())) {
			_case_begin_1acb225be:;
			{
				jule::F64 _6413_x = _1dc263252_AsF64((*((*(_4730_d))))._field_Constant.ptr());;
				return ((_489_min <= _6413_x) && (_6413_x <= _499_max));;
			}
		}
		_match_end_1acb2238d:;
	};
	return false;;
}



inline jule::Bool _1c63c4819_unsigAssignable(jule::Str _7020_kind, jule::Ptr<_1c63dd35a_Data>* _7032_d) {
	jule::F64 _719_max = _1dc25906c_Max(_7020_kind);;
	if (((*((*(_7032_d))))._field_IsRune && _7020_kind.equal("u8", 2))) {
		return _1c63a9b95_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_1dc261e65_ReadI64((*((*(_7032_d))))._field_Constant.ptr()))));;
	};
	{
		
		if (_1dc26509a_IsF64((*((*(_7032_d))))._field_Constant.ptr())) {
			_case_begin_1acb28031:;
			{
				jule::F64 _7813_x = _1dc26299e_ReadF64((*((*(_7032_d))))._field_Constant.ptr());;
				if ((_7813_x < 0LL)) {
					return false;;
				};
				jule::F64 _8214_i = 0;;
				jule::F64 _8217_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1dc20d483_Modf(_7813_x);
					_8214_i = __jule_assign_result.__jule_result_arg0;
					_8217_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_8217_frac != 0LL)) {
					return false;;
				};
				return (_8214_i <= _719_max);;
			}
		}
		else if (_1dc2647e7_IsU64((*((*(_7032_d))))._field_Constant.ptr())) {
			_case_begin_1acb28097:;
			{
				jule::F64 _8813_x = _1dc263252_AsF64((*((*(_7032_d))))._field_Constant.ptr());;
				if ((_8813_x <= _719_max)) {
					return true;;
				};
			}
		}
		else if (_1dc264561_IsI64((*((*(_7032_d))))._field_Constant.ptr())) {
			_case_begin_1acb2810d:;
			{
				jule::F64 _9313_x = _1dc263252_AsF64((*((*(_7032_d))))._field_Constant.ptr());;
				return ((0LL <= _9313_x) && (_9313_x <= _719_max));;
			}
		}
		_match_end_1acb276e5:;
	};
	return false;;
}



inline jule::Bool _1c63c4b8d_intAssignable(jule::Str _9918_kind, jule::Ptr<_1c63dd35a_Data>* _9930_d) {
	{
		
		if (_1dc25e2b4_IsSigInt(_9918_kind)) {
			_case_begin_1acb2cbe5:;
			{
				return _1c63c4451_sigAssignable(_9918_kind, _9930_d);;
			}
		}
		else if (_1dc25e5c2_IsUnsigInt(_9918_kind)) {
			_case_begin_1acb2cc6c:;
			{
				return _1c63c4819_unsigAssignable(_9918_kind, _9930_d);;
			}
		}
		else {
			_case_begin_1acb2c651:;
			{
				return false;;
			}
		}
		_match_end_1acb2b8a3:;
	};
}



inline void _1c63d134d_checkMutRiskOfStructLit(jule::Ptr<_1c63679bb_Sema>* _94433_s, jule::Ptr<_1c62c2c56_StructLitExprModel>* _94444_m) {
	{
		auto expr = &((*((*(_94444_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb2d553:;
		if (it != expr_end) {
			jule::Ptr<_1c62c28b0_StructArgExprModel> *_94512_arg = it;
			{
				if ((*((*((*((*(_94512_arg))))._field_Field))._field_Decl))._field_Mutable) {
					goto _iter_next_1acb2d553;
				};
				if (((!((*((*((*(_94512_arg))))._field_Expr))._field_Mutable)) && _1c641eda3_Mutable((*((*((*(_94512_arg))))._field_Expr))._field_Kind.ptr()))) {
					_1c636a606_pushErr((*(_94433_s)).ptr(), (*((*(_94512_arg))))._field_Token, jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*((*((*(_94512_arg))))._field_Expr))._field_Kind.ptr()), &__jule_any_type4)}));
				};
			}
			_iter_next_1acb2d553:;
			++it;
			goto _iter_begin_1acb2d553;
		}
		_iter_end_1acb2d553:;
	};
}



inline jule::Ptr<_1c641d522_TypeKind> _1c63d6de2_lenKind(void) {
	return _1c650a07b_primInt;;
}



inline jule::Bool _1c63d7244_isGoodValueToInfer(jule::Ptr<_1c63dd35a_Data>* _140824_d) {
	return (!(_1c63dd712_IsNil((*(_140824_d)).ptr())));;
}



inline jule::Ptr<_1c6298666_Directive> _1c6416938_findDirective(jule::Slice<jule::Ptr<_1c6298666_Directive>>* _419523_directives, jule::Str _419554_d) {
	{
		auto expr = _419523_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd21c0d:;
		if (it != expr_end) {
			jule::Ptr<_1c6298666_Directive> _419617_dr = *it;
			{
				if (((*((*(_419617_dr))._field_Tag))._field_Kind == _419554_d)) {
					return _419617_dr;;
				};
			}
			_iter_next_1acd21c0d:;
			++it;
			goto _iter_begin_1acd21c0d;
		}
		_iter_end_1acd21c0d:;
	};
	return nullptr;;
}



inline jule::Any _1c6416d01_findBuiltinsImport(jule::Str* _420424_ident, jule::Ptr<_1c63469de_ImportInfo> _420436_imp) {
	return _1c650d7cc_findPackageBuiltinDef(&((*(_420436_imp))._field_LinkPath), _420424_ident);;
}



inline void _1c6417032_fitBitsize(jule::Ptr<_1c63dd35a_Data>* _421120_d) {
	jule::Ptr<_1c64260eb_Prim> _421213_prim = _1c6420b73_Prim((*((*(_421120_d))))._field_Kind.ptr());;
	jule::I64 _42139_z = _1dc2524c7_BitsizeOf(_1c642643c_Str(_421213_prim.ptr()));;
	if ((_42139_z == 64LLU)) {
		return;;
	};
	jule::I64 _421813_k = 0LL;;
	{
		
		if (_1dc264561_IsI64((*((*(_421120_d))))._field_Constant.ptr())) {
			_case_begin_1acd25739:;
			{
				_421813_k=static_cast<jule::I64>(_1dc254078_BitsizeOfInt(static_cast<jule::I64>(_1dc261e65_ReadI64((*((*(_421120_d))))._field_Constant.ptr()))));
				if ((_421813_k > _42139_z)) {
					(*((*((*(_421120_d))))._field_Constant))._field_Kind=_1dc252818_IntFromBits(_421813_k);
					(*((*(_421120_d))))._field_Kind=(*((*(_1c650c49b_findBuiltinTypeAlias((*((*((*(_421120_d))))._field_Constant))._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_1dc2647e7_IsU64((*((*(_421120_d))))._field_Constant.ptr())) {
			_case_begin_1acd257b1:;
			{
				_421813_k=static_cast<jule::I64>(_1dc254342_BitsizeOfUint(static_cast<jule::U64>(_1dc2621eb_ReadU64((*((*(_421120_d))))._field_Constant.ptr()))));
				if ((_421813_k > _42139_z)) {
					(*((*((*(_421120_d))))._field_Constant))._field_Kind=_1dc252ad2_UintFromBits(_421813_k);
					(*((*(_421120_d))))._field_Kind=(*((*(_1c650c49b_findBuiltinTypeAlias((*((*((*(_421120_d))))._field_Constant))._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_1dc26509a_IsF64((*((*(_421120_d))))._field_Constant.ptr())) {
			_case_begin_1acd25838:;
			{
				_421813_k=static_cast<jule::I64>(_1dc253cae_BitsizeOfFloat(static_cast<jule::F64>(_1dc26299e_ReadF64((*((*(_421120_d))))._field_Constant.ptr()))));
				if ((_421813_k > _42139_z)) {
					(*((*((*(_421120_d))))._field_Constant))._field_Kind=_1dc252d9b_FloatFromBits(_421813_k);
					(*((*(_421120_d))))._field_Kind=(*((*(_1c650c49b_findBuiltinTypeAlias((*((*((*(_421120_d))))._field_Constant))._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		_match_end_1acd2566d:;
	};
}



inline void _1c6417362_makeStructLitAlloc(jule::Ptr<_1c63dd35a_Data>* _424128_d, jule::Ptr<_1c62c2c56_StructLitExprModel>* _424143_lit) {
	(*((*(_424128_d))))._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(jule::new_ptr<_1c6429b27_Sptr>(_1c6429b27_Sptr{._field_Elem=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>((*((*(_424143_lit))))._field_Strct, 0)})}), 21)});
	(*((*(_424128_d))))._field_Model=jule::Any(jule::new_ptr<_1c62c3053_AllocStructLitExprModel>(_1c62c3053_AllocStructLitExprModel{._field_Lit=(*(_424143_lit))}), &__jule_any_type112);
}



inline jule::Ptr<_1c6389da6_Var> _1c64176d6_buildErrorVar(jule::Ptr<_1c6320754_Scope>* _425223_s, jule::Ptr<_1c62a22a7_FnCallExpr>* _425239_fc) {
	return jule::new_ptr<_1c6389da6_Var>(_1c6389da6_Var{._field_Scope=(*(_425223_s)), ._field_Token=(*((*(_425239_fc))))._field_Token, ._field_Ident=jule::Str("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=(*(_1c650c49b_findBuiltinTypeAlias(jule::Str("any", 3))))._field_Kind, ._field_Value=jule::new_ptr<_1c63de49e_Value>(_1c63de49e_Value{._field_Data=jule::new_ptr<_1c63dd35a_Data>()}), });;
}



inline jule::Any _1c6417a5a_findBuiltinsSema(jule::Str* _426722_ident, jule::Ptr<_1c63679bb_Sema> _426738_s) {
	{
		auto expr = &((*((*(_426738_s))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd30920:;
		if (it != expr_end) {
			jule::Ptr<_1c63469de_ImportInfo> _426817_imp = *it;
			{
				if (((*(_426817_imp))._field_ImportAll || _1c6349371_existIdent(_426817_imp.ptr(), (*(_426722_ident))))) {
					jule::Any _427021_def = _1c6416d01_findBuiltinsImport(_426722_ident, _426817_imp);;
					if ((_427021_def != nullptr)) {
						return _427021_def;;
					};
				};
			}
			_iter_next_1acd30920:;
			++it;
			goto _iter_begin_1acd30920;
		}
		_iter_end_1acd30920:;
	};
	jule::Str _427813_ppath = _1c6289976_Dir((*((*(_426738_s))._field_file))._field_File.ptr());;
	if (_2218bcd3e_HasPrefix(_427813_ppath, _221a2e764_PathStdlib)) {
		(_427813_ppath).mut_slice(_221a2e764_PathStdlib.len());;
		_427813_ppath=(jule::Str("std", 3) + _2218c441c_Replace(_427813_ppath, jule::Str("\\", 1), jule::Str("::", 2), -1LL));
		return _1c650d7cc_findPackageBuiltinDef(&(_427813_ppath), _426722_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1c6417d24_isOkForShifting(jule::Ptr<_1c63dd35a_Data>* _429225_d) {
	if (_1c63ddc2e_IsConst((*(_429225_d)).ptr())) {
		{
			
			if (_1dc264561_IsI64((*((*(_429225_d))))._field_Constant.ptr())) {
				_case_begin_1acd342e7:;
				{
					return (_1dc261e65_ReadI64((*((*(_429225_d))))._field_Constant.ptr()) >= 0LL);;
				}
			}
			else if (_1dc2647e7_IsU64((*((*(_429225_d))))._field_Constant.ptr())) {
				_case_begin_1acd3436e:;
				{
					return true;;
				}
			}
			else if (_1dc26509a_IsF64((*((*(_429225_d))))._field_Constant.ptr())) {
				_case_begin_1acd343e6:;
				{
					return (_1dc26299e_ReadF64((*((*(_429225_d))))._field_Constant.ptr()) >= 0LL);;
				}
			}
			else {
				_case_begin_1acd3421a:;
				{
					return false;;
				}
			}
			_match_end_1acd34160:;
		};
	};
	jule::Ptr<_1c64260eb_Prim> _43059_prim = _1c6420b73_Prim((*((*(_429225_d))))._field_Kind.ptr());;
	return ((_43059_prim != nullptr) && _1dc25e88b_IsInt(_1c642643c_Str(_43059_prim.ptr())));;
}



inline jule::Bool _1c64181ed_isInstancedStruct(jule::Ptr<_1c62bcab9_StructIns> _430922_s) {
	return ((*((*(_430922_s))._field_Decl))._field_Generics.len() == (*(_430922_s))._field_Generics.len());;
}



inline jule::Bool _1c6418572_isPtrArithmeticCompatible(jule::Ptr<_1c63dd35a_Data>* _431335_l, jule::Ptr<_1c63dd35a_Data>* _431350_r) {
	jule::Ptr<_1c642d3de_Ptr> _43149_ptr = _1c6421190_Ptr((*((*(_431350_r))))._field_Kind.ptr());;
	if ((_43149_ptr != nullptr)) {
		return _1c641dc2b_Equal((*(_1c6421190_Ptr((*((*(_431335_l))))._field_Kind.ptr())))._field_Elem, (*(_43149_ptr))._field_Elem);;
	};
	if (_1c63ddc2e_IsConst((*(_431350_r)).ptr())) {
		return _1c63c4b8d_intAssignable(jule::Str("int", 3), _431350_r);;
	};
	_1c63c5177_typeCompatibilityChecker _432113_tcc = _1c63c5177_typeCompatibilityChecker{._field_dest=_1c650a07b_primInt, ._field_src=(*((*(_431350_r))))._field_Kind, };;
	return _1c63c683d_check(&_432113_tcc);;
}



inline void _1c641885d_applyCastKindModel(jule::Ptr<_1c63dd35a_Data>* _432828_d, jule::Ptr<_1c641d522_TypeKind>* _432843_t) {
	(*((*(_432828_d))))._field_Model=jule::Any(jule::new_ptr<_1c62c35d6_CastingExprModel>(_1c62c35d6_CastingExprModel{._field_Expr=(*((*(_432828_d))))._field_Model, ._field_Kind=(*(_432843_t)), ._field_ExprKind=(*((*(_432828_d))))._field_Kind}), &__jule_any_type92);
}



inline void _1c6418b49_applyCastKind(jule::Ptr<_1c63dd35a_Data>* _433623_d, jule::Ptr<_1c641d522_TypeKind>* _433638_t) {
	_1c641885d_applyCastKindModel(_433623_d, _433638_t);
	(*((*(_433623_d))))._field_Kind=(*(_433638_t));
}



inline jule::Ptr<_1c63dd35a_Data> _1c6418d58_buildVoidData(void) {
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c6508c7d_primVoid, });;
}



inline jule::Str _1c6419122_checkDataForIntegerIndexing(jule::Ptr<_1c63dd35a_Data>* _434737_d) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_434737_d)) == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_1c6420b73_Prim((*((*(_434737_d))))._field_Kind.ptr()) == nullptr)) {
			_case_begin_1acd3d422:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_1dc25e88b_IsInt(_1c642643c_Str(_1c6420b73_Prim((*((*(_434737_d))))._field_Kind.ptr()).ptr()))))) {
			_case_begin_1acd3d488:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_1c63ddc2e_IsConst((*(_434737_d)).ptr())) {
			_case_begin_1acd3d4ee:;
			{
				if ((_1dc263252_AsF64((*((*(_434737_d))))._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_1c6420b73_Prim((*((*(_434737_d))))._field_Kind.ptr()) == nullptr) || _1c63ddc2e_IsConst((*(_434737_d)).ptr()) || (_1dc25220d_RealKindOf(_1c642643c_Str(_1c6420b73_Prim((*((*(_434737_d))))._field_Kind.ptr()).ptr())) != _1dc25220d_RealKindOf(jule::Str("int", 3)))) {
			_case_begin_1acd3d576:;
			{
				_1c6418b49_applyCastKind(_434737_d, &(_1c650a07b_primInt));
			}
		}
		_match_end_1acd3d0c0:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _1c641940d_applyCastModelByEnum(jule::Ptr<_1c63dd35a_Data>* _437230_d, jule::Ptr<_1c62e5691_Enum> _437244_e) {
	if ((_437244_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1c64260eb_Prim> _43769_p = _1c6420b73_Prim((*((*(_437244_e))._field_Kind))._field_Kind.ptr());;
	if (_1c6429583_IsStr(_43769_p.ptr())) {
		return;;
	};
	_1c641885d_applyCastKindModel(_437230_d, &((*((*(_437244_e))._field_Kind))._field_Kind));
}



inline void _1c64196e9_castConstByType(jule::Str* _438321_t, jule::Ptr<_1c63dd35a_Data>* _438334_d) {
	{
		
		if (_1dc25e2b4_IsSigInt((*(_438321_t)))) {
			_case_begin_1acd44181:;
			{
				{
					auto _match_expr{ _1dc2524c7_BitsizeOf(_1dc25220d_RealKindOf((*(_438321_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1acd44cdb:;
						{
							_1dc26350a_SetI64((*((*(_438334_d))))._field_Constant.ptr(), static_cast<jule::I64>(_1dc262c35_AsI64((*((*(_438334_d))))._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1acd44d52:;
						{
							_1dc26350a_SetI64((*((*(_438334_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_1dc262c35_AsI64((*((*(_438334_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1acd44db8:;
						{
							_1dc26350a_SetI64((*((*(_438334_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_1dc262c35_AsI64((*((*(_438334_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1acd44e2e:;
						{
							_1dc26350a_SetI64((*((*(_438334_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_1dc262c35_AsI64((*((*(_438334_d))))._field_Constant.ptr())))));
						}
					}
					_match_end_1acd4499a:;
				};
			}
		}
		else if (_1dc25e5c2_IsUnsigInt((*(_438321_t)))) {
			_case_begin_1acd44208:;
			{
				{
					auto _match_expr{ _1dc2524c7_BitsizeOf(_1dc25220d_RealKindOf((*(_438321_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1acd48dab:;
						{
							_1dc2637b3_SetU64((*((*(_438334_d))))._field_Constant.ptr(), static_cast<jule::U64>(_1dc262ebb_AsU64((*((*(_438334_d))))._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1acd48e22:;
						{
							_1dc2637b3_SetU64((*((*(_438334_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_1dc262ebb_AsU64((*((*(_438334_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1acd48e88:;
						{
							_1dc2637b3_SetU64((*((*(_438334_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_1dc262ebb_AsU64((*((*(_438334_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1acd48eee:;
						{
							_1dc2637b3_SetU64((*((*(_438334_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_1dc262ebb_AsU64((*((*(_438334_d))))._field_Constant.ptr())))));
						}
					}
					_match_end_1acd44736:;
				};
			}
		}
		else if (_1dc25ebcc_IsFloat((*(_438321_t)))) {
			_case_begin_1acd44280:;
			{
				{
					auto _match_expr{ _1dc2524c7_BitsizeOf(_1dc25220d_RealKindOf((*(_438321_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1acd4ce26:;
						{
							_1dc2640cc_SetF64((*((*(_438334_d))))._field_Constant.ptr(), static_cast<jule::F64>(_1dc263252_AsF64((*((*(_438334_d))))._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1acd4ce9d:;
						{
							_1dc2640cc_SetF64((*((*(_438334_d))))._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_1dc263252_AsF64((*((*(_438334_d))))._field_Constant.ptr())))));
						}
					}
					_match_end_1acd493a6:;
				};
			}
		}
		_match_end_1acd44060:;
	};
}



inline void _1c6419b8e_updateModelToGenericIns(jule::Any* _441733_m, jule::Ptr<_1c62d2b01_FnIns>* _441752_f) {
	{
		auto &_match_expr{ (*(_441733_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1acd4be58:;
			{
				(*(_441733_m))=jule::Any((*(_441752_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1acd4d2bc:;
			{
				(*((*(_441733_m)).cast_ptr<_1c62c6a29_StructSubIdentExprModel>(&__jule_any_type97)))._field_Method=(*(_441752_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1acd4d333:;
			{
				(*((*(_441733_m)).cast_ptr<_1c62c6ed0_StructStaticIdentExprModel>(&__jule_any_type95)))._field_Method=(*(_441752_f));
			}
		}
		_match_end_1acd4be03:;
	};
}



inline jule::Bool _1c641a013_pushSubIdentFromExpr(jule::Any _442829_expr, jule::Ptr<_1c6299b51_SubIdentTypeDecl>* _442850_t) {
	{
		auto &_match_expr{ _442829_expr };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1acd5190d:;
			{
				jule::Ptr<_1c629eea8_IdentExpr> _443117_e = _442829_expr.cast_ptr<_1c629eea8_IdentExpr>(&__jule_any_type79);;
				{ jule::Slice<jule::Ptr<_1c6299854_IdentTypeDecl>> &__jule_push_dest = (*((*(_442850_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1c6299854_IdentTypeDecl>(_1c6299854_IdentTypeDecl{._field_Token=(*(_443117_e))._field_Token, ._field_Ident=(*(_443117_e))._field_Ident, })); };
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1acd51974:;
			{
				jule::Ptr<_1c62a1691_SubIdentExpr> _443717_e = _442829_expr.cast_ptr<_1c62a1691_SubIdentExpr>(&__jule_any_type85);;
				if ((!(_1c641a013_pushSubIdentFromExpr((*((*(_443717_e))._field_Expr))._field_Kind, _442850_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_1c6299854_IdentTypeDecl>> &__jule_push_dest = (*((*(_442850_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1c6299854_IdentTypeDecl>(_1c6299854_IdentTypeDecl{._field_Token=(*(_443717_e))._field_Ident, ._field_Ident=(*((*(_443717_e))._field_Ident))._field_Kind, })); };
			}
		}
		else {
			_case_begin_1acd51897:;
			{
				return false;;
			}
		}
		_match_end_1acd50a2d:;
	};
	return true;;
}



inline jule::Str _1c641a2cc_constoa(jule::Ptr<_1dc260590_Const>* _445113_c) {
	{
		
		if (_1dc264561_IsI64((*(_445113_c)).ptr())) {
			_case_begin_1acd55aaa:;
			{
				return _1dc24ec99_FmtInt(static_cast<jule::I64>(_1dc261e65_ReadI64((*(_445113_c)).ptr())), 10LL);;
			}
		}
		else if (_1dc2647e7_IsU64((*(_445113_c)).ptr())) {
			_case_begin_1acd51ee6:;
			{
				return _1dc24e8d1_FmtUint(static_cast<jule::U64>(_1dc2621eb_ReadU64((*(_445113_c)).ptr())), 10LL);;
			}
		}
		else {
			_case_begin_1acd51b1c:;
			{
				return jule::Str();;
			}
		}
		_match_end_1acd55a33:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c641a651_evalEnumStatic(jule::Ptr<_1c62e5691_Enum>* _446224_enm, jule::Ptr<_1c62e4b24_EnumItem>* _446241_item) {
	jule::Ptr<_1c63dd35a_Data> _446313_d = jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>((*(_446224_enm)), 3)}), });;
	if (((*(_446241_item)) != nullptr)) {
		(*(_446313_d))._field_Constant=jule::new_ptr<_1dc260590_Const>((*((*((*((*((*(_446241_item))))._field_Value))._field_Data))._field_Constant)));
		(*(_446313_d))._field_Model=jule::Any((*(_446313_d))._field_Constant, &__jule_any_type19);
		_1c641940d_applyCastModelByEnum(&(_446313_d), (*(_446224_enm)));
	};
	return _446313_d;;
}



inline jule::Ptr<_1c62c2c56_StructLitExprModel> _1c641a91a_isLitBased(jule::Any* _447920_m) {
	{
		auto &_match_expr{ (*(_447920_m)) };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1acd59284:;
			{
				return (*(_447920_m)).cast_ptr<_1c62c2c56_StructLitExprModel>(&__jule_any_type94);;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1acd592ea:;
			{
				return (*((*(_447920_m)).cast_ptr<_1c62c3053_AllocStructLitExprModel>(&__jule_any_type112)))._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1acd59361:;
			{
				jule::Ptr<_1c62c6a29_StructSubIdentExprModel> _448617_ssi = (*(_447920_m)).cast_ptr<_1c62c6a29_StructSubIdentExprModel>(&__jule_any_type97);;
				return _1c641a91a_isLitBased(&((*((*(_448617_ssi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1acd593c7:;
			{
				jule::Ptr<_1c62c35d6_CastingExprModel> _448917_c = (*(_447920_m)).cast_ptr<_1c62c35d6_CastingExprModel>(&__jule_any_type92);;
				return _1c641a91a_isLitBased(&((*(_448917_c))._field_Expr));;
			}
		}
		else {
			_case_begin_1acd590b9:;
			{
				return nullptr;;
			}
		}
		_match_end_1acd57a9b:;
	};
}



inline void _1c641ac06_makeImplicitDeref(jule::Ptr<_1c63dd35a_Data>* _449627_d, jule::Ptr<_1c6283a3b_Token> _449641_baseToken) {
	jule::Ptr<_1c62c2382_UnaryExprModel> _449713_unary = jule::new_ptr<_1c62c2382_UnaryExprModel>(_1c62c2382_UnaryExprModel{._field_Expr=jule::new_ptr<_1c63dd35a_Data>((*((*(_449627_d))))), ._field_Op=jule::new_ptr<_1c6283a3b_Token>((*(_449641_baseToken)))});;
	(*((*(_449713_unary))._field_Op))._field_Id=static_cast<jule::U64>(62LLU);
	(*((*(_449713_unary))._field_Op))._field_Kind=jule::Str("*", 1);
	(*((*(_449627_d))))._field_Model=jule::Any(_449713_unary, &__jule_any_type110);
}



inline jule::Bool _1c6438c79_kindUsesGenerics(jule::Ptr<_1c641d522_TypeKind>* _171026_k, jule::Slice<jule::Ptr<_1c62a6454_GenericDecl>>* _171041_generics) {
	{
		auto expr = _171041_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad239bc5:;
		if (it != expr_end) {
			jule::Ptr<_1c62a6454_GenericDecl> *_171112_g = it;
			{
				if (static__1c643884a_exist(&((*((*(_171112_g))))._field_Ident), _171026_k)) {
					return true;;
				};
			}
			_iter_next_1ad239bc5:;
			++it;
			goto _iter_begin_1ad239bc5;
		}
		_iter_end_1ad239bc5:;
	};
	return false;;
}



inline jule::Bool _1c6439142_hasDirective(jule::Slice<jule::Ptr<_1c6298666_Directive>>* _172022_directives, jule::Str _172053_tag) {
	{
		auto expr = _172022_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad23a09e:;
		if (it != expr_end) {
			jule::Ptr<_1c6298666_Directive> _172117_dr = *it;
			{
				if (((*((*(_172117_dr))._field_Tag))._field_Kind == _172053_tag)) {
					return true;;
				};
			}
			_iter_next_1ad23a09e:;
			++it;
			goto _iter_begin_1ad23a09e;
		}
		_iter_end_1ad23a09e:;
	};
	return false;;
}



inline jule::Bool _1c643940b_canGetPtr(jule::Ptr<_1c63dd35a_Data>* _172919_d) {
	{
		
		if ((!((*((*(_172919_d))))._field_Lvalue)) || _1c63ddc2e_IsConst((*(_172919_d)).ptr())) {
			_case_begin_1ad23bc60:;
			{
				return false;;
			}
		}
		else if ((_1c6421e60_Fn((*((*(_172919_d))))._field_Kind.ptr()) != nullptr) || (_1c6421426_Enum((*((*(_172919_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad23bcd7:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1ad23b05b:;
			{
				return true;;
			}
		}
		_match_end_1ad23b28c:;
	};
}



inline jule::Bool _1c643974c_isValidForSptrType(jule::Ptr<_1c641d522_TypeKind>* _174128_t) {
	jule::Ptr<_1c62bcab9_StructIns> _174213_s = _1c64221e6_Struct((*(_174128_t)).ptr());;
	if ((((_174213_s != nullptr) && ((*(_174213_s))._field_Decl != nullptr)) && (*((*(_174213_s))._field_Decl))._field_Binded)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1c6439a16_isValidForRef(jule::Ptr<_1c641d522_TypeKind>* _175023_t) {
	return (_1c6421e60_Fn((*(_175023_t)).ptr()) == nullptr);;
}



inline jule::Bool _1c6439cd0_isBuiltinStrConvertable(jule::Ptr<_1c641d522_TypeKind>* _175333_t) {
	return ((((!(_1c641e886_Void((*(_175333_t)).ptr()))) && (_1c6421e60_Fn((*(_175333_t)).ptr()) == nullptr)) && (_1c6422999_Tup((*(_175333_t)).ptr()) == nullptr)) && (!(_1c6422c30_comptime((*(_175333_t)).ptr()))));;
}



inline jule::Str _1c643a099_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _175727_tokens) {
	jule::I64 _175813_n = 0LL;;
	{
		auto expr = _175727_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad241d0e:;
		if (it != expr_end) {
			jule::Ptr<_1c6283a3b_Token> *_175912_token = it;
			{
				_175813_n+=(*((*(_175912_token))))._field_Kind.len();
				_175813_n+=2LL;
			}
			_iter_next_1ad241d0e:;
			++it;
			goto _iter_begin_1ad241d0e;
		}
		_iter_end_1ad241d0e:;
	};
	_2206c697e_StrBuilder _176313_s = static__2206c6c9d_New(_175813_n);;
	{
		auto expr = _175727_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad241e63:;
		if (it != expr_end) {
			jule::I64 _17649_i = it - expr->begin();
			jule::Ptr<_1c6283a3b_Token> *_176412_token = it;
			{
				_2206d0625_WriteStr(&_176313_s, (*((*(_176412_token))))._field_Kind);
				if ((((*(_175727_tokens)).len() - _17649_i) > 1LL)) {
					_2206d0625_WriteStr(&_176313_s, jule::Str("::", 2));
				};
			}
			_iter_next_1ad241e63:;
			++it;
			_17649_i++;
			goto _iter_begin_1ad241e63;
		}
		_iter_end_1ad241e63:;
	};
	return _2206d0e1c_Str(&_176313_s);;
}



inline jule::Ptr<_1c64260eb_Prim> _1c643a440_buildPrimType(jule::Str _177318_kind) {
	return jule::new_ptr<_1c64260eb_Prim>(_1c64260eb_Prim{._field_Kind=_177318_kind});;
}



inline void _1c643a9e5_applyImplicitCast(jule::Ptr<_1c641d522_TypeKind>* _180127_dest, jule::Ptr<_1c63dd35a_Data>* _180149_d) {
	if (_1c641e600_IsNil((*((*(_180149_d))))._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1c64260eb_Prim> _18059_destPrim = _1c6420b73_Prim((*(_180127_dest)).ptr());;
	jule::Ptr<_1c64260eb_Prim> _18069_prim = _1c6420b73_Prim((*((*(_180149_d))))._field_Kind.ptr());;
	if ((_18059_destPrim != nullptr)) {
		if (_1c6429819_IsAny(_18059_destPrim.ptr())) {
			if (((_18069_prim == nullptr) || (!(_1c6429819_IsAny(_18069_prim.ptr()))))) {
				_1c6418b49_applyCastKind(_180149_d, _180127_dest);
			};
			return;;
		};
		if (((((((!(_1c641e369_Binded((*((*(_180149_d))))._field_Kind.ptr()))) && (!((*((*((*(_180149_d))))._field_Kind))._field_Variadic))) && (!((*((*(_180149_d))))._field_Lvalue))) && (!(_1c63ddc2e_IsConst((*(_180149_d)).ptr())))) && (_18069_prim != nullptr)) && _1dc25ee96_IsNum((*(_18069_prim))._field_Kind))) {
			_1c6418b49_applyCastKind(_180149_d, _180127_dest);
		};
		return;;
	};
	jule::Ptr<_1c62e2e96_Trait> _18259_dt = _1c642247c_Trait((*(_180127_dest)).ptr());;
	if ((_18259_dt != nullptr)) {
		jule::Ptr<_1c62e2e96_Trait> _182713_bt = _1c642247c_Trait((*((*(_180149_d))))._field_Kind.ptr());;
		if (((_182713_bt == nullptr) || (_182713_bt != _18259_dt))) {
			_1c641885d_applyCastKindModel(_180149_d, _180127_dest);
			return;;
		};
	};
	if (((_1c64216ac_TypeEnum((*(_180127_dest)).ptr()) != nullptr) && (_1c64216ac_TypeEnum((*((*(_180149_d))))._field_Kind.ptr()) == nullptr))) {
		_1c641885d_applyCastKindModel(_180149_d, _180127_dest);
		return;;
	};
}



inline jule::Bool _1c643acae_validTypeForXof(jule::Ptr<_1c641d522_TypeKind>* _184025_t) {
	return ((!(_1c641e886_Void((*(_184025_t)).ptr()))) && (_1c6421e60_Fn((*(_184025_t)).ptr()) == nullptr));;
}



inline __jule_tuple_x_1c63d8135_SymbolTable__jule_tuple_s_221968cb9_Log _1c643dd4a_buildSymbols(jule::Ptr<_1c6297379_Ast>* _1622_ast, jule::Trait<_1c6343ac9_Importer>* _1638_importer, jule::Ptr<_1c62dbd80_symbolBuilder> _1662_owner) {
	__jule_tuple_x_1c63d8135_SymbolTable__jule_tuple_s_221968cb9_Log __jule_func_result;
	jule::Ptr<_1c62dbd80_symbolBuilder> _1713_sb = jule::new_ptr<_1c62dbd80_symbolBuilder>(_1c62dbd80_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_ast=(*(_1622_ast)), });;
	_1c62e236e_build(_1713_sb);
	if (((*(_1713_sb))._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_1713_sb))._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = (*(_1713_sb))._field_errors;
	return __jule_func_result;;
}



inline __jule_tuple_x_1c6349915_Package__jule_tuple_s_221968cb9_Log _1c643e2bd_analyzePackage(jule::Slice<jule::Ptr<_1c6297379_Ast>>* _3024_files, jule::Trait<_1c6343ac9_Importer>* _3044_importer, jule::I64* _3065_flags) {
	__jule_tuple_x_1c6349915_Package__jule_tuple_s_221968cb9_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1c63d8135_SymbolTable>> _3213_tables = jule::Slice<jule::Ptr<_1c63d8135_SymbolTable>>::alloc(0LL, (*(_3024_files)).len());;
	{
		auto expr = _3024_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad368d7b:;
		if (it != expr_end) {
			jule::Ptr<_1c6297379_Ast> _3317_f = *it;
			{
				jule::Ptr<_1c63d8135_SymbolTable> _3418_table;;
				jule::Slice<_221968cb9_Log> _3429_errors;;
				({
					__jule_tuple_x_1c63d8135_SymbolTable__jule_tuple_s_221968cb9_Log __jule_assign_result = _1c643dd4a_buildSymbols(&(_3317_f), _3044_importer, nullptr);
					_3418_table = __jule_assign_result.__jule_result_arg0;
					_3429_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_3429_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _3429_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_1c63d8135_SymbolTable>> &__jule_push_dest = _3213_tables; __jule_push_dest.push(_3418_table); };
			}
			_iter_next_1ad368d7b:;
			++it;
			goto _iter_begin_1ad368d7b;
		}
		_iter_end_1ad368d7b:;
	};
	jule::Ptr<_1c63679bb_Sema> _4113_sema = jule::new_ptr<_1c63679bb_Sema>(_1c63679bb_Sema{._field_flags=(*(_3065_flags)), ._field_meta=jule::new_ptr<_1c6366d94_commonSemaMeta>()});;
	_1c63863d0_check(_4113_sema, &(_3213_tables));
	if (((*(_4113_sema))._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = (*(_4113_sema))._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1c6349915_Package> _5013_pkg = jule::new_ptr<_1c6349915_Package>(_1c6349915_Package{._field_Files=(*(_4113_sema))._field_files});;
	__jule_func_result.__jule_result_arg0 = _5013_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1c6349915_Package__jule_tuple_s_221968cb9_Log _1c643e6ec_AnalyzePackage(jule::Slice<jule::Ptr<_1c6297379_Ast>> _7423_files, jule::Trait<_1c6343ac9_Importer> _7442_importer, jule::I64 _7462_flags) {
	__jule_tuple_x_1c6349915_Package__jule_tuple_s_221968cb9_Log __jule_func_result;
	if ((_7423_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1c6349915_Package> _7814_package;;
	jule::Slice<_221968cb9_Log> _7827_logs;;
	({
		__jule_tuple_x_1c6349915_Package__jule_tuple_s_221968cb9_Log __jule_assign_result = _1c643e2bd_analyzePackage(&(_7423_files), &(_7442_importer), &(_7462_flags));
		_7814_package = __jule_assign_result.__jule_result_arg0;
		_7827_logs = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _7814_package;
	__jule_func_result.__jule_result_arg1 = _7827_logs;
	return __jule_func_result;;
}



inline jule::Ptr<_1c62d2b01_FnIns> _1c6508354_findBuiltinFunc(jule::Str* _2521_ident) {
	{
		auto &_match_expr{ (*(_2521_ident)) };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1ad372aee:;
			{
				static jule::Ptr<_1c62d2b01_FnIns> _2820_f = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>(_1c650e4ae_builtinCallerOut), });;
				return _2820_f;;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1ad372ca8:;
			{
				static jule::Ptr<_1c62d2b01_FnIns> _3120_f = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>(_1c650e8dd_builtinCallerOutln), });;
				return _3120_f;;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_1ad372d30:;
			{
				static jule::Ptr<_1c62d2b01_FnIns> _3420_f = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>(_1c650ed1c_builtinCallerNew), });;
				return _3420_f;;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_1ad372da7:;
			{
				static jule::Ptr<_1c62d2b01_FnIns> _3720_f = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>(_1c6510405_builtinCallerPanic), });;
				return _3720_f;;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_1ad372e2e:;
			{
				static jule::Ptr<_1c62d2b01_FnIns> _4020_f = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>(_1c6510834_builtinCallerMake), });;
				return _4020_f;;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_1ad373182:;
			{
				static jule::Ptr<_1c62d2b01_FnIns> _4320_f = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>(_1c6510c63_builtinCallerAppend), });;
				return _4320_f;;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_1ad373209:;
			{
				static jule::Ptr<_1c62d2b01_FnIns> _4620_f = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>(_1c651167b_builtinCallerCopy), });;
				return _4620_f;;
			}
		}
		else if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1ad373281:;
			{
				static jule::Ptr<_1c62d2b01_FnIns> _4920_f = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>(_1c6512d20_builtinCallerLen), });;
				return _4920_f;;
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1ad373308:;
			{
				static jule::Ptr<_1c62d2b01_FnIns> _5220_f = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>(_1c65135c3_builtinCallerCap), });;
				return _5220_f;;
			}
		}
		else if (_match_expr == jule::Str("delete", 6)) {
			_case_begin_1ad3733d5:;
			{
				static jule::Ptr<_1c62d2b01_FnIns> _5520_f = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>(_1c6513edb_builtinCallerDelete), });;
				return _5520_f;;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_1ad37345c:;
			{
				static jule::Ptr<_1c62d2b01_FnIns> _5820_f = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>(_1c651441a_builtinCallerAssert), });;
				return _5820_f;;
			}
		}
		else {
			_case_begin_1ad372c31:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad3701b2:;
	};
}



inline jule::Ptr<_1c641c730_TypeAlias> _1c6508662_primTypeAlias(jule::Ptr<_1c641d522_TypeKind>* _6523_k) {
	return jule::new_ptr<_1c641c730_TypeAlias>(_1c641c730_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1c64256e4_TypeSymbol>(_1c64256e4_TypeSymbol{._field_Kind=(*(_6523_k))}), });;
}



inline jule::Ptr<_1c6389da6_Var> _1c650c26a_findBuiltinVar(jule::Str* _9320_ident) {
	{
		auto &_match_expr{ (*(_9320_ident)) };
		
		if (_match_expr == jule::Str("nil", 3)) {
			_case_begin_1ad37a9d6:;
			{
				static jule::Ptr<_1c6389da6_Var> _9620_v = jule::new_ptr<_1c6389da6_Var>(_1c6389da6_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=jule::new_ptr<_1c64256e4_TypeSymbol>(_1c64256e4_TypeSymbol{._field_Kind=_1c6508970_primNil}), ._field_Value=jule::new_ptr<_1c63de49e_Value>(_1c63de49e_Value{._field_Data=jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Constant=static__1dc261805_NewNil()})}), });;
				return _9620_v;;
			}
		}
		else if (_match_expr == jule::Str("true", 4)) {
			_case_begin_1ad37aa4c:;
			{
				static jule::Ptr<_1c6389da6_Var> _11120_v = jule::new_ptr<_1c6389da6_Var>(_1c6389da6_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=(*(_1c650c49b_findBuiltinTypeAlias(jule::Str("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1c63de49e_Value>(_1c63de49e_Value{._field_Data=jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Constant=static__1dc261063_NewBool(true)})}), });;
				return _11120_v;;
			}
		}
		else if (_match_expr == jule::Str("false", 5)) {
			_case_begin_1ad37aab3:;
			{
				static jule::Ptr<_1c6389da6_Var> _12420_v = jule::new_ptr<_1c6389da6_Var>(_1c6389da6_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=(*(_1c650c49b_findBuiltinTypeAlias(jule::Str("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1c63de49e_Value>(_1c63de49e_Value{._field_Data=jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Constant=static__1dc261063_NewBool(false)})}), });;
				return _12420_v;;
			}
		}
		else {
			_case_begin_1ad37a970:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad3799c4:;
	};
}



inline jule::Ptr<_1c641c730_TypeAlias> _1c650c49b_findBuiltinTypeAlias(jule::Str _14125_ident) {
	{
		auto &_match_expr{ _14125_ident };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1ad37e0a0:;
			{
				static jule::Ptr<_1c641c730_TypeAlias> _14420_t = _1c6508662_primTypeAlias(&(_1c6509047_primAny));;
				return _14420_t;;
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1ad38090e:;
			{
				static jule::Ptr<_1c641c730_TypeAlias> _14720_t = _1c6508662_primTypeAlias(&(_1c6509355_primStr));;
				return _14720_t;;
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1ad380ba6:;
			{
				static jule::Ptr<_1c641c730_TypeAlias> _15020_t = _1c6508662_primTypeAlias(&(_1c650961e_primBool));;
				return _15020_t;;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1ad380c1c:;
			{
				static jule::Ptr<_1c641c730_TypeAlias> _15320_t = _1c6508662_primTypeAlias(&(_1c65098d8_primUintptr));;
				return _15320_t;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1ad380c83:;
			{
				static jule::Ptr<_1c641c730_TypeAlias> _15620_t = _1c6508662_primTypeAlias(&(_1c6509ba2_primUint));;
				return _15620_t;;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1ad380ce9:;
			{
				static jule::Ptr<_1c641c730_TypeAlias> _15920_t = _1c6508662_primTypeAlias(&(_1c650a07b_primInt));;
				return _15920_t;;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1ad380de8:;
			{
				static jule::Ptr<_1c641c730_TypeAlias> _16220_t = _1c6508662_primTypeAlias(&(_1c650a345_primI8));;
				return _16220_t;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1ad380e5e:;
			{
				static jule::Ptr<_1c641c730_TypeAlias> _16520_t = _1c6508662_primTypeAlias(&(_1c650a60e_primI16));;
				return _16520_t;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1ad380ec5:;
			{
				static jule::Ptr<_1c641c730_TypeAlias> _16820_t = _1c6508662_primTypeAlias(&(_1c650ab92_primI64));;
				return _16820_t;;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1ad38103b:;
			{
				static jule::Ptr<_1c641c730_TypeAlias> _17120_t = _1c6508662_primTypeAlias(&(_1c650b225_primU16));;
				return _17120_t;;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1ad3810b3:;
			{
				static jule::Ptr<_1c641c730_TypeAlias> _17420_t = _1c6508662_primTypeAlias(&(_1c650b4de_primU32));;
				return _17420_t;;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1ad38113a:;
			{
				static jule::Ptr<_1c641c730_TypeAlias> _17720_t = _1c6508662_primTypeAlias(&(_1c650b962_primU64));;
				return _17720_t;;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1ad3811b2:;
			{
				static jule::Ptr<_1c641c730_TypeAlias> _18020_t = _1c6508662_primTypeAlias(&(_1c650bc2b_primF32));;
				return _18020_t;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1ad381239:;
			{
				static jule::Ptr<_1c641c730_TypeAlias> _18320_t = _1c6508662_primTypeAlias(&(_1c650bee5_primF64));;
				return _18320_t;;
			}
		}
		else if (_match_expr == jule::Str("byte", 4) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1ad3812b1:;
			{
				static jule::Ptr<_1c641c730_TypeAlias> _18620_t = _1c6508662_primTypeAlias(&(_1c650ae5b_primU8));;
				return _18620_t;;
			}
		}
		else if (_match_expr == jule::Str("rune", 4) || _match_expr == jule::Str("i32", 3)) {
			_case_begin_1ad381338:;
			{
				static jule::Ptr<_1c641c730_TypeAlias> _18920_t = _1c6508662_primTypeAlias(&(_1c650a8c8_primI32));;
				return _18920_t;;
			}
		}
		else {
			_case_begin_1ad380766:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad37e1d2:;
	};
}



inline jule::Any _1c650c765_findBuiltinDef(jule::Str* _19620_ident) {
	jule::Ptr<_1c6389da6_Var> _19713_v = _1c650c26a_findBuiltinVar(_19620_ident);;
	if ((_19713_v != nullptr)) {
		return jule::Any(_19713_v, &__jule_any_type8);;
	};
	jule::Ptr<_1c62d2b01_FnIns> _20113_f = _1c6508354_findBuiltinFunc(_19620_ident);;
	if ((_20113_f != nullptr)) {
		return jule::Any(_20113_f, &__jule_any_type7);;
	};
	jule::Ptr<_1c641c730_TypeAlias> _20513_ta = _1c650c49b_findBuiltinTypeAlias((*(_19620_ident)));;
	if ((_20513_ta != nullptr)) {
		return jule::Any(_20513_ta, &__jule_any_type66);;
	};
	return nullptr;;
}



inline jule::Any _1c650ca2e_findBuiltinDefStdDebug(jule::Str* _21228_ident) {
	{
		auto &_match_expr{ (*(_21228_ident)) };
		
		if (_match_expr == jule::Str("Out", 3)) {
			_case_begin_1ad38ace3:;
			{
				static jule::Ptr<_1c62d2b01_FnIns> _21520_f = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>(_1c6518298_builtinCallerStdDebugOut), });;
				return jule::Any(_21520_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Outln", 5)) {
			_case_begin_1ad38ad59:;
			{
				static jule::Ptr<_1c62d2b01_FnIns> _21820_f = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>(_1c65186c7_builtinCallerStdDebugOutln), });;
				return jule::Any(_21820_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1ad38a6c7:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad389495:;
	};
}



inline jule::Any _1c650cce8_findBuiltinDefStdMem(jule::Str* _22526_ident) {
	{
		auto &_match_expr{ (*(_22526_ident)) };
		
		if (_match_expr == jule::Str("SizeOf", 6)) {
			_case_begin_1ad38c6eb:;
			{
				static jule::Ptr<_1c62d2b01_FnIns> _22820_f = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>(_1c6516b9d_builtinCallerStdMemSizeOf), });;
				return jule::Any(_22820_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("AlignOf", 7)) {
			_case_begin_1ad38c762:;
			{
				static jule::Ptr<_1c62d2b01_FnIns> _23120_f = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>(_1c65170cc_builtinCallerStdMemAlignOf), });;
				return jule::Any(_23120_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Free", 4)) {
			_case_begin_1ad38c7c8:;
			{
				static jule::Ptr<_1c62d2b01_FnIns> _23420_f = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>(_1c651750b_builtinCallerStdMemFree), });;
				return jule::Any(_23420_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1ad38c685:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad38b321:;
	};
}



inline jule::Any _1c650d18e_findBuiltinDefStdComptime(jule::Str* _24131_ident) {
	{
		auto &_match_expr{ (*(_24131_ident)) };
		
		if (_match_expr == jule::Str("TypeOf", 6)) {
			_case_begin_1ad38eb1b:;
			{
				static jule::Ptr<_1c62d2b01_FnIns> _24420_f = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>(_1c65149e2_builtinCallerStdComptimeTypeOf), });;
				return jule::Any(_24420_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("ValueOf", 7)) {
			_case_begin_1ad38eb93:;
			{
				static jule::Ptr<_1c62d2b01_FnIns> _24720_f = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>(_1c6514daa_builtinCallerStdComptimeValueOf), });;
				return jule::Any(_24720_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Range", 5)) {
			_case_begin_1ad38ec1a:;
			{
				static jule::Ptr<_1c62d2b01_FnIns> _25020_f = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>(_1c65155a3_builtinCallerStdComptimeRange), });;
				return jule::Any(_25020_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Line", 4)) {
			_case_begin_1ad39004a:;
			{
				static jule::Ptr<_1c62d2b01_FnIns> _25320_f = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>(_1c65159d2_builtinCallerStdComptimeLine), });;
				return jule::Any(_25320_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("File", 4)) {
			_case_begin_1ad3900b1:;
			{
				static jule::Ptr<_1c62d2b01_FnIns> _25620_f = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>(_1c6515e11_builtinCallerStdComptimeFile), });;
				return jule::Any(_25620_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Files", 5)) {
			_case_begin_1ad390127:;
			{
				static jule::Ptr<_1c62d2b01_FnIns> _25920_f = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>(_1c6516340_builtinCallerStdComptimeFiles), });;
				return jule::Any(_25920_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("TypeAlias", 9)) {
			_case_begin_1ad39018d:;
			{
				static jule::Ptr<_1c62d2b01_FnIns> _26220_f = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>(_1c651676e_builtinCallerStdComptimeTypeAlias), });;
				return jule::Any(_26220_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1ad38eaa5:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad38e1e2:;
	};
}



inline jule::Any _1c650d458_findBuiltinDefStdJuleIntegrated(jule::Str* _26937_ident) {
	{
		auto &_match_expr{ (*(_26937_ident)) };
		
		if (_match_expr == jule::Str("ToStr", 5)) {
			_case_begin_1ad3948e0:;
			{
				static jule::Ptr<_1c62d2b01_FnIns> _27220_f = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>(_1c651793a_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_27220_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Emit", 4)) {
			_case_begin_1ad394956:;
			{
				static jule::Ptr<_1c62d2b01_FnIns> _27520_f = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_Decl=jule::new_ptr<_1c62cebec_Fn>(_1c62cebec_Fn{._field_Generics=jule::Slice<jule::Ptr<_1c62a6454_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>(_1c6517d69_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_27520_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1ad394879:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad39059a:;
	};
}



inline jule::Any _1c650d7cc_findPackageBuiltinDef(jule::Str* _28727_linkPath, jule::Str* _28743_ident) {
	{
		auto &_match_expr{ (*(_28727_linkPath)) };
		
		if (_match_expr == jule::Str("std::comptime", 13)) {
			_case_begin_1ad396c33:;
			{
				return _1c650d18e_findBuiltinDefStdComptime(_28743_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_1ad396c99:;
			{
				return _1c650ca2e_findBuiltinDefStdDebug(_28743_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_1ad396d10:;
			{
				return _1c650cce8_findBuiltinDefStdMem(_28743_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_1ad396d76:;
			{
				return _1c650d458_findBuiltinDefStdJuleIntegrated(_28743_ident);;
			}
		}
		else {
			_case_begin_1ad396a57:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad395957:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c650dc0b_builtinCallerCommonPlain(jule::Ptr<_1c63e004e_Eval>* _30234_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _30249_fc, jule::Ptr<_1c63dd35a_Data>* _30271_d) {
	jule::Ptr<_1c62d2b01_FnIns> _30313_f = _1c6421e60_Fn((*((*(_30271_d))))._field_Kind.ptr());;
	_1c63cd900_fnCallArgChecker _30513_fcac = _1c63cd900_fnCallArgChecker{._field_e=(*(_30234_e)), ._field_args=(*((*(_30249_fc))))._field_Args, ._field_errorToken=(*((*(_30249_fc))))._field_Token, ._field_f=_30313_f, ._field_dynamicAnnotation=false, };;
	if ((!(_1c63d0ea7_check(&_30513_fcac)))) {
		return nullptr;;
	};
	jule::Ptr<_1c62c3e88_FnCallExprModel> _31613_model = jule::new_ptr<_1c62c3e88_FnCallExprModel>(_1c62c3e88_FnCallExprModel{._field_Token=(*((*(_30249_fc))))._field_Token, ._field_Func=_30313_f, ._field_Expr=(*((*(_30271_d))))._field_Model, ._field_Args=_30513_fcac._field_argModels, });;
	if (((*(_30313_f))._field_Result == nullptr)) {
		(*(_30271_d))=_1c6418d58_buildVoidData();
	} else {
		(*(_30271_d))=jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=(*(_30313_f))._field_Result, });
	};
	(*((*(_30271_d))))._field_Model=jule::Any(_31613_model, &__jule_any_type34);
	return (*(_30271_d));;
}



inline jule::Ptr<_1c63dd35a_Data> _1c650e080_builtinCallerError(jule::Ptr<_1c63e004e_Eval>* _33528_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _33543_fc) {
	if (((*((*(_33543_fc))))._field_Args.len() < 1LL)) {
		_1c63e059e_pushErr((*(_33528_e)).ptr(), (*((*(_33543_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_33543_fc))))._field_Args.len() > 1LL)) {
		_1c63e059e_pushErr((*(_33528_e)).ptr(), (*((*((*(_33543_fc))))._field_Args[1LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("error", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1c63dd35a_Data> _34313_expr = _1c640d028_evalExpr((*(_33528_e)), (*((*(_33543_fc))))._field_Args[0LL]);;
	if ((_34313_expr == nullptr)) {
		return nullptr;;
	};
	if (_1c63dd712_IsNil(_34313_expr.ptr())) {
		_1c63e059e_pushErr((*(_33528_e)).ptr(), (*((*((*(_33543_fc))))._field_Args[0LL]))._field_Token, jule::Str("you cannot call error function with nil", 39), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c63dd35a_Data> _35213_d = _1c6418d58_buildVoidData();;
	(*(_35213_d))._field_Model=jule::Any(jule::new_ptr<_1c62ca7b9_BuiltinErrorCallExprModel>(_1c62ca7b9_BuiltinErrorCallExprModel{._field_Err=_34313_expr}), &__jule_any_type23);
	return _35213_d;;
}



inline jule::Ptr<_1c63dd35a_Data> _1c650e4ae_builtinCallerOut(jule::Ptr<_1c63e004e_Eval>* _35726_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _35741_fc, jule::Ptr<_1c63dd35a_Data>* ) {
	if (((*((*(_35741_fc))))._field_Args.len() < 1LL)) {
		_1c63e059e_pushErr((*(_35726_e)).ptr(), (*((*(_35741_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_35741_fc))))._field_Args.len() > 1LL)) {
		_1c63e059e_pushErr((*(_35726_e)).ptr(), (*((*((*(_35741_fc))))._field_Args[1LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("out", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1c63dd35a_Data> _36613_expr = _1c640d028_evalExpr((*(_35726_e)), (*((*(_35741_fc))))._field_Args[0LL]);;
	if ((_36613_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c6439cd0_isBuiltinStrConvertable(&((*(_36613_expr))._field_Kind))))) {
		_1c63e059e_pushErr((*(_35726_e)).ptr(), (*((*((*(_35741_fc))))._field_Args[0LL]))._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c63dd35a_Data> _37613_d = _1c6418d58_buildVoidData();;
	(*(_37613_d))._field_Model=jule::Any(jule::new_ptr<_1c62c7a80_BuiltinOutCallExprModel>(_1c62c7a80_BuiltinOutCallExprModel{._field_Expr=(*(_36613_expr))._field_Model, }), &__jule_any_type27);
	return _37613_d;;
}



inline jule::Ptr<_1c63dd35a_Data> _1c650e8dd_builtinCallerOutln(jule::Ptr<_1c63e004e_Eval>* _38128_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _38143_fc, jule::Ptr<_1c63dd35a_Data>* _38165_d) {
	(*(_38165_d))=_1c650e4ae_builtinCallerOut(_38128_e, _38143_fc, _38165_d);
	if (((*(_38165_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*(_38165_d))))._field_Model=jule::Any(jule::new_ptr<_1c62c7e59_BuiltinOutlnCallExprModel>(_1c62c7e59_BuiltinOutlnCallExprModel{._field_Expr=(*((*((*(_38165_d))))._field_Model.cast_ptr<_1c62c7a80_BuiltinOutCallExprModel>(&__jule_any_type27)))._field_Expr, }), &__jule_any_type28);
	return (*(_38165_d));;
}



inline jule::Ptr<_1c63dd35a_Data> _1c650ed1c_builtinCallerNew(jule::Ptr<_1c63e004e_Eval>* _39326_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _39341_fc, jule::Ptr<_1c63dd35a_Data>* _39363_d) {
	if (((*((*(_39341_fc))))._field_Args.len() < 1LL)) {
		_1c63e059e_pushErr((*(_39326_e)).ptr(), (*((*(_39341_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_39341_fc))))._field_Args.len() > 2LL)) {
		_1c63e059e_pushErr((*(_39326_e)).ptr(), (*((*((*(_39341_fc))))._field_Args[2LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("new", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1c63dd35a_Data> _40213_t = _1c640c214_evalExprKind((*(_39326_e)), (*((*((*(_39341_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_40213_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_40213_t))._field_Decl))) {
		_1c63e059e_pushErr((*(_39326_e)).ptr(), (*((*((*(_39341_fc))))._field_Args[0LL]))._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1c643974c_isValidForSptrType(&((*(_40213_t))._field_Kind))))) {
		jule::Ptr<_1c62bcab9_StructIns> _41317_s = _1c64221e6_Struct((*(_40213_t))._field_Kind.ptr());;
		if ((((_41317_s != nullptr) && ((*(_41317_s))._field_Decl != nullptr)) && (*((*(_41317_s))._field_Decl))._field_Binded)) {
			_1c63e059e_pushErr((*(_39326_e)).ptr(), (*((*((*(_39341_fc))))._field_Args[0LL]))._field_Token, jule::Str("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*((*(_39363_d))))._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(jule::new_ptr<_1c6429b27_Sptr>(_1c6429b27_Sptr{._field_Elem=(*(_40213_t))._field_Kind}), 21)});
	if (((*((*(_39341_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1c641d522_TypeKind> _42717_old = (*((*(_39326_e))))._field_prefix;;
		(*((*(_39326_e))))._field_prefix=(*(_40213_t))._field_Kind;
		jule::Ptr<_1c63dd35a_Data> _43017_init = _1c640d028_evalExpr((*(_39326_e)), (*((*(_39341_fc))))._field_Args[1LL]);;
		(*((*(_39326_e))))._field_prefix=_42717_old;
		if ((_43017_init != nullptr)) {
			jule::Ptr<_1c6283a3b_Token> _43521_token = (*((*((*(_39341_fc))))._field_Args[1LL]))._field_Token;;
			;
			_1c6376623_checkValidityForInitExpr((*((*(_39326_e))))._field_s, (!((*((*(_39326_e))))._field_immutable)), false, &((*(_40213_t))._field_Kind), &(_43017_init), &(_43521_token));
			_1c6373114_checkAssignType((*((*(_39326_e))))._field_s, false, &((*(_40213_t))._field_Kind), &(_43017_init), _43521_token);
			(*((*(_39363_d))))._field_Model=jule::Any(jule::new_ptr<_1c62c8333_BuiltinNewCallExprModel>(_1c62c8333_BuiltinNewCallExprModel{._field_Kind=(*(_40213_t))._field_Kind, ._field_Init=(*(_43017_init))._field_Model}), &__jule_any_type113);
		};
	} else {
		(*((*(_39363_d))))._field_Model=jule::Any(jule::new_ptr<_1c62c8333_BuiltinNewCallExprModel>(_1c62c8333_BuiltinNewCallExprModel{._field_Kind=(*(_40213_t))._field_Kind, }), &__jule_any_type113);
	};
	return (*(_39363_d));;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6510405_builtinCallerPanic(jule::Ptr<_1c63e004e_Eval>* _45528_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _45543_fc, jule::Ptr<_1c63dd35a_Data>* ) {
	if (((*((*(_45543_fc))))._field_Args.len() < 1LL)) {
		_1c63e059e_pushErr((*(_45528_e)).ptr(), (*((*(_45543_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_45543_fc))))._field_Args.len() > 1LL)) {
		_1c63e059e_pushErr((*(_45528_e)).ptr(), (*((*((*(_45543_fc))))._field_Args[2LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("panic", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1c63dd35a_Data> _46413_expr = _1c640d028_evalExpr((*(_45528_e)), (*((*(_45543_fc))))._field_Args[0LL]);;
	if ((_46413_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1c6420b73_Prim((*(_46413_expr))._field_Kind.ptr()) == nullptr) || (!(_1c6429583_IsStr(_1c6420b73_Prim((*(_46413_expr))._field_Kind.ptr()).ptr()))))) {
		_1c63e059e_pushErr((*(_45528_e)).ptr(), (*((*(_45543_fc))))._field_Token, jule::Str("panic function only accepts strings", 35), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c63dd35a_Data> _47313_d = _1c6418d58_buildVoidData();;
	(*(_47313_d))._field_Model=jule::Any(jule::new_ptr<_1c62c870c_BuiltinPanicCallExprModel>(_1c62c870c_BuiltinPanicCallExprModel{._field_Token=(*((*(_45543_fc))))._field_Token, ._field_Expr=(*(_46413_expr))._field_Model}), &__jule_any_type29);
	return _47313_d;;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6510834_builtinCallerMake(jule::Ptr<_1c63e004e_Eval>* _48127_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _48142_fc, jule::Ptr<_1c63dd35a_Data>* _48164_d) {
	if (((*((*(_48142_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_48142_fc))))._field_Args.len() == 1LL)) {
			_1c63e059e_pushErr((*(_48127_e)).ptr(), (*((*(_48142_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4), &__jule_any_type4)}));
			return nullptr;;
		};
		_1c63e059e_pushErr((*(_48127_e)).ptr(), (*((*(_48142_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10), &__jule_any_type4)}));
		return nullptr;;
	} else if (((*((*(_48142_fc))))._field_Args.len() > 3LL)) {
		_1c63e059e_pushErr((*(_48127_e)).ptr(), (*((*((*(_48142_fc))))._field_Args[3LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("make", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c63dd35a_Data> _49413_t = _1c640c214_evalExprKind((*(_48127_e)), (*((*((*(_48142_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_49413_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_49413_t))._field_Decl))) {
		_1c63e059e_pushErr((*(_48127_e)).ptr(), (*((*((*(_48142_fc))))._field_Args[0LL]))._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_1c6421bc9_Slc((*(_49413_t))._field_Kind.ptr()) == nullptr)) {
		_1c63e059e_pushErr((*(_48127_e)).ptr(), (*((*((*(_48142_fc))))._field_Args[0LL]))._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_49413_t))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str("make", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	(*((*(_48164_d))))._field_Kind=(*(_49413_t))._field_Kind;
	jule::Ptr<_1c63dd35a_Data> _50913_lenExpr = _1c640d028_evalExpr(_1c6372762_evalp((*((*(_48127_e))))._field_s, (*((*(_48127_e))))._field_lookup, (*(_49413_t))._field_Kind), (*((*(_48142_fc))))._field_Args[1LL]);;
	if ((_50913_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1c63e9003_checkIntegerIndexingByData((*(_48127_e)).ptr(), &(_50913_lenExpr), (*((*((*(_48142_fc))))._field_Args[1LL]))._field_Token);
	jule::Ptr<_1c62c9169_BuiltinMakeCallExprModel> _51613_model = jule::new_ptr<_1c62c9169_BuiltinMakeCallExprModel>(_1c62c9169_BuiltinMakeCallExprModel{._field_Kind=(*(_49413_t))._field_Kind, ._field_Len=(*(_50913_lenExpr))._field_Model, });;
	(*((*(_48164_d))))._field_Model=jule::Any(_51613_model, &__jule_any_type114);
	if (((*((*(_48142_fc))))._field_Args.len() == 3LL)) {
		jule::Ptr<_1c63dd35a_Data> _52217_capExpr = _1c640d028_evalExpr(_1c6372762_evalp((*((*(_48127_e))))._field_s, (*((*(_48127_e))))._field_lookup, (*(_49413_t))._field_Kind), (*((*(_48142_fc))))._field_Args[2LL]);;
		if ((_52217_capExpr == nullptr)) {
			return (*(_48164_d));;
		};
		_1c63e9003_checkIntegerIndexingByData((*(_48127_e)).ptr(), &(_52217_capExpr), (*((*((*(_48142_fc))))._field_Args[2LL]))._field_Token);
		(*(_51613_model))._field_Cap=(*(_52217_capExpr))._field_Model;
	};
	return (*(_48164_d));;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6510c63_builtinCallerAppend(jule::Ptr<_1c63e004e_Eval>* _53229_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _53244_fc, jule::Ptr<_1c63dd35a_Data>* _53266_d) {
	if (((*((*(_53244_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_53244_fc))))._field_Args.len() == 1LL)) {
			_1c63e059e_pushErr((*(_53229_e)).ptr(), (*((*(_53244_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type4)}));
			return nullptr;;
		};
		_1c63e059e_pushErr((*(_53229_e)).ptr(), (*((*(_53244_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c63dd35a_Data> _54213_t = _1c640d028_evalExpr((*(_53229_e)), (*((*(_53244_fc))))._field_Args[0LL]);;
	if ((_54213_t == nullptr)) {
		return nullptr;;
	};
	if ((_1c6421bc9_Slc((*(_54213_t))._field_Kind.ptr()) == nullptr)) {
		_1c63e059e_pushErr((*(_53229_e)).ptr(), (*((*((*(_53244_fc))))._field_Args[0LL]))._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c62d2b01_FnIns> _55213_f = jule::new_ptr<_1c62d2b01_FnIns>(_1c62d2b01_FnIns{._field_Params=jule::Slice<jule::Ptr<_1c62d1b55_ParamIns>>::make({jule::new_ptr<_1c62d1b55_ParamIns>(_1c62d1b55_ParamIns{._field_Decl=jule::new_ptr<_1c62cd228_Param>(_1c62cd228_Param{._field_Mutable=true, }), ._field_Kind=(*(_54213_t))._field_Kind}),jule::new_ptr<_1c62d1b55_ParamIns>(_1c62d1b55_ParamIns{._field_Decl=jule::new_ptr<_1c62cd228_Param>(_1c62cd228_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=(*(_1c6421bc9_Slc((*(_54213_t))._field_Kind.ptr())))._field_Elem})}), ._field_Result=(*(_54213_t))._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_1c63dd35a_Data>(jule::Ptr<_1c63e004e_Eval>*,jule::Ptr<_1c62a22a7_FnCallExpr>*,jule::Ptr<_1c63dd35a_Data>*)>(_1c650dc0b_builtinCallerCommonPlain), });;
	(*((*(_53266_d))))._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(_55213_f, 1)});
	(*(_53266_d))=_1c650dc0b_builtinCallerCommonPlain(_53229_e, _53244_fc, _53266_d);
	if (((*(_53266_d)) != nullptr)) {
		jule::Ptr<_1c62c3e88_FnCallExprModel> _57617_model = (*((*(_53266_d))))._field_Model.cast_ptr<_1c62c3e88_FnCallExprModel>(&__jule_any_type34);;
		(*((*(_53266_d))))._field_Model=jule::Any(jule::new_ptr<_1c62c9543_BuiltinAppendCallExprModel>(_1c62c9543_BuiltinAppendCallExprModel{._field_Dest=(*(_57617_model))._field_Args[0LL], ._field_Elements=(*(_57617_model))._field_Args[1LL]}), &__jule_any_type26);
	};
	return (*(_53266_d));;
}



inline jule::Ptr<_1c63dd35a_Data> _1c651124c_callerCopySlice(jule::Ptr<_1c63dd35a_Data>* _58525_dest, jule::Ptr<_1c63e004e_Eval>* _58543_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _58558_fc, jule::Ptr<_1c63dd35a_Data>* _58580_d) {
	if ((!((*((*(_58525_dest))))._field_Mutable))) {
		_1c63e059e_pushErr((*(_58543_e)).ptr(), (*((*((*(_58558_fc))))._field_Args[0LL]))._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c63dd35a_Data> _59013_src = _1c640d028_evalExpr((*(_58543_e)), (*((*(_58558_fc))))._field_Args[1LL]);;
	if ((_59013_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c642a5ea_Slc> _59413_slc = _1c6421bc9_Slc((*(_59013_src))._field_Kind.ptr());;
	if ((_59413_slc != nullptr)) {
		if (((!((*(_59013_src))._field_Mutable)) && _1c641eda3_Mutable((*(_59413_slc))._field_Elem.ptr()))) {
			_1c63e059e_pushErr((*(_58543_e)).ptr(), (*((*((*(_58558_fc))))._field_Args[1LL]))._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		};
		if ((!(_1c641dc2b_Equal((*((*(_58525_dest))))._field_Kind, (*(_59013_src))._field_Kind)))) {
			_1c63e059e_pushErr((*(_58543_e)).ptr(), (*((*((*(_58558_fc))))._field_Args[1LL]))._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*((*(_58525_dest))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1c641d8da_Str((*(_59013_src))._field_Kind.ptr()), &__jule_any_type4)}));
		};
	} else {
		jule::Ptr<_1c64260eb_Prim> _60413_destPrim = _1c6420b73_Prim((*(_1c6421bc9_Slc((*((*(_58525_dest))))._field_Kind.ptr())))._field_Elem.ptr());;
		jule::Ptr<_1c64260eb_Prim> _60513_prim = _1c6420b73_Prim((*(_59013_src))._field_Kind.ptr());;
		if (((((_60413_destPrim == nullptr) || (_60513_prim == nullptr)) || (!(_1c6429583_IsStr(_60513_prim.ptr())))) || (!(_1c64279e3_IsU8(_60413_destPrim.ptr()))))) {
			_1c63e059e_pushErr((*(_58543_e)).ptr(), (*((*((*(_58558_fc))))._field_Args[1LL]))._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*((*(_58525_dest))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1c641d8da_Str((*(_59013_src))._field_Kind.ptr()), &__jule_any_type4)}));
		};
	};
	(*((*(_58580_d))))._field_Kind=_1c63d6de2_lenKind();
	(*((*(_58580_d))))._field_Model=jule::Any(jule::new_ptr<_1c62ca3e0_BuiltinCopyCallExprModel>(_1c62ca3e0_BuiltinCopyCallExprModel{._field_Dest=(*(_58525_dest)), ._field_Src=_59013_src}), &__jule_any_type31);
	return (*(_58580_d));;
}



inline jule::Ptr<_1c63dd35a_Data> _1c651167b_builtinCallerCopy(jule::Ptr<_1c63e004e_Eval>* _61927_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _61942_fc, jule::Ptr<_1c63dd35a_Data>* _61964_d) {
	if (((*((*(_61942_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_61942_fc))))._field_Args.len() == 1LL)) {
			_1c63e059e_pushErr((*(_61927_e)).ptr(), (*((*(_61942_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type4)}));
			return nullptr;;
		};
		_1c63e059e_pushErr((*(_61927_e)).ptr(), (*((*(_61942_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_61942_fc))))._field_Args.len() > 2LL)) {
		_1c63e059e_pushErr((*(_61927_e)).ptr(), (*((*((*(_61942_fc))))._field_Args[2LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("copy", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1c63dd35a_Data> _63213_dest = _1c640d028_evalExpr((*(_61927_e)), (*((*(_61942_fc))))._field_Args[0LL]);;
	{
		
		if ((_63213_dest == nullptr)) {
			_case_begin_1ad3e5776:;
			{
				return nullptr;;
			}
		}
		else if ((_1c6421bc9_Slc((*(_63213_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad3e6447:;
			{
				return _1c651124c_callerCopySlice(&(_63213_dest), _61927_e, _61942_fc, _61964_d);;
			}
		}
		else {
			_case_begin_1ad3e53d0:;
			{
				_1c63e059e_pushErr((*(_61927_e)).ptr(), (*((*((*(_61942_fc))))._field_Args[0LL]))._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad3e392d:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c6511a00_callerLenSlice(jule::Ptr<_1c63dd35a_Data>* _64424_expr, jule::Ptr<_1c63dd35a_Data>* _64442_d) {
	(*((*(_64442_d))))._field_Kind=_1c63d6de2_lenKind();
	(*((*(_64442_d))))._field_Model=jule::Any(jule::new_ptr<_1c62c9840_BuiltinLenCallExprModel>(_1c62c9840_BuiltinLenCallExprModel{._field_Expr=(*(_64424_expr))}), &__jule_any_type115);
	return (*(_64442_d));;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6511d74_callerLenMap(jule::Ptr<_1c63dd35a_Data>* _65222_expr, jule::Ptr<_1c63dd35a_Data>* _65240_d) {
	(*((*(_65240_d))))._field_Kind=_1c63d6de2_lenKind();
	(*((*(_65240_d))))._field_Model=jule::Any(jule::new_ptr<_1c62c9840_BuiltinLenCallExprModel>(_1c62c9840_BuiltinLenCallExprModel{._field_Expr=(*(_65222_expr))}), &__jule_any_type115);
	return (*(_65240_d));;
}



inline jule::Ptr<_1c63dd35a_Data> _1c65121e8_callerLenArr(jule::Ptr<_1c63dd35a_Data>* _66022_expr, jule::Ptr<_1c63dd35a_Data>* _66040_d) {
	(*((*(_66040_d))))._field_Kind=_1c63d6de2_lenKind();
	(*((*(_66040_d))))._field_Constant=static__1dc2609d0_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_1c6421943_Arr((*((*(_66022_expr))))._field_Kind.ptr())))._field_N)));
	(*((*(_66040_d))))._field_Model=jule::Any((*((*(_66040_d))))._field_Constant, &__jule_any_type19);
	return (*(_66040_d));;
}



inline jule::Ptr<_1c63dd35a_Data> _1c651256c_callerLenStr(jule::Ptr<_1c63dd35a_Data>* _66722_expr, jule::Ptr<_1c63dd35a_Data>* _66740_d) {
	(*((*(_66740_d))))._field_Kind=_1c63d6de2_lenKind();
	if (_1c63ddc2e_IsConst((*(_66722_expr)).ptr())) {
		(*((*(_66740_d))))._field_Constant=static__1dc2609d0_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1dc262718_ReadStr((*((*(_66722_expr))))._field_Constant.ptr()).len())));
		(*((*(_66740_d))))._field_Model=jule::Any((*((*(_66740_d))))._field_Constant, &__jule_any_type19);
	} else {
		(*((*(_66740_d))))._field_Model=jule::Any(jule::new_ptr<_1c62c9840_BuiltinLenCallExprModel>(_1c62c9840_BuiltinLenCallExprModel{._field_Expr=(*(_66722_expr))}), &__jule_any_type115);
	};
	return (*(_66740_d));;
}



inline jule::Ptr<_1c63dd35a_Data> _1c65128e1_callerLenComptime(jule::Ptr<_1c63dd35a_Data>* _68027_d, jule::I64 _68037_n) {
	(*((*(_68027_d))))._field_Kind=_1c63d6de2_lenKind();
	(*((*(_68027_d))))._field_Constant=static__1dc2609d0_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_68037_n)));
	(*((*(_68027_d))))._field_Model=jule::Any((*((*(_68027_d))))._field_Constant, &__jule_any_type19);
	return (*(_68027_d));;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6512d20_builtinCallerLen(jule::Ptr<_1c63e004e_Eval>* _68726_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _68741_fc, jule::Ptr<_1c63dd35a_Data>* _68763_d) {
	if (((*((*(_68741_fc))))._field_Args.len() < 1LL)) {
		_1c63e059e_pushErr((*(_68726_e)).ptr(), (*((*(_68741_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_68741_fc))))._field_Args.len() > 1LL)) {
		_1c63e059e_pushErr((*(_68726_e)).ptr(), (*((*((*(_68741_fc))))._field_Args[1LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("len", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1c63dd35a_Data> _69513_dest = _1c640cbd7_evalExpr1((*(_68726_e)), (*((*(_68741_fc))))._field_Args[0LL]);;
	{
		
		if ((_69513_dest == nullptr)) {
			_case_begin_1ad4028b5:;
			{
				return nullptr;;
			}
		}
		else if ((_1c6421bc9_Slc((*(_69513_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad403586:;
			{
				return _1c6511a00_callerLenSlice(&(_69513_dest), _68763_d);;
			}
		}
		else if ((_1c6421943_Arr((*(_69513_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad4035ec:;
			{
				return _1c65121e8_callerLenArr(&(_69513_dest), _68763_d);;
			}
		}
		else if ((_1c6422713_Map((*(_69513_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad403663:;
			{
				return _1c6511d74_callerLenMap(&(_69513_dest), _68763_d);;
			}
		}
		else if (((_1c6420b73_Prim((*(_69513_dest))._field_Kind.ptr()) != nullptr) && _1c6429583_IsStr(_1c6420b73_Prim((*(_69513_dest))._field_Kind.ptr()).ptr()))) {
			_case_begin_1ad402585:;
			{
				return _1c651256c_callerLenStr(&(_69513_dest), _68763_d);;
			}
		}
		else if ((_1c6422eb6_comptimeStructFields((*(_69513_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad4025eb:;
			{
				return _1c65128e1_callerLenComptime(_68763_d, static_cast<jule::I64>((*(_1c6422eb6_comptimeStructFields((*(_69513_dest))._field_Kind.ptr())))._field_fields.len()));;
			}
		}
		else if ((_1c64234d3_comptimeEnumFields((*(_69513_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad402662:;
			{
				return _1c65128e1_callerLenComptime(_68763_d, static_cast<jule::I64>((*(_1c64234d3_comptimeEnumFields((*(_69513_dest))._field_Kind.ptr())))._field_fields.len()));;
			}
		}
		else if ((_1c64242a3_comptimeTypeInfos((*(_69513_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad4026c8:;
			{
				return _1c65128e1_callerLenComptime(_68763_d, static_cast<jule::I64>((*(_1c64242a3_comptimeTypeInfos((*(_69513_dest))._field_Kind.ptr())))._field_types.len()));;
			}
		}
		else if ((_1c6423a00_comptimeParams((*(_69513_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad40372e:;
			{
				return _1c65128e1_callerLenComptime(_68763_d, static_cast<jule::I64>((*(_1c6423a00_comptimeParams((*(_69513_dest))._field_Kind.ptr())))._field_params.len()));;
			}
		}
		else if ((_1c64247c0_comptimeStatics((*(_69513_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad403795:;
			{
				return _1c65128e1_callerLenComptime(_68763_d, static_cast<jule::I64>((*(_1c64247c0_comptimeStatics((*(_69513_dest))._field_Kind.ptr())))._field_fields.len()));;
			}
		}
		else if ((_1c6425309_comptimeFiles((*(_69513_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad40380b:;
			{
				return _1c65128e1_callerLenComptime(_68763_d, static_cast<jule::I64>((*(_1c6425309_comptimeFiles((*(_69513_dest))._field_Kind.ptr())))._field_files.len()));;
			}
		}
		else {
			_case_begin_1ad40251e:;
			{
				_1c63e059e_pushErr((*(_68726_e)).ptr(), (*((*((*(_68741_fc))))._field_Args[0LL]))._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad400a6c:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c6513194_callerCapSlice(jule::Ptr<_1c63dd35a_Data>* _72524_expr, jule::Ptr<_1c63dd35a_Data>* _72542_d) {
	(*((*(_72542_d))))._field_Kind=_1c63d6de2_lenKind();
	(*((*(_72542_d))))._field_Model=jule::Any(jule::new_ptr<_1c62c9b3c_BuiltinCapCallExprModel>(_1c62c9b3c_BuiltinCapCallExprModel{._field_Expr=(*(_72524_expr))}), &__jule_any_type116);
	return (*(_72542_d));;
}



inline jule::Ptr<_1c63dd35a_Data> _1c65135c3_builtinCallerCap(jule::Ptr<_1c63e004e_Eval>* _73326_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _73341_fc, jule::Ptr<_1c63dd35a_Data>* _73363_d) {
	if (((*((*(_73341_fc))))._field_Args.len() < 1LL)) {
		_1c63e059e_pushErr((*(_73326_e)).ptr(), (*((*(_73341_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_73341_fc))))._field_Args.len() > 1LL)) {
		_1c63e059e_pushErr((*(_73326_e)).ptr(), (*((*((*(_73341_fc))))._field_Args[1LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("cap", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1c63dd35a_Data> _74113_dest = _1c640d028_evalExpr((*(_73326_e)), (*((*(_73341_fc))))._field_Args[0LL]);;
	{
		
		if ((_74113_dest == nullptr)) {
			_case_begin_1ad4126a5:;
			{
				return nullptr;;
			}
		}
		else if ((*(_74113_dest))._field_Decl) {
			_case_begin_1ad413376:;
			{
				_1c63e059e_pushErr((*(_73326_e)).ptr(), (*((*((*(_73341_fc))))._field_Args[0LL]))._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1c6421bc9_Slc((*(_74113_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad4133dc:;
			{
				return _1c6513194_callerCapSlice(&(_74113_dest), _73363_d);;
			}
		}
		else {
			_case_begin_1ad41230e:;
			{
				_1c63e059e_pushErr((*(_73326_e)).ptr(), (*((*((*(_73341_fc))))._field_Args[0LL]))._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad41085c:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c6513aac_callerDeleteMap(jule::Ptr<_1c63e004e_Eval>* _75625_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _75640_fc, jule::Ptr<_1c63dd35a_Data>* _75662_expr, jule::Ptr<_1c63dd35a_Data>* _75680_d) {
	if ((!((*((*(_75662_expr))))._field_Mutable))) {
		_1c63e059e_pushErr((*(_75625_e)).ptr(), (*((*((*(_75640_fc))))._field_Args[0LL]))._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	(*(_75680_d))=_1c6418d58_buildVoidData();
	jule::Ptr<_1c62ca016_BuiltinDeleteCallExprModel> _76113_model = jule::new_ptr<_1c62ca016_BuiltinDeleteCallExprModel>(_1c62ca016_BuiltinDeleteCallExprModel{._field_Dest=(*(_75662_expr)), });;
	if (((*((*(_75640_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1c63dd35a_Data> _76517_key = _1c640d028_evalExpr((*(_75625_e)), (*((*(_75640_fc))))._field_Args[1LL]);;
		{
			
			if ((_76517_key == nullptr)) {
				_case_begin_1ad419239:;
				{
					return nullptr;;
				}
			}
			else if ((*(_76517_key))._field_Decl) {
				_case_begin_1ad417d2b:;
				{
					_1c63e059e_pushErr((*(_75625_e)).ptr(), (*((*((*(_75640_fc))))._field_Args[1LL]))._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1ad417cb5:;
				{
					;
					jule::Ptr<_1c641d522_TypeKind> _77421_keyType = (*(_1c6422713_Map((*((*(_75662_expr))))._field_Kind.ptr())))._field_Key;;
					if ((!(_1c6373114_checkAssignType((*((*(_75625_e))))._field_s, false, &(_77421_keyType), &(_76517_key), (*((*((*(_75640_fc))))._field_Args[1LL]))._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_1ad417c4e:;
		};
		(*(_76113_model))._field_Key=_76517_key;
	};
	(*((*(_75680_d))))._field_Model=jule::Any(_76113_model, &__jule_any_type32);
	return (*(_75680_d));;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6513edb_builtinCallerDelete(jule::Ptr<_1c63e004e_Eval>* _78529_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _78544_fc, jule::Ptr<_1c63dd35a_Data>* _78566_d) {
	if (((*((*(_78544_fc))))._field_Args.len() < 1LL)) {
		_1c63e059e_pushErr((*(_78529_e)).ptr(), (*((*(_78544_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("map", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_78544_fc))))._field_Args.len() > 2LL)) {
		_1c63e059e_pushErr((*(_78529_e)).ptr(), (*((*((*(_78544_fc))))._field_Args[1LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("delete", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1c63dd35a_Data> _79313_dest = _1c640d028_evalExpr((*(_78529_e)), (*((*(_78544_fc))))._field_Args[0LL]);;
	{
		
		if ((_79313_dest == nullptr)) {
			_case_begin_1ad420174:;
			{
				return nullptr;;
			}
		}
		else if ((*(_79313_dest))._field_Decl) {
			_case_begin_1ad420d45:;
			{
				_1c63e059e_pushErr((*(_78529_e)).ptr(), (*((*((*(_78544_fc))))._field_Args[0LL]))._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1c6422713_Map((*(_79313_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad420dab:;
			{
				return _1c6513aac_callerDeleteMap(_78529_e, _78544_fc, &(_79313_dest), _78566_d);;
			}
		}
		else {
			_case_begin_1ad41eccd:;
			{
				_1c63e059e_pushErr((*(_78529_e)).ptr(), (*((*((*(_78544_fc))))._field_Args[0LL]))._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad41d32b:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c651441a_builtinCallerAssert(jule::Ptr<_1c63e004e_Eval>* _80829_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _80844_fc, jule::Ptr<_1c63dd35a_Data>* ) {
	if (((*((*(_80844_fc))))._field_Args.len() < 1LL)) {
		_1c63e059e_pushErr((*(_80829_e)).ptr(), (*((*(_80844_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_80844_fc))))._field_Args.len() > 2LL)) {
		_1c63e059e_pushErr((*(_80829_e)).ptr(), (*((*((*(_80844_fc))))._field_Args[2LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("assert", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1c63dd35a_Data> _81713_expr = _1c640d028_evalExpr((*(_80829_e)), (*((*(_80844_fc))))._field_Args[0LL]);;
	if ((_81713_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1c6420b73_Prim((*(_81713_expr))._field_Kind.ptr()) == nullptr) || (!(_1c64292ec_IsBool(_1c6420b73_Prim((*(_81713_expr))._field_Kind.ptr()).ptr()))))) {
		_1c63e059e_pushErr((*(_80829_e)).ptr(), (*((*(_80844_fc))))._field_Token, jule::Str("assertion requires boolean expression", 37), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c62c8bb3_BuiltinAssertCallExprModel> _82613_model = jule::new_ptr<_1c62c8bb3_BuiltinAssertCallExprModel>(_1c62c8bb3_BuiltinAssertCallExprModel{._field_Token=(*((*(_80844_fc))))._field_Token, ._field_Expr=(*(_81713_expr))._field_Model, ._field_Log=jule::Str("assertion failed", 16)});;
	if (((*((*(_80844_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1c63dd35a_Data> _83417_log = _1c640d028_evalExpr((*(_80829_e)), (*((*(_80844_fc))))._field_Args[1LL]);;
		if ((_83417_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_1c63ddc2e_IsConst(_83417_log.ptr()))) || (_1c6420b73_Prim((*(_83417_log))._field_Kind.ptr()) == nullptr)) || (!(_1c6429583_IsStr(_1c6420b73_Prim((*(_83417_log))._field_Kind.ptr()).ptr()))))) {
			_1c63e059e_pushErr((*(_80829_e)).ptr(), (*((*((*(_80844_fc))))._field_Args[1LL]))._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9), &__jule_any_type4),jule::Any(_1c641d8da_Str((*(_83417_log))._field_Kind.ptr()), &__jule_any_type4)}));
			return nullptr;;
		};
		(*(_82613_model))._field_Log=_1dc262718_ReadStr((*(_83417_log))._field_Constant.ptr());
	};
	jule::Ptr<_1c63dd35a_Data> _84713_d = _1c6418d58_buildVoidData();;
	(*(_84713_d))._field_Model=jule::Any(_82613_model, &__jule_any_type30);
	return _84713_d;;
}



inline jule::Ptr<_1c63dd35a_Data> _1c65149e2_builtinCallerStdComptimeTypeOf(jule::Ptr<_1c63e004e_Eval>* _85240_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _85255_fc, jule::Ptr<_1c63dd35a_Data>* ) {
	if (((*((*(_85255_fc))))._field_Args.len() < 1LL)) {
		_1c63e059e_pushErr((*(_85240_e)).ptr(), (*((*(_85255_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_85255_fc))))._field_Args.len() > 1LL)) {
		_1c63e059e_pushErr((*(_85240_e)).ptr(), (*((*((*(_85255_fc))))._field_Args[1LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("TypeOf", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1c63dd35a_Data> _86113_d = _1c640c214_evalExprKind((*(_85240_e)), (*((*((*(_85255_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_86113_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c62d2b01_FnIns> _8659_f = _1c6421e60_Fn((*(_86113_d))._field_Kind.ptr());;
	if ((_8659_f != nullptr)) {
		if (_1c62d4086_IsBuiltin(_8659_f.ptr())) {
			_1c63e059e_pushErr((*(_85240_e)).ptr(), (*((*((*(_85255_fc))))._field_Args[0LL]))._field_Token, jule::Str("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(jule::Str("<built-in fn>", 13), &__jule_any_type4)}));
			return nullptr;;
		};
		if (((*(_8659_f))._field_Generics.len() != (*((*(_8659_f))._field_Decl))._field_Generics.len())) {
			_1c63e059e_pushErr((*(_85240_e)).ptr(), (*((*((*(_85255_fc))))._field_Args[0LL]))._field_Token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1c62bcab9_StructIns> _8769_s = _1c64221e6_Struct((*(_86113_d))._field_Kind.ptr());;
	if (((_8769_s != nullptr) && ((*(_8769_s))._field_Generics.len() != (*((*(_8769_s))._field_Decl))._field_Generics.len()))) {
		_1c63e059e_pushErr((*(_85240_e)).ptr(), (*((*((*(_85255_fc))))._field_Args[0LL]))._field_Token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_1c6422c30_comptime((*(_86113_d))._field_Kind.ptr())) {
		_1c63e059e_pushErr((*(_85240_e)).ptr(), (*((*((*(_85255_fc))))._field_Args[0LL]))._field_Token, jule::Str("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_86113_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1c6316492_buildComptimeTypeInfoData(&((*((*(_85240_e))))._field_s), &((*(_86113_d))._field_Kind));;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6514daa_builtinCallerStdComptimeValueOf(jule::Ptr<_1c63e004e_Eval>* _88841_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _88856_fc, jule::Ptr<_1c63dd35a_Data>* ) {
	if (((*((*(_88856_fc))))._field_Args.len() < 1LL)) {
		_1c63e059e_pushErr((*(_88841_e)).ptr(), (*((*(_88856_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_88856_fc))))._field_Args.len() > 1LL)) {
		_1c63e059e_pushErr((*(_88841_e)).ptr(), (*((*((*(_88856_fc))))._field_Args[1LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("ValueOf", 7), &__jule_any_type4)}));
	};
	jule::Ptr<_1c63dd35a_Data> _89613_d = _1c640d028_evalExpr((*(_88841_e)), (*((*(_88856_fc))))._field_Args[0LL]);;
	if ((_89613_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c63d7244_isGoodValueToInfer(&(_89613_d))))) {
		_1c63e059e_pushErr((*(_88841_e)).ptr(), (*((*((*(_88856_fc))))._field_Args[0LL]))._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_89613_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str("ValueOf", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1c63166c3_buildComptimeValue(&(_89613_d));;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6515174_rangeData(jule::Trait<_1c62e9057_comptimeRangeKind> _90818_kind) {
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(jule::new_ptr<_1c62e9244_comptimeRange>(_1c62e9244_comptimeRange{._field_kind=_90818_kind}), 5)}), });;
}



inline jule::Ptr<_1c63dd35a_Data> _1c65155a3_builtinCallerStdComptimeRange(jule::Ptr<_1c63e004e_Eval>* _91839_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _91854_fc, jule::Ptr<_1c63dd35a_Data>* ) {
	if (((*((*(_91854_fc))))._field_Args.len() < 1LL)) {
		_1c63e059e_pushErr((*(_91839_e)).ptr(), (*((*(_91854_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_91854_fc))))._field_Args.len() > 1LL)) {
		_1c63e059e_pushErr((*(_91839_e)).ptr(), (*((*((*(_91854_fc))))._field_Args[1LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Range", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1c63dd35a_Data> _92713_d = _1c640c214_evalExprKind((*(_91839_e)), (*((*((*(_91854_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_92713_d == nullptr)) {
		return nullptr;;
	};
	{
		
		if ((_1c6422eb6_comptimeStructFields((*(_92713_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad443bae:;
			{
				return _1c6515174_rangeData(jule::Trait<_1c62e9057_comptimeRangeKind>(_1c6422eb6_comptimeStructFields((*(_92713_d))._field_Kind.ptr()), 0));;
			}
		}
		else if ((_1c64234d3_comptimeEnumFields((*(_92713_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad442b69:;
			{
				return _1c6515174_rangeData(jule::Trait<_1c62e9057_comptimeRangeKind>(_1c64234d3_comptimeEnumFields((*(_92713_d))._field_Kind.ptr()), 2));;
			}
		}
		else if ((_1c64242a3_comptimeTypeInfos((*(_92713_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad442bd0:;
			{
				return _1c6515174_rangeData(jule::Trait<_1c62e9057_comptimeRangeKind>(_1c64242a3_comptimeTypeInfos((*(_92713_d))._field_Kind.ptr()), 4));;
			}
		}
		else if ((_1c6423a00_comptimeParams((*(_92713_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad442c46:;
			{
				return _1c6515174_rangeData(jule::Trait<_1c62e9057_comptimeRangeKind>(_1c6423a00_comptimeParams((*(_92713_d))._field_Kind.ptr()), 3));;
			}
		}
		else if ((_1c64247c0_comptimeStatics((*(_92713_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad442806:;
			{
				return _1c6515174_rangeData(jule::Trait<_1c62e9057_comptimeRangeKind>(_1c64247c0_comptimeStatics((*(_92713_d))._field_Kind.ptr()), 1));;
			}
		}
		else if ((_1c6425309_comptimeFiles((*(_92713_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad44286c:;
			{
				return _1c6515174_rangeData(jule::Trait<_1c62e9057_comptimeRangeKind>(_1c6425309_comptimeFiles((*(_92713_d))._field_Kind.ptr()), 5));;
			}
		}
		else {
			_case_begin_1ad442790:;
			{
				_1c63e059e_pushErr((*(_91839_e)).ptr(), (*((*(_91854_fc))))._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_92713_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str("Range", 5), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ad44252b:;
	};
}



inline jule::Ptr<_1c63dd35a_Data> _1c65159d2_builtinCallerStdComptimeLine(jule::Ptr<_1c63e004e_Eval>* _95038_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _95053_fc, jule::Ptr<_1c63dd35a_Data>* ) {
	if (((*((*(_95053_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_95038_e)).ptr(), (*((*((*(_95053_fc))))._field_Args[1LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Line", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1dc260590_Const> _95413_constant = static__1dc2609d0_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*((*((*(_95053_fc))))._field_Token))._field_Row)));;
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c650a07b_primInt, ._field_Model=jule::Any(_95413_constant, &__jule_any_type19), ._field_Constant=_95413_constant});;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6515e11_builtinCallerStdComptimeFile(jule::Ptr<_1c63e004e_Eval>* _96238_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _96253_fc, jule::Ptr<_1c63dd35a_Data>* ) {
	if (((*((*(_96253_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_96238_e)).ptr(), (*((*((*(_96253_fc))))._field_Args[1LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("File", 4), &__jule_any_type4)}));
	};
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(jule::new_ptr<_1c6314171_comptimeFile>(_1c6314171_comptimeFile{._field_file=(*((*((*(_96238_e))))._field_s))._field_file}), 18)}), });;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6516340_builtinCallerStdComptimeFiles(jule::Ptr<_1c63e004e_Eval>* _97539_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _97554_fc, jule::Ptr<_1c63dd35a_Data>* ) {
	if (((*((*(_97554_fc))))._field_Args.len() > 0LL)) {
		_1c63e059e_pushErr((*(_97539_e)).ptr(), (*((*((*(_97554_fc))))._field_Args[1LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Files", 5), &__jule_any_type4)}));
	};
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=jule::new_ptr<_1c641d522_TypeKind>(_1c641d522_TypeKind{._field_Kind=jule::Trait<_1c641d06b_Kind>(jule::new_ptr<_1c6312a76_comptimeFiles>(_1c6312a76_comptimeFiles{._field_files=(*((*((*(_97539_e))))._field_s))._field_files}), 17)}), });;
}



inline jule::Ptr<_1c63dd35a_Data> _1c651676e_builtinCallerStdComptimeTypeAlias(jule::Ptr<_1c63e004e_Eval>* _98843_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _98858_fc, jule::Ptr<_1c63dd35a_Data>* ) {
	if (((*((*(_98858_fc))))._field_Args.len() > 2LL)) {
		_1c63e059e_pushErr((*(_98843_e)).ptr(), (*((*((*(_98858_fc))))._field_Args[1LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("TypeAlias", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_98858_fc))))._field_Args.len() == 0LL)) {
		_1c63e059e_pushErr((*(_98843_e)).ptr(), (*((*(_98858_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("ident, type", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_98858_fc))))._field_Args.len() == 1LL)) {
		_1c63e059e_pushErr((*(_98843_e)).ptr(), (*((*(_98858_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_98858_fc))))._field_Args[0LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ad4560de:;
			{
				goto _match_end_1ad454ae3;
			}
		}
		else {
			_case_begin_1ad454b59:;
			{
				_1c63e059e_pushErr((*(_98843_e)).ptr(), (*((*((*(_98858_fc))))._field_Args[0LL]))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				_1c63e0912_pushSuggestion((*(_98843_e)).ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad454ae3:;
	};
	jule::Ptr<_1c6283a3b_Token> _100913_ident = (*((*((*((*(_98858_fc))))._field_Args[0LL]))._field_Kind.cast_ptr<_1c629eea8_IdentExpr>(&__jule_any_type79)))._field_Token;;
	{
		auto &_match_expr{ (*((*(_98843_e))))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1ad45751e:;
			{
				goto _match_end_1ad457145;
			}
		}
		else {
			_case_begin_1ad45719a:;
			{
				_1c63e059e_pushErr((*(_98843_e)).ptr(), (*((*(_98858_fc))))._field_Token, jule::Str("you can call @ function in the scopes only", 42), jule::Slice<jule::Any>::make({jule::Any(jule::Str("TypeAlias", 9), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ad457145:;
	};
	jule::Ptr<_1c6327a58_scopeChecker> _101813_sc = (*((*(_98843_e))))._field_lookup.cast_ptr<_1c6327a58_scopeChecker>(0);;
	jule::Ptr<_1c641c730_TypeAlias> _101913_alias = jule::new_ptr<_1c641c730_TypeAlias>(_1c641c730_TypeAlias{._field_Scope=(*(_101813_sc))._field_tree, ._field_Public=_1c6364ab7_IsPub(&((*(_100913_ident))._field_Kind)), ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=_100913_ident, ._field_Ident=(*(_100913_ident))._field_Kind, ._field_Kind=jule::new_ptr<_1c64256e4_TypeSymbol>(), });;
	jule::Ptr<_1c63dd35a_Data> _102913_t = _1c640c555_eval1((*(_98843_e)), (*((*(_98858_fc))))._field_Args[1LL]);;
	if ((_102913_t == nullptr)) {
		return nullptr;;
	};
	if ((*(_102913_t))._field_Decl) {
		(*((*(_101913_alias))._field_Kind))._field_Kind=(*(_102913_t))._field_Kind;
	} else {
		jule::Ptr<_1c6308c15_comptimeTypeInfo> _103617_cti = _1c6424539_comptimeTypeInfo((*(_102913_t))._field_Kind.ptr());;
		if ((_103617_cti == nullptr)) {
			_1c63e059e_pushErr((*(_98843_e)).ptr(), (*((*((*(_98858_fc))))._field_Args[1LL]))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			_1c63e0912_pushSuggestion((*(_98843_e)).ptr(), jule::Str("expected type declaration", 25), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*((*(_101913_alias))._field_Kind))._field_Kind=(*(_103617_cti))._field_base;
	};
	_1c632c310_checkTypeAlias(_101813_sc, &(_101913_alias));
	return _1c6418d58_buildVoidData();;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6516b9d_builtinCallerStdMemSizeOf(jule::Ptr<_1c63e004e_Eval>* _104835_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _104850_fc, jule::Ptr<_1c63dd35a_Data>* ) {
	jule::Ptr<_1c63dd35a_Data> _104913_result = jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c6509ba2_primUint, });;
	if (((*((*(_104850_fc))))._field_Args.len() < 1LL)) {
		_1c63e059e_pushErr((*(_104835_e)).ptr(), (*((*(_104850_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type4)}));
		return _104913_result;;
	};
	if (((*((*(_104850_fc))))._field_Args.len() > 1LL)) {
		_1c63e059e_pushErr((*(_104835_e)).ptr(), (*((*((*(_104850_fc))))._field_Args[1LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("SizeOf", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1c63dd35a_Data> _106113_d = _1c640c214_evalExprKind((*(_104835_e)), (*((*((*(_104850_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_106113_d == nullptr)) {
		return _104913_result;;
	};
	if ((!(_1c643acae_validTypeForXof(&((*(_106113_d))._field_Kind))))) {
		_1c63e059e_pushErr((*(_104835_e)).ptr(), (*((*((*(_104850_fc))))._field_Args[0LL]))._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_106113_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str("SizeOf", 6), &__jule_any_type4)}));
	};
	(*(_104913_result))._field_Model=jule::Any(jule::new_ptr<_1c62c6375_SizeofExprModel>(_1c62c6375_SizeofExprModel{._field_Expr=(*(_106113_d))._field_Model}), &__jule_any_type117);
	return _104913_result;;
}



inline jule::Ptr<_1c63dd35a_Data> _1c65170cc_builtinCallerStdMemAlignOf(jule::Ptr<_1c63e004e_Eval>* _107336_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _107351_fc, jule::Ptr<_1c63dd35a_Data>* ) {
	jule::Ptr<_1c63dd35a_Data> _107413_result = jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c6509ba2_primUint, });;
	if (((*((*(_107351_fc))))._field_Args.len() < 1LL)) {
		_1c63e059e_pushErr((*(_107336_e)).ptr(), (*((*(_107351_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type4)}));
		return _107413_result;;
	};
	if (((*((*(_107351_fc))))._field_Args.len() > 1LL)) {
		_1c63e059e_pushErr((*(_107336_e)).ptr(), (*((*((*(_107351_fc))))._field_Args[1LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("AlignOf", 7), &__jule_any_type4)}));
	};
	jule::Ptr<_1c63dd35a_Data> _108613_d = _1c640c214_evalExprKind((*(_107336_e)), (*((*((*(_107351_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_108613_d == nullptr)) {
		return _107413_result;;
	};
	if ((!(_1c643acae_validTypeForXof(&((*(_108613_d))._field_Kind))))) {
		_1c63e059e_pushErr((*(_107336_e)).ptr(), (*((*((*(_107351_fc))))._field_Args[0LL]))._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c641d8da_Str((*(_108613_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str("AlignOf", 7), &__jule_any_type4)}));
	};
	(*(_107413_result))._field_Model=jule::Any(jule::new_ptr<_1c62caee5_AlignofExprModel>(_1c62caee5_AlignofExprModel{._field_Expr=(*(_108613_d))._field_Model}), &__jule_any_type118);
	return _107413_result;;
}



inline jule::Ptr<_1c63dd35a_Data> _1c651750b_builtinCallerStdMemFree(jule::Ptr<_1c63e004e_Eval>* _109833_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _109848_fc, jule::Ptr<_1c63dd35a_Data>* ) {
	if (((*((*(_109848_fc))))._field_Args.len() < 1LL)) {
		_1c63e059e_pushErr((*(_109833_e)).ptr(), (*((*(_109848_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_109848_fc))))._field_Args.len() > 1LL)) {
		_1c63e059e_pushErr((*(_109833_e)).ptr(), (*((*((*(_109848_fc))))._field_Args[1LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Free", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1c63dd35a_Data> _110713_d = _1c640d028_evalExpr((*(_109833_e)), (*((*(_109848_fc))))._field_Args[0LL]);;
	if ((_110713_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c6420656_PerformsRC((*(_110713_d))._field_Kind.ptr())))) {
		_1c63e059e_pushErr((*(_109833_e)).ptr(), (*((*((*(_109848_fc))))._field_Args[0LL]))._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c63dd35a_Data> _111613_result = _1c6418d58_buildVoidData();;
	(*(_111613_result))._field_Model=jule::Any(jule::new_ptr<_1c62cbcb5_FreeExprModel>(_1c62cbcb5_FreeExprModel{._field_Expr=(*(_110713_d))._field_Model}), &__jule_any_type33);
	return _111613_result;;
}



inline jule::Ptr<_1c63dd35a_Data> _1c651793a_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1c63e004e_Eval>* _112145_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _112160_fc, jule::Ptr<_1c63dd35a_Data>* ) {
	if (((*((*(_112160_fc))))._field_Args.len() < 1LL)) {
		_1c63e059e_pushErr((*(_112145_e)).ptr(), (*((*(_112160_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_112160_fc))))._field_Args.len() > 1LL)) {
		_1c63e059e_pushErr((*(_112145_e)).ptr(), (*((*((*(_112160_fc))))._field_Args[1LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("ToStr", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1c63dd35a_Data> _113013_d = _1c640d028_evalExpr((*(_112145_e)), (*((*(_112160_fc))))._field_Args[0LL]);;
	if ((_113013_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c6439cd0_isBuiltinStrConvertable(&((*(_113013_d))._field_Kind))))) {
		_1c63e059e_pushErr((*(_112145_e)).ptr(), (*((*((*(_112160_fc))))._field_Args[0LL]))._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1c63dd35a_Data>(_1c63dd35a_Data{._field_Kind=_1c6509355_primStr, ._field_Model=jule::Any(jule::new_ptr<_1c62cb5de_IntegratedToStrExprModel>(_1c62cb5de_IntegratedToStrExprModel{._field_Expr=(*(_113013_d))._field_Model}), &__jule_any_type119), });;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6517d69_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1c63e004e_Eval>* _114844_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _114859_fc, jule::Ptr<_1c63dd35a_Data>* _114881_d) {
	if ((!(_1c63e1094_isUnsafe((*(_114844_e)).ptr())))) {
		_1c63e059e_pushErr((*(_114844_e)).ptr(), (*((*(_114859_fc))))._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	if (((*((*(_114859_fc))))._field_Args.len() < 1LL)) {
		_1c63e059e_pushErr((*(_114844_e)).ptr(), (*((*(_114859_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c63dd35a_Data> _115813_argd = _1c640d028_evalExpr((*(_114844_e)), (*((*(_114859_fc))))._field_Args[0LL]);;
	if ((_115813_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1c6420b73_Prim((*(_115813_argd))._field_Kind.ptr()) == nullptr) || (!(_1c6429583_IsStr(_1c6420b73_Prim((*(_115813_argd))._field_Kind.ptr()).ptr()))))) {
		_1c63e059e_pushErr((*(_114844_e)).ptr(), (*((*((*(_114859_fc))))._field_Args[0LL]))._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type4),jule::Any(_1c641d8da_Str((*(_115813_argd))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((!(_1c63ddc2e_IsConst(_115813_argd.ptr()))) || (!(_1dc264d14_IsStr((*(_115813_argd))._field_Constant.ptr()))))) {
		_1c63e059e_pushErr((*(_114844_e)).ptr(), (*((*((*(_114859_fc))))._field_Args[0LL]))._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c63dd35a_Data> _117313_r = _1c6418d58_buildVoidData();;
	jule::Ptr<_1c62d2b01_FnIns> _117513_f = _1c6421e60_Fn((*((*(_114881_d))))._field_Kind.ptr());;
	if (((*(_117513_f))._field_Generics.len() > 0LL)) {
		(*(_117313_r))._field_Kind=(*((*(_117513_f))._field_Generics[0LL]))._field_Kind;
	};
	jule::Ptr<_1c62cb9b8_BackendEmitExprModel> _118013_model = jule::new_ptr<_1c62cb9b8_BackendEmitExprModel>(_1c62cb9b8_BackendEmitExprModel{._field_Code=_1dc262718_ReadStr((*(_115813_argd))._field_Constant.ptr()), });;
	if (((*((*(_114859_fc))))._field_Args.len() > 1LL)) {
		(*(_118013_model))._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, ((*((*(_114859_fc))))._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = (*((*(_114859_fc))))._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1ad486163:;
			if (it != expr_end) {
				jule::Ptr<_1c629d57d_Expr> _118621_arg = *it;
				{
					_115813_argd=_1c640c555_eval1((*(_114844_e)), _118621_arg);
					if ((_115813_argd == nullptr)) {
						return nullptr;;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = (*(_118013_model))._field_Exprs; __jule_push_dest.push((*(_115813_argd))._field_Model); };
				}
				_iter_next_1ad486163:;
				++it;
				goto _iter_begin_1ad486163;
			}
			_iter_end_1ad486163:;
		};
	};
	(*(_117313_r))._field_Model=jule::Any(_118013_model, &__jule_any_type25);
	return _117313_r;;
}



inline jule::Ptr<_1c63dd35a_Data> _1c6518298_builtinCallerStdDebugOut(jule::Ptr<_1c63e004e_Eval>* _119934_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _119949_fc, jule::Ptr<_1c63dd35a_Data>* _119971_d) {
	(*(_119971_d))=_1c650e4ae_builtinCallerOut(_119934_e, _119949_fc, _119971_d);
	if (((*(_119971_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_119971_d))))._field_Model.cast_ptr<_1c62c7a80_BuiltinOutCallExprModel>(&__jule_any_type27)))._field_Debug=true;
	return (*(_119971_d));;
}



inline jule::Ptr<_1c63dd35a_Data> _1c65186c7_builtinCallerStdDebugOutln(jule::Ptr<_1c63e004e_Eval>* _120836_e, jule::Ptr<_1c62a22a7_FnCallExpr>* _120851_fc, jule::Ptr<_1c63dd35a_Data>* _120873_d) {
	(*(_120873_d))=_1c650e8dd_builtinCallerOutln(_120836_e, _120851_fc, _120873_d);
	if (((*(_120873_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_120873_d))))._field_Model.cast_ptr<_1c62c7e59_BuiltinOutlnCallExprModel>(&__jule_any_type28)))._field_Debug=true;
	return (*(_120873_d));;
}



inline jule::Ptr<_1c6c84904_FileInfo> _1c6cc7edb_ParseFile(jule::Ptr<_1c6289305_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c6c84904_FileInfo> _2713_finf = jule::new_ptr<_1c6c84904_FileInfo>();;
	({
		__jule_tuple_x_1c6297379_Ast__jule_tuple_s_221968cb9_Log __jule_assign_result = _1c6cc85b3_parseFileset(_2318_f);
		(*(_2713_finf))._field_Ast = __jule_assign_result.__jule_result_arg0;
		(*(_2713_finf))._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if (((*(_2713_finf))._field_Errors.len() > 0LL)) {
		(*(_2713_finf))._field_Ast=nullptr;
	};
	return _2713_finf;;
}



inline __jule_tuple_x_1c6297379_Ast__jule_tuple_s_221968cb9_Log _1c6cc85b3_parseFileset(jule::Ptr<_1c6289305_File> _5521_f) {
	__jule_tuple_x_1c6297379_Ast__jule_tuple_s_221968cb9_Log __jule_func_result;
	jule::Ptr<_1a9ebc7d5_parser> _5613_p = jule::new_ptr<_1a9ebc7d5_parser>();;
	_1a9ecd3a6_parse(_5613_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = (*(_5613_p))._field_ast;
	__jule_func_result.__jule_result_arg1 = (*(_5613_p))._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1c62a926a_ScopeTree> _1c6cc9042_newScope(void) {
	return jule::new_ptr<_1c62a926a_ScopeTree>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1c6cc93b6_isSt(jule::Ptr<_1c6283a3b_Token> _499_current, jule::Ptr<_1c6283a3b_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=(((*(_499_current))._field_Id == static_cast<jule::U64>(3LLU)) || ((*(_4926_prev))._field_Row < (*(_499_current))._field_Row));
	__jule_func_result.__jule_result_arg1=((*(_499_current))._field_Id == static_cast<jule::U64>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _1c6cc973a_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _5526_tokens, jule::I64* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*((*(_5526_tokens))[((*(_5545_i)) - 2LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_1c6283a3b_Token> _6113_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return (((*(_6113_prev))._field_Id == static_cast<jule::U64>(17LLU)) || (_1c6284586_IsBinOp((*(_6113_prev))._field_Id) && ((*(_6113_prev))._field_Row < (*((*(_5526_tokens))[(*(_5545_i))]))._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1c6cc9b03_nextStPos(jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _6815_tokens, jule::I64 _6833_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _6913_braceN = 0LL;;
	jule::I64 _7013_i = _6833_start;;
	for (; (_7013_i < (*(_6815_tokens)).len()); (_7013_i)++) {
		{
			jule::Bool _7217_ok = false;;
			jule::Bool _7317_terminated = false;;
			jule::Ptr<_1c6283a3b_Token> _7413_tok = (*(_6815_tokens))[_7013_i];;
			{
				auto &_match_expr{ (*(_7413_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1ad5141d0:;
					{
						if (((_6913_braceN == 0LL) && (_7013_i > _6833_start))) {
							if ((!(_1c6cc973a_prevIsIncompleteExpr(_6815_tokens, &(_7013_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c6cc93b6_isSt(_7413_tok, (*(_6815_tokens))[(_7013_i - 1LL)]);
									_7217_ok = __jule_assign_result.__jule_result_arg0;
									_7317_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_7217_ok) {
									goto _julec_label_1ad513d28;
								};
							};
						};
						(_6913_braceN)++;
						goto _iter_next_1ad512a4c;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1ad514246:;
					{
						(_6913_braceN)--;
						if (((_6913_braceN == 0LL) && ((_7013_i + 1LL) < (*(_6815_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c6cc93b6_isSt((*(_6815_tokens))[(_7013_i + 1LL)], _7413_tok);
								_7217_ok = __jule_assign_result.__jule_result_arg0;
								_7317_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_7217_ok) {
								(_7013_i)++;
								goto _julec_label_1ad513d28;
							};
						};
						goto _iter_next_1ad512a4c;
					}
				}
				_match_end_1ad51417a:;
			};
			if ((_6913_braceN != 0LL)) {
				goto _iter_next_1ad512a4c;
			};
			if ((_7013_i > _6833_start)) {
				if (_1c6cc973a_prevIsIncompleteExpr(_6815_tokens, &(_7013_i))) {
					goto _iter_next_1ad512a4c;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c6cc93b6_isSt(_7413_tok, (*(_6815_tokens))[(_7013_i - 1LL)]);
					_7217_ok = __jule_assign_result.__jule_result_arg0;
					_7317_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c6cc93b6_isSt(_7413_tok, _7413_tok);
					_7217_ok = __jule_assign_result.__jule_result_arg0;
					_7317_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_7217_ok))) {
				goto _iter_next_1ad512a4c;
			};
			_julec_label_1ad513d28:;
			if (_7317_terminated) {
				(_7013_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _7013_i;
			__jule_func_result.__jule_result_arg1 = _7317_terminated;
			return __jule_func_result;;
		}
	_iter_next_1ad512a4c:;
	}
	_iter_end_1ad512a4c:;;
	__jule_func_result.__jule_result_arg0 = _7013_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1c6283a3b_Token__jule_tuple_bool _1c6cc9e77_skipSt(jule::I64* _13016_i, jule::Slice<jule::Ptr<_1c6283a3b_Token>> _13028_tokens) {
	__jule_tuple_sx_1c6283a3b_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _1319_start = (*(_13016_i));;
	jule::Bool _13213_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c6cc9b03_nextStPos(&(_13028_tokens), _1319_start);
		(*(_13016_i)) = __jule_assign_result.__jule_result_arg0;
		_13213_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1c6283a3b_Token>> _13413_stTokens = _13028_tokens.slice(_1319_start, (*(_13016_i)));;
	if (_13213_terminated) {
		if ((_13413_stTokens.len() == 1LL)) {
			({
				__jule_tuple_sx_1c6283a3b_Token__jule_tuple_bool __jule_assign_result = _1c6cc9e77_skipSt(_13016_i, _13028_tokens);
				_13413_stTokens = __jule_assign_result.__jule_result_arg0;
				_13213_terminated = __jule_assign_result.__jule_result_arg1;
			});
			__jule_func_result.__jule_result_arg0 = _13413_stTokens;
			__jule_func_result.__jule_result_arg1 = _13213_terminated;
			return __jule_func_result;;
		};
		(_13413_stTokens).mut_slice(0LL, (_13413_stTokens.len() - 1LL));;
	};
	__jule_func_result.__jule_result_arg0 = _13413_stTokens;
	__jule_func_result.__jule_result_arg1 = _13213_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1c6cca2a7_stmt>> _1c6cca65e_splitStmts(jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _15220_tokens) {
	jule::Slice<jule::Ptr<_1c6cca2a7_stmt>> _15313_stmts = jule::Slice<jule::Ptr<_1c6cca2a7_stmt>>::alloc(0LL, 20LL);;
	jule::I64 _15413_pos = 0LL;;
	while ((_15413_pos < (*(_15220_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_1c6283a3b_Token>> _15618_stmt;;
			jule::Bool _15624_terminated = false;;
			({
				__jule_tuple_sx_1c6283a3b_Token__jule_tuple_bool __jule_assign_result = _1c6cc9e77_skipSt(&(_15413_pos), (*(_15220_tokens)));
				_15618_stmt = __jule_assign_result.__jule_result_arg0;
				_15624_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_1c6cca2a7_stmt>> &__jule_push_dest = _15313_stmts; __jule_push_dest.push(jule::new_ptr<_1c6cca2a7_stmt>(_1c6cca2a7_stmt{._field_tokens=_15618_stmt, ._field_terminated=_15624_terminated})); };
		}
	_iter_next_1ad51db9b:;
	}
	_iter_end_1ad51db9b:;;
	return _15313_stmts;;
}



inline jule::Bool _1a9eb7406_isTypeOp(jule::U64* _88214_id) {
	return ((((*(_88214_id)) == static_cast<jule::U64>(65LLU)) || ((*(_88214_id)) == static_cast<jule::U64>(54LLU))) || ((*(_88214_id)) == static_cast<jule::U64>(62LLU)));;
}



inline jule::Bool _1a9eb7714_isTypeRange(jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _88921_tokens) {
	jule::Bool _89013_op = false;;
	{
		auto expr = _88921_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5d1dd5:;
		if (it != expr_end) {
			jule::I64 _8919_i = it - expr->begin();
			jule::Ptr<_1c6283a3b_Token> _89112_token = *it;
			{
				if (((*(_89112_token))._field_Id == static_cast<jule::U64>(76LLU))) {
					if (_89013_op) {
						return true;;
					};
					jule::I64 _89621_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_1c6283a3b_Token>> _89721_lTokens = (*(_88921_tokens)).slice(_8919_i);;
					{
						auto expr = &(_89721_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ad5d5218:;
						if (it != expr_end) {
							jule::Ptr<_1c6283a3b_Token> _89820_lToken = *it;
							{
								{
									auto &_match_expr{ (*(_89820_lToken))._field_Id };
									
									if (_match_expr == static_cast<jule::U64>(76LLU)) {
										_case_begin_1ad5d5cda:;
										{
											(_89621_rangeN)++;
											goto _iter_next_1ad5d5218;
										}
									}
									else if (_match_expr == static_cast<jule::U64>(77LLU)) {
										_case_begin_1ad5d5d62:;
										{
											(_89621_rangeN)--;
											goto _iter_next_1ad5d5218;
										}
									}
									_match_end_1ad5d5c1e:;
								};
								if ((_89621_rangeN == 0LL)) {
									return _1a9eb7406_isTypeOp(&((*(_89820_lToken))._field_Id));;
								};
							}
							_iter_next_1ad5d5218:;
							++it;
							goto _iter_begin_1ad5d5218;
						}
						_iter_end_1ad5d5218:;
					};
					return true;;
				};
				if ((!(_1a9eb7406_isTypeOp(&((*(_89112_token))._field_Id))))) {
					return false;;
				};
				_89013_op=true;
			}
			_iter_next_1ad5d1dd5:;
			++it;
			_8919_i++;
			goto _iter_begin_1ad5d1dd5;
		}
		_iter_end_1ad5d1dd5:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1c6283a3b_Token>> _1a9eb79cd_getBlockExpr(jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _92222_tokens) {
	jule::I64 _92313_braceN = 0LL;;
	jule::I64 _92413_skipToNextBraceClose = 0LL;;
	{
		auto expr = _92222_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5d7a89:;
		if (it != expr_end) {
			jule::I64 _9259_i = it - expr->begin();
			jule::Ptr<_1c6283a3b_Token> _92512_tok = *it;
			{
				{
					auto &_match_expr{ (*(_92512_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(13LLU) || _match_expr == static_cast<jule::U64>(14LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1ad5d899c:;
						{
							(_92413_skipToNextBraceClose)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1ad5d8a24:;
						{
							if (((_92313_braceN > 0LL) || (_92413_skipToNextBraceClose > 0LL))) {
								if ((_92413_skipToNextBraceClose > 0LL)) {
									(_92413_skipToNextBraceClose)--;
								};
								(_92313_braceN)++;
								goto _match_end_1ad5d88ae;
							};
							return (*(_92222_tokens)).slice(0LL, _9259_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ad5d8a9b:;
						{
							(_92313_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ad5d8b23:;
						{
							(_92313_braceN)--;
						}
					}
					_match_end_1ad5d88ae:;
				};
			}
			_iter_next_1ad5d7a89:;
			++it;
			_9259_i++;
			goto _iter_begin_1ad5d7a89;
		}
		_iter_end_1ad5d7a89:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1c6283a3b_Token__jule_tuple_sx_1c6283a3b_Token _1a9eb7d96_splitDelim(jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _95220_tokens, jule::U64 _95238_delim) {
	__jule_tuple_sx_1c6283a3b_Token__jule_tuple_sx_1c6283a3b_Token __jule_func_result;
	jule::I64 _95313_rangeN = 0LL;;
	{
		auto expr = _95220_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5db42d:;
		if (it != expr_end) {
			jule::I64 _9549_i = it - expr->begin();
			jule::Ptr<_1c6283a3b_Token> _95412_token = *it;
			{
				{
					auto &_match_expr{ (*(_95412_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ad5dc231:;
						{
							(_95313_rangeN)++;
							goto _iter_next_1ad5db42d;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ad5dc2a8:;
						{
							(_95313_rangeN)--;
						}
					}
					else if (_match_expr == _95238_delim) {
						_case_begin_1ad5dc330:;
						{
							if ((_95313_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_1c6283a3b_Token>> _96725_l = (*(_95220_tokens)).slice(0LL, _9549_i);;
								jule::Slice<jule::Ptr<_1c6283a3b_Token>> _96825_r = (*(_95220_tokens)).slice((_9549_i + 1LL));;
								__jule_func_result.__jule_result_arg0 = _96725_l;
								__jule_func_result.__jule_result_arg1 = _96825_r;
								return __jule_func_result;;
							};
						}
					}
					_match_end_1ad5dc154:;
				};
			}
			_iter_next_1ad5db42d:;
			++it;
			_9549_i++;
			goto _iter_begin_1ad5db42d;
		}
		_iter_end_1ad5db42d:;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I64 _1a9eb8160_findLowestPrecOp(jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _97822_tokens) {
	jule::U8 _98313_prec = 255LLU;;
	jule::I64 _98413_precPos = -1LL;;
	jule::I64 _98613_braceN = 0LL;;
	jule::Bool _98713_skipToNextBraceOpen = false;;
	{
		auto expr = _97822_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5e072e:;
		if (it != expr_end) {
			jule::I64 _9889_i = it - expr->begin();
			jule::Ptr<_1c6283a3b_Token> *_98812_token = it;
			{
				{
					auto &_match_expr{ (*((*(_98812_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1ad5e1576:;
						{
							_98713_skipToNextBraceOpen=false;
							goto _case_begin_1ad5e15ed;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1ad5e15ed:;
						{
							(_98613_braceN)++;
							goto _iter_next_1ad5e072e;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1ad5e1675:;
						{
							(_98613_braceN)--;
							goto _iter_next_1ad5e072e;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(13LLU)) {
						_case_begin_1ad5e16ec:;
						{
							_98713_skipToNextBraceOpen=true;
							goto _iter_next_1ad5e072e;
						}
					}
					_match_end_1ad5e1488:;
				};
				{
					
					if (_98713_skipToNextBraceOpen) {
						_case_begin_1ad5e2b60:;
						{
							goto _iter_next_1ad5e072e;
						}
					}
					else if ((_9889_i == 0LL)) {
						_case_begin_1ad5e2bd7:;
						{
							goto _iter_next_1ad5e072e;
						}
					}
					else if ((_98613_braceN > 0LL)) {
						_case_begin_1ad5e2c5e:;
						{
							goto _iter_next_1ad5e072e;
						}
					}
					else if ((!(_1c6284586_IsBinOp((*((*(_98812_token))))._field_Id)))) {
						_case_begin_1ad5e2cd6:;
						{
							goto _iter_next_1ad5e072e;
						}
					}
					_match_end_1ad5e290c:;
				};
				jule::Ptr<_1c6283a3b_Token> _101713_left = (*(_97822_tokens))[(_9889_i - 1LL)];;
				if ((_1c6284278_IsUnaryOp((*(_101713_left))._field_Id) || ((*(_101713_left))._field_Id == static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1ad5e072e;
				};
				if (((_9889_i > 1LL) && ((*(_101713_left))._field_Id == static_cast<jule::U64>(77LLU)))) {
					jule::Ptr<_1c6283a3b_Token> _102517_lleft = (*(_97822_tokens))[(_9889_i - 2LL)];;
					if (((*(_102517_lleft))._field_Id == static_cast<jule::U64>(76LLU))) {
						if ((((*((*(_98812_token))))._field_Id == static_cast<jule::U64>(65LLU)) || ((*((*(_98812_token))))._field_Id == static_cast<jule::U64>(62LLU)))) {
							goto _iter_next_1ad5e072e;
						};
					};
				};
				jule::U8 _103413_p = _1c6283db0_Prec((*(_98812_token)).ptr());;
				if (((_103413_p != 0LLU) && (_103413_p <= _98313_prec))) {
					_98313_prec=_103413_p;
					_98413_precPos=_9889_i;
				};
			}
			_iter_next_1ad5e072e:;
			++it;
			_9889_i++;
			goto _iter_begin_1ad5e072e;
		}
		_iter_end_1ad5e072e:;
	};
	return _98413_precPos;;
}



inline jule::Ptr<_1c629eea8_IdentExpr> _1a9eb8429_buildIdentExpr(jule::Ptr<_1c6283a3b_Token>* _104324_token) {
	return jule::new_ptr<_1c629eea8_IdentExpr>(_1c629eea8_IdentExpr{._field_Token=(*(_104324_token)), ._field_Ident=(*((*(_104324_token))))._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_1c6283a3b_Token__jule_tuple_int _1a9eb86e3_getRangeExprTokens(jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _105128_tokens) {
	__jule_tuple_sx_1c6283a3b_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I64 _105213_rangeN = 0LL;;
	jule::I64 _105313_i = ((*(_105128_tokens)).len() - 1LL);;
	for (; (_105313_i >= 0LL); (_105313_i)--) {
		{
			jule::Ptr<_1c6283a3b_Token> _105513_tok = (*(_105128_tokens))[_105313_i];;
			{
				auto &_match_expr{ (*(_105513_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1ad5e9d21:;
					{
						(_105213_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1ad5e9d98:;
					{
						(_105213_rangeN)--;
					}
				}
				_match_end_1ad5e9caa:;
			};
			if ((_105213_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_105128_tokens)).slice(0LL, _105313_i);
				__jule_func_result.__jule_result_arg1 = _105213_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1ad5e90c8:;
	}
	_iter_end_1ad5e90c8:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _105213_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1a9eb94e6_checkAssignTokens(jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_1c6288414_IsAssign((*((*(_1623_tokens))[0LL]))._field_Id))))) {
		return false;;
	};
	jule::I64 _2013_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad686033:;
		if (it != expr_end) {
			jule::Ptr<_1c6283a3b_Token> *_2112_t = it;
			{
				{
					auto &_match_expr{ (*((*(_2112_t))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ad686b16:;
						{
							(_2013_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ad686b8d:;
						{
							(_2013_braceN)--;
						}
					}
					_match_end_1ad686a4a:;
				};
				{
					
					if ((_2013_braceN < 0LL)) {
						_case_begin_1ad687a29:;
						{
							return false;;
						}
					}
					else if ((_2013_braceN > 0LL)) {
						_case_begin_1ad687a90:;
						{
							goto _iter_next_1ad686033;
						}
					}
					else if (_1c6288997_IsAssignOp((*((*(_2112_t))))._field_Id) || ((*((*(_2112_t))))._field_Id == static_cast<jule::U64>(38LLU))) {
						_case_begin_1ad687b17:;
						{
							return true;;
						}
					}
					_match_end_1ad687980:;
				};
			}
			_iter_next_1ad686033:;
			++it;
			goto _iter_begin_1ad686033;
		}
		_iter_end_1ad686033:;
	};
	return false;;
}



inline _221968cb9_Log _1a9eba6c3_makeErr(jule::I64 _5112_row, jule::I64 _5122_col, jule::Ptr<_1c6289305_File>* _5133_f, jule::Str _5143_fmt, jule::Slice<jule::Any> _5156_args) {
	return _221968cb9_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5112_row, ._field_Column=_5122_col, ._field_Path=(*((*(_5133_f))))._field_Path, ._field_Text=_22196922b_Logf(_5143_fmt, _5156_args), };;
}



inline jule::Slice<jule::Ptr<_1c6283a3b_Token>> _1a9ebabbd_range(jule::I64* _6915_i, jule::U64 _6923_open, jule::U64 _6938_close, jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _6959_tokens) {
	if (((*(_6915_i)) >= (*(_6959_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_1c6283a3b_Token> _739_tok = (*(_6959_tokens))[(*(_6915_i))];;
	if (((*(_739_tok))._field_Id != _6923_open)) {
		return nullptr;;
	};
	((*(_6915_i)))++;
	jule::I64 _7813_rangeN = 1LL;;
	jule::I64 _799_start = (*(_6915_i));;
	for (; ((_7813_rangeN != 0LL) && ((*(_6915_i)) < (*(_6959_tokens)).len())); ((*(_6915_i)))++) {
		{
			jule::Ptr<_1c6283a3b_Token> _8113_token = (*(_6959_tokens))[(*(_6915_i))];;
			{
				auto &_match_expr{ (*(_8113_token))._field_Id };
				
				if (_match_expr == _6923_open) {
					_case_begin_1ad68ce80:;
					{
						(_7813_rangeN)++;
					}
				}
				else if (_match_expr == _6938_close) {
					_case_begin_1ad68d007:;
					{
						(_7813_rangeN)--;
					}
				}
				_match_end_1ad68ce19:;
			};
		}
	_iter_next_1ad68c15a:;
	}
	_iter_end_1ad68c15a:;;
	return (*(_6959_tokens)).slice(_799_start, ((*(_6915_i)) - 1LL));;
}



inline __jule_tuple_sx_1c6283a3b_Token__jule_tuple_sx_1c6283a3b_Token _1a9ebae87_rangeLast(jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _9919_tokens) {
	__jule_tuple_sx_1c6283a3b_Token__jule_tuple_sx_1c6283a3b_Token __jule_func_result;
	if (((*(_9919_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U64 _1039_first = (*((*(_9919_tokens))[((*(_9919_tokens)).len() - 1LL)]))._field_Id;;
	if ((((_1039_first != static_cast<jule::U64>(73LLU)) && (_1039_first != static_cast<jule::U64>(76LLU))) && (_1039_first != static_cast<jule::U64>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _10913_braceN = 0LL;;
	jule::I64 _11013_i = ((*(_9919_tokens)).len() - 1LL);;
	for (; (_11013_i >= 0LL); (_11013_i)--) {
		{
			jule::Ptr<_1c6283a3b_Token> _11213_token = (*(_9919_tokens))[_11013_i];;
			{
				auto &_match_expr{ (*(_11213_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1ad692182:;
					{
						(_10913_braceN)++;
						goto _iter_next_1ad6914e4;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1ad692209:;
					{
						(_10913_braceN)--;
					}
				}
				_match_end_1ad69211b:;
			};
			if ((_10913_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_9919_tokens)).slice(0LL, _11013_i);
				__jule_func_result.__jule_result_arg1 = (*(_9919_tokens)).slice(_11013_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1ad6914e4:;
	}
	_iter_end_1ad6914e4:;;
	__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1c6283a3b_Token__jule_tuple_s_221968cb9_Log _1a9ebb43d_parts(jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _13715_tokens, jule::U64 _13733_id, jule::Bool _13746_exprMust) {
	__jule_tuple_ssx_1c6283a3b_Token__jule_tuple_s_221968cb9_Log __jule_func_result;
	if (((*(_13715_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>> _14213_parts = nullptr;;
	jule::Slice<_221968cb9_Log> _14313_errors = nullptr;;
	jule::I64 _14513_rangeN = 0LL;;
	jule::I64 _14613_last = 0LL;;
	{
		auto expr = _13715_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad68ed61:;
		if (it != expr_end) {
			jule::I64 _1479_i = it - expr->begin();
			jule::Ptr<_1c6283a3b_Token> _14712_token = *it;
			{
				{
					auto &_match_expr{ (*(_14712_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ad696571:;
						{
							(_14513_rangeN)++;
							goto _iter_next_1ad68ed61;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ad6965e8:;
						{
							(_14513_rangeN)--;
						}
					}
					_match_end_1ad6964a5:;
				};
				if ((_14513_rangeN > 0LL)) {
					goto _iter_next_1ad68ed61;
				};
				if (((*(_14712_token))._field_Id == _13733_id)) {
					if ((_13746_exprMust && ((_1479_i - _14613_last) <= 0LL))) {
						_221968cb9_Log _16621_err = _1a9eba6c3_makeErr((*(_14712_token))._field_Row, (*(_14712_token))._field_Column, &((*(_14712_token))._field_File), jule::Str("expression missing", 18), jule::Slice<jule::Any>());;
						{ jule::Slice<_221968cb9_Log> &__jule_push_dest = _14313_errors; __jule_push_dest.push(_16621_err); };
					};
					{ jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>> &__jule_push_dest = _14213_parts; __jule_push_dest.push((*(_13715_tokens)).slice(_14613_last, _1479_i)); };
					_14613_last=static_cast<jule::I64>((_1479_i + 1LL));
				};
			}
			_iter_next_1ad68ed61:;
			++it;
			_1479_i++;
			goto _iter_begin_1ad68ed61;
		}
		_iter_end_1ad68ed61:;
	};
	if ((_14613_last < (*(_13715_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>> &__jule_push_dest = _14213_parts; __jule_push_dest.push((*(_13715_tokens)).slice(_14613_last)); };
	} else if ((!(_13746_exprMust))) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1c6283a3b_Token>>> &__jule_push_dest = _14213_parts; __jule_push_dest.push(jule::Slice<jule::Ptr<_1c6283a3b_Token>>()); };
	};
	__jule_func_result.__jule_result_arg0 = _14213_parts;
	__jule_func_result.__jule_result_arg1 = _14313_errors;
	return __jule_func_result;;
}



inline jule::U64 _1a9ebb707_getCloseOfBrace(jule::U64 _18320_left) {
	{
		auto &_match_expr{ _18320_left };
		
		if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1ad6998b5:;
			{
				return static_cast<jule::U64>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1ad69992b:;
			{
				return static_cast<jule::U64>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1ad699992:;
			{
				return static_cast<jule::U64>(76LLU);;
			}
		}
		else {
			_case_begin_1ad69984e:;
			{
				return _18320_left;;
			}
		}
		_match_end_1ad69577e:;
	};
}



inline _221968cb9_Log _1a9ebbb36_compilerErr(jule::Ptr<_1c6283a3b_Token>* _19617_token, jule::Str* _19633_fmt, jule::Slice<jule::Any> _19646_args) {
	return _221968cb9_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_19617_token))))._field_Row, ._field_Column=(*((*(_19617_token))))._field_Column, ._field_Path=(*((*((*(_19617_token))))._field_File))._field_Path, ._field_Text=_22196922b_Logf((*(_19633_fmt)), _19646_args), ._field_Line=_1c628a2d4_GetRow((*((*(_19617_token))))._field_File.ptr(), (*((*(_19617_token))))._field_Row), };;
}



inline void _1a9ebbecc_pushSuggestion(_221968cb9_Log* _20730_log, jule::Str _20741_fmt, jule::Slice<jule::Any> _20754_args) {
	(*(_20730_log))._field_Suggestion=_22196922b_Logf(_20741_fmt, _20754_args);
}



inline jule::Str _1a9ebc373_tokstoa(jule::Slice<jule::Ptr<_1c6283a3b_Token>>* _21113_tokens) {
	jule::I64 _21213_n = 0LL;;
	{
		auto expr = _21113_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad69e26b:;
		if (it != expr_end) {
			jule::Ptr<_1c6283a3b_Token> *_21312_token = it;
			{
				_21213_n+=(*((*(_21312_token))))._field_Kind.len();
			}
			_iter_next_1ad69e26b:;
			++it;
			goto _iter_begin_1ad69e26b;
		}
		_iter_end_1ad69e26b:;
	};
	_2206c697e_StrBuilder _21613_s = static__2206c6c9d_New(_21213_n);;
	{
		auto expr = _21113_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad69e403:;
		if (it != expr_end) {
			jule::Ptr<_1c6283a3b_Token> *_21712_token = it;
			{
				_2206d0625_WriteStr(&_21613_s, (*((*(_21712_token))))._field_Kind);
			}
			_iter_next_1ad69e403:;
			++it;
			goto _iter_begin_1ad69e403;
		}
		_iter_end_1ad69e403:;
	};
	return _2206d0e1c_Str(&_21613_s);;
}



inline jule::Ptr<_1c6299249_TypeDecl> _1a9ecdd9b_buildVoidType(void) {
	return jule::new_ptr<_1c6299249_TypeDecl>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1c4712c03_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_1ad85ac1e:;
			{
				__jule_func_result.__jule_result_arg0=_22196be87_IsWindows(_221a30347_Os);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_1ad85ac85:;
			{
				__jule_func_result.__jule_result_arg0=_22196c262_IsDarwin(_221a30347_Os);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_1ad85a966:;
			{
				__jule_func_result.__jule_result_arg0=_22196c52b_IsLinux(_221a30347_Os);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_1ad85a9cc:;
			{
				__jule_func_result.__jule_result_arg0=_22196d1b9_IsUnix(_221a30347_Os);
			}
		}
		else {
			_case_begin_1ad85a416:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1ad85a856:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1c472c426_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_1ad85ce96:;
			{
				__jule_func_result.__jule_result_arg0=_22196c86c_IsI386(_221a30611_Arch);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_1ad85cb77:;
			{
				__jule_func_result.__jule_result_arg0=_22196cb36_IsAmd64(_221a30611_Arch);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_1ad85cbdd:;
			{
				__jule_func_result.__jule_result_arg0=_22196ce00_IsArm64(_221a30611_Arch);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_1ad85cc54:;
			{
				__jule_func_result.__jule_result_arg0=_22196d829_Is64Bit(_221a30611_Arch);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_1ad85ccba:;
			{
				__jule_func_result.__jule_result_arg0=_22196d560_Is32Bit(_221a30611_Arch);
			}
		}
		else {
			_case_begin_1ad85c627:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1ad85ca67:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c472c6bd_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_2218c9543_Base(_5029_p);
	jule::I64 _529_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_529_n - _2218c8eb0_Ext(_5029_p).len()));;
	jule::Str _5813_a1 = jule::Str();;
	jule::Str _6113_a2 = jule::Str();;
	jule::I64 _6413_i = _2218c1529_FindLastByte(_5029_p, '_');;
	if ((_6413_i == -1LL)) {
		jule::Bool _6718_ok = false;;
		jule::Bool _6726_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c4712c03_checkOs(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6726_exist) {
			return _6718_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c472c426_checkArch(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6726_exist)) || _6718_ok);;
	};
	if (((_6413_i + 1LL) >= _529_n)) {
		return true;;
	};
	_5813_a1=_5029_p.slice((_6413_i + 1LL));
	(_5029_p).mut_slice(0LL, _6413_i);;
	_6413_i=static_cast<jule::I64>(_2218c1529_FindLastByte(_5029_p, '_'));
	if ((_6413_i != -1LL)) {
		_6113_a2=_5029_p.slice((_6413_i + 1LL));
	};
	if ((_6113_a2).empty()) {
		jule::Bool _8818_ok = false;;
		jule::Bool _8826_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c4712c03_checkOs(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8826_exist) {
			return _8818_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c472c426_checkArch(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8826_exist)) || _8818_ok);;
	};
	jule::Bool _9614_ok = false;;
	jule::Bool _9622_exist = false;;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c472c426_checkArch(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9622_exist) {
		if ((!(_9614_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c4712c03_checkOs(_6113_a2);
			_9614_ok = __jule_assign_result.__jule_result_arg0;
			_9622_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9622_exist)) || _9614_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c4712c03_checkOs(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9622_exist)) || _9614_ok);;
}



inline void _1c472d955_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_221a30347_Os); };
	if (_22196d1b9_IsUnix(_221a30347_Os)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str("unix", 4)); };
	};
}



inline void _1c472dbca_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_221a30611_Arch); };
	if (_22196d829_Is64Bit(_221a30611_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str("x64", 3)); };
	};
	if (_22196d560_Is32Bit(_221a30611_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str("x32", 3)); };
	};
}



inline void _1c472deb6_initVars(jule::Slice<jule::Str>* _5518_vars, _1c472d636_CompileInfo* _5532_info) {
	_1c472d955_setOsVars(_5518_vars);
	_1c472dbca_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1ad8680c2:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("clang", 5)); };
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1ad868138:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("gcc", 3)); };
			}
		}
		_match_end_1ad86806c:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1ad86929e:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("cpp14", 5)); };
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1ad869315:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("cpp17", 5)); };
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1ad86937b:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("cpp20", 5)); };
			}
		}
		_match_end_1ad8694be:;
	};
}



inline jule::Slice<jule::U8> _1a9ed2ec1_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__220512a95_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_221a2e258_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _221968cb9_Log _1a9ed329b_flatCompilerErr(jule::Str _4120_text) {
	return _221968cb9_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Text=_4120_text, };;
}



inline void _1a9ed7ab9_pushPasses(jule::Ptr<_1c6349915_Package>* _11120_p, jule::Slice<jule::Str>* _11144_passes) {
	{
		auto expr = &((*((*(_11120_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad89eb31:;
		if (it != expr_end) {
			jule::Ptr<_1c63d8135_SymbolTable> _11217_f = *it;
			{
				_julec_label_1ad8a04e4:;
				{
					auto expr = &((*(_11217_f))._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad8a06ae:;
					if (it != expr_end) {
						_1c62d72ba_Pass _11416_pass = *it;
						{
							if ((_11416_pass._field_Text).empty()) {
								goto _iter_next_1ad8a06ae;
							};
							{
								auto expr = _11144_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ad8a11c6:;
								if (it != expr_end) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_1ad8a06ae;
										};
									}
									_iter_next_1ad8a11c6:;
									++it;
									goto _iter_begin_1ad8a11c6;
								}
								_iter_end_1ad8a11c6:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_11144_passes)); __jule_push_dest.push(_11416_pass._field_Text); };
						}
						_iter_next_1ad8a06ae:;
						++it;
						goto _iter_begin_1ad8a06ae;
					}
					_iter_end_1ad8a06ae:;
				};
			}
			_iter_next_1ad89eb31:;
			++it;
			goto _iter_begin_1ad89eb31;
		}
		_iter_end_1ad89eb31:;
	};
}



inline jule::Slice<jule::Str> _1a9ed7e82_getAllUniquePasses(jule::Ptr<_1c6349915_Package>* _12828_pkg, jule::Slice<jule::Ptr<_1c63469de_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_1a9ed7ab9_pushPasses(_12828_pkg, &(_12913_passes));
	{
		auto expr = &(_12853_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad8a2c44:;
		if (it != expr_end) {
			jule::Ptr<_1c63469de_ImportInfo> _13217_u = *it;
			{
				if ((!((*(_13217_u))._field_Binded))) {
					_1a9ed7ab9_pushPasses(&((*(_13217_u))._field_Package), &(_12913_passes));
				};
			}
			_iter_next_1ad8a2c44:;
			++it;
			goto _iter_begin_1ad8a2c44;
		}
		_iter_end_1ad8a2c44:;
	};
	return _12913_passes;;
}



inline _1c472d636_CompileInfo _1a9ed8191_buildCompileInfo(void) {
	_1c472d636_CompileInfo _14213_info = _1c472d636_CompileInfo{._field_Prod=_21e49099c_Production, ._field_Test=_21e490040_Test, };;
	{
		auto &_match_expr{ _21e48e3a2_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1ad8a4196:;
			{
				_14213_info._field_Compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1ad8a422e:;
			{
				_14213_info._field_Compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_1ad8a4086:;
	};
	{
		auto &_match_expr{ _21e48e7e2_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1ad8a4d12:;
			{
				_14213_info._field_CppStd=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1ad8a288c:;
			{
				_14213_info._field_CppStd=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1ad8a45d6:;
			{
				_14213_info._field_CppStd=jule::Str("cpp20", 5);
			}
		}
		_match_end_1ad8a5054:;
	};
	return _14213_info;;
}



inline void _1aa133462_EliminateDefines(jule::Ptr<_1a9ed6249_IR>* _29026_ir) {
	jule::Ptr<_1aa1279a6_ObjectDeadCode> _29113_ocd = static__1aa13175c_new(_29026_ir);;
	_1aa133132_elimanate(_29113_ocd);
}



inline jule::Ptr<_1c6298666_Directive> _1aa13382a_findDirective(jule::Slice<jule::Ptr<_1c6298666_Directive>>* _29623_directives, jule::Str _29654_tag) {
	{
		auto expr = _29623_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad8de19d:;
		if (it != expr_end) {
			jule::Ptr<_1c6298666_Directive> _29717_dr = *it;
			{
				if (((*((*(_29717_dr))._field_Tag))._field_Kind == _29654_tag)) {
					return _29717_dr;;
				};
			}
			_iter_next_1ad8de19d:;
			++it;
			goto _iter_begin_1ad8de19d;
		}
		_iter_end_1ad8de19d:;
	};
	return nullptr;;
}



inline jule::Bool _1aa133b9e_hasDirective(jule::Slice<jule::Ptr<_1c6298666_Directive>>* _30618_directives, jule::Str _30649_tag) {
	return (_1aa13382a_findDirective(&((*(_30618_directives))), _30649_tag) != nullptr);;
}



inline jule::Bool _1aa134067_isTraitMethod(jule::Ptr<_1c62bcab9_StructIns>* _31123_owner, jule::Ptr<_1c62d2b01_FnIns>* _31143_f) {
	{
		auto expr = &((*((*((*(_31123_owner))))._field_Decl))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad8e03e1:;
		if (it != expr_end) {
			jule::Ptr<_1c62e2e96_Trait> _31217_t = *it;
			{
				if ((_1c62e3b45_FindMethod(_31217_t.ptr(), (*((*((*(_31143_f))))._field_Decl))._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_1ad8e03e1:;
			++it;
			goto _iter_begin_1ad8e03e1;
		}
		_iter_end_1ad8e03e1:;
	};
	return false;;
}



inline void _1aa138115_eliminateDeadCodeOfScope(jule::Ptr<_1c6320754_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_1c63230e7_Label>> _2429_labels = jule::Slice<jule::Ptr<_1c63230e7_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_1c63234c1_GotoSt>> _2439_gotos = jule::Slice<jule::Ptr<_1c63234c1_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_1aa134e14_scopeDeadCode> _24413_sdc = jule::new_ptr<_1aa134e14_scopeDeadCode>(_1aa134e14_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&((*(_24133_s))._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1c63230e7_Label>>>)((&(_2429_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1c63234c1_GotoSt>>>)((&(_2439_gotos)))), });;
	{
		_1aa137cd5_optimizeStmts(_24413_sdc);
	};
}



inline void _1aa13838a_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1c62cebec_Fn>>* _25433_funcs) {
	{
		auto expr = _25433_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad935e3c:;
		if (it != expr_end) {
			jule::Ptr<_1c62cebec_Fn> _25517_func = *it;
			{
				{
					auto expr = &((*(_25517_func))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad938c42:;
					if (it != expr_end) {
						jule::Ptr<_1c62d2b01_FnIns> _25621_ins = *it;
						{
							_1aa138115_eliminateDeadCodeOfScope((*(_25621_ins))._field_Scope);
						}
						_iter_next_1ad938c42:;
						++it;
						goto _iter_begin_1ad938c42;
					}
					_iter_end_1ad938c42:;
				};
			}
			_iter_next_1ad935e3c:;
			++it;
			goto _iter_begin_1ad935e3c;
		}
		_iter_end_1ad935e3c:;
	};
}



inline void _1aa1385bb_eliminateFunctionsScopePackage(jule::Ptr<_1c6349915_Package>* _26240_pkg) {
	{
		auto expr = &((*((*(_26240_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad938a66:;
		if (it != expr_end) {
			jule::Ptr<_1c63d8135_SymbolTable> _26317_f = *it;
			{
				_1aa13838a_eliminateScopeFunctions(&((*(_26317_f))._field_Funcs));
			}
			_iter_next_1ad938a66:;
			++it;
			goto _iter_begin_1ad938a66;
		}
		_iter_end_1ad938a66:;
	};
}



inline void _1aa138874_eliminateScopePackage(jule::Ptr<_1c6349915_Package>* _26831_pkg) {
	_1aa1385bb_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _1aa138aa5_EliminateScopes(jule::Ptr<_1a9ed6249_IR>* _27325_ir) {
	jule::I64 _27413_i = ((*((*(_27325_ir))))._field_Used.len() - 1LL);;
	for (; (_27413_i >= 0LL); (_27413_i)--) {
		{
			jule::Ptr<_1c63469de_ImportInfo> _27617_u = (*((*(_27325_ir))))._field_Used[_27413_i];;
			if ((!((*(_27617_u))._field_Binded))) {
				_1aa138874_eliminateScopePackage(&((*(_27617_u))._field_Package));
			};
		}
	_iter_next_1ad93a89d:;
	}
	_iter_end_1ad93a89d:;;
	_1aa138874_eliminateScopePackage(&((*((*(_27325_ir))))._field_Main));
}



inline jule::Uintptr _1c651896e_typeData(jule::Any* _1714_m) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(((*(_1714_m))).type)));;
}



inline jule::Bool _1c6518d04_equalConst(jule::Ptr<_1dc260590_Const> _2115_l, jule::Ptr<_1dc260590_Const> _2126_r) {
	{
		
		if (_1dc264561_IsI64(_2115_l.ptr())) {
			_case_begin_1ad9be943:;
			{
				return (_1dc264561_IsI64(_2126_r.ptr()) && (_1dc261e65_ReadI64(_2115_l.ptr()) == _1dc261e65_ReadI64(_2126_r.ptr())));;
			}
		}
		else if (_1dc2647e7_IsU64(_2115_l.ptr())) {
			_case_begin_1ad9be9ba:;
			{
				return (_1dc2647e7_IsU64(_2126_r.ptr()) && (_1dc2621eb_ReadU64(_2115_l.ptr()) == _1dc2621eb_ReadU64(_2126_r.ptr())));;
			}
		}
		else if (_1dc26509a_IsF64(_2115_l.ptr())) {
			_case_begin_1ad9bec73:;
			{
				return (_1dc26509a_IsF64(_2126_r.ptr()) && (_1dc26299e_ReadF64(_2115_l.ptr()) == _1dc26299e_ReadF64(_2126_r.ptr())));;
			}
		}
		else if (_1dc264d14_IsStr(_2115_l.ptr())) {
			_case_begin_1ad9becd9:;
			{
				return (_1dc264d14_IsStr(_2126_r.ptr()) && (_1dc262718_ReadStr(_2115_l.ptr()) == _1dc262718_ReadStr(_2126_r.ptr())));;
			}
		}
		else if (_1dc264a7d_IsBool(_2115_l.ptr())) {
			_case_begin_1ad9bed50:;
			{
				return (_1dc264a7d_IsBool(_2126_r.ptr()) && (_1dc262482_ReadBool(_2115_l.ptr()) == _1dc262482_ReadBool(_2126_r.ptr())));;
			}
		}
		else if (_1dc265331_IsNil(_2115_l.ptr())) {
			_case_begin_1ad9bedb6:;
			{
				return _1dc265331_IsNil(_2126_r.ptr());;
			}
		}
		else {
			_case_begin_1ad9be844:;
			{
				return false;;
			}
		}
		_match_end_1ad9be79a:;
	};
}



inline jule::Bool _1c6519178_equalCasting(jule::Ptr<_1c62c35d6_CastingExprModel> _4017_l, jule::Ptr<_1c62c35d6_CastingExprModel> _4039_r) {
	if ((!(_1c641dc2b_Equal((*(_4017_l))._field_Kind, (*(_4039_r))._field_Kind)))) {
		return false;;
	};
	return _1c651a0ad_equalModels((*(_4017_l))._field_Expr, (*(_4039_r))._field_Expr);;
}



inline jule::Bool _1c6519541_equalUnary(jule::Ptr<_1c62c2382_UnaryExprModel> _4715_l, jule::Ptr<_1c62c2382_UnaryExprModel> _4735_r) {
	if ((((*((*(_4715_l))._field_Op))._field_Id != (*((*(_4735_r))._field_Op))._field_Id) || ((*((*(_4715_l))._field_Op))._field_Kind != (*((*(_4735_r))._field_Op))._field_Kind))) {
		return false;;
	};
	return _1c651a0ad_equalModels((*((*(_4715_l))._field_Expr))._field_Model, (*((*(_4735_r))._field_Expr))._field_Model);;
}



inline jule::Bool _1c65198b5_equalIndexing(jule::Ptr<_1c62c4818_IndexingExprModel> _5418_l, jule::Ptr<_1c62c4818_IndexingExprModel> _5441_r) {
	return (_1c651a0ad_equalModels((*((*(_5418_l))._field_Expr))._field_Model, (*((*(_5441_r))._field_Expr))._field_Model) && _1c651a0ad_equalModels((*((*(_5418_l))._field_Index))._field_Model, (*((*(_5441_r))._field_Index))._field_Model));;
}



inline jule::Bool _1c6519c39_equalBinary(jule::Ptr<_1c62c1ea8_BinopExprModel> _5916_l, jule::Ptr<_1c62c1ea8_BinopExprModel> _5936_r) {
	if ((((*((*(_5916_l))._field_Op))._field_Id != (*((*(_5936_r))._field_Op))._field_Id) || ((*((*(_5916_l))._field_Op))._field_Kind != (*((*(_5936_r))._field_Op))._field_Kind))) {
		return false;;
	};
	return (_1c651a0ad_equalModels((*((*(_5916_l))._field_Left))._field_Model, (*((*(_5936_r))._field_Left))._field_Model) && _1c651a0ad_equalModels((*((*(_5916_l))._field_Right))._field_Model, (*((*(_5936_r))._field_Right))._field_Model));;
}



inline jule::Bool _1c651a0ad_equalModels(jule::Any _7016_l, jule::Any _7030_r) {
	if ((_1c651896e_typeData(&(_7016_l)) != _1c651896e_typeData(&(_7030_r)))) {
		return false;;
	};
	{
		auto &_match_expr{ _7016_l };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ad9cd91e:;
			{
				return (_7016_l.cast_ptr<_1c6389da6_Var>(&__jule_any_type8) == _7030_r.cast_ptr<_1c6389da6_Var>(&__jule_any_type8));;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1ad9cd996:;
			{
				jule::Ptr<_1c62c6a29_StructSubIdentExprModel> _7813_li = _7016_l.cast_ptr<_1c62c6a29_StructSubIdentExprModel>(&__jule_any_type97);;
				jule::Ptr<_1c62c6a29_StructSubIdentExprModel> _7913_ri = _7030_r.cast_ptr<_1c62c6a29_StructSubIdentExprModel>(&__jule_any_type97);;
				return (((*(_7813_li))._field_Field == (*(_7913_ri))._field_Field) && _1c651a0ad_equalModels((*((*(_7813_li))._field_Expr))._field_Model, (*((*(_7913_ri))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ad9cda1d:;
			{
				return _1c6518d04_equalConst(_7016_l.cast_ptr<_1dc260590_Const>(&__jule_any_type19), _7030_r.cast_ptr<_1dc260590_Const>(&__jule_any_type19));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1ad9cdc2c:;
			{
				return _1c6519178_equalCasting(_7016_l.cast_ptr<_1c62c35d6_CastingExprModel>(&__jule_any_type92), _7030_r.cast_ptr<_1c62c35d6_CastingExprModel>(&__jule_any_type92));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ad9cdc93:;
			{
				return _1c6519541_equalUnary(_7016_l.cast_ptr<_1c62c2382_UnaryExprModel>(&__jule_any_type110), _7030_r.cast_ptr<_1c62c2382_UnaryExprModel>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1ad9cdd09:;
			{
				return _1c65198b5_equalIndexing(_7016_l.cast_ptr<_1c62c4818_IndexingExprModel>(&__jule_any_type45), _7030_r.cast_ptr<_1c62c4818_IndexingExprModel>(&__jule_any_type45));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1ad9cdd70:;
			{
				return _1c6519c39_equalBinary(_7016_l.cast_ptr<_1c62c1ea8_BinopExprModel>(&__jule_any_type111), _7030_r.cast_ptr<_1c62c1ea8_BinopExprModel>(&__jule_any_type111));;
			}
		}
		else {
			_case_begin_1ad9cd8a8:;
			{
				return false;;
			}
		}
		_match_end_1ad9cd7a9:;
	};
}



inline jule::Bool _1c6523649_isStdPackage(jule::Str* _45118_f, jule::Str _45126_p) {
	return _2218bcd3e_HasPrefix((*(_45118_f)), _2218c8be6_Join(jule::Slice<jule::Str>::make({_221a2e764_PathStdlib,_45126_p})));;
}



inline jule::Bool _1c6523957_isConstantValidConditionalCase(jule::Ptr<_1c6320b72_If>* _45536_i) {
	{
		auto &_match_expr{ (*((*(_45536_i))))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ad9d4309:;
			{
				jule::Ptr<_1dc260590_Const> _45813_c = (*((*(_45536_i))))._field_Expr.cast_ptr<_1dc260590_Const>(&__jule_any_type19);;
				return (_1dc264a7d_IsBool(_45813_c.ptr()) && _1dc262482_ReadBool(_45813_c.ptr()));;
			}
		}
		_match_end_1ad9d42a4:;
	};
	return false;;
}



inline jule::Bool _1c6523c21_isUnreachableExpr(jule::Any* _46423_expr) {
	{
		auto &_match_expr{ (*(_46423_expr)) };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ad9d466c:;
			{
				jule::Ptr<_1dc260590_Const> _46713_c = (*(_46423_expr)).cast_ptr<_1dc260590_Const>(&__jule_any_type19);;
				return (_1dc264a7d_IsBool(_46713_c.ptr()) && (!(_1dc262482_ReadBool(_46713_c.ptr()))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1ad9d46d3:;
			{
				jule::Ptr<_1c62c1ea8_BinopExprModel> _47013_m = (*(_46423_expr)).cast_ptr<_1c62c1ea8_BinopExprModel>(&__jule_any_type111);;
				if (((*((*(_47013_m))._field_Op))._field_Id == static_cast<jule::U64>(54LLU))) {
					return (_1c6523c21_isUnreachableExpr(&((*((*(_47013_m))._field_Left))._field_Model)) || _1c6523c21_isUnreachableExpr(&((*((*(_47013_m))._field_Right))._field_Model)));;
				};
			}
		}
		_match_end_1ad9d4617:;
	};
	return false;;
}



inline jule::Bool _1c6524062_isConstantValidMatchCase(jule::Ptr<_1c63254c3_Case>* _47930_case) {
	{
		auto expr = &((*((*(_47930_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad9d73d9:;
		if (it != expr_end) {
			jule::Ptr<_1c63dd35a_Data> *_48012_expr = it;
			{
				if (((_1c63ddc2e_IsConst((*(_48012_expr)).ptr()) && _1dc264a7d_IsBool((*((*(_48012_expr))))._field_Constant.ptr())) && _1dc262482_ReadBool((*((*(_48012_expr))))._field_Constant.ptr()))) {
					return true;;
				};
			}
			_iter_next_1ad9d73d9:;
			++it;
			goto _iter_begin_1ad9d73d9;
		}
		_iter_end_1ad9d73d9:;
	};
	return false;;
}



inline jule::Bool _1c652432b_isUnreachableConditionalCase(jule::Ptr<_1c6320b72_If>* _48834_i) {
	return _1c6523c21_isUnreachableExpr(&((*((*(_48834_i))))._field_Expr));;
}



inline jule::Bool _1c65245e5_isUnreachableMatchCase(jule::Ptr<_1c63254c3_Case>* _49228_case) {
	{
		auto expr = &((*((*(_49228_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad9e025a:;
		if (it != expr_end) {
			jule::Ptr<_1c63dd35a_Data> *_49312_expr = it;
			{
				if ((!(_1c6523c21_isUnreachableExpr(&((*((*(_49312_expr))))._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1ad9e025a:;
			++it;
			goto _iter_begin_1ad9e025a;
		}
		_iter_end_1ad9e025a:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1c652c752_checkForBitShiftOpt(jule::Ptr<_1c62c19ad_OperandExprModel>* _47325_l, jule::Ptr<_1c62c19ad_OperandExprModel>* _47348_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_1dc25e88b_IsInt(_1c641d8da_Str((*((*(_47325_l))))._field_Kind.ptr())))) || (!(_1dc25e88b_IsInt(_1c641d8da_Str((*((*(_47348_r))))._field_Kind.ptr())))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_47348_r))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ada3a6c3:;
			{
				goto _match_end_1ada3b73a;
			}
		}
		else {
			_case_begin_1ada3b790:;
			{
				__jule_func_result.__jule_result_arg0 = false;
				__jule_func_result.__jule_result_arg1 = 0LLU;
				return __jule_func_result;;
			}
		}
		_match_end_1ada3b73a:;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>(_1dc262ebb_AsU64((*((*(_47348_r))))._field_Model.cast_ptr<_1dc260590_Const>(&__jule_any_type19).ptr()));
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _4879_j = _1dc20dc8b_Log2(static_cast<jule::F64>(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1)));;
	jule::U64 _4889_z = static_cast<jule::U64>(_4879_j);;
	if ((static_cast<jule::F64>(_4889_z) != _4879_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _4889_z;
	return __jule_func_result;;
}



inline jule::Bool _1c652cb1a_areSameLvalueExprModel(jule::Any* _49628_l, jule::Any* _49643_r) {
	{
		auto &_match_expr{ (*(_49628_l)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ada3ea3a:;
			{
				return ((*(_49643_r)) == (*(_49628_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1ada3eaa1:;
			{
				{
					auto &_match_expr{ (*(_49643_r)) };
					
					if (_match_expr.type == &__jule_any_type97) {
						_case_begin_1ada40442:;
						{
							goto _match_end_1ada406d9;
						}
					}
					else {
						_case_begin_1ada4073e:;
						{
							return false;;
						}
					}
					_match_end_1ada406d9:;
				};
				jule::Ptr<_1c62c6a29_StructSubIdentExprModel> _50913_lsi = (*(_49628_l)).cast_ptr<_1c62c6a29_StructSubIdentExprModel>(&__jule_any_type97);;
				jule::Ptr<_1c62c6a29_StructSubIdentExprModel> _51013_rsi = (*(_49643_r)).cast_ptr<_1c62c6a29_StructSubIdentExprModel>(&__jule_any_type97);;
				if (((*(_50913_lsi))._field_Field != (*(_51013_rsi))._field_Field)) {
					return false;;
				};
				return _1c652cb1a_areSameLvalueExprModel(&((*((*(_50913_lsi))._field_Expr))._field_Model), &((*((*(_51013_rsi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ada3eb17:;
			{
				{
					auto &_match_expr{ (*(_49643_r)) };
					
					if (_match_expr.type == &__jule_any_type110) {
						_case_begin_1ada42b2b:;
						{
							jule::Ptr<_1c62c2382_UnaryExprModel> _52217_ul = (*(_49628_l)).cast_ptr<_1c62c2382_UnaryExprModel>(&__jule_any_type110);;
							jule::Ptr<_1c62c2382_UnaryExprModel> _52317_ur = (*(_49643_r)).cast_ptr<_1c62c2382_UnaryExprModel>(&__jule_any_type110);;
							if ((((*((*(_52217_ul))._field_Op))._field_Id != (*((*(_52317_ur))._field_Op))._field_Id) || ((*((*(_52217_ul))._field_Op))._field_Kind != (*((*(_52317_ur))._field_Op))._field_Kind))) {
								return false;;
							};
							return _1c652cb1a_areSameLvalueExprModel(&((*((*(_52217_ul))._field_Expr))._field_Model), &((*((*(_52317_ur))._field_Expr))._field_Model));;
						}
					}
					_match_end_1ada42ac6:;
				};
			}
		}
		_match_end_1ada3e3db:;
	};
	return false;;
}



inline void _1c652d357_doInternalNosafeStobs(_1c65254c5_exprOptimizer* _727_op, _1a9eda5a0_stdCacheData* _747_data, jule::Ptr<_1c62c3e88_FnCallExprModel>* _772_m) {
	jule::Any _813_model = jule::Any(jule::new_ptr<_1c651d149_InlineStdInternalNosafeStobs>(_1c651d149_InlineStdInternalNosafeStobs{._field_Str=(*((*(_772_m))))._field_Args[0LL]}), &__jule_any_type129);;
	{
		(*((*(_727_op))._field_model))=(*(((jule::Any*)((&(_813_model))))));
	};
}



inline void _1a9edac43_buildCache(jule::Ptr<_1a9ed6249_IR>* _2720_ir) {
	_1a9edae85_buildStdInternalNosafeCache(_2720_ir);
}



inline void _1a9edae85_buildStdInternalNosafeCache(jule::Ptr<_1a9ed6249_IR>* _3137_ir) {
	jule::Ptr<_1c6349915_Package> _3213_p = _1a9edba68_getPackage(_3137_ir, &(_1a9eda160_stdPackageInternalNosafe));;
	if ((_3213_p == nullptr)) {
		return;;
	};
	_1a9edb32b_pushCache(&(_3213_p), jule::Str("Stobs", 5), jule::Fn<void(_1c65254c5_exprOptimizer*,_1a9eda5a0_stdCacheData*,jule::Ptr<_1c62c3e88_FnCallExprModel>*)>(_1c652d357_doInternalNosafeStobs));
}



inline void _1a9edb32b_pushCache(jule::Ptr<_1c6349915_Package>* _4119_p, jule::Str _4132_ident, jule::Fn<void(_1c65254c5_exprOptimizer*,_1a9eda5a0_stdCacheData*,jule::Ptr<_1c62c3e88_FnCallExprModel>*)> _4144_do) {
	jule::Ptr<_1c62d2b01_FnIns> _4213_f = _1a9edb6e4_getFunc(_4119_p, &(_4132_ident));;
	_1a9eda9ce_stdCache[static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_4213_f))]=_1a9eda5a0_stdCacheData{._field_f=_4213_f, ._field_do=_4144_do};
}



inline jule::Ptr<_1c62d2b01_FnIns> _1a9edb6e4_getFunc(jule::Ptr<_1c6349915_Package>* _5017_p, jule::Str* _5031_ident) {
	;
	jule::Ptr<_1c62cebec_Fn> _5213_f = _1c634ae99_FindFn((*(_5017_p)).ptr(), (*(_5031_ident)), false);;
	if ((_5213_f == nullptr)) {
		return nullptr;;
	};
	return (*(_5213_f))._field_Instances[0LL];;
}



inline jule::Ptr<_1c6349915_Package> _1a9edba68_getPackage(jule::Ptr<_1a9ed6249_IR>* _5920_ir, jule::Str* _5930_path) {
	{
		auto expr = &((*((*(_5920_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada9d46c:;
		if (it != expr_end) {
			jule::Ptr<_1c63469de_ImportInfo> _6017_u = *it;
			{
				if (((*(_6017_u))._field_Std && ((*(_6017_u))._field_LinkPath == (*(_5930_path))))) {
					return (*(_6017_u))._field_Package;;
				};
			}
			_iter_next_1ada9d46c:;
			++it;
			goto _iter_begin_1ada9d46c;
		}
		_iter_end_1ada9d46c:;
	};
	return nullptr;;
}



inline void _1a9ede75d_PushOptLevel(jule::I64 _3417_level) {
	jule::Bool _359_l1 = (_3417_level >= static_cast<jule::I64>(1LL));;
	jule::Bool _369_l2 = (_3417_level >= static_cast<jule::I64>(2LL));;
	_1a9edc34e_Copy=_359_l1;
	_1a9edc65c_Deadcode=_359_l1;
	_1a9edc926_Append=_359_l1;
	_1a9edcc34_Math=_359_l1;
	_1a9edceed_Access=_359_l1;
	_1a9edd2b7_Inline=_359_l1;
	_1a9edd581_Ptr=_359_l1;
	_1a9edd95a_Cond=_359_l1;
	_1a9eddc24_Str=_359_l1;
	_1a9eddedd_Slice=_359_l1;
	_1a9ede2a7_Assign=_359_l1;
	_1a9ede571_StdInternalNosafe=_369_l2;
}



inline void _1c66398d6_detectEnabled(void) {
	_1c663730c_exprEnabled=((((_1a9edd581_Ptr || _1a9edcc34_Math) || _1a9edceed_Access) || _1a9edd95a_Cond) || _1a9ede571_StdInternalNosafe);
	_1c66375d7_scopeEnabled=(((((_1a9edd95a_Cond || _1a9edc926_Append) || _1a9edc34e_Copy) || _1a9eddc24_Str) || _1a9eddedd_Slice) || _1a9ede2a7_Assign);
	_1c66378a1_stdEnabled=_1a9ede571_StdInternalNosafe;
}



inline void _1c6663459_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_221a2e258_Exit(1LL);
}



inline jule::U64 _1aaa9c370_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));;
}



inline jule::Bool _1aa9cb601_isCopyOptimizable(jule::Ptr<_1c63dd35a_Data>* _82323_expr) {
	if ((!((*((*(_82323_expr))))._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_82323_expr))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1adb90680:;
			{
				return false;;
			}
		}
		_match_end_1adb9062a:;
	};
	return true;;
}



inline jule::Bool _1aa9cb9b9_isIterCopyOptimizable(jule::Ptr<_1c63dd35a_Data>* _83427_expr, jule::Ptr<_1c6389da6_Var>* _83441_v) {
	if (((!((*((*(_83427_expr))))._field_Lvalue)) && (!(_1c641eda3_Mutable((*((*(_83427_expr))))._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*((*(_83441_v))))._field_Mutable)) && (!((*((*(_83427_expr))))._field_Mutable)));;
}



inline jule::Str _1aa9dbe4c_decomposeCommonEsq(jule::U8 _148523_b) {
	{
		auto &_match_expr{ _148523_b };
		
		if (_match_expr == '\\') {
			_case_begin_1aa1cbe67:;
			{
				return jule::Str("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1aa1cc5c7:;
			{
				return jule::Str("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1aa1cc132:;
			{
				return jule::Str("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1aa1cc198:;
			{
				return jule::Str("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1aa1cc20e:;
			{
				return jule::Str("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1aa1cc275:;
			{
				return jule::Str("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1aa1cc792:;
			{
				return jule::Str("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1aa1cc808:;
			{
				return jule::Str("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1aa1cc86e:;
			{
				return jule::Str("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1aa1cc8d5:;
			{
				return jule::Str("\\v", 2);;
			}
		}
		else {
			_case_begin_1aa1cc0bb:;
			{
				return jule::Str();;
			}
		}
		_match_end_1aa1c2787:;
	};
}



inline jule::Str _1aa9dc25a_sbtoa(jule::U8 _151210_b) {
	if ((_151210_b == 0LLU)) {
		return jule::Str("\\x00", 4);;
	};
	if ((_151210_b < 128LLU)) {
		jule::Str _151713_seq = _1aa9dbe4c_decomposeCommonEsq(_151210_b);;
		if (!(_151713_seq).empty()) {
			return _151713_seq;;
		};
		if (((32LL <= _151210_b) && (_151210_b <= 126LLU))) {
			return jule::Str::from_byte(_151210_b);;
		};
	};
	jule::Str _15259_seq = _1dc24e8d1_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_151210_b)), 8LL);;
	if ((_15259_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _15259_seq);;
	};
	return (jule::Str("\\", 1) + _15259_seq);;
}



inline void _1aa9dc546_cstrBytes(_2206c697e_StrBuilder* _153219_s, jule::Str _153234_ctx) {
	{
		auto expr = &(_153234_ctx);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa1d1b2b:;
		if (it != expr_end) {
			jule::U8 *_153312_b = it;
			{
				_2206d0625_WriteStr(_153219_s, _1aa9dc25a_sbtoa((*(_153312_b))));
			}
			_iter_next_1aa1d1b2b:;
			++it;
			goto _iter_begin_1aa1d1b2b;
		}
		_iter_end_1aa1d1b2b:;
	};
}



inline void _1aa9dc876_cstrLit(_2206c697e_StrBuilder* _153817_s, jule::Str _153832_ctx) {
	_2206d08cd_WriteByte(_153817_s, '\"');
	_1aa9dc546_cstrBytes(_153817_s, _153832_ctx);
	_2206d08cd_WriteByte(_153817_s, '\"');
}



inline void _1aa9dcc1c_ftoa(_2206c697e_StrBuilder* _154414_s, jule::F64 _154429_f, jule::I64 _154437_bitsize) {
	if ((_154437_bitsize != 32LL)) {
		if ((_154429_f == static_cast<jule::F64>(static_cast<jule::I64>(_154429_f)))) {
			_1aa9dd008_itoa(_154414_s, static_cast<jule::I64>(static_cast<jule::I64>(_154429_f)));
			return;;
		};
		if ((_154429_f == static_cast<jule::F64>(static_cast<jule::U64>(_154429_f)))) {
			_1aa9dd2e4_utoa(_154414_s, static_cast<jule::U64>(static_cast<jule::U64>(_154429_f)));
			return;;
		};
	};
	jule::Str _15559_m = _1dc2382c1_FmtFloat(_154429_f, 'f', -1LL, _154437_bitsize);;
	_2206d0625_WriteStr(_154414_s, _15559_m);
	if ((!(_2218c3042_Contains(_15559_m, jule::Str(".", 1))))) {
		_2206d0625_WriteStr(_154414_s, jule::Str(".0", 2));
	};
}



inline void _1aa9dd008_itoa(_2206c697e_StrBuilder* _156214_s, jule::I64 _156229_x) {
	{
		
		if ((_156229_x == jule::MAX_I64)) {
			_case_begin_1aa1d68de:;
			{
				_2206d0625_WriteStr(_156214_s, jule::Str("jule::MAX_I64", 13));
				return;;
			}
		}
		else if ((_156229_x == jule::MIN_I64)) {
			_case_begin_1aa1d6966:;
			{
				_2206d0625_WriteStr(_156214_s, jule::Str("jule::MIN_I64", 13));
				return;;
			}
		}
		_match_end_1aa1d67ce:;
	};
	_2206d0625_WriteStr(_156214_s, _1dc24ec99_FmtInt(_156229_x, 10LL));
	if (_22196d829_Is64Bit(jule::Str("amd64", 5))) {
		_2206d08cd_WriteByte(_156214_s, 'L');
	};
	_2206d08cd_WriteByte(_156214_s, 'L');
}



inline void _1aa9dd2e4_utoa(_2206c697e_StrBuilder* _157914_s, jule::U64 _157929_x) {
	{
		
		if ((_157929_x == jule::MAX_U64)) {
			_case_begin_1aa1d8a67:;
			{
				_2206d0625_WriteStr(_157914_s, jule::Str("jule::MAX_U64", 13));
				return;;
			}
		}
		_match_end_1aa1d8968:;
	};
	_2206d0625_WriteStr(_157914_s, _1dc24e8d1_FmtUint(_157929_x, 10LL));
	if (_22196d829_Is64Bit(jule::Str("amd64", 5))) {
		_2206d08cd_WriteByte(_157914_s, 'L');
	};
	_2206d0625_WriteStr(_157914_s, jule::Str("LU", 2));
}



inline jule::Bool _1aa9dd6bd_isForwarded(jule::Ptr<_1c6320754_Scope>* _159317_s) {
	jule::Any _15949_last = (*((*(_159317_s))))._field_Stmts[((*((*(_159317_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _15949_last };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1aa1dad77:;
			{
				{
					auto &_match_expr{ (*(_15949_last.cast_ptr<_1c63dd35a_Data>(&__jule_any_type24)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1aa1dbbe1:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1aa1dbb7a:;
						{
							return false;;
						}
					}
					_match_end_1aa1dbb25:;
				};
			}
		}
		else {
			_case_begin_1aa1dae76:;
			{
				return true;;
			}
		}
		_match_end_1aa1da481:;
	};
}



inline jule::Bool _1aa9dd987_isExprComesFromBind(jule::Ptr<_1c63dd35a_Data>* _160825_d) {
	{
		auto &_match_expr{ (*((*(_160825_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aa1dc43e:;
			{
				return (*((*((*(_160825_d))))._field_Model.cast_ptr<_1c6389da6_Var>(&__jule_any_type8)))._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1aa1dc4a5:;
			{
				return (*((*((*((*((*(_160825_d))))._field_Model.cast_ptr<_1c62c6a29_StructSubIdentExprModel>(&__jule_any_type97)))._field_Owner))._field_Decl))._field_Binded;;
			}
		}
		else {
			_case_begin_1aa1dc3c8:;
			{
				return false;;
			}
		}
		_match_end_1aa1dc373:;
	};
}



inline jule::Bool _1aa9ddc51_isAny(jule::Ptr<_1c641d522_TypeKind>* _162015_t) {
	if ((_1c64216ac_TypeEnum((*(_162015_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1c64260eb_Prim> _16249_prim = _1c6420b73_Prim((*(_162015_t)).ptr());;
	return ((_16249_prim != nullptr) && _1c6429819_IsAny(_16249_prim.ptr()));;
}



inline void _1aaab6521_iterFiles(jule::Ptr<_1c6349915_Package>* _135119_pkg, jule::Fn<void(jule::Ptr<_1c63d8135_SymbolTable>*)> _135134_f) {
	{
		auto expr = &((*((*(_135119_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baae5d04:;
		if (it != expr_end) {
			jule::Ptr<_1c63d8135_SymbolTable> _135217_file = *it;
			{
				_135134_f(&(_135217_file));
			}
			_iter_next_1baae5d04:;
			++it;
			goto _iter_begin_1baae5d04;
		}
		_iter_end_1baae5d04:;
	};
}



inline jule::Str _1aaab682e_concatAllParts(jule::Slice<jule::Ptr<_1c6283a3b_Token>> _135819_parts) {
	jule::I64 _135913_n = 0LL;;
	{
		auto expr = &(_135819_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baae70ad:;
		if (it != expr_end) {
			jule::Ptr<_1c6283a3b_Token> *_136012_part = it;
			{
				_135913_n+=(*((*(_136012_part))))._field_Kind.len();
			}
			_iter_next_1baae70ad:;
			++it;
			goto _iter_begin_1baae70ad;
		}
		_iter_end_1baae70ad:;
	};
	if ((_135913_n == 0LL)) {
		return jule::Str();;
	};
	_2206c697e_StrBuilder _136613_s = static__2206c6c9d_New(_135913_n);;
	{
		auto expr = &(_135819_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baae69a3:;
		if (it != expr_end) {
			jule::Ptr<_1c6283a3b_Token> *_136712_p = it;
			{
				_2206d0625_WriteStr(&_136613_s, (*((*(_136712_p))))._field_Kind);
			}
			_iter_next_1baae69a3:;
			++it;
			goto _iter_begin_1baae69a3;
		}
		_iter_end_1baae69a3:;
	};
	return _2206d0e1c_Str(&_136613_s);;
}



inline jule::Bool _1aaab6ba3_containsTraitMethod(jule::Ptr<_1c62e2e96_Trait>* _137429_t, jule::Str* _137441_ident) {
	{
		auto expr = &((*((*(_137429_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baae9379:;
		if (it != expr_end) {
			jule::Ptr<_1c62cebec_Fn> _137512_m = *it;
			{
				if (((*(_137512_m))._field_Ident == (*(_137441_ident)))) {
					return true;;
				};
			}
			_iter_next_1baae9379:;
			++it;
			goto _iter_begin_1baae9379;
		}
		_iter_end_1baae9379:;
	};
	return false;;
}



inline void _1aaab6ed3_pushMethodsFromInherit(jule::Ptr<_1c62e2e96_Trait>* _138632_dest, jule::Ptr<_1c62e2e96_Trait>* _138651_src) {
	_1aaab72be_pushMethodsFromInherits(_138632_dest, _138651_src);
	{
		auto expr = &((*((*(_138651_src))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baae9d4c:;
		if (it != expr_end) {
			jule::Ptr<_1c62cebec_Fn> _138817_m = *it;
			{
				if ((!(_1aaab6ba3_containsTraitMethod(_138632_dest, &((*(_138817_m))._field_Ident))))) {
					{ jule::Slice<jule::Ptr<_1c62cebec_Fn>> &__jule_push_dest = (*((*(_138632_dest))))._field_Methods; __jule_push_dest.push(_138817_m); };
				};
			}
			_iter_next_1baae9d4c:;
			++it;
			goto _iter_begin_1baae9d4c;
		}
		_iter_end_1baae9d4c:;
	};
}



inline void _1aaab72be_pushMethodsFromInherits(jule::Ptr<_1c62e2e96_Trait>* _139733_dest, jule::Ptr<_1c62e2e96_Trait>* _139752_src) {
	{
		auto expr = &((*((*(_139752_src))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baaeae3b:;
		if (it != expr_end) {
			jule::Ptr<_1c64256e4_TypeSymbol> _139817_inh = *it;
			{
				jule::Ptr<_1c62e2e96_Trait> _139917_t2 = _1c642247c_Trait((*(_139817_inh))._field_Kind.ptr());;
				_1aaab6ed3_pushMethodsFromInherit(_139733_dest, &(_139917_t2));
			}
			_iter_next_1baaeae3b:;
			++it;
			goto _iter_begin_1baaeae3b;
		}
		_iter_end_1baaeae3b:;
	};
}



inline jule::Bool _1aaab7588_isOpMethod(jule::Ptr<_1c62cebec_Fn>* _140516_m) {
	if ((((*((*(_140516_m))))._field_Generics.len() > 0LL) || ((*((*(_140516_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	jule::Ptr<_1c62d2b01_FnIns> _14099_mi = (*((*(_140516_m))))._field_Instances[0LL];;
	;
	;
	{
		if ((_14099_mi == (*((*(_14099_mi))._field_Owner))._field_Operators._field_Eq)) {
			return true;;
		};
	};
	{
		if ((_14099_mi == (*((*(_14099_mi))._field_Owner))._field_Operators._field_Gt)) {
			return true;;
		};
	};
	{
		if ((_14099_mi == (*((*(_14099_mi))._field_Owner))._field_Operators._field_GtEq)) {
			return true;;
		};
	};
	{
		if ((_14099_mi == (*((*(_14099_mi))._field_Owner))._field_Operators._field_Lt)) {
			return true;;
		};
	};
	{
		if ((_14099_mi == (*((*(_14099_mi))._field_Owner))._field_Operators._field_LtEq)) {
			return true;;
		};
	};
	{
		if ((_14099_mi == (*((*(_14099_mi))._field_Owner))._field_Operators._field_Shl)) {
			return true;;
		};
	};
	{
		if ((_14099_mi == (*((*(_14099_mi))._field_Owner))._field_Operators._field_Shr)) {
			return true;;
		};
	};
	{
		if ((_14099_mi == (*((*(_14099_mi))._field_Owner))._field_Operators._field_Add)) {
			return true;;
		};
	};
	{
		if ((_14099_mi == (*((*(_14099_mi))._field_Owner))._field_Operators._field_Sub)) {
			return true;;
		};
	};
	{
		if ((_14099_mi == (*((*(_14099_mi))._field_Owner))._field_Operators._field_Div)) {
			return true;;
		};
	};
	{
		if ((_14099_mi == (*((*(_14099_mi))._field_Owner))._field_Operators._field_Mul)) {
			return true;;
		};
	};
	{
		if ((_14099_mi == (*((*(_14099_mi))._field_Owner))._field_Operators._field_Mod)) {
			return true;;
		};
	};
	{
		if ((_14099_mi == (*((*(_14099_mi))._field_Owner))._field_Operators._field_BitAnd)) {
			return true;;
		};
	};
	{
		if ((_14099_mi == (*((*(_14099_mi))._field_Owner))._field_Operators._field_BitOr)) {
			return true;;
		};
	};
	{
		if ((_14099_mi == (*((*(_14099_mi))._field_Owner))._field_Operators._field_BitXor)) {
			return true;;
		};
	};
	{
		if ((_14099_mi == (*((*(_14099_mi))._field_Owner))._field_Operators._field_Neg)) {
			return true;;
		};
	};
	{
		if ((_14099_mi == (*((*(_14099_mi))._field_Owner))._field_Operators._field_Pos)) {
			return true;;
		};
	};
	{
		if ((_14099_mi == (*((*(_14099_mi))._field_Owner))._field_Operators._field_BitNot)) {
			return true;;
		};
	};
	{
		if ((_14099_mi == (*((*(_14099_mi))._field_Owner))._field_Operators._field_AddAssign)) {
			return true;;
		};
	};
	{
		if ((_14099_mi == (*((*(_14099_mi))._field_Owner))._field_Operators._field_SubAssign)) {
			return true;;
		};
	};
	{
		if ((_14099_mi == (*((*(_14099_mi))._field_Owner))._field_Operators._field_DivAssign)) {
			return true;;
		};
	};
	{
		if ((_14099_mi == (*((*(_14099_mi))._field_Owner))._field_Operators._field_MulAssign)) {
			return true;;
		};
	};
	{
		if ((_14099_mi == (*((*(_14099_mi))._field_Owner))._field_Operators._field_ModAssign)) {
			return true;;
		};
	};
	{
		if ((_14099_mi == (*((*(_14099_mi))._field_Owner))._field_Operators._field_ShlAssign)) {
			return true;;
		};
	};
	{
		if ((_14099_mi == (*((*(_14099_mi))._field_Owner))._field_Operators._field_ShrAssign)) {
			return true;;
		};
	};
	{
		if ((_14099_mi == (*((*(_14099_mi))._field_Owner))._field_Operators._field_BitOrAssign)) {
			return true;;
		};
	};
	{
		if ((_14099_mi == (*((*(_14099_mi))._field_Owner))._field_Operators._field_BitAndAssign)) {
			return true;;
		};
	};
	{
		if ((_14099_mi == (*((*(_14099_mi))._field_Owner))._field_Operators._field_BitXorAssign)) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1aaab7852_isHeadDecl(jule::Ptr<_1c62cebec_Fn>* _142120_m) {
	if ((((*((*(_142120_m))))._field_Generics.len() > 0LL) || ((*((*(_142120_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	if (_1aaab7588_isOpMethod(_142120_m)) {
		return true;;
	};
	jule::Ptr<_1c62d2b01_FnIns> _142813_mi = (*((*(_142120_m))))._field_Instances[0LL];;
	;
	return static__1c638b308_Dispose(_1c62bdb31_FindMethod((*(_142813_mi))._field_Owner.ptr(), jule::Str("Dispose", 7), false));;
}



inline jule::Ptr<_1c6298666_Directive> _1aaac6421_findDirective(jule::Slice<jule::Ptr<_1c6298666_Directive>>* _48023_directives, jule::Str _48054_tag) {
	{
		auto expr = _48023_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bac43b44:;
		if (it != expr_end) {
			jule::Ptr<_1c6298666_Directive> _48117_dr = *it;
			{
				if (((*((*(_48117_dr))._field_Tag))._field_Kind == _48054_tag)) {
					return _48117_dr;;
				};
			}
			_iter_next_1bac43b44:;
			++it;
			goto _iter_begin_1bac43b44;
		}
		_iter_end_1bac43b44:;
	};
	return nullptr;;
}



inline jule::Bool _1aaac67d9_hasDirective(jule::Slice<jule::Ptr<_1c6298666_Directive>>* _49018_directives, jule::Str _49049_tag) {
	return (_1aaac6421_findDirective(&((*(_49018_directives))), _49049_tag) != nullptr);;
}



inline jule::Bool _1aaac6aa3_shouldInitialized(jule::Ptr<_1c641d522_TypeKind>* _49727_t) {
	jule::Ptr<_1c64260eb_Prim> _4989_prim = _1c6420b73_Prim((*(_49727_t)).ptr());;
	if ((_4989_prim != nullptr)) {
		return ((!(_1c6429819_IsAny(_4989_prim.ptr()))) && (!(_1c6429583_IsStr(_4989_prim.ptr()))));;
	};
	{
		
		if ((_1c6420e09_Sptr((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1bac4696b:;
			{
				return false;;
			}
		}
		else if ((_1c6422713_Map((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1bac469d2:;
			{
				return false;;
			}
		}
		else if ((_1c6421bc9_Slc((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1bac46a59:;
			{
				return false;;
			}
		}
		else if ((_1c642247c_Trait((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1bac46ad1:;
			{
				return false;;
			}
		}
		else if ((_1c6421e60_Fn((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1bac46b58:;
			{
				return false;;
			}
		}
		else if ((_1c6421943_Arr((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1bac46bd0:;
			{
				jule::Ptr<_1c642c91b_Arr> _51417_arr = _1c6421943_Arr((*(_49727_t)).ptr());;
				return _1aaac6aa3_shouldInitialized(&((*(_51417_arr))._field_Elem));;
			}
		}
		else if ((_1c64221e6_Struct((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1bac46c57:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1bac45c12:;
			{
				return true;;
			}
		}
		_match_end_1bac459e2:;
	};
}



inline void _221a33757_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _221a339cc_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_221a33757_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I64 _4113_max = _221a3356a_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_221a3356a_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc07aa0:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_4212_k = it;
			{
				jule::I64 _4313_n = (*(_4212_k))[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_1acc07aa0:;
			++it;
			goto _iter_begin_1acc07aa0;
		}
		_iter_end_1acc07aa0:;
	};
	_2206c697e_StrBuilder _4913_s = static__2206c6c9d_New(32LL);;
	;
	{
		auto expr = &(_221a3356a_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc09398:;
		if (it != expr_end) {
			jule::I64 _519_i = it - expr->begin();
			jule::Array<jule::Str,2> *_5112_part = it;
			{
				_2206d0625_WriteStr(&_4913_s, (*(_5112_part))[0LL]);
				_2206d0625_WriteStr(&_4913_s, _2218bc547_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(((_4113_max - (*(_5112_part))[0LL].len()) + 5LL))));
				_2206d0625_WriteStr(&_4913_s, (*(_5112_part))[1LL]);
				if (((_519_i + 1LL) < 5LL)) {
					_2206d08cd_WriteByte(&_4913_s, '\n');
				};
			}
			_iter_next_1acc09398:;
			++it;
			_519_i++;
			goto _iter_begin_1acc09398;
		}
		_iter_end_1acc09398:;
	};
	jule::outln(_4913_s);
}



inline void _221a33c0d_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_221a33757_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.15 @master", 18));
}



inline void _221a33e0b_toolDistos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	jule::out(jule::Str("windows", 7));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("linux", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("darwin", 6));
	jule::outln(jule::Str());
}



inline void _221a34082_toolDistarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	jule::out(jule::Str("amd64", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("i386", 4));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("arm64", 5));
	jule::outln(jule::Str());
}



inline void _221a342b3_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_221a33757_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1059_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1059_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_1acc10547:;
			{
				_221a33e0b_toolDistos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_1acc1046a:;
			{
				_221a34082_toolDistarch();
			}
		}
		else {
			_case_begin_1acc0eac9:;
			{
				_221a33757_printErrorMessage((jule::Str("undefined command: ", 19) + _1059_cmd));
			}
		}
		_match_end_1acc1002a:;
	};
}



inline void _221a344e4_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_221a33757_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.15 @master", 33));
	jule::outln(jule::Str("architecture: amd64", 19));
	jule::outln(jule::Str("operating system: windows", 25));
	jule::outln((jule::Str("default compiler: ", 18) + _21e48e3a2_Compiler));
	jule::outln((jule::Str("default C++ standard: ", 22) + _21e48e7e2_CppStd));
}



inline void _221a34802_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_221a33757_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_1acc13c54:;
			{
				({
					auto except = static__220512e3b_Write(jule::Str("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_221a33757_printErrorMessage(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1acc13649:;
			{
				_221a33757_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1acc1379d:;
	};
}



inline jule::Bool _221a34abb_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_1acc152d8:;
			{
				_221a339cc_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_1acc1534e:;
			{
				_221a33c0d_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_1acc153b5:;
			{
				_221a342b3_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_1acc1542b:;
			{
				_221a344e4_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_1acc14b23:;
			{
				_221a34802_mod(_15320_args);
			}
		}
		else {
			_case_begin_1acc14aac:;
			{
				return false;;
			}
		}
		_match_end_1acc144a2:;
	};
	return true;;
}



inline void _221a34c42_showInfo(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18913_args = _22070d433_Args();;
	if ((_18913_args.len() < 2LL)) {
		_221a34c42_showInfo();
		return;;
	};
	if (_221a34abb_processCommand(&(_18913_args))) {
		return;;
	};
	_1aab4732c_compileCommand(&(_18913_args));
}



inline void _221a3565a_enableVtp(void) {
	jule::Uintptr _199_hOut = _2204de18c_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551605LLU));;
	if ((_199_hOut == jule::MAX_U64)) {
		return;;
	};
	jule::I64 _2413_dwMode = 0LL;;
	if ((!(_2204e1711_GetConsoleMode(_199_hOut, &(_2413_dwMode))))) {
		return;;
	};
	_2413_dwMode|=4LL;
	_2204e1cd8_SetConsoleMode(_199_hOut, _2413_dwMode);
}



inline void _221a35825_init(void) {
	_221a3565a_enableVtp();
}



inline void _1aab4412b_init(void) {
	_21e48e3a2_Compiler=jule::Str("clang", 5);
}



inline jule::Ptr<_2205120d3_File> _1aab44406_openOutput(jule::Str* _4316_path) {
	jule::Str _449_dir = _2218c98d9_Dir((*(_4316_path)));;
	({
		auto except = static__2218cb017_Of(_449_dir);
		if (!except.ok()) {
			({
				auto except = static__2218ca3e0_Create(_449_dir);
				if (!except.ok()) {
					_1c6663459_Throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__2205127cb_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_1c6663459_Throw(jule::Str("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1aab4457c_clearObjects(void) {
	({
		auto except = static__220622138_Remove(_1aab4577b_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__2218ca621_Remove(_1aab438cd_OutDir);
}



inline void _1aab448ac_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_221a270ec_Cmd> _7313_cmd = static__221a2751a_New(_7214_compiler);;
	(*(_7313_cmd))._field_Args=_2218c2bbd_Split(_7229_compilerCmd, jule::Str(" ", 1), -1LL);
	({
		auto except = _221a27718_Spawn(_7313_cmd.ptr());
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1acc1d038:;
					{
						static__1c6639c7c_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1acc1c664:;
					{
						static__1c6639c7c_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1acc1c873:;
					{
						static__1c6639c7c_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1acc1c7c9:;
			};
			_1c6663459_Throw(jule::Str());
		}
	});
	jule::I64 _869_status = ({
		auto except = _221a27b9c_Wait(_7313_cmd.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:18"));
		(except.result);
	});;
	if ((_869_status != 0LL)) {
		jule::Str _8813_errorMessage = ((jule::Str("\n>>> your backend compiler (", 28) + _21e48e3a2_Compiler) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1c6639c7c_Print(jule::Str("\033[31m", 5), _8813_errorMessage);
		_1c6663459_Throw(jule::Str());
	};
	_1aab4457c_clearObjects();
}



inline jule::Bool _1aab44b76_isCppSourceFile(jule::Str _9920_path) {
	jule::I64 _1009_offset = _2218c1529_FindLastByte(_9920_path, '.');;
	if ((_1009_offset == -1LL)) {
		return false;;
	};
	return _22195c1ca_IsValidCppExt(_9920_path.slice(_1009_offset));;
}



inline void _1aab44da7_pushCompCmdClang(_2206c697e_StrBuilder* _10726_cmd) {
	_2206d0625_WriteStr(_10726_cmd, jule::Str("-Wno-everything ", 16));
	_2206d0625_WriteStr(_10726_cmd, jule::Str("--std=", 6));
	{
		auto &_match_expr{ _21e48e7e2_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1acc209ca:;
			{
				_2206d0625_WriteStr(_10726_cmd, jule::Str("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1acc21998:;
			{
				_2206d0625_WriteStr(_10726_cmd, jule::Str("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1acc21a0e:;
			{
				_2206d0625_WriteStr(_10726_cmd, jule::Str("c++20", 5));
			}
		}
		_match_end_1acc20ee7:;
	};
	_2206d08cd_WriteByte(_10726_cmd, ' ');
	if (_21e49099c_Production) {
		_2206d0625_WriteStr(_10726_cmd, jule::Str("-O3 ", 4));
		_2206d0625_WriteStr(_10726_cmd, jule::Str("-flto ", 6));
		_2206d0625_WriteStr(_10726_cmd, jule::Str("-DNDEBUG ", 9));
		_2206d0625_WriteStr(_10726_cmd, jule::Str("-fomit-frame-pointer ", 21));
	} else {
		_2206d0625_WriteStr(_10726_cmd, jule::Str("-O0 ", 4));
	};
}



inline void _1aab450d8_pushCompCmdGcc(_2206c697e_StrBuilder* _13324_cmd) {
	_2206d0625_WriteStr(_13324_cmd, jule::Str("-w ", 3));
	_2206d0625_WriteStr(_13324_cmd, jule::Str("--std=", 6));
	{
		auto &_match_expr{ _21e48e7e2_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1acc24ade:;
			{
				_2206d0625_WriteStr(_13324_cmd, jule::Str("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1acc2312b:;
			{
				_2206d0625_WriteStr(_13324_cmd, jule::Str("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1acc23192:;
			{
				_2206d0625_WriteStr(_13324_cmd, jule::Str("c++20", 5));
			}
		}
		_match_end_1acc24a89:;
	};
	_2206d08cd_WriteByte(_13324_cmd, ' ');
	if (_21e49099c_Production) {
		_2206d0625_WriteStr(_13324_cmd, jule::Str("-O3 ", 4));
		_2206d0625_WriteStr(_13324_cmd, jule::Str("-DNDEBUG ", 9));
		_2206d0625_WriteStr(_13324_cmd, jule::Str("-fomit-frame-pointer ", 21));
	} else {
		_2206d0625_WriteStr(_13324_cmd, jule::Str("-O0 ", 4));
	};
}



inline __jule_tuple_str__jule_tuple_str _1aab4556c_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1a9ed6249_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_16010_compiler = &(_21e48e5c2_CompilerPath);;
	_2206c697e_StrBuilder _16113_cmd = static__2206c6c9d_New(64LL);;
	{
		auto &_match_expr{ _21e48e3a2_Compiler };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1acc27a8c:;
			{
				_1aab450d8_pushCompCmdGcc(&(_16113_cmd));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1acc28065:;
			{
				_1aab44da7_pushCompCmdClang(&(_16113_cmd));
			}
		}
		_match_end_1acc27c79:;
	};
	{
		auto expr = &((*((*(_15936_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc282eb:;
		if (it != expr_end) {
			jule::Ptr<_1c63469de_ImportInfo> *_17112_u = it;
			{
				if (((*((*(_17112_u))))._field_Binded && _1aab44b76_isCppSourceFile((*((*(_17112_u))))._field_Path))) {
					_2206d0625_WriteStr(&_16113_cmd, (*((*(_17112_u))))._field_Path);
					_2206d08cd_WriteByte(&_16113_cmd, ' ');
				};
			}
			_iter_next_1acc282eb:;
			++it;
			goto _iter_begin_1acc282eb;
		}
		_iter_end_1acc282eb:;
	};
	if (!(_1aab43e72_Out).empty()) {
		_2206d0625_WriteStr(&_16113_cmd, jule::Str("-o ", 3));
		_2206d0625_WriteStr(&_16113_cmd, _1aab43e72_Out);
		_2206d08cd_WriteByte(&_16113_cmd, ' ');
	};
	_2206d0625_WriteStr(&_16113_cmd, _15918_sourcePath);
	{
		auto expr = &((*((*(_15936_ir))))._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc2adc0:;
		if (it != expr_end) {
			jule::Str *_18612_pass = it;
			{
				_2206d08cd_WriteByte(&_16113_cmd, ' ');
				_2206d0625_WriteStr(&_16113_cmd, (*(_18612_pass)));
			}
			_iter_next_1acc2adc0:;
			++it;
			goto _iter_begin_1acc2adc0;
		}
		_iter_end_1acc2adc0:;
	};
	if (_221a30347_Os.equal("windows", 7)) {
		_2206d0625_WriteStr(&_16113_cmd, jule::Str(" -lshell32", 10));
	};
	__jule_func_result.__jule_result_arg0 = (*(_16010_compiler));
	__jule_func_result.__jule_result_arg1 = _2206d0e1c_Str(&_16113_cmd);
	return __jule_func_result;;
}



inline jule::Str _1aab4577b_getCompilePath(void) {
	return _2218c8be6_Join(jule::Slice<jule::Str>::make({_1aab438cd_OutDir,_1aab43ba8_OutName}));;
}



inline void _1aab459ac_applyTargetIndependentOptimizations(jule::Ptr<_1a9ed6249_IR>* _20545_ir) {
	jule::Ptr<_1c6637b37_Optimizer> _20613_opt = static__1c6638077_New(_20545_ir);;
	_1c6639661_Optimize(_20613_opt.ptr());
}



inline void _1aab45b33_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _21e48e3a2_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1acc2ca3c:;
			{
				_1c6663459_Throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1acc2d587:;
			{
				if ((_21e48e5c2_CompilerPath).empty()) {
					_21e48e5c2_CompilerPath=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1acc2d268:;
			{
				if ((_21e48e5c2_CompilerPath).empty()) {
					_21e48e5c2_CompilerPath=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_1acc2d202:;
			{
				_1c6663459_Throw((jule::Str("invalid option value for --compiler: ", 37) + _21e48e3a2_Compiler));
			}
		}
		_match_end_1acc2cd8e:;
	};
}



inline void _1aab45d64_checkTargetArch(jule::Str _22720_arch) {
	if ((((!_22720_arch.equal("amd64", 5)) && (!_22720_arch.equal("arm64", 5))) && (!_22720_arch.equal("i386", 4)))) {
		_1c6663459_Throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _22720_arch));
	};
}



inline void _1aab46095_checkTargetOs(jule::Str _23518_os) {
	if ((((!_23518_os.equal("windows", 7)) && (!_23518_os.equal("linux", 5))) && (!_23518_os.equal("darwin", 6)))) {
		_1c6663459_Throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _23518_os));
	};
}



inline void _1aab462c6_checkTargetFlag(jule::Str* _24321_target) {
	if (((*(_24321_target))).empty()) {
		_1c6663459_Throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2489_parts = _2218c2bbd_Split((*(_24321_target)), jule::Str("-", 1), -1LL);;
	if ((_2489_parts.len() != 2LL)) {
		_1c6663459_Throw((jule::Str("--target: undefined platform target format: ", 44) + (*(_24321_target))));
	};
	jule::Str _25310_os;;
	jule::Str _25314_arch;;
	({
		jule::Str ___jule_assign_arg = _2489_parts[0LL];
		jule::Str _1___jule_assign_arg = _2489_parts[1LL];
		_25310_os = ___jule_assign_arg;
		_25314_arch = _1___jule_assign_arg;
	});
	if ((!_25310_os.equal("native", 6))) {
		_1aab46095_checkTargetOs(_25310_os);
		_221a30347_Os=_25310_os;
	};
	if ((!_25314_arch.equal("native", 6))) {
		_1aab45d64_checkTargetArch(_25314_arch);
		_221a30611_Arch=_25314_arch;
	};
	_1dc2544b8_UpdateTarget();
}



inline void _1aab46507_checkOptFlag(jule::Str* _26618_opt) {
	if (((*(_26618_opt))).empty()) {
		_1c6663459_Throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26618_opt)) };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_1acc34a33:;
			{
				goto _match_end_1acc34abb;
			}
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_1acc34ea6:;
			{
				_1a9ede75d_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else if (_match_expr == jule::Str("L2", 2)) {
			_case_begin_1acc3501c:;
			{
				_1a9ede75d_PushOptLevel(static_cast<jule::I64>(2LL));
			}
		}
		else {
			_case_begin_1acc34e40:;
			{
				_1c6663459_Throw((jule::Str("--opt: invalid optimization level: ", 35) + (*(_26618_opt))));
			}
		}
		_match_end_1acc34abb:;
	};
}



inline void _1aab4688c_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _21e48e7e2_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1acc35083:;
			{
				goto _match_end_1acc36161;
			}
		}
		else {
			_case_begin_1acc35d42:;
			{
				_1c6663459_Throw((jule::Str("--cppstd: invalid cpp standard: ", 32) + _21e48e7e2_CppStd));
			}
		}
		_match_end_1acc36161:;
	};
}



inline jule::Slice<jule::Str> _1aab46b01_checkFlags(jule::Slice<jule::Str>* _29416_args) {
	jule::Str _29513_opt = jule::Str("L0", 2);;
	jule::Str _29613_target = jule::Str("native-native", 13);;
	jule::Ptr<_1aab3d961_FlagSet> _29813_fs = static__1aab3dc4c_New();;
	_1acc3821d_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29513_opt)))), jule::Str("opt", 3), 0LL, jule::Str("Optimization level", 18));
	_1acc3821d_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29613_target)))), jule::Str("target", 6), 0LL, jule::Str("Target system", 13));
	_1acc3821d_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1aab43e72_Out)))), jule::Str("out", 3), 'o', jule::Str("Output identifier", 17));
	_1acc41875_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_21e48ea12_Shadowing)))), jule::Str("shadowing", 9), 0LL, jule::Str("Allow shadowing", 15));
	_1acc41875_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_21e48ec76_Transpilation)))), jule::Str("transpile", 9), 't', jule::Str("Transpile code", 14));
	_1acc3821d_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_21e48e3a2_Compiler)))), jule::Str("compiler", 8), 0LL, jule::Str("Backend compiler", 16));
	_1acc3821d_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_21e48e5c2_CompilerPath)))), jule::Str("compiler-path", 13), 0LL, jule::Str("Path of backend compiler", 24));
	_1acc41875_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_21e49099c_Production)))), jule::Str("production", 10), 'p', jule::Str("Compile for production", 22));
	_1acc41875_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_21e490309_RC)))), jule::Str("disable-rc", 10), 0LL, jule::Str("Disable reference counting", 26));
	_1acc41875_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_21e4906d3_Safety)))), jule::Str("disable-safety", 14), 0LL, jule::Str("Disable safety", 14));
	_1acc3821d_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_21e48e7e2_CppStd)))), jule::Str("cppstd", 6), 0LL, jule::Str("C++ standard", 12));
	_1acc41875_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1a9edc34e_Copy)))), jule::Str("opt-copy", 8), 0LL, jule::Str("Copy optimization", 17));
	_1acc41875_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1a9edc65c_Deadcode)))), jule::Str("opt-deadcode", 12), 0LL, jule::Str("Deadcode optimization", 21));
	_1acc41875_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1a9edc926_Append)))), jule::Str("opt-append", 10), 0LL, jule::Str("Append optimization", 19));
	_1acc41875_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1a9edcc34_Math)))), jule::Str("opt-math", 8), 0LL, jule::Str("Math optimization", 17));
	_1acc41875_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1a9edceed_Access)))), jule::Str("opt-access", 10), 0LL, jule::Str("Access optimization", 19));
	_1acc41875_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1a9edd2b7_Inline)))), jule::Str("opt-inline", 10), 0LL, jule::Str("Inline optimization", 19));
	_1acc41875_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1a9edd581_Ptr)))), jule::Str("opt-ptr", 7), 0LL, jule::Str("Pointer optimizations", 21));
	_1acc41875_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1a9edd95a_Cond)))), jule::Str("opt-cond", 8), 0LL, jule::Str("Conditional optimizations", 25));
	_1acc41875_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1a9eddc24_Str)))), jule::Str("opt-str", 7), 0LL, jule::Str("String optimizations", 20));
	_1acc41875_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1a9eddedd_Slice)))), jule::Str("opt-slice", 9), 0LL, jule::Str("Slice optimizations", 19));
	_1acc41875_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1a9ede2a7_Assign)))), jule::Str("opt-assign", 10), 0LL, jule::Str("Assignment optimizations", 24));
	_1acc41875_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1a9ede571_StdInternalNosafe)))), jule::Str("opt-internal-nosafe", 19), 0LL, jule::Str("Special optimizations for std::internal::nosafe", 47));
	jule::Slice<jule::Str> _32413_content = ({
		auto except = _1aab3ead8_Parse(_29813_fs.ptr(), (*(_29416_args)));
		(except.ok()) ? (except.result) : ({
			_1c6663459_Throw(except.error.cast<jule::Str>(&__jule_any_type4));

			nullptr;
		});
	});;
	_1aab45b33_checkCompilerFlag();
	_1aab4688c_checkCppStdFlag();
	_1aab462c6_checkTargetFlag(&(_29613_target));
	_1aab46507_checkOptFlag(&(_29513_opt));
	return _32413_content;;
}



inline void _1aab46d32_setupSemaFlags(jule::I64* _33724_flags) {
	if (_21e48ea12_Shadowing) {
		(*(_33724_flags))|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1a9ed6249_IR> _1aab470eb_buildIr(jule::Slice<jule::Str>* _34313_args) {
	jule::Slice<jule::Str> _3449_content = _1aab46b01_checkFlags(_34313_args);;
	jule::I64 _34613_semaFlags = static_cast<jule::I64>(0LL);;
	_1aab46d32_setupSemaFlags(&(_34613_semaFlags));
	if ((_3449_content.len() == 0LL)) {
		_1c6663459_Throw(_22196922b_Logf(jule::Str("missing compile path", 20), jule::Slice<jule::Any>()));
	} else if ((_3449_content.len() > 1LL)) {
		_1c6663459_Throw((jule::Str("undefined content: ", 19) + _3449_content[1LL]));
	};
	jule::Str _35414_path;;
	jule::Bool _35420_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2218c9279_Abs(_3449_content[0LL]);
		_35414_path = __jule_assign_result.__jule_result_arg0;
		_35420_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_35420_ok))) {
		_1c6663459_Throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_220514921_Status> _3609_inf = ({
		auto except = static__2218cb017_Of(_221a2e764_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1c6663459_Throw(_22196922b_Logf(jule::Str("standard library directory not found", 36), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_220514921_Status>(nullptr);});
	});;
	if ((!(_220514cea_IsDir(_3609_inf.ptr())))) {
		_1c6663459_Throw(_22196922b_Logf(jule::Str("standard library directory not found", 36), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1a9ed6249_IR> _36814_ir;;
	jule::Slice<_221968cb9_Log> _36818_logs;;
	({
		__jule_tuple_x_1a9ed6249_IR__jule_tuple_s_221968cb9_Log __jule_assign_result = static__1a9ed66ab_Build(_35414_path, _34613_semaFlags);
		_36814_ir = __jule_assign_result.__jule_result_arg0;
		_36818_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_36814_ir == nullptr) && (_36818_logs == nullptr))) {
		_1c6663459_Throw(_22196922b_Logf(jule::Str("there is no Jule source code in package: @", 42), jule::Slice<jule::Any>::make({jule::Any(_35414_path, &__jule_any_type4)})));
	};
	if ((_36818_logs != nullptr)) {
		static__1c6662986_PrintLogs(&(_36818_logs));
		_1c6663459_Throw(jule::Str());
	};
	return _36814_ir;;
}



inline void _1aab4732c_compileCommand(jule::Slice<jule::Str>* _38324_args) {
	((*(_38324_args))).mut_slice(1LL);;
	if ((*(_38324_args))[0LL].equal("test", 4)) {
		_21e490040_Test=true;
		((*(_38324_args))).mut_slice(1LL);;
	};
	jule::Ptr<_1a9ed6249_IR> _38913_ir = _1aab470eb_buildIr(_38324_args);;
	;
	if ((!(_21e490040_Test))) {
		jule::Ptr<_1c62cebec_Fn> _39417_main = _1c634ae99_FindFn((*(_38913_ir))._field_Main.ptr(), jule::Str("main", 4), false);;
		if ((_39417_main == nullptr)) {
			_1c6663459_Throw(_22196922b_Logf(jule::Str("missing entry point: entry point (main) function is not defined", 63), jule::Slice<jule::Any>()));
		};
	};
	_1aab459ac_applyTargetIndependentOptimizations(&(_38913_ir));
	_1a9ed7723_Order(_38913_ir.ptr());
	jule::Str _4059_compPath = _1aab4577b_getCompilePath();;
	jule::Str _40610_compiler;;
	jule::Str _40620_compilerCmd;;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1aab4556c_genCompileCmd(_4059_compPath, &(_38913_ir));
		_40610_compiler = __jule_assign_result.__jule_result_arg0;
		_40620_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1aaaa472e_ObjectCoder> _40813_oc = static__1aaaa4b2a_New(&(_38913_ir), _1aaaa2c16_SerializationInfo{._field_Compiler=_40610_compiler, ._field_CompilerCommand=_40620_compilerCmd});;
	if (_21e490040_Test) {
		jule::Ptr<_1aa9deaed_TestCoder> _41317_tc = static__1aa9e003d_New(&(_40813_oc));;
		_1aa9e13b3_Serialize(_41317_tc);
	} else {
		_1aaab6136_Serialize(_40813_oc);
	};
	jule::Ptr<_2205120d3_File> _41913_file = _1aab44406_openOutput(&(_4059_compPath));;
	({
		auto except = _2206225bc_Write(_41913_file.ptr(), _2206d18bd_Buf(&(*(_40813_oc))._field_Obj));
		if (!except.ok()) {
			_1c6663459_Throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _220513d71_Close(_41913_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:423:5"));
	});
	if ((!(_21e48ec76_Transpilation))) {
		_1aab448ac_compileIr(_40610_compiler, _40620_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_221a30743_init();
	_1dc25463e_init();
	_221a35825_init();
	_1aab4412b_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}