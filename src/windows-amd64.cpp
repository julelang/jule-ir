// Auto generated by JuleC.
// JuleC version: jule0.0.11 @master
// Date: 8/4/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION


#include "api/jule.hpp"                                   

#include "std/jule/integrated/integrated.hpp"                                   
#include <dirent.h>
#include <cstdio>
#include <sys/stat.h>
#include <fcntl.h>
#include <unistd.h>
#include <time.h>

struct _1c982ce7d_Reader{};
struct _1c982d3ac_Writer{};
struct _1c982d984_WriterCloser{};
struct _1c982e1d2_Stream{};
struct _1e46a2403_Importer{};
struct _1c97742c0_Kind{};
struct _1c978dc35_Lookup{};
struct _1ca6c8dd3_CommonFlag{};
struct _22548ea2d_accept_range;
struct _20c8a9988_Range16;
struct _20c8a9e50_Range32;
struct _20c8aa3c3_RangeTable;
struct _20b949155_LazyBuff;
struct _2252b727e_DirEntry;
struct _2253b6812_Directory;
struct _2253b69ee_File;
struct _2253b6d95_Status;
struct _20cad09a0_Cmd;
struct _20ca8ec5b_Log;
struct _20cd9e6ec_Token;
struct _20cda4adc_File;
struct _20cda6baa_KindPair;
struct _20cdac672_Lex;
struct _1e433079b_Ast;
struct _1e43314d3_Node;
struct _1e43620c4_Directive;
struct _1e436257a_TypeDecl;
struct _1e4362b0d_IdentTypeDecl;
struct _1e4363317_NamespaceTypeDecl;
struct _1e4363603_SptrTypeDecl;
struct _1e43638de_SlcTypeDecl;
struct _1e4363c63_TupleTypeDecl;
struct _1e436404e_PtrTypeDecl;
struct _1e436479c_ArrTypeDecl;
struct _1e4364ea6_MapTypeDecl;
struct _1e436535d_RetTypeDecl;
struct _1e43659e0_Expr;
struct _1e4365d97_UseExpr;
struct _1e4366183_TupleExpr;
struct _1e436665b_LitExpr;
struct _1e4366d65_UnsafeExpr;
struct _1e436721c_CoExpr;
struct _1e4367690_IdentExpr;
struct _1e4367d99_UnaryExpr;
struct _1e4368251_VariadicExpr;
struct _1e4368608_CastExpr;
struct _1e43689b0_NsSelectionExpr;
struct _1e4368e33_SubIdentExpr;
struct _1e43693a6_BinopExpr;
struct _1e43699b1_FnCallExpr;
struct _1e436a4c8_FieldExprPair;
struct _1e436ac9d_StructLit;
struct _1e436b221_BraceLit;
struct _1e436b9e6_KeyValPair;
struct _1e436be69_SliceExpr;
struct _1e436ca4c_IndexingExpr;
struct _1e436d157_SlicingExpr;
struct _1e436d50e_GenericDecl;
struct _1e436d8b6_LabelSt;
struct _1e436dc6d_GotoSt;
struct _1e436e059_FallSt;
struct _1e436e664_AssignLeft;
struct _1e436eba3_AssignSt;
struct _1e43702ad_ScopeTree;
struct _1e4370984_ParamDecl;
struct _1e4371ca4_FnDecl;
struct _1e4372c83_VarDecl;
struct _1e437313a_RetSt;
struct _1e43736ac_Iter;
struct _1e4373e82_WhileKind;
struct _1e4374823_RangeKind;
struct _1e4374bca_BreakSt;
struct _1e4375082_ContSt;
struct _1e4375505_If;
struct _1e43758ac_Else;
struct _1e4375d30_Conditional;
struct _1e4376506_TypeAliasDecl;
struct _1e4376979_Case;
struct _1e4377150_MatchCase;
struct _1e43778e2_UseDecl;
struct _1e4377d65_EnumItemDecl;
struct _1e43789ae_EnumDecl;
struct _1e43794d7_FieldDecl;
struct _1e4379d45_StructDecl;
struct _1e437a450_TraitDecl;
struct _1e437aa5a_Impl;
struct _1e5aa9e25_FloatInfo;
struct _1e5665e21_DecimalSlice;
struct _1e5c2e3eb_LeftCheat;
struct _1e5c2e5d8_Decimal;
struct _1c968bb88_Const;
struct _1e43542c5_Field;
struct _1e434a783_Operators;
struct _1e43360cb_Struct;
struct _1e434014b_FieldIns;
struct _1e4347a8d_OperandExprModel;
struct _1e435a8e7_BinopExprModel;
struct _1e435972b_UnaryExprModel;
struct _1e433773c_StructArgExprModel;
struct _1e433b004_StructLitExprModel;
struct _1e4331d63_AllocStructLitExprModel;
struct _1e434e7dc_CastingExprModel;
struct _1e4354902_FnCallExprModel;
struct _1e4354ade_SliceExprModel;
struct _1e437b31e_IndexingExprModel;
struct _1e437b50b_AnonFnExprModel;
struct _1e437b6e8_KeyValPairExprModel;
struct _1e437b8d5_MapExprModel;
struct _1e437bac2_SlicingExprModel;
struct _1e437bcae_TraitSubIdentExprModel;
struct _1e437c1cc_StructSubIdentExprModel;
struct _1e437c3b9_StructStaticIdentExprModel;
struct _1e437c5a6_ArrayExprModel;
struct _1e437c793_CommonIdentExprModel;
struct _1e437c980_CommonSubIdentExprModel;
struct _1e437cb6c_TupleExprModel;
struct _1e437cd59_BuiltinOutCallExprModel;
struct _1e437d046_BuiltinOutlnCallExprModel;
struct _1e437d233_BuiltinCloneCallExprModel;
struct _1e437d420_BuiltinNewCallExprModel;
struct _1e437d60c_BuiltinPanicCallExprModel;
struct _1e437d7e9_BuiltinAssertCallExprModel;
struct _1e437d9d6_BuiltinMakeCallExprModel;
struct _1e437dbc3_BuiltinAppendCallExprModel;
struct _1e437ddb0_BuiltinCopyCallExprModel;
struct _1e437e09c_BuiltinErrorCallExprModel;
struct _1e437be9b_SizeofExprModel;
struct _1e437e70c_AlignofExprModel;
struct _1e437e8e9_RuneExprModel;
struct _1e437ead6_IntegratedToStrExprModel;
struct _1e437ecc3_BackendEmitExprModel;
struct _1e437eeb0_FreeExprModel;
struct _1e438019c_RetType;
struct _1e4380389_Param;
struct _1e4380576_Fn;
struct _1e438217c_ParamIns;
struct _1e4383018_FnIns;
struct _1e4385c0d_ReferenceStack;
struct _1e43870e9_Pass;
struct _1e438ab9c_SymbolBuilder;
struct _1e43d8d0a_Trait;
struct _1e4392797_EnumItem;
struct _1e4456b58_Enum;
struct _1e5c31431_Impl;
struct _1e46862c7_Scope;
struct _1e46866c3_If;
struct _1e46869ae_Else;
struct _1e4686daa_Conditional;
struct _1e4687196_InfIter;
struct _1e4687619_WhileIter;
struct _1e4687eee_RangeIter;
struct _1e4688373_ContSt;
struct _1e468872a_BreakSt;
struct _1e4688a16_Label;
struct _1e4688d02_GotoSt;
struct _1e46891a9_Postfix;
struct _1e468962c_Assign;
struct _1e46899d4_MultiAssign;
struct _1e468a023_Match;
struct _1e468a9d5_Case;
struct _1e468b167_FallSt;
struct _1e468b5da_RetSt;
struct _1e468bbe5_ScopeLabel;
struct _1e468c168_ScopeGoto;
struct _1e468ce7c_ScopeChecker;
struct _1e469de38_DirectiveChecker;
struct _1e46a4768_ImportInfo;
struct _1e46a742a_Package;
struct _1e46ac452_Sema;
struct _1e46c4326_MissingRetChecker;
struct _1e46c5ee8_IterRelation;
struct _1e46c6eb6_Var;
struct _1e46c79bc_FuncPattern;
struct _1c9736c55_TypeCompatibilityChecker;
struct _1c973822e_AssignTypeChecker;
struct _1c9739a7c_DynamicTypeAnnotation;
struct _1c973c83d_FnCallArgChecker;
struct _1c9740247_StructLitChecker;
struct _1c9741d2b_RangeChecker;
struct _1c9743eb5_RetTypeChecker;
struct _1c9745c42_SymbolTable;
struct _1c974abc0_Data;
struct _1c974bc48_Value;
struct _1c974c73d_Eval;
struct _1c9766aba_UnaryEval;
struct _1c9768858_BinaryEval;
struct _1c97739b7_TypeAlias;
struct _1c97746ee_TypeKind;
struct _1c977858d_TypeSymbol;
struct _1c9778e51_Prim;
struct _1c977c460_Sptr;
struct _1c977cdbc_Slc;
struct _1c977d8b2_Tuple;
struct _1c977e473_Map;
struct _1c9780067_Arr;
struct _1c97809c4_Ptr;
struct _1c978191a_Referencer;
struct _1c9782663_TypeChecker;
struct _1c97894a0_IdentTypeLookup;
struct _1c9c90214_FileInfo;
struct _1c9cd7547_Stmt;
struct _1c9cd7d72_ScopeParser;
struct _1c9ce4741_CallData;
struct _1c9ce5b93_ExprBuilder;
struct _1c9d00ebc_AssignInfo;
struct _1c9d044ed_Parser;
struct _1c9d14ce4_TypeBuilder;
struct _1c98b8a52_CompileInfo;
struct _1c98b9ee8_DirectiveEval;
struct _1c9e46563_JuleImporter;
struct _1c9e85e10_OrderedDefines;
struct _1e4966e7b_DefineOrderer;
struct _1ca028ea3_LiveTable;
struct _1ca05d1a2_ScopeDeadCode;
struct _1ca061c55_ExprDeadCode;
struct _1e40d153b_UnsafeBinopExprModel;
struct _20c91dcd8_UnsafeIndexingExprModel;
struct _1e3b31003_PushToSliceExprModel;
struct _20c90c6ab_MutSlicingExprModel;
struct _2254a3c1d_StrInsertBeginExprModel;
struct _1e3b2c2b8_ScopeOptimizer;
struct _1e3b2cd8a_ExprOptimizer;
struct _1ca001d16_Optimizer;
struct _1c9e98362_AnsiEscape;
struct _1c9e9972b_Logger;
struct _1ca51a494_AbsTime;
struct _1ca51ab6a_Time;
struct _1ca49177d_ScopeCoder;
struct _1ca4994ab_ExprCoder;
struct _1ca4a75a7_DeriveCoder;
struct _1ca4a8b80_TestCoder;
struct _1ca4ab402_IdentCoder;
struct _1ca4e41e8_SerializationInfo;
struct _1ca4d7a49_TraitHash;
struct _1ca526516_CustomType;
struct _1ca526d30_TypeCoder;
struct _1cdc1e216_Flag;
struct _1cdc22c75_Flag;
struct _1cdc2632d_Flag;
struct _1cdc2992a_Flag;
struct _1cdc2ced3_Flag;
struct _1ca6ca81e_FlagSet;
struct _1e498133b_IR;
struct _1e43462ea_StructIns;
struct _1ca02928e_ObjectDeadCode;
struct _1ca4d7c36_ObjectCoder;
struct _1ca6cd02a_ArgParser;
struct _22548ea2d_accept_range {
	jule::U8 _field_lo = jule::U8();
	jule::U8 _field_hi = jule::U8();
	

	_22548ea2d_accept_range(void) = default;

	inline bool operator==(_22548ea2d_accept_range _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_22548ea2d_accept_range _other) { return !this->operator==(_other); }


};
struct _20c8a9988_Range16 {
	jule::U16 _field_lo = jule::U16();
	jule::U16 _field_hi = jule::U16();
	jule::U16 _field_stride = jule::U16();
	

	_20c8a9988_Range16(void) = default;

	inline bool operator==(_20c8a9988_Range16 _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi &&
			this->_field_stride == _other._field_stride;
	}

	inline bool operator!=(_20c8a9988_Range16 _other) { return !this->operator==(_other); }


};
struct _20c8a9e50_Range32 {
	jule::U32 _field_lo = jule::U32();
	jule::U32 _field_hi = jule::U32();
	jule::U32 _field_stride = jule::U32();
	

	_20c8a9e50_Range32(void) = default;

	inline bool operator==(_20c8a9e50_Range32 _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi &&
			this->_field_stride == _other._field_stride;
	}

	inline bool operator!=(_20c8a9e50_Range32 _other) { return !this->operator==(_other); }


};
struct _20c8aa3c3_RangeTable {
	jule::Slice<_20c8a9988_Range16> _field_r16 = jule::Slice<_20c8a9988_Range16>();
	jule::Slice<_20c8a9e50_Range32> _field_r32 = jule::Slice<_20c8a9e50_Range32>();
	jule::I64 _field_latin_offset = jule::I64();
	

	_20c8aa3c3_RangeTable(void) = default;

	inline bool operator==(_20c8aa3c3_RangeTable _other) {
		return 
			this->_field_r16 == _other._field_r16 &&
			this->_field_r32 == _other._field_r32 &&
			this->_field_latin_offset == _other._field_latin_offset;
	}

	inline bool operator!=(_20c8aa3c3_RangeTable _other) { return !this->operator==(_other); }


};
inline jule::U8 _20b943094_index(_20b949155_LazyBuff*, jule::I64);
inline void _20b948b7c_append(_20b949155_LazyBuff*, jule::U8);
inline jule::Str _20b94c840_string(_20b949155_LazyBuff*);
struct _20b949155_LazyBuff {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_buff = jule::Slice<jule::U8>();
	jule::I64 _field_w = jule::I64();
	jule::Str _field_vol_and_path = jule::Str();
	jule::I64 _field_vol_len = jule::I64();
	

	_20b949155_LazyBuff(void) = default;

	inline bool operator==(_20b949155_LazyBuff _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_buff == _other._field_buff &&
			this->_field_w == _other._field_w &&
			this->_field_vol_and_path == _other._field_vol_and_path &&
			this->_field_vol_len == _other._field_vol_len;
	}

	inline bool operator!=(_20b949155_LazyBuff _other) { return !this->operator==(_other); }


};
struct _2252b727e_DirEntry {
	jule::Str _field_name = jule::Str();
	jule::Ptr<_2253b6d95_Status> _field_stat = jule::Ptr<_2253b6d95_Status>();
	

	_2252b727e_DirEntry(void) = default;

	inline bool operator==(_2252b727e_DirEntry _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_stat == _other._field_stat;
	}

	inline bool operator!=(_2252b727e_DirEntry _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Slice<jule::Ptr<_2252b727e_DirEntry>>> static__2254a5769_read(jule::Str);
inline jule::VoidExceptional static__2254b91c8_create(jule::Str);
inline jule::VoidExceptional static__20b8a29e8_remove(jule::Str);
struct _2253b6812_Directory {
	

	_2253b6812_Directory(void) = default;

	inline bool operator==(_2253b6812_Directory _other) { return true; }

	inline bool operator!=(_2253b6812_Directory _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_2253b69ee_File> static__2252970b6_new(jule::U64);
inline jule::Exceptional<jule::Ptr<_2253b69ee_File>> static__2252c26c9_create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__2252c944a_read(jule::Str);
inline jule::VoidExceptional static__2252ccb02_write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::Exceptional<jule::I64> _2252ce494_seek(_2253b69ee_File*, jule::I64, jule::I64);
inline jule::VoidExceptional _2252e0b15_close(_2253b69ee_File*);
inline jule::Exceptional<jule::Ptr<_2253b69ee_File>> static__22542110d_open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__22545440a_remove(jule::Str);
inline jule::Exceptional<jule::I64> _225420d22_write(_2253b69ee_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _2254930e7_read(_2253b69ee_File*, jule::Slice<jule::U8>);
struct _2253b69ee_File {
	jule::U64 _field_handle = jule::U64();
	

	_2253b69ee_File(void) = default;

	inline bool operator==(_2253b69ee_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_2253b69ee_File _other) { return !this->operator==(_other); }


};
inline jule::Bool _2252e2012_is_dir(_2253b6d95_Status*);
inline jule::Bool _225288151_is_reg(_2253b6d95_Status*);
inline jule::Exceptional<jule::Ptr<_2253b6d95_Status>> static__20b8a3642_of(jule::Str);
struct _2253b6d95_Status {
	jule::U64 _field_mode = jule::U64();
	jule::U64 _field_size = jule::U64();
	

	_2253b6d95_Status(void) = default;

	inline bool operator==(_2253b6d95_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_2253b6d95_Status _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_20cad09a0_Cmd> static__20cad0dce_new(jule::Str);
inline jule::Exceptional<jule::I64> _20cad5301_spawn(_20cad09a0_Cmd*);
inline jule::Exceptional<jule::I64> _20cae0d78___spawn(_20cad09a0_Cmd*);
struct _20cad09a0_Cmd {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_env = jule::Slice<jule::Str>();
	

	_20cad09a0_Cmd(void) = default;

	inline bool operator==(_20cad09a0_Cmd _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_args == _other._field_args &&
			this->_field_env == _other._field_env;
	}

	inline bool operator!=(_20cad09a0_Cmd _other) { return !this->operator==(_other); }


};
struct _20ca8ec5b_Log {
	jule::I64 _field_kind = 0LL;
	jule::I64 _field_row = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::Str _field_path = jule::Str();
	jule::Str _field_text = jule::Str();
	jule::Str _field_line = jule::Str();
	jule::Str _field_suggestion = jule::Str();
	

	_20ca8ec5b_Log(void) = default;

	inline bool operator==(_20ca8ec5b_Log _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_row == _other._field_row &&
			this->_field_column == _other._field_column &&
			this->_field_path == _other._field_path &&
			this->_field_text == _other._field_text &&
			this->_field_line == _other._field_line &&
			this->_field_suggestion == _other._field_suggestion;
	}

	inline bool operator!=(_20ca8ec5b_Log _other) { return !this->operator==(_other); }


};
inline jule::U8 _20cd9ead7_prec(_20cd9e6ec_Token*);
struct _20cd9e6ec_Token {
	jule::Ptr<_20cda4adc_File> _field_file = jule::Ptr<_20cda4adc_File>();
	jule::I64 _field_row = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::Str _field_kind = jule::Str();
	jule::U64 _field_id = 0LLU;
	

	_20cd9e6ec_Token(void) = default;

	inline bool operator==(_20cd9e6ec_Token _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_row == _other._field_row &&
			this->_field_column == _other._field_column &&
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_20cd9e6ec_Token _other) { return !this->operator==(_other); }


};
inline jule::Bool _20cda4ee9_is_ok(_20cda4adc_File*);
inline void _20cda526e_fill(_20cda4adc_File*, jule::Slice<jule::U8>);
inline jule::Str _20cda54d3_dir(_20cda4adc_File*);
inline jule::Str _20cda5747_name(_20cda4adc_File*);
inline jule::U64 _20cda59ab_addr(_20cda4adc_File*);
inline jule::Str _20cda5cb9_get_row(_20cda4adc_File*, jule::I64);
struct _20cda4adc_File {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_data = jule::Slice<jule::U8>();
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _field_tokens = jule::Slice<jule::Ptr<_20cd9e6ec_Token>>();
	

	_20cda4adc_File(void) = default;

	inline bool operator==(_20cda4adc_File _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_data == _other._field_data &&
			this->_field_tokens == _other._field_tokens;
	}

	inline bool operator!=(_20cda4adc_File _other) { return !this->operator==(_other); }


};
struct _20cda6baa_KindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U64 _field_id = 0LLU;
	

	_20cda6baa_KindPair(void) = default;

	inline bool operator==(_20cda6baa_KindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_20cda6baa_KindPair _other) { return !this->operator==(_other); }


};
inline void _20cdacc16_push_err(_20cdac672_Lex*, jule::Str, jule::Slice<jule::Any>);
inline void _20cdad035_push_err_tok(_20cdac672_Lex*, jule::Ptr<_20cd9e6ec_Token>&, jule::Str);
inline void _20cdad211_lex(_20cdac672_Lex*);
inline jule::Str _20cdad51e_id(_20cdac672_Lex*, jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _20cdad783_resume(_20cdac672_Lex*);
inline void _20cdada08_lex_line_comment(_20cdac672_Lex*, jule::Ptr<_20cd9e6ec_Token>&);
inline void _20cdadc7d_lex_range_comment(_20cdac672_Lex*, jule::Ptr<_20cd9e6ec_Token>&);
inline jule::Str _20cdae08b_num(_20cdac672_Lex*, jule::Slice<jule::U8>&);
inline jule::Str _20cdae399_escape_seq(_20cdac672_Lex*, jule::Slice<jule::U8>&);
inline jule::Str _20cdae751_get_rune(_20cdac672_Lex*, jule::Slice<jule::U8>&, jule::Bool);
inline jule::Str _20cdaea5e_lex_rune(_20cdac672_Lex*, jule::Slice<jule::U8>&);
inline jule::Str _20cdaecc3_lex_str(_20cdac672_Lex*);
inline jule::Bool _20cdb0037_is_first_token_of_line(_20cdac672_Lex*);
inline void _20cdb0213_new_line(_20cdac672_Lex*);
inline jule::Bool _20cdb070d_is_op(_20cdac672_Lex*, jule::Slice<jule::U8>&, jule::Str, jule::U64, jule::Ptr<_20cd9e6ec_Token>&);
inline jule::Bool _20cdb0ab5_lex_basic_ops(_20cdac672_Lex*, jule::Slice<jule::U8>, jule::Ptr<_20cd9e6ec_Token>&);
inline jule::Bool _20cdb0e6c_lex_id(_20cdac672_Lex*, jule::Slice<jule::U8>&, jule::Ptr<_20cd9e6ec_Token>&);
inline jule::Bool _20cdb1324_lex_num(_20cdac672_Lex*, jule::Slice<jule::U8>&, jule::Ptr<_20cd9e6ec_Token>&);
inline jule::Ptr<_20cd9e6ec_Token> _20cdb1588_token(_20cdac672_Lex*);
struct _20cdac672_Lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _field_tokens = jule::Slice<jule::Ptr<_20cd9e6ec_Token>>();
	jule::Ptr<_20cda4adc_File> _field_file = jule::Ptr<_20cda4adc_File>();
	jule::I64 _field_pos = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::I64 _field_row = jule::I64();
	jule::Slice<_20ca8ec5b_Log> _field_errors = jule::Slice<_20ca8ec5b_Log>();
	

	_20cdac672_Lex(void) = default;

	inline bool operator==(_20cdac672_Lex _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_file == _other._field_file &&
			this->_field_pos == _other._field_pos &&
			this->_field_column == _other._field_column &&
			this->_field_row == _other._field_row &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_20cdac672_Lex _other) { return !this->operator==(_other); }


};
struct _1e433079b_Ast {
	jule::Ptr<_20cda4adc_File> _field_file = jule::Ptr<_20cda4adc_File>();
	jule::Slice<jule::Ptr<_1e43620c4_Directive>> _field_top_directives = jule::Slice<jule::Ptr<_1e43620c4_Directive>>();
	jule::Slice<jule::Ptr<_1e43778e2_UseDecl>> _field_use_decls = jule::Slice<jule::Ptr<_1e43778e2_UseDecl>>();
	jule::Slice<_1e43314d3_Node> _field_nodes = jule::Slice<_1e43314d3_Node>();
	

	_1e433079b_Ast(void) = default;

	inline bool operator==(_1e433079b_Ast _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_top_directives == _other._field_top_directives &&
			this->_field_use_decls == _other._field_use_decls &&
			this->_field_nodes == _other._field_nodes;
	}

	inline bool operator!=(_1e433079b_Ast _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e4331901_is_decl(_1e43314d3_Node*);
inline jule::Bool _1e43617dd_is_directive(_1e43314d3_Node*);
inline jule::Bool _1e43619a8_is_impl(_1e43314d3_Node*);
inline jule::Bool _1e4361c1c_is_use_decl(_1e43314d3_Node*);
struct _1e43314d3_Node {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Any _field_data = jule::Any();
	

	_1e43314d3_Node(void) = default;

	inline bool operator==(_1e43314d3_Node _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1e43314d3_Node _other) { return !this->operator==(_other); }


};
struct _1e43620c4_Directive {
	jule::Ptr<_20cd9e6ec_Token> _field_tag = jule::Ptr<_20cd9e6ec_Token>();
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _field_args = jule::Slice<jule::Ptr<_20cd9e6ec_Token>>();
	

	_1e43620c4_Directive(void) = default;

	inline bool operator==(_1e43620c4_Directive _other) {
		return 
			this->_field_tag == _other._field_tag &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1e43620c4_Directive _other) { return !this->operator==(_other); }


};
struct _1e436257a_TypeDecl {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Any _field_kind = jule::Any();
	

	_1e436257a_TypeDecl(void) = default;

	inline bool operator==(_1e436257a_TypeDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1e436257a_TypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e4362e60_is_prim(_1e4362b0d_IdentTypeDecl*);
struct _1e4362b0d_IdentTypeDecl {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1e436257a_TypeDecl>> _field_generics = jule::Slice<jule::Ptr<_1e436257a_TypeDecl>>();
	

	_1e4362b0d_IdentTypeDecl(void) = default;

	inline bool operator==(_1e4362b0d_IdentTypeDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_1e4362b0d_IdentTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e4363317_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _field_idents = jule::Slice<jule::Ptr<_20cd9e6ec_Token>>();
	jule::Ptr<_1e4362b0d_IdentTypeDecl> _field_kind = jule::Ptr<_1e4362b0d_IdentTypeDecl>();
	

	_1e4363317_NamespaceTypeDecl(void) = default;

	inline bool operator==(_1e4363317_NamespaceTypeDecl _other) {
		return 
			this->_field_idents == _other._field_idents &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1e4363317_NamespaceTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e4363603_SptrTypeDecl {
	jule::Ptr<_1e436257a_TypeDecl> _field_elem = jule::Ptr<_1e436257a_TypeDecl>();
	

	_1e4363603_SptrTypeDecl(void) = default;

	inline bool operator==(_1e4363603_SptrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1e4363603_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e43638de_SlcTypeDecl {
	jule::Ptr<_1e436257a_TypeDecl> _field_elem = jule::Ptr<_1e436257a_TypeDecl>();
	

	_1e43638de_SlcTypeDecl(void) = default;

	inline bool operator==(_1e43638de_SlcTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1e43638de_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e4363c63_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1e436257a_TypeDecl>> _field_types = jule::Slice<jule::Ptr<_1e436257a_TypeDecl>>();
	

	_1e4363c63_TupleTypeDecl(void) = default;

	inline bool operator==(_1e4363c63_TupleTypeDecl _other) {
		return 
			this->_field_types == _other._field_types;
	}

	inline bool operator!=(_1e4363c63_TupleTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e4364428_is_unsafe(_1e436404e_PtrTypeDecl*);
struct _1e436404e_PtrTypeDecl {
	jule::Ptr<_1e436257a_TypeDecl> _field_elem = jule::Ptr<_1e436257a_TypeDecl>();
	

	_1e436404e_PtrTypeDecl(void) = default;

	inline bool operator==(_1e436404e_PtrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1e436404e_PtrTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e4364aee_auto_sized(_1e436479c_ArrTypeDecl*);
struct _1e436479c_ArrTypeDecl {
	jule::Ptr<_1e436257a_TypeDecl> _field_elem = jule::Ptr<_1e436257a_TypeDecl>();
	jule::Ptr<_1e43659e0_Expr> _field_size = jule::Ptr<_1e43659e0_Expr>();
	

	_1e436479c_ArrTypeDecl(void) = default;

	inline bool operator==(_1e436479c_ArrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_1e436479c_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e4364ea6_MapTypeDecl {
	jule::Ptr<_1e436257a_TypeDecl> _field_key = jule::Ptr<_1e436257a_TypeDecl>();
	jule::Ptr<_1e436257a_TypeDecl> _field_val = jule::Ptr<_1e436257a_TypeDecl>();
	

	_1e4364ea6_MapTypeDecl(void) = default;

	inline bool operator==(_1e4364ea6_MapTypeDecl _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_1e4364ea6_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e436535d_RetTypeDecl {
	jule::Ptr<_1e436257a_TypeDecl> _field_kind = jule::Ptr<_1e436257a_TypeDecl>();
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _field_idents = jule::Slice<jule::Ptr<_20cd9e6ec_Token>>();
	

	_1e436535d_RetTypeDecl(void) = default;

	inline bool operator==(_1e436535d_RetTypeDecl _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_idents == _other._field_idents;
	}

	inline bool operator!=(_1e436535d_RetTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e43659e0_Expr {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Ptr<_20cd9e6ec_Token> _field_end = jule::Ptr<_20cd9e6ec_Token>();
	jule::Bool _field_range = jule::Bool();
	jule::Any _field_kind = jule::Any();
	

	_1e43659e0_Expr(void) = default;

	inline bool operator==(_1e43659e0_Expr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_range == _other._field_range &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1e43659e0_Expr _other) { return !this->operator==(_other); }


};
struct _1e4365d97_UseExpr {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Ptr<_1e43659e0_Expr> _field_expr = jule::Ptr<_1e43659e0_Expr>();
	

	_1e4365d97_UseExpr(void) = default;

	inline bool operator==(_1e4365d97_UseExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e4365d97_UseExpr _other) { return !this->operator==(_other); }


};
struct _1e4366183_TupleExpr {
	jule::Slice<jule::Ptr<_1e43659e0_Expr>> _field_expr = jule::Slice<jule::Ptr<_1e43659e0_Expr>>();
	

	_1e4366183_TupleExpr(void) = default;

	inline bool operator==(_1e4366183_TupleExpr _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e4366183_TupleExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e43669ad_is_nil(_1e436665b_LitExpr*);
struct _1e436665b_LitExpr {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Str _field_value = jule::Str();
	

	_1e436665b_LitExpr(void) = default;

	inline bool operator==(_1e436665b_LitExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_value == _other._field_value;
	}

	inline bool operator!=(_1e436665b_LitExpr _other) { return !this->operator==(_other); }


};
struct _1e4366d65_UnsafeExpr {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Ptr<_1e43659e0_Expr> _field_expr = jule::Ptr<_1e43659e0_Expr>();
	

	_1e4366d65_UnsafeExpr(void) = default;

	inline bool operator==(_1e4366d65_UnsafeExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e4366d65_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _1e436721c_CoExpr {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Ptr<_1e43659e0_Expr> _field_expr = jule::Ptr<_1e43659e0_Expr>();
	

	_1e436721c_CoExpr(void) = default;

	inline bool operator==(_1e436721c_CoExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e436721c_CoExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e43679e2_is_self(_1e4367690_IdentExpr*);
struct _1e4367690_IdentExpr {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	

	_1e4367690_IdentExpr(void) = default;

	inline bool operator==(_1e4367690_IdentExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked;
	}

	inline bool operator!=(_1e4367690_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1e4367d99_UnaryExpr {
	jule::Ptr<_20cd9e6ec_Token> _field_op = jule::Ptr<_20cd9e6ec_Token>();
	jule::Ptr<_1e43659e0_Expr> _field_expr = jule::Ptr<_1e43659e0_Expr>();
	

	_1e4367d99_UnaryExpr(void) = default;

	inline bool operator==(_1e4367d99_UnaryExpr _other) {
		return 
			this->_field_op == _other._field_op &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e4367d99_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1e4368251_VariadicExpr {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Ptr<_1e43659e0_Expr> _field_expr = jule::Ptr<_1e43659e0_Expr>();
	

	_1e4368251_VariadicExpr(void) = default;

	inline bool operator==(_1e4368251_VariadicExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e4368251_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1e4368608_CastExpr {
	jule::Ptr<_1e436257a_TypeDecl> _field_kind = jule::Ptr<_1e436257a_TypeDecl>();
	jule::Ptr<_1e43659e0_Expr> _field_expr = jule::Ptr<_1e43659e0_Expr>();
	

	_1e4368608_CastExpr(void) = default;

	inline bool operator==(_1e4368608_CastExpr _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e4368608_CastExpr _other) { return !this->operator==(_other); }


};
struct _1e43689b0_NsSelectionExpr {
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _field_ns = jule::Slice<jule::Ptr<_20cd9e6ec_Token>>();
	jule::Ptr<_20cd9e6ec_Token> _field_ident = jule::Ptr<_20cd9e6ec_Token>();
	

	_1e43689b0_NsSelectionExpr(void) = default;

	inline bool operator==(_1e43689b0_NsSelectionExpr _other) {
		return 
			this->_field_ns == _other._field_ns &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1e43689b0_NsSelectionExpr _other) { return !this->operator==(_other); }


};
struct _1e4368e33_SubIdentExpr {
	jule::Bool _field_is_self = jule::Bool();
	jule::Ptr<_1e43659e0_Expr> _field_expr = jule::Ptr<_1e43659e0_Expr>();
	jule::Ptr<_20cd9e6ec_Token> _field_ident = jule::Ptr<_20cd9e6ec_Token>();
	

	_1e4368e33_SubIdentExpr(void) = default;

	inline bool operator==(_1e4368e33_SubIdentExpr _other) {
		return 
			this->_field_is_self == _other._field_is_self &&
			this->_field_expr == _other._field_expr &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1e4368e33_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1e43693a6_BinopExpr {
	jule::Ptr<_1e43659e0_Expr> _field_left = jule::Ptr<_1e43659e0_Expr>();
	jule::Ptr<_1e43659e0_Expr> _field_right = jule::Ptr<_1e43659e0_Expr>();
	jule::Ptr<_20cd9e6ec_Token> _field_op = jule::Ptr<_20cd9e6ec_Token>();
	

	_1e43693a6_BinopExpr(void) = default;

	inline bool operator==(_1e43693a6_BinopExpr _other) {
		return 
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1e43693a6_BinopExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e4369e34_unhandled(_1e43699b1_FnCallExpr*);
inline jule::Bool _1e436a198_ignored(_1e43699b1_FnCallExpr*);
struct _1e43699b1_FnCallExpr {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Ptr<_1e43659e0_Expr> _field_expr = jule::Ptr<_1e43659e0_Expr>();
	jule::Slice<jule::Ptr<_1e436257a_TypeDecl>> _field_generics = jule::Slice<jule::Ptr<_1e436257a_TypeDecl>>();
	jule::Slice<jule::Ptr<_1e43659e0_Expr>> _field_args = jule::Slice<jule::Ptr<_1e43659e0_Expr>>();
	jule::Ptr<_1e43702ad_ScopeTree> _field_exception = jule::Ptr<_1e43702ad_ScopeTree>();
	

	_1e43699b1_FnCallExpr(void) = default;

	inline bool operator==(_1e43699b1_FnCallExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_generics == _other._field_generics &&
			this->_field_args == _other._field_args &&
			this->_field_exception == _other._field_exception;
	}

	inline bool operator!=(_1e43699b1_FnCallExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e436a82a_is_targeted(_1e436a4c8_FieldExprPair*);
struct _1e436a4c8_FieldExprPair {
	jule::Ptr<_20cd9e6ec_Token> _field_field = jule::Ptr<_20cd9e6ec_Token>();
	jule::Ptr<_1e43659e0_Expr> _field_expr = jule::Ptr<_1e43659e0_Expr>();
	

	_1e436a4c8_FieldExprPair(void) = default;

	inline bool operator==(_1e436a4c8_FieldExprPair _other) {
		return 
			this->_field_field == _other._field_field &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e436a4c8_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1e436ac9d_StructLit {
	jule::Ptr<_20cd9e6ec_Token> _field_end = jule::Ptr<_20cd9e6ec_Token>();
	jule::Ptr<_1e436257a_TypeDecl> _field_kind = jule::Ptr<_1e436257a_TypeDecl>();
	jule::Slice<jule::Ptr<_1e43659e0_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1e43659e0_Expr>>();
	

	_1e436ac9d_StructLit(void) = default;

	inline bool operator==(_1e436ac9d_StructLit _other) {
		return 
			this->_field_end == _other._field_end &&
			this->_field_kind == _other._field_kind &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1e436ac9d_StructLit _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e436b573_is_empty(_1e436b221_BraceLit*);
struct _1e436b221_BraceLit {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Ptr<_20cd9e6ec_Token> _field_end = jule::Ptr<_20cd9e6ec_Token>();
	jule::Slice<jule::Ptr<_1e43659e0_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1e43659e0_Expr>>();
	

	_1e436b221_BraceLit(void) = default;

	inline bool operator==(_1e436b221_BraceLit _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1e436b221_BraceLit _other) { return !this->operator==(_other); }


};
struct _1e436b9e6_KeyValPair {
	jule::Ptr<_1e43659e0_Expr> _field_key = jule::Ptr<_1e43659e0_Expr>();
	jule::Ptr<_1e43659e0_Expr> _field_val = jule::Ptr<_1e43659e0_Expr>();
	jule::Ptr<_20cd9e6ec_Token> _field_colon = jule::Ptr<_20cd9e6ec_Token>();
	

	_1e436b9e6_KeyValPair(void) = default;

	inline bool operator==(_1e436b9e6_KeyValPair _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val &&
			this->_field_colon == _other._field_colon;
	}

	inline bool operator!=(_1e436b9e6_KeyValPair _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e436c5da_is_empty(_1e436be69_SliceExpr*);
struct _1e436be69_SliceExpr {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Ptr<_20cd9e6ec_Token> _field_end = jule::Ptr<_20cd9e6ec_Token>();
	jule::Slice<jule::Ptr<_1e43659e0_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1e43659e0_Expr>>();
	

	_1e436be69_SliceExpr(void) = default;

	inline bool operator==(_1e436be69_SliceExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1e436be69_SliceExpr _other) { return !this->operator==(_other); }


};
struct _1e436ca4c_IndexingExpr {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Ptr<_20cd9e6ec_Token> _field_end = jule::Ptr<_20cd9e6ec_Token>();
	jule::Ptr<_1e43659e0_Expr> _field_expr = jule::Ptr<_1e43659e0_Expr>();
	jule::Ptr<_1e43659e0_Expr> _field_index = jule::Ptr<_1e43659e0_Expr>();
	

	_1e436ca4c_IndexingExpr(void) = default;

	inline bool operator==(_1e436ca4c_IndexingExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_expr == _other._field_expr &&
			this->_field_index == _other._field_index;
	}

	inline bool operator!=(_1e436ca4c_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1e436d157_SlicingExpr {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Ptr<_20cd9e6ec_Token> _field_end = jule::Ptr<_20cd9e6ec_Token>();
	jule::Ptr<_1e43659e0_Expr> _field_expr = jule::Ptr<_1e43659e0_Expr>();
	jule::Ptr<_1e43659e0_Expr> _field_start = jule::Ptr<_1e43659e0_Expr>();
	jule::Ptr<_1e43659e0_Expr> _field_to = jule::Ptr<_1e43659e0_Expr>();
	

	_1e436d157_SlicingExpr(void) = default;

	inline bool operator==(_1e436d157_SlicingExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_expr == _other._field_expr &&
			this->_field_start == _other._field_start &&
			this->_field_to == _other._field_to;
	}

	inline bool operator!=(_1e436d157_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1e436d50e_GenericDecl {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Str _field_ident = jule::Str();
	

	_1e436d50e_GenericDecl(void) = default;

	inline bool operator==(_1e436d50e_GenericDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1e436d50e_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1e436d8b6_LabelSt {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Str _field_ident = jule::Str();
	

	_1e436d8b6_LabelSt(void) = default;

	inline bool operator==(_1e436d8b6_LabelSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1e436d8b6_LabelSt _other) { return !this->operator==(_other); }


};
struct _1e436dc6d_GotoSt {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Ptr<_20cd9e6ec_Token> _field_label = jule::Ptr<_20cd9e6ec_Token>();
	

	_1e436dc6d_GotoSt(void) = default;

	inline bool operator==(_1e436dc6d_GotoSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_1e436dc6d_GotoSt _other) { return !this->operator==(_other); }


};
struct _1e436e059_FallSt {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	

	_1e436e059_FallSt(void) = default;

	inline bool operator==(_1e436e059_FallSt _other) {
		return 
			this->_field_token == _other._field_token;
	}

	inline bool operator!=(_1e436e059_FallSt _other) { return !this->operator==(_other); }


};
struct _1e436e664_AssignLeft {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1e43659e0_Expr> _field_expr = jule::Ptr<_1e43659e0_Expr>();
	

	_1e436e664_AssignLeft(void) = default;

	inline bool operator==(_1e436e664_AssignLeft _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_reference == _other._field_reference &&
			this->_field_ident == _other._field_ident &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e436e664_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1e436eba3_AssignSt {
	jule::Bool _field_declarative = jule::Bool();
	jule::Ptr<_20cd9e6ec_Token> _field_setter = jule::Ptr<_20cd9e6ec_Token>();
	jule::Slice<jule::Ptr<_1e436e664_AssignLeft>> _field_left = jule::Slice<jule::Ptr<_1e436e664_AssignLeft>>();
	jule::Ptr<_1e43659e0_Expr> _field_right = jule::Ptr<_1e43659e0_Expr>();
	

	_1e436eba3_AssignSt(void) = default;

	inline bool operator==(_1e436eba3_AssignSt _other) {
		return 
			this->_field_declarative == _other._field_declarative &&
			this->_field_setter == _other._field_setter &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_1e436eba3_AssignSt _other) { return !this->operator==(_other); }


};
struct _1e43702ad_ScopeTree {
	jule::Ptr<_1e43702ad_ScopeTree> _field_parent = jule::Ptr<_1e43702ad_ScopeTree>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_deferred = jule::Bool();
	jule::Slice<_1e43314d3_Node> _field_stmts = jule::Slice<_1e43314d3_Node>();
	jule::Ptr<_20cd9e6ec_Token> _field_end = jule::Ptr<_20cd9e6ec_Token>();
	

	_1e43702ad_ScopeTree(void) = default;

	inline bool operator==(_1e43702ad_ScopeTree _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_deferred == _other._field_deferred &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_end == _other._field_end;
	}

	inline bool operator!=(_1e43702ad_ScopeTree _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e4370ce7_is_self(_1e4370984_ParamDecl*);
struct _1e4370984_ParamDecl {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1e436257a_TypeDecl> _field_kind = jule::Ptr<_1e436257a_TypeDecl>();
	jule::Str _field_ident = jule::Str();
	

	_1e4370984_ParamDecl(void) = default;

	inline bool operator==(_1e4370984_ParamDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1e4370984_ParamDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e4372106_is_anon(_1e4371ca4_FnDecl*);
struct _1e4371ca4_FnDecl {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Bool _field_global = jule::Bool();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_exceptional = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1e43620c4_Directive>> _field_directives = jule::Slice<jule::Ptr<_1e43620c4_Directive>>();
	jule::Ptr<_1e43702ad_ScopeTree> _field_scope = jule::Ptr<_1e43702ad_ScopeTree>();
	jule::Slice<jule::Ptr<_1e436d50e_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1e436d50e_GenericDecl>>();
	jule::Ptr<_1e436535d_RetTypeDecl> _field_result = jule::Ptr<_1e436535d_RetTypeDecl>();
	jule::Slice<jule::Ptr<_1e4370984_ParamDecl>> _field_params = jule::Slice<jule::Ptr<_1e4370984_ParamDecl>>();
	

	_1e4371ca4_FnDecl(void) = default;

	inline bool operator==(_1e4371ca4_FnDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_global == _other._field_global &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_statically == _other._field_statically &&
			this->_field_exceptional == _other._field_exceptional &&
			this->_field_ident == _other._field_ident &&
			this->_field_directives == _other._field_directives &&
			this->_field_scope == _other._field_scope &&
			this->_field_generics == _other._field_generics &&
			this->_field_result == _other._field_result &&
			this->_field_params == _other._field_params;
	}

	inline bool operator!=(_1e4371ca4_FnDecl _other) { return !this->operator==(_other); }


};
struct _1e4372c83_VarDecl {
	jule::Ptr<_1e43702ad_ScopeTree> _field_scope = jule::Ptr<_1e43702ad_ScopeTree>();
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_constant = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Slice<jule::Ptr<_1e43620c4_Directive>> _field_directives = jule::Slice<jule::Ptr<_1e43620c4_Directive>>();
	jule::Ptr<_1e436257a_TypeDecl> _field_kind = jule::Ptr<_1e436257a_TypeDecl>();
	jule::Ptr<_1e43659e0_Expr> _field_expr = jule::Ptr<_1e43659e0_Expr>();
	

	_1e4372c83_VarDecl(void) = default;

	inline bool operator==(_1e4372c83_VarDecl _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_constant == _other._field_constant &&
			this->_field_statically == _other._field_statically &&
			this->_field_reference == _other._field_reference &&
			this->_field_directives == _other._field_directives &&
			this->_field_kind == _other._field_kind &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e4372c83_VarDecl _other) { return !this->operator==(_other); }


};
struct _1e437313a_RetSt {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Ptr<_1e43659e0_Expr> _field_expr = jule::Ptr<_1e43659e0_Expr>();
	

	_1e437313a_RetSt(void) = default;

	inline bool operator==(_1e437313a_RetSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e437313a_RetSt _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e4373a0e_is_inf(_1e43736ac_Iter*);
struct _1e43736ac_Iter {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Any _field_kind = jule::Any();
	jule::Ptr<_1e43702ad_ScopeTree> _field_scope = jule::Ptr<_1e43702ad_ScopeTree>();
	

	_1e43736ac_Iter(void) = default;

	inline bool operator==(_1e43736ac_Iter _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_kind == _other._field_kind &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1e43736ac_Iter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e43742d4_is_while_next(_1e4373e82_WhileKind*);
struct _1e4373e82_WhileKind {
	jule::Ptr<_1e43659e0_Expr> _field_expr = jule::Ptr<_1e43659e0_Expr>();
	jule::Any _field_next = jule::Any();
	jule::Ptr<_20cd9e6ec_Token> _field_next_token = jule::Ptr<_20cd9e6ec_Token>();
	

	_1e4373e82_WhileKind(void) = default;

	inline bool operator==(_1e4373e82_WhileKind _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_next == _other._field_next &&
			this->_field_next_token == _other._field_next_token;
	}

	inline bool operator!=(_1e4373e82_WhileKind _other) { return !this->operator==(_other); }


};
struct _1e4374823_RangeKind {
	jule::Ptr<_20cd9e6ec_Token> _field_in_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Ptr<_1e43659e0_Expr> _field_expr = jule::Ptr<_1e43659e0_Expr>();
	jule::Ptr<_1e4372c83_VarDecl> _field_key_a = jule::Ptr<_1e4372c83_VarDecl>();
	jule::Ptr<_1e4372c83_VarDecl> _field_key_b = jule::Ptr<_1e4372c83_VarDecl>();
	

	_1e4374823_RangeKind(void) = default;

	inline bool operator==(_1e4374823_RangeKind _other) {
		return 
			this->_field_in_token == _other._field_in_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_key_a == _other._field_key_a &&
			this->_field_key_b == _other._field_key_b;
	}

	inline bool operator!=(_1e4374823_RangeKind _other) { return !this->operator==(_other); }


};
struct _1e4374bca_BreakSt {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Ptr<_20cd9e6ec_Token> _field_label = jule::Ptr<_20cd9e6ec_Token>();
	

	_1e4374bca_BreakSt(void) = default;

	inline bool operator==(_1e4374bca_BreakSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_1e4374bca_BreakSt _other) { return !this->operator==(_other); }


};
struct _1e4375082_ContSt {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Ptr<_20cd9e6ec_Token> _field_label = jule::Ptr<_20cd9e6ec_Token>();
	

	_1e4375082_ContSt(void) = default;

	inline bool operator==(_1e4375082_ContSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_1e4375082_ContSt _other) { return !this->operator==(_other); }


};
struct _1e4375505_If {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Ptr<_1e43659e0_Expr> _field_expr = jule::Ptr<_1e43659e0_Expr>();
	jule::Ptr<_1e43702ad_ScopeTree> _field_scope = jule::Ptr<_1e43702ad_ScopeTree>();
	

	_1e4375505_If(void) = default;

	inline bool operator==(_1e4375505_If _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1e4375505_If _other) { return !this->operator==(_other); }


};
struct _1e43758ac_Else {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Ptr<_1e43702ad_ScopeTree> _field_scope = jule::Ptr<_1e43702ad_ScopeTree>();
	

	_1e43758ac_Else(void) = default;

	inline bool operator==(_1e43758ac_Else _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1e43758ac_Else _other) { return !this->operator==(_other); }


};
struct _1e4375d30_Conditional {
	jule::Ptr<_1e4375505_If> _field_head = jule::Ptr<_1e4375505_If>();
	jule::Slice<jule::Ptr<_1e4375505_If>> _field_tail = jule::Slice<jule::Ptr<_1e4375505_If>>();
	jule::Ptr<_1e43758ac_Else> _field_default = jule::Ptr<_1e43758ac_Else>();
	

	_1e4375d30_Conditional(void) = default;

	inline bool operator==(_1e4375d30_Conditional _other) {
		return 
			this->_field_head == _other._field_head &&
			this->_field_tail == _other._field_tail &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1e4375d30_Conditional _other) { return !this->operator==(_other); }


};
struct _1e4376506_TypeAliasDecl {
	jule::Ptr<_1e43702ad_ScopeTree> _field_scope = jule::Ptr<_1e43702ad_ScopeTree>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1e436257a_TypeDecl> _field_kind = jule::Ptr<_1e436257a_TypeDecl>();
	

	_1e4376506_TypeAliasDecl(void) = default;

	inline bool operator==(_1e4376506_TypeAliasDecl _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1e4376506_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1e4376979_Case {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Ptr<_1e43702ad_ScopeTree> _field_scope = jule::Ptr<_1e43702ad_ScopeTree>();
	jule::Slice<jule::Ptr<_1e43659e0_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1e43659e0_Expr>>();
	

	_1e4376979_Case(void) = default;

	inline bool operator==(_1e4376979_Case _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_scope == _other._field_scope &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1e4376979_Case _other) { return !this->operator==(_other); }


};
struct _1e4377150_MatchCase {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Ptr<_20cd9e6ec_Token> _field_end = jule::Ptr<_20cd9e6ec_Token>();
	jule::Bool _field_type_match = jule::Bool();
	jule::Ptr<_1e43659e0_Expr> _field_expr = jule::Ptr<_1e43659e0_Expr>();
	jule::Slice<jule::Ptr<_1e4376979_Case>> _field_cases = jule::Slice<jule::Ptr<_1e4376979_Case>>();
	jule::Ptr<_1e43758ac_Else> _field_default = jule::Ptr<_1e43758ac_Else>();
	

	_1e4377150_MatchCase(void) = default;

	inline bool operator==(_1e4377150_MatchCase _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_type_match == _other._field_type_match &&
			this->_field_expr == _other._field_expr &&
			this->_field_cases == _other._field_cases &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1e4377150_MatchCase _other) { return !this->operator==(_other); }


};
struct _1e43778e2_UseDecl {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Str _field_link_path = jule::Str();
	jule::Str _field_alias = jule::Str();
	jule::Bool _field_full = jule::Bool();
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _field_selected = jule::Slice<jule::Ptr<_20cd9e6ec_Token>>();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_std = jule::Bool();
	

	_1e43778e2_UseDecl(void) = default;

	inline bool operator==(_1e43778e2_UseDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_link_path == _other._field_link_path &&
			this->_field_alias == _other._field_alias &&
			this->_field_full == _other._field_full &&
			this->_field_selected == _other._field_selected &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_std == _other._field_std;
	}

	inline bool operator!=(_1e43778e2_UseDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e43783e8_auto_expr(_1e4377d65_EnumItemDecl*);
struct _1e4377d65_EnumItemDecl {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1e43659e0_Expr> _field_expr = jule::Ptr<_1e43659e0_Expr>();
	

	_1e4377d65_EnumItemDecl(void) = default;

	inline bool operator==(_1e4377d65_EnumItemDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e4377d65_EnumItemDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e4378d11_default_typed(_1e43789ae_EnumDecl*);
struct _1e43789ae_EnumDecl {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1e436257a_TypeDecl> _field_kind = jule::Ptr<_1e436257a_TypeDecl>();
	jule::Slice<jule::Ptr<_1e4377d65_EnumItemDecl>> _field_items = jule::Slice<jule::Ptr<_1e4377d65_EnumItemDecl>>();
	jule::Ptr<_20cd9e6ec_Token> _field_end = jule::Ptr<_20cd9e6ec_Token>();
	

	_1e43789ae_EnumDecl(void) = default;

	inline bool operator==(_1e43789ae_EnumDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_items == _other._field_items &&
			this->_field_end == _other._field_end;
	}

	inline bool operator!=(_1e43789ae_EnumDecl _other) { return !this->operator==(_other); }


};
struct _1e43794d7_FieldDecl {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1e436257a_TypeDecl> _field_kind = jule::Ptr<_1e436257a_TypeDecl>();
	jule::Ptr<_1e43659e0_Expr> _field_default = jule::Ptr<_1e43659e0_Expr>();
	

	_1e43794d7_FieldDecl(void) = default;

	inline bool operator==(_1e43794d7_FieldDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1e43794d7_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1e4379d45_StructDecl {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Ptr<_20cd9e6ec_Token> _field_end = jule::Ptr<_20cd9e6ec_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1e43794d7_FieldDecl>> _field_fields = jule::Slice<jule::Ptr<_1e43794d7_FieldDecl>>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1e43620c4_Directive>> _field_directives = jule::Slice<jule::Ptr<_1e43620c4_Directive>>();
	jule::Slice<jule::Ptr<_1e436d50e_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1e436d50e_GenericDecl>>();
	

	_1e4379d45_StructDecl(void) = default;

	inline bool operator==(_1e4379d45_StructDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_ident == _other._field_ident &&
			this->_field_fields == _other._field_fields &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_directives == _other._field_directives &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_1e4379d45_StructDecl _other) { return !this->operator==(_other); }


};
struct _1e437a450_TraitDecl {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Ptr<_20cd9e6ec_Token> _field_end = jule::Ptr<_20cd9e6ec_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_public = jule::Bool();
	jule::Slice<jule::Ptr<_1e4371ca4_FnDecl>> _field_methods = jule::Slice<jule::Ptr<_1e4371ca4_FnDecl>>();
	

	_1e437a450_TraitDecl(void) = default;

	inline bool operator==(_1e437a450_TraitDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_ident == _other._field_ident &&
			this->_field_public == _other._field_public &&
			this->_field_methods == _other._field_methods;
	}

	inline bool operator!=(_1e437a450_TraitDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e437adbd_is_trait_impl(_1e437aa5a_Impl*);
inline jule::Bool _1e437b132_is_struct_impl(_1e437aa5a_Impl*);
struct _1e437aa5a_Impl {
	jule::Ptr<_20cd9e6ec_Token> _field_end = jule::Ptr<_20cd9e6ec_Token>();
	jule::Ptr<_1e436257a_TypeDecl> _field_base = jule::Ptr<_1e436257a_TypeDecl>();
	jule::Ptr<_1e436257a_TypeDecl> _field_dest = jule::Ptr<_1e436257a_TypeDecl>();
	jule::Slice<jule::Ptr<_1e4371ca4_FnDecl>> _field_methods = jule::Slice<jule::Ptr<_1e4371ca4_FnDecl>>();
	jule::Slice<jule::Ptr<_1e4372c83_VarDecl>> _field_statics = jule::Slice<jule::Ptr<_1e4372c83_VarDecl>>();
	

	_1e437aa5a_Impl(void) = default;

	inline bool operator==(_1e437aa5a_Impl _other) {
		return 
			this->_field_end == _other._field_end &&
			this->_field_base == _other._field_base &&
			this->_field_dest == _other._field_dest &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics;
	}

	inline bool operator!=(_1e437aa5a_Impl _other) { return !this->operator==(_other); }


};
struct _1e5aa9e25_FloatInfo {
	jule::U64 _field_mantbits = jule::U64();
	jule::U64 _field_expbits = jule::U64();
	jule::I64 _field_bias = jule::I64();
	

	_1e5aa9e25_FloatInfo(void) = default;

	inline bool operator==(_1e5aa9e25_FloatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1e5aa9e25_FloatInfo _other) { return !this->operator==(_other); }


};
struct _1e5665e21_DecimalSlice {
	jule::Slice<jule::U8> _field_d = jule::Slice<jule::U8>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();
	

	_1e5665e21_DecimalSlice(void) = default;

	inline bool operator==(_1e5665e21_DecimalSlice _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg;
	}

	inline bool operator!=(_1e5665e21_DecimalSlice _other) { return !this->operator==(_other); }


};
struct _1e5c2e3eb_LeftCheat {
	jule::I64 _field_delta = jule::I64();
	jule::Str _field_cutoff = jule::Str();
	

	_1e5c2e3eb_LeftCheat(void) = default;

	inline bool operator==(_1e5c2e3eb_LeftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1e5c2e3eb_LeftCheat _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e5c2c1a7_set(_1e5c2e5d8_Decimal*, jule::Str);
inline std::tuple<jule::U64,jule::Bool> _1e5c2c2d9_float_bits(_1e5c2e5d8_Decimal*, _1e5aa9e25_FloatInfo&);
inline void _1e5c2e7c5_assign(_1e5c2e5d8_Decimal*, jule::U64);
inline void _1e5c2e907_shift(_1e5c2e5d8_Decimal*, jule::I64);
inline void _1e5c2ea39_round_down(_1e5c2e5d8_Decimal*, jule::I64);
inline void _1e5c2eb6b_round_up(_1e5c2e5d8_Decimal*, jule::I64);
inline void _1e5c2ec9d_round(_1e5c2e5d8_Decimal*, jule::I64);
inline jule::U64 _1e5c2edd0_rounded_integer(_1e5c2e5d8_Decimal*);
struct _1e5c2e5d8_Decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();
	jule::Bool _field_trunc = jule::Bool();
	

	_1e5c2e5d8_Decimal(void) = default;

	inline bool operator==(_1e5c2e5d8_Decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1e5c2e5d8_Decimal _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c968bb88_Const> static__1c968ab87_new_i64(jule::I64);
inline jule::Ptr<_1c968bb88_Const> static__1c968bd75_new_u64(jule::U64);
inline jule::Ptr<_1c968bb88_Const> static__1c968c0c8_new_bool(jule::Bool);
inline jule::Ptr<_1c968bb88_Const> static__1c968c370_new_str(jule::Str);
inline jule::Ptr<_1c968bb88_Const> static__1c968c617_new_f64(jule::F64);
inline jule::Ptr<_1c968bb88_Const> static__1c968c815_new_nil(void);
inline jule::I64 _1c968ce0e_read_i64(_1c968bb88_Const*);
inline jule::U64 _1c968d173_read_u64(_1c968bb88_Const*);
inline jule::Bool _1c968d3d7_read_bool(_1c968bb88_Const*);
inline jule::Str _1c968d64b_read_str(_1c968bb88_Const*);
inline jule::F64 _1c968d8b0_read_f64(_1c968bb88_Const*);
inline jule::I64 _1c968db24_as_i64(_1c968bb88_Const*);
inline jule::U64 _1c968dd88_as_u64(_1c968bb88_Const*);
inline jule::F64 _1c968e0ec_as_f64(_1c968bb88_Const*);
inline void _1c968e372_set_i64(_1c968bb88_Const*, jule::I64);
inline void _1c968e5e7_set_u64(_1c968bb88_Const*, jule::U64);
inline void _1c968e86c_set_bool(_1c968bb88_Const*, jule::Bool);
inline void _1c968eae2_set_str(_1c968bb88_Const*, jule::Str);
inline void _1c968ed67_set_f64(_1c968bb88_Const*, jule::F64);
inline void _1c9690043_set_nil(_1c968bb88_Const*);
inline jule::Bool _1c96902a7_is_i64(_1c968bb88_Const*);
inline jule::Bool _1c969051b_is_u64(_1c968bb88_Const*);
inline jule::Bool _1c9690780_is_bool(_1c968bb88_Const*);
inline jule::Bool _1c96909e4_is_str(_1c968bb88_Const*);
inline jule::Bool _1c9690c58_is_f64(_1c968bb88_Const*);
inline jule::Bool _1c9690ebc_is_nil(_1c968bb88_Const*);
inline jule::Bool _1c96912ca_are_same_types(_1c968bb88_Const*, _1c968bb88_Const);
inline jule::Bool _1c96915d8_and(_1c968bb88_Const*, _1c968bb88_Const);
inline jule::Bool _1c96918e6_or(_1c968bb88_Const*, _1c968bb88_Const);
inline jule::Bool _1c9691c04_eq(_1c968bb88_Const*, _1c968bb88_Const);
inline jule::Bool _1c9692012_lt(_1c968bb88_Const*, _1c968bb88_Const);
inline jule::Bool _1c9692320_lt_eq(_1c968bb88_Const*, _1c968bb88_Const);
inline jule::Bool _1c969262d_gt(_1c968bb88_Const*, _1c968bb88_Const);
inline jule::Bool _1c969293b_gt_eq(_1c968bb88_Const*, _1c968bb88_Const);
inline jule::Bool _1c9692c49_add(_1c968bb88_Const*, _1c968bb88_Const);
inline jule::Bool _1c9693057_sub(_1c968bb88_Const*, _1c968bb88_Const);
inline jule::Bool _1c9693365_mul(_1c968bb88_Const*, _1c968bb88_Const);
inline jule::Bool _1c9693673_div(_1c968bb88_Const*, _1c968bb88_Const);
inline jule::Bool _1c9693981_mod(_1c968bb88_Const*, _1c968bb88_Const);
inline jule::Bool _1c9693c8e_bitwise_and(_1c968bb88_Const*, _1c968bb88_Const);
inline jule::Bool _1c969409c_bitwise_or(_1c968bb88_Const*, _1c968bb88_Const);
inline jule::Bool _1c96943aa_xor(_1c968bb88_Const*, _1c968bb88_Const);
inline jule::Bool _1c96946b8_lshift(_1c968bb88_Const*, _1c968bb88_Const);
inline jule::Bool _1c96949c6_rshift(_1c968bb88_Const*, _1c968bb88_Const);
struct _1c968bb88_Const {
	jule::Any _field_data = jule::Any();
	

	_1c968bb88_Const(void) = default;

	inline jule::Bool operator==(_1c968bb88_Const _other) { return _1c9691c04_eq(this, _other); }

	inline bool operator!=(_1c968bb88_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1c968bb88_Const _other) { return _1c969262d_gt(this, _other); }

	inline jule::Bool operator>=(_1c968bb88_Const _other) { return _1c969293b_gt_eq(this, _other); }

	inline jule::Bool operator<(_1c968bb88_Const _other) { return _1c9692012_lt(this, _other); }

	inline jule::Bool operator<=(_1c968bb88_Const _other) { return _1c9692320_lt_eq(this, _other); }


};
inline jule::Ptr<_1e434014b_FieldIns> _1e4338b39_instance(jule::Ptr<_1e43542c5_Field>);
struct _1e43542c5_Field {
	jule::Ptr<_1e43360cb_Struct> _field_owner = jule::Ptr<_1e43360cb_Struct>();
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1c977858d_TypeSymbol> _field_kind = jule::Ptr<_1c977858d_TypeSymbol>();
	jule::Ptr<_1e43659e0_Expr> _field_default = jule::Ptr<_1e43659e0_Expr>();
	

	_1e43542c5_Field(void) = default;

	inline bool operator==(_1e43542c5_Field _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1e43542c5_Field _other) { return !this->operator==(_other); }


};
struct _1e434a783_Operators {
	jule::Ptr<_1e4383018_FnIns> _field_eq = jule::Ptr<_1e4383018_FnIns>();
	jule::Ptr<_1e4383018_FnIns> _field_gt = jule::Ptr<_1e4383018_FnIns>();
	jule::Ptr<_1e4383018_FnIns> _field_gt_eq = jule::Ptr<_1e4383018_FnIns>();
	jule::Ptr<_1e4383018_FnIns> _field_lt = jule::Ptr<_1e4383018_FnIns>();
	jule::Ptr<_1e4383018_FnIns> _field_lt_eq = jule::Ptr<_1e4383018_FnIns>();
	jule::Ptr<_1e4383018_FnIns> _field_shl = jule::Ptr<_1e4383018_FnIns>();
	jule::Ptr<_1e4383018_FnIns> _field_shr = jule::Ptr<_1e4383018_FnIns>();
	jule::Ptr<_1e4383018_FnIns> _field_add = jule::Ptr<_1e4383018_FnIns>();
	jule::Ptr<_1e4383018_FnIns> _field_sub = jule::Ptr<_1e4383018_FnIns>();
	jule::Ptr<_1e4383018_FnIns> _field_div = jule::Ptr<_1e4383018_FnIns>();
	jule::Ptr<_1e4383018_FnIns> _field_mul = jule::Ptr<_1e4383018_FnIns>();
	jule::Ptr<_1e4383018_FnIns> _field_mod = jule::Ptr<_1e4383018_FnIns>();
	jule::Ptr<_1e4383018_FnIns> _field_bit_and = jule::Ptr<_1e4383018_FnIns>();
	jule::Ptr<_1e4383018_FnIns> _field_bit_or = jule::Ptr<_1e4383018_FnIns>();
	jule::Ptr<_1e4383018_FnIns> _field_bit_xor = jule::Ptr<_1e4383018_FnIns>();
	jule::Ptr<_1e4383018_FnIns> _field_neg = jule::Ptr<_1e4383018_FnIns>();
	jule::Ptr<_1e4383018_FnIns> _field_pos = jule::Ptr<_1e4383018_FnIns>();
	jule::Ptr<_1e4383018_FnIns> _field_bit_not = jule::Ptr<_1e4383018_FnIns>();
	jule::Ptr<_1e4383018_FnIns> _field_add_assign = jule::Ptr<_1e4383018_FnIns>();
	jule::Ptr<_1e4383018_FnIns> _field_sub_assign = jule::Ptr<_1e4383018_FnIns>();
	jule::Ptr<_1e4383018_FnIns> _field_div_assign = jule::Ptr<_1e4383018_FnIns>();
	jule::Ptr<_1e4383018_FnIns> _field_mul_assign = jule::Ptr<_1e4383018_FnIns>();
	jule::Ptr<_1e4383018_FnIns> _field_mod_assign = jule::Ptr<_1e4383018_FnIns>();
	jule::Ptr<_1e4383018_FnIns> _field_shl_assign = jule::Ptr<_1e4383018_FnIns>();
	jule::Ptr<_1e4383018_FnIns> _field_shr_assign = jule::Ptr<_1e4383018_FnIns>();
	jule::Ptr<_1e4383018_FnIns> _field_bit_or_assign = jule::Ptr<_1e4383018_FnIns>();
	jule::Ptr<_1e4383018_FnIns> _field_bit_and_assign = jule::Ptr<_1e4383018_FnIns>();
	jule::Ptr<_1e4383018_FnIns> _field_bit_xor_assign = jule::Ptr<_1e4383018_FnIns>();
	

	_1e434a783_Operators(void) = default;

	inline bool operator==(_1e434a783_Operators _other) {
		return 
			this->_field_eq == _other._field_eq &&
			this->_field_gt == _other._field_gt &&
			this->_field_gt_eq == _other._field_gt_eq &&
			this->_field_lt == _other._field_lt &&
			this->_field_lt_eq == _other._field_lt_eq &&
			this->_field_shl == _other._field_shl &&
			this->_field_shr == _other._field_shr &&
			this->_field_add == _other._field_add &&
			this->_field_sub == _other._field_sub &&
			this->_field_div == _other._field_div &&
			this->_field_mul == _other._field_mul &&
			this->_field_mod == _other._field_mod &&
			this->_field_bit_and == _other._field_bit_and &&
			this->_field_bit_or == _other._field_bit_or &&
			this->_field_bit_xor == _other._field_bit_xor &&
			this->_field_neg == _other._field_neg &&
			this->_field_pos == _other._field_pos &&
			this->_field_bit_not == _other._field_bit_not &&
			this->_field_add_assign == _other._field_add_assign &&
			this->_field_sub_assign == _other._field_sub_assign &&
			this->_field_div_assign == _other._field_div_assign &&
			this->_field_mul_assign == _other._field_mul_assign &&
			this->_field_mod_assign == _other._field_mod_assign &&
			this->_field_shl_assign == _other._field_shl_assign &&
			this->_field_shr_assign == _other._field_shr_assign &&
			this->_field_bit_or_assign == _other._field_bit_or_assign &&
			this->_field_bit_and_assign == _other._field_bit_and_assign &&
			this->_field_bit_xor_assign == _other._field_bit_xor_assign;
	}

	inline bool operator!=(_1e434a783_Operators _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e43462ea_StructIns> _1e4339101_instance(jule::Ptr<_1e43360cb_Struct>);
inline jule::Ptr<_1e43462ea_StructIns> _1e433a6b8_append_instance(_1e43360cb_Struct*, jule::Ptr<_1e43462ea_StructIns>&);
inline jule::Ptr<_1e4380576_Fn> _1e433b71e_find_method(_1e43360cb_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1e46c6eb6_Var> _1e433ce90_find_static(_1e43360cb_Struct*, jule::Str);
inline jule::Ptr<_1e43542c5_Field> _1e433e17d_find_field(_1e43360cb_Struct*, jule::Str);
inline jule::Bool _1e4340a75_is_implements(_1e43360cb_Struct*, jule::Ptr<_1e43d8d0a_Trait>);
inline jule::Bool _1e433ab2a_is_derives(_1e43360cb_Struct*, jule::Str);
inline jule::Bool _1e43484a6_is_uses(_1e43360cb_Struct*, jule::Ptr<_1e43360cb_Struct>);
inline jule::Bool _1e434a530_has_ref_accessible(_1e43360cb_Struct*);
struct _1e43360cb_Struct {
	jule::Ptr<_1e46ac452_Sema> _field_sema = jule::Ptr<_1e46ac452_Sema>();
	jule::Slice<jule::Ptr<_1e43360cb_Struct>> _field_depends = jule::Slice<jule::Ptr<_1e43360cb_Struct>>();
	jule::Slice<jule::Ptr<_1e43360cb_Struct>> _field_uses = jule::Slice<jule::Ptr<_1e43360cb_Struct>>();
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1e43542c5_Field>> _field_fields = jule::Slice<jule::Ptr<_1e43542c5_Field>>();
	jule::Slice<jule::Ptr<_1e4380576_Fn>> _field_methods = jule::Slice<jule::Ptr<_1e4380576_Fn>>();
	jule::Slice<jule::Ptr<_1e46c6eb6_Var>> _field_statics = jule::Slice<jule::Ptr<_1e46c6eb6_Var>>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1e43620c4_Directive>> _field_directives = jule::Slice<jule::Ptr<_1e43620c4_Directive>>();
	jule::Slice<jule::Ptr<_1e436d50e_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1e436d50e_GenericDecl>>();
	jule::Slice<jule::Ptr<_1e43d8d0a_Trait>> _field_implements = jule::Slice<jule::Ptr<_1e43d8d0a_Trait>>();
	jule::Slice<jule::Ptr<_1e43462ea_StructIns>> _field_instances = jule::Slice<jule::Ptr<_1e43462ea_StructIns>>();
	

	_1e43360cb_Struct(void) = default;

	inline bool operator==(_1e43360cb_Struct _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_depends == _other._field_depends &&
			this->_field_uses == _other._field_uses &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_fields == _other._field_fields &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_directives == _other._field_directives &&
			this->_field_generics == _other._field_generics &&
			this->_field_implements == _other._field_implements &&
			this->_field_instances == _other._field_instances;
	}

	inline bool operator!=(_1e43360cb_Struct _other) { return !this->operator==(_other); }


};
struct _1e434014b_FieldIns {
	jule::Ptr<_1e43542c5_Field> _field_decl = jule::Ptr<_1e43542c5_Field>();
	jule::Ptr<_1c97746ee_TypeKind> _field_kind = jule::Ptr<_1c97746ee_TypeKind>();
	jule::Ptr<_1c974abc0_Data> _field_default = jule::Ptr<_1c974abc0_Data>();
	

	_1e434014b_FieldIns(void) = default;

	inline bool operator==(_1e434014b_FieldIns _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1e434014b_FieldIns _other) { return !this->operator==(_other); }


};
struct _1e4347a8d_OperandExprModel {
	jule::Ptr<_1c97746ee_TypeKind> _field_kind = jule::Ptr<_1c97746ee_TypeKind>();
	jule::Any _field_model = jule::Any();
	

	_1e4347a8d_OperandExprModel(void) = default;

	inline bool operator==(_1e4347a8d_OperandExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1e4347a8d_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1e435a8e7_BinopExprModel {
	jule::Ptr<_1e4347a8d_OperandExprModel> _field_left = jule::Ptr<_1e4347a8d_OperandExprModel>();
	jule::Ptr<_1e4347a8d_OperandExprModel> _field_right = jule::Ptr<_1e4347a8d_OperandExprModel>();
	jule::Ptr<_20cd9e6ec_Token> _field_op = jule::Ptr<_20cd9e6ec_Token>();
	

	_1e435a8e7_BinopExprModel(void) = default;

	inline bool operator==(_1e435a8e7_BinopExprModel _other) {
		return 
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1e435a8e7_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _1e435972b_UnaryExprModel {
	jule::Ptr<_1c974abc0_Data> _field_expr = jule::Ptr<_1c974abc0_Data>();
	jule::Ptr<_20cd9e6ec_Token> _field_op = jule::Ptr<_20cd9e6ec_Token>();
	

	_1e435972b_UnaryExprModel(void) = default;

	inline bool operator==(_1e435972b_UnaryExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1e435972b_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1e433773c_StructArgExprModel {
	jule::Ptr<_1e434014b_FieldIns> _field_field = jule::Ptr<_1e434014b_FieldIns>();
	jule::Any _field_expr = jule::Any();
	

	_1e433773c_StructArgExprModel(void) = default;

	inline bool operator==(_1e433773c_StructArgExprModel _other) {
		return 
			this->_field_field == _other._field_field &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e433773c_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1e433b004_StructLitExprModel {
	jule::Ptr<_1e43462ea_StructIns> _field_strct = jule::Ptr<_1e43462ea_StructIns>();
	jule::Slice<jule::Ptr<_1e433773c_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_1e433773c_StructArgExprModel>>();
	

	_1e433b004_StructLitExprModel(void) = default;

	inline bool operator==(_1e433b004_StructLitExprModel _other) {
		return 
			this->_field_strct == _other._field_strct &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1e433b004_StructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1e4331d63_AllocStructLitExprModel {
	jule::Ptr<_1e433b004_StructLitExprModel> _field_lit = jule::Ptr<_1e433b004_StructLitExprModel>();
	

	_1e4331d63_AllocStructLitExprModel(void) = default;

	inline bool operator==(_1e4331d63_AllocStructLitExprModel _other) {
		return 
			this->_field_lit == _other._field_lit;
	}

	inline bool operator!=(_1e4331d63_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1e434e7dc_CastingExprModel {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1c97746ee_TypeKind> _field_kind = jule::Ptr<_1c97746ee_TypeKind>();
	jule::Ptr<_1c97746ee_TypeKind> _field_expr_kind = jule::Ptr<_1c97746ee_TypeKind>();
	

	_1e434e7dc_CastingExprModel(void) = default;

	inline bool operator==(_1e434e7dc_CastingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_kind == _other._field_kind &&
			this->_field_expr_kind == _other._field_expr_kind;
	}

	inline bool operator!=(_1e434e7dc_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1e4354902_FnCallExprModel {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Ptr<_1e4383018_FnIns> _field_func = jule::Ptr<_1e4383018_FnIns>();
	jule::Bool _field_is_co = jule::Bool();
	jule::Any _field_expr = jule::Any();
	jule::Slice<jule::Any> _field_args = jule::Slice<jule::Any>();
	jule::Ptr<_1e46862c7_Scope> _field_except = jule::Ptr<_1e46862c7_Scope>();
	jule::Bool _field_assigned = jule::Bool();
	

	_1e4354902_FnCallExprModel(void) = default;

	inline bool operator==(_1e4354902_FnCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_func == _other._field_func &&
			this->_field_is_co == _other._field_is_co &&
			this->_field_expr == _other._field_expr &&
			this->_field_args == _other._field_args &&
			this->_field_except == _other._field_except &&
			this->_field_assigned == _other._field_assigned;
	}

	inline bool operator!=(_1e4354902_FnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e4354ade_SliceExprModel {
	jule::Ptr<_1c97746ee_TypeKind> _field_elem_kind = jule::Ptr<_1c97746ee_TypeKind>();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();
	

	_1e4354ade_SliceExprModel(void) = default;

	inline bool operator==(_1e4354ade_SliceExprModel _other) {
		return 
			this->_field_elem_kind == _other._field_elem_kind &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1e4354ade_SliceExprModel _other) { return !this->operator==(_other); }


};
struct _1e437b31e_IndexingExprModel {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Ptr<_1c974abc0_Data> _field_expr = jule::Ptr<_1c974abc0_Data>();
	jule::Ptr<_1c974abc0_Data> _field_index = jule::Ptr<_1c974abc0_Data>();
	

	_1e437b31e_IndexingExprModel(void) = default;

	inline bool operator==(_1e437b31e_IndexingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_index == _other._field_index;
	}

	inline bool operator!=(_1e437b31e_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1e437b50b_AnonFnExprModel {
	jule::Ptr<_1e4383018_FnIns> _field_func = jule::Ptr<_1e4383018_FnIns>();
	jule::Bool _field_global = jule::Bool();
	

	_1e437b50b_AnonFnExprModel(void) = default;

	inline bool operator==(_1e437b50b_AnonFnExprModel _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_global == _other._field_global;
	}

	inline bool operator!=(_1e437b50b_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1e437b6e8_KeyValPairExprModel {
	jule::Any _field_key = jule::Any();
	jule::Any _field_val = jule::Any();
	

	_1e437b6e8_KeyValPairExprModel(void) = default;

	inline bool operator==(_1e437b6e8_KeyValPairExprModel _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_1e437b6e8_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1e437b8d5_MapExprModel {
	jule::Ptr<_1c97746ee_TypeKind> _field_key_kind = jule::Ptr<_1c97746ee_TypeKind>();
	jule::Ptr<_1c97746ee_TypeKind> _field_val_kind = jule::Ptr<_1c97746ee_TypeKind>();
	jule::Slice<jule::Ptr<_1e437b6e8_KeyValPairExprModel>> _field_entries = jule::Slice<jule::Ptr<_1e437b6e8_KeyValPairExprModel>>();
	

	_1e437b8d5_MapExprModel(void) = default;

	inline bool operator==(_1e437b8d5_MapExprModel _other) {
		return 
			this->_field_key_kind == _other._field_key_kind &&
			this->_field_val_kind == _other._field_val_kind &&
			this->_field_entries == _other._field_entries;
	}

	inline bool operator!=(_1e437b8d5_MapExprModel _other) { return !this->operator==(_other); }


};
struct _1e437bac2_SlicingExprModel {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();
	

	_1e437bac2_SlicingExprModel(void) = default;

	inline bool operator==(_1e437bac2_SlicingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_1e437bac2_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1e437bcae_TraitSubIdentExprModel {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1e4380576_Fn> _field_method = jule::Ptr<_1e4380576_Fn>();
	jule::Ptr<_1e43d8d0a_Trait> _field_trt = jule::Ptr<_1e43d8d0a_Trait>();
	

	_1e437bcae_TraitSubIdentExprModel(void) = default;

	inline bool operator==(_1e437bcae_TraitSubIdentExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_method == _other._field_method &&
			this->_field_trt == _other._field_trt;
	}

	inline bool operator!=(_1e437bcae_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1e437c1cc_StructSubIdentExprModel {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Ptr<_1c974abc0_Data> _field_expr = jule::Ptr<_1c974abc0_Data>();
	jule::Ptr<_1c97746ee_TypeKind> _field_expr_kind = jule::Ptr<_1c97746ee_TypeKind>();
	jule::Ptr<_1e4383018_FnIns> _field_method = jule::Ptr<_1e4383018_FnIns>();
	jule::Ptr<_1e434014b_FieldIns> _field_field = jule::Ptr<_1e434014b_FieldIns>();
	

	_1e437c1cc_StructSubIdentExprModel(void) = default;

	inline bool operator==(_1e437c1cc_StructSubIdentExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_expr_kind == _other._field_expr_kind &&
			this->_field_method == _other._field_method &&
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1e437c1cc_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1e437c3b9_StructStaticIdentExprModel {
	jule::Ptr<_1e43462ea_StructIns> _field_structure = jule::Ptr<_1e43462ea_StructIns>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1e4383018_FnIns> _field_method = jule::Ptr<_1e4383018_FnIns>();
	

	_1e437c3b9_StructStaticIdentExprModel(void) = default;

	inline bool operator==(_1e437c3b9_StructStaticIdentExprModel _other) {
		return 
			this->_field_structure == _other._field_structure &&
			this->_field_expr == _other._field_expr &&
			this->_field_method == _other._field_method;
	}

	inline bool operator!=(_1e437c3b9_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1e437c5a6_ArrayExprModel {
	jule::Ptr<_1c9780067_Arr> _field_kind = jule::Ptr<_1c9780067_Arr>();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();
	

	_1e437c5a6_ArrayExprModel(void) = default;

	inline bool operator==(_1e437c5a6_ArrayExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1e437c5a6_ArrayExprModel _other) { return !this->operator==(_other); }


};
struct _1e437c793_CommonIdentExprModel {
	jule::Str _field_ident = jule::Str();
	

	_1e437c793_CommonIdentExprModel(void) = default;

	inline bool operator==(_1e437c793_CommonIdentExprModel _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1e437c793_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1e437c980_CommonSubIdentExprModel {
	jule::Ptr<_1c97746ee_TypeKind> _field_expr_kind = jule::Ptr<_1c97746ee_TypeKind>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Str _field_ident = jule::Str();
	

	_1e437c980_CommonSubIdentExprModel(void) = default;

	inline bool operator==(_1e437c980_CommonSubIdentExprModel _other) {
		return 
			this->_field_expr_kind == _other._field_expr_kind &&
			this->_field_expr == _other._field_expr &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1e437c980_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1e437cb6c_TupleExprModel {
	jule::Slice<jule::Ptr<_1c974abc0_Data>> _field_datas = jule::Slice<jule::Ptr<_1c974abc0_Data>>();
	

	_1e437cb6c_TupleExprModel(void) = default;

	inline bool operator==(_1e437cb6c_TupleExprModel _other) {
		return 
			this->_field_datas == _other._field_datas;
	}

	inline bool operator!=(_1e437cb6c_TupleExprModel _other) { return !this->operator==(_other); }


};
struct _1e437cd59_BuiltinOutCallExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Bool _field_debug = jule::Bool();
	

	_1e437cd59_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(_1e437cd59_BuiltinOutCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_debug == _other._field_debug;
	}

	inline bool operator!=(_1e437cd59_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e437d046_BuiltinOutlnCallExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Bool _field_debug = jule::Bool();
	

	_1e437d046_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(_1e437d046_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_debug == _other._field_debug;
	}

	inline bool operator!=(_1e437d046_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e437d233_BuiltinCloneCallExprModel {
	jule::Any _field_expr = jule::Any();
	

	_1e437d233_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(_1e437d233_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e437d233_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e437d420_BuiltinNewCallExprModel {
	jule::Ptr<_1c97746ee_TypeKind> _field_kind = jule::Ptr<_1c97746ee_TypeKind>();
	jule::Any _field_init = jule::Any();
	

	_1e437d420_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(_1e437d420_BuiltinNewCallExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_init == _other._field_init;
	}

	inline bool operator!=(_1e437d420_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e437d60c_BuiltinPanicCallExprModel {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Any _field_expr = jule::Any();
	

	_1e437d60c_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(_1e437d60c_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e437d60c_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e437d7e9_BuiltinAssertCallExprModel {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Str _field_log = jule::Str();
	

	_1e437d7e9_BuiltinAssertCallExprModel(void) = default;

	inline bool operator==(_1e437d7e9_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_log == _other._field_log;
	}

	inline bool operator!=(_1e437d7e9_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e437d9d6_BuiltinMakeCallExprModel {
	jule::Ptr<_1c97746ee_TypeKind> _field_kind = jule::Ptr<_1c97746ee_TypeKind>();
	jule::Any _field_len = jule::Any();
	jule::Any _field_cap = jule::Any();
	

	_1e437d9d6_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(_1e437d9d6_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_len == _other._field_len &&
			this->_field_cap == _other._field_cap;
	}

	inline bool operator!=(_1e437d9d6_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e437dbc3_BuiltinAppendCallExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Any _field_elements = jule::Any();
	

	_1e437dbc3_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(_1e437dbc3_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_elements == _other._field_elements;
	}

	inline bool operator!=(_1e437dbc3_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e437ddb0_BuiltinCopyCallExprModel {
	jule::Ptr<_1c974abc0_Data> _field_dest = jule::Ptr<_1c974abc0_Data>();
	jule::Ptr<_1c974abc0_Data> _field_src = jule::Ptr<_1c974abc0_Data>();
	

	_1e437ddb0_BuiltinCopyCallExprModel(void) = default;

	inline bool operator==(_1e437ddb0_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src;
	}

	inline bool operator!=(_1e437ddb0_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e437e09c_BuiltinErrorCallExprModel {
	jule::Ptr<_1e4383018_FnIns> _field_func = jule::Ptr<_1e4383018_FnIns>();
	jule::Any _field_err = jule::Any();
	

	_1e437e09c_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(_1e437e09c_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_1e437e09c_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e437be9b_SizeofExprModel {
	jule::Any _field_expr = jule::Any();
	

	_1e437be9b_SizeofExprModel(void) = default;

	inline bool operator==(_1e437be9b_SizeofExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e437be9b_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1e437e70c_AlignofExprModel {
	jule::Any _field_expr = jule::Any();
	

	_1e437e70c_AlignofExprModel(void) = default;

	inline bool operator==(_1e437e70c_AlignofExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e437e70c_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1e437e8e9_RuneExprModel {
	jule::I32 _field_code = jule::I32();
	

	_1e437e8e9_RuneExprModel(void) = default;

	inline bool operator==(_1e437e8e9_RuneExprModel _other) {
		return 
			this->_field_code == _other._field_code;
	}

	inline bool operator!=(_1e437e8e9_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1e437ead6_IntegratedToStrExprModel {
	jule::Any _field_expr = jule::Any();
	

	_1e437ead6_IntegratedToStrExprModel(void) = default;

	inline bool operator==(_1e437ead6_IntegratedToStrExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e437ead6_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1e437ecc3_BackendEmitExprModel {
	jule::Str _field_code = jule::Str();
	jule::Slice<jule::Any> _field_exprs = jule::Slice<jule::Any>();
	

	_1e437ecc3_BackendEmitExprModel(void) = default;

	inline bool operator==(_1e437ecc3_BackendEmitExprModel _other) {
		return 
			this->_field_code == _other._field_code &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1e437ecc3_BackendEmitExprModel _other) { return !this->operator==(_other); }


};
struct _1e437eeb0_FreeExprModel {
	jule::Any _field_expr = jule::Any();
	

	_1e437eeb0_FreeExprModel(void) = default;

	inline bool operator==(_1e437eeb0_FreeExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e437eeb0_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1e438019c_RetType {
	jule::Ptr<_1c977858d_TypeSymbol> _field_kind = jule::Ptr<_1c977858d_TypeSymbol>();
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _field_idents = jule::Slice<jule::Ptr<_20cd9e6ec_Token>>();
	

	_1e438019c_RetType(void) = default;

	inline bool operator==(_1e438019c_RetType _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_idents == _other._field_idents;
	}

	inline bool operator!=(_1e438019c_RetType _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e438217c_ParamIns> _1e434145a_instance(jule::Ptr<_1e4380389_Param>);
inline jule::Bool _1e435279b_is_self(_1e4380389_Param*);
inline jule::Bool _1e4355edb_is_ref(_1e4380389_Param*);
struct _1e4380389_Param {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1c977858d_TypeSymbol> _field_kind = jule::Ptr<_1c977858d_TypeSymbol>();
	jule::Str _field_ident = jule::Str();
	

	_1e4380389_Param(void) = default;

	inline bool operator==(_1e4380389_Param _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1e4380389_Param _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e43807c9_is_void(_1e4380576_Fn*);
inline jule::Bool _1e4380a3d_is_method(_1e4380576_Fn*);
inline jule::Bool _1e4380ca2_is_entry_point(_1e4380576_Fn*);
inline jule::Bool _1e4381016_is_init(_1e4380576_Fn*);
inline jule::Bool _1e438127a_is_anon(_1e4380576_Fn*);
inline jule::Bool _1e43814de_any_var(_1e4380576_Fn*);
inline jule::Ptr<_1e4383018_FnIns> _1e4381753_instance_force(jule::Ptr<_1e4380576_Fn>);
inline jule::Ptr<_1e4383018_FnIns> _1e43819b7_instance(jule::Ptr<_1e4380576_Fn>);
inline jule::Ptr<_1e4383018_FnIns> _1e4381cc5_append_instance(_1e4380576_Fn*, jule::Ptr<_1e4383018_FnIns>&);
struct _1e4380576_Fn {
	jule::Ptr<_1e46ac452_Sema> _field_sema = jule::Ptr<_1e46ac452_Sema>();
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Bool _field_global = jule::Bool();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_exceptional = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1e43620c4_Directive>> _field_directives = jule::Slice<jule::Ptr<_1e43620c4_Directive>>();
	jule::Ptr<_1e43702ad_ScopeTree> _field_scope = jule::Ptr<_1e43702ad_ScopeTree>();
	jule::Slice<jule::Ptr<_1e436d50e_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1e436d50e_GenericDecl>>();
	jule::Ptr<_1e438019c_RetType> _field_result = jule::Ptr<_1e438019c_RetType>();
	jule::Slice<jule::Ptr<_1e4380389_Param>> _field_params = jule::Slice<jule::Ptr<_1e4380389_Param>>();
	jule::Ptr<_1e43360cb_Struct> _field_owner = jule::Ptr<_1e43360cb_Struct>();
	jule::Slice<jule::Ptr<_1e4383018_FnIns>> _field_instances = jule::Slice<jule::Ptr<_1e4383018_FnIns>>();
	

	_1e4380576_Fn(void) = default;

	inline bool operator==(_1e4380576_Fn _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_token == _other._field_token &&
			this->_field_global == _other._field_global &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_statically == _other._field_statically &&
			this->_field_exceptional == _other._field_exceptional &&
			this->_field_ident == _other._field_ident &&
			this->_field_directives == _other._field_directives &&
			this->_field_scope == _other._field_scope &&
			this->_field_generics == _other._field_generics &&
			this->_field_result == _other._field_result &&
			this->_field_params == _other._field_params &&
			this->_field_owner == _other._field_owner &&
			this->_field_instances == _other._field_instances;
	}

	inline bool operator!=(_1e4380576_Fn _other) { return !this->operator==(_other); }


};
inline jule::Str _1e4382556_to_str(_1e438217c_ParamIns*);
struct _1e438217c_ParamIns {
	jule::Ptr<_1e4380389_Param> _field_decl = jule::Ptr<_1e4380389_Param>();
	jule::Ptr<_1c97746ee_TypeKind> _field_kind = jule::Ptr<_1c97746ee_TypeKind>();
	

	_1e438217c_ParamIns(void) = default;

	inline bool operator==(_1e438217c_ParamIns _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1e438217c_ParamIns _other) { return !this->operator==(_other); }


};
inline jule::Str _1e438337b_to_str(_1e4383018_FnIns*);
inline jule::Bool _1e4383689_equals(jule::Ptr<_1e4383018_FnIns>, jule::Ptr<_1c97746ee_TypeKind>);
inline jule::Slice<jule::Ptr<_1c97746ee_TypeKind>> _1e4383a30_types(_1e4383018_FnIns*);
inline jule::Bool _1e4383c94_is_builtin(_1e4383018_FnIns*);
inline jule::Bool _1e4384008_is_anon(_1e4383018_FnIns*);
inline jule::Bool _1e4384316_same(_1e4383018_FnIns*, jule::Ptr<_1e4383018_FnIns>);
inline jule::Str _1e4384624_get_kind_str(_1e4383018_FnIns*, jule::Bool);
struct _1e4383018_FnIns {
	jule::Ptr<_1e43462ea_StructIns> _field_owner = jule::Ptr<_1e43462ea_StructIns>();
	jule::Ptr<_1e4380576_Fn> _field_decl = jule::Ptr<_1e4380576_Fn>();
	jule::Slice<jule::Ptr<_1c97746ee_TypeKind>> _field_generics = jule::Slice<jule::Ptr<_1c97746ee_TypeKind>>();
	jule::Slice<jule::Ptr<_1e438217c_ParamIns>> _field_params = jule::Slice<jule::Ptr<_1e438217c_ParamIns>>();
	jule::Ptr<_1c97746ee_TypeKind> _field_result = jule::Ptr<_1c97746ee_TypeKind>();
	jule::Ptr<_1e46862c7_Scope> _field_scope = jule::Ptr<_1e46862c7_Scope>();
	jule::Ptr<_1e4385c0d_ReferenceStack> _field_refers = jule::Ptr<_1e4385c0d_ReferenceStack>();
	jule::Bool _field_anon = jule::Bool();
	jule::Fn<jule::Ptr<_1c974abc0_Data>(jule::Ptr<_1c974c73d_Eval>&,jule::Ptr<_1e43699b1_FnCallExpr>&,jule::Ptr<_1c974abc0_Data>&)> _field_caller = jule::Fn<jule::Ptr<_1c974abc0_Data>(jule::Ptr<_1c974c73d_Eval>&,jule::Ptr<_1e43699b1_FnCallExpr>&,jule::Ptr<_1c974abc0_Data>&)>();
	jule::Bool _field_reloaded = jule::Bool();
	

	_1e4383018_FnIns(void) = default;

	inline bool operator==(_1e4383018_FnIns _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_decl == _other._field_decl &&
			this->_field_generics == _other._field_generics &&
			this->_field_params == _other._field_params &&
			this->_field_result == _other._field_result &&
			this->_field_scope == _other._field_scope &&
			this->_field_refers == _other._field_refers &&
			this->_field_anon == _other._field_anon &&
			this->_field_caller == _other._field_caller &&
			this->_field_reloaded == _other._field_reloaded;
	}

	inline bool operator!=(_1e4383018_FnIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e4385c0d_ReferenceStack> static__1e438601b_new(void);
inline jule::I64 _1e43863a1_len(_1e4385c0d_ReferenceStack*);
inline jule::Any _1e43866ae_at(_1e4385c0d_ReferenceStack*, jule::I64);
inline void _1e4386934_push(_1e4385c0d_ReferenceStack*, jule::Any);
inline jule::Bool _1cb92411b_exist(_1e4385c0d_ReferenceStack*, jule::Ptr<_1e4383018_FnIns>);
inline jule::Bool _1cb93ab7c_exist(_1e4385c0d_ReferenceStack*, jule::Ptr<_1e46c6eb6_Var>);
inline jule::Bool _1cc1b9d01_exist(_1e4385c0d_ReferenceStack*, jule::Ptr<_1e43462ea_StructIns>);
struct _1e4385c0d_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer = jule::Slice<jule::Any>();
	

	_1e4385c0d_ReferenceStack(void) = default;

	inline bool operator==(_1e4385c0d_ReferenceStack _other) {
		return 
			this->_field_buffer == _other._field_buffer;
	}

	inline bool operator!=(_1e4385c0d_ReferenceStack _other) { return !this->operator==(_other); }


};
struct _1e43870e9_Pass {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Str _field_text = jule::Str();
	

	_1e43870e9_Pass(void) = default;

	inline bool operator==(_1e43870e9_Pass _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_text == _other._field_text;
	}

	inline bool operator!=(_1e43870e9_Pass _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e438ab9c_SymbolBuilder> _1e438b263_get_root(jule::Ptr<_1e438ab9c_SymbolBuilder>);
inline void _1e438b62b_push_err(_1e438ab9c_SymbolBuilder*, jule::Ptr<_20cd9e6ec_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _1e438b9e4_push_err_text(_1e438ab9c_SymbolBuilder*, jule::Ptr<_20cd9e6ec_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _1e438bd13_push_suggestion(_1e438ab9c_SymbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e438c1dc_check_cpp_use_decl_path(_1e438ab9c_SymbolBuilder*, jule::Ptr<_1e43778e2_UseDecl>&, jule::Str);
inline jule::Ptr<_1e46a4768_ImportInfo> _1e438c4ea_build_cpp_header_import(_1e438ab9c_SymbolBuilder*, jule::Ptr<_1e43778e2_UseDecl>&);
inline jule::Ptr<_1e46a4768_ImportInfo> _1e438c819_build_std_import(_1e438ab9c_SymbolBuilder*, jule::Ptr<_1e43778e2_UseDecl>&);
inline jule::Ptr<_1e46a4768_ImportInfo> _1e438cb27_build_ident_import(jule::Ptr<_1e438ab9c_SymbolBuilder>, jule::Ptr<_1e43778e2_UseDecl>&);
inline jule::Ptr<_1e46a4768_ImportInfo> _1e438ce35_build_import(jule::Ptr<_1e438ab9c_SymbolBuilder>, jule::Ptr<_1e43778e2_UseDecl>&);
inline jule::Bool _1e438d265_check_duplicate_use_decl(_1e438ab9c_SymbolBuilder*, jule::Ptr<_1e46a4768_ImportInfo>&);
inline void _1e438d595_impl_import_selections(_1e438ab9c_SymbolBuilder*, jule::Ptr<_1e46a4768_ImportInfo>&, jule::Ptr<_1e43778e2_UseDecl>&);
inline jule::Str _1e438d8a3_get_as_link_path(jule::Ptr<_1e438ab9c_SymbolBuilder>, jule::Str);
inline void _1e438dc6b_push_cycle_error(jule::Ptr<_1e438ab9c_SymbolBuilder>, jule::Ptr<_1e438ab9c_SymbolBuilder>&, jule::Str, jule::Str&);
inline void _1e438e134_push_cross_cycle_error(jule::Ptr<_1e438ab9c_SymbolBuilder>, jule::Ptr<_1e438ab9c_SymbolBuilder>&, jule::Ptr<_1e46a4768_ImportInfo>&, jule::Ptr<_20cd9e6ec_Token>&);
inline jule::Bool _1e438e4db_check_import_cycles(jule::Ptr<_1e438ab9c_SymbolBuilder>, jule::Ptr<_1e46a4768_ImportInfo>, jule::Ptr<_1e43778e2_UseDecl>&);
inline void _1e438e8c6_check_package_accessibility(_1e438ab9c_SymbolBuilder*, jule::Ptr<_1e43778e2_UseDecl>&, jule::Str&, jule::Str&);
inline jule::Bool _1e438ec8e_import_package(jule::Ptr<_1e438ab9c_SymbolBuilder>, jule::Ptr<_1e46a4768_ImportInfo>&, jule::Ptr<_1e43778e2_UseDecl>&);
inline jule::Ptr<_1e46a4768_ImportInfo> _1e439009c_import_use_decl(jule::Ptr<_1e438ab9c_SymbolBuilder>, jule::Ptr<_1e43778e2_UseDecl>&);
inline void _1e4390278_import_use_decls(jule::Ptr<_1e438ab9c_SymbolBuilder>);
inline void _1e43904ed_append_node(_1e438ab9c_SymbolBuilder*, _1e43314d3_Node&);
inline void _1e43906c9_append_nodes(_1e438ab9c_SymbolBuilder*);
inline void _1e439094e_push_directive_pass(_1e438ab9c_SymbolBuilder*, jule::Ptr<_1e43620c4_Directive>&);
inline void _1e4390b2a_append_top_directives(_1e438ab9c_SymbolBuilder*);
inline void _1e4390d06_build(jule::Ptr<_1e438ab9c_SymbolBuilder>);
struct _1e438ab9c_SymbolBuilder {
	jule::Ptr<_1e438ab9c_SymbolBuilder> _field_owner = jule::Ptr<_1e438ab9c_SymbolBuilder>();
	jule::Trait<_1e46a2403_Importer> _field_importer = jule::Trait<_1e46a2403_Importer>();
	jule::Slice<_20ca8ec5b_Log> _field_errors = jule::Slice<_20ca8ec5b_Log>();
	jule::Ptr<_1e433079b_Ast> _field_ast = jule::Ptr<_1e433079b_Ast>();
	jule::Ptr<_1c9745c42_SymbolTable> _field_table = jule::Ptr<_1c9745c42_SymbolTable>();
	

	_1e438ab9c_SymbolBuilder(void) = default;

	inline bool operator==(_1e438ab9c_SymbolBuilder _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_importer == _other._field_importer &&
			this->_field_errors == _other._field_errors &&
			this->_field_ast == _other._field_ast &&
			this->_field_table == _other._field_table;
	}

	inline bool operator!=(_1e438ab9c_SymbolBuilder _other) { return !this->operator==(_other); }


};
inline jule::Str _1e43da8de_to_str(_1e43d8d0a_Trait*);
inline jule::Bool _1e43dc429_equals(jule::Ptr<_1e43d8d0a_Trait>, jule::Ptr<_1c97746ee_TypeKind>);
inline jule::Bool _1e4415ae5_is_builtin(_1e43d8d0a_Trait*);
inline jule::Ptr<_1e4380576_Fn> _1e44161ab_find_method(_1e43d8d0a_Trait*, jule::Str);
struct _1e43d8d0a_Trait {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Slice<jule::Ptr<_1e4380576_Fn>> _field_methods = jule::Slice<jule::Ptr<_1e4380576_Fn>>();
	jule::Slice<jule::Ptr<_1e43360cb_Struct>> _field_implemented = jule::Slice<jule::Ptr<_1e43360cb_Struct>>();
	

	_1e43d8d0a_Trait(void) = default;

	inline bool operator==(_1e43d8d0a_Trait _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_methods == _other._field_methods &&
			this->_field_implemented == _other._field_implemented;
	}

	inline bool operator!=(_1e43d8d0a_Trait _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e4438420_auto_expr(_1e4392797_EnumItem*);
struct _1e4392797_EnumItem {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1c974bc48_Value> _field_value = jule::Ptr<_1c974bc48_Value>();
	

	_1e4392797_EnumItem(void) = default;

	inline bool operator==(_1e4392797_EnumItem _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_value == _other._field_value;
	}

	inline bool operator!=(_1e4392797_EnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1e4456d45_to_str(_1e4456b58_Enum*);
inline jule::Bool _1e4456e77_equals(jule::Ptr<_1e4456b58_Enum>, jule::Ptr<_1c97746ee_TypeKind>);
inline jule::Ptr<_1e4392797_EnumItem> _1e5c31145_find_item(_1e4456b58_Enum*, jule::Str);
struct _1e4456b58_Enum {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1c977858d_TypeSymbol> _field_kind = jule::Ptr<_1c977858d_TypeSymbol>();
	jule::Slice<jule::Ptr<_1e4392797_EnumItem>> _field_items = jule::Slice<jule::Ptr<_1e4392797_EnumItem>>();
	

	_1e4456b58_Enum(void) = default;

	inline bool operator==(_1e4456b58_Enum _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_items == _other._field_items;
	}

	inline bool operator!=(_1e4456b58_Enum _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e5c3161d_is_trait_impl(_1e5c31431_Impl*);
inline jule::Bool _1e5c31750_is_struct_impl(_1e5c31431_Impl*);
struct _1e5c31431_Impl {
	jule::Ptr<_1e436257a_TypeDecl> _field_base = jule::Ptr<_1e436257a_TypeDecl>();
	jule::Ptr<_1e436257a_TypeDecl> _field_dest = jule::Ptr<_1e436257a_TypeDecl>();
	jule::Slice<jule::Ptr<_1e4380576_Fn>> _field_methods = jule::Slice<jule::Ptr<_1e4380576_Fn>>();
	jule::Slice<jule::Ptr<_1e46c6eb6_Var>> _field_statics = jule::Slice<jule::Ptr<_1e46c6eb6_Var>>();
	

	_1e5c31431_Impl(void) = default;

	inline bool operator==(_1e5c31431_Impl _other) {
		return 
			this->_field_base == _other._field_base &&
			this->_field_dest == _other._field_dest &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics;
	}

	inline bool operator!=(_1e5c31431_Impl _other) { return !this->operator==(_other); }


};
struct _1e46862c7_Scope {
	jule::Ptr<_1e46862c7_Scope> _field_parent = jule::Ptr<_1e46862c7_Scope>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_deferred = jule::Bool();
	jule::Slice<jule::Any> _field_stmts = jule::Slice<jule::Any>();
	

	_1e46862c7_Scope(void) = default;

	inline bool operator==(_1e46862c7_Scope _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_deferred == _other._field_deferred &&
			this->_field_stmts == _other._field_stmts;
	}

	inline bool operator!=(_1e46862c7_Scope _other) { return !this->operator==(_other); }


};
struct _1e46866c3_If {
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1e46862c7_Scope> _field_scope = jule::Ptr<_1e46862c7_Scope>();
	

	_1e46866c3_If(void) = default;

	inline bool operator==(_1e46866c3_If _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1e46866c3_If _other) { return !this->operator==(_other); }


};
struct _1e46869ae_Else {
	jule::Ptr<_1e46862c7_Scope> _field_scope = jule::Ptr<_1e46862c7_Scope>();
	

	_1e46869ae_Else(void) = default;

	inline bool operator==(_1e46869ae_Else _other) {
		return 
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1e46869ae_Else _other) { return !this->operator==(_other); }


};
struct _1e4686daa_Conditional {
	jule::Slice<jule::Ptr<_1e46866c3_If>> _field_elifs = jule::Slice<jule::Ptr<_1e46866c3_If>>();
	jule::Ptr<_1e46869ae_Else> _field_default = jule::Ptr<_1e46869ae_Else>();
	

	_1e4686daa_Conditional(void) = default;

	inline bool operator==(_1e4686daa_Conditional _other) {
		return 
			this->_field_elifs == _other._field_elifs &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1e4686daa_Conditional _other) { return !this->operator==(_other); }


};
struct _1e4687196_InfIter {
	jule::Ptr<_1e46862c7_Scope> _field_scope = jule::Ptr<_1e46862c7_Scope>();
	

	_1e4687196_InfIter(void) = default;

	inline bool operator==(_1e4687196_InfIter _other) {
		return 
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1e4687196_InfIter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e46879b0_is_while_next(_1e4687619_WhileIter*);
struct _1e4687619_WhileIter {
	jule::Any _field_expr = jule::Any();
	jule::Any _field_next = jule::Any();
	jule::Ptr<_1e46862c7_Scope> _field_scope = jule::Ptr<_1e46862c7_Scope>();
	

	_1e4687619_WhileIter(void) = default;

	inline bool operator==(_1e4687619_WhileIter _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_next == _other._field_next &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1e4687619_WhileIter _other) { return !this->operator==(_other); }


};
struct _1e4687eee_RangeIter {
	jule::Ptr<_1c974abc0_Data> _field_expr = jule::Ptr<_1c974abc0_Data>();
	jule::Ptr<_1e46862c7_Scope> _field_scope = jule::Ptr<_1e46862c7_Scope>();
	jule::Ptr<_1e46c6eb6_Var> _field_key_a = jule::Ptr<_1e46c6eb6_Var>();
	jule::Ptr<_1e46c6eb6_Var> _field_key_b = jule::Ptr<_1e46c6eb6_Var>();
	

	_1e4687eee_RangeIter(void) = default;

	inline bool operator==(_1e4687eee_RangeIter _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope &&
			this->_field_key_a == _other._field_key_a &&
			this->_field_key_b == _other._field_key_b;
	}

	inline bool operator!=(_1e4687eee_RangeIter _other) { return !this->operator==(_other); }


};
struct _1e4688373_ContSt {
	jule::U64 _field_it = jule::U64();
	

	_1e4688373_ContSt(void) = default;

	inline bool operator==(_1e4688373_ContSt _other) {
		return 
			this->_field_it == _other._field_it;
	}

	inline bool operator!=(_1e4688373_ContSt _other) { return !this->operator==(_other); }


};
struct _1e468872a_BreakSt {
	jule::U64 _field_it = jule::U64();
	jule::U64 _field_mtch = jule::U64();
	

	_1e468872a_BreakSt(void) = default;

	inline bool operator==(_1e468872a_BreakSt _other) {
		return 
			this->_field_it == _other._field_it &&
			this->_field_mtch == _other._field_mtch;
	}

	inline bool operator!=(_1e468872a_BreakSt _other) { return !this->operator==(_other); }


};
struct _1e4688a16_Label {
	jule::Str _field_ident = jule::Str();
	

	_1e4688a16_Label(void) = default;

	inline bool operator==(_1e4688a16_Label _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1e4688a16_Label _other) { return !this->operator==(_other); }


};
struct _1e4688d02_GotoSt {
	jule::Str _field_ident = jule::Str();
	

	_1e4688d02_GotoSt(void) = default;

	inline bool operator==(_1e4688d02_GotoSt _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1e4688d02_GotoSt _other) { return !this->operator==(_other); }


};
struct _1e46891a9_Postfix {
	jule::Any _field_expr = jule::Any();
	jule::Str _field_op = jule::Str();
	

	_1e46891a9_Postfix(void) = default;

	inline bool operator==(_1e46891a9_Postfix _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1e46891a9_Postfix _other) { return !this->operator==(_other); }


};
struct _1e468962c_Assign {
	jule::Ptr<_1e4347a8d_OperandExprModel> _field_l = jule::Ptr<_1e4347a8d_OperandExprModel>();
	jule::Ptr<_1e4347a8d_OperandExprModel> _field_r = jule::Ptr<_1e4347a8d_OperandExprModel>();
	jule::Ptr<_20cd9e6ec_Token> _field_op = jule::Ptr<_20cd9e6ec_Token>();
	

	_1e468962c_Assign(void) = default;

	inline bool operator==(_1e468962c_Assign _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1e468962c_Assign _other) { return !this->operator==(_other); }


};
struct _1e46899d4_MultiAssign {
	jule::Slice<jule::Any> _field_l = jule::Slice<jule::Any>();
	jule::Any _field_r = jule::Any();
	

	_1e46899d4_MultiAssign(void) = default;

	inline bool operator==(_1e46899d4_MultiAssign _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r;
	}

	inline bool operator!=(_1e46899d4_MultiAssign _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e468a496_is_generic_type_match(_1e468a023_Match*);
struct _1e468a023_Match {
	jule::Ptr<_1c974abc0_Data> _field_expr = jule::Ptr<_1c974abc0_Data>();
	jule::Bool _field_type_match = jule::Bool();
	jule::Slice<jule::Ptr<_1e468a9d5_Case>> _field_cases = jule::Slice<jule::Ptr<_1e468a9d5_Case>>();
	jule::Ptr<_1e468a9d5_Case> _field_default = jule::Ptr<_1e468a9d5_Case>();
	

	_1e468a023_Match(void) = default;

	inline bool operator==(_1e468a023_Match _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_type_match == _other._field_type_match &&
			this->_field_cases == _other._field_cases &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1e468a023_Match _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e468adae_is_default(_1e468a9d5_Case*);
struct _1e468a9d5_Case {
	jule::Ptr<_1e468a023_Match> _field_owner = jule::Ptr<_1e468a023_Match>();
	jule::Ptr<_1e46862c7_Scope> _field_scope = jule::Ptr<_1e46862c7_Scope>();
	jule::Slice<jule::Ptr<_1c974abc0_Data>> _field_exprs = jule::Slice<jule::Ptr<_1c974abc0_Data>>();
	jule::Ptr<_1e468a9d5_Case> _field_next = jule::Ptr<_1e468a9d5_Case>();
	

	_1e468a9d5_Case(void) = default;

	inline bool operator==(_1e468a9d5_Case _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_scope == _other._field_scope &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_next == _other._field_next;
	}

	inline bool operator!=(_1e468a9d5_Case _other) { return !this->operator==(_other); }


};
struct _1e468b167_FallSt {
	jule::U64 _field_dest_case = jule::U64();
	

	_1e468b167_FallSt(void) = default;

	inline bool operator==(_1e468b167_FallSt _other) {
		return 
			this->_field_dest_case == _other._field_dest_case;
	}

	inline bool operator!=(_1e468b167_FallSt _other) { return !this->operator==(_other); }


};
struct _1e468b5da_RetSt {
	jule::Ptr<_1e4383018_FnIns> _field_func = jule::Ptr<_1e4383018_FnIns>();
	jule::Slice<jule::Ptr<_1e46c6eb6_Var>> _field_vars = jule::Slice<jule::Ptr<_1e46c6eb6_Var>>();
	jule::Any _field_expr = jule::Any();
	

	_1e468b5da_RetSt(void) = default;

	inline bool operator==(_1e468b5da_RetSt _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_vars == _other._field_vars &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e468b5da_RetSt _other) { return !this->operator==(_other); }


};
struct _1e468bbe5_ScopeLabel {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Ptr<_1e4688a16_Label> _field_label = jule::Ptr<_1e4688a16_Label>();
	jule::I64 _field_pos = jule::I64();
	jule::Ptr<_1e468ce7c_ScopeChecker> _field_scope = jule::Ptr<_1e468ce7c_ScopeChecker>();
	jule::Bool _field_used = jule::Bool();
	

	_1e468bbe5_ScopeLabel(void) = default;

	inline bool operator==(_1e468bbe5_ScopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1e468bbe5_ScopeLabel _other) { return !this->operator==(_other); }


};
struct _1e468c168_ScopeGoto {
	jule::Ptr<_1e436dc6d_GotoSt> _field_gt = jule::Ptr<_1e436dc6d_GotoSt>();
	jule::Ptr<_1e468ce7c_ScopeChecker> _field_scope = jule::Ptr<_1e468ce7c_ScopeChecker>();
	jule::I64 _field_pos = jule::I64();
	

	_1e468c168_ScopeGoto(void) = default;

	inline bool operator==(_1e468c168_ScopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1e468c168_ScopeGoto _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e46a4768_ImportInfo> _1e468d400_find_package(_1e468ce7c_ScopeChecker*, jule::Str);
inline jule::Ptr<_1e46a4768_ImportInfo> _1e468d70d_select_package(_1e468ce7c_ScopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_1e46a4768_ImportInfo>)>);
inline jule::Ptr<_1e46c6eb6_Var> _1e468dab5_find_var(_1e468ce7c_ScopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1c97739b7_TypeAlias> _1e468de6c_find_type_alias(_1e468ce7c_ScopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1e43360cb_Struct> _1e468e324_find_struct(_1e468ce7c_ScopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1e4380576_Fn> _1e468e6cb_find_fn(_1e468ce7c_ScopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1e43d8d0a_Trait> _1e468e9d9_find_trait(_1e468ce7c_ScopeChecker*, jule::Str);
inline jule::Ptr<_1e4456b58_Enum> _1e468ece7_find_enum(_1e468ce7c_ScopeChecker*, jule::Str);
inline jule::Bool _1e4690127_is_unsafe(jule::Ptr<_1e468ce7c_ScopeChecker>);
inline jule::Bool _1e469038b_is_root(_1e468ce7c_ScopeChecker*);
inline void _1e4690567_stop(_1e468ce7c_ScopeChecker*);
inline jule::Bool _1e46907cb_stopped(_1e468ce7c_ScopeChecker*);
inline jule::Bool _1e4690a40_is_deferred(jule::Ptr<_1e468ce7c_ScopeChecker>);
inline jule::Ptr<_1e468ce7c_ScopeChecker> _1e4690ca4_get_root(jule::Ptr<_1e468ce7c_ScopeChecker>);
inline jule::Ptr<_1e468ce7c_ScopeChecker> _1e4691018_get_hard_root(jule::Ptr<_1e468ce7c_ScopeChecker>);
inline jule::Ptr<_1e4688a16_Label> _1e4691326_find_label(_1e468ce7c_ScopeChecker*, jule::Str);
inline jule::Ptr<_1e468bbe5_ScopeLabel> _1e4691634_find_label_scope(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Str);
inline jule::Ptr<_1e468bbe5_ScopeLabel> _1e4691942_find_label_all(_1e468ce7c_ScopeChecker*, jule::Str);
inline jule::Bool _1e4691ce9_is_duplicated_ident(_1e468ce7c_ScopeChecker*, jule::U64, jule::Str);
inline void _1e469206e_check_var_decl(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e4372c83_VarDecl>);
inline void _1e46922e4_check_type_alias_decl(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e4376506_TypeAliasDecl>);
inline jule::Ptr<_1e46862c7_Scope> _1e4692558_get_child(_1e468ce7c_ScopeChecker*);
inline void _1e4692921_check_child_ssc(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e43702ad_ScopeTree>&, jule::Ptr<_1e46862c7_Scope>&, jule::Ptr<_1e468ce7c_ScopeChecker>&);
inline jule::Ptr<_1e46862c7_Scope> _1e4692cc8_check_child_sc(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e43702ad_ScopeTree>&, jule::Ptr<_1e468ce7c_ScopeChecker>&);
inline jule::Ptr<_1e46862c7_Scope> _1e46930d6_check_child(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e43702ad_ScopeTree>&);
inline void _1e469335b_check_anon_scope(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e43702ad_ScopeTree>);
inline void _1e469367a_process_error_call(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e437e09c_BuiltinErrorCallExprModel>&, jule::Ptr<_20cd9e6ec_Token>);
inline void _1e4693900_check_expr(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e43659e0_Expr>);
inline void _1e4693b75_check_co_expr(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e436721c_CoExpr>);
inline jule::Ptr<_1e46866c3_If> _1e4693e83_check_if(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e4375505_If>);
inline jule::Ptr<_1e46869ae_Else> _1e4694291_check_else(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e43758ac_Else>);
inline void _1e4694516_check_conditional(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e4375d30_Conditional>);
inline void _1e4694978_check_iter_scope_ssc(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::U64, jule::Ptr<_1e43702ad_ScopeTree>, jule::Ptr<_1e46862c7_Scope>&, jule::Ptr<_1e468ce7c_ScopeChecker>);
inline jule::Ptr<_1e46862c7_Scope> _1e4694dc9_check_iter_scope_sc(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::U64, jule::Ptr<_1e43702ad_ScopeTree>, jule::Ptr<_1e468ce7c_ScopeChecker>);
inline jule::Ptr<_1e46862c7_Scope> _1e4695281_check_iter_scope(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::U64, jule::Ptr<_1e43702ad_ScopeTree>&);
inline void _1e4695506_check_inf_iter(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e43736ac_Iter>&);
inline void _1e469577b_check_while_iter(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e43736ac_Iter>&);
inline void _1e4695a01_check_range_iter(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e43736ac_Iter>&);
inline void _1e4695c76_check_iter(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e43736ac_Iter>);
inline jule::Bool _1e4696084_check_valid_cont_label(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::U64);
inline jule::Bool _1e46963b4_check_valid_break_label(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::U64);
inline jule::Ptr<_1e4688373_ContSt> _1e46966d3_check_cont_valid_scope(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e4375082_ContSt>);
inline void _1e4696958_check_cont(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e4375082_ContSt>);
inline void _1e4696bcd_check_label(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e436d8b6_LabelSt>);
inline void _1e4696e53_push_goto(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e436dc6d_GotoSt>);
inline void _1e46971c8_check_postfix(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e436eba3_AssignSt>);
inline jule::Bool _1e46974d6_is_new_assign_ident(_1e468ce7c_ScopeChecker*, jule::Str);
inline jule::Bool _1e4697959_check_structure_assign_op(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e43462ea_StructIns>&, jule::Ptr<_1e436eba3_AssignSt>&, jule::Ptr<_1c974abc0_Data>&);
inline void _1e4697be0_check_single_assign(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e436eba3_AssignSt>&);
inline void _1e469822e___process_end_part_of_multi_assign(_1e468ce7c_ScopeChecker*, jule::Ptr<_1e46899d4_MultiAssign>, jule::Ptr<_1e436eba3_AssignSt>, jule::Ptr<_1e436e664_AssignLeft>, jule::Ptr<_1c974abc0_Data>, jule::Ptr<_1c974abc0_Data>);
inline void _1e46984a4_check_ret_multi_assign(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e436eba3_AssignSt>&);
inline void _1e4698729_check_multi_assign(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e436eba3_AssignSt>&);
inline void _1e469899e_check_assign_st(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e436eba3_AssignSt>);
inline jule::Ptr<_1e46862c7_Scope> _1e4698d56_check_case_scope(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e468a9d5_Case>&, jule::Ptr<_1e43702ad_ScopeTree>&);
inline jule::Ptr<_1e468a9d5_Case> _1e4699351_check_case(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e468a023_Match>, jule::I64, jule::Ptr<_1e4376979_Case>, jule::Ptr<_1c974abc0_Data>);
inline void _1e4699719_check_cases(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e4377150_MatchCase>&, jule::Ptr<_1e468a023_Match>, jule::Ptr<_1c974abc0_Data>);
inline jule::Ptr<_1e468a9d5_Case> _1e4699ac1_check_default(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e468a023_Match>, jule::Ptr<_1e43758ac_Else>);
inline void _1e4699d46_check_comptime_panic(_1e468ce7c_ScopeChecker*, jule::Ptr<_1e46862c7_Scope>&);
inline void _1e469a165_push_type_match(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e468a023_Match>, jule::Ptr<_1e4377150_MatchCase>&);
inline void _1e469a3da_check_type_match(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e4377150_MatchCase>&);
inline void _1e469a660_check_common_match(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e4377150_MatchCase>&);
inline void _1e469a8d5_check_match(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e4377150_MatchCase>);
inline void _1e469ab5a_check_fall(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e436e059_FallSt>);
inline jule::Ptr<_1e468872a_BreakSt> _1e469ae68_check_break_with_label(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e4374bca_BreakSt>);
inline jule::Ptr<_1e468872a_BreakSt> _1e469b276_check_plain_break(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e4374bca_BreakSt>);
inline void _1e469b4eb_check_break(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e4374bca_BreakSt>);
inline void _1e469b771_check_ret(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e437313a_RetSt>);
inline void _1e469b9e6_check_use_expr(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e4365d97_UseExpr>);
inline void _1e469bc6b_check_node(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Any&);
inline void _1e469be47_check_result(jule::Ptr<_1e468ce7c_ScopeChecker>);
inline void _1e469c123_check_tree(jule::Ptr<_1e468ce7c_ScopeChecker>);
inline void _1e469c442_check_goto(_1e468ce7c_ScopeChecker*, jule::Ptr<_1e468c168_ScopeGoto>&, jule::Ptr<_1e468bbe5_ScopeLabel>&);
inline void _1e469c61d_check_gotos(_1e468ce7c_ScopeChecker*);
inline void _1e469c7e9_check_labels(_1e468ce7c_ScopeChecker*);
inline void _1e469c9c5_check_vars(_1e468ce7c_ScopeChecker*);
inline void _1e469cba1_check_aliases(_1e468ce7c_ScopeChecker*);
inline void _1e469cec0_check(jule::Ptr<_1e468ce7c_ScopeChecker>, jule::Ptr<_1e43702ad_ScopeTree>&, jule::Ptr<_1e46862c7_Scope>&);
inline jule::Ptr<_1e468ce7c_ScopeChecker> _1e469d234_new_child_checker(jule::Ptr<_1e468ce7c_ScopeChecker>);
struct _1e468ce7c_ScopeChecker {
	jule::Ptr<_20cd9e6ec_Token> _field_called_from = jule::Ptr<_20cd9e6ec_Token>();
	jule::Ptr<_1e46ac452_Sema> _field_s = jule::Ptr<_1e46ac452_Sema>();
	jule::Ptr<_1e4383018_FnIns> _field_owner = jule::Ptr<_1e4383018_FnIns>();
	jule::Ptr<_1e468ce7c_ScopeChecker> _field_parent = jule::Ptr<_1e468ce7c_ScopeChecker>();
	jule::I64 _field_child_index = jule::I64();
	jule::Ptr<_1c9745c42_SymbolTable> _field_table = jule::Ptr<_1c9745c42_SymbolTable>();
	jule::Ptr<_1e46862c7_Scope> _field_scope = jule::Ptr<_1e46862c7_Scope>();
	jule::Ptr<_1e43702ad_ScopeTree> _field_tree = jule::Ptr<_1e43702ad_ScopeTree>();
	jule::Ptr<_1e4383018_FnIns> _field_result = jule::Ptr<_1e4383018_FnIns>();
	jule::U64 _field_it = jule::U64();
	jule::U64 _field_cse = jule::U64();
	jule::Ptr<jule::Slice<jule::Ptr<_1e468bbe5_ScopeLabel>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_1e468bbe5_ScopeLabel>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_1e468c168_ScopeGoto>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_1e468c168_ScopeGoto>>>();
	jule::I64 _field_i = jule::I64();
	

	_1e468ce7c_ScopeChecker(void) = default;

	inline bool operator==(_1e468ce7c_ScopeChecker _other) {
		return 
			this->_field_called_from == _other._field_called_from &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_child_index == _other._field_child_index &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1e468ce7c_ScopeChecker _other) { return !this->operator==(_other); }


};
inline void _1e469e378_check_cdef(_1e469de38_DirectiveChecker*, jule::Ptr<_1e43620c4_Directive>&);
inline void _1e469e5ed_check_typedef(_1e469de38_DirectiveChecker*, jule::Ptr<_1e43620c4_Directive>&);
inline void _1e469e873_check_derive(_1e469de38_DirectiveChecker*, jule::Ptr<_1e43620c4_Directive>&);
inline void _1e469eae8_check_namespace(_1e469de38_DirectiveChecker*, jule::Ptr<_1e43620c4_Directive>&);
inline void _1e469ed6d_check_deprecated(_1e469de38_DirectiveChecker*, jule::Ptr<_1e43620c4_Directive>&);
inline void _1e46a00e3_check_test(_1e469de38_DirectiveChecker*, jule::Ptr<_1e43620c4_Directive>&);
inline void _1e46a0368_check_directive(_1e469de38_DirectiveChecker*, jule::Ptr<_1e43620c4_Directive>&);
inline void _1e46a0544_check(_1e469de38_DirectiveChecker*);
struct _1e469de38_DirectiveChecker {
	jule::Ptr<_1e46ac452_Sema> _field_s = jule::Ptr<_1e46ac452_Sema>();
	jule::Ptr<jule::Slice<jule::Ptr<_1e43620c4_Directive>>> _field_d = jule::Ptr<jule::Slice<jule::Ptr<_1e43620c4_Directive>>>();
	jule::Any _field_o = jule::Any();
	

	_1e469de38_DirectiveChecker(void) = default;

	inline bool operator==(_1e469de38_DirectiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1e469de38_DirectiveChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e46a4768_ImportInfo> _1e46a4c74_find_package(_1e46a4768_ImportInfo*, jule::Str);
inline jule::Ptr<_1e46a4768_ImportInfo> _1e46a5082_select_package(_1e46a4768_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_1e46a4768_ImportInfo>)>);
inline jule::Ptr<_1e46c6eb6_Var> _1e46a5439_find_var(_1e46a4768_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1c97739b7_TypeAlias> _1e46a57e1_find_type_alias(_1e46a4768_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1e43360cb_Struct> _1e46a5b98_find_struct(_1e46a4768_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1e4380576_Fn> _1e46a6050_find_fn(_1e46a4768_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1e43d8d0a_Trait> _1e46a635d_find_trait(_1e46a4768_ImportInfo*, jule::Str);
inline jule::Ptr<_1e4456b58_Enum> _1e46a666b_find_enum(_1e46a4768_ImportInfo*, jule::Str);
inline jule::Bool _1e46a6a89_is_lookupable(_1e46a4768_ImportInfo*, jule::Str);
inline jule::Bool _1e46a6d97_exist_ident(_1e46a4768_ImportInfo*, jule::Str);
inline jule::Bool _1e46a712d_is_accessible_via_selection(_1e46a4768_ImportInfo*);
struct _1e46a4768_ImportInfo {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Str _field_path = jule::Str();
	jule::Str _field_link_path = jule::Str();
	jule::Str _field_ident = jule::Str();
	jule::Str _field_alias = jule::Str();
	jule::Bool _field_duplicate = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_std = jule::Bool();
	jule::Bool _field_import_all = jule::Bool();
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _field_selected = jule::Slice<jule::Ptr<_20cd9e6ec_Token>>();
	jule::Ptr<_1e46a742a_Package> _field_package = jule::Ptr<_1e46a742a_Package>();
	jule::I64 _field_mod_id = jule::I64();
	

	_1e46a4768_ImportInfo(void) = default;

	inline bool operator==(_1e46a4768_ImportInfo _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_path == _other._field_path &&
			this->_field_link_path == _other._field_link_path &&
			this->_field_ident == _other._field_ident &&
			this->_field_alias == _other._field_alias &&
			this->_field_duplicate == _other._field_duplicate &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_std == _other._field_std &&
			this->_field_import_all == _other._field_import_all &&
			this->_field_selected == _other._field_selected &&
			this->_field_package == _other._field_package &&
			this->_field_mod_id == _other._field_mod_id;
	}

	inline bool operator!=(_1e46a4768_ImportInfo _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e46a4768_ImportInfo> _1e46a78e2_find_package(_1e46a742a_Package*, jule::Str);
inline jule::Ptr<_1e46a4768_ImportInfo> _1e46a7c00_select_package(_1e46a742a_Package*, jule::Fn<jule::Bool(jule::Ptr<_1e46a4768_ImportInfo>)>);
inline jule::Ptr<_1e46c6eb6_Var> _1e46a80a7_find_var(_1e46a742a_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1c97739b7_TypeAlias> _1e46a845e_find_type_alias(_1e46a742a_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1e43360cb_Struct> _1e46a8816_find_struct(_1e46a742a_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1e4380576_Fn> _1e46a8bbd_find_fn(_1e46a742a_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1e43d8d0a_Trait> _1e46a8ecb_find_trait(_1e46a742a_Package*, jule::Str);
inline jule::Ptr<_1e4456b58_Enum> _1e46a92d9_find_enum(_1e46a742a_Package*, jule::Str);
struct _1e46a742a_Package {
	jule::Slice<jule::Ptr<_1c9745c42_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_1c9745c42_SymbolTable>>();
	

	_1e46a742a_Package(void) = default;

	inline bool operator==(_1e46a742a_Package _other) {
		return 
			this->_field_files == _other._field_files;
	}

	inline bool operator!=(_1e46a742a_Package _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e46a4768_ImportInfo> _1e46ac95d_find_package(_1e46ac452_Sema*, jule::Str);
inline jule::Ptr<_1e46a4768_ImportInfo> _1e46acc6b_select_package(_1e46ac452_Sema*, jule::Fn<jule::Bool(jule::Ptr<_1e46a4768_ImportInfo>)>);
inline jule::Ptr<_1e46c6eb6_Var> _1e46ad123_find_var(_1e46ac452_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1c97739b7_TypeAlias> _1e46ad4ca_find_type_alias(_1e46ac452_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1e43360cb_Struct> _1e46ad882_find_struct(_1e46ac452_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1e4380576_Fn> _1e46adc39_find_fn(_1e46ac452_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1e43d8d0a_Trait> _1e46ae047_find_trait(_1e46ac452_Sema*, jule::Str);
inline jule::Ptr<_1e4456b58_Enum> _1e46ae355_find_enum(_1e46ac452_Sema*, jule::Str);
inline jule::Bool _1e46ae72e_is_flag(_1e46ac452_Sema*, jule::I64);
inline void _1e46ae9a4_set_current_file(_1e46ac452_Sema*, jule::Ptr<_1c9745c42_SymbolTable>);
inline void _1e46aed6c_push_err(_1e46ac452_Sema*, jule::Ptr<_20cd9e6ec_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e46b018b_push_suggestion(_1e46ac452_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e46b0543_is_accessible_define(_1e46ac452_Sema*, jule::Bool, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Bool _1e46b0994_is_duplicated_ident(_1e46ac452_Sema*, jule::U64, jule::Str, jule::Bool);
inline void _1e46b0cb3_check_directives(jule::Ptr<_1e46ac452_Sema>, jule::Slice<jule::Ptr<_1e43620c4_Directive>>&, jule::Any);
inline jule::Bool _1e46b1214_check_generic_quantity(_1e46ac452_Sema*, jule::I64, jule::I64, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Bool _1e46b15dd_is_duplicated_import_selection(_1e46ac452_Sema*, jule::U64, jule::Str);
inline jule::Any _1e46b19a6_get_import_def(_1e46ac452_Sema*, jule::Str, jule::Ptr<_1e46a4768_ImportInfo>&);
inline jule::Bool _1e46b1cd6_check_import_selections(_1e46ac452_Sema*, jule::Ptr<_1e46a4768_ImportInfo>&);
inline jule::Bool _1e46b2127_is_use_alias_duplication(_1e46ac452_Sema*, jule::Ptr<_1e46a4768_ImportInfo>&);
inline jule::Bool _1e46b2446_check_import(_1e46ac452_Sema*, jule::Ptr<_1e46a4768_ImportInfo>&);
inline void _1e46b2622_check_imports(_1e46ac452_Sema*);
inline void _1e46b27ed_impl_file_impls(jule::Ptr<_1e46ac452_Sema>);
inline void _1e46b29c9_impl_impls(jule::Ptr<_1e46ac452_Sema>);
inline void _1e46b2ba5_check_enums(jule::Ptr<_1e46ac452_Sema>);
inline jule::Bool _1e46b3106_check_type_with_refers(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1c977858d_TypeSymbol>&, jule::Trait<_1c978dc35_Lookup>, jule::Ptr<_1c978191a_Referencer>);
inline jule::Bool _1e46b34ad_check_type(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1c977858d_TypeSymbol>&, jule::Trait<_1c978dc35_Lookup>);
inline jule::Ptr<_1c97746ee_TypeKind> _1e46b3931_build_type_with_generics(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1e436257a_TypeDecl>&, jule::Slice<jule::Ptr<_1c97739b7_TypeAlias>>, jule::Ptr<_1e4385c0d_ReferenceStack>);
inline jule::Ptr<_1c97746ee_TypeKind> _1e46b3c50_build_type(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1e436257a_TypeDecl>&);
inline jule::Ptr<_1c97746ee_TypeKind> _1e46b405d_select_type(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1e436257a_TypeDecl>&);
inline jule::Ptr<_1c974c73d_Eval> _1e46b44ae_evalpd(jule::Ptr<_1e46ac452_Sema>, jule::Trait<_1c978dc35_Lookup>, jule::Ptr<_1c97746ee_TypeKind>, jule::Ptr<_1e46c6eb6_Var>);
inline jule::Ptr<_1c974c73d_Eval> _1e46b4866_evalp(jule::Ptr<_1e46ac452_Sema>, jule::Trait<_1c978dc35_Lookup>, jule::Ptr<_1c97746ee_TypeKind>);
inline jule::Ptr<_1c974c73d_Eval> _1e46b4b74_eval(jule::Ptr<_1e46ac452_Sema>, jule::Trait<_1c978dc35_Lookup>);
inline jule::Bool _1e46b516e_check_assign_type(jule::Ptr<_1e46ac452_Sema>, jule::Bool, jule::Ptr<_1c97746ee_TypeKind>&, jule::Ptr<_1c974abc0_Data>&, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Bool _1e46b55e2_check_type_compatibility(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1c97746ee_TypeKind>&, jule::Ptr<_1c97746ee_TypeKind>&, jule::Ptr<_20cd9e6ec_Token>&);
inline jule::Ptr<_1c97746ee_TypeKind> _1e46b59cc_build_non_generic_type_kind(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1e436257a_TypeDecl>&, jule::Slice<jule::Ptr<_1e436d50e_GenericDecl>>&);
inline void _1e46b5c85_build_fn_non_generic_type_kinds(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1e4383018_FnIns>&);
inline jule::Ptr<_1e4383018_FnIns> _1e46b60c6_get_trait_check_fn_kind(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1e4380576_Fn>&);
inline jule::Bool _1e46b63e5_reload_fn_ins_types(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1e4383018_FnIns>&);
inline jule::Bool _1e46b6879_check_ref_validity_for_init_expr(jule::Ptr<_1e46ac452_Sema>, jule::Bool, jule::Ptr<_1c974abc0_Data>&, jule::Ptr<_20cd9e6ec_Token>&);
inline jule::Bool _1e46b6e73_check_validity_for_init_expr(jule::Ptr<_1e46ac452_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1c97746ee_TypeKind>&, jule::Ptr<_1c974abc0_Data>&, jule::Ptr<_20cd9e6ec_Token>&);
inline jule::Bool _1e46b732a_check_type_alias_decl_kind(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1c97739b7_TypeAlias>&, jule::Trait<_1c978dc35_Lookup>);
inline void _1e46b765a_check_type_alias_decl(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1c97739b7_TypeAlias>&, jule::Trait<_1c978dc35_Lookup>);
inline void _1e46b7902_check_type_alias_decl_dup(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1c97739b7_TypeAlias>&);
inline jule::Bool _1e46b7b77_check_type_alias_decls(jule::Ptr<_1e46ac452_Sema>);
inline void _1e46b7dec_check_enum_items_dup(_1e46ac452_Sema*, jule::Ptr<_1e4456b58_Enum>);
inline void _1e46b8172_check_enum_items_str(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1e4456b58_Enum>&);
inline void _1e46b83e7_check_enum_items_int(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1e4456b58_Enum>&);
inline void _1e46b866c_check_enum_decl(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1e4456b58_Enum>&);
inline jule::Bool _1e46b88d1_check_enum_decls(jule::Ptr<_1e46ac452_Sema>);
inline jule::Bool _1e46b8bde_check_decl_generics(_1e46ac452_Sema*, jule::Slice<jule::Ptr<_1e436d50e_GenericDecl>>&);
inline jule::Bool _1e46b901e_check_fn_decl_params_dup(_1e46ac452_Sema*, jule::Ptr<_1e4380576_Fn>&);
inline jule::Bool _1e46b9360_check_fn_decl_result_dup(_1e46ac452_Sema*, jule::Ptr<_1e4380576_Fn>&);
inline void _1e46b9618_check_fn_decl_prototype(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1e4380576_Fn>&);
inline void _1e46b98c1_check_trait_decl_method(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1e4380576_Fn>&);
inline void _1e46b9b79_check_trait_decl_methods(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1e43d8d0a_Trait>&);
inline void _1e46b9e10_check_trait_decl(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1e43d8d0a_Trait>&);
inline jule::Bool _1e46ba174_check_trait_decls(jule::Ptr<_1e46ac452_Sema>);
inline jule::Bool _1e46ba54d_check_trait_impl_methods(_1e46ac452_Sema*, jule::Ptr<_1e43d8d0a_Trait>&, jule::Ptr<_1e5c31431_Impl>&);
inline jule::Bool _1e46ba916_impl_to_struct(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1e43360cb_Struct>&, jule::Ptr<_1e5c31431_Impl>&);
inline void _1e46bab8b_impl_trait(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1e5c31431_Impl>&);
inline void _1e46bae11_impl_struct(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1e5c31431_Impl>&);
inline void _1e46bb186_impl_impl(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1e5c31431_Impl>&);
inline void _1e46bb4a5_check_var_decl(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1e46c6eb6_Var>&, jule::Trait<_1c978dc35_Lookup>);
inline void _1e46bb72a_check_global_var_decl(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1e46c6eb6_Var>&);
inline jule::Bool _1e46bb98e_check_global_decls(jule::Ptr<_1e46ac452_Sema>);
inline jule::Bool _1e46bbd68_check_struct_trait_impl(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1e43360cb_Struct>&, jule::Ptr<_1e43d8d0a_Trait>&);
inline jule::Bool _1e46bc187_check_struct_impls(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1e43360cb_Struct>&);
inline jule::Bool _1e46bc495_check_struct_fields(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1e43360cb_Struct>&);
inline void _1e46bc71a_check_struct_decl(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1e43360cb_Struct>&);
inline jule::Bool _1e46bc97e_check_struct_decls(jule::Ptr<_1e46ac452_Sema>);
inline void _1e46bcc04_check_fn_decl(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1e4380576_Fn>&);
inline jule::Bool _1e46bce68_check_fn_decls(jule::Ptr<_1e46ac452_Sema>);
inline void _1e46bd331_push_cycle_error(_1e46ac452_Sema*, jule::Ptr<_1e43360cb_Struct>&, jule::Ptr<_1e43360cb_Struct>&, jule::Str&);
inline jule::Bool _1e46bd782_check_cross_cycle(_1e46ac452_Sema*, jule::Ptr<_1e43360cb_Struct>&, jule::Ptr<_1e43360cb_Struct>&, jule::Str&);
inline jule::Bool _1e46bdc16_check_struct_derive_illegal_cycles(_1e46ac452_Sema*, jule::Str, jule::Ptr<_1e43360cb_Struct>&, jule::Ptr<_1c97746ee_TypeKind>&);
inline jule::Bool _1e46be046_check_struct_ins_derive_clone(_1e46ac452_Sema*, jule::Ptr<_1e43462ea_StructIns>);
inline void _1e46be233_check_package_decls(jule::Ptr<_1e46ac452_Sema>);
inline void _1e46be574_check_data_for_type_inference(_1e46ac452_Sema*, jule::Ptr<_1c974abc0_Data>&, jule::Ptr<_20cd9e6ec_Token>&);
inline void _1e46be80a_check_var(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1e46c6eb6_Var>&);
inline void _1e46beb29_check_type_var(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1e46c6eb6_Var>&, jule::Trait<_1c978dc35_Lookup>);
inline void _1e46bed05_check_global_types(jule::Ptr<_1e46ac452_Sema>);
inline jule::Ptr<_1e4383018_FnIns> _1e46c01ac_ready_to_check_fn(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1e43462ea_StructIns>&, jule::Ptr<_1e4380576_Fn>&);
inline void _1e46c04cb_check_type_method(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1e43462ea_StructIns>&, jule::Ptr<_1e4380576_Fn>&);
inline jule::Ptr<_1e4383018_FnIns> _1e46c092c_check_struct_ins_op(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1e43462ea_StructIns>&, jule::Ptr<_1e4380576_Fn>&, jule::Fn<jule::Bool(jule::Ptr<_1e4380576_Fn>)>);
inline jule::Bool _1e46c0c3a_check_fields(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1e43462ea_StructIns>&);
inline void _1e46c0eb0_precheck_struct_ins(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1e43462ea_StructIns>&);
inline void _1e46c1235_check_struct_ins(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1e43462ea_StructIns>&);
inline void _1e46c14aa_check_type_struct(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1e43360cb_Struct>&);
inline void _1e46c1686_check_struct_types(jule::Ptr<_1e46ac452_Sema>);
inline void _1e46c192d_check_struct_ins_operators(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1e43462ea_StructIns>);
inline void _1e46c1bd6_check_type_struct_operators(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1e43360cb_Struct>&);
inline void _1e46c1de5_check_struct_types_operators(jule::Ptr<_1e46ac452_Sema>);
inline void _1e46c217b_check_rets(_1e46ac452_Sema*, jule::Ptr<_1e4383018_FnIns>&);
inline void _1e46c249a_check_fn_ins_sc(_1e46ac452_Sema*, jule::Ptr<_1e4383018_FnIns>&, jule::Ptr<_1e468ce7c_ScopeChecker>&);
inline void _1e46c27b9_check_fn_ins_caller(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1e4383018_FnIns>&, jule::Ptr<_20cd9e6ec_Token>);
inline void _1e46c2a3e_check_fn_ins(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1e4383018_FnIns>&);
inline void _1e46c2cb4_check_type_fn(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1e4380576_Fn>&);
inline void _1e46c3039_check_test_fn(_1e46ac452_Sema*, jule::Ptr<_1e4383018_FnIns>&);
inline void _1e46c32ae_precheck_type_fn(jule::Ptr<_1e46ac452_Sema>, jule::Ptr<_1e4380576_Fn>&);
inline void _1e46c348a_precheck_fn_types(jule::Ptr<_1e46ac452_Sema>);
inline void _1e46c3666_check_fn_types(jule::Ptr<_1e46ac452_Sema>);
inline void _1e46c3842_check_package_types(jule::Ptr<_1e46ac452_Sema>);
inline void _1e46c3a1d_set_file_sema_fields(jule::Ptr<_1e46ac452_Sema>);
inline void _1e46c3be9_set_sema_fields(jule::Ptr<_1e46ac452_Sema>);
inline void _1e46c3e6e_check(jule::Ptr<_1e46ac452_Sema>, jule::Slice<jule::Ptr<_1c9745c42_SymbolTable>>&);
struct _1e46ac452_Sema {
	jule::Slice<_20ca8ec5b_Log> _field_errors = jule::Slice<_20ca8ec5b_Log>();
	jule::Slice<jule::Ptr<_1c9745c42_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_1c9745c42_SymbolTable>>();
	jule::Ptr<_1c9745c42_SymbolTable> _field_file = jule::Ptr<_1c9745c42_SymbolTable>();
	jule::I64 _field_flags = 0LL;
	

	_1e46ac452_Sema(void) = default;

	inline bool operator==(_1e46ac452_Sema _other) {
		return 
			this->_field_errors == _other._field_errors &&
			this->_field_files == _other._field_files &&
			this->_field_file == _other._field_file &&
			this->_field_flags == _other._field_flags;
	}

	inline bool operator!=(_1e46ac452_Sema _other) { return !this->operator==(_other); }


};
inline _1e46c4326_MissingRetChecker static__1e46c46de_new(void);
inline jule::Bool _1e46c49b9_check_conditional(_1e46c4326_MissingRetChecker*, jule::Ptr<_1e4686daa_Conditional>);
inline jule::Bool _1e46c4cc7_check_match(_1e46c4326_MissingRetChecker*, jule::Ptr<_1e468a023_Match>);
inline jule::Bool _1e46c50d5_check_inf_iter(_1e46c4326_MissingRetChecker*, jule::Ptr<_1e4687196_InfIter>);
inline jule::Bool _1e46c53e3_check_scope(_1e46c4326_MissingRetChecker*, jule::Ptr<_1e46862c7_Scope>);
inline jule::Bool _1e46c5701_check(_1e46c4326_MissingRetChecker*, jule::Ptr<_1e46862c7_Scope>);
struct _1e46c4326_MissingRetChecker {
	jule::Slice<jule::U64> _field_breaked = jule::Slice<jule::U64>();
	jule::Bool _field_falled = jule::Bool();
	

	_1e46c4326_MissingRetChecker(void) = default;

	inline bool operator==(_1e46c4326_MissingRetChecker _other) {
		return 
			this->_field_breaked == _other._field_breaked &&
			this->_field_falled == _other._field_falled;
	}

	inline bool operator!=(_1e46c4326_MissingRetChecker _other) { return !this->operator==(_other); }


};
struct _1e46c5ee8_IterRelation {
	jule::Ptr<_1e46c6eb6_Var> _field_range = jule::Ptr<_1e46c6eb6_Var>();
	

	_1e46c5ee8_IterRelation(void) = default;

	inline bool operator==(_1e46c5ee8_IterRelation _other) {
		return 
			this->_field_range == _other._field_range;
	}

	inline bool operator!=(_1e46c5ee8_IterRelation _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e46c736d_is_initialized(_1e46c6eb6_Var*);
inline jule::Bool _1e46c75d2_is_type_inferred(_1e46c6eb6_Var*);
struct _1e46c6eb6_Var {
	jule::Ptr<_1e46862c7_Scope> _field_scope = jule::Ptr<_1e46862c7_Scope>();
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_constant = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_used = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1c977858d_TypeSymbol> _field_kind = jule::Ptr<_1c977858d_TypeSymbol>();
	jule::Ptr<_1c974bc48_Value> _field_value = jule::Ptr<_1c974bc48_Value>();
	jule::Ptr<_1e4385c0d_ReferenceStack> _field_refers = jule::Ptr<_1e4385c0d_ReferenceStack>();
	jule::Slice<jule::Ptr<_1e43620c4_Directive>> _field_directives = jule::Slice<jule::Ptr<_1e43620c4_Directive>>();
	jule::Ptr<_1e46c5ee8_IterRelation> _field_iter_relation = jule::Ptr<_1e46c5ee8_IterRelation>();
	jule::Slice<jule::Ptr<_1e46c6eb6_Var>> _field_depends = jule::Slice<jule::Ptr<_1e46c6eb6_Var>>();
	

	_1e46c6eb6_Var(void) = default;

	inline bool operator==(_1e46c6eb6_Var _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_constant == _other._field_constant &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_public == _other._field_public &&
			this->_field_used == _other._field_used &&
			this->_field_statically == _other._field_statically &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_value == _other._field_value &&
			this->_field_refers == _other._field_refers &&
			this->_field_directives == _other._field_directives &&
			this->_field_iter_relation == _other._field_iter_relation &&
			this->_field_depends == _other._field_depends;
	}

	inline bool operator!=(_1e46c6eb6_Var _other) { return !this->operator==(_other); }


};
inline jule::Bool static__1e46c813d_dispose(jule::Ptr<_1e4380576_Fn>);
inline jule::Bool static__1e46c83d5_to_str(jule::Ptr<_1e4380576_Fn>);
inline jule::Bool static__1e46c8726_logical(jule::Ptr<_1e4380576_Fn>&, jule::Str);
inline jule::Bool static__1e46c89bd_eq(jule::Ptr<_1e4380576_Fn>);
inline jule::Bool static__1e46c8c65_gt(jule::Ptr<_1e4380576_Fn>);
inline jule::Bool static__1e46c900c_gt_eq(jule::Ptr<_1e4380576_Fn>);
inline jule::Bool static__1e46c92a4_lt(jule::Ptr<_1e4380576_Fn>);
inline jule::Bool static__1e46c954b_lt_eq(jule::Ptr<_1e4380576_Fn>);
inline jule::Bool static__1e46c988c_result(jule::Ptr<_1e4380576_Fn>&, jule::Str);
inline jule::Bool static__1e46c9b34_shl(jule::Ptr<_1e4380576_Fn>);
inline jule::Bool static__1e46c9dcb_shr(jule::Ptr<_1e4380576_Fn>);
inline jule::Bool static__1e46ca173_add(jule::Ptr<_1e4380576_Fn>);
inline jule::Bool static__1e46ca41a_sub(jule::Ptr<_1e4380576_Fn>);
inline jule::Bool static__1e46ca6b2_div(jule::Ptr<_1e4380576_Fn>);
inline jule::Bool static__1e46ca959_mul(jule::Ptr<_1e4380576_Fn>);
inline jule::Bool static__1e46cac01_mod(jule::Ptr<_1e4380576_Fn>);
inline jule::Bool static__1e46cae98_bit_and(jule::Ptr<_1e4380576_Fn>);
inline jule::Bool static__1e46cb240_bit_or(jule::Ptr<_1e4380576_Fn>);
inline jule::Bool static__1e46cb4d7_bit_xor(jule::Ptr<_1e4380576_Fn>);
inline jule::Bool static__1e46cb828_unary(jule::Ptr<_1e4380576_Fn>&, jule::Str);
inline jule::Bool static__1e46cbac0_neg(jule::Ptr<_1e4380576_Fn>);
inline jule::Bool static__1e46cbd67_pos(jule::Ptr<_1e4380576_Fn>);
inline jule::Bool static__1e46cc10e_bit_not(jule::Ptr<_1e4380576_Fn>);
inline jule::Bool static__1e46cc450_assign(jule::Ptr<_1e4380576_Fn>&, jule::Str);
inline jule::Bool static__1e46cc6e7_add_assign(jule::Ptr<_1e4380576_Fn>);
inline jule::Bool static__1e46cc98e_sub_assign(jule::Ptr<_1e4380576_Fn>);
inline jule::Bool static__1e46ccc36_div_assign(jule::Ptr<_1e4380576_Fn>);
inline jule::Bool static__1e46ccecd_mul_assign(jule::Ptr<_1e4380576_Fn>);
inline jule::Bool static__1e46cd275_mod_assign(jule::Ptr<_1e4380576_Fn>);
inline jule::Bool static__1e46cd51c_shl_assign(jule::Ptr<_1e4380576_Fn>);
inline jule::Bool static__1e46cd7b4_shr_assign(jule::Ptr<_1e4380576_Fn>);
inline jule::Bool static__1e46cda5b_bit_or_assign(jule::Ptr<_1e4380576_Fn>);
inline jule::Bool static__1e46cdd03_bit_and_assign(jule::Ptr<_1e4380576_Fn>);
inline jule::Bool static__1e46ce09a_bit_xor_assign(jule::Ptr<_1e4380576_Fn>);
struct _1e46c79bc_FuncPattern {
	

	_1e46c79bc_FuncPattern(void) = default;

	inline bool operator==(_1e46c79bc_FuncPattern _other) { return true; }

	inline bool operator!=(_1e46c79bc_FuncPattern _other) { return !this->operator==(_other); }


};
inline void _1c973723e_push_err(_1c9736c55_TypeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c97374a3_check_trait(_1c9736c55_TypeCompatibilityChecker*);
inline jule::Bool _1c9737717_check_ptr(_1c9736c55_TypeCompatibilityChecker*);
inline jule::Bool _1c973797b_check_prim(_1c9736c55_TypeCompatibilityChecker*);
inline jule::Bool _1c9737be0_check(_1c9736c55_TypeCompatibilityChecker*);
struct _1c9736c55_TypeCompatibilityChecker {
	jule::Ptr<_1e46ac452_Sema> _field_s = jule::Ptr<_1e46ac452_Sema>();
	jule::Ptr<_1c97746ee_TypeKind> _field_dest = jule::Ptr<_1c97746ee_TypeKind>();
	jule::Ptr<_1c97746ee_TypeKind> _field_src = jule::Ptr<_1c97746ee_TypeKind>();
	jule::Ptr<_20cd9e6ec_Token> _field_error_token = jule::Ptr<_20cd9e6ec_Token>();
	

	_1c9736c55_TypeCompatibilityChecker(void) = default;

	inline bool operator==(_1c9736c55_TypeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_error_token == _other._field_error_token;
	}

	inline bool operator!=(_1c9736c55_TypeCompatibilityChecker _other) { return !this->operator==(_other); }


};
inline void _1c9738691_push_err(_1c973822e_AssignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c9738905_check_validity(_1c973822e_AssignTypeChecker*);
inline jule::Bool _1c9738b69_check_const(_1c973822e_AssignTypeChecker*);
inline jule::Bool _1c9738dcd_is_prim(_1c973822e_AssignTypeChecker*);
inline jule::Bool _1c9739142_check_compatibility(_1c973822e_AssignTypeChecker*);
inline jule::Bool _1c97393a6_check(_1c973822e_AssignTypeChecker*);
struct _1c973822e_AssignTypeChecker {
	jule::Ptr<_1e46ac452_Sema> _field_s = jule::Ptr<_1e46ac452_Sema>();
	jule::Ptr<_1c97746ee_TypeKind> _field_dest = jule::Ptr<_1c97746ee_TypeKind>();
	jule::Ptr<_1c974abc0_Data> _field_d = jule::Ptr<_1c974abc0_Data>();
	jule::Ptr<_20cd9e6ec_Token> _field_error_token = jule::Ptr<_20cd9e6ec_Token>();
	

	_1c973822e_AssignTypeChecker(void) = default;

	inline bool operator==(_1c973822e_AssignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_error_token == _other._field_error_token;
	}

	inline bool operator!=(_1c973822e_AssignTypeChecker _other) { return !this->operator==(_other); }


};
inline void _1c973a110_push_generic(_1c9739a7c_DynamicTypeAnnotation*, jule::Ptr<_1c97746ee_TypeKind>&, jule::I64);
inline jule::Bool _1c973a3da_annotate_prim(_1c9739a7c_DynamicTypeAnnotation*, jule::Ptr<_1c97746ee_TypeKind>&);
inline jule::Bool _1c973a6e8_annotate_slc(_1c9739a7c_DynamicTypeAnnotation*, jule::Ptr<_1c97746ee_TypeKind>&);
inline jule::Bool _1c973aaa0_check_map_key(_1c9739a7c_DynamicTypeAnnotation*, jule::Ptr<_1c97746ee_TypeKind>*, jule::Ptr<_1c97746ee_TypeKind>&);
inline jule::Bool _1c973adad_annotate_map(_1c9739a7c_DynamicTypeAnnotation*, jule::Ptr<_1c97746ee_TypeKind>&);
inline jule::Bool _1c973b1bb_annotate_fn(_1c9739a7c_DynamicTypeAnnotation*, jule::Ptr<_1c97746ee_TypeKind>&);
inline jule::Bool _1c973b4c9_annotate_ptr(_1c9739a7c_DynamicTypeAnnotation*, jule::Ptr<_1c97746ee_TypeKind>&);
inline jule::Bool _1c973b7d7_annotate_sptr(_1c9739a7c_DynamicTypeAnnotation*, jule::Ptr<_1c97746ee_TypeKind>&);
inline jule::Bool _1c973bae5_annotate_any(_1c9739a7c_DynamicTypeAnnotation*, jule::Ptr<_1c97746ee_TypeKind>&);
inline jule::Bool _1c973be03_annotate_kind(_1c9739a7c_DynamicTypeAnnotation*, jule::Ptr<_1c97746ee_TypeKind>&);
inline jule::Bool _1c973c167_annotate(_1c9739a7c_DynamicTypeAnnotation*);
struct _1c9739a7c_DynamicTypeAnnotation {
	jule::Ptr<_1c974c73d_Eval> _field_e = jule::Ptr<_1c974c73d_Eval>();
	jule::Ptr<_1e4383018_FnIns> _field_f = jule::Ptr<_1e4383018_FnIns>();
	jule::Ptr<_1e438217c_ParamIns> _field_p = jule::Ptr<_1e438217c_ParamIns>();
	jule::Ptr<_1c974abc0_Data> _field_a = jule::Ptr<_1c974abc0_Data>();
	jule::Ptr<_20cd9e6ec_Token> _field_error_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Ptr<_1c97746ee_TypeKind>* _field_k = nullptr;
	

	_1c9739a7c_DynamicTypeAnnotation(void) = default;

	inline bool operator==(_1c9739a7c_DynamicTypeAnnotation _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_f == _other._field_f &&
			this->_field_p == _other._field_p &&
			this->_field_a == _other._field_a &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_k == _other._field_k;
	}

	inline bool operator!=(_1c9739a7c_DynamicTypeAnnotation _other) { return !this->operator==(_other); }


};
inline void _1c973cd8d_push_err_token(_1c973c83d_FnCallArgChecker*, jule::Ptr<_20cd9e6ec_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c973d1ac_push_err(_1c973c83d_FnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1e438217c_ParamIns>> _1c973d421_get_params(_1c973c83d_FnCallArgChecker*);
inline jule::Bool _1c973d72e_check_counts(_1c973c83d_FnCallArgChecker*, jule::Slice<jule::Ptr<_1e438217c_ParamIns>>&);
inline jule::Bool _1c973db80_check_arg(_1c973c83d_FnCallArgChecker*, jule::Ptr<_1e438217c_ParamIns>&, jule::Ptr<_1c974abc0_Data>&, jule::Ptr<_20cd9e6ec_Token>&);
inline jule::Bool _1c973e037_push(_1c973c83d_FnCallArgChecker*, jule::Ptr<_1e438217c_ParamIns>&, jule::Ptr<_1e43659e0_Expr>);
inline jule::Bool _1c973e3de_push_variadic(_1c973c83d_FnCallArgChecker*, jule::Ptr<_1e438217c_ParamIns>&, jule::I64);
inline jule::Bool _1c973e6ec_check_args(_1c973c83d_FnCallArgChecker*, jule::Slice<jule::Ptr<_1e438217c_ParamIns>>&);
inline jule::Bool _1c973e983_check_dynamic_type_annotation(_1c973c83d_FnCallArgChecker*);
inline jule::Bool _1c973ec08_check(_1c973c83d_FnCallArgChecker*);
struct _1c973c83d_FnCallArgChecker {
	jule::Ptr<_1c974c73d_Eval> _field_e = jule::Ptr<_1c974c73d_Eval>();
	jule::Slice<jule::Ptr<_1e43659e0_Expr>> _field_args = jule::Slice<jule::Ptr<_1e43659e0_Expr>>();
	jule::Ptr<_20cd9e6ec_Token> _field_error_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Ptr<_1e4383018_FnIns> _field_f = jule::Ptr<_1e4383018_FnIns>();
	jule::Bool _field_dynamic_annotation = jule::Bool();
	jule::Slice<jule::Any> _field_arg_models = jule::Slice<jule::Any>();
	

	_1c973c83d_FnCallArgChecker(void) = default;

	inline bool operator==(_1c973c83d_FnCallArgChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_args == _other._field_args &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_f == _other._field_f &&
			this->_field_dynamic_annotation == _other._field_dynamic_annotation &&
			this->_field_arg_models == _other._field_arg_models;
	}

	inline bool operator!=(_1c973c83d_FnCallArgChecker _other) { return !this->operator==(_other); }


};
inline void _1c9740753_push_err(_1c9740247_StructLitChecker*, jule::Ptr<_20cd9e6ec_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c9740a72_push_suggestion(_1c9740247_StructLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1c9740e3a_push_match(_1c9740247_StructLitChecker*, jule::Ptr<_1e434014b_FieldIns>&, jule::Ptr<_1c974abc0_Data>&, jule::Ptr<_20cd9e6ec_Token>&);
inline void _1c9741259_check_pair(_1c9740247_StructLitChecker*, jule::Ptr<_1e436a4c8_FieldExprPair>&, jule::Slice<jule::Ptr<_1e43659e0_Expr>>&);
inline jule::Bool _1c9741567_ready_exprs(_1c9740247_StructLitChecker*, jule::Slice<jule::Ptr<_1e43659e0_Expr>>&);
inline void _1c97417dc_check(_1c9740247_StructLitChecker*, jule::Slice<jule::Ptr<_1e43659e0_Expr>>&);
struct _1c9740247_StructLitChecker {
	jule::Ptr<_1c974c73d_Eval> _field_e = jule::Ptr<_1c974c73d_Eval>();
	jule::Ptr<_20cd9e6ec_Token> _field_error_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Ptr<_1e43462ea_StructIns> _field_s = jule::Ptr<_1e43462ea_StructIns>();
	jule::Slice<jule::Ptr<_1e433773c_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_1e433773c_StructArgExprModel>>();
	

	_1c9740247_StructLitChecker(void) = default;

	inline bool operator==(_1c9740247_StructLitChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_s == _other._field_s &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1c9740247_StructLitChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e46c6eb6_Var> _1c97422c1_build_var(_1c9741d2b_RangeChecker*, jule::Ptr<_1e4372c83_VarDecl>&);
inline void _1c974249c_set_size_key(_1c9741d2b_RangeChecker*);
inline void _1c9742887_check_range_expr_validity(_1c9741d2b_RangeChecker*, jule::Ptr<_1c974abc0_Data>&, jule::Ptr<_1e46c6eb6_Var>&, jule::Ptr<_1c97746ee_TypeKind>&);
inline void _1c9742a74_check_slice(_1c9741d2b_RangeChecker*);
inline void _1c9742c50_check_array(_1c9741d2b_RangeChecker*);
inline void _1c9742e2b_check_map_key_a(_1c9741d2b_RangeChecker*);
inline void _1c9743107_check_map_key_b(_1c9741d2b_RangeChecker*);
inline void _1c97432d3_check_map(_1c9741d2b_RangeChecker*);
inline void _1c97434ae_check_str(_1c9741d2b_RangeChecker*);
inline jule::Bool _1c9743723_check(_1c9741d2b_RangeChecker*);
struct _1c9741d2b_RangeChecker {
	jule::Ptr<_1e468ce7c_ScopeChecker> _field_sc = jule::Ptr<_1e468ce7c_ScopeChecker>();
	jule::Ptr<_1e4374823_RangeKind> _field_rang = jule::Ptr<_1e4374823_RangeKind>();
	jule::Ptr<_1e4687eee_RangeIter> _field_kind = jule::Ptr<_1e4687eee_RangeIter>();
	jule::Ptr<_1c974abc0_Data> _field_d = jule::Ptr<_1c974abc0_Data>();
	

	_1c9741d2b_RangeChecker(void) = default;

	inline bool operator==(_1c9741d2b_RangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_kind == _other._field_kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1c9741d2b_RangeChecker _other) { return !this->operator==(_other); }


};
inline void _1c974446b_prepare_types(_1c9743eb5_RetTypeChecker*);
inline void _1c97446e1_prepare_exprs(_1c9743eb5_RetTypeChecker*, jule::Ptr<_1e43659e0_Expr>&);
inline void _1c97448bc_ret_vars(_1c9743eb5_RetTypeChecker*);
inline void _1c9744a98_check_exprs(_1c9743eb5_RetTypeChecker*);
inline jule::Bool _1c9744da6_check(_1c9743eb5_RetTypeChecker*, jule::Ptr<_1e43659e0_Expr>&);
struct _1c9743eb5_RetTypeChecker {
	jule::Ptr<_1e468ce7c_ScopeChecker> _field_sc = jule::Ptr<_1e468ce7c_ScopeChecker>();
	jule::Ptr<_1e4383018_FnIns> _field_f = jule::Ptr<_1e4383018_FnIns>();
	jule::Slice<jule::Ptr<_1c97746ee_TypeKind>> _field_types = jule::Slice<jule::Ptr<_1c97746ee_TypeKind>>();
	jule::Slice<jule::Ptr<_1e43659e0_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1e43659e0_Expr>>();
	jule::Slice<jule::Ptr<_1e46c6eb6_Var>> _field_vars = jule::Slice<jule::Ptr<_1e46c6eb6_Var>>();
	jule::Ptr<_20cd9e6ec_Token> _field_error_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Any _field_model = jule::Any();
	

	_1c9743eb5_RetTypeChecker(void) = default;

	inline bool operator==(_1c9743eb5_RetTypeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_f == _other._field_f &&
			this->_field_types == _other._field_types &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_vars == _other._field_vars &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1c9743eb5_RetTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e46a4768_ImportInfo> _1c974624d_find_package(_1c9745c42_SymbolTable*, jule::Str);
inline jule::Ptr<_1e46a4768_ImportInfo> _1c974655b_select_package(_1c9745c42_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_1e46a4768_ImportInfo>)>);
inline jule::Ptr<_1e46c6eb6_Var> _1c9746913_find_var(_1c9745c42_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1c97739b7_TypeAlias> _1c9746cba_find_type_alias(_1c9745c42_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1e43360cb_Struct> _1c9747172_find_struct(_1c9745c42_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1e4380576_Fn> _1c9747529_find_fn(_1c9745c42_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1e43d8d0a_Trait> _1c9747837_find_trait(_1c9745c42_SymbolTable*, jule::Str);
inline jule::Ptr<_1e4456b58_Enum> _1c9747b45_find_enum(_1c9745c42_SymbolTable*, jule::Str);
inline jule::Ptr<_1e46c6eb6_Var> _1c97481b7___find_var(_1c9745c42_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Ptr<_1c97739b7_TypeAlias> _1c9748618___find_type_alias(_1c9745c42_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Any _1c97489c0_def_by_ident(_1c9745c42_SymbolTable*, jule::Str, jule::Bool);
inline jule::Bool _1c9748e21_is_duplicated_ident(_1c9745c42_SymbolTable*, jule::U64, jule::Str, jule::Bool);
struct _1c9745c42_SymbolTable {
	jule::Ptr<_20cda4adc_File> _field_file = jule::Ptr<_20cda4adc_File>();
	jule::Slice<_1e43870e9_Pass> _field_passes = jule::Slice<_1e43870e9_Pass>();
	jule::Slice<jule::Ptr<_1e46a4768_ImportInfo>> _field_imports = jule::Slice<jule::Ptr<_1e46a4768_ImportInfo>>();
	jule::Slice<jule::Ptr<_1e46c6eb6_Var>> _field_vars = jule::Slice<jule::Ptr<_1e46c6eb6_Var>>();
	jule::Slice<jule::Ptr<_1c97739b7_TypeAlias>> _field_type_aliases = jule::Slice<jule::Ptr<_1c97739b7_TypeAlias>>();
	jule::Slice<jule::Ptr<_1e43360cb_Struct>> _field_structs = jule::Slice<jule::Ptr<_1e43360cb_Struct>>();
	jule::Slice<jule::Ptr<_1e4380576_Fn>> _field_funcs = jule::Slice<jule::Ptr<_1e4380576_Fn>>();
	jule::Slice<jule::Ptr<_1e43d8d0a_Trait>> _field_traits = jule::Slice<jule::Ptr<_1e43d8d0a_Trait>>();
	jule::Slice<jule::Ptr<_1e4456b58_Enum>> _field_enums = jule::Slice<jule::Ptr<_1e4456b58_Enum>>();
	jule::Slice<jule::Ptr<_1e5c31431_Impl>> _field_impls = jule::Slice<jule::Ptr<_1e5c31431_Impl>>();
	

	_1c9745c42_SymbolTable(void) = default;

	inline bool operator==(_1c9745c42_SymbolTable _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_passes == _other._field_passes &&
			this->_field_imports == _other._field_imports &&
			this->_field_vars == _other._field_vars &&
			this->_field_type_aliases == _other._field_type_aliases &&
			this->_field_structs == _other._field_structs &&
			this->_field_funcs == _other._field_funcs &&
			this->_field_traits == _other._field_traits &&
			this->_field_enums == _other._field_enums &&
			this->_field_impls == _other._field_impls;
	}

	inline bool operator!=(_1c9745c42_SymbolTable _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c974b0aa_is_nil(_1c974abc0_Data*);
inline jule::Bool _1c974b31e_is_void(_1c974abc0_Data*);
inline jule::Bool _1c974b583_is_const(_1c974abc0_Data*);
inline jule::Bool _1c974b891_good_operand(_1c974abc0_Data*, jule::Ptr<_1c974abc0_Data>&);
struct _1c974abc0_Data {
	jule::Ptr<_1c97746ee_TypeKind> _field_kind = jule::Ptr<_1c97746ee_TypeKind>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Bool _field_lvalue = jule::Bool();
	jule::Bool _field_is_rune = jule::Bool();
	jule::Any _field_model = jule::Any();
	jule::Bool _field_decl = jule::Bool();
	jule::Ptr<_1c968bb88_Const> _field_constant = jule::Ptr<_1c968bb88_Const>();
	

	_1c974abc0_Data(void) = default;

	inline bool operator==(_1c974abc0_Data _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_reference == _other._field_reference &&
			this->_field_lvalue == _other._field_lvalue &&
			this->_field_is_rune == _other._field_is_rune &&
			this->_field_model == _other._field_model &&
			this->_field_decl == _other._field_decl &&
			this->_field_constant == _other._field_constant;
	}

	inline bool operator!=(_1c974abc0_Data _other) { return !this->operator==(_other); }


};
struct _1c974bc48_Value {
	jule::Ptr<_1e43659e0_Expr> _field_expr = jule::Ptr<_1e43659e0_Expr>();
	jule::Ptr<_1c974abc0_Data> _field_data = jule::Ptr<_1c974abc0_Data>();
	

	_1c974bc48_Value(void) = default;

	inline bool operator==(_1c974bc48_Value _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1c974bc48_Value _other) { return !this->operator==(_other); }


};
inline void _1c974cc16_push_err(_1c974c73d_Eval*, jule::Ptr<_20cd9e6ec_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c974d035_push_suggestion(_1c974c73d_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1c974d211_allow_builtin(_1c974c73d_Eval*);
inline void _1c974d3dc_disallow_builtin(_1c974c73d_Eval*);
inline jule::Bool _1c974d651_is_unsafe(_1c974c73d_Eval*);
inline jule::Bool _1c974d8b5_is_global(_1c974c73d_Eval*);
inline jule::Bool _1c974dbc3_apply_numeric_prefix(_1c974c73d_Eval*, jule::Ptr<_1c974abc0_Data>&);
inline jule::Ptr<_1c974abc0_Data> _1c974de37_lit_nil(_1c974c73d_Eval*);
inline jule::Ptr<_1c974abc0_Data> _1c974e245_lit_str(_1c974c73d_Eval*, jule::Ptr<_1e436665b_LitExpr>&);
inline jule::Ptr<_1c974abc0_Data> _1c974e553_lit_bool(_1c974c73d_Eval*, jule::Ptr<_1e436665b_LitExpr>&);
inline jule::Ptr<_1c974abc0_Data> _1c974e861_lit_rune(_1c974c73d_Eval*, jule::Ptr<_1e436665b_LitExpr>&);
inline jule::Ptr<_1c974abc0_Data> _1c974eb6e_lit_float(_1c974c73d_Eval*, jule::Ptr<_1e436665b_LitExpr>&);
inline jule::Ptr<_1c974abc0_Data> _1c974ee7c_lit_int(_1c974c73d_Eval*, jule::Ptr<_1e436665b_LitExpr>&);
inline jule::Ptr<_1c974abc0_Data> _1c975028a_lit_num(_1c974c73d_Eval*, jule::Ptr<_1e436665b_LitExpr>&);
inline jule::Ptr<_1c974abc0_Data> _1c9750598_eval_lit(_1c974c73d_Eval*, jule::Ptr<_1e436665b_LitExpr>);
inline jule::Any _1c97508a6_find_builtins(_1c974c73d_Eval*, jule::Str);
inline jule::Any _1c9750c5d_get_def(_1c974c73d_Eval*, jule::Str, jule::Bool);
inline void _1cb9219ba_push_reference(_1c974c73d_Eval*, jule::Ptr<_1e4383018_FnIns>&);
inline void _1cb934add_push_reference(_1c974c73d_Eval*, jule::Ptr<_1e46c6eb6_Var>&);
inline void _1cc1b76b1_push_reference(_1c974c73d_Eval*, jule::Ptr<_1e43462ea_StructIns>&);
inline jule::Ptr<_1c974abc0_Data> _1c97512e1___eval_enum(_1c974c73d_Eval*, jule::Ptr<_1e4456b58_Enum>);
inline jule::Ptr<_1c974abc0_Data> _1c9751698_eval_enum(_1c974c73d_Eval*, jule::Ptr<_1e4456b58_Enum>, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Ptr<_1c974abc0_Data> _1c97519a6___eval_struct(_1c974c73d_Eval*, jule::Ptr<_1e43462ea_StructIns>);
inline jule::Ptr<_1c974abc0_Data> _1c9751d5d_eval_struct(_1c974c73d_Eval*, jule::Ptr<_1e43462ea_StructIns>, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Ptr<_1c974abc0_Data> _1c975216b_eval_fn_ins(_1c974c73d_Eval*, jule::Ptr<_1e4383018_FnIns>);
inline void _1c975248a_check_deprecated(_1c974c73d_Eval*, jule::Slice<jule::Ptr<_1e43620c4_Directive>>&, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Ptr<_1c974abc0_Data> _1c9752842_eval_fn(_1c974c73d_Eval*, jule::Ptr<_1e4380576_Fn>, jule::Ptr<_20cd9e6ec_Token>);
inline void _1c9752c2c_push_illegal_cycle_error(_1c974c73d_Eval*, jule::Ptr<_1e46c6eb6_Var>&, jule::Ptr<_1e46c6eb6_Var>&, jule::Str&);
inline jule::Bool _1c97530e5_check_cross_cycle(_1c974c73d_Eval*, jule::Ptr<_1e46c6eb6_Var>&, jule::Str&);
inline jule::Bool _1c975349c_check_illegal_cycles(_1c974c73d_Eval*, jule::Ptr<_1e46c6eb6_Var>&, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Ptr<_1c974abc0_Data> _1c9753854_eval_var(_1c974c73d_Eval*, jule::Ptr<_1e46c6eb6_Var>, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Ptr<_1c974abc0_Data> _1c9753c0b_eval_type_alias(_1c974c73d_Eval*, jule::Ptr<_1c97739b7_TypeAlias>, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Ptr<_1c974abc0_Data> _1c97540b3_eval_def(_1c974c73d_Eval*, jule::Any, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Ptr<_1c974abc0_Data> _1c97543c1_eval_ident(_1c974c73d_Eval*, jule::Ptr<_1e4367690_IdentExpr>);
inline jule::Ptr<_1c974abc0_Data> _1c97546ce_eval_unary(jule::Ptr<_1c974c73d_Eval>, jule::Ptr<_1e4367d99_UnaryExpr>);
inline jule::Ptr<_1c974abc0_Data> _1c97549dc_eval_variadic(jule::Ptr<_1c974c73d_Eval>, jule::Ptr<_1e4368251_VariadicExpr>);
inline jule::Ptr<_1c974abc0_Data> _1c9754cea_eval_unsafe(jule::Ptr<_1c974c73d_Eval>, jule::Ptr<_1e4366d65_UnsafeExpr>);
inline jule::Ptr<_1c974abc0_Data> _1c9755108_eval_arr(jule::Ptr<_1c974c73d_Eval>, jule::Ptr<_1e436be69_SliceExpr>);
inline jule::Ptr<_1c974abc0_Data> _1c97554b0_eval_exp_slc(jule::Ptr<_1c974c73d_Eval>, jule::Ptr<_1e436be69_SliceExpr>, jule::Ptr<_1c97746ee_TypeKind>);
inline jule::Ptr<_1c974abc0_Data> _1c97557bd_eval_slice_expr(jule::Ptr<_1c974c73d_Eval>, jule::Ptr<_1e436be69_SliceExpr>);
inline void _1c9755b0e_check_integer_indexing_by_data(_1c974c73d_Eval*, jule::Ptr<_1c974abc0_Data>&, jule::Ptr<_20cd9e6ec_Token>);
inline void _1c9755ed8_indexing_ptr(_1c974c73d_Eval*, jule::Ptr<_1c974abc0_Data>&, jule::Ptr<_1c974abc0_Data>&, jule::Ptr<_1e436ca4c_IndexingExpr>&);
inline void _1c97563a1_indexing_arr(_1c974c73d_Eval*, jule::Ptr<_1c974abc0_Data>&, jule::Ptr<_1c974abc0_Data>&, jule::Ptr<_1e436ca4c_IndexingExpr>&);
inline void _1c9756769_indexing_slc(_1c974c73d_Eval*, jule::Ptr<_1c974abc0_Data>&, jule::Ptr<_1c974abc0_Data>&, jule::Ptr<_1e436ca4c_IndexingExpr>&);
inline void _1c9756b32_indexing_map(_1c974c73d_Eval*, jule::Ptr<_1c974abc0_Data>&, jule::Ptr<_1c974abc0_Data>&, jule::Ptr<_1e436ca4c_IndexingExpr>&);
inline void _1c9756eea_indexing_str(_1c974c73d_Eval*, jule::Ptr<_1c974abc0_Data>&, jule::Ptr<_1c974abc0_Data>&, jule::Ptr<_1e436ca4c_IndexingExpr>&);
inline void _1c97573b3_to_indexing(_1c974c73d_Eval*, jule::Ptr<_1c974abc0_Data>&, jule::Ptr<_1c974abc0_Data>&, jule::Ptr<_1e436ca4c_IndexingExpr>&);
inline jule::Bool _1c975778c_push_generics_from_index_data(jule::Ptr<_1c974c73d_Eval>, jule::Ptr<_1e4362b0d_IdentTypeDecl>&, jule::Ptr<_1e436ca4c_IndexingExpr>&);
inline jule::Ptr<_1c974abc0_Data> _1c9757b77_eval_ident_decl_from_indexing(jule::Ptr<_1c974c73d_Eval>, jule::Ptr<_1c974abc0_Data>&, jule::Ptr<_1e436ca4c_IndexingExpr>&);
inline jule::Ptr<_1c974abc0_Data> _1c9757e96_eval_indexing(jule::Ptr<_1c974c73d_Eval>, jule::Ptr<_1e436ca4c_IndexingExpr>);
inline std::tuple<jule::Ptr<_1c974abc0_Data>,jule::Ptr<_1c974abc0_Data>> _1c97582a4_eval_slicing_exprs(jule::Ptr<_1c974c73d_Eval>, jule::Ptr<_1e436d157_SlicingExpr>&);
inline void _1c9758529_slicing_arr(_1c974c73d_Eval*, jule::Ptr<_1c974abc0_Data>&);
inline void _1c97588e2_slicing_str(_1c974c73d_Eval*, jule::Ptr<_1c974abc0_Data>&, jule::Ptr<_1c974abc0_Data>&, jule::Ptr<_1c974abc0_Data>&);
inline void _1c9758d54_check_slicing(_1c974c73d_Eval*, jule::Ptr<_1c974abc0_Data>&, jule::Ptr<_1c974abc0_Data>&, jule::Ptr<_1c974abc0_Data>&, jule::Ptr<_1e436d157_SlicingExpr>&);
inline jule::Ptr<_1c974abc0_Data> _1c9759162_eval_slicing(jule::Ptr<_1c974c73d_Eval>, jule::Ptr<_1e436d157_SlicingExpr>);
inline void _1c975952a_cast_ptr(_1c974c73d_Eval*, jule::Ptr<_1c97746ee_TypeKind>, jule::Ptr<_1c974abc0_Data>, jule::Ptr<_20cd9e6ec_Token>);
inline void _1c97598e3_cast_struct(_1c974c73d_Eval*, jule::Ptr<_1c97746ee_TypeKind>, jule::Ptr<_1c974abc0_Data>, jule::Ptr<_20cd9e6ec_Token>);
inline void _1c9759cab_cast_ref(_1c974c73d_Eval*, jule::Ptr<_1c97746ee_TypeKind>, jule::Ptr<_1c974abc0_Data>, jule::Ptr<_20cd9e6ec_Token>);
inline void _1c975a174_cast_slc(_1c974c73d_Eval*, jule::Ptr<_1c97746ee_TypeKind>, jule::Ptr<_1c974abc0_Data>, jule::Ptr<_20cd9e6ec_Token>);
inline void _1c975a493_cast_str(_1c974c73d_Eval*, jule::Ptr<_1c974abc0_Data>, jule::Ptr<_20cd9e6ec_Token>);
inline void _1c975a85b_cast_int(_1c974c73d_Eval*, jule::Ptr<_1c97746ee_TypeKind>, jule::Ptr<_1c974abc0_Data>, jule::Ptr<_20cd9e6ec_Token>);
inline void _1c975ac24_cast_num(_1c974c73d_Eval*, jule::Ptr<_1c97746ee_TypeKind>, jule::Ptr<_1c974abc0_Data>, jule::Ptr<_20cd9e6ec_Token>);
inline void _1c975b0dc_cast_prim(_1c974c73d_Eval*, jule::Ptr<_1c97746ee_TypeKind>, jule::Ptr<_1c974abc0_Data>, jule::Ptr<_20cd9e6ec_Token>);
inline void _1c975b40b_cast_constant(_1c974c73d_Eval*, jule::Ptr<_1c97746ee_TypeKind>&, jule::Ptr<_1c974abc0_Data>&);
inline jule::Ptr<_1c974abc0_Data> _1c975b87e_eval_cast_by_type_n_data(_1c974c73d_Eval*, jule::Ptr<_1c97746ee_TypeKind>, jule::Ptr<_1c974abc0_Data>, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Ptr<_1c974abc0_Data> _1c975bb9d_eval_cast(jule::Ptr<_1c974c73d_Eval>, jule::Ptr<_1e4368608_CastExpr>);
inline jule::Ptr<_1c974abc0_Data> _1c975beab_eval_ns_selection(_1c974c73d_Eval*, jule::Ptr<_1e43689b0_NsSelectionExpr>);
inline jule::Ptr<_1c974abc0_Data> _1c975c42e_eval_struct_lit_explicit(jule::Ptr<_1c974c73d_Eval>, jule::Ptr<_1e43462ea_StructIns>, jule::Slice<jule::Ptr<_1e43659e0_Expr>>, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Ptr<_1c974abc0_Data> _1c975c74d_eval_struct_lit(jule::Ptr<_1c974c73d_Eval>, jule::Ptr<_1e436ac9d_StructLit>);
inline jule::Ptr<_1c974abc0_Data> _1c975ca5b_eval_type(_1c974c73d_Eval*, jule::Ptr<_1e436257a_TypeDecl>);
inline void _1c975cd7a_call_type_fn(jule::Ptr<_1c974c73d_Eval>, jule::Ptr<_1e43699b1_FnCallExpr>&, jule::Ptr<_1c974abc0_Data>&);
inline std::tuple<jule::Bool,jule::Bool> _1c975d232_check_fn_call_generics(_1c974c73d_Eval*, jule::Ptr<_1e4383018_FnIns>, jule::Ptr<_1e43699b1_FnCallExpr>);
inline void _1c975d551_call_builtin_fn(jule::Ptr<_1c974c73d_Eval>, jule::Ptr<_1e43699b1_FnCallExpr>&, jule::Ptr<_1c974abc0_Data>&);
inline void _1c975d892_check_fn_of_concurrent_call(_1c974c73d_Eval*, jule::Ptr<_1e4383018_FnIns>&, jule::Ptr<_20cd9e6ec_Token>);
inline void _1c975dc8d_process_exceptional_handler(_1c974c73d_Eval*, jule::Ptr<_1e4383018_FnIns>&, jule::Ptr<_1e43699b1_FnCallExpr>&, jule::Ptr<_1c974abc0_Data>&);
inline void _1c975e0bd_call_fn(jule::Ptr<_1c974c73d_Eval>, jule::Ptr<_1e43699b1_FnCallExpr>&, jule::Ptr<_1c974abc0_Data>&);
inline jule::Ptr<_1c974abc0_Data> _1c975e3cb_eval_fn_call(jule::Ptr<_1c974c73d_Eval>, jule::Ptr<_1e43699b1_FnCallExpr>);
inline jule::Ptr<_1c974abc0_Data> _1c975e783_eval_enum_static(_1c974c73d_Eval*, jule::Ptr<_1e4456b58_Enum>, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Ptr<_1c974abc0_Data> _1c975eb3a_eval_struct_static(_1c974c73d_Eval*, jule::Ptr<_1e43462ea_StructIns>, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Ptr<_1c974abc0_Data> _1c976008b_eval_trait_sub_ident(_1c974c73d_Eval*, jule::Ptr<_1c974abc0_Data>, jule::Ptr<_1e43d8d0a_Trait>, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Ptr<_1c974abc0_Data> _1c9760586_eval_struct_sub_ident(_1c974c73d_Eval*, jule::Ptr<_1c974abc0_Data>, jule::Ptr<_1e43462ea_StructIns>, jule::Ptr<_1e4368e33_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1c974abc0_Data> _1c976093d_eval_slice_sub_ident(_1c974c73d_Eval*, jule::Ptr<_1c974abc0_Data>, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Ptr<_1c974abc0_Data> _1c9760ce5_eval_array_sub_ident(_1c974c73d_Eval*, jule::Ptr<_1c974abc0_Data>, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Ptr<_1c974abc0_Data> _1c976119c_eval_map_sub_ident(_1c974c73d_Eval*, jule::Ptr<_1c974abc0_Data>, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Ptr<_1c974abc0_Data> _1c9761554_eval_str_sub_ident(_1c974c73d_Eval*, jule::Ptr<_1c974abc0_Data>, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Ptr<_1c974abc0_Data> _1c9761862_eval_int_type_static(_1c974c73d_Eval*, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Ptr<_1c974abc0_Data> _1c9761b70_eval_uint_type_static(_1c974c73d_Eval*, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Ptr<_1c974abc0_Data> _1c9761e7d_eval_i8_type_static(_1c974c73d_Eval*, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Ptr<_1c974abc0_Data> _1c976228b_eval_i16_type_static(_1c974c73d_Eval*, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Ptr<_1c974abc0_Data> _1c9762599_eval_i32_type_static(_1c974c73d_Eval*, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Ptr<_1c974abc0_Data> _1c97628a7_eval_i64_type_static(_1c974c73d_Eval*, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Ptr<_1c974abc0_Data> _1c9762bb5_eval_u8_type_static(_1c974c73d_Eval*, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Ptr<_1c974abc0_Data> _1c9762ec3_eval_u16_type_static(_1c974c73d_Eval*, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Ptr<_1c974abc0_Data> _1c97632d1_eval_u32_type_static(_1c974c73d_Eval*, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Ptr<_1c974abc0_Data> _1c97635de_eval_u64_type_static(_1c974c73d_Eval*, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Ptr<_1c974abc0_Data> _1c97638ec_eval_f32_type_tatic(_1c974c73d_Eval*, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Ptr<_1c974abc0_Data> _1c9763c0a_eval_f64_type_static(_1c974c73d_Eval*, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Ptr<_1c974abc0_Data> _1c97640b2_eval_prim_static(_1c974c73d_Eval*, jule::Str, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Ptr<_1c974abc0_Data> _1c9764469_eval_type_static(_1c974c73d_Eval*, jule::Ptr<_1c974abc0_Data>, jule::Ptr<_1e4368e33_SubIdentExpr>);
inline jule::Ptr<_1c974abc0_Data> _1c9764821_eval_obj_sub_ident(_1c974c73d_Eval*, jule::Ptr<_1c974abc0_Data>, jule::Ptr<_1e4368e33_SubIdentExpr>);
inline jule::Ptr<_1c974abc0_Data> _1c9764b2e_eval_sub_ident(jule::Ptr<_1c974c73d_Eval>, jule::Ptr<_1e4368e33_SubIdentExpr>);
inline jule::Ptr<_1c974abc0_Data> _1c9764e3c_eval_tuple(jule::Ptr<_1c974c73d_Eval>, jule::Ptr<_1e4366183_TupleExpr>);
inline jule::Ptr<_1c974abc0_Data> _1c97652e4_eval_map(jule::Ptr<_1c974c73d_Eval>, jule::Ptr<_1c977e473_Map>, jule::Ptr<_1e436b221_BraceLit>);
inline jule::Ptr<_1c974abc0_Data> _1c9765602_eval_brace_lit(jule::Ptr<_1c974c73d_Eval>, jule::Ptr<_1e436b221_BraceLit>);
inline jule::Ptr<_1c974abc0_Data> _1c9765910_eval_anon_fn(_1c974c73d_Eval*, jule::Ptr<_1e4371ca4_FnDecl>);
inline jule::Ptr<_1c974abc0_Data> _1c9765c1d_eval_binop(jule::Ptr<_1c974c73d_Eval>, jule::Ptr<_1e43693a6_BinopExpr>);
inline jule::Ptr<_1c974abc0_Data> _1c976602b_eval_expr_kind(jule::Ptr<_1c974c73d_Eval>, jule::Any);
inline jule::Ptr<_1c974abc0_Data> _1c9766339_eval(jule::Ptr<_1c974c73d_Eval>, jule::Ptr<_1e43659e0_Expr>);
inline jule::Ptr<_1c974abc0_Data> _1c9766647_eval_expr(jule::Ptr<_1c974c73d_Eval>, jule::Ptr<_1e43659e0_Expr>);
struct _1c974c73d_Eval {
	jule::Ptr<_1e46ac452_Sema> _field_s = jule::Ptr<_1e46ac452_Sema>();
	jule::Trait<_1c978dc35_Lookup> _field_lookup = jule::Trait<_1c978dc35_Lookup>();
	jule::Ptr<_1c97746ee_TypeKind> _field_prefix = jule::Ptr<_1c97746ee_TypeKind>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_immutable = jule::Bool();
	jule::Bool _field_ignored = jule::Bool();
	jule::Bool _field_dis_builtin = jule::Bool();
	jule::Ptr<_1e46c6eb6_Var> _field_owner = jule::Ptr<_1e46c6eb6_Var>();
	jule::Ptr<_1e434014b_FieldIns> _field_field = jule::Ptr<_1e434014b_FieldIns>();
	jule::Bool _field_arg = jule::Bool();
	

	_1c974c73d_Eval(void) = default;

	inline bool operator==(_1c974c73d_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_dis_builtin == _other._field_dis_builtin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1c974c73d_Eval _other) { return !this->operator==(_other); }


};
inline _1c9766aba_UnaryEval static__1c9767071_new(jule::Ptr<_1c974c73d_Eval>);
inline void _1c976724c_minus(_1c9766aba_UnaryEval*);
inline void _1c9767428_plus(_1c9766aba_UnaryEval*);
inline void _1c9767604_caret(_1c9766aba_UnaryEval*);
inline void _1c97677d0_excl(_1c9766aba_UnaryEval*);
inline void _1c97679ab_star(_1c9766aba_UnaryEval*);
inline void _1c9767b87_amper(_1c9766aba_UnaryEval*);
inline void _1c9767d63_type_decl(_1c9766aba_UnaryEval*);
inline void _1c976803e_eval_data(_1c9766aba_UnaryEval*);
inline jule::Ptr<_1c974abc0_Data> _1c9768319_eval(_1c9766aba_UnaryEval*, jule::Ptr<_1e4367d99_UnaryExpr>);
struct _1c9766aba_UnaryEval {
	jule::Ptr<_1c974c73d_Eval> _field_e = jule::Ptr<_1c974c73d_Eval>();
	jule::Ptr<_1c974abc0_Data> _field_d = jule::Ptr<_1c974abc0_Data>();
	jule::Ptr<_1e4367d99_UnaryExpr> _field_u = jule::Ptr<_1e4367d99_UnaryExpr>();
	

	_1c9766aba_UnaryEval(void) = default;

	inline bool operator==(_1c9766aba_UnaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1c9766aba_UnaryEval _other) { return !this->operator==(_other); }


};
inline _1c9768858_BinaryEval static__1c9768e0d_new_plain(jule::Ptr<_1c974c73d_Eval>);
inline _1c9768858_BinaryEval static__1c976924e_new(jule::Ptr<_1c974c73d_Eval>, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Bool _1c97694d5_check_type_compatibility(_1c9768858_BinaryEval*);
inline jule::Bool _1c976978d_check_struct_common_operator_compatibility(_1c9768858_BinaryEval*);
inline jule::Ptr<_1c974abc0_Data> _1c9769a35_eval_nil(_1c9768858_BinaryEval*);
inline jule::Ptr<_1c974abc0_Data> _1c9769c99_eval_enum(_1c9768858_BinaryEval*);
inline jule::Ptr<_1c974abc0_Data> _1c976a00d_eval_sptr(_1c9768858_BinaryEval*);
inline jule::Ptr<_1c974abc0_Data> _1c976a272_eval_ptr(_1c9768858_BinaryEval*);
inline jule::Ptr<_1c974abc0_Data> _1c976a4d6_eval_arr(_1c9768858_BinaryEval*);
inline jule::Ptr<_1c974abc0_Data> _1c976a74a_eval_slc(_1c9768858_BinaryEval*);
inline jule::Ptr<_1c974abc0_Data> _1c976a9ae_eval_fn(_1c9768858_BinaryEval*);
inline jule::Ptr<_1c974abc0_Data> _1c976ac23_eval_struct(_1c9768858_BinaryEval*);
inline jule::Ptr<_1c974abc0_Data> _1c976ae87_eval_trait(_1c9768858_BinaryEval*);
inline jule::Ptr<_1c974abc0_Data> _1c976b1eb_eval_any(_1c9768858_BinaryEval*);
inline jule::Ptr<_1c974abc0_Data> _1c976b460_eval_bool(_1c9768858_BinaryEval*);
inline jule::Ptr<_1c974abc0_Data> _1c976b6c4_eval_str(_1c9768858_BinaryEval*);
inline void _1c976b8a0_set_type_to_greater(_1c9768858_BinaryEval*);
inline void _1c976bae2_check_mod_data(_1c9768858_BinaryEval*, jule::Ptr<_1c974abc0_Data>&);
inline void _1c976bcbd_mod(_1c9768858_BinaryEval*);
inline jule::Bool _1c976c197_numbers_are_compatibile(_1c9768858_BinaryEval*, jule::Str&, jule::Str&);
inline jule::Ptr<_1c974abc0_Data> _1c976c41c_eval_float(_1c9768858_BinaryEval*);
inline jule::Ptr<_1c974abc0_Data> _1c976c681_eval_int(_1c9768858_BinaryEval*);
inline jule::Ptr<_1c974abc0_Data> _1c976c8e5_eval_prim(_1c9768858_BinaryEval*);
inline jule::Ptr<_1c974abc0_Data> _1c976cb59_eval_op(_1c9768858_BinaryEval*);
inline void _1c976cdce_eval_const(_1c9768858_BinaryEval*, jule::Ptr<_1c974abc0_Data>&);
inline void _1c976d154_check_data(_1c9768858_BinaryEval*, jule::Ptr<_1c974abc0_Data>&);
inline void _1c976d330_check_datas(_1c9768858_BinaryEval*);
inline void _1c976d5a5_set_model(_1c9768858_BinaryEval*, jule::Ptr<_1c974abc0_Data>&);
inline void _1c976d82a_post_eval(_1c9768858_BinaryEval*, jule::Ptr<_1c974abc0_Data>&);
inline jule::Ptr<_1c974abc0_Data> _1c976dbd2_solve_explicit(_1c9768858_BinaryEval*, jule::Ptr<_1c974abc0_Data>&, jule::Ptr<_1c974abc0_Data>&);
inline jule::Ptr<_1c974abc0_Data> _1c976dee0_eval(_1c9768858_BinaryEval*, jule::Ptr<_1e43693a6_BinopExpr>&);
struct _1c9768858_BinaryEval {
	jule::Ptr<_1c974c73d_Eval> _field_e = jule::Ptr<_1c974c73d_Eval>();
	jule::Ptr<_1c974abc0_Data> _field_l = jule::Ptr<_1c974abc0_Data>();
	jule::Ptr<_1c974abc0_Data> _field_r = jule::Ptr<_1c974abc0_Data>();
	jule::Ptr<_20cd9e6ec_Token> _field_op = jule::Ptr<_20cd9e6ec_Token>();
	

	_1c9768858_BinaryEval(void) = default;

	inline bool operator==(_1c9768858_BinaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1c9768858_BinaryEval _other) { return !this->operator==(_other); }


};
struct _1c97739b7_TypeAlias {
	jule::Ptr<_1e43702ad_ScopeTree> _field_scope = jule::Ptr<_1e43702ad_ScopeTree>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_used = jule::Bool();
	jule::Bool _field_generic = jule::Bool();
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1c977858d_TypeSymbol> _field_kind = jule::Ptr<_1c977858d_TypeSymbol>();
	jule::Slice<jule::Any> _field_refers = jule::Slice<jule::Any>();
	jule::Slice<jule::Ptr<_1c97739b7_TypeAlias>> _field_generics = jule::Slice<jule::Ptr<_1c97739b7_TypeAlias>>();
	

	_1c97739b7_TypeAlias(void) = default;

	inline bool operator==(_1c97739b7_TypeAlias _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_used == _other._field_used &&
			this->_field_generic == _other._field_generic &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_refers == _other._field_refers &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_1c97739b7_TypeAlias _other) { return !this->operator==(_other); }


};
inline jule::Str _1c9774aa6_to_str(_1c97746ee_TypeKind*);
inline jule::Bool _1c9774db4_equals(jule::Ptr<_1c97746ee_TypeKind>, jule::Ptr<_1c97746ee_TypeKind>);
inline jule::Bool _1c9775359_cpp_linked(_1c97746ee_TypeKind*);
inline jule::Bool _1c97755bd_is_nil(_1c97746ee_TypeKind*);
inline jule::Bool _1c9775832_void(_1c97746ee_TypeKind*);
inline jule::Bool _1c9775a96_mutable(_1c97746ee_TypeKind*);
inline jule::Bool _1c9775d0a_nil_compatible(_1c97746ee_TypeKind*);
inline jule::Bool _1c977606e_performs_rc(_1c97746ee_TypeKind*);
inline jule::Bool _1c97762d3_supports_cloning(_1c97746ee_TypeKind*);
inline jule::Bool _1c9776547_variadicable(_1c97746ee_TypeKind*);
inline jule::Ptr<_1c9778e51_Prim> _1c97767ab_prim(_1c97746ee_TypeKind*);
inline jule::Ptr<_1c977c460_Sptr> _1c9776a20_sptr(_1c97746ee_TypeKind*);
inline jule::Ptr<_1c97809c4_Ptr> _1c9776c84_ptr(_1c97746ee_TypeKind*);
inline jule::Ptr<_1e4456b58_Enum> _1c9776ee8_enm(_1c97746ee_TypeKind*);
inline jule::Ptr<_1c9780067_Arr> _1c977725c_arr(_1c97746ee_TypeKind*);
inline jule::Ptr<_1c977cdbc_Slc> _1c97774c1_slc(_1c97746ee_TypeKind*);
inline jule::Ptr<_1e4383018_FnIns> _1c9777735_fnc(_1c97746ee_TypeKind*);
inline jule::Ptr<_1e43462ea_StructIns> _1c9777999_strct(_1c97746ee_TypeKind*);
inline jule::Ptr<_1e43d8d0a_Trait> _1c9777c0d_trt(_1c97746ee_TypeKind*);
inline jule::Ptr<_1c977e473_Map> _1c9777e72_map(_1c97746ee_TypeKind*);
inline jule::Ptr<_1c977d8b2_Tuple> _1c97781d6_tup(_1c97746ee_TypeKind*);
struct _1c97746ee_TypeKind {
	jule::Str _field_cpp_ident = jule::Str();
	jule::Bool _field_generic = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Trait<_1c97742c0_Kind> _field_kind = jule::Trait<_1c97742c0_Kind>();
	

	_1c97746ee_TypeKind(void) = default;

	inline bool operator==(_1c97746ee_TypeKind _other) {
		return 
			this->_field_cpp_ident == _other._field_cpp_ident &&
			this->_field_generic == _other._field_generic &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1c97746ee_TypeKind _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c9778989_checked(_1c977858d_TypeSymbol*);
inline void _1c9778b65_remove_kind(_1c977858d_TypeSymbol*);
struct _1c977858d_TypeSymbol {
	jule::Ptr<_1e436257a_TypeDecl> _field_decl = jule::Ptr<_1e436257a_TypeDecl>();
	jule::Ptr<_1c97746ee_TypeKind> _field_kind = jule::Ptr<_1c97746ee_TypeKind>();
	

	_1c977858d_TypeSymbol(void) = default;

	inline bool operator==(_1c977858d_TypeSymbol _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1c977858d_TypeSymbol _other) { return !this->operator==(_other); }


};
inline jule::Str _1c97792b4_to_str(_1c9778e51_Prim*);
inline jule::Bool _1c97795c2_equals(jule::Ptr<_1c9778e51_Prim>, jule::Ptr<_1c97746ee_TypeKind>);
inline jule::Bool _1c9779a34_is_i8(_1c9778e51_Prim*);
inline jule::Bool _1c9779c98_is_i16(_1c9778e51_Prim*);
inline jule::Bool _1c977a00c_is_i32(_1c9778e51_Prim*);
inline jule::Bool _1c977a271_is_i64(_1c9778e51_Prim*);
inline jule::Bool _1c977a4d5_is_u8(_1c9778e51_Prim*);
inline jule::Bool _1c977a749_is_u16(_1c9778e51_Prim*);
inline jule::Bool _1c977a9ad_is_u32(_1c9778e51_Prim*);
inline jule::Bool _1c977ac22_is_u64(_1c9778e51_Prim*);
inline jule::Bool _1c977ae86_is_f32(_1c9778e51_Prim*);
inline jule::Bool _1c977b1ea_is_f64(_1c9778e51_Prim*);
inline jule::Bool _1c977b45e_is_int(_1c9778e51_Prim*);
inline jule::Bool _1c977b6c3_is_uint(_1c9778e51_Prim*);
inline jule::Bool _1c977b937_is_uintptr(_1c9778e51_Prim*);
inline jule::Bool _1c977bb9b_is_bool(_1c9778e51_Prim*);
inline jule::Bool _1c977be10_is_str(_1c9778e51_Prim*);
inline jule::Bool _1c977c174_is_any(_1c9778e51_Prim*);
struct _1c9778e51_Prim {
	jule::Str _field_kind = jule::Str();
	

	_1c9778e51_Prim(void) = default;

	inline bool operator==(_1c9778e51_Prim _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1c9778e51_Prim _other) { return !this->operator==(_other); }


};
inline jule::Str _1c977c7c3_to_str(_1c977c460_Sptr*);
inline jule::Bool _1c977cad1_equals(jule::Ptr<_1c977c460_Sptr>, jule::Ptr<_1c97746ee_TypeKind>);
struct _1c977c460_Sptr {
	jule::Ptr<_1c97746ee_TypeKind> _field_elem = jule::Ptr<_1c97746ee_TypeKind>();
	

	_1c977c460_Sptr(void) = default;

	inline bool operator==(_1c977c460_Sptr _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1c977c460_Sptr _other) { return !this->operator==(_other); }


};
inline jule::Str _1c977d340_to_str(_1c977cdbc_Slc*);
inline jule::Bool _1c977d64d_equals(jule::Ptr<_1c977cdbc_Slc>, jule::Ptr<_1c97746ee_TypeKind>);
struct _1c977cdbc_Slc {
	jule::Ptr<_1c97746ee_TypeKind> _field_elem = jule::Ptr<_1c97746ee_TypeKind>();
	

	_1c977cdbc_Slc(void) = default;

	inline bool operator==(_1c977cdbc_Slc _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1c977cdbc_Slc _other) { return !this->operator==(_other); }


};
inline jule::Str _1c977dcad_to_str(_1c977d8b2_Tuple*);
inline jule::Bool _1c977e0bb_equals(jule::Ptr<_1c977d8b2_Tuple>, jule::Ptr<_1c97746ee_TypeKind>);
struct _1c977d8b2_Tuple {
	jule::Slice<jule::Ptr<_1c97746ee_TypeKind>> _field_types = jule::Slice<jule::Ptr<_1c97746ee_TypeKind>>();
	

	_1c977d8b2_Tuple(void) = default;

	inline bool operator==(_1c977d8b2_Tuple _other) {
		return 
			this->_field_types == _other._field_types;
	}

	inline bool operator!=(_1c977d8b2_Tuple _other) { return !this->operator==(_other); }


};
inline jule::Str _1c977e7d6_to_str(_1c977e473_Map*);
inline jule::Bool _1c977eae4_equals(jule::Ptr<_1c977e473_Map>, jule::Ptr<_1c97746ee_TypeKind>);
struct _1c977e473_Map {
	jule::Ptr<_1c97746ee_TypeKind> _field_key = jule::Ptr<_1c97746ee_TypeKind>();
	jule::Ptr<_1c97746ee_TypeKind> _field_val = jule::Ptr<_1c97746ee_TypeKind>();
	

	_1c977e473_Map(void) = default;

	inline bool operator==(_1c977e473_Map _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_1c977e473_Map _other) { return !this->operator==(_other); }


};
inline jule::Str _1c97803ca_to_str(_1c9780067_Arr*);
inline jule::Bool _1c97806d8_equals(jule::Ptr<_1c9780067_Arr>, jule::Ptr<_1c97746ee_TypeKind>);
struct _1c9780067_Arr {
	jule::Bool _field_auto = jule::Bool();
	jule::I64 _field_n = jule::I64();
	jule::Ptr<_1c97746ee_TypeKind> _field_elem = jule::Ptr<_1c97746ee_TypeKind>();
	

	_1c9780067_Arr(void) = default;

	inline bool operator==(_1c9780067_Arr _other) {
		return 
			this->_field_auto == _other._field_auto &&
			this->_field_n == _other._field_n &&
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1c9780067_Arr _other) { return !this->operator==(_other); }


};
inline jule::Str _1c9780d37_to_str(_1c97809c4_Ptr*);
inline jule::Bool _1c9781145_equals(jule::Ptr<_1c97809c4_Ptr>, jule::Ptr<_1c97746ee_TypeKind>);
inline jule::Bool _1c9781497_is_unsafe(_1c97809c4_Ptr*);
struct _1c97809c4_Ptr {
	jule::Ptr<_1c97746ee_TypeKind> _field_elem = jule::Ptr<_1c97746ee_TypeKind>();
	

	_1c97809c4_Ptr(void) = default;

	inline bool operator==(_1c97809c4_Ptr _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1c97809c4_Ptr _other) { return !this->operator==(_other); }


};
struct _1c978191a_Referencer {
	jule::Str _field_ident = jule::Str();
	jule::Any _field_owner = jule::Any();
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	_1c978191a_Referencer(void) = default;

	inline bool operator==(_1c978191a_Referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1c978191a_Referencer _other) { return !this->operator==(_other); }


};
inline void _1c9782d39_push_err(_1c9782663_TypeChecker*, jule::Ptr<_20cd9e6ec_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c9783015_allow_builtin(_1c9782663_TypeChecker*);
inline void _1c97831e1_disallow_builtin(_1c9782663_TypeChecker*);
inline jule::Ptr<_1c9778e51_Prim> _1c97834ee_build_prim(_1c9782663_TypeChecker*, jule::Ptr<_1e4362b0d_IdentTypeDecl>&);
inline void _1cc4d0d81_push_reference(_1c9782663_TypeChecker*, jule::Ptr<_1e43462ea_StructIns>&);
inline void _1c9783b3c_push_cycle_error(_1c9782663_TypeChecker*, jule::Any, jule::Any, jule::Str&);
inline jule::Bool _1c9783ee4_check_cross_cycle(_1c9782663_TypeChecker*, jule::Any, jule::Str&);
inline jule::Bool _1c978439b_check_illegal_cycles(_1c9782663_TypeChecker*, jule::Ptr<_1e4362b0d_IdentTypeDecl>&, jule::Any);
inline jule::Trait<_1c97742c0_Kind> _1c9784753_from_type_alias(_1c9782663_TypeChecker*, jule::Ptr<_1e4362b0d_IdentTypeDecl>&, jule::Ptr<_1c97739b7_TypeAlias>&);
inline jule::Ptr<_1e4456b58_Enum> _1c9784b0a_from_enum(_1c9782663_TypeChecker*, jule::Ptr<_1e4362b0d_IdentTypeDecl>&, jule::Ptr<_1e4456b58_Enum>&);
inline jule::Ptr<_1e43d8d0a_Trait> _1c9784eb2_from_trait(_1c9782663_TypeChecker*, jule::Ptr<_1e4362b0d_IdentTypeDecl>&, jule::Ptr<_1e43d8d0a_Trait>&);
inline jule::Bool _1c9785369_check_struct_ins(_1c9782663_TypeChecker*, jule::Ptr<_1e43462ea_StructIns>&, jule::Ptr<_20cd9e6ec_Token>&);
inline void _1c9785611_append_used_struct_reference(_1c9782663_TypeChecker*, jule::Ptr<_1e43360cb_Struct>&);
inline jule::Ptr<_1e43462ea_StructIns> _1c97859c9_build_struct_instance(_1c9782663_TypeChecker*, jule::Ptr<_1e4362b0d_IdentTypeDecl>&, jule::Ptr<_1e43360cb_Struct>&);
inline jule::Ptr<_1e43462ea_StructIns> _1c9785d81_from_struct(_1c9782663_TypeChecker*, jule::Ptr<_1e4362b0d_IdentTypeDecl>&, jule::Ptr<_1e43360cb_Struct>&);
inline jule::Trait<_1c97742c0_Kind> _1c9786238_get_def(_1c9782663_TypeChecker*, jule::Trait<_1c978dc35_Lookup>, jule::Ptr<_1e4362b0d_IdentTypeDecl>&);
inline jule::Trait<_1c97742c0_Kind> _1c9786546_build_ident(_1c9782663_TypeChecker*, jule::Ptr<_1e4362b0d_IdentTypeDecl>);
inline jule::Ptr<_1c977c460_Sptr> _1c9786854_build_sptr_from_type(_1c9782663_TypeChecker*, jule::Ptr<_1c97746ee_TypeKind>&);
inline jule::Ptr<_1c977c460_Sptr> _1c9786b62_build_sptr(_1c9782663_TypeChecker*, jule::Ptr<_1e4363603_SptrTypeDecl>);
inline jule::Ptr<_1c97809c4_Ptr> _1c9786e70_build_ptr_from_type(_1c9782663_TypeChecker*, jule::Ptr<_1c97746ee_TypeKind>&);
inline jule::Ptr<_1c97809c4_Ptr> _1c978727d_build_ptr(_1c9782663_TypeChecker*, jule::Ptr<_1e436404e_PtrTypeDecl>);
inline jule::Ptr<_1c977cdbc_Slc> _1c978758b_build_slc(_1c9782663_TypeChecker*, jule::Ptr<_1e43638de_SlcTypeDecl>);
inline jule::Ptr<_1c9780067_Arr> _1c9787899_build_arr(_1c9782663_TypeChecker*, jule::Ptr<_1e436479c_ArrTypeDecl>);
inline jule::Ptr<_1c977e473_Map> _1c9787ba7_build_map(_1c9782663_TypeChecker*, jule::Ptr<_1e4364ea6_MapTypeDecl>);
inline jule::Ptr<_1c977d8b2_Tuple> _1c9787eb5_build_tuple(_1c9782663_TypeChecker*, jule::Ptr<_1e4363c63_TupleTypeDecl>);
inline jule::Bool _1c97882c3_check_fn_types(_1c9782663_TypeChecker*, jule::Ptr<_1e4383018_FnIns>&);
inline jule::Ptr<_1e4383018_FnIns> _1c97885d1_build_fn(_1c9782663_TypeChecker*, jule::Ptr<_1e4371ca4_FnDecl>);
inline jule::Trait<_1c97742c0_Kind> _1c97888de_build_by_namespace(_1c9782663_TypeChecker*, jule::Ptr<_1e4363317_NamespaceTypeDecl>);
inline jule::Ptr<_1c97746ee_TypeKind> _1c9788bec_build(_1c9782663_TypeChecker*, jule::Any&);
inline jule::Ptr<_1c97746ee_TypeKind> _1c978900a_check_decl(_1c9782663_TypeChecker*, jule::Ptr<_1e436257a_TypeDecl>&);
inline void _1c9789280_check(_1c9782663_TypeChecker*, jule::Ptr<_1c977858d_TypeSymbol>&);
struct _1c9782663_TypeChecker {
	jule::Ptr<_1e46ac452_Sema> _field_s = jule::Ptr<_1e46ac452_Sema>();
	jule::Trait<_1c978dc35_Lookup> _field_lookup = jule::Trait<_1c978dc35_Lookup>();
	jule::Ptr<_1c978191a_Referencer> _field_referencer = jule::Ptr<_1c978191a_Referencer>();
	jule::Ptr<_1e4385c0d_ReferenceStack> _field_refers = jule::Ptr<_1e4385c0d_ReferenceStack>();
	jule::Ptr<_20cd9e6ec_Token> _field_error_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Slice<jule::Ptr<_1e436d50e_GenericDecl>> _field_ignore_generics = jule::Slice<jule::Ptr<_1e436d50e_GenericDecl>>();
	jule::Slice<jule::Ptr<_1c97739b7_TypeAlias>> _field_use_generics = jule::Slice<jule::Ptr<_1c97739b7_TypeAlias>>();
	jule::Bool _field_not_plain = jule::Bool();
	jule::Bool _field_dis_builtin = jule::Bool();
	jule::Bool _field_selection = jule::Bool();
	jule::Ptr<_1c97739b7_TypeAlias> _field_owner_alias = jule::Ptr<_1c97739b7_TypeAlias>();
	jule::Slice<jule::Ptr<_1c97739b7_TypeAlias>> _field_banned_generics = jule::Slice<jule::Ptr<_1c97739b7_TypeAlias>>();
	jule::Bool _field_inscatch = jule::Bool();
	

	_1c9782663_TypeChecker(void) = default;

	inline bool operator==(_1c9782663_TypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_referencer == _other._field_referencer &&
			this->_field_refers == _other._field_refers &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_ignore_generics == _other._field_ignore_generics &&
			this->_field_use_generics == _other._field_use_generics &&
			this->_field_not_plain == _other._field_not_plain &&
			this->_field_dis_builtin == _other._field_dis_builtin &&
			this->_field_selection == _other._field_selection &&
			this->_field_owner_alias == _other._field_owner_alias &&
			this->_field_banned_generics == _other._field_banned_generics &&
			this->_field_inscatch == _other._field_inscatch;
	}

	inline bool operator!=(_1c9782663_TypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool static__1c97898ce_exist(jule::Str&, jule::Any&);
struct _1c97894a0_IdentTypeLookup {
	

	_1c97894a0_IdentTypeLookup(void) = default;

	inline bool operator==(_1c97894a0_IdentTypeLookup _other) { return true; }

	inline bool operator!=(_1c97894a0_IdentTypeLookup _other) { return !this->operator==(_other); }


};
struct _1c9c90214_FileInfo {
	jule::Ptr<_1e433079b_Ast> _field_ast = jule::Ptr<_1e433079b_Ast>();
	jule::Slice<_20ca8ec5b_Log> _field_errors = jule::Slice<_20ca8ec5b_Log>();
	

	_1c9c90214_FileInfo(void) = default;

	inline bool operator==(_1c9c90214_FileInfo _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1c9c90214_FileInfo _other) { return !this->operator==(_other); }


};
struct _1c9cd7547_Stmt {
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _field_tokens = jule::Slice<jule::Ptr<_20cd9e6ec_Token>>();
	jule::Bool _field_terminated = jule::Bool();
	

	_1c9cd7547_Stmt(void) = default;

	inline bool operator==(_1c9cd7547_Stmt _other) {
		return 
			this->_field_tokens == _other._field_tokens &&
			this->_field_terminated == _other._field_terminated;
	}

	inline bool operator!=(_1c9cd7547_Stmt _other) { return !this->operator==(_other); }


};
inline void _1c9cd8504_stop(_1c9cd7d72_ScopeParser*);
inline jule::Bool _1c9cd8768_stopped(_1c9cd7d72_ScopeParser*);
inline jule::Bool _1c9cd89cc_finished(_1c9cd7d72_ScopeParser*);
inline jule::Bool _1c9cd8c41_is_last_st(_1c9cd7d72_ScopeParser*);
inline void _1c9cd9060_push_err(_1c9cd7d72_ScopeParser*, jule::Ptr<_20cd9e6ec_Token>, jule::Str);
inline void _1c9cd937e_push_suggestion(_1c9cd7d72_ScopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1c9cd9604_insert_as_next(_1c9cd7d72_ScopeParser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Ptr<_1c9cd7547_Stmt> _1c9cd9868_next(_1c9cd7d72_ScopeParser*);
inline jule::Ptr<_1e43702ad_ScopeTree> _1c9cd9c20_build_scope(_1c9cd7d72_ScopeParser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Any _1c9cda02d_build_var_st(_1c9cd7d72_ScopeParser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Any _1c9cda33b_build_ret_st(_1c9cd7d72_ScopeParser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline jule::Any _1c9cda649_build_while_next_iter(_1c9cd7d72_ScopeParser*, jule::Ptr<_1c9cd7547_Stmt>&);
inline jule::Ptr<_1e4373e82_WhileKind> _1c9cda957_build_while_iter_kind(_1c9cd7d72_ScopeParser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>> _1c9cdac87_get_range_kind_keys_tokens(_1c9cd7d72_ScopeParser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Ptr<_1e4372c83_VarDecl> _1c9cdb0a6_build_range_kind_key(_1c9cd7d72_ScopeParser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Slice<jule::Ptr<_1e4372c83_VarDecl>> _1c9cdb3b4_build_range_kind_keys(_1c9cd7d72_ScopeParser*, jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>>&);
inline void _1c9cdb705_setup_range_kind_keys_plain(_1c9cd7d72_ScopeParser*, jule::Ptr<_1e4374823_RangeKind>&, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline void _1c9cdba57_setup_range_kind_keys_explicit(_1c9cd7d72_ScopeParser*, jule::Ptr<_1e4374823_RangeKind>&, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline void _1c9cdbd87_setup_range_kind_keys(_1c9cd7d72_ScopeParser*, jule::Ptr<_1e4374823_RangeKind>&, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Ptr<_1e4374823_RangeKind> _1c9cdc2d8_build_range_iter_kind(_1c9cd7d72_ScopeParser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&, jule::Ptr<_20cd9e6ec_Token>&);
inline jule::Any _1c9cdc690_build_common_iter_kind(_1c9cd7d72_ScopeParser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&, jule::Ptr<_20cd9e6ec_Token>&);
inline jule::Any _1c9cdc99d_build_common_iter(_1c9cd7d72_ScopeParser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline jule::Any _1c9cdccab_build_iter_st(_1c9cd7d72_ScopeParser*, jule::Ptr<_1c9cd7547_Stmt>&);
inline jule::Any _1c9cdd0b9_build_break_st(_1c9cd7d72_ScopeParser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Any _1c9cdd3c7_build_cont_st(_1c9cd7d72_ScopeParser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Ptr<_1e4375505_If> _1c9cdd6d5_build_if(_1c9cd7d72_ScopeParser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Ptr<_1e43758ac_Else> _1c9cdd9e3_build_else(_1c9cd7d72_ScopeParser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Any _1c9cddd01_build_if_else_chain(_1c9cd7d72_ScopeParser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline jule::Any _1c9cde10e_build_co_call_st(_1c9cd7d72_ScopeParser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline jule::Any _1c9cde41c_build_goto_st(_1c9cd7d72_ScopeParser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Any _1c9cde72a_build_fall_st(_1c9cd7d72_ScopeParser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Any _1c9cdea38_build_type_alias_st(_1c9cd7d72_ScopeParser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline void _1c9cdee9a_push_case_expr(_1c9cd7d72_ScopeParser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>, jule::Ptr<_20cd9e6ec_Token>, jule::Bool, jule::Slice<jule::Ptr<_1e43659e0_Expr>>&);
inline jule::Slice<jule::Ptr<_1e43659e0_Expr>> _1c9ce0352_build_case_exprs(_1c9cd7d72_ScopeParser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&, jule::Bool);
inline jule::Ptr<_1e43702ad_ScopeTree> _1c9ce0660_build_case_scope(_1c9cd7d72_ScopeParser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline std::tuple<jule::Ptr<_1e4376979_Case>,jule::Bool> _1c9ce0a17_build_case(_1c9cd7d72_ScopeParser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&, jule::Bool);
inline std::tuple<jule::Slice<jule::Ptr<_1e4376979_Case>>,jule::Ptr<_1e43758ac_Else>> _1c9ce0dbe_build_cases(_1c9cd7d72_ScopeParser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>, jule::Bool);
inline jule::Ptr<_1e4377150_MatchCase> _1c9ce11cc_build_match_case(_1c9cd7d72_ScopeParser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline jule::Ptr<_1e43702ad_ScopeTree> _1c9ce14da_build_scope_st(_1c9cd7d72_ScopeParser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline jule::Ptr<_1e436d8b6_LabelSt> _1c9ce17e8_build_label_st(_1c9cd7d72_ScopeParser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline std::tuple<jule::Any,jule::Bool> _1c9ce1b06_build_id_st(_1c9cd7d72_ScopeParser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Ptr<_1c9d00ebc_AssignInfo> _1c9ce1e14_build_assign_info(_1c9cd7d72_ScopeParser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Ptr<_1e436e664_AssignLeft> _1c9ce2222_build_assign_l(_1c9cd7d72_ScopeParser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Slice<jule::Ptr<_1e436e664_AssignLeft>> _1c9ce2530_build_assign_ls(_1c9cd7d72_ScopeParser*, jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>>&);
inline std::tuple<jule::Ptr<_1e436eba3_AssignSt>,jule::Bool> _1c9ce283d_build_plain_assign(_1c9cd7d72_ScopeParser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline std::tuple<jule::Ptr<_1e436eba3_AssignSt>,jule::Bool> _1c9ce2b4b_build_decl_assign(_1c9cd7d72_ScopeParser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline std::tuple<jule::Ptr<_1e436eba3_AssignSt>,jule::Bool> _1c9ce2e59_build_assign_st(_1c9cd7d72_ScopeParser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Any _1c9ce3267_build_use_expr(_1c9cd7d72_ScopeParser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Any _1c9ce3575_build_st(_1c9cd7d72_ScopeParser*, jule::Ptr<_1c9cd7547_Stmt>&);
inline void _1c9ce3894_build(_1c9cd7d72_ScopeParser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&, jule::Ptr<_1e43702ad_ScopeTree>&);
struct _1c9cd7d72_ScopeParser {
	jule::Ptr<_1c9d044ed_Parser> _field_p = jule::Ptr<_1c9d044ed_Parser>();
	jule::Ptr<_1e43702ad_ScopeTree> _field_s = jule::Ptr<_1e43702ad_ScopeTree>();
	jule::Slice<jule::Ptr<_1c9cd7547_Stmt>> _field_stmts = jule::Slice<jule::Ptr<_1c9cd7547_Stmt>>();
	jule::I64 _field_pos = jule::I64();
	

	_1c9cd7d72_ScopeParser(void) = default;

	inline bool operator==(_1c9cd7d72_ScopeParser _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1c9cd7d72_ScopeParser _other) { return !this->operator==(_other); }


};
struct _1c9ce4741_CallData {
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _field_expr_tokens = jule::Slice<jule::Ptr<_20cd9e6ec_Token>>();
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _field_args_tokens = jule::Slice<jule::Ptr<_20cd9e6ec_Token>>();
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _field_generics_tokens = jule::Slice<jule::Ptr<_20cd9e6ec_Token>>();
	

	_1c9ce4741_CallData(void) = default;

	inline bool operator==(_1c9ce4741_CallData _other) {
		return 
			this->_field_expr_tokens == _other._field_expr_tokens &&
			this->_field_args_tokens == _other._field_args_tokens &&
			this->_field_generics_tokens == _other._field_generics_tokens;
	}

	inline bool operator!=(_1c9ce4741_CallData _other) { return !this->operator==(_other); }


};
inline void _1c9ce648a_push_err(_1c9ce5b93_ExprBuilder*, jule::Ptr<_20cd9e6ec_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c9ce67a9_push_suggestion(_1c9ce5b93_ExprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1e4366183_TupleExpr> _1c9ce6ab7_build_tuple(_1c9ce5b93_ExprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>>&);
inline jule::Ptr<_1e436665b_LitExpr> _1c9ce6dc5_build_lit(_1c9ce5b93_ExprBuilder*, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Ptr<_1e436257a_TypeDecl> _1c9ce71d3_build_primitive_type(_1c9ce5b93_ExprBuilder*, jule::Ptr<_20cd9e6ec_Token>&);
inline jule::Any _1c9ce74e1_build_single(_1c9ce5b93_ExprBuilder*, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Ptr<_1e4367690_IdentExpr> _1c9ce77ee_build_cpp_linked_ident(_1c9ce5b93_ExprBuilder*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Ptr<_1e4367d99_UnaryExpr> _1c9ce7b0c_build_unary(_1c9ce5b93_ExprBuilder*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline jule::Ptr<_1e4368e33_SubIdentExpr> _1c9ce7e1a_build_obj_sub_ident(_1c9ce5b93_ExprBuilder*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline jule::Ptr<_1e43689b0_NsSelectionExpr> _1c9ce8228_build_ns_sub_ident(_1c9ce5b93_ExprBuilder*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Ptr<_1e436257a_TypeDecl> _1c9ce8536_build_type(_1c9ce5b93_ExprBuilder*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Any _1c9ce8844_build_sub_ident(_1c9ce5b93_ExprBuilder*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Ptr<_1e4368251_VariadicExpr> _1c9ce8b52_build_variadic(_1c9ce5b93_ExprBuilder*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline jule::Any _1c9ce8e60_build_op_right(_1c9ce5b93_ExprBuilder*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Ptr<_1e43659e0_Expr> _1c9ce9290_build_between_parentheses(_1c9ce5b93_ExprBuilder*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline jule::Ptr<_1e4368608_CastExpr> _1c9ce95ae_try_build_cast(_1c9ce5b93_ExprBuilder*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline void _1c9ce9977_push_arg(_1c9ce5b93_ExprBuilder*, jule::Slice<jule::Ptr<_1e43659e0_Expr>>&, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Slice<jule::Ptr<_1e43659e0_Expr>> _1c9ce9c85_build_args(_1c9ce5b93_ExprBuilder*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline jule::Slice<jule::Ptr<_1e436257a_TypeDecl>> _1c9cea093_build_call_generics(_1c9ce5b93_ExprBuilder*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline jule::Ptr<_1e43699b1_FnCallExpr> _1c9cea44a_build_fn_call(_1c9ce5b93_ExprBuilder*, jule::Ptr<_20cd9e6ec_Token>&, jule::Ptr<_1c9ce4741_CallData>&);
inline jule::Any _1c9cea77a_build_parentheses_range(_1c9ce5b93_ExprBuilder*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Ptr<_1e4366d65_UnsafeExpr> _1c9ceaa99_build_unsafe_expr(_1c9ce5b93_ExprBuilder*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline jule::Ptr<_1e4371ca4_FnDecl> _1c9ceada7_build_anon_fn(_1c9ce5b93_ExprBuilder*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Any _1c9ceb1b5_build_unsafe(_1c9ce5b93_ExprBuilder*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline void _1c9ceb57d_push_range_lit_part(_1c9ce5b93_ExprBuilder*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>, jule::Ptr<_20cd9e6ec_Token>, jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>> _1c9ceb8ad_get_brace_range_lit_expr_parts(_1c9ce5b93_ExprBuilder*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline jule::Ptr<_1e436a4c8_FieldExprPair> _1c9cebbcc_build_field_expr_pair(_1c9ce5b93_ExprBuilder*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline jule::Ptr<_1e43659e0_Expr> _1c9cebeda_build_struct_lit_expr(_1c9ce5b93_ExprBuilder*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Slice<jule::Ptr<_1e43659e0_Expr>> _1c9cec2e8_build_struct_lit_exprs(_1c9ce5b93_ExprBuilder*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Ptr<_1e436ac9d_StructLit> _1c9cec628_build_typed_struct_literal(_1c9ce5b93_ExprBuilder*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline jule::Ptr<_1e43659e0_Expr> _1c9cec947_build_brace_lit_part(_1c9ce5b93_ExprBuilder*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Ptr<_1e436b221_BraceLit> _1c9cecc55_build_brace_lit(_1c9ce5b93_ExprBuilder*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Any _1c9ced063_build_brace_range(_1c9ce5b93_ExprBuilder*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>> _1c9ced371_get_enumerable_parts(_1c9ce5b93_ExprBuilder*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline jule::Ptr<_1e436be69_SliceExpr> _1c9ced67e_build_slice(_1c9ce5b93_ExprBuilder*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline jule::Ptr<_1e436ca4c_IndexingExpr> _1c9cedad0_build_indexing(_1c9ce5b93_ExprBuilder*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Ptr<_1e436d157_SlicingExpr> _1c9cee174_build_slicing(_1c9ce5b93_ExprBuilder*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&, jule::I64&, jule::Ptr<_20cd9e6ec_Token>&, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Any _1c9cee482_build_bracket_range(_1c9ce5b93_ExprBuilder*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline jule::Any _1c9cee790_build_data(_1c9ce5b93_ExprBuilder*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Ptr<_1e43693a6_BinopExpr> _1c9ceeb47_build_binop(_1c9ce5b93_ExprBuilder*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&, jule::I64);
inline jule::Any _1c9ceee55_build(_1c9ce5b93_ExprBuilder*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Any _1c9d00263_build_kind(_1c9ce5b93_ExprBuilder*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Ptr<_1e43659e0_Expr> _1c9d00571_build_from_tokens(_1c9ce5b93_ExprBuilder*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
struct _1c9ce5b93_ExprBuilder {
	jule::Ptr<_1c9d044ed_Parser> _field_p = jule::Ptr<_1c9d044ed_Parser>();
	

	_1c9ce5b93_ExprBuilder(void) = default;

	inline bool operator==(_1c9ce5b93_ExprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1c9ce5b93_ExprBuilder _other) { return !this->operator==(_other); }


};
struct _1c9d00ebc_AssignInfo {
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _field_l = jule::Slice<jule::Ptr<_20cd9e6ec_Token>>();
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _field_r = jule::Slice<jule::Ptr<_20cd9e6ec_Token>>();
	jule::Ptr<_20cd9e6ec_Token> _field_setter = jule::Ptr<_20cd9e6ec_Token>();
	jule::Bool _field_ok = jule::Bool();
	

	_1c9d00ebc_AssignInfo(void) = default;

	inline bool operator==(_1c9d00ebc_AssignInfo _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_setter == _other._field_setter &&
			this->_field_ok == _other._field_ok;
	}

	inline bool operator!=(_1c9d00ebc_AssignInfo _other) { return !this->operator==(_other); }


};
inline void _1c9d0482d_stop(_1c9d044ed_Parser*);
inline jule::Bool _1c9d04a92_stopped(_1c9d044ed_Parser*);
inline void _1c9d04e5a_push_err(_1c9d044ed_Parser*, jule::Ptr<_20cd9e6ec_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c9d05279_push_suggestion(_1c9d044ed_Parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1e43659e0_Expr> _1c9d05587_build_expr(jule::Ptr<_1c9d044ed_Parser>, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Ptr<_1e43620c4_Directive> _1c9d05895_build_directive(_1c9d044ed_Parser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline void _1c9d05b1a_push_directive(_1c9d044ed_Parser*, jule::Ptr<_1e43620c4_Directive>);
inline jule::Ptr<_1e43702ad_ScopeTree> _1c9d05ec2_build_scope(jule::Ptr<_1c9d044ed_Parser>, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&, jule::Ptr<_20cd9e6ec_Token>);
inline std::tuple<jule::Ptr<_1e436257a_TypeDecl>,jule::Bool> _1c9d06423___build_type(jule::Ptr<_1c9d044ed_Parser>, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&, jule::I64*, jule::Bool);
inline std::tuple<jule::Ptr<_1e436257a_TypeDecl>,jule::Bool> _1c9d06874_build_type(jule::Ptr<_1c9d044ed_Parser>, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&, jule::I64*, jule::Bool);
inline jule::Ptr<_1e4376506_TypeAliasDecl> _1c9d06b82_build_type_alias_decl(jule::Ptr<_1c9d044ed_Parser>, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline void _1c9d06ec3_build_var_type_and_expr(jule::Ptr<_1c9d044ed_Parser>, jule::Ptr<_1e4372c83_VarDecl>&, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline void _1c9d07303_build_var_common(jule::Ptr<_1c9d044ed_Parser>, jule::Ptr<_1e4372c83_VarDecl>&, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline void _1c9d076bb_build_var_begin(_1c9d044ed_Parser*, jule::Ptr<_1e4372c83_VarDecl>&, jule::Ptr<jule::I64>, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Ptr<_1e4372c83_VarDecl> _1c9d079c9_build_var(jule::Ptr<_1c9d044ed_Parser>, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline jule::Ptr<_1e436d50e_GenericDecl> _1c9d07cd7_build_generic(_1c9d044ed_Parser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Slice<jule::Ptr<_1e436d50e_GenericDecl>> _1c9d0818e_build_generics(_1c9d044ed_Parser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&, jule::Ptr<_20cd9e6ec_Token>&);
inline jule::Ptr<_1e4370984_ParamDecl> _1c9d0849c_build_self_param(_1c9d044ed_Parser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline void _1c9d08865_param_type_begin(_1c9d044ed_Parser*, jule::Ptr<_1e4370984_ParamDecl>&, jule::I64&, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline void _1c9d08b84_build_param_type(jule::Ptr<_1c9d044ed_Parser>, jule::Ptr<_1e4370984_ParamDecl>&, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline void _1c9d0904c_build_param_body(jule::Ptr<_1c9d044ed_Parser>, jule::Ptr<_1e4370984_ParamDecl>&, jule::Ptr<jule::I64>, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline jule::Ptr<_1e4370984_ParamDecl> _1c9d0935a_build_param(jule::Ptr<_1c9d044ed_Parser>, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline void _1c9d095d0_check_params(_1c9d044ed_Parser*, jule::Slice<jule::Ptr<_1e4370984_ParamDecl>>&);
inline jule::Slice<jule::Ptr<_1e4370984_ParamDecl>> _1c9d09987_build_params(jule::Ptr<_1c9d044ed_Parser>, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&, jule::Bool);
inline std::tuple<jule::Ptr<_1e436535d_RetTypeDecl>,jule::Bool> _1c9d09d3e_build_multi_ret_type(jule::Ptr<_1c9d044ed_Parser>, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&, jule::I64&);
inline std::tuple<jule::Ptr<_1e436535d_RetTypeDecl>,jule::Bool> _1c9d0a1e6_build_ret_type(jule::Ptr<_1c9d044ed_Parser>, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&, jule::I64&);
inline jule::Ptr<_1e4371ca4_FnDecl> _1c9d0a647_build_fn_prototype(jule::Ptr<_1c9d044ed_Parser>, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&, jule::I64&, jule::Bool);
inline jule::Ptr<_1e4371ca4_FnDecl> _1c9d0aa98_build_fn(jule::Ptr<_1c9d044ed_Parser>, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _1c9d0ada6_get_use_decl_selectors(_1c9d044ed_Parser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline void _1c9d0b1c5_build_cpp_use_decl(_1c9d044ed_Parser*, jule::Ptr<_1e43778e2_UseDecl>&, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline void _1c9d0b4e4_build_std_use_decl(_1c9d044ed_Parser*, jule::Ptr<_1e43778e2_UseDecl>&, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline void _1c9d0b813_build_ident_use_decl(_1c9d044ed_Parser*, jule::Ptr<_1e43778e2_UseDecl>&, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline void _1c9d0bb32_parse_use_decl(_1c9d044ed_Parser*, jule::Ptr<_1e43778e2_UseDecl>&, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline jule::Ptr<_1e43778e2_UseDecl> _1c9d0bed9_build_use_decl(_1c9d044ed_Parser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>, jule::Bool);
inline jule::Ptr<_1e43659e0_Expr> _1c9d0c391_build_enum_item_expr(jule::Ptr<_1c9d044ed_Parser>, jule::Ptr<jule::I64>, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Slice<jule::Ptr<_1e4377d65_EnumItemDecl>> _1c9d0c69e_build_enum_items(jule::Ptr<_1c9d044ed_Parser>, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Ptr<_1e43789ae_EnumDecl> _1c9d0c9ac_build_enum_decl(jule::Ptr<_1c9d044ed_Parser>, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Ptr<_1e43794d7_FieldDecl> _1c9d0ccba_build_field(jule::Ptr<_1c9d044ed_Parser>, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline jule::Slice<jule::Ptr<_1e43794d7_FieldDecl>> _1c9d0d0ea_build_struct_decl_fields(jule::Ptr<_1c9d044ed_Parser>, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline jule::Ptr<_1e4379d45_StructDecl> _1c9d0d419_build_struct_decl(jule::Ptr<_1c9d044ed_Parser>, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline void _1c9d0d68e_check_method_receiver(_1c9d044ed_Parser*, jule::Ptr<_1e4371ca4_FnDecl>&);
inline jule::Slice<jule::Ptr<_1e4371ca4_FnDecl>> _1c9d0d99c_build_trait_methods(jule::Ptr<_1c9d044ed_Parser>, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline jule::Ptr<_1e437a450_TraitDecl> _1c9d0dcaa_build_trait_decl(jule::Ptr<_1c9d044ed_Parser>, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Ptr<_1e4371ca4_FnDecl> _1c9d0e0b8_build_cpp_link_fn(jule::Ptr<_1c9d044ed_Parser>, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline jule::Ptr<_1e4372c83_VarDecl> _1c9d0e3c6_build_cpp_link_var(jule::Ptr<_1c9d044ed_Parser>, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline jule::Ptr<_1e4379d45_StructDecl> _1c9d0e6d4_build_cpp_link_struct(jule::Ptr<_1c9d044ed_Parser>, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline jule::Ptr<_1e4376506_TypeAliasDecl> _1c9d0ea14_build_cpp_link_type_alias(jule::Ptr<_1c9d044ed_Parser>, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline jule::Ptr<_1e43778e2_UseDecl> _1c9d0ed33_build_cpp_link_use(jule::Ptr<_1c9d044ed_Parser>, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline jule::Any _1c9d10141_build_cpp_link(jule::Ptr<_1c9d044ed_Parser>, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Ptr<_1e4371ca4_FnDecl> _1c9d1044e_get_method(jule::Ptr<_1c9d044ed_Parser>, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline void _1c9d1076d_parse_impl_body(jule::Ptr<_1c9d044ed_Parser>, jule::Ptr<_1e437aa5a_Impl>&, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Ptr<_1e437aa5a_Impl> _1c9d10a7b_build_impl(jule::Ptr<_1c9d044ed_Parser>, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline jule::Any _1c9d10d89_build_node_data(jule::Ptr<_1c9d044ed_Parser>, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline void _1c9d1110e_check_directive(_1c9d044ed_Parser*, _1e43314d3_Node&);
inline void _1c9d1142d_apply_fn_meta(_1c9d044ed_Parser*, jule::Ptr<_1e4371ca4_FnDecl>&, jule::Bool);
inline void _1c9d1174c_apply_meta(_1c9d044ed_Parser*, _1e43314d3_Node&, jule::Bool);
inline void _1c9d119c2_check_use_decl(_1c9d044ed_Parser*, _1e43314d3_Node&);
inline std::tuple<jule::Bool,jule::Any> _1c9d11d02_build_general_scope_node_data(jule::Ptr<_1c9d044ed_Parser>, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline _1e43314d3_Node _1c9d12121_parse_node(jule::Ptr<_1c9d044ed_Parser>, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline void _1c9d12396_append_node(jule::Ptr<_1c9d044ed_Parser>, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline void _1c9d12808_remove_range(_1c9d044ed_Parser*, jule::I64, jule::Str, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&, jule::Slice<jule::I64>&);
inline void _1c9d12be3_push_wrong_order_close_err(_1c9d044ed_Parser*, jule::Ptr<_20cd9e6ec_Token>&, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&, jule::Slice<jule::I64>&);
inline void _1c9d13166_push_range_close(_1c9d044ed_Parser*, jule::Ptr<_20cd9e6ec_Token>, jule::Str, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&, jule::Slice<jule::I64>&);
inline void _1c9d133db_check_ranges(_1c9d044ed_Parser*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline void _1c9d13661_parse(jule::Ptr<_1c9d044ed_Parser>, jule::Ptr<_20cda4adc_File>&);
struct _1c9d044ed_Parser {
	jule::Ptr<_1e433079b_Ast> _field_ast = jule::Ptr<_1e433079b_Ast>();
	jule::Slice<jule::Ptr<_1e43620c4_Directive>> _field_directives = jule::Slice<jule::Ptr<_1e43620c4_Directive>>();
	jule::Slice<_20ca8ec5b_Log> _field_errors = jule::Slice<_20ca8ec5b_Log>();
	

	_1c9d044ed_Parser(void) = default;

	inline bool operator==(_1c9d044ed_Parser _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_directives == _other._field_directives &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1c9d044ed_Parser _other) { return !this->operator==(_other); }


};
inline void _1c9d153bb_push_err(_1c9d14ce4_TypeBuilder*, jule::Ptr<_20cd9e6ec_Token>, jule::Str);
inline void _1c9d156da_push_suggestion(_1c9d14ce4_TypeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1e436257a_TypeDecl> _1c9d1594e_build_prim(_1c9d14ce4_TypeBuilder*);
inline jule::Ptr<_1e436257a_TypeDecl> _1c9d15bb3_build_namespace(_1c9d14ce4_TypeBuilder*);
inline jule::Slice<jule::Ptr<_1e436257a_TypeDecl>> _1c9d15e27_build_generics(_1c9d14ce4_TypeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>> _1c9d1618b_ident_generics(_1c9d14ce4_TypeBuilder*);
inline jule::Ptr<_1e436257a_TypeDecl> _1c9d16400_build_ident(_1c9d14ce4_TypeBuilder*);
inline jule::Ptr<_1e436257a_TypeDecl> _1c9d16664_build_cpp_link(_1c9d14ce4_TypeBuilder*);
inline jule::Ptr<_1e436257a_TypeDecl> _1c9d168c8_build_fn(_1c9d14ce4_TypeBuilder*);
inline jule::Ptr<_1e436257a_TypeDecl> _1c9d16b3c_build_ptr(_1c9d14ce4_TypeBuilder*);
inline jule::Ptr<_1e436257a_TypeDecl> _1c9d16da1_build_sptr(_1c9d14ce4_TypeBuilder*);
inline jule::Ptr<_1e436257a_TypeDecl> _1c9d17115_build_op(_1c9d14ce4_TypeBuilder*);
inline jule::Ptr<_1e436257a_TypeDecl> _1c9d17379_build_slc(_1c9d14ce4_TypeBuilder*);
inline jule::Ptr<_1e436257a_TypeDecl> _1c9d175dd_build_arr(_1c9d14ce4_TypeBuilder*);
inline jule::Ptr<_1e436257a_TypeDecl> _1c9d17995_build_map(_1c9d14ce4_TypeBuilder*, jule::I64, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Ptr<_1e436257a_TypeDecl> _1c9d17c09_build_enumerable(_1c9d14ce4_TypeBuilder*);
inline jule::Ptr<_1e436257a_TypeDecl> _1c9d17e6d_step(_1c9d14ce4_TypeBuilder*);
inline std::tuple<jule::Ptr<_1e436257a_TypeDecl>,jule::Bool> _1c9d181d2_build(_1c9d14ce4_TypeBuilder*);
struct _1c9d14ce4_TypeBuilder {
	jule::Ptr<_1c9d044ed_Parser> _field_p = jule::Ptr<_1c9d044ed_Parser>();
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _field_tokens = jule::Slice<jule::Ptr<_20cd9e6ec_Token>>();
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = jule::Bool();
	

	_1c9d14ce4_TypeBuilder(void) = default;

	inline bool operator==(_1c9d14ce4_TypeBuilder _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_i == _other._field_i &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_1c9d14ce4_TypeBuilder _other) { return !this->operator==(_other); }


};
struct _1c98b8a52_CompileInfo {
	jule::Bool _field_prod = jule::Bool();
	jule::Bool _field_test = jule::Bool();
	jule::Str _field_compiler = jule::Str("clang", 5);
	jule::Str _field_cpp_std = jule::Str("cpp14", 5);
	

	_1c98b8a52_CompileInfo(void) = default;

	inline bool operator==(_1c98b8a52_CompileInfo _other) {
		return 
			this->_field_prod == _other._field_prod &&
			this->_field_test == _other._field_test &&
			this->_field_compiler == _other._field_compiler &&
			this->_field_cpp_std == _other._field_cpp_std;
	}

	inline bool operator!=(_1c98b8a52_CompileInfo _other) { return !this->operator==(_other); }


};
inline void _1c98ba548_push_err(_1c98b9ee8_DirectiveEval*, jule::Ptr<_20cd9e6ec_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>> _1c98ba900_split_operans(_1c98b9ee8_DirectiveEval*, jule::Str, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Bool _1c98bac0d_eval_directive_ident(_1c98b9ee8_DirectiveEval*, jule::Str);
inline jule::Bool _1c98bb01b_eval_directive_part(_1c98b9ee8_DirectiveEval*, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline jule::Bool _1c98bb280_eval(_1c98b9ee8_DirectiveEval*);
struct _1c98b9ee8_DirectiveEval {
	jule::Slice<_20ca8ec5b_Log> _field_logs = jule::Slice<_20ca8ec5b_Log>();
	jule::Ptr<_1e43620c4_Directive> _field_d = jule::Ptr<_1e43620c4_Directive>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();
	

	_1c98b9ee8_DirectiveEval(void) = default;

	inline bool operator==(_1c98b9ee8_DirectiveEval _other) {
		return 
			this->_field_logs == _other._field_logs &&
			this->_field_d == _other._field_d &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_1c98b9ee8_DirectiveEval _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c9e46563_JuleImporter> static__1e498b852_new(_1c98b8a52_CompileInfo);
inline jule::Slice<jule::Ptr<_1e46a4768_ImportInfo>> _1e49a52b6_all_packages(_1c9e46563_JuleImporter*);
inline void _1e49b60eb_set_mod_path(_1c9e46563_JuleImporter*, jule::Str);
inline jule::Str _1e49c4a22_get_mod_path(_1c9e46563_JuleImporter*);
inline jule::Str _1e49c743c_mod_by_id(_1c9e46563_JuleImporter*, jule::I64);
inline jule::Ptr<_1e46a4768_ImportInfo> _1c9d72505_get_import(_1c9e46563_JuleImporter*, jule::Str);
inline std::tuple<jule::Slice<jule::Ptr<_1e433079b_Ast>>,jule::Slice<_20ca8ec5b_Log>> _1c9dadcb1_import_package(_1c9e46563_JuleImporter*, jule::Str, jule::Bool);
inline void _1c9e5b9da_imported(_1c9e46563_JuleImporter*, jule::Ptr<_1e46a4768_ImportInfo>);
inline std::tuple<jule::Bool,jule::Slice<_20ca8ec5b_Log>> _1c9e5dcd9_is_pass_build_directives(_1c9e46563_JuleImporter*, jule::Ptr<_1e433079b_Ast>&);
struct _1c9e46563_JuleImporter {
	jule::Slice<jule::Str> _field_mods = jule::Slice<jule::Str>();
	jule::Str _field_mod = jule::Str();
	jule::Slice<jule::Ptr<_1e46a4768_ImportInfo>> _field_pkgs = jule::Slice<jule::Ptr<_1e46a4768_ImportInfo>>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();
	

	_1c9e46563_JuleImporter(void) = default;

	inline bool operator==(_1c9e46563_JuleImporter _other) {
		return 
			this->_field_mods == _other._field_mods &&
			this->_field_mod == _other._field_mod &&
			this->_field_pkgs == _other._field_pkgs &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_1c9e46563_JuleImporter _other) { return !this->operator==(_other); }


};
struct _1c9e85e10_OrderedDefines {
	jule::Slice<jule::Ptr<_1e43360cb_Struct>> _field_structs = jule::Slice<jule::Ptr<_1e43360cb_Struct>>();
	jule::Slice<jule::Ptr<_1e46c6eb6_Var>> _field_globals = jule::Slice<jule::Ptr<_1e46c6eb6_Var>>();
	

	_1c9e85e10_OrderedDefines(void) = default;

	inline bool operator==(_1c9e85e10_OrderedDefines _other) {
		return 
			this->_field_structs == _other._field_structs &&
			this->_field_globals == _other._field_globals;
	}

	inline bool operator!=(_1c9e85e10_OrderedDefines _other) { return !this->operator==(_other); }


};
inline jule::Bool _1cc56383c_is_common_ordered(jule::Slice<jule::Ptr<_1e43360cb_Struct>>&, jule::Ptr<_1e43360cb_Struct>);
inline jule::Bool _1cc56b58c_is_common_ordered(jule::Slice<jule::Ptr<_1e46c6eb6_Var>>&, jule::Ptr<_1e46c6eb6_Var>);
inline void _1cc55ec67_order_common(jule::Slice<jule::Ptr<_1e43360cb_Struct>>&);
inline void _1cc5634b8_order_common(jule::Slice<jule::Ptr<_1e46c6eb6_Var>>&);
inline void static__1c9de2157_order_structures(jule::Slice<jule::Ptr<_1e43360cb_Struct>>&);
inline void static__1c9e68354_order_vars(jule::Slice<jule::Ptr<_1e46c6eb6_Var>>&);
struct _1e4966e7b_DefineOrderer {
	

	_1e4966e7b_DefineOrderer(void) = default;

	inline bool operator==(_1e4966e7b_DefineOrderer _other) { return true; }

	inline bool operator!=(_1e4966e7b_DefineOrderer _other) { return !this->operator==(_other); }


};
struct _1ca028ea3_LiveTable {
	jule::Slice<jule::Ptr<_1e46c6eb6_Var>> _field_vars = jule::Slice<jule::Ptr<_1e46c6eb6_Var>>();
	jule::Slice<jule::Ptr<_1e4383018_FnIns>> _field_fns = jule::Slice<jule::Ptr<_1e4383018_FnIns>>();
	jule::Slice<jule::Ptr<_1e43462ea_StructIns>> _field_structs = jule::Slice<jule::Ptr<_1e43462ea_StructIns>>();
	

	_1ca028ea3_LiveTable(void) = default;

	inline bool operator==(_1ca028ea3_LiveTable _other) {
		return 
			this->_field_vars == _other._field_vars &&
			this->_field_fns == _other._field_fns &&
			this->_field_structs == _other._field_structs;
	}

	inline bool operator!=(_1ca028ea3_LiveTable _other) { return !this->operator==(_other); }


};
inline void _1ca05d58c_optimize_child(jule::Ptr<_1ca05d1a2_ScopeDeadCode>, jule::Ptr<_1e46862c7_Scope>&);
inline void _1ca05d812_optimize_body_child(jule::Ptr<_1ca05d1a2_ScopeDeadCode>, jule::Ptr<_1e46862c7_Scope>&);
inline void _1ca05da87_optimize_expr_model(jule::Ptr<_1ca05d1a2_ScopeDeadCode>, jule::Any&);
inline void _1ca05dc63_eliminate_followed(_1ca05d1a2_ScopeDeadCode*);
inline void _1ca05ded8_push_goto(jule::Ptr<_1ca05d1a2_ScopeDeadCode>, jule::Ptr<_1e4688d02_GotoSt>);
inline void _1ca05e25d_push_label(jule::Ptr<_1ca05d1a2_ScopeDeadCode>, jule::Ptr<_1e4688a16_Label>);
inline void _1ca05e4d3_optimize_range_iter(jule::Ptr<_1ca05d1a2_ScopeDeadCode>, jule::Ptr<_1e4687eee_RangeIter>);
inline void _1ca05e758_optimize_while_iter(jule::Ptr<_1ca05d1a2_ScopeDeadCode>, jule::Ptr<_1e4687619_WhileIter>);
inline void _1ca05e9cd_optimize_inf_iter(jule::Ptr<_1ca05d1a2_ScopeDeadCode>, jule::Ptr<_1e4687196_InfIter>);
inline void _1ca05ec53_optimize_conditional(jule::Ptr<_1ca05d1a2_ScopeDeadCode>, jule::Ptr<_1e4686daa_Conditional>);
inline void _1ca05eec8_optimize_match(jule::Ptr<_1ca05d1a2_ScopeDeadCode>, jule::Ptr<_1e468a023_Match>);
inline void _1ca06024d_optimize_assign(jule::Ptr<_1ca05d1a2_ScopeDeadCode>, jule::Ptr<_1e468962c_Assign>);
inline void _1ca0604c3_optimize_multi_assign(jule::Ptr<_1ca05d1a2_ScopeDeadCode>, jule::Ptr<_1e46899d4_MultiAssign>);
inline void _1ca060748_optimize_stmt(jule::Ptr<_1ca05d1a2_ScopeDeadCode>, jule::Any);
inline void _1ca060924_optimize_stmts(jule::Ptr<_1ca05d1a2_ScopeDeadCode>);
struct _1ca05d1a2_ScopeDeadCode {
	jule::Ptr<_1ca05d1a2_ScopeDeadCode> _field_parent = jule::Ptr<_1ca05d1a2_ScopeDeadCode>();
	jule::Ptr<_1e46862c7_Scope> _field_s = jule::Ptr<_1e46862c7_Scope>();
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = jule::I64();
	jule::Ptr<jule::Slice<jule::Ptr<_1e4688a16_Label>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_1e4688a16_Label>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_1e4688d02_GotoSt>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_1e4688d02_GotoSt>>>();
	

	_1ca05d1a2_ScopeDeadCode(void) = default;

	inline bool operator==(_1ca05d1a2_ScopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos;
	}

	inline bool operator!=(_1ca05d1a2_ScopeDeadCode _other) { return !this->operator==(_other); }


};
inline _1ca061c55_ExprDeadCode static__1ca062805_new(jule::Ptr<_1ca05d1a2_ScopeDeadCode>&);
inline void _1ca062a7a_binary(_1ca061c55_ExprDeadCode*, jule::Ptr<_1e435a8e7_BinopExprModel>);
inline void _1ca062d00_unary(_1ca061c55_ExprDeadCode*, jule::Ptr<_1e435972b_UnaryExprModel>);
inline void _1ca063075_structure_lit(_1ca061c55_ExprDeadCode*, jule::Ptr<_1e433b004_StructLitExprModel>);
inline void _1ca0632ea_alloc_structure(_1ca061c55_ExprDeadCode*, jule::Ptr<_1e4331d63_AllocStructLitExprModel>);
inline void _1ca063570_casting(_1ca061c55_ExprDeadCode*, jule::Ptr<_1e434e7dc_CastingExprModel>);
inline void _1ca0637e5_args(_1ca061c55_ExprDeadCode*, jule::Slice<jule::Any>&);
inline void _1ca063a6a_func_call(_1ca061c55_ExprDeadCode*, jule::Ptr<_1e4354902_FnCallExprModel>);
inline void _1ca063ce0_slice(_1ca061c55_ExprDeadCode*, jule::Ptr<_1e4354ade_SliceExprModel>);
inline void _1ca064065_array(_1ca061c55_ExprDeadCode*, jule::Ptr<_1e437c5a6_ArrayExprModel>);
inline void _1ca0642da_indexing(_1ca061c55_ExprDeadCode*, jule::Ptr<_1e437b31e_IndexingExprModel>);
inline void _1ca064560_anon_func(_1ca061c55_ExprDeadCode*, jule::Ptr<_1e437b50b_AnonFnExprModel>);
inline void _1ca0647d5_map(_1ca061c55_ExprDeadCode*, jule::Ptr<_1e437b8d5_MapExprModel>);
inline void _1ca064a5a_slicing(_1ca061c55_ExprDeadCode*, jule::Ptr<_1e437bac2_SlicingExprModel>);
inline void _1ca064cd0_trait_sub(_1ca061c55_ExprDeadCode*, jule::Ptr<_1e437bcae_TraitSubIdentExprModel>);
inline void _1ca065055_structure_sub(_1ca061c55_ExprDeadCode*, jule::Ptr<_1e437c1cc_StructSubIdentExprModel>);
inline void _1ca0652ca_common_sub(_1ca061c55_ExprDeadCode*, jule::Ptr<_1e437c980_CommonSubIdentExprModel>);
inline void _1ca065550_tuple(_1ca061c55_ExprDeadCode*, jule::Ptr<_1e437cb6c_TupleExprModel>);
inline void _1ca0657c5_new_call(_1ca061c55_ExprDeadCode*, jule::Ptr<_1e437d420_BuiltinNewCallExprModel>);
inline void _1ca065a4a_out_call(_1ca061c55_ExprDeadCode*, jule::Ptr<_1e437cd59_BuiltinOutCallExprModel>);
inline void _1ca065cc0_outln_call(_1ca061c55_ExprDeadCode*, jule::Ptr<_1e437d046_BuiltinOutlnCallExprModel>);
inline void _1ca066045_panic_call(_1ca061c55_ExprDeadCode*, jule::Ptr<_1e437d60c_BuiltinPanicCallExprModel>);
inline void _1ca0662ba_assert_call(_1ca061c55_ExprDeadCode*, jule::Ptr<_1e437d7e9_BuiltinAssertCallExprModel>);
inline void _1ca066540_error_call(_1ca061c55_ExprDeadCode*, jule::Ptr<_1e437e09c_BuiltinErrorCallExprModel>);
inline void _1ca0667b5_make_call(_1ca061c55_ExprDeadCode*, jule::Ptr<_1e437d9d6_BuiltinMakeCallExprModel>);
inline void _1ca066a3a_append_call(_1ca061c55_ExprDeadCode*, jule::Ptr<_1e437dbc3_BuiltinAppendCallExprModel>);
inline void _1ca066cb0_clone_call(_1ca061c55_ExprDeadCode*, jule::Ptr<_1e437d233_BuiltinCloneCallExprModel>);
inline void _1ca067035_sizeof(_1ca061c55_ExprDeadCode*, jule::Ptr<_1e437be9b_SizeofExprModel>);
inline void _1ca0672aa_alignof(_1ca061c55_ExprDeadCode*, jule::Ptr<_1e437e70c_AlignofExprModel>);
inline void _1ca067530_integrated_to_str(_1ca061c55_ExprDeadCode*, jule::Ptr<_1e437ead6_IntegratedToStrExprModel>);
inline void _1ca0677a5_free(_1ca061c55_ExprDeadCode*, jule::Ptr<_1e437eeb0_FreeExprModel>);
inline void _1ca067a2a_backend_emit(_1ca061c55_ExprDeadCode*, jule::Ptr<_1e437ecc3_BackendEmitExprModel>);
inline void _1ca067ca0_optimize(_1ca061c55_ExprDeadCode*, jule::Any&);
struct _1ca061c55_ExprDeadCode {
	jule::Ptr<_1ca05d1a2_ScopeDeadCode> _field_s = jule::Ptr<_1ca05d1a2_ScopeDeadCode>();
	

	_1ca061c55_ExprDeadCode(void) = default;

	inline bool operator==(_1ca061c55_ExprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1ca061c55_ExprDeadCode _other) { return !this->operator==(_other); }


};
struct _1e40d153b_UnsafeBinopExprModel {
	jule::Ptr<_1e435a8e7_BinopExprModel> _field_node = jule::Ptr<_1e435a8e7_BinopExprModel>();
	

	_1e40d153b_UnsafeBinopExprModel(void) = default;

	inline bool operator==(_1e40d153b_UnsafeBinopExprModel _other) {
		return 
			this->_field_node == _other._field_node;
	}

	inline bool operator!=(_1e40d153b_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _20c91dcd8_UnsafeIndexingExprModel {
	jule::Ptr<_1e437b31e_IndexingExprModel> _field_node = jule::Ptr<_1e437b31e_IndexingExprModel>();
	

	_20c91dcd8_UnsafeIndexingExprModel(void) = default;

	inline bool operator==(_20c91dcd8_UnsafeIndexingExprModel _other) {
		return 
			this->_field_node == _other._field_node;
	}

	inline bool operator!=(_20c91dcd8_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1e3b31003_PushToSliceExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Ptr<_1e4354ade_SliceExprModel> _field_elems = jule::Ptr<_1e4354ade_SliceExprModel>();
	

	_1e3b31003_PushToSliceExprModel(void) = default;

	inline bool operator==(_1e3b31003_PushToSliceExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1e3b31003_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _20c90c6ab_MutSlicingExprModel {
	jule::Ptr<_20cd9e6ec_Token> _field_token = jule::Ptr<_20cd9e6ec_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();
	

	_20c90c6ab_MutSlicingExprModel(void) = default;

	inline bool operator==(_20c90c6ab_MutSlicingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_20c90c6ab_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _2254a3c1d_StrInsertBeginExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Any _field_expr = jule::Any();
	

	_2254a3c1d_StrInsertBeginExprModel(void) = default;

	inline bool operator==(_2254a3c1d_StrInsertBeginExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_2254a3c1d_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e3b2c2b8_ScopeOptimizer> static__20c8ee02c_new(jule::Ptr<_1e46862c7_Scope>);
inline void _20c9a1453_set_current_stmt(_1e3b2c2b8_ScopeOptimizer*, jule::Any);
inline void _20c9a7b41_optimize_data(_1e3b2c2b8_ScopeOptimizer*, jule::Ptr<_1c974abc0_Data>);
inline void _20c9b2dd2_optimize_var(_1e3b2c2b8_ScopeOptimizer*, jule::Ptr<_1e46c6eb6_Var>);
inline void _20c9ba835_optimize_conditional(_1e3b2c2b8_ScopeOptimizer*, jule::Ptr<_1e4686daa_Conditional>);
inline void _20c9c739c_build_default_constat_true_case(_1e3b2c2b8_ScopeOptimizer*, jule::Ptr<_1e468a9d5_Case>, jule::I64&, jule::Ptr<_1e468a023_Match>&);
inline void _20c9dba98_optimize_match(_1e3b2c2b8_ScopeOptimizer*, jule::Ptr<_1e468a023_Match>);
inline void _20c9e31dc_optimize_range_iter(_1e3b2c2b8_ScopeOptimizer*, jule::Ptr<_1e4687eee_RangeIter>);
inline void _20c9e55b8_optimize_while_iter(_1e3b2c2b8_ScopeOptimizer*, jule::Ptr<_1e4687619_WhileIter>);
inline jule::Bool _20c9e98ec_substr(_1e3b2c2b8_ScopeOptimizer*, jule::Ptr<_1e468962c_Assign>);
inline jule::Bool _20ce41c67_str_insert(_1e3b2c2b8_ScopeOptimizer*, jule::Ptr<_1e468962c_Assign>);
inline jule::Bool _1e3b30189_str_assign(_1e3b2c2b8_ScopeOptimizer*, jule::Ptr<_1e468962c_Assign>);
inline void _1e3b372a1_optimize_assign(_1e3b2c2b8_ScopeOptimizer*, jule::Ptr<_1e468962c_Assign>);
inline void _1e3b67666_optimize_multi_assign(_1e3b2c2b8_ScopeOptimizer*, jule::Ptr<_1e46899d4_MultiAssign>);
inline void _1e3b7bdb7_optimize_ret(_1e3b2c2b8_ScopeOptimizer*, jule::Ptr<_1e468b5da_RetSt>);
inline void _1e3b80096_optimize_stmt(_1e3b2c2b8_ScopeOptimizer*, jule::Any);
inline void _1e3b81ce0_optimize_child(_1e3b2c2b8_ScopeOptimizer*, jule::Ptr<_1e46862c7_Scope>);
inline void _1e3b84166_optimize(_1e3b2c2b8_ScopeOptimizer*);
struct _1e3b2c2b8_ScopeOptimizer {
	jule::I64 _field_i = jule::I64();
	jule::Ptr<_1e46862c7_Scope> _field_scope = jule::Ptr<_1e46862c7_Scope>();
	

	_1e3b2c2b8_ScopeOptimizer(void) = default;

	inline bool operator==(_1e3b2c2b8_ScopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1e3b2c2b8_ScopeOptimizer _other) { return !this->operator==(_other); }


};
inline void static__1e3c1019d_optimize(jule::Any&);
inline jule::Bool _1e3c15e0c_str_cond(_1e3b2cd8a_ExprOptimizer*, jule::Ptr<_1e435a8e7_BinopExprModel>);
inline void _1e3c28b9a_binary(_1e3b2cd8a_ExprOptimizer*, jule::Ptr<_1e435a8e7_BinopExprModel>);
inline void _1e3c2ca7d_unary(_1e3b2cd8a_ExprOptimizer*, jule::Ptr<_1e435972b_UnaryExprModel>);
inline void _1e3c3447a_structure_lit(_1e3b2cd8a_ExprOptimizer*, jule::Ptr<_1e433b004_StructLitExprModel>);
inline void _1e3c528e9_alloc_structure(_1e3b2cd8a_ExprOptimizer*, jule::Ptr<_1e4331d63_AllocStructLitExprModel>);
inline void _1e3c545dd_casting(_1e3b2cd8a_ExprOptimizer*, jule::Ptr<_1e434e7dc_CastingExprModel>);
inline void _1e3ba5bd2_args(_1e3b2cd8a_ExprOptimizer*, jule::Slice<jule::Any>&);
inline void _1e3b347cb_scope(_1e3b2cd8a_ExprOptimizer*, jule::Ptr<_1e46862c7_Scope>&);
inline void _1e3b35634_func_call(_1e3b2cd8a_ExprOptimizer*, jule::Ptr<_1e4354902_FnCallExprModel>);
inline void _1e3c7b747_slice(_1e3b2cd8a_ExprOptimizer*, jule::Ptr<_1e4354ade_SliceExprModel>);
inline void _1e3c8906d_array(_1e3b2cd8a_ExprOptimizer*, jule::Ptr<_1e437c5a6_ArrayExprModel>);
inline void _1e3c8c1c5_indexing(_1e3b2cd8a_ExprOptimizer*, jule::Ptr<_1e437b31e_IndexingExprModel>);
inline void _1e3c93a7d_anon_func(_1e3b2cd8a_ExprOptimizer*, jule::Ptr<_1e437b50b_AnonFnExprModel>);
inline void _1e3cbee0b_map(_1e3b2cd8a_ExprOptimizer*, jule::Ptr<_1e437b8d5_MapExprModel>);
inline void _1e3cd694a_slicing(_1e3b2cd8a_ExprOptimizer*, jule::Ptr<_1e437bac2_SlicingExprModel>);
inline void _1e3cdd864_trait_sub(_1e3b2cd8a_ExprOptimizer*, jule::Ptr<_1e437bcae_TraitSubIdentExprModel>);
inline void _1e3ced621_structure_sub(_1e3b2cd8a_ExprOptimizer*, jule::Ptr<_1e437c1cc_StructSubIdentExprModel>);
inline void _1e3d379e0_common_sub(_1e3b2cd8a_ExprOptimizer*, jule::Ptr<_1e437c980_CommonSubIdentExprModel>);
inline void _1e3d43556_tuple(_1e3b2cd8a_ExprOptimizer*, jule::Ptr<_1e437cb6c_TupleExprModel>);
inline void _1e3d935d9_new_call(_1e3b2cd8a_ExprOptimizer*, jule::Ptr<_1e437d420_BuiltinNewCallExprModel>);
inline void _1e3d9a910_out_call(_1e3b2cd8a_ExprOptimizer*, jule::Ptr<_1e437cd59_BuiltinOutCallExprModel>);
inline void _1e3da9688_outln_call(_1e3b2cd8a_ExprOptimizer*, jule::Ptr<_1e437d046_BuiltinOutlnCallExprModel>);
inline void _1e3dc8201_panic_call(_1e3b2cd8a_ExprOptimizer*, jule::Ptr<_1e437d60c_BuiltinPanicCallExprModel>);
inline void _1e3dbc8bb_assert_call(_1e3b2cd8a_ExprOptimizer*, jule::Ptr<_1e437d7e9_BuiltinAssertCallExprModel>);
inline void _1e3de7c8c_error_call(_1e3b2cd8a_ExprOptimizer*, jule::Ptr<_1e437e09c_BuiltinErrorCallExprModel>);
inline void _1e3e2215c_make_call(_1e3b2cd8a_ExprOptimizer*, jule::Ptr<_1e437d9d6_BuiltinMakeCallExprModel>);
inline void _1e3e22c40_append_call(_1e3b2cd8a_ExprOptimizer*, jule::Ptr<_1e437dbc3_BuiltinAppendCallExprModel>);
inline void _1e3e72740_clone_call(_1e3b2cd8a_ExprOptimizer*, jule::Ptr<_1e437d233_BuiltinCloneCallExprModel>);
inline void _1e3e8b418_sizeof(_1e3b2cd8a_ExprOptimizer*, jule::Ptr<_1e437be9b_SizeofExprModel>);
inline void _1e408804d_alignof(_1e3b2cd8a_ExprOptimizer*, jule::Ptr<_1e437e70c_AlignofExprModel>);
inline void _1e4090b38_integrated_to_str(_1e3b2cd8a_ExprOptimizer*, jule::Ptr<_1e437ead6_IntegratedToStrExprModel>);
inline void _1e40b260a_free(_1e3b2cd8a_ExprOptimizer*, jule::Ptr<_1e437eeb0_FreeExprModel>);
inline void _1e40bda78_backend_emit(_1e3b2cd8a_ExprOptimizer*, jule::Ptr<_1e437ecc3_BackendEmitExprModel>);
inline void _1e40cb17e_do(_1e3b2cd8a_ExprOptimizer*);
struct _1e3b2cd8a_ExprOptimizer {
	jule::Ptr<jule::Any> _field_model = jule::Ptr<jule::Any>();
	

	_1e3b2cd8a_ExprOptimizer(void) = default;

	inline bool operator==(_1e3b2cd8a_ExprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1e3b2cd8a_ExprOptimizer _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ca001d16_Optimizer> static__1c9d3c16d_new(jule::Ptr<_1e498133b_IR>&);
inline void _1c9d65927_optimize_global(_1ca001d16_Optimizer*, jule::Ptr<_1e46c6eb6_Var>&);
inline void _1c9ed35cd_optimize_function(_1ca001d16_Optimizer*, jule::Ptr<_1e4380576_Fn>&);
inline void _1c9ed5c40_optimize_struct(_1ca001d16_Optimizer*, jule::Ptr<_1e43360cb_Struct>&);
inline void _1c9ed5dc7_optimize_globals(_1ca001d16_Optimizer*, jule::Ptr<_1e46a742a_Package>&);
inline void _1c9ed91a5_optimize_functions(_1ca001d16_Optimizer*, jule::Ptr<_1e46a742a_Package>&);
inline void _1c9edbe44_optimize_structs(_1ca001d16_Optimizer*, jule::Ptr<_1e46a742a_Package>&);
inline void _1c9ee845b_optimize_package(_1ca001d16_Optimizer*, jule::Ptr<_1e46a742a_Package>&);
inline void _1c9eec6d5_optimize(_1ca001d16_Optimizer*);
struct _1ca001d16_Optimizer {
	jule::Ptr<_1e498133b_IR> _field_ir = jule::Ptr<_1e498133b_IR>();
	

	_1ca001d16_Optimizer(void) = default;

	inline bool operator==(_1ca001d16_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1ca001d16_Optimizer _other) { return !this->operator==(_other); }


};
inline void static__1c9e9854e_reset(void);
inline void static__1c9e98681_print(jule::Str, jule::Str);
struct _1c9e98362_AnsiEscape {
	

	_1c9e98362_AnsiEscape(void) = default;

	inline bool operator==(_1c9e98362_AnsiEscape _other) { return true; }

	inline bool operator!=(_1c9e98362_AnsiEscape _other) { return !this->operator==(_other); }


};
inline void static__1c9e999c3_log_flat(_20ca8ec5b_Log&);
inline void static__1c9e99bd2_log_error(_20ca8ec5b_Log&);
inline void static__1c9e99de1_log(_20ca8ec5b_Log&);
inline void static__1c9e9a100_print_logs(jule::Slice<_20ca8ec5b_Log>&);
struct _1c9e9972b_Logger {
	

	_1c9e9972b_Logger(void) = default;

	inline bool operator==(_1c9e9972b_Logger _other) { return true; }

	inline bool operator!=(_1c9e9972b_Logger _other) { return !this->operator==(_other); }


};
inline jule::U64 _1ca51a87e_unix(_1ca51a494_AbsTime*);
struct _1ca51a494_AbsTime {
	jule::U64 _field_day = jule::U64();
	jule::U64 _field_week_day = jule::U64();
	jule::U64 _field_year_day = jule::U64();
	jule::U64 _field_month = jule::U64();
	jule::U64 _field_year = jule::U64();
	jule::U64 _field_second = jule::U64();
	jule::U64 _field_minute = jule::U64();
	jule::U64 _field_hour = jule::U64();
	

	_1ca51a494_AbsTime(void) = default;

	inline bool operator==(_1ca51a494_AbsTime _other) {
		return 
			this->_field_day == _other._field_day &&
			this->_field_week_day == _other._field_week_day &&
			this->_field_year_day == _other._field_year_day &&
			this->_field_month == _other._field_month &&
			this->_field_year == _other._field_year &&
			this->_field_second == _other._field_second &&
			this->_field_minute == _other._field_minute &&
			this->_field_hour == _other._field_hour;
	}

	inline bool operator!=(_1ca51a494_AbsTime _other) { return !this->operator==(_other); }


};
inline _1ca51ab6a_Time static__1ca51b011_unix(jule::U64);
inline _1ca51ab6a_Time static__1ca51b20e_now(void);
inline jule::U64 _1ca51b660_unix(_1ca51ab6a_Time*);
inline jule::U64 _1ca51b8c4_day(_1ca51ab6a_Time*);
inline jule::U64 _1ca51bb38_month(_1ca51ab6a_Time*);
inline jule::U64 _1ca51bd9c_year(_1ca51ab6a_Time*);
inline jule::U64 _1ca51c111_second(_1ca51ab6a_Time*);
inline jule::U64 _1ca51c375_minute(_1ca51ab6a_Time*);
inline jule::U64 _1ca51c5d9_hour(_1ca51ab6a_Time*);
inline _1ca51a494_AbsTime _1ca51c84d_abs(_1ca51ab6a_Time*);
struct _1ca51ab6a_Time {
	jule::U64 _field_sec = jule::U64();
	

	_1ca51ab6a_Time(void) = default;

	inline bool operator==(_1ca51ab6a_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1ca51ab6a_Time _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ca49177d_ScopeCoder> static__1ca491d99_new(jule::Ptr<_1ca4d7c36_ObjectCoder>&);
inline void _1ca49211e_range_index_iter(jule::Ptr<_1ca49177d_ScopeCoder>, jule::Ptr<_1e4687eee_RangeIter>&);
inline void _1ca492394_range_hashmap_iter(jule::Ptr<_1ca49177d_ScopeCoder>, jule::Ptr<_1e4687eee_RangeIter>&);
inline void _1ca492619_if_case(jule::Ptr<_1ca49177d_ScopeCoder>, jule::Ptr<_1e46866c3_If>);
inline void _1ca49288e_conditional(jule::Ptr<_1ca49177d_ScopeCoder>, jule::Ptr<_1e4686daa_Conditional>);
inline void _1ca492b14_inf_iter(jule::Ptr<_1ca49177d_ScopeCoder>, jule::Ptr<_1e4687196_InfIter>);
inline void _1ca492d89_while_iter(jule::Ptr<_1ca49177d_ScopeCoder>, jule::Ptr<_1e4687619_WhileIter>);
inline void _1ca49310e_range_iter(jule::Ptr<_1ca49177d_ScopeCoder>, jule::Ptr<_1e4687eee_RangeIter>);
inline void _1ca493384_cont(jule::Ptr<_1ca49177d_ScopeCoder>, jule::Ptr<_1e4688373_ContSt>);
inline void _1ca493609_label(jule::Ptr<_1ca49177d_ScopeCoder>, jule::Ptr<_1e4688a16_Label>);
inline void _1ca49387e_goto_st(jule::Ptr<_1ca49177d_ScopeCoder>, jule::Ptr<_1e4688d02_GotoSt>);
inline void _1ca493b04_postfix(jule::Ptr<_1ca49177d_ScopeCoder>, jule::Ptr<_1e46891a9_Postfix>);
inline void _1ca493d79_assign(jule::Ptr<_1ca49177d_ScopeCoder>, jule::Ptr<_1e468962c_Assign>);
inline void _1ca4940ee_multi_assign(jule::Ptr<_1ca49177d_ScopeCoder>, jule::Ptr<_1e46899d4_MultiAssign>);
inline jule::Fn<void(void)> _1ca49440c_match_expr(jule::Ptr<_1ca49177d_ScopeCoder>, jule::Ptr<_1e468a023_Match>);
inline void _1ca49472b_case(jule::Ptr<_1ca49177d_ScopeCoder>, jule::Ptr<_1e468a023_Match>, jule::Ptr<_1e468a9d5_Case>);
inline void _1ca4949a1_match_st(jule::Ptr<_1ca49177d_ScopeCoder>, jule::Ptr<_1e468a023_Match>);
inline void _1ca494c26_fall_st(jule::Ptr<_1ca49177d_ScopeCoder>, jule::Ptr<_1e468b167_FallSt>);
inline void _1ca494e9b_break_st(jule::Ptr<_1ca49177d_ScopeCoder>, jule::Ptr<_1e468872a_BreakSt>);
inline void _1ca495221_ret_with_vars(jule::Ptr<_1ca49177d_ScopeCoder>, jule::Ptr<_1e468b5da_RetSt>);
inline void _1ca495496_ret_tuple(jule::Ptr<_1ca49177d_ScopeCoder>, jule::Ptr<_1e468b5da_RetSt>);
inline void _1ca49571b_ret_with_exprs(jule::Ptr<_1ca49177d_ScopeCoder>, jule::Ptr<_1e468b5da_RetSt>);
inline void _1ca495991_ret_st(jule::Ptr<_1ca49177d_ScopeCoder>, jule::Ptr<_1e468b5da_RetSt>);
inline void _1ca495e8b_var(jule::Ptr<_1ca49177d_ScopeCoder>, jule::Ptr<_1e46c6eb6_Var>);
inline void _1ca496211_st(jule::Ptr<_1ca49177d_ScopeCoder>, jule::Any);
inline void _1ca496486_scope_stmts(jule::Ptr<_1ca49177d_ScopeCoder>, jule::Ptr<_1e46862c7_Scope>&);
inline void _1ca49670b_scope(jule::Ptr<_1ca49177d_ScopeCoder>, jule::Ptr<_1e46862c7_Scope>);
inline void _1ca496981_func_scope(jule::Ptr<_1ca49177d_ScopeCoder>, jule::Ptr<_1e4383018_FnIns>);
struct _1ca49177d_ScopeCoder {
	jule::Ptr<_1ca4d7c36_ObjectCoder> _field_oc = jule::Ptr<_1ca4d7c36_ObjectCoder>();
	

	_1ca49177d_ScopeCoder(void) = default;

	inline bool operator==(_1ca49177d_ScopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1ca49177d_ScopeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ca4994ab_ExprCoder> static__1ca4998a7_new(jule::Ptr<_1ca4d7c36_ObjectCoder>&);
inline void _1ca499b2c_string(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1c968bb88_Const>&);
inline void _1ca499da2_boolean(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1c968bb88_Const>&);
inline void _1ca49a07d_nil_lit(jule::Ptr<_1ca4994ab_ExprCoder>);
inline jule::Bool _1ca49a38b_ftoa_special_cases(jule::Ptr<_1ca4994ab_ExprCoder>, jule::F64&);
inline void _1ca49a611_float32(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1c968bb88_Const>&);
inline void _1ca49a886_float64(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1c968bb88_Const>&);
inline void _1ca49aba5_constant(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1c968bb88_Const>, jule::Bool);
inline void _1ca49b06d_div_by_zero_binary(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_20cd9e6ec_Token>&, jule::Ptr<_1e4347a8d_OperandExprModel>&, jule::Ptr<_1e4347a8d_OperandExprModel>&);
inline void _1ca49b2e3_unsafe_binary(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e435a8e7_BinopExprModel>);
inline void _1ca49b568_binary(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e435a8e7_BinopExprModel>);
inline void _1ca49b7dd_var(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e46c6eb6_Var>);
inline void _1ca49ba63_structure(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e43360cb_Struct>);
inline void _1ca49bcd8_structure_ins(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e43462ea_StructIns>);
inline void _1ca49c05d_unary(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e435972b_UnaryExprModel>);
inline void _1ca49c2d3_structure_lit(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e433b004_StructLitExprModel>);
inline void _1ca49c558_alloc_structure(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e4331d63_AllocStructLitExprModel>);
inline void _1ca49c7cd_casting(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e434e7dc_CastingExprModel>);
inline void _1ca49ca53_args(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Slice<jule::Any>);
inline void _1ca49ccc8_model_for_call(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Any);
inline void _1ca49d04d_push_call_inf(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e4354902_FnCallExprModel>&);
inline jule::Bool _1ca49d35b_is_wrapped(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e4354902_FnCallExprModel>&);
inline void _1ca49d5d1_pure_func_call(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e4354902_FnCallExprModel>&);
inline void _1ca49d856_func_call(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e4354902_FnCallExprModel>);
inline void _1ca49dacb_slice(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e4354ade_SliceExprModel>);
inline void _1ca49dd51_indexing(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e437b31e_IndexingExprModel>);
inline void _1ca49e0c6_unsafe_indexing(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_20c91dcd8_UnsafeIndexingExprModel>);
inline void _1ca49e34b_anon_func(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e437b50b_AnonFnExprModel>);
inline void _1ca49e5c1_map(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e437b8d5_MapExprModel>);
inline void _1ca49e846_slicing(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e437bac2_SlicingExprModel>);
inline void _1ca49eabb_trait_sub(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e437bcae_TraitSubIdentExprModel>);
inline void _1ca49ed41_structure_sub(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e437c1cc_StructSubIdentExprModel>);
inline void _1ca4a00b6_common_ident(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e437c793_CommonIdentExprModel>);
inline void _1ca4a033b_common_sub(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e437c980_CommonSubIdentExprModel>);
inline void _1ca4a05b1_array(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e437c5a6_ArrayExprModel>);
inline void _1ca4a0836_func_ins_common(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e4383018_FnIns>);
inline void _1ca4a0aab_func_ins(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e4383018_FnIns>);
inline void _1ca4a0d31_tuple(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e437cb6c_TupleExprModel>);
inline void _1ca4a10a6_new_call(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e437d420_BuiltinNewCallExprModel>);
inline void _1ca4a132b_out_call(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e437cd59_BuiltinOutCallExprModel>);
inline void _1ca4a15a1_outln_call(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e437d046_BuiltinOutlnCallExprModel>);
inline void _1ca4a1826_panic_call(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e437d60c_BuiltinPanicCallExprModel>);
inline void _1ca4a1a9b_assert_call(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e437d7e9_BuiltinAssertCallExprModel>);
inline void _1ca4a1d21_error_call(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e437e09c_BuiltinErrorCallExprModel>);
inline void _1ca4a2096_copy_call(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e437ddb0_BuiltinCopyCallExprModel>);
inline void _1ca4a231b_make_call_slice(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e437d9d6_BuiltinMakeCallExprModel>&);
inline void _1ca4a2591_make_call_str(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e437d9d6_BuiltinMakeCallExprModel>&);
inline void _1ca4a2816_make_call(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e437d9d6_BuiltinMakeCallExprModel>);
inline void _1ca4a2a8b_push_to_slice(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e3b31003_PushToSliceExprModel>);
inline void _1ca4a2d11_append_call(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e437dbc3_BuiltinAppendCallExprModel>);
inline void _1ca4a3086_clone_call(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e437d233_BuiltinCloneCallExprModel>);
inline void _1ca4a330b_sizeof(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e437be9b_SizeofExprModel>);
inline void _1ca4a3581_alignof(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e437e70c_AlignofExprModel>);
inline jule::Str _1ca4a388e_rune_lit(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e437e8e9_RuneExprModel>);
inline void _1ca4a3b14_structure_static(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e437c3b9_StructStaticIdentExprModel>);
inline void _1ca4a3d89_integrated_to_str(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e437ead6_IntegratedToStrExprModel>);
inline void _1ca4a410e_backend_emit(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e437ecc3_BackendEmitExprModel>);
inline void _1ca4a4384_free(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1e437eeb0_FreeExprModel>);
inline void _1ca4a4609_mut_slicing(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_20c90c6ab_MutSlicingExprModel>);
inline void _1ca4a487e_str_insert_begin(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_2254a3c1d_StrInsertBeginExprModel>);
inline void _1ca4a4b04_model(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Any);
inline void _1ca4a4d79_expr(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Any);
inline void _1ca4a50ee_val(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1c974bc48_Value>);
inline void _1ca4a5374_init_expr(jule::Ptr<_1ca4994ab_ExprCoder>, jule::Ptr<_1c97746ee_TypeKind>);
struct _1ca4994ab_ExprCoder {
	jule::Ptr<_1ca4d7c36_ObjectCoder> _field_oc = jule::Ptr<_1ca4d7c36_ObjectCoder>();
	

	_1ca4994ab_ExprCoder(void) = default;

	inline bool operator==(_1ca4994ab_ExprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1ca4994ab_ExprCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1ca4a7909_clone_func_decl(jule::Ptr<_1e43360cb_Struct>&);
inline jule::Str static__1ca4a7ba1_clone_func_def(jule::Ptr<_1e43360cb_Struct>&);
struct _1ca4a75a7_DeriveCoder {
	

	_1ca4a75a7_DeriveCoder(void) = default;

	inline bool operator==(_1ca4a75a7_DeriveCoder _other) { return true; }

	inline bool operator!=(_1ca4a75a7_DeriveCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ca4a8b80_TestCoder> static__1ca4a9103_new(jule::Ptr<_1ca4d7c36_ObjectCoder>&);
inline jule::Ptr<_1e46a4768_ImportInfo> _1ca4a9367_find_testing_package(jule::Ptr<_1ca4a8b80_TestCoder>);
inline void _1ca4a95dc_append_test(jule::Ptr<_1ca4a8b80_TestCoder>, jule::Ptr<_1e4383018_FnIns>);
inline void _1ca4a9862_append_package_tests(jule::Ptr<_1ca4a8b80_TestCoder>, jule::Ptr<_1e46a742a_Package>&);
inline jule::Bool _1ca4a9ac6_ready_testing_package(jule::Ptr<_1ca4a8b80_TestCoder>);
inline void _1ca4a9ca2_call_tm_reset(jule::Ptr<_1ca4a8b80_TestCoder>);
inline void _1ca4a9e7d_call_tm_failed(jule::Ptr<_1ca4a8b80_TestCoder>);
inline void _1ca4aa159_call_tm_skipped(jule::Ptr<_1ca4a8b80_TestCoder>);
inline void _1ca4aa335_serialize(jule::Ptr<_1ca4a8b80_TestCoder>);
struct _1ca4a8b80_TestCoder {
	jule::Ptr<_1e43462ea_StructIns> _field_t = jule::Ptr<_1e43462ea_StructIns>();
	jule::Ptr<_1e4380576_Fn> _field_tm_reset = jule::Ptr<_1e4380576_Fn>();
	jule::Ptr<_1e4380576_Fn> _field_tm_failed = jule::Ptr<_1e4380576_Fn>();
	jule::Ptr<_1e4380576_Fn> _field_tm_skipped = jule::Ptr<_1e4380576_Fn>();
	jule::Ptr<_1ca4d7c36_ObjectCoder> _field_oc = jule::Ptr<_1ca4d7c36_ObjectCoder>();
	

	_1ca4a8b80_TestCoder(void) = default;

	inline bool operator==(_1ca4a8b80_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tm_reset == _other._field_tm_reset &&
			this->_field_tm_failed == _other._field_tm_failed &&
			this->_field_tm_skipped == _other._field_tm_skipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1ca4a8b80_TestCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1ca4ab90d_to_out(jule::Str&, jule::U64);
inline jule::Str static__1ca4abce8_to_local(jule::I64, jule::I64, jule::Str&);
inline jule::Str static__1ca4ac090_func(jule::Ptr<_1e4380576_Fn>&);
inline jule::Str static__1ca4ac337_func_ins(jule::Ptr<_1e4383018_FnIns>&);
inline jule::Str static__1ca4ac5ce_trait_decl(jule::Ptr<_1e43d8d0a_Trait>);
inline jule::Str static__1ca4ac876_param(jule::Ptr<_1e4380389_Param>&);
inline jule::Str static__1ca4acb1d_structure(jule::Ptr<_1e43360cb_Struct>&);
inline jule::Str static__1ca4acdb5_structure_ins(jule::Ptr<_1e43462ea_StructIns>&);
inline jule::Str static__1ca4ad15c_field(jule::Ptr<_1e43542c5_Field>&);
inline jule::Str static__1ca4ad404_var(jule::Ptr<_1e46c6eb6_Var>);
inline jule::Str static__1ca4ad69b_iter_begin(jule::U64);
inline jule::Str static__1ca4ad943_iter_end(jule::U64);
inline jule::Str static__1ca4adbda_iter_next(jule::U64);
inline jule::Str static__1ca4ade82_label(jule::Str&);
inline jule::Str static__1ca4ae229_match_end(jule::U64);
inline jule::Str static__1ca4ae4c1_case_begin(jule::U64);
struct _1ca4ab402_IdentCoder {
	

	_1ca4ab402_IdentCoder(void) = default;

	inline bool operator==(_1ca4ab402_IdentCoder _other) { return true; }

	inline bool operator!=(_1ca4ab402_IdentCoder _other) { return !this->operator==(_other); }


};
struct _1ca4e41e8_SerializationInfo {
	jule::Str _field_compiler = jule::Str();
	jule::Str _field_compiler_command = jule::Str();
	

	_1ca4e41e8_SerializationInfo(void) = default;

	inline bool operator==(_1ca4e41e8_SerializationInfo _other) {
		return 
			this->_field_compiler == _other._field_compiler &&
			this->_field_compiler_command == _other._field_compiler_command;
	}

	inline bool operator!=(_1ca4e41e8_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1ca4d7a49_TraitHash {
	jule::Ptr<_1e43d8d0a_Trait> _field_t = jule::Ptr<_1e43d8d0a_Trait>();
	jule::Ptr<_1e43462ea_StructIns> _field_s = jule::Ptr<_1e43462ea_StructIns>();
	jule::I64 _field_i = jule::I64();
	

	_1ca4d7a49_TraitHash(void) = default;

	inline bool operator==(_1ca4d7a49_TraitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1ca4d7a49_TraitHash _other) { return !this->operator==(_other); }


};
inline jule::Str _1ca526802_to_str(_1ca526516_CustomType*);
inline jule::Bool _1ca526b10_equals(jule::Ptr<_1ca526516_CustomType>, jule::Ptr<_1c97746ee_TypeKind>);
struct _1ca526516_CustomType {
	jule::Str _field_kind = jule::Str();
	

	_1ca526516_CustomType(void) = default;

	inline bool operator==(_1ca526516_CustomType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1ca526516_CustomType _other) { return !this->operator==(_other); }


};
inline jule::Str static__1ca52734c_to_type(jule::Str);
inline jule::Str static__1ca5275e4_prim(jule::Ptr<_1c9778e51_Prim>);
inline jule::Str static__1ca52788b_tuple(jule::Ptr<_1c977d8b2_Tuple>);
inline jule::Str static__1ca527b33_as_sptr(jule::Str);
inline jule::Str static__1ca527dca_as_ptr(jule::Str);
inline jule::Str static__1ca528172_sptr(jule::Ptr<_1c977c460_Sptr>);
inline jule::Str static__1ca528419_ptr(jule::Ptr<_1c97809c4_Ptr>);
inline jule::Str static__1ca5286b1_enum_decl(jule::Ptr<_1e4456b58_Enum>);
inline jule::Str static__1ca528958_as_slice(jule::Ptr<_1c97746ee_TypeKind>);
inline jule::Str static__1ca528c00_slice(jule::Ptr<_1c977cdbc_Slc>);
inline jule::Str static__1ca528e97_map(jule::Ptr<_1c977e473_Map>);
inline jule::Str static__1ca52923e_trait_ident(jule::Str);
inline jule::Str static__1ca5294d6_trait_decl(jule::Ptr<_1e43d8d0a_Trait>);
inline jule::Str static__1ca52977d_structure(jule::Ptr<_1e43360cb_Struct>);
inline jule::Str static__1ca529a25_structure_ins(jule::Ptr<_1e43462ea_StructIns>);
inline jule::Str static__1ca529cbc_array(jule::Ptr<_1c9780067_Arr>);
inline jule::Str static__1ca52a30b_param_ins(jule::Ptr<_1e438217c_ParamIns>&);
inline jule::Str static__1ca52a84a_func_ins_result(jule::Ptr<_1e4383018_FnIns>&);
inline jule::Str static__1ca52aae2_anon_func(jule::Ptr<_1e4383018_FnIns>);
inline jule::Str static__1ca52ad89_func(jule::Ptr<_1e4383018_FnIns>);
inline jule::Str static__1ca52b131_kind(jule::Ptr<_1c97746ee_TypeKind>);
struct _1ca526d30_TypeCoder {
	

	_1ca526d30_TypeCoder(void) = default;

	inline bool operator==(_1ca526d30_TypeCoder _other) { return true; }

	inline bool operator!=(_1ca526d30_TypeCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _1cdc1e502_name(_1cdc1e216_Flag*);
inline jule::Str _1cdc1e645_what(_1cdc1e216_Flag*);
inline void _1cdc1e788_reset(_1cdc1e216_Flag*);
inline jule::I32 _1cdc1e8cb_short(_1cdc1e216_Flag*);
struct _1cdc1e216_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::I64 _field__default = jule::I64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::I64> _field__data = jule::Ptr<jule::I64>();
	

	_1cdc1e216_Flag(void) = default;

	inline bool operator==(_1cdc1e216_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1cdc1e216_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1cdc22307_name(_1cdc22c75_Flag*);
inline jule::Str _1cdc22901_what(_1cdc22c75_Flag*);
inline void _1cdc2303e_reset(_1cdc22c75_Flag*);
inline jule::I32 _1cdc23171_short(_1cdc22c75_Flag*);
struct _1cdc22c75_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::U64 _field__default = jule::U64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::U64> _field__data = jule::Ptr<jule::U64>();
	

	_1cdc22c75_Flag(void) = default;

	inline bool operator==(_1cdc22c75_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1cdc22c75_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1cdc258b0_name(_1cdc2632d_Flag*);
inline jule::Str _1cdc25ea9_what(_1cdc2632d_Flag*);
inline void _1cdc265e7_reset(_1cdc2632d_Flag*);
inline jule::I32 _1cdc26729_short(_1cdc2632d_Flag*);
struct _1cdc2632d_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::F64 _field__default = jule::F64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::F64> _field__data = jule::Ptr<jule::F64>();
	

	_1cdc2632d_Flag(void) = default;

	inline bool operator==(_1cdc2632d_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1cdc2632d_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1cdc28eac_name(_1cdc2992a_Flag*);
inline jule::Str _1cdc295a6_what(_1cdc2992a_Flag*);
inline void _1cdc29be4_reset(_1cdc2992a_Flag*);
inline jule::I32 _1cdc29d26_short(_1cdc2992a_Flag*);
struct _1cdc2992a_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Bool _field__default = jule::Bool();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Bool> _field__data = jule::Ptr<jule::Bool>();
	

	_1cdc2992a_Flag(void) = default;

	inline bool operator==(_1cdc2992a_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1cdc2992a_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1cdc2c565_name(_1cdc2ced3_Flag*);
inline jule::Str _1cdc2cb5e_what(_1cdc2ced3_Flag*);
inline void _1cdc2d29c_reset(_1cdc2ced3_Flag*);
inline jule::I32 _1cdc2d3ce_short(_1cdc2ced3_Flag*);
struct _1cdc2ced3_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Str _field__default = jule::Str();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Str> _field__data = jule::Ptr<jule::Str>();
	

	_1cdc2ced3_Flag(void) = default;

	inline bool operator==(_1cdc2ced3_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1cdc2ced3_Flag _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ca6ca81e_FlagSet> static__1ca6cab0a_new(void);
inline jule::Trait<_1ca6c8dd3_CommonFlag> _1ca6cb0c2_find_flag(_1ca6ca81e_FlagSet*, jule::Str);
inline jule::Trait<_1ca6c8dd3_CommonFlag> _1ca6cb3d0_find_flag_short(_1ca6ca81e_FlagSet*, jule::I32);
inline jule::Slice<jule::Trait<_1ca6c8dd3_CommonFlag>> _1ca6cb644_flags(_1ca6ca81e_FlagSet*);
inline jule::Exceptional<jule::Slice<jule::Str>> _1ca6cb952_parse(_1ca6ca81e_FlagSet*, jule::Slice<jule::Str>);
inline void _1ca6cbb2d_reset(_1ca6ca81e_FlagSet*);
inline jule::Ptr<_1cdc2ced3_Flag> _1cdca2981_add_flag_common(_1ca6ca81e_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1cdc2992a_Flag> _1cdcabb44_add_flag_common(_1ca6ca81e_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1cdca02db_add_var(_1ca6ca81e_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1cdca94d2_add_var(_1ca6ca81e_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
struct _1ca6ca81e_FlagSet {
	jule::Slice<jule::Trait<_1ca6c8dd3_CommonFlag>> _field__flags = jule::Slice<jule::Trait<_1ca6c8dd3_CommonFlag>>();
	

	_1ca6ca81e_FlagSet(void) = default;

	inline bool operator==(_1ca6ca81e_FlagSet _other) {
		return 
			this->_field__flags == _other._field__flags;
	}

	inline bool operator!=(_1ca6ca81e_FlagSet _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::Ptr<_1e498133b_IR>,jule::Slice<_20ca8ec5b_Log>> static__1c9e5ee83_build(jule::Str, jule::I64);
inline void _1c9e754b5_append_structs(_1e498133b_IR*, jule::Ptr<_1e46a742a_Package>&, jule::Slice<jule::Ptr<_1e43360cb_Struct>>&);
inline jule::Slice<jule::Ptr<_1e43360cb_Struct>> _1c9d8da93_get_all_structures(_1e498133b_IR*);
inline void _1c9e0a390_append_globals(_1e498133b_IR*, jule::Ptr<_1e46a742a_Package>&, jule::Slice<jule::Ptr<_1e46c6eb6_Var>>&);
inline jule::Slice<jule::Ptr<_1e46c6eb6_Var>> _1c9e21a9e_get_all_globals(_1e498133b_IR*);
inline void _1e49740cb_order(_1e498133b_IR*);
struct _1e498133b_IR {
	jule::Str _field_root = jule::Str();
	jule::Slice<jule::Str> _field_passes = jule::Slice<jule::Str>();
	jule::Ptr<_1e46a742a_Package> _field_main = jule::Ptr<_1e46a742a_Package>();
	jule::Slice<jule::Ptr<_1e46a4768_ImportInfo>> _field_used = jule::Slice<jule::Ptr<_1e46a4768_ImportInfo>>();
	_1c9e85e10_OrderedDefines _field_ordered = _1c9e85e10_OrderedDefines();
	

	_1e498133b_IR(void) = default;

	inline bool operator==(_1e498133b_IR _other) {
		return 
			this->_field_root == _other._field_root &&
			this->_field_passes == _other._field_passes &&
			this->_field_main == _other._field_main &&
			this->_field_used == _other._field_used &&
			this->_field_ordered == _other._field_ordered;
	}

	inline bool operator!=(_1e498133b_IR _other) { return !this->operator==(_other); }


};
inline jule::Str _1e4339de3_to_str(_1e43462ea_StructIns*);
inline jule::Bool _1e4355260_equals(jule::Ptr<_1e43462ea_StructIns>, jule::Ptr<_1c97746ee_TypeKind>);
inline jule::Bool _1e4356470_same(_1e43462ea_StructIns*, jule::Ptr<_1e43462ea_StructIns>);
inline jule::Ptr<_1e4380576_Fn> _1e4342758_find_method(_1e43462ea_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_1e434014b_FieldIns> _1e4356b35_find_field(_1e43462ea_StructIns*, jule::Str);
struct _1e43462ea_StructIns {
	jule::Bool _field_checked = jule::Bool();
	jule::Ptr<_1e43360cb_Struct> _field_decl = jule::Ptr<_1e43360cb_Struct>();
	jule::Slice<jule::Ptr<_1c97746ee_TypeKind>> _field_generics = jule::Slice<jule::Ptr<_1c97746ee_TypeKind>>();
	jule::Slice<jule::Ptr<_1e434014b_FieldIns>> _field_fields = jule::Slice<jule::Ptr<_1e434014b_FieldIns>>();
	jule::Slice<jule::Ptr<_1e4380576_Fn>> _field_methods = jule::Slice<jule::Ptr<_1e4380576_Fn>>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Ptr<_1e4385c0d_ReferenceStack> _field_refers = jule::Ptr<_1e4385c0d_ReferenceStack>();
	_1e434a783_Operators _field_operators = _1e434a783_Operators();
	

	_1e43462ea_StructIns(void) = default;

	inline bool operator==(_1e43462ea_StructIns _other) {
		return 
			this->_field_checked == _other._field_checked &&
			this->_field_decl == _other._field_decl &&
			this->_field_generics == _other._field_generics &&
			this->_field_fields == _other._field_fields &&
			this->_field_methods == _other._field_methods &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_refers == _other._field_refers &&
			this->_field_operators == _other._field_operators;
	}

	inline bool operator!=(_1e43462ea_StructIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ca02928e_ObjectDeadCode> static__1ca05a18d_new(jule::Ptr<_1e498133b_IR>&);
inline jule::Bool _1cc580309_is_live(jule::Ptr<_1ca02928e_ObjectDeadCode>, jule::Ptr<_1e4383018_FnIns>&);
inline jule::Bool _1cc584d58_is_live(jule::Ptr<_1ca02928e_ObjectDeadCode>, jule::Ptr<_1e43462ea_StructIns>&);
inline jule::Bool _1cc58c1c3_is_live(jule::Ptr<_1ca02928e_ObjectDeadCode>, jule::Ptr<_1e46c6eb6_Var>&);
inline void _1cc583087_push_live(jule::Ptr<_1ca02928e_ObjectDeadCode>, jule::Ptr<_1e43462ea_StructIns>);
inline void _1cc5889e9_push_live(jule::Ptr<_1ca02928e_ObjectDeadCode>, jule::Ptr<_1e4383018_FnIns>);
inline void _1cc58d1a2_push_live(jule::Ptr<_1ca02928e_ObjectDeadCode>, jule::Ptr<_1e46c6eb6_Var>);
inline void _1ca05a897_set_references_as_live(jule::Ptr<_1ca02928e_ObjectDeadCode>, jule::Ptr<_1e4385c0d_ReferenceStack>&);
inline void _1ca05ab1c_inits(jule::Ptr<_1ca02928e_ObjectDeadCode>, jule::Ptr<_1e46a742a_Package>&);
inline void _1ca05ace8_collect_live(jule::Ptr<_1ca02928e_ObjectDeadCode>);
inline void _1ca05b06d_remove_dead_globals(jule::Ptr<_1ca02928e_ObjectDeadCode>, jule::Slice<jule::Ptr<_1e46c6eb6_Var>>&);
inline void _1ca05b2e3_remove_dead_fns(jule::Ptr<_1ca02928e_ObjectDeadCode>, jule::Slice<jule::Ptr<_1e4380576_Fn>>&);
inline void _1ca05b568_remove_dead_structs(jule::Ptr<_1ca02928e_ObjectDeadCode>, jule::Slice<jule::Ptr<_1e43360cb_Struct>>&);
inline void _1ca05b7dd_remove_deads_file(jule::Ptr<_1ca02928e_ObjectDeadCode>, jule::Ptr<_1c9745c42_SymbolTable>&);
inline void _1ca05ba63_remove_deads_package(jule::Ptr<_1ca02928e_ObjectDeadCode>, jule::Ptr<_1e46a742a_Package>&);
inline void _1ca05bc3e_remove_deads(jule::Ptr<_1ca02928e_ObjectDeadCode>);
inline void _1ca05be1a_elimanate(jule::Ptr<_1ca02928e_ObjectDeadCode>);
struct _1ca02928e_ObjectDeadCode {
	_1ca028ea3_LiveTable _field_live = _1ca028ea3_LiveTable();
	jule::Ptr<_1e498133b_IR> _field_ir = jule::Ptr<_1e498133b_IR>();
	

	_1ca02928e_ObjectDeadCode(void) = default;

	inline bool operator==(_1ca02928e_ObjectDeadCode _other) {
		return 
			this->_field_live == _other._field_live &&
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1ca02928e_ObjectDeadCode _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ca4d7c36_ObjectCoder> static__1ca4e1b1e_new(jule::Ptr<_1e498133b_IR>&, _1ca4e41e8_SerializationInfo);
inline void _1ca4e23b1_write(jule::Ptr<_1ca4d7c36_ObjectCoder>, jule::Str);
inline void _1ca4e2a98_add_indent(jule::Ptr<_1ca4d7c36_ObjectCoder>);
inline void _1ca4e32b3_done_indent(jule::Ptr<_1ca4d7c36_ObjectCoder>);
inline void _1ca4e39cd_indent(jule::Ptr<_1ca4d7c36_ObjectCoder>);
inline jule::I64 _1ca503ec7_find_type_offset(_1ca4d7c36_ObjectCoder*, jule::Ptr<_1e43d8d0a_Trait>, jule::Ptr<_1c97746ee_TypeKind>);
inline void _1ca4e4d53_loc_info(jule::Ptr<_1ca4d7c36_ObjectCoder>, jule::Ptr<_20cd9e6ec_Token>&);
inline void _1ca4e500c_head(jule::Ptr<_1ca4d7c36_ObjectCoder>);
inline void _1ca4d99e6_links(jule::Ptr<_1ca4d7c36_ObjectCoder>);
inline void _1ca50579d_prepare_structures(jule::Ptr<_1ca4d7c36_ObjectCoder>);
inline void _1ca520e06_iter_packages(jule::Ptr<_1ca4d7c36_ObjectCoder>, jule::Fn<void(jule::Ptr<_1e46a742a_Package>&)>);
inline void _1ca521038_build_trait_map(jule::Ptr<_1ca4d7c36_ObjectCoder>);
inline void _1ca52116a_trait_decls(jule::Ptr<_1ca4d7c36_ObjectCoder>);
inline void _1ca52129c_structure_plain_decl(jule::Ptr<_1ca4d7c36_ObjectCoder>, jule::Ptr<_1e43360cb_Struct>&);
inline void _1ca5213ce_structure_plain_decls(jule::Ptr<_1ca4d7c36_ObjectCoder>);
inline void _1ca521511_field_decl(jule::Ptr<_1ca4d7c36_ObjectCoder>, jule::Ptr<_1e434014b_FieldIns>&);
inline void _1ca521643_structure_destructor(jule::Ptr<_1ca4d7c36_ObjectCoder>, jule::Ptr<_1e43462ea_StructIns>&);
inline void _1ca521775_structure_derive_defs_decls(jule::Ptr<_1ca4d7c36_ObjectCoder>, jule::Ptr<_1e43462ea_StructIns>&);
inline void _1ca5218a7_structure_operator_eq(jule::Ptr<_1ca4d7c36_ObjectCoder>, jule::Str&, jule::Ptr<_1e43462ea_StructIns>&);
inline void _1ca5219d9_structure_operator_not_eq(jule::Ptr<_1ca4d7c36_ObjectCoder>, jule::Str&, jule::Ptr<_1e43462ea_StructIns>&);
inline void _1ca521b1b_structure_operator(jule::Ptr<_1ca4d7c36_ObjectCoder>, jule::Str&, jule::Ptr<_1e4383018_FnIns>&, jule::Str);
inline void _1ca521c4d_structure_operators(jule::Ptr<_1ca4d7c36_ObjectCoder>, jule::Ptr<_1e43462ea_StructIns>&);
inline void _1ca521d80_structure_ins_decl(jule::Ptr<_1ca4d7c36_ObjectCoder>, jule::Ptr<_1e43462ea_StructIns>&);
inline void _1ca521eb2_structure_decl(jule::Ptr<_1ca4d7c36_ObjectCoder>, jule::Ptr<_1e43360cb_Struct>&);
inline void _1ca5220e4_structure_decls(jule::Ptr<_1ca4d7c36_ObjectCoder>);
inline void _1ca522226_params_decls(jule::Ptr<_1ca4d7c36_ObjectCoder>, jule::Slice<jule::Ptr<_1e438217c_ParamIns>>&);
inline void _1ca522358_func_head(jule::Ptr<_1ca4d7c36_ObjectCoder>, jule::Ptr<_1e4383018_FnIns>&, jule::Bool);
inline void _1ca52248a_func_decl(jule::Ptr<_1ca4d7c36_ObjectCoder>, jule::Ptr<_1e4380576_Fn>&, jule::Bool);
inline void _1ca5225bc_func_decls(jule::Ptr<_1ca4d7c36_ObjectCoder>);
inline void _1ca5226ee_trait_data_types(jule::Ptr<_1ca4d7c36_ObjectCoder>);
inline void _1ca522831_param_ins(jule::Ptr<_1ca4d7c36_ObjectCoder>, jule::Ptr<_1e438217c_ParamIns>&);
inline void _1ca522963_params_ins(jule::Ptr<_1ca4d7c36_ObjectCoder>, jule::Slice<jule::Ptr<_1e438217c_ParamIns>>&);
inline void _1ca522a95_var_init_expr(jule::Ptr<_1ca4d7c36_ObjectCoder>, jule::Ptr<_1e46c6eb6_Var>&, jule::Fn<void(void)>);
inline void _1ca522bc7_var(jule::Ptr<_1ca4d7c36_ObjectCoder>, jule::Ptr<_1e46c6eb6_Var>);
inline void _1ca522d09_func(jule::Ptr<_1ca4d7c36_ObjectCoder>, jule::Ptr<_1e4380576_Fn>&);
inline void _1ca522e3b_trait_wrappers(jule::Ptr<_1ca4d7c36_ObjectCoder>);
inline void _1ca52306d_trait_datas(jule::Ptr<_1ca4d7c36_ObjectCoder>);
inline void _1ca5231a0_globals(jule::Ptr<_1ca4d7c36_ObjectCoder>);
inline void _1ca5232d2_decls(jule::Ptr<_1ca4d7c36_ObjectCoder>);
inline void _1ca523414_structure_methods(jule::Ptr<_1ca4d7c36_ObjectCoder>, jule::Ptr<_1e43462ea_StructIns>&);
inline void _1ca523645_structure_derive_defs(jule::Ptr<_1ca4d7c36_ObjectCoder>, jule::Ptr<_1e43462ea_StructIns>&);
inline void _1ca5238ba_structure_ostream(jule::Ptr<_1ca4d7c36_ObjectCoder>, jule::Ptr<_1e43462ea_StructIns>&);
inline void _1ca523b40_structure_ins(jule::Ptr<_1ca4d7c36_ObjectCoder>, jule::Ptr<_1e43462ea_StructIns>&);
inline void _1ca523db5_structure(jule::Ptr<_1ca4d7c36_ObjectCoder>, jule::Ptr<_1e43360cb_Struct>&);
inline void _1ca524091_structures(jule::Ptr<_1ca4d7c36_ObjectCoder>);
inline void _1ca52426c_funcs(jule::Ptr<_1ca4d7c36_ObjectCoder>);
inline void _1ca5244e2_push_init(jule::Ptr<_1ca4d7c36_ObjectCoder>, jule::Ptr<_1e46a742a_Package>&);
inline void _1ca5246bd_init_caller(jule::Ptr<_1ca4d7c36_ObjectCoder>);
inline void _1ca524899_end(jule::Ptr<_1ca4d7c36_ObjectCoder>);
inline void _1ca524a75_serialize_head(jule::Ptr<_1ca4d7c36_ObjectCoder>);
inline void _1ca524c51_serialize(jule::Ptr<_1ca4d7c36_ObjectCoder>);
struct _1ca4d7c36_ObjectCoder {
	jule::Str _field_obj = jule::Str();
	jule::Ptr<_1e498133b_IR> _field_ir = jule::Ptr<_1e498133b_IR>();
	_1ca4e41e8_SerializationInfo _field_info = _1ca4e41e8_SerializationInfo();
	jule::Slice<jule::Ptr<_1ca4d7a49_TraitHash>> _field_tmap = jule::Slice<jule::Ptr<_1ca4d7a49_TraitHash>>();
	jule::Str _field_indent_buffer = jule::Str();
	jule::Ptr<_1ca4994ab_ExprCoder> _field_ec = jule::Ptr<_1ca4994ab_ExprCoder>();
	jule::Ptr<_1ca49177d_ScopeCoder> _field_sc = jule::Ptr<_1ca49177d_ScopeCoder>();
	

	_1ca4d7c36_ObjectCoder(void) = default;

	inline bool operator==(_1ca4d7c36_ObjectCoder _other) {
		return 
			this->_field_obj == _other._field_obj &&
			this->_field_ir == _other._field_ir &&
			this->_field_info == _other._field_info &&
			this->_field_tmap == _other._field_tmap &&
			this->_field_indent_buffer == _other._field_indent_buffer &&
			this->_field_ec == _other._field_ec &&
			this->_field_sc == _other._field_sc;
	}

	inline bool operator!=(_1ca4d7c36_ObjectCoder _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::I64,jule::Bool> _1cdc3e9a6_parse_integer(_1ca6cd02a_ArgParser*, jule::Str&, jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>);
inline std::tuple<jule::U64,jule::Bool> _1cdc482d9_parse_integer(_1ca6cd02a_ArgParser*, jule::Str&, jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>);
inline jule::Str _1ca6cd7de_get_data(_1ca6cd02a_ArgParser*);
inline jule::VoidExceptional _1ca6cda64_process_flag(_1ca6cd02a_ArgParser*, jule::Trait<_1ca6c8dd3_CommonFlag>&);
inline jule::VoidExceptional _1ca6cdcd9_single_dash(_1ca6cd02a_ArgParser*, jule::Str&);
inline jule::VoidExceptional _1ca6ce05e_double_dash(_1ca6cd02a_ArgParser*, jule::Str&);
inline jule::VoidExceptional _1ca6ce23a_try_arg(_1ca6cd02a_ArgParser*);
inline jule::VoidExceptional _1ca6ce416_parse(_1ca6cd02a_ArgParser*);
struct _1ca6cd02a_ArgParser {
	_1ca6ca81e_FlagSet _field_set = _1ca6ca81e_FlagSet();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_content = jule::Slice<jule::Str>();
	jule::I64 _field_i = jule::I64();
	

	_1ca6cd02a_ArgParser(void) = default;

	inline bool operator==(_1ca6cd02a_ArgParser _other) {
		return 
			this->_field_set == _other._field_set &&
			this->_field_args == _other._field_args &&
			this->_field_content == _other._field_content &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1ca6cd02a_ArgParser _other) { return !this->operator==(_other); }


};
inline jule::I32 _2253a4107_decode_rune(jule::I32, jule::I32);
inline std::tuple<jule::I32,jule::I32> _2253a439e_encode_rune(jule::I32);
inline jule::Slice<jule::I32> _2253a4932_decode(jule::Slice<jule::U16>);
inline jule::Slice<jule::U16> _2253a4c73_append_rune(jule::Slice<jule::U16>, jule::I32);
inline jule::Slice<jule::U16> _22539180e_utf16_from_str(jule::Str);
inline jule::Str _22538d894_utf16_to_str(jule::Slice<jule::U16>);
inline jule::Str _22539358b_u16_ptr_to_str(jule::U16*);
inline jule::I64 _22520c6d0_get_last_errno(void);
inline jule::U64 _2253a5bec_get_std_handle(jule::U64);
inline jule::I64 _2253a62d5_wstat(jule::U16*, struct stat*);
inline jule::I64 _2253a66c0__wopen(jule::U16*, jule::I64, jule::I64);
inline jule::U32 _2253a68bd_get_last_error(void);
inline jule::U32 _2253a6c0e_get_current_directory(jule::U32, jule::U16*);
inline jule::Bool _2253a724d_delete_file(jule::U16*);
inline jule::Bool _2253a74e5_create_directory(jule::U16*);
inline jule::Bool _2253a778c_remove_directory(jule::U16*);
inline _WDIR* _2253a7a34__wopendir(jule::U16*);
inline struct _wdirent* _2253a7ccb__wreaddir(_WDIR*);
inline jule::I64 _2253a8073__wclosedir(_WDIR*);
inline jule::U32 _2253a8749_get_full_path_name(jule::U16*, jule::U32, jule::U16*, jule::U16**);
inline jule::Bool _2253a8a8a_get_console_mode(jule::U64, jule::I64&);
inline jule::Bool _2253a8dcb_set_console_mode(jule::U64, jule::I64);
inline jule::Bool _2253a9409_write_console(jule::U64, jule::U16*, jule::I64, jule::I64&, void*);
inline jule::Bool _2253a9937_read_console(jule::U64, jule::U16*, jule::I64, jule::I64&, void*);
inline jule::I64 _2253abc69_seek(jule::I64, jule::I64, jule::I64);
inline jule::I64 _2253ac154_read(jule::I64, void*, jule::U64);
inline jule::I64 _2253ac484_close(jule::I64);
inline jule::I64 _2253ac86e_write(jule::I64, void*, jule::U64);
inline void _2253aca7d_exit(jule::I64);
inline std::tuple<jule::I32,jule::I64> _225490666_decode_rune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::I64> _225490be9_decode_last_rune(jule::Slice<jule::U8>);
inline jule::I64 _225491238_rune_len(jule::I32);
inline jule::I64 _225491612_encode_rune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _225491953_append_rune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _225491c94_append_rune_non_ascii(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _2254922d3_rune_count_str(jule::Str);
inline jule::Bool _22549257a_rune_start(jule::U8);
inline jule::I64 _20b9067e9_get_last_os_error_windows(void);
inline jule::Slice<jule::Str> _20b90a633_args(void);
inline jule::Exceptional<jule::Str> _20b90aa73_working_dir(void);
inline jule::Exceptional<jule::Str> _20b90b920___getwd(void);
inline jule::Slice<jule::U8> _20b99524a_stobs(jule::Str&);
inline jule::Bool _20c85315c_is_letter(jule::I32);
inline jule::Bool _20c8ab5c2_is16(jule::Slice<_20c8a9988_Range16>, jule::U16);
inline jule::Bool _20c8ab913_is32(jule::Slice<_20c8a9e50_Range32>, jule::U32);
inline jule::Bool _20c8ac12d_is_excluding_latin(jule::Ptr<_20c8aa3c3_RangeTable>, jule::I32);
inline jule::Str _20b9a0233_repeat(jule::Str, jule::I64);
inline jule::Bool _20c84a011__has_prefix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _20c83c443_has_prefix(jule::Str, jule::Str);
inline jule::Bool _20c843515__has_suffix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _20c82bb3b_has_suffix(jule::Str, jule::Str);
inline jule::I64 _20c82c1ad_find_at(jule::Str, jule::Str, jule::I64);
inline jule::I64 _20c82d566_find_last_at(jule::Str, jule::Str, jule::I64);
inline jule::I64 _20b9a4b2d_find_last(jule::Str, jule::Str);
inline jule::I64 _20c5c4ecd__find_rune(jule::Slice<jule::U8>&, jule::I32);
inline jule::I64 _20c5c5473_find_last_byte(jule::Str, jule::U8);
inline jule::I64 _20c5c594b_find_any(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _20c5c5bb0_split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _20c5c5ce2_contains(jule::Str, jule::Str);
inline jule::Bool _20c82cd4b_contains_any(jule::Str, jule::Str);
inline jule::Str _20c82d0b0_replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline void _20c5c5242__trim_left(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _20c8ad0b8_trim_left(jule::Str, jule::Str);
inline void _20c8b30ac__trim_right(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _20c8b3321_trim(jule::Str, jule::Str);
inline jule::Bool _20b8d3166_is_path_sep(jule::U8);
inline jule::Bool _20b8d3298_is_slash(jule::U8);
inline jule::U8 _20b8d0e44_to_upper(jule::U8);
inline jule::I64 _20b8d1461_volume_name_len(jule::Str);
inline std::tuple<jule::Str,jule::Str,jule::Bool> _20b8d1708_cut_path(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _20b8d19a0_full_path(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _20b8d1cd0___abs(jule::Str);
inline jule::Str _20b8d2088___join(jule::Slice<jule::Str>);
inline jule::Str _20b950953_clean(jule::Str);
inline jule::Str _20b958e9a_from_slash(jule::Str);
inline jule::Str _20b961436_join(jule::Slice<jule::Str>);
inline jule::Str _20b972bd9_ext(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _20b9737ab_abs(jule::Str);
inline jule::Str _20b97533a_base(jule::Str);
inline jule::Str _20b981357_dir(jule::Str);
inline jule::Str _20b9850d6_volume_name(jule::Str);
inline jule::I64 _22520e490_get_last_fs_error(void);
inline jule::Bool _225493229_is_console_handle(jule::U64);
inline jule::I64 _20cad0241_get_last_process_error(void);
inline jule::Slice<wchar_t*> _20cadeedc_ustr_slice_to_wcstr_slice(jule::Slice<jule::Slice<jule::U16>>);
inline jule::Slice<jule::Slice<jule::U16>> _20cae02b7_str_slice_to_ustr_slice(jule::Slice<jule::Str>);
inline jule::I64 _20cae0619_execvp(jule::Str, jule::Slice<jule::Str>);
inline jule::I64 _20cae0a04_execve(jule::Str, jule::Slice<jule::Str>, jule::Slice<jule::Str>);
inline void _20cae1708_exit(jule::I64);
inline jule::Str _20cae1906_executable(void);
inline jule::Bool _20ca83337_is_std_header_path(jule::Str);
inline jule::Bool _20ca834be_is_valid_header_ext(jule::Str);
inline jule::Bool _20ca83766_is_valid_cpp_ext(jule::Str);
inline jule::Str _20ca9019b_logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _20ca90487_arg_to_str(jule::Any);
inline jule::I64 _20ca9072e_find_next_fmt(jule::Str);
inline jule::Str _20ca90ab4_apply_fmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _20ca91aa4_is_top_directive(jule::Str);
inline jule::Bool _20ca934e0_is_windows(jule::Str);
inline jule::Bool _20ca937cb_is_darwin(jule::Str);
inline jule::Bool _20ca93a73_is_linux(jule::Str);
inline jule::Bool _20ca93d5e_is_i386(jule::Str);
inline jule::Bool _20ca94106_is_amd64(jule::Str);
inline jule::Bool _20ca9439d_is_arm64(jule::Str);
inline jule::Bool _20ca94645_is_unix(jule::Str);
inline jule::Bool _20ca94975_is_32bit(jule::Str);
inline jule::Bool _20ca94c1c_is_64bit(jule::Str);
inline void _20cacdc78_init(void);
inline jule::Bool _20cd9ee39_is_unary_op(jule::Str);
inline jule::Bool _20cda0225_is_bin_op(jule::Str);
inline jule::Bool _20cda07a8_is_str(jule::Str);
inline jule::Bool _20cda0a50_is_raw_str(jule::Str);
inline jule::Bool _20cda0ce7_is_rune(jule::Str);
inline jule::Bool _20cda13be_is_bool(jule::Str);
inline jule::Bool _20cda1666_is_float(jule::Str);
inline jule::Bool _20cda190d_is_num(jule::Str);
inline jule::Bool _20cda1e4c_is_ignore_ident(jule::Str);
inline jule::Bool _20cda21e4_is_anon_ident(jule::Str);
inline jule::Bool _20cda2733_is_space(jule::I32);
inline jule::Bool _20cda2aeb_is_letter(jule::I32);
inline jule::Bool _20cda313a_is_decimal(jule::U8);
inline jule::Bool _20cda33d2_is_binary(jule::U8);
inline jule::Bool _20cda3679_is_octal(jule::U8);
inline jule::Bool _20cda3921_is_hex(jule::U8);
inline jule::Bool _20cda3bb8_is_assign(jule::U64);
inline jule::Bool _20cda3e60_is_postfix_op(jule::Str);
inline jule::Bool _20cda4207_is_assign_op(jule::Str);
inline jule::Ptr<_20cda4adc_File> _20cda611b_new_file_set(jule::Str);
inline _20ca8ec5b_Log _20cda7848_make_err(jule::I64, jule::I64, jule::Ptr<_20cda4adc_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _20cda7bcd_bytes_has_prefix(jule::Slice<jule::U8>&, jule::Str);
inline jule::Str _20cda801e_float_fmt_e(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _20cda83a4_float_fmt_p(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _20cda86e5_float_fmt_dotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _20cda8a36_float_fmt_dotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _20cda8d77_float_fmt_dotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _20cda9251_float_num(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _20cda94e8_common_num(jule::Slice<jule::U8>&);
inline jule::Str _20cda9790_binary_num(jule::Slice<jule::U8>&);
inline jule::Bool _20cda9ad1_is_float_fmt_e(jule::U8, jule::I64);
inline jule::Bool _20cda9e22_is_float_fmt_p(jule::U8, jule::I64);
inline jule::Bool _20cdaa263_is_float_fmt_dotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _20cdaa5a4_is_float_fmt_dotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _20cdaa8e5_is_float_fmt_dotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _20cdaacad_octal_num(jule::Slice<jule::U8>&);
inline jule::Str _20cdab055_hex_num(jule::Slice<jule::U8>&);
inline jule::Str _20cdab396_hex_escape(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _20cdab660_big_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _20cdab93a_little_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _20cdabbe3_hex_byte_escape(jule::Slice<jule::U8>&);
inline jule::Str _20cdabe8a_byte_escape(jule::Slice<jule::U8>&);
inline jule::Slice<_20ca8ec5b_Log> _20cdb1984_lex(jule::Ptr<_20cda4adc_File>, jule::I64);
inline jule::I64 _1e5bdd4ed_leading_zeros64(jule::U64);
inline jule::I64 _1e5bde2ac_trailing_zeros(jule::U64);
inline jule::I64 _1e5bdeb2b_trailing_zeros32(jule::U32);
inline jule::I64 _1e5bdedc3_trailing_zeros64(jule::U64);
inline jule::I64 _1e5be533a_len32(jule::U32);
inline jule::I64 _1e5be55d2_len64(jule::U64);
inline std::tuple<jule::U64,jule::U64> _1e5be6292_add64(jule::U64, jule::U64, jule::U64);
inline std::tuple<jule::U64,jule::U64> _1e5be7925_mul64(jule::U64, jule::U64);
inline jule::U32 _1e48ccebe_f32_bits(jule::F32);
inline jule::F32 _1e48cd2aa_f32_from_bits(jule::U32);
inline jule::U64 _1e48cd552_f64_bits(jule::F64);
inline jule::F64 _1e48cd83d_f64_from_bits(jule::U64);
inline std::tuple<jule::F64,jule::I64> _1e48d0b1a_frexp(jule::F64);
inline jule::F64 _1e5bed95e_nan(void);
inline jule::Bool _1e5bedc4a_is_nan(jule::F64);
inline jule::F64 _1e5bedee2_inf(jule::I64);
inline jule::Bool _1e5bee377_is_inf(jule::F64, jule::I64);
inline std::tuple<jule::F64,jule::I64> _1e5bee61e_normalize(jule::F64);
inline jule::F64 _1e5c00ea0_log(jule::F64);
inline jule::F64 _1e5c0190c_abs(jule::F64);
inline std::tuple<jule::F64,jule::F64> _1e5c07b11_modf(jule::F64);
inline jule::F64 _1e5c083a3_log2(jule::F64);
inline jule::Str _1e4746de3_fmt_float(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1e4758124_generic_ftoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1e47673b9_big_ftoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1e5aa9e25_FloatInfo&);
inline jule::Slice<jule::U8> _1e56215d5_fmt_digits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _1e5665e21_DecimalSlice, jule::I64, jule::U8);
inline void _1e565630c_round_shortest(_1e5c2e5d8_Decimal&, jule::U64, jule::I64, _1e5aa9e25_FloatInfo&);
inline jule::Slice<jule::U8> _1e56580bc_fmt_e(jule::Slice<jule::U8>, jule::Bool, _1e5665e21_DecimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _1e56886e6_fmt_f(jule::Slice<jule::U8>, jule::Bool, _1e5665e21_DecimalSlice, jule::I64);
inline jule::Slice<jule::U8> _1e56d1783_fmt_b(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _1e5aa9e25_FloatInfo&);
inline jule::Slice<jule::U8> _1e5aab8c7_fmt_x(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1e5aa9e25_FloatInfo&);
inline jule::I64 _1e5aebcd0_min(jule::I64, jule::I64);
inline jule::I64 _1e4796030_max(jule::I64, jule::I64);
inline jule::U8 _1e56a966d_lower(jule::U8);
inline std::tuple<jule::U64,jule::I64> _1e5aeb98e___parse_uint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _1e47dca05_parse_uint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _1e569a61a_parse_int(jule::Str, jule::I64, jule::I64);
inline std::tuple<jule::F64,jule::Bool> _1e565795c_eisel_lemire64(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1e5ae888c_eisel_lemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _1e5c2bd11_common_prefix_len_ignore_case(jule::Str, jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::Bool> _1e5c2be43_special(jule::Str);
inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _1e5c2c075_read_float(jule::Str);
inline std::tuple<jule::F64,jule::Bool> _1e5c2c54d_atof64exact(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1e5c2c680_atof32exact(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F64,jule::I64> _1e5c2c7b2_atof_hex(jule::Str, _1e5aa9e25_FloatInfo&, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline std::tuple<jule::F32,jule::I64,jule::I64> _1e5c2c8e4_atof32(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _1e5c2ca26_atof64(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _1e5c2cb58_parse_float_prefix(jule::Str, jule::I64);
inline jule::Exceptional<jule::F64> _1e5c2cc8a_parse_float(jule::Str, jule::I64);
inline void _1e5c2d076_ryu_ftoa_fixed32(_1e5665e21_DecimalSlice&, jule::U32, jule::I64, jule::I64);
inline void _1e5c2d1a8_ryu_ftoa_fixed64(_1e5665e21_DecimalSlice&, jule::U64, jule::I64, jule::I64);
inline void _1e5c2d2da_format_decimal(_1e5665e21_DecimalSlice&, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _1e5c2d41c_ryu_ftoa_shortest(_1e5665e21_DecimalSlice&, jule::U64, jule::I64, _1e5aa9e25_FloatInfo&);
inline jule::I64 _1e5c2d54e_mul_by_log2_log10(jule::I64);
inline jule::I64 _1e5c2d681_mul_by_log10_log2(jule::I64);
inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _1e5c2d7b3_compute_bounds(jule::U64, jule::I64, _1e5aa9e25_FloatInfo&);
inline void _1e5c2da05_ryu_digits(_1e5665e21_DecimalSlice&, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _1e5c2db37_ryu_digits32(_1e5665e21_DecimalSlice&, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline std::tuple<jule::U32,jule::I64,jule::Bool> _1e5c2dc69_mult64bit_pow10(jule::U32, jule::I64, jule::I64);
inline std::tuple<jule::U64,jule::I64,jule::Bool> _1e5c2dd9b_mult128bit_pow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _1e5c2decd_divisible_by_pow5(jule::U64, jule::I64);
inline std::tuple<jule::U32,jule::U32> _1e5c2e110_divmod1e9(jule::U64);
inline void _1e5c30144_trim(_1e5c2e5d8_Decimal&);
inline void _1e5c30276_right_shift(_1e5c2e5d8_Decimal&, jule::U64);
inline jule::Bool _1e5c303a8_prefix_is_less_than(jule::Array<jule::U8,800>, jule::I64, jule::Str);
inline void _1e5c304da_left_shift(_1e5c2e5d8_Decimal&, jule::U64);
inline jule::Bool _1e5c3061c_should_round_up(_1e5c2e5d8_Decimal&, jule::I64);
inline jule::Str _1e5c30908_fmt_uint(jule::U64, jule::I64);
inline jule::Str _1e5c30a3a_fmt_int(jule::I64, jule::I64);
inline jule::Str _1e5c30b6c_itoa(jule::I64);
inline jule::Str _1e5c30c9e_small(jule::I64);
inline jule::Bool _1e5c30dd1_is_power_of_two(jule::I64);
inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1e5c31013_fmt_bits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline void _1c9694d39_lshift_unsig(_1c968bb88_Const&, _1c968bb88_Const&);
inline void _1c9695136_rshift_unsig(_1c968bb88_Const&, _1c968bb88_Const&);
inline jule::Str _1e4677eab_real_kind_of(jule::Str);
inline jule::I64 _1e4678253_bitsize_of(jule::Str);
inline jule::Str _1e467853e_int_from_bits(jule::I64);
inline jule::Str _1e46787d6_uint_from_bits(jule::I64);
inline jule::Str _1e4678a7d_float_from_bits(jule::I64);
inline jule::Bool _1e46795d9_check_bit_float(jule::Str, jule::I64);
inline jule::I64 _1e4679881_bitsize_of_float(jule::F64);
inline jule::I64 _1e4679b28_bitsize_of_int(jule::I64);
inline jule::I64 _1e4679dc0_bitsize_of_uint(jule::U64);
inline void _1e467a035_update_target(void);
inline void _1e467a19a_init(void);
inline jule::F64 _1e467d5cc_min(jule::Str);
inline jule::F64 _1e467d8b8_max(jule::Str);
inline jule::Bool _1e467dd2a_is_i8_compatible(jule::Str);
inline jule::Bool _1e467e116_is_i16_compatible(jule::Str);
inline jule::Bool _1e467e3ad_is_i32_compatible(jule::Str);
inline jule::Bool _1e467e699_is_i64_compatible(jule::Str);
inline jule::Bool _1e467e941_is_u8_compatible(jule::Str);
inline jule::Bool _1e467ebd8_is_u16_compatible(jule::Str);
inline jule::Bool _1e467ee80_is_u32_compatible(jule::Str);
inline jule::Bool _1e46802b0_is_u64_compatible(jule::Str);
inline jule::Bool _1e4680557_is_f32_compatible(jule::Str);
inline jule::Bool _1e46807ee_is_f64_compatible(jule::Str);
inline jule::Bool _1e4680b40_types_are_compatible(jule::Str, jule::Str);
inline jule::Bool _1e4680dd7_is_i16_greater(jule::Str);
inline jule::Bool _1e468117e_is_i32_greater(jule::Str);
inline jule::Bool _1e4681426_is_i64_greater(jule::Str);
inline jule::Bool _1e46816bd_is_u16_greater(jule::Str);
inline jule::Bool _1e4681a86_is_u32_greater(jule::Str);
inline jule::Bool _1e4681d2d_is_u64_greater(jule::Str);
inline jule::Bool _1e46820c5_is_f32_greater(jule::Str);
inline jule::Bool _1e468236c_is_f64_greater(jule::Str);
inline jule::Bool _1e46826ad_is_greater(jule::Str, jule::Str);
inline jule::Bool _1e46837d0_is_sig_int(jule::Str);
inline jule::Bool _1e4683abb_is_unsig_int(jule::Str);
inline jule::Bool _1e4683d63_is_int(jule::Str);
inline jule::Bool _1e468414e_is_float(jule::Str);
inline jule::Bool _1e46843e6_is_num(jule::Str);
inline jule::Bool _1c9733acb_is_ascii(jule::I32);
inline jule::I32 _1c973569e_to_rune(jule::Slice<jule::U8>);
inline jule::Str _1c9735946_to_raw_str(jule::Slice<jule::U8>);
inline jule::Str _1c9735c32_to_str(jule::Slice<jule::U8>);
inline std::tuple<jule::U8,jule::Bool> _1c9735ec9_try_btoa_common_esq(jule::Slice<jule::U8>);
inline jule::I32 _1c973631a_rune_from_esq_seq(jule::Slice<jule::U8>, jule::I64&);
inline jule::Slice<jule::U8> _1c973665b_str_esq_seq(jule::Slice<jule::U8>, jule::I64&);
inline jule::I64 _1c98269d2_find_format_prefix(jule::Slice<jule::U8>&, jule::I64&);
inline jule::Slice<jule::U8> _1c9823209_get_format_range(jule::I64&, jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _1c97dca53_fmt_by_default(jule::Any&);
inline jule::Slice<jule::U8> _1c980a642_apply_fmt_by_default(jule::I64&, jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _1c9802d10_apply_fmt(jule::Slice<jule::U8>&, jule::I64&, jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _1c9802e42_format_bytes(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1c9802529_format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e4384a42_parameter_uses_generics(jule::Ptr<_1e4380389_Param>&, jule::Slice<jule::Ptr<_1e436d50e_GenericDecl>>&);
inline jule::Ptr<_1c977858d_TypeSymbol> _1e438744b_build_type(jule::Ptr<_1e436257a_TypeDecl>);
inline jule::Ptr<_1c974bc48_Value> _1e4387737_build_expr(jule::Ptr<_1e43659e0_Expr>);
inline jule::Ptr<_1c97739b7_TypeAlias> _1e43879ce_build_type_alias(jule::Ptr<_1e4376506_TypeAliasDecl>);
inline jule::Ptr<_1e43542c5_Field> _1e4387cba_build_field(jule::Ptr<_1e43794d7_FieldDecl>);
inline jule::Slice<jule::Ptr<_1e43542c5_Field>> _1e4388062_build_fields(jule::Slice<jule::Ptr<_1e43794d7_FieldDecl>>&);
inline jule::Ptr<_1e43360cb_Struct> _1e4388309_build_struct(jule::Ptr<_1e4379d45_StructDecl>);
inline jule::Ptr<_1e4380389_Param> _1e43885a1_build_param(jule::Ptr<_1e4370984_ParamDecl>);
inline jule::Slice<jule::Ptr<_1e4380389_Param>> _1e43888d1_build_params(jule::Slice<jule::Ptr<_1e4370984_ParamDecl>>&);
inline jule::Ptr<_1e438019c_RetType> _1e4388b78_build_ret_type(jule::Ptr<_1e436535d_RetTypeDecl>);
inline jule::Ptr<_1e4380576_Fn> _1e4388e20_build_fn(jule::Ptr<_1e4371ca4_FnDecl>);
inline jule::Slice<jule::Ptr<_1e4380576_Fn>> _1e43891b7_build_methods(jule::Slice<jule::Ptr<_1e4371ca4_FnDecl>>&);
inline jule::Ptr<_1e43d8d0a_Trait> _1e438945e_build_trait(jule::Ptr<_1e437a450_TraitDecl>);
inline jule::Ptr<_1e4392797_EnumItem> _1e4389706_build_enum_item(jule::Ptr<_1e4377d65_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1e4392797_EnumItem>> _1e438999d_build_enum_items(jule::Slice<jule::Ptr<_1e4377d65_EnumItemDecl>>&);
inline jule::Ptr<_1e4456b58_Enum> _1e4389c45_build_enum(jule::Ptr<_1e43789ae_EnumDecl>);
inline jule::Ptr<_1e46c6eb6_Var> _1e438a10d_build_var(jule::Ptr<_1e4372c83_VarDecl>);
inline jule::Slice<jule::Ptr<_1e46c6eb6_Var>> _1e438a3a5_build_vars(jule::Slice<jule::Ptr<_1e4372c83_VarDecl>>);
inline jule::Ptr<_1e5c31431_Impl> _1e438a64c_build_impl(jule::Ptr<_1e437aa5a_Impl>);
inline jule::Ptr<_1e468ce7c_ScopeChecker> _1e45d4bd7_new_scope_checker_base(jule::Ptr<_1e46ac452_Sema>&, jule::Ptr<_1e4383018_FnIns>);
inline jule::Ptr<_1e468ce7c_ScopeChecker> _1e4675151_new_scope_checker(jule::Ptr<_1e46ac452_Sema>&, jule::Ptr<_1e4383018_FnIns>);
inline jule::Ptr<_1e468bbe5_ScopeLabel> _1e4635e14_find_label_parent(jule::Str, jule::Ptr<_1e468ce7c_ScopeChecker>);
inline jule::Bool _1e467688e_model_is_goto_scope(jule::Any&, jule::Ptr<_1e46862c7_Scope>&);
inline jule::Bool _1e46847c0_stmt_is_goto_scope(jule::Any&, jule::Ptr<_1e46862c7_Scope>&);
inline jule::I64 _1e4684902_count_match_type(jule::Ptr<_1e468a023_Match>&, jule::Ptr<_1c97746ee_TypeKind>&);
inline jule::Slice<jule::Ptr<_1c974abc0_Data>> _1e4684a34_get_datas_from_tuple_data(jule::Ptr<_1c974abc0_Data>&);
inline jule::Slice<jule::Any> _1e4684c76_get_expr_models(jule::Any&);
inline jule::Bool _1e4685062_check_mut(jule::Ptr<_1e46ac452_Sema>&, jule::Ptr<_1c974abc0_Data>&, jule::Ptr<_1c974abc0_Data>, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Bool _1e46854e6_check_assign(jule::Ptr<_1e46ac452_Sema>&, jule::Ptr<_1c974abc0_Data>&, jule::Ptr<_1c974abc0_Data>, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Bool _1e46857b0_is_valid_ast_st_for_next_st(jule::Any&);
inline jule::Bool _1e4685a8a_is_valid_st_for_next_st(jule::Any&);
inline jule::Bool _1e4685d43_st_is_def(jule::Any&);
inline jule::Ptr<_1e46c6eb6_Var> _1e46a2788_find_var_in_package(jule::Slice<jule::Ptr<_1c9745c42_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1c97739b7_TypeAlias> _1e46a2bd9_find_type_alias_in_package(jule::Slice<jule::Ptr<_1c9745c42_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1e43360cb_Struct> _1e46a30d5_find_struct_in_package(jule::Slice<jule::Ptr<_1c9745c42_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1e4380576_Fn> _1e46a3514_find_fn_in_package(jule::Slice<jule::Ptr<_1c9745c42_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1e43d8d0a_Trait> _1e46a3855_find_trait_in_package(jule::Slice<jule::Ptr<_1c9745c42_SymbolTable>>&, jule::Str);
inline jule::Ptr<_1e4456b58_Enum> _1e46a3b96_find_enum_in_package(jule::Slice<jule::Ptr<_1c9745c42_SymbolTable>>&, jule::Str);
inline jule::Bool _1e46a96d5_is_std_package(jule::Str, jule::Str);
inline jule::Bool _1e46aa61a_is_valid_model_for_ref(jule::Any&);
inline _20ca8ec5b_Log _1e46aaab0_compiler_err(jule::Ptr<_20cd9e6ec_Token>&, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e46aae01_imp_is_lookupable(jule::Ptr<_1e46a4768_ImportInfo>&, jule::Str);
inline void _1e46ab1ed_append_ret_vars(jule::Slice<jule::Ptr<_1e46c6eb6_Var>>&, jule::Ptr<_1e4383018_FnIns>&);
inline void _1e46ab4a6_append_param_vars(jule::Slice<jule::Ptr<_1e46c6eb6_Var>>&, jule::Ptr<_1e4383018_FnIns>&);
inline void _1e46ab781_append_generic_type_aliases(jule::Slice<jule::Ptr<_1c97739b7_TypeAlias>>&, jule::Ptr<_1e4383018_FnIns>&);
inline jule::Ptr<_1c9745c42_SymbolTable> _1e46abad3_find_file(jule::Slice<jule::Ptr<_1c9745c42_SymbolTable>>&, jule::Ptr<_20cda4adc_File>&);
inline void _1e46abebd_push_suggestion(_20ca8ec5b_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c9735391_trait_has_reference_receiver(jule::Ptr<_1e43d8d0a_Trait>&);
inline jule::Bool _1c971c895_float_assignable(jule::Str, jule::Ptr<_1c974abc0_Data>&);
inline jule::Bool _1c97368ae_sig_assignable(jule::Str, jule::Ptr<_1c974abc0_Data>&);
inline jule::Bool _1c97369e1_unsig_assignable(jule::Str, jule::Ptr<_1c974abc0_Data>&);
inline jule::Bool _1c9736b23_int_assignable(jule::Str, jule::Ptr<_1c974abc0_Data>&);
inline jule::Ptr<_1e43620c4_Directive> _1c976e3db_find_directive(jule::Slice<jule::Ptr<_1e43620c4_Directive>>&, jule::Str);
inline jule::Any _1c976e771_find_builtins_import(jule::Str, jule::Ptr<_1e46a4768_ImportInfo>);
inline void _1c976e980_fit_bitsize(jule::Ptr<_1c974abc0_Data>&);
inline void _1c976ec7c_make_struct_lit_alloc(jule::Ptr<_1c974abc0_Data>&, jule::Ptr<_1e433b004_StructLitExprModel>&);
inline jule::Ptr<_1e46c6eb6_Var> _1c97700bd_build_error_var(jule::Ptr<_1e46862c7_Scope>&, jule::Ptr<_1e43699b1_FnCallExpr>&);
inline jule::Any _1c977040e_find_builtins_sema(jule::Str, jule::Ptr<_1e46ac452_Sema>);
inline jule::Bool _1c97706a6_is_ok_for_shifting(jule::Ptr<_1c974abc0_Data>&);
inline jule::Bool _1c97709d6_is_instanced_struct(jule::Ptr<_1e43462ea_StructIns>);
inline jule::Bool _1c9770cb1_is_ptr_arithmetic_compatible_int(jule::Ptr<_1c974abc0_Data>&);
inline void _1c9771069_apply_cast_kind_model(jule::Ptr<_1c974abc0_Data>&, jule::Ptr<_1c97746ee_TypeKind>&);
inline void _1c9771322_apply_cast_kind(jule::Ptr<_1c974abc0_Data>&, jule::Ptr<_1c97746ee_TypeKind>&);
inline jule::Ptr<_1c974abc0_Data> _1c9771520_build_void_data(void);
inline jule::Str _1c97717d9_check_data_for_integer_indexing(jule::Ptr<_1c974abc0_Data>&);
inline void _1c9771ac5_apply_cast_model_by_enum(jule::Ptr<_1c974abc0_Data>&, jule::Ptr<_1e4456b58_Enum>);
inline void _1c9771d8e_cast_const_by_type(jule::Str&, jule::Ptr<_1c974abc0_Data>&);
inline void _1c977228a_update_model_to_generic_ins(jule::Ptr<_1e4354902_FnCallExprModel>&, jule::Ptr<_1e4383018_FnIns>&);
inline jule::Bool _1c9789cca_kind_uses_generics(jule::Any&, jule::Slice<jule::Ptr<_1e436d50e_GenericDecl>>&);
inline jule::Bool _1c978a160_has_directive(jule::Slice<jule::Ptr<_1e43620c4_Directive>>&, jule::Str);
inline jule::Bool _1c978a407_can_get_ptr(jule::Ptr<_1c974abc0_Data>&);
inline jule::Bool _1c978a6e3_is_valid_for_sptr_type(jule::Ptr<_1c97746ee_TypeKind>&);
inline jule::Bool _1c978a98a_is_valid_for_ref(jule::Ptr<_1c97746ee_TypeKind>&);
inline jule::Bool _1c978ac54_is_builtin_str_convertable(jule::Ptr<_1c97746ee_TypeKind>&);
inline jule::Str _1c978b02e_build_link_path_by_tokens(jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Ptr<_1c9778e51_Prim> _1c978b370_build_prim_type(jule::Str);
inline jule::Ptr<_1e43360cb_Struct> _1c978b617_get_struct_from_kind(jule::Ptr<_1c97746ee_TypeKind>);
inline jule::Bool _1c978b8ae_is_prim(jule::Str);
inline void _1c978bb67_apply_implicit_cast(jule::Ptr<_1c97746ee_TypeKind>&, jule::Ptr<_1c974abc0_Data>&);
inline std::tuple<jule::Ptr<_1c9745c42_SymbolTable>,jule::Slice<_20ca8ec5b_Log>> _1c978e807_build_symbols(jule::Ptr<_1e433079b_Ast>&, jule::Trait<_1e46a2403_Importer>&, jule::Ptr<_1e438ab9c_SymbolBuilder>);
inline std::tuple<jule::Ptr<_1e46a742a_Package>,jule::Slice<_20ca8ec5b_Log>> _1c978ec36___analyze_package(jule::Slice<jule::Ptr<_1e433079b_Ast>>&, jule::Trait<_1e46a2403_Importer>&, jule::I64&);
inline std::tuple<jule::Ptr<_1e46a742a_Package>,jule::Slice<_20ca8ec5b_Log>> _1c9790121_analyze_package(jule::Slice<jule::Ptr<_1e433079b_Ast>>, jule::Trait<_1e46a2403_Importer>, jule::I64);
inline jule::Ptr<_1e4383018_FnIns> _1c9798d2d_find_builtin_fn(jule::Str);
inline jule::Ptr<_1c97739b7_TypeAlias> _1c9799bb9_find_builtin_type_alias(jule::Str);
inline jule::Ptr<_1e43d8d0a_Trait> _1c979b00b_find_builtin_trait(jule::Str);
inline jule::Any _1c97c7c2a_find_builtin_def(jule::Str);
inline jule::Any _1c97977bb_find_builtin_def_std_debug(jule::Str);
inline jule::Any _1c979ee55_find_builtin_def_std_mem(jule::Str);
inline jule::Any _1c97d2185_find_builtin_def_std_jule_integrated(jule::Str);
inline jule::Any _1c980265b_find_package_builtin_def(jule::Str, jule::Str);
inline jule::Ptr<_1c974abc0_Data> _1c980278d_builtin_caller_common_plain(jule::Ptr<_1c974c73d_Eval>&, jule::Ptr<_1e43699b1_FnCallExpr>&, jule::Ptr<_1c974abc0_Data>&);
inline jule::Ptr<_1c974abc0_Data> _1c97b4365_builtin_caller_common(jule::Ptr<_1c974c73d_Eval>&, jule::Ptr<_1e43699b1_FnCallExpr>&, jule::Ptr<_1c974abc0_Data>&);
inline jule::Ptr<_1c974abc0_Data> _1c97b4497_builtin_caller_common_mut(jule::Ptr<_1c974c73d_Eval>&, jule::Ptr<_1e43699b1_FnCallExpr>&, jule::Ptr<_1c974abc0_Data>&);
inline jule::Ptr<_1c974abc0_Data> _1c98034e7_builtin_caller_error(jule::Ptr<_1c974c73d_Eval>&, jule::Ptr<_1e43699b1_FnCallExpr>&);
inline jule::Ptr<_1c974abc0_Data> _1c9803629_builtin_caller_out(jule::Ptr<_1c974c73d_Eval>&, jule::Ptr<_1e43699b1_FnCallExpr>&, jule::Ptr<_1c974abc0_Data>&);
inline jule::Ptr<_1c974abc0_Data> _1c980375b_builtin_caller_outln(jule::Ptr<_1c974c73d_Eval>&, jule::Ptr<_1e43699b1_FnCallExpr>&, jule::Ptr<_1c974abc0_Data>&);
inline jule::Ptr<_1c974abc0_Data> _1c98337e1_builtin_caller_new(jule::Ptr<_1c974c73d_Eval>&, jule::Ptr<_1e43699b1_FnCallExpr>&, jule::Ptr<_1c974abc0_Data>&);
inline jule::Ptr<_1c974abc0_Data> _1c9833b54_builtin_caller_panic(jule::Ptr<_1c974c73d_Eval>&, jule::Ptr<_1e43699b1_FnCallExpr>&, jule::Ptr<_1c974abc0_Data>&);
inline jule::Ptr<_1c974abc0_Data> _1c9833c86_builtin_caller_make(jule::Ptr<_1c974c73d_Eval>&, jule::Ptr<_1e43699b1_FnCallExpr>&, jule::Ptr<_1c974abc0_Data>&);
inline jule::Ptr<_1c974abc0_Data> _1c9833db8_builtin_caller_append(jule::Ptr<_1c974c73d_Eval>&, jule::Ptr<_1e43699b1_FnCallExpr>&, jule::Ptr<_1c974abc0_Data>&);
inline jule::Ptr<_1c974abc0_Data> _1c9833eea_caller_copy_slice(jule::Ptr<_1c974abc0_Data>&, jule::Ptr<_1c974c73d_Eval>&, jule::Ptr<_1e43699b1_FnCallExpr>&, jule::Ptr<_1c974abc0_Data>&);
inline jule::Ptr<_1c974abc0_Data> _1c983412c_caller_copy_str(jule::Ptr<_1c974abc0_Data>&, jule::Ptr<_1c974c73d_Eval>&, jule::Ptr<_1e43699b1_FnCallExpr>&, jule::Ptr<_1c974abc0_Data>&);
inline jule::Ptr<_1c974abc0_Data> _1c983425e_builtin_caller_copy(jule::Ptr<_1c974c73d_Eval>&, jule::Ptr<_1e43699b1_FnCallExpr>&, jule::Ptr<_1c974abc0_Data>&);
inline jule::Ptr<_1c974abc0_Data> _1c9834391_builtin_caller_clone(jule::Ptr<_1c974c73d_Eval>&, jule::Ptr<_1e43699b1_FnCallExpr>&, jule::Ptr<_1c974abc0_Data>&);
inline jule::Ptr<_1c974abc0_Data> _1c98344c3_builtin_caller_assert(jule::Ptr<_1c974c73d_Eval>&, jule::Ptr<_1e43699b1_FnCallExpr>&, jule::Ptr<_1c974abc0_Data>&);
inline jule::Ptr<_1c974abc0_Data> _1c9834605_builtin_caller_std_mem_size_of(jule::Ptr<_1c974c73d_Eval>&, jule::Ptr<_1e43699b1_FnCallExpr>&, jule::Ptr<_1c974abc0_Data>&);
inline jule::Ptr<_1c974abc0_Data> _1c9834737_builtin_caller_std_mem_align_of(jule::Ptr<_1c974c73d_Eval>&, jule::Ptr<_1e43699b1_FnCallExpr>&, jule::Ptr<_1c974abc0_Data>&);
inline jule::Ptr<_1c974abc0_Data> _1c9834869_builtin_caller_std_mem_free(jule::Ptr<_1c974c73d_Eval>&, jule::Ptr<_1e43699b1_FnCallExpr>&, jule::Ptr<_1c974abc0_Data>&);
inline jule::Ptr<_1c974abc0_Data> _1c983499b_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_1c974c73d_Eval>&, jule::Ptr<_1e43699b1_FnCallExpr>&, jule::Ptr<_1c974abc0_Data>&);
inline jule::Ptr<_1c974abc0_Data> _1c9834cba_builtin_caller_std_jule_integrated_emit(jule::Ptr<_1c974c73d_Eval>&, jule::Ptr<_1e43699b1_FnCallExpr>&, jule::Ptr<_1c974abc0_Data>&);
inline jule::Ptr<_1c974abc0_Data> _1c98351c7_builtin_caller_std_debug_out(jule::Ptr<_1c974c73d_Eval>&, jule::Ptr<_1e43699b1_FnCallExpr>&, jule::Ptr<_1c974abc0_Data>&);
inline jule::Ptr<_1c974abc0_Data> _1c98355e5_builtin_caller_std_debug_outln(jule::Ptr<_1c974c73d_Eval>&, jule::Ptr<_1e43699b1_FnCallExpr>&, jule::Ptr<_1c974abc0_Data>&);
inline jule::Bool _20cdd4897_find_module_file(jule::Slice<jule::Ptr<_2252b727e_DirEntry>>&);
inline jule::Str _20cdd703c_find_module_file_deep(jule::Str);
inline jule::Slice<_20ca8ec5b_Log> _20cdd815e_check_module_file(jule::Str);
inline jule::Ptr<_1c9c90214_FileInfo> _1c9cd518d_parse_file(jule::Ptr<_20cda4adc_File>);
inline std::tuple<jule::Ptr<_1e433079b_Ast>,jule::Slice<_20ca8ec5b_Log>> _1c9cd56dd_parse_fileset(jule::Ptr<_20cda4adc_File>);
inline jule::Ptr<_1e43702ad_ScopeTree> _1c9cd6425_new_scope(void);
inline std::tuple<jule::Bool,jule::Bool> _1c9cd6700_is_st(jule::Ptr<_20cd9e6ec_Token>, jule::Ptr<_20cd9e6ec_Token>);
inline jule::Bool _1c9cd6a63_prev_is_incomplete_expr(jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&, jule::I64&);
inline std::tuple<jule::I64,jule::Bool> _1c9cd6e09_next_st_pos(jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&, jule::I64);
inline std::tuple<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>,jule::Bool> _1c9cd724a_skip_st(jule::I64&, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline jule::Slice<jule::Ptr<_1c9cd7547_Stmt>> _1c9cd78dd_split_stmts(jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Ptr<_1c9ce4741_CallData> _1c9ce4aa4_get_call_data(jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _1c9ce4d90_get_block_expr(jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>,jule::Slice<jule::Ptr<_20cd9e6ec_Token>>> _1c9ce5137_split_colon(jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::I64 _1c9ce5423_find_lowest_prec_op(jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Ptr<_1e4367690_IdentExpr> _1c9ce56ba_build_ident_expr(jule::Ptr<_20cd9e6ec_Token>&);
inline std::tuple<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>,jule::I64> _1c9ce5962_get_range_expr_tokens(jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Bool _1c9d01363_check_assign_tokens(jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline _20ca8ec5b_Log _1c9d02672_make_err(jule::I64, jule::I64, jule::Ptr<_20cda4adc_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _1c9d02b17_range(jule::I64&, jule::Str, jule::Str, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>,jule::Slice<jule::Ptr<_20cd9e6ec_Token>>> _1c9d02dae_range_last(jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>>,jule::Slice<_20ca8ec5b_Log>> _1c9d032dd_parts(jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&, jule::U64, jule::Bool);
inline jule::Str _1c9d035a7_get_close_kind_of_brace(jule::Str);
inline _20ca8ec5b_Log _1c9d039a3_compiler_err(jule::Ptr<_20cd9e6ec_Token>&, jule::Str&, jule::Slice<jule::Any>);
inline void _1c9d03d05_push_suggestion(_20ca8ec5b_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1c9d04135_tokstoa(jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&);
inline jule::Ptr<_1e436257a_TypeDecl> _1c9d14288_build_void_type(void);
inline jule::Ptr<_1e436257a_TypeDecl> _1c9d144ca_build_prim_type(jule::Ptr<_20cd9e6ec_Token>);
inline std::tuple<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>,jule::I64> _1c9d1481b_split_map_range(jule::Slice<jule::Ptr<_20cd9e6ec_Token>>&, jule::I64&);
inline std::tuple<jule::Bool,jule::Bool> _1c989d361_check_os(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _1c98b78b9_check_arch(jule::Str);
inline jule::Bool _1c98b7b83_is_pass_file_annotation(jule::Str);
inline void _1c98b8d60_set_os_vars(jule::Slice<jule::Str>&);
inline void _1c98b90b3_set_arch_vars(jule::Slice<jule::Str>&);
inline void _1c98b936b_init_vars(jule::Slice<jule::Str>&, _1c98b8a52_CompileInfo&);
inline jule::Slice<jule::U8> _1e497d448_read_buff(jule::Str);
inline _20ca8ec5b_Log _1e4980428_flat_compiler_err(jule::Str);
inline void _1e49816b0_push_passes(jule::Ptr<_1e46a742a_Package>&, jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _1e4987485_get_all_unique_passes(jule::Ptr<_1e46a742a_Package>&, jule::Slice<jule::Ptr<_1e46a4768_ImportInfo>>);
inline _1c98b8a52_CompileInfo _1e4991aee_build_compile_info(void);
inline void _1ca05c1d4_eliminate_defines(jule::Ptr<_1e498133b_IR>&);
inline void _1ca060c10_eliminate_dead_code_of_scope(jule::Ptr<_1e46862c7_Scope>);
inline void _1ca060e96_eliminate_scope_functions(jule::Slice<jule::Ptr<_1e4380576_Fn>>&);
inline void _1ca0611e9_eliminate_functions_scope_package(jule::Ptr<_1e46a742a_Package>&);
inline void _1ca06146e_eliminate_scope_package(jule::Ptr<_1e46a742a_Package>&);
inline void _1ca06168e_eliminate_scopes(jule::Ptr<_1e498133b_IR>&);
inline jule::Bool _1e3ba82ab_is_std_package(jule::Str, jule::Str);
inline jule::Bool _1e3bc8210_is_constant_valid_conditional_case(jule::Ptr<_1e46866c3_If>&);
inline jule::Bool _1e3bcb06a_is_unreachable_expr(jule::Any&);
inline jule::Bool _1e3bcd963_is_constant_valid_match_case(jule::Ptr<_1e468a9d5_Case>&);
inline jule::Bool _1e3bd574a_is_unreachable_conditional_case(jule::Ptr<_1e46866c3_If>&);
inline jule::Bool _1e3be0eb4_is_unreachable_match_case(jule::Ptr<_1e468a9d5_Case>&);
inline std::tuple<jule::Bool,jule::U64> _1e40d33a6_check_for_bit_shift_opt(jule::Ptr<_1e4347a8d_OperandExprModel>&, jule::Ptr<_1e4347a8d_OperandExprModel>&);
inline void _1e40d594c_push_opt_level(jule::I64);
inline void _1ca037ca3_detect_enabled(void);
inline void _1c9e9a991_throw(jule::Str);
inline jule::U64 _1ca520213_unix(void);
inline jule::U64 _1ca520554_unix_year_to_seconds(jule::U64, jule::Bool&);
inline jule::U64 _1ca5208d9_unix_month_to_seconds(jule::U64, jule::Bool);
inline jule::Bool _1ca496cd3_is_copy_optimizable(jule::Ptr<_1c974abc0_Data>&);
inline jule::Bool _1ca49718a_is_iter_copy_optimizable(jule::Ptr<_1c974abc0_Data>&, jule::Ptr<_1e46c6eb6_Var>&);
inline jule::Str _1ca4a56c6_decompose_common_esq(jule::U8);
inline jule::Str _1ca4a59b2_sbtoa(jule::U8);
inline jule::Str _1ca4a5c59_cstr_bytes(jule::Slice<jule::U8>);
inline jule::Str _1ca4a6045_cstr_lit(jule::Slice<jule::U8>);
inline jule::Str _1ca4a6386_ftoa(jule::F64, jule::I64);
inline jule::Str _1ca4a662d_itoa(jule::I64);
inline jule::Str _1ca4a68c5_utoa(jule::U64);
inline jule::Bool _1ca4a6c05_is_forwarded(jule::Ptr<_1e46862c7_Scope>&);
inline jule::Bool _1ca4a6ebe_is_builtin_call_has_debuginf(jule::Ptr<_1e4354902_FnCallExprModel>&);
inline void _1ca5250b4_iter_files(jule::Ptr<_1e46a742a_Package>&, jule::Fn<void(jule::Ptr<_1c9745c42_SymbolTable>&)>);
inline void _1ca525317_prepare_structure(jule::Ptr<_1e43360cb_Struct>&);
inline jule::Str _1ca5255ae_concat_all_parts(jule::Slice<jule::Ptr<_20cd9e6ec_Token>>);
inline jule::Ptr<_1e43620c4_Directive> _1ca52ce57_find_directive(jule::Slice<jule::Ptr<_1e43620c4_Directive>>&, jule::Str);
inline jule::Bool _1ca52d2dc_has_directive(jule::Slice<jule::Ptr<_1e43620c4_Directive>>&, jule::Str);
inline void _23dbd23ab_print_error_message(jule::Str);
inline void _20ca5b893_help(jule::Slice<jule::Str>&);
inline void _20ca6e07b_version(jule::Slice<jule::Str>&);
inline void _20ca70676_tool_distos(void);
inline void _20ca70e18_tool_distarch(void);
inline void _20ca716aa_tool(jule::Slice<jule::Str>&);
inline void _20ca71e4c_julenv(jule::Slice<jule::Str>&);
inline void _20ca726de_mod(jule::Slice<jule::Str>&);
inline jule::Bool _20ca8249b_process_command(jule::Slice<jule::Str>&);
inline void _20ca58d13_show_info(void);
void entry_point(void);
inline void _20ca602d1_enable_vtp(void);
inline void _20ca7a010_init(void);
inline void _1ca53748e_init(void);
inline jule::Ptr<_2253b69ee_File> _1ca537c31_open_output(jule::Str&);
inline void _1ca539e42_clear_objects(void);
inline void _1ca5425ed_compile_ir(jule::Str, jule::Str);
inline jule::Bool _1ca55162e_is_cpp_source_file(jule::Str);
inline void _1ca53db16_push_comp_cmd_clang(jule::Str&);
inline void _1ca536eb6_push_comp_cmd_gcc(jule::Str&);
inline std::tuple<jule::Str,jule::Str> _1ca548989_gen_compile_cmd(jule::Str, jule::Ptr<_1e498133b_IR>&);
inline jule::Str _1ca536c0d_get_compile_path(void);
inline void _1ca537a66_apply_target_independent_optimizations(jule::Ptr<_1e498133b_IR>&);
inline void _1ca53b5d6_check_compiler_flag(void);
inline void _1ca540365_check_target_arch(jule::Str);
inline void _1ca6ce636_check_target_os(jule::Str);
inline void _1ca6ce768_check_target_flag(jule::Str&);
inline void _1ca6ce89a_check_opt_flag(jule::Str&);
inline void _1ca6cec0d_check_cpp_std_flag(void);
inline jule::Slice<jule::Str> _1ca6ced40_check_flags(jule::Slice<jule::Str>&);
inline void _1ca6cee72_setup_sema_flags(jule::I64&);
inline jule::Ptr<_1e498133b_IR> _1ca6d00a4_build_ir(jule::Slice<jule::Str>&);
inline void _1ca6d01d6_compile_command(jule::Slice<jule::Str>&);


struct _1c982ce7d_ReaderMptrData {
	jule::Exceptional<jule::I64>(*_1c982cd3a_read)(jule::Trait<_1c982ce7d_Reader>, jule::Slice<jule::U8>);
};

struct _1c982d3ac_WriterMptrData {
	jule::Exceptional<jule::I64>(*_1c982d269_write)(jule::Trait<_1c982d3ac_Writer>, jule::Slice<jule::U8>);
};

struct _1c982d984_WriterCloserMptrData {
	jule::Exceptional<jule::I64>(*_1c982d665_write)(jule::Trait<_1c982d984_WriterCloser>, jule::Slice<jule::U8>);
	jule::VoidExceptional(*_1c982d841_close)(jule::Trait<_1c982d984_WriterCloser>);
};

struct _1c982e1d2_StreamMptrData {
	jule::Exceptional<jule::I64>(*_1c982dc81_read)(jule::Trait<_1c982e1d2_Stream>, jule::Slice<jule::U8>);
	jule::Exceptional<jule::I64>(*_1c982e08e_write)(jule::Trait<_1c982e1d2_Stream>, jule::Slice<jule::U8>);
};

struct _1e46a2403_ImporterMptrData {
	void(*_1e46a1303_set_mod_path)(jule::Trait<_1e46a2403_Importer>, jule::Str);
	jule::Str(*_1e46a1567_get_mod_path)(jule::Trait<_1e46a2403_Importer>);
	jule::Str(*_1e46a1875_mod_by_id)(jule::Trait<_1e46a2403_Importer>, jule::I64);
	jule::Ptr<_1e46a4768_ImportInfo>(*_1e46a1b83_get_import)(jule::Trait<_1e46a2403_Importer>, jule::Str);
	std::tuple<jule::Slice<jule::Ptr<_1e433079b_Ast>>,jule::Slice<_20ca8ec5b_Log>>(*_1e46a203a_import_package)(jule::Trait<_1e46a2403_Importer>, jule::Str, jule::Bool);
	void(*_1e46a22b0_imported)(jule::Trait<_1e46a2403_Importer>, jule::Ptr<_1e46a4768_ImportInfo>);
};

struct _1c97742c0_KindMptrData {
	jule::Str(*_1c9773d6e_to_str)(jule::Trait<_1c97742c0_Kind>);
	jule::Bool(*_1c977417c_equals)(jule::Trait<_1c97742c0_Kind>, jule::Ptr<_1c97746ee_TypeKind>);
};

struct _1c978dc35_LookupMptrData {
	jule::Ptr<_1e46a4768_ImportInfo>(*_1c978c1ea_find_package)(jule::Trait<_1c978dc35_Lookup>, jule::Str);
	jule::Ptr<_1e46a4768_ImportInfo>(*_1c978c508_select_package)(jule::Trait<_1c978dc35_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_1e46a4768_ImportInfo>)>);
	jule::Ptr<_1e46c6eb6_Var>(*_1c978c8b0_find_var)(jule::Trait<_1c978dc35_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1c97739b7_TypeAlias>(*_1c978cc67_find_type_alias)(jule::Trait<_1c978dc35_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1e43360cb_Struct>(*_1c978d11e_find_struct)(jule::Trait<_1c978dc35_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1e4380576_Fn>(*_1c978d4c6_find_fn)(jule::Trait<_1c978dc35_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1e43d8d0a_Trait>(*_1c978d7d4_find_trait)(jule::Trait<_1c978dc35_Lookup>, jule::Str);
	jule::Ptr<_1e4456b58_Enum>(*_1c978dae2_find_enum)(jule::Trait<_1c978dc35_Lookup>, jule::Str);
};

struct _1ca6c8dd3_CommonFlagMptrData {
	jule::Str(*_1ca536867_name)(jule::Trait<_1ca6c8dd3_CommonFlag>);
	jule::I32(*_1ca536999_short)(jule::Trait<_1ca6c8dd3_CommonFlag>);
	jule::Str(*_1ca536acb_what)(jule::Trait<_1ca6c8dd3_CommonFlag>);
	void(*_1ca6c8ca1_reset)(jule::Trait<_1ca6c8dd3_CommonFlag>);
};



inline jule::Exceptional<jule::I64> _1c982d665_write_0(jule::Trait<_1c982d984_WriterCloser> _self_, jule::Slice<jule::U8> _1728_buff)  { jule::panic(__JULE_ERROR__INVALID_MEMORY); }
inline jule::VoidExceptional _1c982d841_close_0(jule::Trait<_1c982d984_WriterCloser> _self_)  { jule::panic(__JULE_ERROR__INVALID_MEMORY); }
inline void _1e46a1303_set_mod_path_0(jule::Trait<_1e46a2403_Importer> _self_, jule::Str _1735_path) {
	_1e49b60eb_set_mod_path(_self_.safe_ptr<_1c9e46563_JuleImporter>(), _1735_path);
}
inline jule::Str _1e46a1567_get_mod_path_0(jule::Trait<_1e46a2403_Importer> _self_) {
	return _1e49c4a22_get_mod_path(_self_.safe_ptr<_1c9e46563_JuleImporter>());
}
inline jule::Str _1e46a1875_mod_by_id_0(jule::Trait<_1e46a2403_Importer> _self_, jule::I64 _2528_id) {
	return _1e49c743c_mod_by_id(_self_.safe_ptr<_1c9e46563_JuleImporter>(), _2528_id);
}
inline jule::Ptr<_1e46a4768_ImportInfo> _1e46a1b83_get_import_0(jule::Trait<_1e46a2403_Importer> _self_, jule::Str _3133_path) {
	return _1c9d72505_get_import(_self_.safe_ptr<_1c9e46563_JuleImporter>(), _3133_path);
}
inline std::tuple<jule::Slice<jule::Ptr<_1e433079b_Ast>>,jule::Slice<_20ca8ec5b_Log>> _1e46a203a_import_package_0(jule::Trait<_1e46a2403_Importer> _self_, jule::Str _3737_path, jule::Bool _3748_update_mod) {
	return _1c9dadcb1_import_package(_self_.safe_ptr<_1c9e46563_JuleImporter>(), _3737_path, _3748_update_mod);
}
inline void _1e46a22b0_imported_0(jule::Trait<_1e46a2403_Importer> _self_, jule::Ptr<_1e46a4768_ImportInfo> _4135__0) {
	_1c9e5b9da_imported(_self_.safe_ptr<_1c9e46563_JuleImporter>(), _4135__0);
}
inline jule::Str _1c9773d6e_to_str_0(jule::Trait<_1c97742c0_Kind> _self_) {
	return _1e4339de3_to_str(_self_.safe_ptr<_1e43462ea_StructIns>());
}
inline jule::Bool _1c977417c_equals_0(jule::Trait<_1c97742c0_Kind> _self_, jule::Ptr<_1c97746ee_TypeKind> _4926_other) {
	return _1e4355260_equals(_self_.data.as<_1e43462ea_StructIns>(), _4926_other);
}
inline jule::Str _1c9773d6e_to_str_1(jule::Trait<_1c97742c0_Kind> _self_) {
	return _1e438337b_to_str(_self_.safe_ptr<_1e4383018_FnIns>());
}
inline jule::Bool _1c977417c_equals_1(jule::Trait<_1c97742c0_Kind> _self_, jule::Ptr<_1c97746ee_TypeKind> _4926_other) {
	return _1e4383689_equals(_self_.data.as<_1e4383018_FnIns>(), _4926_other);
}
inline jule::Str _1c9773d6e_to_str_2(jule::Trait<_1c97742c0_Kind> _self_) {
	return _1e43da8de_to_str(_self_.safe_ptr<_1e43d8d0a_Trait>());
}
inline jule::Bool _1c977417c_equals_2(jule::Trait<_1c97742c0_Kind> _self_, jule::Ptr<_1c97746ee_TypeKind> _4926_other) {
	return _1e43dc429_equals(_self_.data.as<_1e43d8d0a_Trait>(), _4926_other);
}
inline jule::Str _1c9773d6e_to_str_3(jule::Trait<_1c97742c0_Kind> _self_) {
	return _1e4456d45_to_str(_self_.safe_ptr<_1e4456b58_Enum>());
}
inline jule::Bool _1c977417c_equals_3(jule::Trait<_1c97742c0_Kind> _self_, jule::Ptr<_1c97746ee_TypeKind> _4926_other) {
	return _1e4456e77_equals(_self_.data.as<_1e4456b58_Enum>(), _4926_other);
}
inline jule::Str _1c9773d6e_to_str_4(jule::Trait<_1c97742c0_Kind> _self_) {
	return _1c9774aa6_to_str(_self_.safe_ptr<_1c97746ee_TypeKind>());
}
inline jule::Bool _1c977417c_equals_4(jule::Trait<_1c97742c0_Kind> _self_, jule::Ptr<_1c97746ee_TypeKind> _4926_other) {
	return _1c9774db4_equals(_self_.data.as<_1c97746ee_TypeKind>(), _4926_other);
}
inline jule::Str _1c9773d6e_to_str_5(jule::Trait<_1c97742c0_Kind> _self_) {
	return _1c97792b4_to_str(_self_.safe_ptr<_1c9778e51_Prim>());
}
inline jule::Bool _1c977417c_equals_5(jule::Trait<_1c97742c0_Kind> _self_, jule::Ptr<_1c97746ee_TypeKind> _4926_other) {
	return _1c97795c2_equals(_self_.data.as<_1c9778e51_Prim>(), _4926_other);
}
inline jule::Str _1c9773d6e_to_str_6(jule::Trait<_1c97742c0_Kind> _self_) {
	return _1c977c7c3_to_str(_self_.safe_ptr<_1c977c460_Sptr>());
}
inline jule::Bool _1c977417c_equals_6(jule::Trait<_1c97742c0_Kind> _self_, jule::Ptr<_1c97746ee_TypeKind> _4926_other) {
	return _1c977cad1_equals(_self_.data.as<_1c977c460_Sptr>(), _4926_other);
}
inline jule::Str _1c9773d6e_to_str_7(jule::Trait<_1c97742c0_Kind> _self_) {
	return _1c977d340_to_str(_self_.safe_ptr<_1c977cdbc_Slc>());
}
inline jule::Bool _1c977417c_equals_7(jule::Trait<_1c97742c0_Kind> _self_, jule::Ptr<_1c97746ee_TypeKind> _4926_other) {
	return _1c977d64d_equals(_self_.data.as<_1c977cdbc_Slc>(), _4926_other);
}
inline jule::Str _1c9773d6e_to_str_8(jule::Trait<_1c97742c0_Kind> _self_) {
	return _1c977dcad_to_str(_self_.safe_ptr<_1c977d8b2_Tuple>());
}
inline jule::Bool _1c977417c_equals_8(jule::Trait<_1c97742c0_Kind> _self_, jule::Ptr<_1c97746ee_TypeKind> _4926_other) {
	return _1c977e0bb_equals(_self_.data.as<_1c977d8b2_Tuple>(), _4926_other);
}
inline jule::Str _1c9773d6e_to_str_9(jule::Trait<_1c97742c0_Kind> _self_) {
	return _1c977e7d6_to_str(_self_.safe_ptr<_1c977e473_Map>());
}
inline jule::Bool _1c977417c_equals_9(jule::Trait<_1c97742c0_Kind> _self_, jule::Ptr<_1c97746ee_TypeKind> _4926_other) {
	return _1c977eae4_equals(_self_.data.as<_1c977e473_Map>(), _4926_other);
}
inline jule::Str _1c9773d6e_to_str_10(jule::Trait<_1c97742c0_Kind> _self_) {
	return _1c97803ca_to_str(_self_.safe_ptr<_1c9780067_Arr>());
}
inline jule::Bool _1c977417c_equals_10(jule::Trait<_1c97742c0_Kind> _self_, jule::Ptr<_1c97746ee_TypeKind> _4926_other) {
	return _1c97806d8_equals(_self_.data.as<_1c9780067_Arr>(), _4926_other);
}
inline jule::Str _1c9773d6e_to_str_11(jule::Trait<_1c97742c0_Kind> _self_) {
	return _1c9780d37_to_str(_self_.safe_ptr<_1c97809c4_Ptr>());
}
inline jule::Bool _1c977417c_equals_11(jule::Trait<_1c97742c0_Kind> _self_, jule::Ptr<_1c97746ee_TypeKind> _4926_other) {
	return _1c9781145_equals(_self_.data.as<_1c97809c4_Ptr>(), _4926_other);
}
inline jule::Str _1c9773d6e_to_str_12(jule::Trait<_1c97742c0_Kind> _self_) {
	return _1ca526802_to_str(_self_.safe_ptr<_1ca526516_CustomType>());
}
inline jule::Bool _1c977417c_equals_12(jule::Trait<_1c97742c0_Kind> _self_, jule::Ptr<_1c97746ee_TypeKind> _4926_other) {
	return _1ca526b10_equals(_self_.data.as<_1ca526516_CustomType>(), _4926_other);
}
inline jule::Ptr<_1e46a4768_ImportInfo> _1c978c1ea_find_package_0(jule::Trait<_1c978dc35_Lookup> _self_, jule::Str _935_ident) {
	return _1e468d400_find_package(_self_.safe_ptr<_1e468ce7c_ScopeChecker>(), _935_ident);
}
inline jule::Ptr<_1e46a4768_ImportInfo> _1c978c508_select_package_0(jule::Trait<_1c978dc35_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1e46a4768_ImportInfo>)> _1337_selector) {
	return _1e468d70d_select_package(_self_.safe_ptr<_1e468ce7c_ScopeChecker>(), _1337_selector);
}
inline jule::Ptr<_1e46c6eb6_Var> _1c978c8b0_find_var_0(jule::Trait<_1c978dc35_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1e468dab5_find_var(_self_.safe_ptr<_1e468ce7c_ScopeChecker>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1c97739b7_TypeAlias> _1c978cc67_find_type_alias_0(jule::Trait<_1c978dc35_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1e468de6c_find_type_alias(_self_.safe_ptr<_1e468ce7c_ScopeChecker>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1e43360cb_Struct> _1c978d11e_find_struct_0(jule::Trait<_1c978dc35_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1e468e324_find_struct(_self_.safe_ptr<_1e468ce7c_ScopeChecker>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1e4380576_Fn> _1c978d4c6_find_fn_0(jule::Trait<_1c978dc35_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1e468e6cb_find_fn(_self_.safe_ptr<_1e468ce7c_ScopeChecker>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1e43d8d0a_Trait> _1c978d7d4_find_trait_0(jule::Trait<_1c978dc35_Lookup> _self_, jule::Str _3333_ident) {
	return _1e468e9d9_find_trait(_self_.safe_ptr<_1e468ce7c_ScopeChecker>(), _3333_ident);
}
inline jule::Ptr<_1e4456b58_Enum> _1c978dae2_find_enum_0(jule::Trait<_1c978dc35_Lookup> _self_, jule::Str _3732_ident) {
	return _1e468ece7_find_enum(_self_.safe_ptr<_1e468ce7c_ScopeChecker>(), _3732_ident);
}
inline jule::Ptr<_1e46a4768_ImportInfo> _1c978c1ea_find_package_1(jule::Trait<_1c978dc35_Lookup> _self_, jule::Str _935_ident) {
	return _1e46a4c74_find_package(_self_.safe_ptr<_1e46a4768_ImportInfo>(), _935_ident);
}
inline jule::Ptr<_1e46a4768_ImportInfo> _1c978c508_select_package_1(jule::Trait<_1c978dc35_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1e46a4768_ImportInfo>)> _1337_selector) {
	return _1e46a5082_select_package(_self_.safe_ptr<_1e46a4768_ImportInfo>(), _1337_selector);
}
inline jule::Ptr<_1e46c6eb6_Var> _1c978c8b0_find_var_1(jule::Trait<_1c978dc35_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1e46a5439_find_var(_self_.safe_ptr<_1e46a4768_ImportInfo>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1c97739b7_TypeAlias> _1c978cc67_find_type_alias_1(jule::Trait<_1c978dc35_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1e46a57e1_find_type_alias(_self_.safe_ptr<_1e46a4768_ImportInfo>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1e43360cb_Struct> _1c978d11e_find_struct_1(jule::Trait<_1c978dc35_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1e46a5b98_find_struct(_self_.safe_ptr<_1e46a4768_ImportInfo>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1e4380576_Fn> _1c978d4c6_find_fn_1(jule::Trait<_1c978dc35_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1e46a6050_find_fn(_self_.safe_ptr<_1e46a4768_ImportInfo>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1e43d8d0a_Trait> _1c978d7d4_find_trait_1(jule::Trait<_1c978dc35_Lookup> _self_, jule::Str _3333_ident) {
	return _1e46a635d_find_trait(_self_.safe_ptr<_1e46a4768_ImportInfo>(), _3333_ident);
}
inline jule::Ptr<_1e4456b58_Enum> _1c978dae2_find_enum_1(jule::Trait<_1c978dc35_Lookup> _self_, jule::Str _3732_ident) {
	return _1e46a666b_find_enum(_self_.safe_ptr<_1e46a4768_ImportInfo>(), _3732_ident);
}
inline jule::Ptr<_1e46a4768_ImportInfo> _1c978c1ea_find_package_2(jule::Trait<_1c978dc35_Lookup> _self_, jule::Str _935_ident) {
	return _1e46a78e2_find_package(_self_.safe_ptr<_1e46a742a_Package>(), _935_ident);
}
inline jule::Ptr<_1e46a4768_ImportInfo> _1c978c508_select_package_2(jule::Trait<_1c978dc35_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1e46a4768_ImportInfo>)> _1337_selector) {
	return _1e46a7c00_select_package(_self_.safe_ptr<_1e46a742a_Package>(), _1337_selector);
}
inline jule::Ptr<_1e46c6eb6_Var> _1c978c8b0_find_var_2(jule::Trait<_1c978dc35_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1e46a80a7_find_var(_self_.safe_ptr<_1e46a742a_Package>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1c97739b7_TypeAlias> _1c978cc67_find_type_alias_2(jule::Trait<_1c978dc35_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1e46a845e_find_type_alias(_self_.safe_ptr<_1e46a742a_Package>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1e43360cb_Struct> _1c978d11e_find_struct_2(jule::Trait<_1c978dc35_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1e46a8816_find_struct(_self_.safe_ptr<_1e46a742a_Package>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1e4380576_Fn> _1c978d4c6_find_fn_2(jule::Trait<_1c978dc35_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1e46a8bbd_find_fn(_self_.safe_ptr<_1e46a742a_Package>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1e43d8d0a_Trait> _1c978d7d4_find_trait_2(jule::Trait<_1c978dc35_Lookup> _self_, jule::Str _3333_ident) {
	return _1e46a8ecb_find_trait(_self_.safe_ptr<_1e46a742a_Package>(), _3333_ident);
}
inline jule::Ptr<_1e4456b58_Enum> _1c978dae2_find_enum_2(jule::Trait<_1c978dc35_Lookup> _self_, jule::Str _3732_ident) {
	return _1e46a92d9_find_enum(_self_.safe_ptr<_1e46a742a_Package>(), _3732_ident);
}
inline jule::Ptr<_1e46a4768_ImportInfo> _1c978c1ea_find_package_3(jule::Trait<_1c978dc35_Lookup> _self_, jule::Str _935_ident) {
	return _1e46ac95d_find_package(_self_.safe_ptr<_1e46ac452_Sema>(), _935_ident);
}
inline jule::Ptr<_1e46a4768_ImportInfo> _1c978c508_select_package_3(jule::Trait<_1c978dc35_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1e46a4768_ImportInfo>)> _1337_selector) {
	return _1e46acc6b_select_package(_self_.safe_ptr<_1e46ac452_Sema>(), _1337_selector);
}
inline jule::Ptr<_1e46c6eb6_Var> _1c978c8b0_find_var_3(jule::Trait<_1c978dc35_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1e46ad123_find_var(_self_.safe_ptr<_1e46ac452_Sema>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1c97739b7_TypeAlias> _1c978cc67_find_type_alias_3(jule::Trait<_1c978dc35_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1e46ad4ca_find_type_alias(_self_.safe_ptr<_1e46ac452_Sema>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1e43360cb_Struct> _1c978d11e_find_struct_3(jule::Trait<_1c978dc35_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1e46ad882_find_struct(_self_.safe_ptr<_1e46ac452_Sema>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1e4380576_Fn> _1c978d4c6_find_fn_3(jule::Trait<_1c978dc35_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1e46adc39_find_fn(_self_.safe_ptr<_1e46ac452_Sema>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1e43d8d0a_Trait> _1c978d7d4_find_trait_3(jule::Trait<_1c978dc35_Lookup> _self_, jule::Str _3333_ident) {
	return _1e46ae047_find_trait(_self_.safe_ptr<_1e46ac452_Sema>(), _3333_ident);
}
inline jule::Ptr<_1e4456b58_Enum> _1c978dae2_find_enum_3(jule::Trait<_1c978dc35_Lookup> _self_, jule::Str _3732_ident) {
	return _1e46ae355_find_enum(_self_.safe_ptr<_1e46ac452_Sema>(), _3732_ident);
}
inline jule::Ptr<_1e46a4768_ImportInfo> _1c978c1ea_find_package_4(jule::Trait<_1c978dc35_Lookup> _self_, jule::Str _935_ident) {
	return _1c974624d_find_package(_self_.safe_ptr<_1c9745c42_SymbolTable>(), _935_ident);
}
inline jule::Ptr<_1e46a4768_ImportInfo> _1c978c508_select_package_4(jule::Trait<_1c978dc35_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1e46a4768_ImportInfo>)> _1337_selector) {
	return _1c974655b_select_package(_self_.safe_ptr<_1c9745c42_SymbolTable>(), _1337_selector);
}
inline jule::Ptr<_1e46c6eb6_Var> _1c978c8b0_find_var_4(jule::Trait<_1c978dc35_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1c9746913_find_var(_self_.safe_ptr<_1c9745c42_SymbolTable>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1c97739b7_TypeAlias> _1c978cc67_find_type_alias_4(jule::Trait<_1c978dc35_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1c9746cba_find_type_alias(_self_.safe_ptr<_1c9745c42_SymbolTable>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1e43360cb_Struct> _1c978d11e_find_struct_4(jule::Trait<_1c978dc35_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1c9747172_find_struct(_self_.safe_ptr<_1c9745c42_SymbolTable>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1e4380576_Fn> _1c978d4c6_find_fn_4(jule::Trait<_1c978dc35_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1c9747529_find_fn(_self_.safe_ptr<_1c9745c42_SymbolTable>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1e43d8d0a_Trait> _1c978d7d4_find_trait_4(jule::Trait<_1c978dc35_Lookup> _self_, jule::Str _3333_ident) {
	return _1c9747837_find_trait(_self_.safe_ptr<_1c9745c42_SymbolTable>(), _3333_ident);
}
inline jule::Ptr<_1e4456b58_Enum> _1c978dae2_find_enum_4(jule::Trait<_1c978dc35_Lookup> _self_, jule::Str _3732_ident) {
	return _1c9747b45_find_enum(_self_.safe_ptr<_1c9745c42_SymbolTable>(), _3732_ident);
}
inline jule::Str _1ca536867_name_0(jule::Trait<_1ca6c8dd3_CommonFlag> _self_) {
	return _1cdc1e502_name(_self_.safe_ptr<_1cdc1e216_Flag>());
}
inline jule::I32 _1ca536999_short_0(jule::Trait<_1ca6c8dd3_CommonFlag> _self_) {
	return _1cdc1e8cb_short(_self_.safe_ptr<_1cdc1e216_Flag>());
}
inline jule::Str _1ca536acb_what_0(jule::Trait<_1ca6c8dd3_CommonFlag> _self_) {
	return _1cdc1e645_what(_self_.safe_ptr<_1cdc1e216_Flag>());
}
inline void _1ca6c8ca1_reset_0(jule::Trait<_1ca6c8dd3_CommonFlag> _self_) {
	_1cdc1e788_reset(_self_.safe_ptr<_1cdc1e216_Flag>());
}
inline jule::Str _1ca536867_name_1(jule::Trait<_1ca6c8dd3_CommonFlag> _self_) {
	return _1cdc22307_name(_self_.safe_ptr<_1cdc22c75_Flag>());
}
inline jule::I32 _1ca536999_short_1(jule::Trait<_1ca6c8dd3_CommonFlag> _self_) {
	return _1cdc23171_short(_self_.safe_ptr<_1cdc22c75_Flag>());
}
inline jule::Str _1ca536acb_what_1(jule::Trait<_1ca6c8dd3_CommonFlag> _self_) {
	return _1cdc22901_what(_self_.safe_ptr<_1cdc22c75_Flag>());
}
inline void _1ca6c8ca1_reset_1(jule::Trait<_1ca6c8dd3_CommonFlag> _self_) {
	_1cdc2303e_reset(_self_.safe_ptr<_1cdc22c75_Flag>());
}
inline jule::Str _1ca536867_name_2(jule::Trait<_1ca6c8dd3_CommonFlag> _self_) {
	return _1cdc258b0_name(_self_.safe_ptr<_1cdc2632d_Flag>());
}
inline jule::I32 _1ca536999_short_2(jule::Trait<_1ca6c8dd3_CommonFlag> _self_) {
	return _1cdc26729_short(_self_.safe_ptr<_1cdc2632d_Flag>());
}
inline jule::Str _1ca536acb_what_2(jule::Trait<_1ca6c8dd3_CommonFlag> _self_) {
	return _1cdc25ea9_what(_self_.safe_ptr<_1cdc2632d_Flag>());
}
inline void _1ca6c8ca1_reset_2(jule::Trait<_1ca6c8dd3_CommonFlag> _self_) {
	_1cdc265e7_reset(_self_.safe_ptr<_1cdc2632d_Flag>());
}
inline jule::Str _1ca536867_name_3(jule::Trait<_1ca6c8dd3_CommonFlag> _self_) {
	return _1cdc28eac_name(_self_.safe_ptr<_1cdc2992a_Flag>());
}
inline jule::I32 _1ca536999_short_3(jule::Trait<_1ca6c8dd3_CommonFlag> _self_) {
	return _1cdc29d26_short(_self_.safe_ptr<_1cdc2992a_Flag>());
}
inline jule::Str _1ca536acb_what_3(jule::Trait<_1ca6c8dd3_CommonFlag> _self_) {
	return _1cdc295a6_what(_self_.safe_ptr<_1cdc2992a_Flag>());
}
inline void _1ca6c8ca1_reset_3(jule::Trait<_1ca6c8dd3_CommonFlag> _self_) {
	_1cdc29be4_reset(_self_.safe_ptr<_1cdc2992a_Flag>());
}
inline jule::Str _1ca536867_name_4(jule::Trait<_1ca6c8dd3_CommonFlag> _self_) {
	return _1cdc2c565_name(_self_.safe_ptr<_1cdc2ced3_Flag>());
}
inline jule::I32 _1ca536999_short_4(jule::Trait<_1ca6c8dd3_CommonFlag> _self_) {
	return _1cdc2d3ce_short(_self_.safe_ptr<_1cdc2ced3_Flag>());
}
inline jule::Str _1ca536acb_what_4(jule::Trait<_1ca6c8dd3_CommonFlag> _self_) {
	return _1cdc2cb5e_what(_self_.safe_ptr<_1cdc2ced3_Flag>());
}
inline void _1ca6c8ca1_reset_4(jule::Trait<_1ca6c8dd3_CommonFlag> _self_) {
	_1cdc2d29c_reset(_self_.safe_ptr<_1cdc2ced3_Flag>());
}


static _1c982d984_WriterCloserMptrData _1c982d984_WriterCloser_mptr_data[] = {
	{
		._1c982d665_write=_1c982d665_write_0,
		._1c982d841_close=_1c982d841_close_0,
	},
};
static _1e46a2403_ImporterMptrData _1e46a2403_Importer_mptr_data[] = {
	{
		._1e46a1303_set_mod_path=_1e46a1303_set_mod_path_0,
		._1e46a1567_get_mod_path=_1e46a1567_get_mod_path_0,
		._1e46a1875_mod_by_id=_1e46a1875_mod_by_id_0,
		._1e46a1b83_get_import=_1e46a1b83_get_import_0,
		._1e46a203a_import_package=_1e46a203a_import_package_0,
		._1e46a22b0_imported=_1e46a22b0_imported_0,
	},
};
static _1c97742c0_KindMptrData _1c97742c0_Kind_mptr_data[] = {
	{
		._1c9773d6e_to_str=_1c9773d6e_to_str_0,
		._1c977417c_equals=_1c977417c_equals_0,
	},
	{
		._1c9773d6e_to_str=_1c9773d6e_to_str_1,
		._1c977417c_equals=_1c977417c_equals_1,
	},
	{
		._1c9773d6e_to_str=_1c9773d6e_to_str_2,
		._1c977417c_equals=_1c977417c_equals_2,
	},
	{
		._1c9773d6e_to_str=_1c9773d6e_to_str_3,
		._1c977417c_equals=_1c977417c_equals_3,
	},
	{
		._1c9773d6e_to_str=_1c9773d6e_to_str_4,
		._1c977417c_equals=_1c977417c_equals_4,
	},
	{
		._1c9773d6e_to_str=_1c9773d6e_to_str_5,
		._1c977417c_equals=_1c977417c_equals_5,
	},
	{
		._1c9773d6e_to_str=_1c9773d6e_to_str_6,
		._1c977417c_equals=_1c977417c_equals_6,
	},
	{
		._1c9773d6e_to_str=_1c9773d6e_to_str_7,
		._1c977417c_equals=_1c977417c_equals_7,
	},
	{
		._1c9773d6e_to_str=_1c9773d6e_to_str_8,
		._1c977417c_equals=_1c977417c_equals_8,
	},
	{
		._1c9773d6e_to_str=_1c9773d6e_to_str_9,
		._1c977417c_equals=_1c977417c_equals_9,
	},
	{
		._1c9773d6e_to_str=_1c9773d6e_to_str_10,
		._1c977417c_equals=_1c977417c_equals_10,
	},
	{
		._1c9773d6e_to_str=_1c9773d6e_to_str_11,
		._1c977417c_equals=_1c977417c_equals_11,
	},
	{
		._1c9773d6e_to_str=_1c9773d6e_to_str_12,
		._1c977417c_equals=_1c977417c_equals_12,
	},
};
static _1c978dc35_LookupMptrData _1c978dc35_Lookup_mptr_data[] = {
	{
		._1c978c1ea_find_package=_1c978c1ea_find_package_0,
		._1c978c508_select_package=_1c978c508_select_package_0,
		._1c978c8b0_find_var=_1c978c8b0_find_var_0,
		._1c978cc67_find_type_alias=_1c978cc67_find_type_alias_0,
		._1c978d11e_find_struct=_1c978d11e_find_struct_0,
		._1c978d4c6_find_fn=_1c978d4c6_find_fn_0,
		._1c978d7d4_find_trait=_1c978d7d4_find_trait_0,
		._1c978dae2_find_enum=_1c978dae2_find_enum_0,
	},
	{
		._1c978c1ea_find_package=_1c978c1ea_find_package_1,
		._1c978c508_select_package=_1c978c508_select_package_1,
		._1c978c8b0_find_var=_1c978c8b0_find_var_1,
		._1c978cc67_find_type_alias=_1c978cc67_find_type_alias_1,
		._1c978d11e_find_struct=_1c978d11e_find_struct_1,
		._1c978d4c6_find_fn=_1c978d4c6_find_fn_1,
		._1c978d7d4_find_trait=_1c978d7d4_find_trait_1,
		._1c978dae2_find_enum=_1c978dae2_find_enum_1,
	},
	{
		._1c978c1ea_find_package=_1c978c1ea_find_package_2,
		._1c978c508_select_package=_1c978c508_select_package_2,
		._1c978c8b0_find_var=_1c978c8b0_find_var_2,
		._1c978cc67_find_type_alias=_1c978cc67_find_type_alias_2,
		._1c978d11e_find_struct=_1c978d11e_find_struct_2,
		._1c978d4c6_find_fn=_1c978d4c6_find_fn_2,
		._1c978d7d4_find_trait=_1c978d7d4_find_trait_2,
		._1c978dae2_find_enum=_1c978dae2_find_enum_2,
	},
	{
		._1c978c1ea_find_package=_1c978c1ea_find_package_3,
		._1c978c508_select_package=_1c978c508_select_package_3,
		._1c978c8b0_find_var=_1c978c8b0_find_var_3,
		._1c978cc67_find_type_alias=_1c978cc67_find_type_alias_3,
		._1c978d11e_find_struct=_1c978d11e_find_struct_3,
		._1c978d4c6_find_fn=_1c978d4c6_find_fn_3,
		._1c978d7d4_find_trait=_1c978d7d4_find_trait_3,
		._1c978dae2_find_enum=_1c978dae2_find_enum_3,
	},
	{
		._1c978c1ea_find_package=_1c978c1ea_find_package_4,
		._1c978c508_select_package=_1c978c508_select_package_4,
		._1c978c8b0_find_var=_1c978c8b0_find_var_4,
		._1c978cc67_find_type_alias=_1c978cc67_find_type_alias_4,
		._1c978d11e_find_struct=_1c978d11e_find_struct_4,
		._1c978d4c6_find_fn=_1c978d4c6_find_fn_4,
		._1c978d7d4_find_trait=_1c978d7d4_find_trait_4,
		._1c978dae2_find_enum=_1c978dae2_find_enum_4,
	},
};
static _1ca6c8dd3_CommonFlagMptrData _1ca6c8dd3_CommonFlag_mptr_data[] = {
	{
		._1ca536867_name=_1ca536867_name_0,
		._1ca536999_short=_1ca536999_short_0,
		._1ca536acb_what=_1ca536acb_what_0,
		._1ca6c8ca1_reset=_1ca6c8ca1_reset_0,
	},
	{
		._1ca536867_name=_1ca536867_name_1,
		._1ca536999_short=_1ca536999_short_1,
		._1ca536acb_what=_1ca536acb_what_1,
		._1ca6c8ca1_reset=_1ca6c8ca1_reset_1,
	},
	{
		._1ca536867_name=_1ca536867_name_2,
		._1ca536999_short=_1ca536999_short_2,
		._1ca536acb_what=_1ca536acb_what_2,
		._1ca6c8ca1_reset=_1ca6c8ca1_reset_2,
	},
	{
		._1ca536867_name=_1ca536867_name_3,
		._1ca536999_short=_1ca536999_short_3,
		._1ca536acb_what=_1ca536acb_what_3,
		._1ca6c8ca1_reset=_1ca6c8ca1_reset_3,
	},
	{
		._1ca536867_name=_1ca536867_name_4,
		._1ca536999_short=_1ca536999_short_4,
		._1ca536acb_what=_1ca536acb_what_4,
		._1ca6c8ca1_reset=_1ca6c8ca1_reset_4,
	},
};


jule::Str _1ca54767a_OUT_DIR = jule::Str("dist", 4);
jule::Str _1ca549193_OUT_NAME = jule::Str("ir.cpp", 6);
jule::Str _1ca5529e8_OUT = jule::Str();
jule::Str _23db43163_COMPILER = jule::Str();
jule::Str _23db4331c_COMPILER_PATH = jule::Str();
jule::Str _23db434c6_CPP_STD = jule::Str("cpp17", 5);
jule::Bool _23db43718_SHADOWING = false;
jule::Bool _23db4396b_TRANSPILATION = false;
jule::Bool _23db43bbe_TEST = false;
jule::Bool _23db43e22_RC = true;
jule::Bool _23db4420d_SAFETY = true;
jule::Bool _23db44461_PRODUCTION = false;
jule::Ptr<_20c8aa3c3_RangeTable> _20c854e1c__L = jule::new_ptr<_20c8aa3c3_RangeTable>(_20c8aa3c3_RangeTable{._field_r16=jule::Slice<_20c8a9988_Range16>::make({_20c8a9988_Range16{._field_lo=65LLU, ._field_hi=90LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=97LLU, ._field_hi=122LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=170LLU, ._field_hi=181LLU, ._field_stride=11LLU},_20c8a9988_Range16{._field_lo=186LLU, ._field_hi=192LLU, ._field_stride=6LLU},_20c8a9988_Range16{._field_lo=193LLU, ._field_hi=214LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=216LLU, ._field_hi=246LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=248LLU, ._field_hi=705LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=710LLU, ._field_hi=721LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=736LLU, ._field_hi=740LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=748LLU, ._field_hi=750LLU, ._field_stride=2LLU},_20c8a9988_Range16{._field_lo=880LLU, ._field_hi=884LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=886LLU, ._field_hi=887LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=890LLU, ._field_hi=893LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=895LLU, ._field_hi=902LLU, ._field_stride=7LLU},_20c8a9988_Range16{._field_lo=904LLU, ._field_hi=906LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=908LLU, ._field_hi=910LLU, ._field_stride=2LLU},_20c8a9988_Range16{._field_lo=911LLU, ._field_hi=929LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=931LLU, ._field_hi=1013LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=1015LLU, ._field_hi=1153LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=1162LLU, ._field_hi=1327LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=1329LLU, ._field_hi=1366LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=1369LLU, ._field_hi=1376LLU, ._field_stride=7LLU},_20c8a9988_Range16{._field_lo=1377LLU, ._field_hi=1416LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=1488LLU, ._field_hi=1514LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=1519LLU, ._field_hi=1522LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=1568LLU, ._field_hi=1610LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=1646LLU, ._field_hi=1647LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=1649LLU, ._field_hi=1747LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=1749LLU, ._field_hi=1765LLU, ._field_stride=16LLU},_20c8a9988_Range16{._field_lo=1766LLU, ._field_hi=1774LLU, ._field_stride=8LLU},_20c8a9988_Range16{._field_lo=1775LLU, ._field_hi=1786LLU, ._field_stride=11LLU},_20c8a9988_Range16{._field_lo=1787LLU, ._field_hi=1788LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=1791LLU, ._field_hi=1808LLU, ._field_stride=17LLU},_20c8a9988_Range16{._field_lo=1810LLU, ._field_hi=1839LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=1869LLU, ._field_hi=1957LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=1969LLU, ._field_hi=1994LLU, ._field_stride=25LLU},_20c8a9988_Range16{._field_lo=1995LLU, ._field_hi=2026LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2036LLU, ._field_hi=2037LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2042LLU, ._field_hi=2048LLU, ._field_stride=6LLU},_20c8a9988_Range16{._field_lo=2049LLU, ._field_hi=2069LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2074LLU, ._field_hi=2084LLU, ._field_stride=10LLU},_20c8a9988_Range16{._field_lo=2088LLU, ._field_hi=2112LLU, ._field_stride=24LLU},_20c8a9988_Range16{._field_lo=2113LLU, ._field_hi=2136LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2144LLU, ._field_hi=2154LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2160LLU, ._field_hi=2183LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2185LLU, ._field_hi=2190LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2208LLU, ._field_hi=2249LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2308LLU, ._field_hi=2361LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2365LLU, ._field_hi=2384LLU, ._field_stride=19LLU},_20c8a9988_Range16{._field_lo=2392LLU, ._field_hi=2401LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2417LLU, ._field_hi=2432LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2437LLU, ._field_hi=2444LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2447LLU, ._field_hi=2448LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2451LLU, ._field_hi=2472LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2474LLU, ._field_hi=2480LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2482LLU, ._field_hi=2486LLU, ._field_stride=4LLU},_20c8a9988_Range16{._field_lo=2487LLU, ._field_hi=2489LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2493LLU, ._field_hi=2510LLU, ._field_stride=17LLU},_20c8a9988_Range16{._field_lo=2524LLU, ._field_hi=2525LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2527LLU, ._field_hi=2529LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2544LLU, ._field_hi=2545LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2556LLU, ._field_hi=2565LLU, ._field_stride=9LLU},_20c8a9988_Range16{._field_lo=2566LLU, ._field_hi=2570LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2575LLU, ._field_hi=2576LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2579LLU, ._field_hi=2600LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2602LLU, ._field_hi=2608LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2610LLU, ._field_hi=2611LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2613LLU, ._field_hi=2614LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2616LLU, ._field_hi=2617LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2649LLU, ._field_hi=2652LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2654LLU, ._field_hi=2674LLU, ._field_stride=20LLU},_20c8a9988_Range16{._field_lo=2675LLU, ._field_hi=2676LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2693LLU, ._field_hi=2701LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2703LLU, ._field_hi=2705LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2707LLU, ._field_hi=2728LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2730LLU, ._field_hi=2736LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2738LLU, ._field_hi=2739LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2741LLU, ._field_hi=2745LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2749LLU, ._field_hi=2768LLU, ._field_stride=19LLU},_20c8a9988_Range16{._field_lo=2784LLU, ._field_hi=2785LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2809LLU, ._field_hi=2821LLU, ._field_stride=12LLU},_20c8a9988_Range16{._field_lo=2822LLU, ._field_hi=2828LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2831LLU, ._field_hi=2832LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2835LLU, ._field_hi=2856LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2858LLU, ._field_hi=2864LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2866LLU, ._field_hi=2867LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2869LLU, ._field_hi=2873LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2877LLU, ._field_hi=2908LLU, ._field_stride=31LLU},_20c8a9988_Range16{._field_lo=2909LLU, ._field_hi=2911LLU, ._field_stride=2LLU},_20c8a9988_Range16{._field_lo=2912LLU, ._field_hi=2913LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2929LLU, ._field_hi=2947LLU, ._field_stride=18LLU},_20c8a9988_Range16{._field_lo=2949LLU, ._field_hi=2954LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2958LLU, ._field_hi=2960LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2962LLU, ._field_hi=2965LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2969LLU, ._field_hi=2970LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2972LLU, ._field_hi=2974LLU, ._field_stride=2LLU},_20c8a9988_Range16{._field_lo=2975LLU, ._field_hi=2979LLU, ._field_stride=4LLU},_20c8a9988_Range16{._field_lo=2980LLU, ._field_hi=2984LLU, ._field_stride=4LLU},_20c8a9988_Range16{._field_lo=2985LLU, ._field_hi=2986LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=2990LLU, ._field_hi=3001LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=3024LLU, ._field_hi=3077LLU, ._field_stride=53LLU},_20c8a9988_Range16{._field_lo=3078LLU, ._field_hi=3084LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=3086LLU, ._field_hi=3088LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=3090LLU, ._field_hi=3112LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=3114LLU, ._field_hi=3129LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=3133LLU, ._field_hi=3160LLU, ._field_stride=27LLU},_20c8a9988_Range16{._field_lo=3161LLU, ._field_hi=3162LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=3165LLU, ._field_hi=3168LLU, ._field_stride=3LLU},_20c8a9988_Range16{._field_lo=3169LLU, ._field_hi=3200LLU, ._field_stride=31LLU},_20c8a9988_Range16{._field_lo=3205LLU, ._field_hi=3212LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=3214LLU, ._field_hi=3216LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=3218LLU, ._field_hi=3240LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=3242LLU, ._field_hi=3251LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=3253LLU, ._field_hi=3257LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=3261LLU, ._field_hi=3293LLU, ._field_stride=32LLU},_20c8a9988_Range16{._field_lo=3294LLU, ._field_hi=3296LLU, ._field_stride=2LLU},_20c8a9988_Range16{._field_lo=3297LLU, ._field_hi=3313LLU, ._field_stride=16LLU},_20c8a9988_Range16{._field_lo=3314LLU, ._field_hi=3332LLU, ._field_stride=18LLU},_20c8a9988_Range16{._field_lo=3333LLU, ._field_hi=3340LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=3342LLU, ._field_hi=3344LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=3346LLU, ._field_hi=3386LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=3389LLU, ._field_hi=3406LLU, ._field_stride=17LLU},_20c8a9988_Range16{._field_lo=3412LLU, ._field_hi=3414LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=3423LLU, ._field_hi=3425LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=3450LLU, ._field_hi=3455LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=3461LLU, ._field_hi=3478LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=3482LLU, ._field_hi=3505LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=3507LLU, ._field_hi=3515LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=3517LLU, ._field_hi=3520LLU, ._field_stride=3LLU},_20c8a9988_Range16{._field_lo=3521LLU, ._field_hi=3526LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=3585LLU, ._field_hi=3632LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=3634LLU, ._field_hi=3635LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=3648LLU, ._field_hi=3654LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=3713LLU, ._field_hi=3714LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=3716LLU, ._field_hi=3718LLU, ._field_stride=2LLU},_20c8a9988_Range16{._field_lo=3719LLU, ._field_hi=3722LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=3724LLU, ._field_hi=3747LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=3749LLU, ._field_hi=3751LLU, ._field_stride=2LLU},_20c8a9988_Range16{._field_lo=3752LLU, ._field_hi=3760LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=3762LLU, ._field_hi=3763LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=3773LLU, ._field_hi=3776LLU, ._field_stride=3LLU},_20c8a9988_Range16{._field_lo=3777LLU, ._field_hi=3780LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=3782LLU, ._field_hi=3804LLU, ._field_stride=22LLU},_20c8a9988_Range16{._field_lo=3805LLU, ._field_hi=3807LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=3840LLU, ._field_hi=3904LLU, ._field_stride=64LLU},_20c8a9988_Range16{._field_lo=3905LLU, ._field_hi=3911LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=3913LLU, ._field_hi=3948LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=3976LLU, ._field_hi=3980LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=4096LLU, ._field_hi=4138LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=4159LLU, ._field_hi=4176LLU, ._field_stride=17LLU},_20c8a9988_Range16{._field_lo=4177LLU, ._field_hi=4181LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=4186LLU, ._field_hi=4189LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=4193LLU, ._field_hi=4197LLU, ._field_stride=4LLU},_20c8a9988_Range16{._field_lo=4198LLU, ._field_hi=4206LLU, ._field_stride=8LLU},_20c8a9988_Range16{._field_lo=4207LLU, ._field_hi=4208LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=4213LLU, ._field_hi=4225LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=4238LLU, ._field_hi=4256LLU, ._field_stride=18LLU},_20c8a9988_Range16{._field_lo=4257LLU, ._field_hi=4293LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=4295LLU, ._field_hi=4301LLU, ._field_stride=6LLU},_20c8a9988_Range16{._field_lo=4304LLU, ._field_hi=4346LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=4348LLU, ._field_hi=4680LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=4682LLU, ._field_hi=4685LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=4688LLU, ._field_hi=4694LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=4696LLU, ._field_hi=4698LLU, ._field_stride=2LLU},_20c8a9988_Range16{._field_lo=4699LLU, ._field_hi=4701LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=4704LLU, ._field_hi=4744LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=4746LLU, ._field_hi=4749LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=4752LLU, ._field_hi=4784LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=4786LLU, ._field_hi=4789LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=4792LLU, ._field_hi=4798LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=4800LLU, ._field_hi=4802LLU, ._field_stride=2LLU},_20c8a9988_Range16{._field_lo=4803LLU, ._field_hi=4805LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=4808LLU, ._field_hi=4822LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=4824LLU, ._field_hi=4880LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=4882LLU, ._field_hi=4885LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=4888LLU, ._field_hi=4954LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=4992LLU, ._field_hi=5007LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=5024LLU, ._field_hi=5109LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=5112LLU, ._field_hi=5117LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=5121LLU, ._field_hi=5740LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=5743LLU, ._field_hi=5759LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=5761LLU, ._field_hi=5786LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=5792LLU, ._field_hi=5866LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=5873LLU, ._field_hi=5880LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=5888LLU, ._field_hi=5905LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=5919LLU, ._field_hi=5937LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=5952LLU, ._field_hi=5969LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=5984LLU, ._field_hi=5996LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=5998LLU, ._field_hi=6000LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=6016LLU, ._field_hi=6067LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=6103LLU, ._field_hi=6108LLU, ._field_stride=5LLU},_20c8a9988_Range16{._field_lo=6176LLU, ._field_hi=6264LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=6272LLU, ._field_hi=6276LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=6279LLU, ._field_hi=6312LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=6314LLU, ._field_hi=6320LLU, ._field_stride=6LLU},_20c8a9988_Range16{._field_lo=6321LLU, ._field_hi=6389LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=6400LLU, ._field_hi=6430LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=6480LLU, ._field_hi=6509LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=6512LLU, ._field_hi=6516LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=6528LLU, ._field_hi=6571LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=6576LLU, ._field_hi=6601LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=6656LLU, ._field_hi=6678LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=6688LLU, ._field_hi=6740LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=6823LLU, ._field_hi=6917LLU, ._field_stride=94LLU},_20c8a9988_Range16{._field_lo=6918LLU, ._field_hi=6963LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=6981LLU, ._field_hi=6988LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=7043LLU, ._field_hi=7072LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=7086LLU, ._field_hi=7087LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=7098LLU, ._field_hi=7141LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=7168LLU, ._field_hi=7203LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=7245LLU, ._field_hi=7247LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=7258LLU, ._field_hi=7293LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=7296LLU, ._field_hi=7304LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=7312LLU, ._field_hi=7354LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=7357LLU, ._field_hi=7359LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=7401LLU, ._field_hi=7404LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=7406LLU, ._field_hi=7411LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=7413LLU, ._field_hi=7414LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=7418LLU, ._field_hi=7424LLU, ._field_stride=6LLU},_20c8a9988_Range16{._field_lo=7425LLU, ._field_hi=7615LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=7680LLU, ._field_hi=7957LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=7960LLU, ._field_hi=7965LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=7968LLU, ._field_hi=8005LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=8008LLU, ._field_hi=8013LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=8016LLU, ._field_hi=8023LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=8025LLU, ._field_hi=8031LLU, ._field_stride=2LLU},_20c8a9988_Range16{._field_lo=8032LLU, ._field_hi=8061LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=8064LLU, ._field_hi=8116LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=8118LLU, ._field_hi=8124LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=8126LLU, ._field_hi=8130LLU, ._field_stride=4LLU},_20c8a9988_Range16{._field_lo=8131LLU, ._field_hi=8132LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=8134LLU, ._field_hi=8140LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=8144LLU, ._field_hi=8147LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=8150LLU, ._field_hi=8155LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=8160LLU, ._field_hi=8172LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=8178LLU, ._field_hi=8180LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=8182LLU, ._field_hi=8188LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=8305LLU, ._field_hi=8319LLU, ._field_stride=14LLU},_20c8a9988_Range16{._field_lo=8336LLU, ._field_hi=8348LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=8450LLU, ._field_hi=8455LLU, ._field_stride=5LLU},_20c8a9988_Range16{._field_lo=8458LLU, ._field_hi=8467LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=8469LLU, ._field_hi=8473LLU, ._field_stride=4LLU},_20c8a9988_Range16{._field_lo=8474LLU, ._field_hi=8477LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=8484LLU, ._field_hi=8490LLU, ._field_stride=2LLU},_20c8a9988_Range16{._field_lo=8491LLU, ._field_hi=8493LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=8495LLU, ._field_hi=8505LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=8508LLU, ._field_hi=8511LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=8517LLU, ._field_hi=8521LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=8526LLU, ._field_hi=8579LLU, ._field_stride=53LLU},_20c8a9988_Range16{._field_lo=8580LLU, ._field_hi=11264LLU, ._field_stride=2684LLU},_20c8a9988_Range16{._field_lo=11265LLU, ._field_hi=11492LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=11499LLU, ._field_hi=11502LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=11506LLU, ._field_hi=11507LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=11520LLU, ._field_hi=11557LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=11559LLU, ._field_hi=11565LLU, ._field_stride=6LLU},_20c8a9988_Range16{._field_lo=11568LLU, ._field_hi=11623LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=11631LLU, ._field_hi=11648LLU, ._field_stride=17LLU},_20c8a9988_Range16{._field_lo=11649LLU, ._field_hi=11670LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=11680LLU, ._field_hi=11686LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=11688LLU, ._field_hi=11694LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=11696LLU, ._field_hi=11702LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=11704LLU, ._field_hi=11710LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=11712LLU, ._field_hi=11718LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=11720LLU, ._field_hi=11726LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=11728LLU, ._field_hi=11734LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=11736LLU, ._field_hi=11742LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=11823LLU, ._field_hi=12293LLU, ._field_stride=470LLU},_20c8a9988_Range16{._field_lo=12294LLU, ._field_hi=12337LLU, ._field_stride=43LLU},_20c8a9988_Range16{._field_lo=12338LLU, ._field_hi=12341LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=12347LLU, ._field_hi=12348LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=12353LLU, ._field_hi=12438LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=12445LLU, ._field_hi=12447LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=12449LLU, ._field_hi=12538LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=12540LLU, ._field_hi=12543LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=12549LLU, ._field_hi=12591LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=12593LLU, ._field_hi=12686LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=12704LLU, ._field_hi=12735LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=12784LLU, ._field_hi=12799LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=13312LLU, ._field_hi=19903LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=19968LLU, ._field_hi=42124LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=42192LLU, ._field_hi=42237LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=42240LLU, ._field_hi=42508LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=42512LLU, ._field_hi=42527LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=42538LLU, ._field_hi=42539LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=42560LLU, ._field_hi=42606LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=42623LLU, ._field_hi=42653LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=42656LLU, ._field_hi=42725LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=42775LLU, ._field_hi=42783LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=42786LLU, ._field_hi=42888LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=42891LLU, ._field_hi=42954LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=42960LLU, ._field_hi=42961LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=42963LLU, ._field_hi=42965LLU, ._field_stride=2LLU},_20c8a9988_Range16{._field_lo=42966LLU, ._field_hi=42969LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=42994LLU, ._field_hi=43009LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=43011LLU, ._field_hi=43013LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=43015LLU, ._field_hi=43018LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=43020LLU, ._field_hi=43042LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=43072LLU, ._field_hi=43123LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=43138LLU, ._field_hi=43187LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=43250LLU, ._field_hi=43255LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=43259LLU, ._field_hi=43261LLU, ._field_stride=2LLU},_20c8a9988_Range16{._field_lo=43262LLU, ._field_hi=43274LLU, ._field_stride=12LLU},_20c8a9988_Range16{._field_lo=43275LLU, ._field_hi=43301LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=43312LLU, ._field_hi=43334LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=43360LLU, ._field_hi=43388LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=43396LLU, ._field_hi=43442LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=43471LLU, ._field_hi=43488LLU, ._field_stride=17LLU},_20c8a9988_Range16{._field_lo=43489LLU, ._field_hi=43492LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=43494LLU, ._field_hi=43503LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=43514LLU, ._field_hi=43518LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=43520LLU, ._field_hi=43560LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=43584LLU, ._field_hi=43586LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=43588LLU, ._field_hi=43595LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=43616LLU, ._field_hi=43638LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=43642LLU, ._field_hi=43646LLU, ._field_stride=4LLU},_20c8a9988_Range16{._field_lo=43647LLU, ._field_hi=43695LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=43697LLU, ._field_hi=43701LLU, ._field_stride=4LLU},_20c8a9988_Range16{._field_lo=43702LLU, ._field_hi=43705LLU, ._field_stride=3LLU},_20c8a9988_Range16{._field_lo=43706LLU, ._field_hi=43709LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=43712LLU, ._field_hi=43714LLU, ._field_stride=2LLU},_20c8a9988_Range16{._field_lo=43739LLU, ._field_hi=43741LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=43744LLU, ._field_hi=43754LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=43762LLU, ._field_hi=43764LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=43777LLU, ._field_hi=43782LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=43785LLU, ._field_hi=43790LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=43793LLU, ._field_hi=43798LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=43808LLU, ._field_hi=43814LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=43816LLU, ._field_hi=43822LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=43824LLU, ._field_hi=43866LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=43868LLU, ._field_hi=43881LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=43888LLU, ._field_hi=44002LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=44032LLU, ._field_hi=55203LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=55216LLU, ._field_hi=55238LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=55243LLU, ._field_hi=55291LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=63744LLU, ._field_hi=64109LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=64112LLU, ._field_hi=64217LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=64256LLU, ._field_hi=64262LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=64275LLU, ._field_hi=64279LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=64285LLU, ._field_hi=64287LLU, ._field_stride=2LLU},_20c8a9988_Range16{._field_lo=64288LLU, ._field_hi=64296LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=64298LLU, ._field_hi=64310LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=64312LLU, ._field_hi=64316LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=64318LLU, ._field_hi=64320LLU, ._field_stride=2LLU},_20c8a9988_Range16{._field_lo=64321LLU, ._field_hi=64323LLU, ._field_stride=2LLU},_20c8a9988_Range16{._field_lo=64324LLU, ._field_hi=64326LLU, ._field_stride=2LLU},_20c8a9988_Range16{._field_lo=64327LLU, ._field_hi=64433LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=64467LLU, ._field_hi=64829LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=64848LLU, ._field_hi=64911LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=64914LLU, ._field_hi=64967LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=65008LLU, ._field_hi=65019LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=65136LLU, ._field_hi=65140LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=65142LLU, ._field_hi=65276LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=65313LLU, ._field_hi=65338LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=65345LLU, ._field_hi=65370LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=65382LLU, ._field_hi=65470LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=65474LLU, ._field_hi=65479LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=65482LLU, ._field_hi=65487LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=65490LLU, ._field_hi=65495LLU, ._field_stride=1LLU},_20c8a9988_Range16{._field_lo=65498LLU, ._field_hi=65500LLU, ._field_stride=1LLU}}), ._field_r32=jule::Slice<_20c8a9e50_Range32>::make({_20c8a9e50_Range32{._field_lo=65536LLU, ._field_hi=65547LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=65549LLU, ._field_hi=65574LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=65576LLU, ._field_hi=65594LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=65596LLU, ._field_hi=65597LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=65599LLU, ._field_hi=65613LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=65616LLU, ._field_hi=65629LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=65664LLU, ._field_hi=65786LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=66176LLU, ._field_hi=66204LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=66208LLU, ._field_hi=66256LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=66304LLU, ._field_hi=66335LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=66349LLU, ._field_hi=66368LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=66370LLU, ._field_hi=66377LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=66384LLU, ._field_hi=66421LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=66432LLU, ._field_hi=66461LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=66464LLU, ._field_hi=66499LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=66504LLU, ._field_hi=66511LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=66560LLU, ._field_hi=66717LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=66736LLU, ._field_hi=66771LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=66776LLU, ._field_hi=66811LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=66816LLU, ._field_hi=66855LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=66864LLU, ._field_hi=66915LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=66928LLU, ._field_hi=66938LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=66940LLU, ._field_hi=66954LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=66956LLU, ._field_hi=66962LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=66964LLU, ._field_hi=66965LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=66967LLU, ._field_hi=66977LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=66979LLU, ._field_hi=66993LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=66995LLU, ._field_hi=67001LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=67003LLU, ._field_hi=67004LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=67072LLU, ._field_hi=67382LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=67392LLU, ._field_hi=67413LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=67424LLU, ._field_hi=67431LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=67456LLU, ._field_hi=67461LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=67463LLU, ._field_hi=67504LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=67506LLU, ._field_hi=67514LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=67584LLU, ._field_hi=67589LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=67592LLU, ._field_hi=67594LLU, ._field_stride=2LLU},_20c8a9e50_Range32{._field_lo=67595LLU, ._field_hi=67637LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=67639LLU, ._field_hi=67640LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=67644LLU, ._field_hi=67647LLU, ._field_stride=3LLU},_20c8a9e50_Range32{._field_lo=67648LLU, ._field_hi=67669LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=67680LLU, ._field_hi=67702LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=67712LLU, ._field_hi=67742LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=67808LLU, ._field_hi=67826LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=67828LLU, ._field_hi=67829LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=67840LLU, ._field_hi=67861LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=67872LLU, ._field_hi=67897LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=67968LLU, ._field_hi=68023LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=68030LLU, ._field_hi=68031LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=68096LLU, ._field_hi=68112LLU, ._field_stride=16LLU},_20c8a9e50_Range32{._field_lo=68113LLU, ._field_hi=68115LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=68117LLU, ._field_hi=68119LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=68121LLU, ._field_hi=68149LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=68192LLU, ._field_hi=68220LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=68224LLU, ._field_hi=68252LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=68288LLU, ._field_hi=68295LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=68297LLU, ._field_hi=68324LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=68352LLU, ._field_hi=68405LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=68416LLU, ._field_hi=68437LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=68448LLU, ._field_hi=68466LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=68480LLU, ._field_hi=68497LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=68608LLU, ._field_hi=68680LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=68736LLU, ._field_hi=68786LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=68800LLU, ._field_hi=68850LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=68864LLU, ._field_hi=68899LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=69248LLU, ._field_hi=69289LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=69296LLU, ._field_hi=69297LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=69376LLU, ._field_hi=69404LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=69415LLU, ._field_hi=69424LLU, ._field_stride=9LLU},_20c8a9e50_Range32{._field_lo=69425LLU, ._field_hi=69445LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=69488LLU, ._field_hi=69505LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=69552LLU, ._field_hi=69572LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=69600LLU, ._field_hi=69622LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=69635LLU, ._field_hi=69687LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=69745LLU, ._field_hi=69746LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=69749LLU, ._field_hi=69763LLU, ._field_stride=14LLU},_20c8a9e50_Range32{._field_lo=69764LLU, ._field_hi=69807LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=69840LLU, ._field_hi=69864LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=69891LLU, ._field_hi=69926LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=69956LLU, ._field_hi=69959LLU, ._field_stride=3LLU},_20c8a9e50_Range32{._field_lo=69968LLU, ._field_hi=70002LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=70006LLU, ._field_hi=70019LLU, ._field_stride=13LLU},_20c8a9e50_Range32{._field_lo=70020LLU, ._field_hi=70066LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=70081LLU, ._field_hi=70084LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=70106LLU, ._field_hi=70108LLU, ._field_stride=2LLU},_20c8a9e50_Range32{._field_lo=70144LLU, ._field_hi=70161LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=70163LLU, ._field_hi=70187LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=70207LLU, ._field_hi=70208LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=70272LLU, ._field_hi=70278LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=70280LLU, ._field_hi=70282LLU, ._field_stride=2LLU},_20c8a9e50_Range32{._field_lo=70283LLU, ._field_hi=70285LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=70287LLU, ._field_hi=70301LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=70303LLU, ._field_hi=70312LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=70320LLU, ._field_hi=70366LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=70405LLU, ._field_hi=70412LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=70415LLU, ._field_hi=70416LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=70419LLU, ._field_hi=70440LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=70442LLU, ._field_hi=70448LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=70450LLU, ._field_hi=70451LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=70453LLU, ._field_hi=70457LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=70461LLU, ._field_hi=70480LLU, ._field_stride=19LLU},_20c8a9e50_Range32{._field_lo=70493LLU, ._field_hi=70497LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=70656LLU, ._field_hi=70708LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=70727LLU, ._field_hi=70730LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=70751LLU, ._field_hi=70753LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=70784LLU, ._field_hi=70831LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=70852LLU, ._field_hi=70853LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=70855LLU, ._field_hi=71040LLU, ._field_stride=185LLU},_20c8a9e50_Range32{._field_lo=71041LLU, ._field_hi=71086LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=71128LLU, ._field_hi=71131LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=71168LLU, ._field_hi=71215LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=71236LLU, ._field_hi=71296LLU, ._field_stride=60LLU},_20c8a9e50_Range32{._field_lo=71297LLU, ._field_hi=71338LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=71352LLU, ._field_hi=71424LLU, ._field_stride=72LLU},_20c8a9e50_Range32{._field_lo=71425LLU, ._field_hi=71450LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=71488LLU, ._field_hi=71494LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=71680LLU, ._field_hi=71723LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=71840LLU, ._field_hi=71903LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=71935LLU, ._field_hi=71942LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=71945LLU, ._field_hi=71948LLU, ._field_stride=3LLU},_20c8a9e50_Range32{._field_lo=71949LLU, ._field_hi=71955LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=71957LLU, ._field_hi=71958LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=71960LLU, ._field_hi=71983LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=71999LLU, ._field_hi=72001LLU, ._field_stride=2LLU},_20c8a9e50_Range32{._field_lo=72096LLU, ._field_hi=72103LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=72106LLU, ._field_hi=72144LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=72161LLU, ._field_hi=72163LLU, ._field_stride=2LLU},_20c8a9e50_Range32{._field_lo=72192LLU, ._field_hi=72203LLU, ._field_stride=11LLU},_20c8a9e50_Range32{._field_lo=72204LLU, ._field_hi=72242LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=72250LLU, ._field_hi=72272LLU, ._field_stride=22LLU},_20c8a9e50_Range32{._field_lo=72284LLU, ._field_hi=72329LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=72349LLU, ._field_hi=72368LLU, ._field_stride=19LLU},_20c8a9e50_Range32{._field_lo=72369LLU, ._field_hi=72440LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=72704LLU, ._field_hi=72712LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=72714LLU, ._field_hi=72750LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=72768LLU, ._field_hi=72818LLU, ._field_stride=50LLU},_20c8a9e50_Range32{._field_lo=72819LLU, ._field_hi=72847LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=72960LLU, ._field_hi=72966LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=72968LLU, ._field_hi=72969LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=72971LLU, ._field_hi=73008LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=73030LLU, ._field_hi=73056LLU, ._field_stride=26LLU},_20c8a9e50_Range32{._field_lo=73057LLU, ._field_hi=73061LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=73063LLU, ._field_hi=73064LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=73066LLU, ._field_hi=73097LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=73112LLU, ._field_hi=73440LLU, ._field_stride=328LLU},_20c8a9e50_Range32{._field_lo=73441LLU, ._field_hi=73458LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=73474LLU, ._field_hi=73476LLU, ._field_stride=2LLU},_20c8a9e50_Range32{._field_lo=73477LLU, ._field_hi=73488LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=73490LLU, ._field_hi=73523LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=73648LLU, ._field_hi=73728LLU, ._field_stride=80LLU},_20c8a9e50_Range32{._field_lo=73729LLU, ._field_hi=74649LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=74880LLU, ._field_hi=75075LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=77712LLU, ._field_hi=77808LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=77824LLU, ._field_hi=78895LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=78913LLU, ._field_hi=78918LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=82944LLU, ._field_hi=83526LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=92160LLU, ._field_hi=92728LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=92736LLU, ._field_hi=92766LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=92784LLU, ._field_hi=92862LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=92880LLU, ._field_hi=92909LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=92928LLU, ._field_hi=92975LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=92992LLU, ._field_hi=92995LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=93027LLU, ._field_hi=93047LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=93053LLU, ._field_hi=93071LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=93760LLU, ._field_hi=93823LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=93952LLU, ._field_hi=94026LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=94032LLU, ._field_hi=94099LLU, ._field_stride=67LLU},_20c8a9e50_Range32{._field_lo=94100LLU, ._field_hi=94111LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=94176LLU, ._field_hi=94177LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=94179LLU, ._field_hi=94208LLU, ._field_stride=29LLU},_20c8a9e50_Range32{._field_lo=94209LLU, ._field_hi=100343LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=100352LLU, ._field_hi=101589LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=101632LLU, ._field_hi=101640LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=110576LLU, ._field_hi=110579LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=110581LLU, ._field_hi=110587LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=110589LLU, ._field_hi=110590LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=110592LLU, ._field_hi=110882LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=110898LLU, ._field_hi=110928LLU, ._field_stride=30LLU},_20c8a9e50_Range32{._field_lo=110929LLU, ._field_hi=110930LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=110933LLU, ._field_hi=110948LLU, ._field_stride=15LLU},_20c8a9e50_Range32{._field_lo=110949LLU, ._field_hi=110951LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=110960LLU, ._field_hi=111355LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=113664LLU, ._field_hi=113770LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=113776LLU, ._field_hi=113788LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=113792LLU, ._field_hi=113800LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=113808LLU, ._field_hi=113817LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=119808LLU, ._field_hi=119892LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=119894LLU, ._field_hi=119964LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=119966LLU, ._field_hi=119967LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=119970LLU, ._field_hi=119973LLU, ._field_stride=3LLU},_20c8a9e50_Range32{._field_lo=119974LLU, ._field_hi=119977LLU, ._field_stride=3LLU},_20c8a9e50_Range32{._field_lo=119978LLU, ._field_hi=119980LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=119982LLU, ._field_hi=119993LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=119995LLU, ._field_hi=119997LLU, ._field_stride=2LLU},_20c8a9e50_Range32{._field_lo=119998LLU, ._field_hi=120003LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=120005LLU, ._field_hi=120069LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=120071LLU, ._field_hi=120074LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=120077LLU, ._field_hi=120084LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=120086LLU, ._field_hi=120092LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=120094LLU, ._field_hi=120121LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=120123LLU, ._field_hi=120126LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=120128LLU, ._field_hi=120132LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=120134LLU, ._field_hi=120138LLU, ._field_stride=4LLU},_20c8a9e50_Range32{._field_lo=120139LLU, ._field_hi=120144LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=120146LLU, ._field_hi=120485LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=120488LLU, ._field_hi=120512LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=120514LLU, ._field_hi=120538LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=120540LLU, ._field_hi=120570LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=120572LLU, ._field_hi=120596LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=120598LLU, ._field_hi=120628LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=120630LLU, ._field_hi=120654LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=120656LLU, ._field_hi=120686LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=120688LLU, ._field_hi=120712LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=120714LLU, ._field_hi=120744LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=120746LLU, ._field_hi=120770LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=120772LLU, ._field_hi=120779LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=122624LLU, ._field_hi=122654LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=122661LLU, ._field_hi=122666LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=122928LLU, ._field_hi=122989LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=123136LLU, ._field_hi=123180LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=123191LLU, ._field_hi=123197LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=123214LLU, ._field_hi=123536LLU, ._field_stride=322LLU},_20c8a9e50_Range32{._field_lo=123537LLU, ._field_hi=123565LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=123584LLU, ._field_hi=123627LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=124112LLU, ._field_hi=124139LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=124896LLU, ._field_hi=124902LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=124904LLU, ._field_hi=124907LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=124909LLU, ._field_hi=124910LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=124912LLU, ._field_hi=124926LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=124928LLU, ._field_hi=125124LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=125184LLU, ._field_hi=125251LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=125259LLU, ._field_hi=126464LLU, ._field_stride=1205LLU},_20c8a9e50_Range32{._field_lo=126465LLU, ._field_hi=126467LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=126469LLU, ._field_hi=126495LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=126497LLU, ._field_hi=126498LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=126500LLU, ._field_hi=126503LLU, ._field_stride=3LLU},_20c8a9e50_Range32{._field_lo=126505LLU, ._field_hi=126514LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=126516LLU, ._field_hi=126519LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=126521LLU, ._field_hi=126523LLU, ._field_stride=2LLU},_20c8a9e50_Range32{._field_lo=126530LLU, ._field_hi=126535LLU, ._field_stride=5LLU},_20c8a9e50_Range32{._field_lo=126537LLU, ._field_hi=126541LLU, ._field_stride=2LLU},_20c8a9e50_Range32{._field_lo=126542LLU, ._field_hi=126543LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=126545LLU, ._field_hi=126546LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=126548LLU, ._field_hi=126551LLU, ._field_stride=3LLU},_20c8a9e50_Range32{._field_lo=126553LLU, ._field_hi=126561LLU, ._field_stride=2LLU},_20c8a9e50_Range32{._field_lo=126562LLU, ._field_hi=126564LLU, ._field_stride=2LLU},_20c8a9e50_Range32{._field_lo=126567LLU, ._field_hi=126570LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=126572LLU, ._field_hi=126578LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=126580LLU, ._field_hi=126583LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=126585LLU, ._field_hi=126588LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=126590LLU, ._field_hi=126592LLU, ._field_stride=2LLU},_20c8a9e50_Range32{._field_lo=126593LLU, ._field_hi=126601LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=126603LLU, ._field_hi=126619LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=126625LLU, ._field_hi=126627LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=126629LLU, ._field_hi=126633LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=126635LLU, ._field_hi=126651LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=131072LLU, ._field_hi=173791LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=173824LLU, ._field_hi=177977LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=177984LLU, ._field_hi=178205LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=178208LLU, ._field_hi=183969LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=183984LLU, ._field_hi=191456LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=194560LLU, ._field_hi=195101LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=196608LLU, ._field_hi=201546LLU, ._field_stride=1LLU},_20c8a9e50_Range32{._field_lo=201552LLU, ._field_hi=205743LLU, ._field_stride=1LLU}}), ._field_latin_offset=6LL});
jule::Array<jule::Str,4> _20ca81797_CPP_HEADER_EXTS = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _23db4462b_CPP_EXTS = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _20ca831c2_OBJECTIVE_CPP_EXTS = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Array<jule::Str,3> _20ca92eb2_DISTOS = jule::Array<jule::Str,3>({jule::Str("windows", 7),jule::Str("linux", 5),jule::Str("darwin", 6)});
jule::Array<jule::Str,3> _20ca9328c_DISTARCH = jule::Array<jule::Str,3>({jule::Str("arm64", 5),jule::Str("amd64", 5),jule::Str("i386", 4)});
jule::Str _20caa3654_PATH_STDLIB = jule::Str();
jule::Str _20caa29e9_PATH_EXEC = jule::Str();
jule::Str _20cab1981_PATH_WD = jule::Str();
jule::Str _20cab3048_PATH_API = jule::Str();
jule::Array<jule::I32,5> _20cceb083_SPACES = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::Str,6> _20cceb319_UNARY_OPS = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
jule::Array<jule::Str,12> _20cceb5e4_BIN_OPS = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
jule::Array<jule::Str,2> _20cd98cac_POSTFIX_OPS = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
jule::Array<jule::Str,11> _20cd99043_ASSING_OPS = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
jule::Array<_20cda6baa_KindPair,47> _20cda7084_KEYWORDS = jule::Array<_20cda6baa_KindPair,47>({_20cda6baa_KindPair{._field_kind=jule::Str("i8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("i16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("i32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("i64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("u8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("u16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("u32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("u64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("f32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("f64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("uint", 4), ._field_id=static_cast<jule::U64>(1LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("int", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("uintptr", 7), ._field_id=static_cast<jule::U64>(1LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("bool", 4), ._field_id=static_cast<jule::U64>(1LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("str", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("any", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("true", 4), ._field_id=static_cast<jule::U64>(6LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("false", 5), ._field_id=static_cast<jule::U64>(6LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("nil", 3), ._field_id=static_cast<jule::U64>(6LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U64>(9LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U64>(4LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U64>(10LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U64>(12LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U64>(13LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U64>(14LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U64>(15LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U64>(16LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U64>(17LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U64>(19LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("pub", 3), ._field_id=static_cast<jule::U64>(21LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U64>(22LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U64>(24LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U64>(25LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U64>(26LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U64>(27LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U64>(28LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U64>(29LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U64>(30LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U64>(31LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U64>(32LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U64>(33LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U64>(34LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U64>(35LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U64>(36LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U64>(37LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U64>(38LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U64>(40LLU)}});
jule::Array<_20cda6baa_KindPair,39> _20cda735e_BASIC_OPS = jule::Array<_20cda6baa_KindPair,39>({_20cda6baa_KindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U64>(23LLU)},_20cda6baa_KindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U64>(11LLU)},_20cda6baa_KindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U64>(5LLU)},_20cda6baa_KindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U64>(8LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U64>(7LLU)},_20cda6baa_KindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U64>(20LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_20cda6baa_KindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20cda6baa_KindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20cda6baa_KindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20cda6baa_KindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20cda6baa_KindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U64>(39LLU)}});
jule::Array<jule::U8,32> _1e5bdda70_DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1e5bde059_DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_1e5aa9e25_FloatInfo _1e4774085_F32_INFO = _1e5aa9e25_FloatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_1e5aa9e25_FloatInfo _1e4780ea4_F64_INFO = _1e5aa9e25_FloatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _1e5601010_DETAILED_POWS_OF_TEN = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _1e568d29a_POWTAB = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1e56c3049_F64_POW10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1e56dd5c5_F32_POW10 = jule::Slice<jule::F32>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL});
jule::Array<jule::U64,20> _1e5a330ce_U64_POW10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1e5c2e3eb_LeftCheat> _1e5b35764_LEFTCHEATS = jule::Slice<_1e5c2e3eb_LeftCheat>::make({_1e5c2e3eb_LeftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_1e5c2e3eb_LeftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_1e5c2e3eb_LeftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_1e5c2e3eb_LeftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_1e5c2e3eb_LeftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_1e5c2e3eb_LeftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_1e5c2e3eb_LeftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_1e5c2e3eb_LeftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_1e5c2e3eb_LeftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_1e5c2e3eb_LeftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_1e5c2e3eb_LeftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_1e5c2e3eb_LeftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_1e5c2e3eb_LeftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_1e5c2e3eb_LeftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_1e5c2e3eb_LeftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_1e5c2e3eb_LeftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_1e5c2e3eb_LeftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_1e5c2e3eb_LeftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_1e5c2e3eb_LeftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_1e5c2e3eb_LeftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_1e5c2e3eb_LeftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_1e5c2e3eb_LeftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_1e5c2e3eb_LeftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_1e5c2e3eb_LeftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_1e5c2e3eb_LeftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_1e5c2e3eb_LeftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_1e5c2e3eb_LeftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_1e5c2e3eb_LeftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_1e5c2e3eb_LeftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_1e5c2e3eb_LeftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_1e5c2e3eb_LeftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_1e5c2e3eb_LeftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_1e5c2e3eb_LeftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_1e5c2e3eb_LeftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_1e5c2e3eb_LeftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_1e5c2e3eb_LeftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_1e5c2e3eb_LeftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_1e5c2e3eb_LeftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_1e5c2e3eb_LeftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_1e5c2e3eb_LeftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_1e5c2e3eb_LeftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_1e5c2e3eb_LeftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_1e5c2e3eb_LeftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_1e5c2e3eb_LeftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_1e5c2e3eb_LeftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_1e5c2e3eb_LeftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_1e5c2e3eb_LeftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_1e5c2e3eb_LeftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_1e5c2e3eb_LeftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_1e5c2e3eb_LeftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_1e5c2e3eb_LeftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_1e5c2e3eb_LeftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_1e5c2e3eb_LeftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_1e5c2e3eb_LeftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_1e5c2e3eb_LeftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_1e5c2e3eb_LeftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_1e5c2e3eb_LeftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_1e5c2e3eb_LeftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_1e5c2e3eb_LeftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_1e5c2e3eb_LeftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_1e5c2e3eb_LeftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I64 _1e46773c8_BIT_SIZE = 0LL;
jule::Str _1e4677582_SYS_INT = jule::Str();
jule::Str _1e46777d5_SYS_UINT = jule::Str();
jule::Bool _20c8e7e49_COPY = false;
jule::Bool _20c8e8a0a_DEADCODE = false;
jule::Bool _20c8ec14b_APPEND = false;
jule::Bool _20c8ec855_MATH = false;
jule::Bool _20c8ed724_ACCESS = false;
jule::Bool _20c8eeb54_INLINE = false;
jule::Bool _20c9048b2_PTR = false;
jule::Bool _20c90893d_COND = false;
jule::Bool _1c99dec44_expr_enabled = false;
jule::Bool _1c9d18424_scope_enabled = false;
jule::Array<jule::U64,12> _1ca5199e3_MDAYS = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::U64 _2253a5999_STDERR = _2253a5bec_get_std_handle(static_cast<jule::U64>(18446744073709551604LLU));
jule::Array<_22548ea2d_accept_range,16> _22548ed80_ACCEPT_RANGES = jule::Array<_22548ea2d_accept_range,16>({_22548ea2d_accept_range{._field_lo=128LLU, ._field_hi=191LLU},_22548ea2d_accept_range{._field_lo=160LLU, ._field_hi=191LLU},_22548ea2d_accept_range{._field_lo=128LLU, ._field_hi=159LLU},_22548ea2d_accept_range{._field_lo=144LLU, ._field_hi=191LLU},_22548ea2d_accept_range{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Array<jule::Str,2>,5> _20ca62d3e_HELP_MAP = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Ptr<_20c8aa3c3_RangeTable> _20c85aede_LETTER = _20c854e1c__L;
jule::U64 _225353815_STDIN = _2253a5bec_get_std_handle(static_cast<jule::U64>(18446744073709551606LLU));
jule::Str _20cab3dd4_OS = jule::Str("windows", 7);
jule::Str _20cab8449_ARCH = jule::Str("amd64", 5);
jule::U64 _2253a5702_STDOUT = _2253a5bec_get_std_handle(static_cast<jule::U64>(18446744073709551605LLU));
jule::Array<jule::U8,256> _22548e4ab_FIRST = jule::Array<jule::U8,256>({240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,19LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,35LLU,3LLU,3LLU,52LLU,4LLU,4LLU,4LLU,68LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU});
jule::Array<jule::U8,256> _20c8a4895__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});





std::ostream &operator<<(std::ostream &_Stream, _22548ea2d_accept_range _Src) {
	_Stream << "accept_range{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20c8a9988_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20c8a9e50_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20c8aa3c3_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "r16:" << _Src._field_r16 << ", ";
	_Stream << "r32:" << _Src._field_r32 << ", ";
	_Stream << "latin_offset:" << _Src._field_latin_offset;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _20b943094_index(_20b949155_LazyBuff* _self_, jule::I64 _5424_i) {
	if (((*_self_)._field_buff != nullptr)) {
		return (*_self_)._field_buff[_5424_i];
	};
	return (*_self_)._field_path[_5424_i];
}



inline void _20b948b7c_append(_20b949155_LazyBuff* _self_, jule::U8 _6125_c) {
	if (((*_self_)._field_buff == nullptr)) {
		if ((((*_self_)._field_w < (*_self_)._field_path.len()) && ((*_self_)._field_path[(*_self_)._field_w] == _6125_c))) {
			((*_self_)._field_w)++;
			return;;
		};
		(*_self_)._field_buff=jule::Slice<jule::U8>::alloc((*_self_)._field_path.len());
		jule::copy(((*_self_)._field_buff), (static_cast<jule::Slice<jule::U8>>((*_self_)._field_path.slice(0LL,(*_self_)._field_w))));
	};
	(*_self_)._field_buff[(*_self_)._field_w]=_6125_c;
	((*_self_)._field_w)++;
}



inline jule::Str _20b94c840_string(_20b949155_LazyBuff* _self_) {
	if (((*_self_)._field_buff == nullptr)) {
		return (*_self_)._field_vol_and_path.slice(0LL,((*_self_)._field_vol_len + (*_self_)._field_w));
	};
	return ((*_self_)._field_vol_and_path.slice(0LL,(*_self_)._field_vol_len) + static_cast<jule::Str>((*_self_)._field_buff.slice(0LL,(*_self_)._field_w)));
}







std::ostream &operator<<(std::ostream &_Stream, _20b949155_LazyBuff _Src) {
	_Stream << "LazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "vol_and_path:" << _Src._field_vol_and_path << ", ";
	_Stream << "vol_len:" << _Src._field_vol_len;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2252b727e_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "stat:" << _Src._field_stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_2252b727e_DirEntry>>> static__2254a5769_read(jule::Str _1524_path) {
	jule::Slice<jule::Ptr<_2252b727e_DirEntry>> _1538_dirents = jule::Slice<jule::Ptr<_2252b727e_DirEntry>>();
	jule::Slice<jule::U16> _1613_utf16_path = _22539180e_utf16_from_str(_1524_path);;
	_WDIR* _1717_dir = _2253a7a34__wopendir((&(_1613_utf16_path[0LL])));;
	if ((_1717_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_2252b727e_DirEntry>>>(_22520e490_get_last_fs_error());
	};
	for (;;) {
		{
			struct _wdirent* _2217_dirent = _2253a7ccb__wreaddir(_1717_dir);;
			if ((_2217_dirent == nullptr)) {
				goto _iter_end_1cacdea26;
			};
			jule::Str _2617_name = _22539358b_u16_ptr_to_str(((jule::U16*)(_2217_dirent->d_name)));;
			jule::Ptr<_2253b6d95_Status> _2721_stat = ({
				auto except = static__20b8a3642_of(_20b961436_join(jule::Slice<jule::Str>::make({_1524_path,_2617_name})));
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Slice<jule::Ptr<_2252b727e_DirEntry>>>(except.error);
				} jule::Ptr<_2253b6d95_Status>();});
			});;
			_1538_dirents = jule::alloc_for_append(_1538_dirents,1);_1538_dirents.__push(jule::new_ptr<_2252b727e_DirEntry>(_2252b727e_DirEntry{._field_name=_2617_name, ._field_stat=_2721_stat}));;
		}
	_iter_next_1cacdea26:;
	}
	_iter_end_1cacdea26:;;
	_2253a8073__wclosedir(_1717_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_2252b727e_DirEntry>>>(jule::Any(), _1538_dirents);
}



inline jule::VoidExceptional static__2254b91c8_create(jule::Str _4026_path) {
	jule::Slice<jule::U16> _4513_utf16_path = _22539180e_utf16_from_str(_4026_path);;
	if ((!(_2253a74e5_create_directory((&(_4513_utf16_path[0LL])))))) {
		return jule::VoidExceptional(_22520e490_get_last_fs_error());
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional static__20b8a29e8_remove(jule::Str _5426_path) {
	jule::Slice<jule::U16> _5513_utf16_path = _22539180e_utf16_from_str(_5426_path);;
	if ((!(_2253a778c_remove_directory((&(_5513_utf16_path[0LL])))))) {
		return jule::VoidExceptional(_22520e490_get_last_fs_error());
	};
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _2253b6812_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2253b69ee_File> static__2252970b6_new(jule::U64 _4523_handle) {
	return jule::new_ptr<_2253b69ee_File>(_2253b69ee_File{._field_handle=_4523_handle});
}



inline jule::Exceptional<jule::Ptr<_2253b69ee_File>> static__2252c26c9_create(jule::Str _5526_path) {
	return jule::Exceptional<jule::Ptr<_2253b69ee_File>>(jule::Any(),({
		auto except = static__22542110d_open(_5526_path,((static_cast<jule::I64>(770LL) | 770LL) | 770LL),438LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Ptr<_2253b69ee_File>>(except.error);
		} jule::Ptr<_2253b69ee_File>();});
	}));
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__2252c944a_read(jule::Str _6724_path) {
	jule::Ptr<_2253b6d95_Status> _6813_s = ({
		auto except = static__20b8a3642_of(_6724_path);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_2253b6d95_Status>();});
	});;
	if ((!(_225288151_is_reg(_6813_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(static_cast<jule::I64>(14LL));
	};
	if ((_6813_s.get()._field_size == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),jule::Slice<jule::U8>::alloc(0LL));
	};
	jule::Ptr<_2253b69ee_File> _7817_f = ({
		auto except = static__22542110d_open(_6724_path,static_cast<jule::I64>(0LL),0LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_2253b69ee_File>();});
	});;
	__JULE_DEFER({
		({
			auto except = _2252e0b15_close(_7817_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});;
	jule::Slice<jule::U8> _8117_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_6813_s.get()._field_size));;
	jule::I64 _8213_n = ({
		auto except = _2254930e7_read(_7817_f.ptr(), _8117_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::I64();});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),_8117_buff.slice(0LL,_8213_n));
}



inline jule::VoidExceptional static__2252ccb02_write(jule::Str _9125_path, jule::Slice<jule::U8> _9136_data, jule::I64 _9150_perm) {
	jule::Ptr<_2253b69ee_File> _9217_f = ({
		auto except = static__22542110d_open(_9125_path,((static_cast<jule::I64>(769LL) | 769LL) | 769LL),_9150_perm);
		(except.ok()) ? (except.result) : ({{
			return jule::VoidExceptional(except.error);
		} jule::Ptr<_2253b69ee_File>();});
	});;
	({
		auto except = _225420d22_write(_9217_f.ptr(), _9136_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _2252e0b15_close(_9217_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _2252ce494_seek(_2253b69ee_File* _self_, jule::I64 _10527_offset, jule::I64 _10540_origin) {
	jule::I64 _10613_pos = _2253abc69_seek(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),_10527_offset,static_cast<jule::I64>(_10540_origin));;
	if ((_10613_pos == -1LL)) {
		return jule::Exceptional<jule::I64>(_22520e490_get_last_fs_error());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_10613_pos);
}



inline jule::VoidExceptional _2252e0b15_close(_2253b69ee_File* _self_) {
	if ((_2253ac484_close(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle))) == -1LL)) {
		return jule::VoidExceptional(_22520e490_get_last_fs_error());
	};
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::Ptr<_2253b69ee_File>> static__22542110d_open(jule::Str _2124_path, jule::I64 _2135_flag, jule::I64 _2148_mode) {
	jule::Slice<jule::U16> _2213_utf16_path = _22539180e_utf16_from_str(_2124_path);;
	jule::I64 _2313_handle = _2253a66c0__wopen((&(_2213_utf16_path[0LL])),static_cast<jule::I64>(_2135_flag),_2148_mode);;
	if ((_2313_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_2253b69ee_File>>(_22520e490_get_last_fs_error());
	};
	return jule::Exceptional<jule::Ptr<_2253b69ee_File>>(jule::Any(),static__2252970b6_new(static_cast<jule::U64>(static_cast<jule::U64>(_2313_handle))));
}



inline jule::VoidExceptional static__22545440a_remove(jule::Str _3426_path) {
	jule::Slice<jule::U16> _3513_utf16_path = _22539180e_utf16_from_str(_3426_path);;
	if ((!(_2253a724d_delete_file((&(_3513_utf16_path[0LL])))))) {
		return jule::VoidExceptional(_22520e490_get_last_fs_error());
	};
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _225420d22_write(_2253b69ee_File* _self_, jule::Slice<jule::U8> _4928_buff) {
	jule::I64 _4945_n = jule::I64();
	if ((_4928_buff.len() == 0LL)) {
		_4945_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_4945_n);
	};
	if (_225493229_is_console_handle((*_self_)._field_handle)) {
		jule::Slice<jule::U16> _5517_utf16_buff = _22539180e_utf16_from_str(static_cast<jule::Str>(_4928_buff));;
		jule::Bool _5617_ok = _2253a9409_write_console((*_self_)._field_handle,(&(_5517_utf16_buff[0LL])),static_cast<jule::I64>(_5517_utf16_buff.len()),_4945_n,nullptr);;
		if ((!(_5617_ok))) {
			return jule::Exceptional<jule::I64>(_22520e490_get_last_fs_error());
		};
		return jule::Exceptional<jule::I64>(jule::Any(),_4945_n);
	};
	_4945_n=static_cast<jule::I64>(_2253ac86e_write(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_4928_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_4928_buff.len()))));
	if ((_4945_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_22520e490_get_last_fs_error());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_4945_n);
}



inline jule::Exceptional<jule::I64> _2254930e7_read(_2253b69ee_File* _self_, jule::Slice<jule::U8> _8231_buff) {
	jule::I64 _8248_n = jule::I64();
	if ((_8231_buff.len() == 0LL)) {
		_8248_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_8248_n);
	};
	if (_225493229_is_console_handle((*_self_)._field_handle)) {
		jule::Slice<jule::U16> _8821_codepage = jule::Slice<jule::U16>::alloc(_8231_buff.len());;
		jule::Bool _8917_ok = _2253a9937_read_console((*_self_)._field_handle,(&(_8821_codepage[0LL])),static_cast<jule::I64>(_8231_buff.len()),_8248_n,nullptr);;
		if ((!(_8917_ok))) {
			return jule::Exceptional<jule::I64>(_22520e490_get_last_fs_error());
		};
		jule::Slice<jule::I32> _9417_runes = _2253a4932_decode(_8821_codepage.slice(0LL,_8248_n));;
		_8248_n=0LL;
		{
			auto &expr = _9417_runes;
			auto it = expr.begin();
			_iter_begin_1cad0dc76:;
			if (it != expr.end()) {
				jule::I32 &_9620_r = *it;
				{
					jule::I64 _9721_size = _225491238_rune_len(_9620_r);;
					if (((_8248_n + _9721_size) > _8231_buff.len())) {
						goto _iter_end_1cad0dc76;
					};
					_225491612_encode_rune(_8231_buff.slice(_8248_n),_9620_r);
					_8248_n+=_9721_size;
				}
				_iter_next_1cad0dc76:;
				++it;
				goto _iter_begin_1cad0dc76;
			}
			_iter_end_1cad0dc76:;
		};
		return jule::Exceptional<jule::I64>(jule::Any(),_8248_n);
	};
	_8248_n=static_cast<jule::I64>(_2253ac154_read(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_8231_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_8231_buff.len()))));
	if ((_8248_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_22520e490_get_last_fs_error());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_8248_n);
}







std::ostream &operator<<(std::ostream &_Stream, _2253b69ee_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2252e2012_is_dir(_2253b6d95_Status* _self_) {
	return (((*_self_)._field_mode & 16384LLU) == 16384LLU);
}



inline jule::Bool _225288151_is_reg(_2253b6d95_Status* _self_) {
	return (((*_self_)._field_mode & 32768LLU) == 32768LLU);
}



inline jule::Exceptional<jule::Ptr<_2253b6d95_Status>> static__20b8a3642_of(jule::Str _1222_path) {
	if (_1222_path.empty()) {
		return jule::Exceptional<jule::Ptr<_2253b6d95_Status>>(static_cast<jule::I64>(4LL));
	};
	jule::Slice<jule::U16> _1613_utf16_path = _22539180e_utf16_from_str(_1222_path);;
	struct stat _1717_handle = (struct stat){};;
	jule::I64 _1813_code = _2253a62d5_wstat((&(_1613_utf16_path[0LL])),(&(_1717_handle)));;
	if ((_1813_code != -1LL)) {
		return jule::Exceptional<jule::Ptr<_2253b6d95_Status>>(jule::Any(),jule::new_ptr<_2253b6d95_Status>(_2253b6d95_Status{._field_mode=static_cast<jule::U64>(static_cast<jule::U64>(_1717_handle.st_mode)), ._field_size=static_cast<jule::U64>(static_cast<jule::U64>(_1717_handle.st_size))}));
	};
	return jule::Exceptional<jule::Ptr<_2253b6d95_Status>>(_22520e490_get_last_fs_error());
}







std::ostream &operator<<(std::ostream &_Stream, _2253b6d95_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20cad09a0_Cmd> static__20cad0dce_new(jule::Str _2023_path) {
	return jule::new_ptr<_20cad09a0_Cmd>(_20cad09a0_Cmd{._field_path=_2023_path, });
}



inline jule::Exceptional<jule::I64> _20cad5301_spawn(_20cad09a0_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(),static_cast<jule::I64>(({
		auto except = _20cae0d78___spawn(&(*_self_));
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I64>(except.error);
		} jule::I64();});
	})));
}



inline jule::Exceptional<jule::I64> _20cae0d78___spawn(_20cad09a0_Cmd* _self_) {
	jule::I64 _5217_pid = 0LL;;
	if (((*_self_)._field_env == nullptr)) {
		_5217_pid=static_cast<jule::I64>(_20cae0619_execvp((*_self_)._field_path,(*_self_)._field_args));
	} else {
		_5217_pid=static_cast<jule::I64>(_20cae0a04_execve((*_self_)._field_path,(*_self_)._field_args,(*_self_)._field_env));
	};
	if ((_5217_pid == -1LL)) {
		return jule::Exceptional<jule::I64>(_20cad0241_get_last_process_error());
	};
	jule::I64 _6113_status = 0LL;;
	if ((_cwait(((signed*)((&(_6113_status)))),_5217_pid,0LL) == -1LL)) {
		return jule::Exceptional<jule::I64>(_20cad0241_get_last_process_error());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_6113_status);
}







std::ostream &operator<<(std::ostream &_Stream, _20cad09a0_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "env:" << _Src._field_env;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20ca8ec5b_Log _Src) {
	_Stream << "Log{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "text:" << _Src._field_text << ", ";
	_Stream << "line:" << _Src._field_line << ", ";
	_Stream << "suggestion:" << _Src._field_suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _20cd9ead7_prec(_20cd9e6ec_Token* _self_) {
	if (((*_self_)._field_id != static_cast<jule::U64>(7LLU))) {
		return 0LLU;
	};
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1cb016ad8:;
			{
				return 5LLU;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1cb01690c:;
			{
				return 4LLU;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1cb016973:;
			{
				return 3LLU;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1cb016786:;
			{
				return 2LLU;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1cb0167ec:;
			{
				return 1LLU;
			}
		}
		else {
			_case_begin_1cb016236:;
			{
				return 0LLU;
			}
		}
		_match_end_1cb015d6d:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20cd9e6ec_Token _Src) {
	_Stream << "Token{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20cda4ee9_is_ok(_20cda4adc_File* _self_) {
	({
		auto except = static__20b8a3642_of((*_self_)._field_path);
		(except.ok()) ? (except.result) : ({{
			return false;
		} jule::Ptr<_2253b6d95_Status>();});
	});
	return true;
}



inline void _20cda526e_fill(_20cda4adc_File* _self_, jule::Slice<jule::U8> _2331_data) {
	(*_self_)._field_data=_2331_data;
}



inline jule::Str _20cda54d3_dir(_20cda4adc_File* _self_) {
	return _20b981357_dir((*_self_)._field_path);
}



inline jule::Str _20cda5747_name(_20cda4adc_File* _self_) {
	return _20b97533a_base((*_self_)._field_path);
}



inline jule::U64 _20cda59ab_addr(_20cda4adc_File* _self_) {
	return static_cast<jule::U64>(((jule::U64)((&((*_self_))))));
}



inline jule::Str _20cda5cb9_get_row(_20cda4adc_File* _self_, jule::I64 _4426_row) {
	jule::I64 _4517_n = 0LL;;
	jule::I64 _4617_line_start = 0LL;;
	jule::I64 _4717_i = 0LL;;
	for (; (_4717_i < (*_self_)._field_data.len()); (_4717_i)++) {
		{
			if (((*_self_)._field_data[_4717_i] != '\n')) {
				goto _iter_next_1cb01d98b;
			};
			(_4517_n)++;
			if ((_4517_n == _4426_row)) {
				return static_cast<jule::Str>((*_self_)._field_data.slice(_4617_line_start,_4717_i));
			};
			_4617_line_start=static_cast<jule::I64>((_4717_i + 1LL));
		}
	_iter_next_1cb01d98b:;
	}
	_iter_end_1cb01d98b:;;
	return jule::Str();
}







std::ostream &operator<<(std::ostream &_Stream, _20cda4adc_File _Src) {
	_Stream << "File{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "data:" << _Src._field_data << ", ";
	_Stream << "tokens:" << _Src._field_tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cda6baa_KindPair _Src) {
	_Stream << "KindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _20cdacc16_push_err(_20cdac672_Lex* _self_, jule::Str _45827_fmt, jule::Slice<jule::Any> _45840_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_20cda7848_make_err((*_self_)._field_row,(*_self_)._field_column,(*_self_)._field_file,_45827_fmt,jule::Any(_45840_args)));;
}



inline void _20cdad035_push_err_tok(_20cdac672_Lex* _self_, jule::Ptr<_20cd9e6ec_Token>& _46332_token, jule::Str _46347_fmt) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_20cda7848_make_err(_46332_token.get()._field_row,_46332_token.get()._field_column,(*_self_)._field_file,_46347_fmt,jule::Slice<jule::Any>()));;
}



inline void _20cdad211_lex(_20cdac672_Lex* _self_) {
	(*_self_)._field_errors=nullptr;
	_20cdb0213_new_line(&(*_self_));
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_data.len())) {
		{
			jule::Ptr<_20cd9e6ec_Token> _47321_token = _20cdb1588_token(&(*_self_));;
			if ((_47321_token.get()._field_id != static_cast<jule::U64>(0LLU))) {
				(*_self_)._field_tokens = jule::alloc_for_append((*_self_)._field_tokens,1);(*_self_)._field_tokens.__push(_47321_token);;
			};
		}
	_iter_next_1cb02392a:;
	}
	_iter_end_1cb02392a:;;
}



inline jule::Str _20cdad51e_id(_20cdac672_Lex* _self_, jule::Slice<jule::U8>& _48222_ln) {
	if ((_48222_ln.len() == 0LL)) {
		return jule::Str();
	};
	jule::I32 _48614_r;;
	jule::I64 _48621_i;;
	std::tie(_48614_r,_48621_i) = _225490666_decode_rune(_48222_ln);
	if (((_48614_r != '_') && (!(_20cda2aeb_is_letter(_48614_r))))) {
		return jule::Str();
	};
	while ((_48621_i < _48222_ln.len())) {
		{
			jule::I32 _49218_pr;;
			jule::I64 _49222_n;;
			std::tie(_49218_pr,_49222_n) = _225490666_decode_rune(_48222_ln.slice(_48621_i));
			if ((((_49218_pr != '_') && (!(_20cda313a_is_decimal(static_cast<jule::U8>(static_cast<jule::U8>(_49218_pr)))))) && (!(_20cda2aeb_is_letter(_49218_pr))))) {
				(*_self_)._field_pos+=_48621_i;
				return static_cast<jule::Str>(_48222_ln.slice(0LL,_48621_i));
			};
			_48621_i+=_49222_n;
		}
	_iter_next_1cb027687:;
	}
	_iter_end_1cb027687:;;
	(*_self_)._field_pos+=_48222_ln.len();
	return static_cast<jule::Str>(_48222_ln);
}



inline jule::Slice<jule::U8> _20cdad783_resume(_20cdac672_Lex* _self_) {
	jule::I64 _50717_i = (*_self_)._field_pos;;
	for (; (_50717_i < (*_self_)._field_file.get()._field_data.len()); (_50717_i)++) {
		{
			jule::I32 _50917_r = static_cast<jule::I32>((*_self_)._field_file.get()._field_data[_50717_i]);;
			if (_20cda2733_is_space(_50917_r)) {
				;
				((*_self_)._field_pos)++;
				{
					auto &_match_expr{ _50917_r };
					
					if (_match_expr == '\n') {
						_case_begin_1cb02c549:;
						{
							_20cdb0213_new_line(&(*_self_));
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1cb02c2e6:;
						{
							(*_self_)._field_column+=8LL;
						}
					}
					else {
						_case_begin_1cb02b911:;
						{
							((*_self_)._field_column)++;
						}
					}
					_match_end_1cb02bdd9:;
				};
				goto _iter_next_1cb02a536;
			};
			jule::I64 _52421_j = _50717_i;;
			for (; (_52421_j < (*_self_)._field_file.get()._field_data.len()); (_52421_j)++) {
				{
					if (((*_self_)._field_file.get()._field_data[_52421_j] == '\n')) {
						goto _iter_end_1cb02b2d4;
					};
				}
			_iter_next_1cb02b2d4:;
			}
			_iter_end_1cb02b2d4:;;
			return (*_self_)._field_file.get()._field_data.slice(_50717_i,_52421_j);
		}
	_iter_next_1cb02a536:;
	}
	_iter_end_1cb02a536:;;
	return nullptr;
}



inline void _20cdada08_lex_line_comment(_20cdac672_Lex* _self_, jule::Ptr<_20cd9e6ec_Token>& _53640_token) {
	jule::I64 _53713_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _54017_r = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];;
			if (((_54017_r == '\n') || (_54017_r == '\r'))) {
				goto _iter_end_1cb030151;
			};
		}
	_iter_next_1cb030151:;
	}
	_iter_end_1cb030151:;;
	if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		_53640_token.get()._field_id=static_cast<jule::U64>(18LLU);
		_53640_token.get()._field_kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_data.slice(_53713_start,(*_self_)._field_pos));
	};
}



inline void _20cdadc7d_lex_range_comment(_20cdac672_Lex* _self_, jule::Ptr<_20cd9e6ec_Token>& _55141_token) {
	jule::I64 _55213_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _55517_r = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];;
			if ((_55517_r == '\r')) {
				goto _iter_next_1cb03386e;
			};
			if ((_55517_r == '\n')) {
				_20cdb0213_new_line(&(*_self_));
				goto _iter_next_1cb03386e;
			};
			(*_self_)._field_column+=1LL;
			if ((((((*_self_)._field_pos + 1LL) < (*_self_)._field_file.get()._field_data.len()) && (_55517_r == '*')) && ((*_self_)._field_file.get()._field_data[((*_self_)._field_pos + 1LL)] == '/'))) {
				(*_self_)._field_column+=2LL;
				(*_self_)._field_pos+=2LL;
				if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					_55141_token.get()._field_id=static_cast<jule::U64>(18LLU);
					_55141_token.get()._field_kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_data.slice(_55213_start,(*_self_)._field_pos));
				};
				return;;
			};
		}
	_iter_next_1cb03386e:;
	}
	_iter_end_1cb03386e:;;
	_20cdacc16_push_err(&(*_self_), jule::Str("missing block comment close", 27),jule::Slice<jule::Any>());
}



inline jule::Str _20cdae08b_num(_20cdac672_Lex* _self_, jule::Slice<jule::U8>& _57923_txt) {
	jule::Str _57938_lit = jule::Str();
	if ((_57923_txt[0LL] == '_')) {
		_57938_lit = jule::Str();
		return _57938_lit;
	};
	_57938_lit=_20cdab055_hex_num(_57923_txt);
	if ((!(_57938_lit.empty()))) {
		goto _julec_label_end;
	};
	_57938_lit=_20cdaacad_octal_num(_57923_txt);
	if ((!(_57938_lit.empty()))) {
		goto _julec_label_end;
	};
	_57938_lit=_20cda9790_binary_num(_57923_txt);
	if ((!(_57938_lit.empty()))) {
		goto _julec_label_end;
	};
	_57938_lit=_20cda94e8_common_num(_57923_txt);
	_julec_label_end:;
	(*_self_)._field_pos+=_57938_lit.len();
	return _57938_lit;
}



inline jule::Str _20cdae399_escape_seq(_20cdac672_Lex* _self_, jule::Slice<jule::U8>& _60130_txt) {
	jule::Str _60217_seq = jule::Str();;
	if ((_60130_txt.len() < 2LL)) {
		goto _julec_label_end;
	};
	{
		auto &_match_expr{ _60130_txt[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1cb03e517:;
			{
				(*_self_)._field_pos+=2LL;
				return static_cast<jule::Str>(_60130_txt.slice(0LL,2LL));
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1cb03e33b:;
			{
				_60217_seq=_20cdab660_big_unicode_point_escape(_60130_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1cb03e061:;
			{
				_60217_seq=_20cdab93a_little_unicode_point_escape(_60130_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1cb03e0c7:;
			{
				_60217_seq=_20cdabbe3_hex_byte_escape(_60130_txt);
			}
		}
		else {
			_case_begin_1cb03db65:;
			{
				_60217_seq=_20cdabe8a_byte_escape(_60130_txt);
			}
		}
		_match_end_1cb03de84:;
	};
	_julec_label_end:;
	if (_60217_seq.empty()) {
		((*_self_)._field_pos)++;
		_20cdacc16_push_err(&(*_self_), jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>());
		return jule::Str();
	};
	(*_self_)._field_pos+=_60217_seq.len();
	return _60217_seq;
}



inline jule::Str _20cdae751_get_rune(_20cdac672_Lex* _self_, jule::Slice<jule::U8>& _63128_txt, jule::Bool _63141_raw) {
	if (((!(_63141_raw)) && (_63128_txt[0LL] == '\\'))) {
		return _20cdae399_escape_seq(&(*_self_), _63128_txt);
	};
	jule::I32 _63614_r;;
	jule::I64 _63617_n;;
	std::tie(_63614_r,_63617_n) = _225490666_decode_rune(_63128_txt);
	(*_self_)._field_pos+=_63617_n;
	return static_cast<jule::Str>(_63614_r);
}



inline jule::Str _20cdaea5e_lex_rune(_20cdac672_Lex* _self_, jule::Slice<jule::U8>& _64128_txt) {
	jule::Str _64217_run = jule::Str("'", 1);;
	((*_self_)._field_column)++;
	jule::I64 _64417_n = 0LL;;
	jule::I64 _64517_i = 1LL;;
	for (; (_64517_i < _64128_txt.len()); (_64517_i)++) {
		{
			if ((_64128_txt[_64517_i] == '\r')) {
				goto _iter_next_1cb046d05;
			};
			if ((_64128_txt[_64517_i] == '\n')) {
				_20cdacc16_push_err(&(*_self_), jule::Str("rune is not finished", 20),jule::Slice<jule::Any>());
				((*_self_)._field_pos)++;
				_20cdb0213_new_line(&(*_self_));
				return jule::Str();
			};
			jule::Slice<jule::U8> _65717_part = _64128_txt.slice(_64517_i);;
			jule::Str _65817_r = _20cdae751_get_rune(&(*_self_), _65717_part,false);;
			_64217_run+=_65817_r;
			(*_self_)._field_column+=_2254922d3_rune_count_str(_65817_r);
			if ((_65817_r == jule::Str("'", 1))) {
				((*_self_)._field_pos)++;
				goto _iter_end_1cb046d05;
			};
			if ((_65817_r.len() > 1LL)) {
				_64517_i+=(_65817_r.len() - 1LL);
			};
			(_64417_n)++;
		}
	_iter_next_1cb046d05:;
	}
	_iter_end_1cb046d05:;;
	if ((_64417_n == 0LL)) {
		_20cdacc16_push_err(&(*_self_), jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>());
	} else if ((_64417_n > 1LL)) {
		_20cdacc16_push_err(&(*_self_), jule::Str("rune is should be single", 24),jule::Slice<jule::Any>());
	};
	return _64217_run;
}



inline jule::Str _20cdaecc3_lex_str(_20cdac672_Lex* _self_) {
	jule::Str _68117_s = jule::Str();;
	jule::U8 _68213_mark = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];;
	((*_self_)._field_pos)++;
	jule::Bool _68413_raw = (_68213_mark == '`');;
	_68117_s+=static_cast<jule::Str>(_68213_mark);
	((*_self_)._field_column)++;
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_data.len())) {
		{
			jule::U8 _68917_ch = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];;
			if ((_68917_ch == '\r')) {
				goto _iter_next_1cb04d416;
			};
			if ((_68917_ch == '\n')) {
				_20cdb0213_new_line(&(*_self_));
				if ((!(_68413_raw))) {
					_20cdacc16_push_err(&(*_self_), jule::Str("string is not finished", 22),jule::Slice<jule::Any>());
					((*_self_)._field_pos)++;
					return jule::Str();
				};
			};
			jule::Slice<jule::U8> _70121_part = (*_self_)._field_file.get()._field_data.slice((*_self_)._field_pos);;
			jule::Str _70217_r = _20cdae751_get_rune(&(*_self_), _70121_part,_68413_raw);;
			_68117_s+=_70217_r;
			(*_self_)._field_column+=_2254922d3_rune_count_str(_70217_r);
			if ((_68917_ch == _68213_mark)) {
				goto _iter_end_1cb04d416;
			};
		}
	_iter_next_1cb04d416:;
	}
	_iter_end_1cb04d416:;;
	return _68117_s;
}



inline jule::Bool _20cdb0037_is_first_token_of_line(_20cdac672_Lex* _self_) {
	return ((*_self_)._field_column == 1LL);
}



inline void _20cdb0213_new_line(_20cdac672_Lex* _self_) {
	((*_self_)._field_row)++;
	(*_self_)._field_column=1LL;
}



inline jule::Bool _20cdb070d_is_op(_20cdac672_Lex* _self_, jule::Slice<jule::U8>& _72225_txt, jule::Str _72238_kind, jule::U64 _72249_id, jule::Ptr<_20cd9e6ec_Token>& _72267_t) {
	if ((!(_20cda7bcd_bytes_has_prefix(_72225_txt,_72238_kind)))) {
		return false;
	};
	_72267_t.get()._field_kind=_72238_kind;
	_72267_t.get()._field_id=_72249_id;
	(*_self_)._field_pos+=_72238_kind.len();
	return true;
}



inline jule::Bool _20cdb0ab5_lex_basic_ops(_20cdac672_Lex* _self_, jule::Slice<jule::U8> _73332_txt, jule::Ptr<_20cd9e6ec_Token>& _73350_tok) {
	{
		auto &expr = _20cda735e_BASIC_OPS;
		auto it = expr.begin();
		_iter_begin_1cb055d7a:;
		if (it != expr.end()) {
			_20cda6baa_KindPair &_73416_pair = *it;
			{
				if (_20cdb070d_is_op(&(*_self_), _73332_txt,_73416_pair._field_kind,_73416_pair._field_id,_73350_tok)) {
					return true;
				};
			}
			_iter_next_1cb055d7a:;
			++it;
			goto _iter_begin_1cb055d7a;
		}
		_iter_end_1cb055d7a:;
	};
	return false;
}



inline jule::Bool _20cdb0e6c_lex_id(_20cdac672_Lex* _self_, jule::Slice<jule::U8>& _74326_txt, jule::Ptr<_20cd9e6ec_Token>& _74344_t) {
	jule::Str _74413_lex = _20cdad51e_id(&(*_self_), _74326_txt);;
	if (_74413_lex.empty()) {
		return false;
	};
	_74344_t.get()._field_kind=_74413_lex;
	_74344_t.get()._field_id=static_cast<jule::U64>(2LLU);
	return true;
}



inline jule::Bool _20cdb1324_lex_num(_20cdac672_Lex* _self_, jule::Slice<jule::U8>& _75427_txt, jule::Ptr<_20cd9e6ec_Token>& _75445_t) {
	jule::Str _75513_lex = _20cdae08b_num(&(*_self_), _75427_txt);;
	if (_75513_lex.empty()) {
		return false;
	};
	_75445_t.get()._field_kind=_75513_lex;
	_75445_t.get()._field_id=static_cast<jule::U64>(6LLU);
	return true;
}



inline jule::Ptr<_20cd9e6ec_Token> _20cdb1588_token(_20cdac672_Lex* _self_) {
	jule::Ptr<_20cd9e6ec_Token> _76717_t = jule::new_ptr<_20cd9e6ec_Token>(_20cd9e6ec_Token{._field_file=(*_self_)._field_file, ._field_id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _77213_txt = _20cdad783_resume(&(*_self_));;
	if ((_77213_txt == nullptr)) {
		return _76717_t;
	};
	_76717_t.get()._field_column=(*_self_)._field_column;
	_76717_t.get()._field_row=(*_self_)._field_row;
	{
		
		if (_20cdb1324_lex_num(&(*_self_), _77213_txt,_76717_t)) {
			_case_begin_1cb05da53:;
			{
				goto _match_end_1cb05c36a;
			}
		}
		else if ((_77213_txt[0LL] == '\'')) {
			_case_begin_1cb05d03b:;
			{
				_76717_t.get()._field_kind=_20cdaea5e_lex_rune(&(*_self_), _77213_txt);
				_76717_t.get()._field_id=static_cast<jule::U64>(6LLU);
				return _76717_t;
			}
		}
		else if (((_77213_txt[0LL] == '\"') || (_77213_txt[0LL] == '`'))) {
			_case_begin_1cb05c4d0:;
			{
				_76717_t.get()._field_kind=_20cdaecc3_lex_str(&(*_self_));
				_76717_t.get()._field_id=static_cast<jule::U64>(6LLU);
				return _76717_t;
			}
		}
		else if (_20cda7bcd_bytes_has_prefix(_77213_txt,jule::Str("//", 2))) {
			_case_begin_1cb05c546:;
			{
				_20cdada08_lex_line_comment(&(*_self_), _76717_t);
				return _76717_t;
			}
		}
		else if (_20cda7bcd_bytes_has_prefix(_77213_txt,jule::Str("/*", 2))) {
			_case_begin_1cb05c5ac:;
			{
				_20cdadc7d_lex_range_comment(&(*_self_), _76717_t);
				return _76717_t;
			}
		}
		else if (_20cdb070d_is_op(&(*_self_), _77213_txt,jule::Str("(", 1),static_cast<jule::U64>(3LLU),_76717_t) || _20cdb070d_is_op(&(*_self_), _77213_txt,jule::Str(")", 1),static_cast<jule::U64>(3LLU),_76717_t) || _20cdb070d_is_op(&(*_self_), _77213_txt,jule::Str("{", 1),static_cast<jule::U64>(3LLU),_76717_t) || _20cdb070d_is_op(&(*_self_), _77213_txt,jule::Str("}", 1),static_cast<jule::U64>(3LLU),_76717_t) || _20cdb070d_is_op(&(*_self_), _77213_txt,jule::Str("[", 1),static_cast<jule::U64>(3LLU),_76717_t) || _20cdb070d_is_op(&(*_self_), _77213_txt,jule::Str("]", 1),static_cast<jule::U64>(3LLU),_76717_t) || _20cdb0ab5_lex_basic_ops(&(*_self_), _77213_txt,_76717_t)) {
			_case_begin_1cb05c623:;
			{
				goto _match_end_1cb05c36a;
			}
		}
		else if (_20cdb0e6c_lex_id(&(*_self_), _77213_txt,_76717_t)) {
			_case_begin_1cb05dbda:;
			{
				{
					auto &expr = _20cda7084_KEYWORDS;
					auto it = expr.begin();
					_iter_begin_1cb064949:;
					if (it != expr.end()) {
						_20cda6baa_KindPair &_81020_pair = *it;
						{
							if ((_81020_pair._field_kind == _76717_t.get()._field_kind)) {
								_76717_t.get()._field_id=_81020_pair._field_id;
								goto _iter_end_1cb064949;
							};
						}
						_iter_next_1cb064949:;
						++it;
						goto _iter_begin_1cb064949;
					}
					_iter_end_1cb064949:;
				};
			}
		}
		else {
			_case_begin_1cb05c469:;
			{
				jule::I32 _81718_r;;
				jule::I64 _81721_sz;;
				std::tie(_81718_r,_81721_sz) = _225490666_decode_rune(_77213_txt);
				_20cdacc16_push_err(&(*_self_), jule::Str("undefined token: @", 18),jule::Slice<jule::Any>::make({jule::Any(_81718_r)}));
				((*_self_)._field_column)++;
				(*_self_)._field_pos+=_81721_sz;
				return _76717_t;
			}
		}
		_match_end_1cb05c36a:;
	};
	(*_self_)._field_column+=_2254922d3_rune_count_str(_76717_t.get()._field_kind);
	return _76717_t;
}







std::ostream &operator<<(std::ostream &_Stream, _20cdac672_Lex _Src) {
	_Stream << "Lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e433079b_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "top_directives:" << _Src._field_top_directives << ", ";
	_Stream << "use_decls:" << _Src._field_use_decls << ", ";
	_Stream << "nodes:" << _Src._field_nodes;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e4331901_is_decl(_1e43314d3_Node* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1e43789ae_EnumDecl>>() || _match_expr.type_is<jule::Ptr<_1e4371ca4_FnDecl>>() || _match_expr.type_is<jule::Ptr<_1e4379d45_StructDecl>>() || _match_expr.type_is<jule::Ptr<_1e437a450_TraitDecl>>() || _match_expr.type_is<jule::Ptr<_1e4376506_TypeAliasDecl>>() || _match_expr.type_is<jule::Ptr<_1e43794d7_FieldDecl>>() || _match_expr.type_is<jule::Ptr<_1e43778e2_UseDecl>>() || _match_expr.type_is<jule::Ptr<_1e4372c83_VarDecl>>() || _match_expr.type_is<jule::Ptr<_1e436257a_TypeDecl>>()) {
			_case_begin_1cb0d9073:;
			{
				return true;
			}
		}
		else {
			_case_begin_1cb0d92c6:;
			{
				return false;
			}
		}
		_match_end_1cb0d9271:;
	};
}



inline jule::Bool _1e43617dd_is_directive(_1e43314d3_Node* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1e43620c4_Directive>>()) {
			_case_begin_1cb0dac67:;
			{
				return true;
			}
		}
		else {
			_case_begin_1cb0daea9:;
			{
				return false;
			}
		}
		_match_end_1cb0dae54:;
	};
}



inline jule::Bool _1e43619a8_is_impl(_1e43314d3_Node* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1e437aa5a_Impl>>()) {
			_case_begin_1cb0dbbad:;
			{
				return true;
			}
		}
		else {
			_case_begin_1cb0dbe11:;
			{
				return false;
			}
		}
		_match_end_1cb0dbdab:;
	};
}



inline jule::Bool _1e4361c1c_is_use_decl(_1e43314d3_Node* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1e43778e2_UseDecl>>()) {
			_case_begin_1cb0dcb37:;
			{
				return true;
			}
		}
		else {
			_case_begin_1cb0dcd8a:;
			{
				return false;
			}
		}
		_match_end_1cb0dcd35:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e43314d3_Node _Src) {
	_Stream << "Node{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e43620c4_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "tag:" << _Src._field_tag << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e436257a_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e4362e60_is_prim(_1e4362b0d_IdentTypeDecl* _self_) {
	return ((*_self_)._field_token.get()._field_id == static_cast<jule::U64>(1LLU));
}







std::ostream &operator<<(std::ostream &_Stream, _1e4362b0d_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4363317_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "idents:" << _Src._field_idents << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4363603_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e43638de_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4363c63_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e4364428_is_unsafe(_1e436404e_PtrTypeDecl* _self_) {
	return ((*_self_)._field_elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e436404e_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e4364aee_auto_sized(_1e436479c_ArrTypeDecl* _self_) {
	return ((*_self_)._field_size == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e436479c_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4364ea6_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e436535d_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e43659e0_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "range:" << _Src._field_range << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4365d97_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4366183_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e43669ad_is_nil(_1e436665b_LitExpr* _self_) {
	return ((*_self_)._field_value == jule::Str("nil", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _1e436665b_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4366d65_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e436721c_CoExpr _Src) {
	_Stream << "CoExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e43679e2_is_self(_1e4367690_IdentExpr* _self_) {
	return ((*_self_)._field_ident == jule::Str("self", 4));
}







std::ostream &operator<<(std::ostream &_Stream, _1e4367690_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4367d99_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "op:" << _Src._field_op << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4368251_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4368608_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e43689b0_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "ns:" << _Src._field_ns << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4368e33_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "is_self:" << _Src._field_is_self << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e43693a6_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e4369e34_unhandled(_1e43699b1_FnCallExpr* _self_) {
	return ((*_self_)._field_exception == nullptr);
}



inline jule::Bool _1e436a198_ignored(_1e43699b1_FnCallExpr* _self_) {
	return (((*_self_)._field_exception != nullptr) && (*_self_)._field_exception.get()._field_deferred);
}







std::ostream &operator<<(std::ostream &_Stream, _1e43699b1_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "exception:" << _Src._field_exception;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e436a82a_is_targeted(_1e436a4c8_FieldExprPair* _self_) {
	return ((*_self_)._field_field != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e436a4c8_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e436ac9d_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e436b573_is_empty(_1e436b221_BraceLit* _self_) {
	return ((*_self_)._field_exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _1e436b221_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e436b9e6_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val << ", ";
	_Stream << "colon:" << _Src._field_colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e436c5da_is_empty(_1e436be69_SliceExpr* _self_) {
	return ((*_self_)._field_exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _1e436be69_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e436ca4c_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e436d157_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "start:" << _Src._field_start << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e436d50e_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e436d8b6_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e436dc6d_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e436e059_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "token:" << _Src._field_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e436e664_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e436eba3_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "declarative:" << _Src._field_declarative << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e43702ad_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "end:" << _Src._field_end;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e4370ce7_is_self(_1e4370984_ParamDecl* _self_) {
	return (((*_self_)._field_ident == jule::Str("&self", 5)) || ((*_self_)._field_ident == jule::Str("self", 4)));
}







std::ostream &operator<<(std::ostream &_Stream, _1e4370984_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e4372106_is_anon(_1e4371ca4_FnDecl* _self_) {
	return ((*_self_)._field_ident == jule::Str("<anonymous>", 11));
}







std::ostream &operator<<(std::ostream &_Stream, _1e4371ca4_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "exceptional:" << _Src._field_exceptional << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4372c83_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e437313a_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e4373a0e_is_inf(_1e43736ac_Iter* _self_) {
	return ((*_self_)._field_kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e43736ac_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e43742d4_is_while_next(_1e4373e82_WhileKind* _self_) {
	return ((*_self_)._field_next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e4373e82_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "next_token:" << _Src._field_next_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4374823_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "in_token:" << _Src._field_in_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4374bca_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4375082_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4375505_If _Src) {
	_Stream << "If{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e43758ac_Else _Src) {
	_Stream << "Else{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4375d30_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "head:" << _Src._field_head << ", ";
	_Stream << "tail:" << _Src._field_tail << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4376506_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4376979_Case _Src) {
	_Stream << "Case{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4377150_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e43778e2_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "full:" << _Src._field_full << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e43783e8_auto_expr(_1e4377d65_EnumItemDecl* _self_) {
	return ((*_self_)._field_expr == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e4377d65_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e4378d11_default_typed(_1e43789ae_EnumDecl* _self_) {
	return ((*_self_)._field_kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e43789ae_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "end:" << _Src._field_end;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e43794d7_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4379d45_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e437a450_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e437adbd_is_trait_impl(_1e437aa5a_Impl* _self_) {
	return ((*_self_)._field_base != nullptr);
}



inline jule::Bool _1e437b132_is_struct_impl(_1e437aa5a_Impl* _self_) {
	return ((*_self_)._field_base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e437aa5a_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5aa9e25_FloatInfo _Src) {
	_Stream << "FloatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5665e21_DecimalSlice _Src) {
	_Stream << "DecimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5c2e3eb_LeftCheat _Src) {
	_Stream << "LeftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e5c2c1a7_set(_1e5c2e5d8_Decimal* _self_, jule::Str _23322_s) {
	jule::Bool _23332_ok = jule::Bool();
	jule::I64 _23417_i = 0LL;;
	(*_self_)._field_neg=false;
	(*_self_)._field_trunc=false;
	if ((_23417_i >= _23322_s.len())) {
		return _23332_ok;
	};
	{
		
		if ((_23322_s[_23417_i] == '+')) {
			_case_begin_1cb21e010:;
			{
				(_23417_i)++;
			}
		}
		else if ((_23322_s[_23417_i] == '-')) {
			_case_begin_1cb21e20d:;
			{
				(*_self_)._field_neg=true;
				(_23417_i)++;
			}
		}
		_match_end_1cb21dc68:;
	};
	jule::Bool _25117_sawdot = false;;
	jule::Bool _25217_sawdigits = false;;
	for (; (_23417_i < _23322_s.len()); (_23417_i)++) {
		{
			{
				
				if ((_23322_s[_23417_i] == '_')) {
					_case_begin_1cb221100:;
					{
						goto _iter_next_1cb22083b;
					}
				}
				else if ((_23322_s[_23417_i] == '.')) {
					_case_begin_1cb221177:;
					{
						if (_25117_sawdot) {
							return _23332_ok;
						};
						_25117_sawdot=true;
						(*_self_)._field_dp=(*_self_)._field_nd;
						goto _iter_next_1cb22083b;
					}
				}
				else if ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9'))) {
					_case_begin_1cb2211ee:;
					{
						_25217_sawdigits=true;
						if (((_23322_s[_23417_i] == '0') && ((*_self_)._field_nd == 0LL))) {
							((*_self_)._field_dp)--;
							goto _iter_next_1cb22083b;
						};
						if (((*_self_)._field_nd < 800LL)) {
							(*_self_)._field_d[(*_self_)._field_nd]=_23322_s[_23417_i];
							((*_self_)._field_nd)++;
						} else if ((_23322_s[_23417_i] != '0')) {
							(*_self_)._field_trunc=true;
						};
						goto _iter_next_1cb22083b;
					}
				}
				_match_end_1cb220ece:;
			};
			goto _iter_end_1cb22083b;
		}
	_iter_next_1cb22083b:;
	}
	_iter_end_1cb22083b:;;
	if ((!(_25217_sawdigits))) {
		return _23332_ok;
	};
	if ((!(_25117_sawdot))) {
		(*_self_)._field_dp=(*_self_)._field_nd;
	};
	if (((_23417_i < _23322_s.len()) && (_1e56a966d_lower(_23322_s[_23417_i]) == 'e'))) {
		(_23417_i)++;
		if ((_23417_i >= _23322_s.len())) {
			return _23332_ok;
		};
		jule::I64 _29721_esign = 1LL;;
		if ((_23322_s[_23417_i] == '+')) {
			(_23417_i)++;
		} else if ((_23322_s[_23417_i] == '-')) {
			(_23417_i)++;
			_29721_esign=-1LL;
		};
		if ((((_23417_i >= _23322_s.len()) || (_23322_s[_23417_i] < '0')) || (_23322_s[_23417_i] > '9'))) {
			return _23332_ok;
		};
		jule::I64 _30721_e = 0LL;;
		for (; ((_23417_i < _23322_s.len()) && ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9')) || (_23322_s[_23417_i] == '_'))); (_23417_i)++) {
			{
				if ((_23322_s[_23417_i] == '_')) {
					goto _iter_next_1cb228921;
				};
				if ((_30721_e < 10000LL)) {
					_30721_e=static_cast<jule::I64>((((_30721_e * 10LL) + static_cast<jule::I64>(_23322_s[_23417_i])) - '0'));
				};
			}
		_iter_next_1cb228921:;
		}
		_iter_end_1cb228921:;;
		(*_self_)._field_dp+=(_30721_e * _29721_esign);
	};
	if ((_23417_i != _23322_s.len())) {
		return _23332_ok;
	};
	_23332_ok=true;
	return _23332_ok;
}



inline std::tuple<jule::U64,jule::Bool> _1e5c2c2d9_float_bits(_1e5c2e5d8_Decimal* _self_, _1e5aa9e25_FloatInfo& _32730_flt) {
	jule::U64 _32748_b = jule::U64();
	jule::Bool _32756_overflow = jule::Bool();
	jule::I64 _32817_exp = 0LL;;
	jule::U64 _32917_mant = 0LLU;;
	if (((*_self_)._field_nd == 0LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32730_flt._field_bias;
		goto _julec_label_out;
	};
	if (((*_self_)._field_dp > 310LL)) {
		goto _julec_label_overflow;
	};
	if (((*_self_)._field_dp < -330LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32730_flt._field_bias;
		goto _julec_label_out;
	};
	_32817_exp=0LL;
	while (((*_self_)._field_dp > 0LL)) {
		{
			jule::I64 _35421_n = 0LL;;
			if (((*_self_)._field_dp >= _1e568d29a_POWTAB.len())) {
				_35421_n=27LL;
			} else {
				_35421_n=_1e568d29a_POWTAB[(*_self_)._field_dp];
			};
			_1e5c2e907_shift(&(*_self_), static_cast<jule::I64>((-(_35421_n))));
			_32817_exp+=_35421_n;
		}
	_iter_next_1cb2309d3:;
	}
	_iter_end_1cb2309d3:;;
	while ((((*_self_)._field_dp < 0LL) || (((*_self_)._field_dp == 0LL) && ((*_self_)._field_d[0LL] < '5')))) {
		{
			jule::I64 _36421_n = 0LL;;
			if (((-((*_self_)._field_dp)) >= _1e568d29a_POWTAB.len())) {
				_36421_n=27LL;
			} else {
				_36421_n=_1e568d29a_POWTAB[(-((*_self_)._field_dp))];
			};
			_1e5c2e907_shift(&(*_self_), _36421_n);
			_32817_exp-=_36421_n;
		}
	_iter_next_1cb232bb1:;
	}
	_iter_end_1cb232bb1:;;
	(_32817_exp)--;
	if ((_32817_exp < (_32730_flt._field_bias + 1LL))) {
		jule::I64 _38117_n = ((_32730_flt._field_bias + 1LL) - _32817_exp);;
		_1e5c2e907_shift(&(*_self_), static_cast<jule::I64>((-(_38117_n))));
		_32817_exp+=_38117_n;
	};
	if (((_32817_exp - _32730_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32730_flt._field_expbits) - 1LL)))) {
		goto _julec_label_overflow;
	};
	_1e5c2e907_shift(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>((1LL + _32730_flt._field_mantbits))));
	_32917_mant=static_cast<jule::U64>(_1e5c2edd0_rounded_integer(&(*_self_)));
	if ((_32917_mant == (2LLU << _32730_flt._field_mantbits))) {
		_32917_mant>>=1LLU;
		(_32817_exp)++;
		if (((_32817_exp - _32730_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32730_flt._field_expbits) - 1LL)))) {
			goto _julec_label_overflow;
		};
	};
	if (((_32917_mant & (1LLU << _32730_flt._field_mantbits)) == 0LLU)) {
		_32817_exp=_32730_flt._field_bias;
	};
	goto _julec_label_out;
	_julec_label_overflow:;
	_32917_mant=0LLU;
	_32817_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << _32730_flt._field_expbits) - 1LLU) + static_cast<jule::U64>(_32730_flt._field_bias))));
	_32756_overflow=true;
	_julec_label_out:;
	jule::U64 _41717_bits = (_32917_mant & ((1LLU << _32730_flt._field_mantbits) - 1LLU));;
	_41717_bits|=(static_cast<jule::U64>(((_32817_exp - _32730_flt._field_bias) & static_cast<jule::I64>(((1LL << _32730_flt._field_expbits) - 1LL)))) << _32730_flt._field_mantbits);
	if ((*_self_)._field_neg) {
		_41717_bits|=((1LLU << _32730_flt._field_mantbits) << _32730_flt._field_expbits);
	};
	_32748_b = _41717_bits;
	return std::make_tuple(_32748_b,_32756_overflow);
}



inline void _1e5c2e7c5_assign(_1e5c2e5d8_Decimal* _self_, jule::U64 _21029_v) {
	jule::Array<jule::U8,24> _21117_buf = jule::Array<jule::U8,24>();;
	jule::I64 _21417_n = 0LL;;
	while ((_21029_v > 0LLU)) {
		{
			jule::U64 _21617_v1 = (_21029_v / 10LLU);;
			_21029_v-=(10LLU * _21617_v1);
			_21117_buf[_21417_n]=static_cast<jule::U8>(static_cast<jule::U8>((_21029_v + '0')));
			(_21417_n)++;
			_21029_v=_21617_v1;
		}
	_iter_next_1cb23e706:;
	}
	_iter_end_1cb23e706:;;
	(*_self_)._field_nd=0LL;
	(_21417_n)--;
	for (; (_21417_n >= 0LL); (_21417_n)--) {
		{
			(*_self_)._field_d[(*_self_)._field_nd]=_21117_buf[_21417_n];
			((*_self_)._field_nd)++;
		}
	_iter_next_1cb24040a:;
	}
	_iter_end_1cb24040a:;;
	(*_self_)._field_dp=(*_self_)._field_nd;
	_1e5c30144_trim((*_self_));
}



inline void _1e5c2e907_shift(_1e5c2e5d8_Decimal* _self_, jule::I64 _23528_k) {
	{
		
		if (((*_self_)._field_nd == 0LL)) {
			_case_begin_1cb2421ed:;
		}
		else if ((_23528_k > 0LL)) {
			_case_begin_1cb242275:;
			{
				while ((_23528_k > 60LL)) {
					{
						_1e5c304da_left_shift((*_self_),60LLU);
						_23528_k-=60LL;
					}
				_iter_next_1cb24295c:;
				}
				_iter_end_1cb24295c:;;
				_1e5c304da_left_shift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>(_23528_k)));
			}
		}
		else if ((_23528_k < 0LL)) {
			_case_begin_1cb2422ec:;
			{
				while ((_23528_k < -60LL)) {
					{
						_1e5c30276_right_shift((*_self_),60LLU);
						_23528_k+=60LL;
					}
				_iter_next_1cb243881:;
				}
				_iter_end_1cb243881:;;
				_1e5c30276_right_shift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>((-(_23528_k)))));
			}
		}
		_match_end_1cb2420cc:;
	};
}



inline void _1e5c2ea39_round_down(_1e5c2e5d8_Decimal* _self_, jule::I64 _25529_nd) {
	if (((_25529_nd < 0LL) || (_25529_nd >= (*_self_)._field_nd))) {
		return;;
	};
	(*_self_)._field_nd=_25529_nd;
	_1e5c30144_trim((*_self_));
}



inline void _1e5c2eb6b_round_up(_1e5c2e5d8_Decimal* _self_, jule::I64 _26427_nd) {
	if (((_26427_nd < 0LL) || (_26427_nd >= (*_self_)._field_nd))) {
		return;;
	};
	jule::I64 _27017_i = (_26427_nd - 1LL);;
	for (; (_27017_i >= 0LL); (_27017_i)--) {
		{
			jule::U8 _27217_c = (*_self_)._field_d[_27017_i];;
			if ((_27217_c < '9')) {
				((*_self_)._field_d[_27017_i])++;
				(*_self_)._field_nd=static_cast<jule::I64>((_27017_i + 1LL));
				return;;
			};
		}
	_iter_next_1cb24682e:;
	}
	_iter_end_1cb24682e:;;
	(*_self_)._field_d[0LL]='1';
	(*_self_)._field_nd=1LL;
	((*_self_)._field_dp)++;
}



inline void _1e5c2ec9d_round(_1e5c2e5d8_Decimal* _self_, jule::I64 _29124_nd) {
	if (((_29124_nd < 0LL) || (_29124_nd >= (*_self_)._field_nd))) {
		return;;
	};
	if (_1e5c3061c_should_round_up((*_self_),_29124_nd)) {
		_1e5c2eb6b_round_up(&(*_self_), _29124_nd);
	} else {
		_1e5c2ea39_round_down(&(*_self_), _29124_nd);
	};
}



inline jule::U64 _1e5c2edd0_rounded_integer(_1e5c2e5d8_Decimal* _self_) {
	if (((*_self_)._field_dp > 20LL)) {
		return jule::MAX_U64;
	};
	jule::I64 _30817_i = 0LL;;
	jule::U64 _30917_n = 0LLU;;
	for (; ((_30817_i < (*_self_)._field_dp) && (_30817_i < (*_self_)._field_nd)); (_30817_i)++) {
		{
			_30917_n=static_cast<jule::U64>(((_30917_n * 10LLU) + static_cast<jule::U64>(((*_self_)._field_d[_30817_i] - '0'))));
		}
	_iter_next_1cb24aa75:;
	}
	_iter_end_1cb24aa75:;;
	for (; (_30817_i < (*_self_)._field_dp); (_30817_i)++) {
		{
			_30917_n*=10LLU;
		}
	_iter_next_1cb24d517:;
	}
	_iter_end_1cb24d517:;;
	if (_1e5c3061c_should_round_up((*_self_),(*_self_)._field_dp)) {
		(_30917_n)++;
	};
	return _30917_n;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5c2e5d8_Decimal _Src) {
	_Stream << "Decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c968bb88_Const> static__1c968ab87_new_i64(jule::I64 _1327_x) {
	return jule::new_ptr<_1c968bb88_Const>(_1c968bb88_Const{._field_data=jule::Any(_1327_x)});
}



inline jule::Ptr<_1c968bb88_Const> static__1c968bd75_new_u64(jule::U64 _1627_x) {
	return jule::new_ptr<_1c968bb88_Const>(_1c968bb88_Const{._field_data=jule::Any(_1627_x)});
}



inline jule::Ptr<_1c968bb88_Const> static__1c968c0c8_new_bool(jule::Bool _1928_x) {
	return jule::new_ptr<_1c968bb88_Const>(_1c968bb88_Const{._field_data=jule::Any(_1928_x)});
}



inline jule::Ptr<_1c968bb88_Const> static__1c968c370_new_str(jule::Str _2227_x) {
	return jule::new_ptr<_1c968bb88_Const>(_1c968bb88_Const{._field_data=jule::Any(_2227_x)});
}



inline jule::Ptr<_1c968bb88_Const> static__1c968c617_new_f64(jule::F64 _2527_x) {
	return jule::new_ptr<_1c968bb88_Const>(_1c968bb88_Const{._field_data=jule::Any(_2527_x)});
}



inline jule::Ptr<_1c968bb88_Const> static__1c968c815_new_nil(void) {
	return jule::new_ptr<_1c968bb88_Const>(_1c968bb88_Const{._field_data=nullptr});
}



inline jule::I64 _1c968ce0e_read_i64(_1c968bb88_Const* _self_) {
	if ((!(_1c96902a7_is_i64(&(*_self_))))) {
		return 0LL;
	};
	return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
}



inline jule::U64 _1c968d173_read_u64(_1c968bb88_Const* _self_) {
	if ((!(_1c969051b_is_u64(&(*_self_))))) {
		return 0LLU;
	};
	return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
}



inline jule::Bool _1c968d3d7_read_bool(_1c968bb88_Const* _self_) {
	if ((!(_1c9690780_is_bool(&(*_self_))))) {
		return false;
	};
	return (*_self_)._field_data.operator jule::Bool();
}



inline jule::Str _1c968d64b_read_str(_1c968bb88_Const* _self_) {
	if ((!(_1c96909e4_is_str(&(*_self_))))) {
		return jule::Str();
	};
	return (*_self_)._field_data.operator jule::Str();
}



inline jule::F64 _1c968d8b0_read_f64(_1c968bb88_Const* _self_) {
	if ((!(_1c9690c58_is_f64(&(*_self_))))) {
		return 0LL;
	};
	return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
}



inline jule::I64 _1c968db24_as_i64(_1c968bb88_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1cb5533cc:;
			{
				return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1cb553443:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1cb553630:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1cb552e8c:;
			{
				return 0LL;
			}
		}
		_match_end_1cb552e37:;
	};
}



inline jule::U64 _1c968dd88_as_u64(_1c968bb88_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1cb5552e1:;
			{
				return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1cb555357:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1cb555544:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1cb554da1:;
			{
				return 0LLU;
			}
		}
		_match_end_1cb554d4b:;
	};
}



inline jule::F64 _1c968e0ec_as_f64(_1c968bb88_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1cb557205:;
			{
				return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1cb55726b:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1cb557458:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else {
			_case_begin_1cb556cb5:;
			{
				return 0LL;
			}
		}
		_match_end_1cb556c60:;
	};
}



inline void _1c968e372_set_i64(_1c968bb88_Const* _self_, jule::I64 _13530_x) {
	(*_self_)._field_data=jule::Any(_13530_x);
}



inline void _1c968e5e7_set_u64(_1c968bb88_Const* _self_, jule::U64 _13830_x) {
	(*_self_)._field_data=jule::Any(_13830_x);
}



inline void _1c968e86c_set_bool(_1c968bb88_Const* _self_, jule::Bool _14131_x) {
	(*_self_)._field_data=jule::Any(_14131_x);
}



inline void _1c968eae2_set_str(_1c968bb88_Const* _self_, jule::Str _14430_x) {
	(*_self_)._field_data=jule::Any(_14430_x);
}



inline void _1c968ed67_set_f64(_1c968bb88_Const* _self_, jule::F64 _14730_x) {
	(*_self_)._field_data=jule::Any(_14730_x);
}



inline void _1c9690043_set_nil(_1c968bb88_Const* _self_) {
	(*_self_)._field_data=nullptr;
}



inline jule::Bool _1c96902a7_is_i64(_1c968bb88_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1cb55ca02:;
			{
				return true;
			}
		}
		else {
			_case_begin_1cb55cc88:;
			{
				return false;
			}
		}
		_match_end_1cb55cc33:;
	};
}



inline jule::Bool _1c969051b_is_u64(_1c968bb88_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1cb55d78e:;
			{
				return true;
			}
		}
		else {
			_case_begin_1cb55d1d9:;
			{
				return false;
			}
		}
		_match_end_1cb55d184:;
	};
}



inline jule::Bool _1c9690780_is_bool(_1c968bb88_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1cb55e240:;
			{
				return true;
			}
		}
		else {
			_case_begin_1cb55db8a:;
			{
				return false;
			}
		}
		_match_end_1cb55db35:;
	};
}



inline jule::Bool _1c96909e4_is_str(_1c968bb88_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1cb55ebe1:;
			{
				return true;
			}
		}
		else {
			_case_begin_1cb55e63b:;
			{
				return false;
			}
		}
		_match_end_1cb55e5d6:;
	};
}



inline jule::Bool _1c9690c58_is_f64(_1c968bb88_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1cb560692:;
			{
				return true;
			}
		}
		else {
			_case_begin_1cb5600dc:;
			{
				return false;
			}
		}
		_match_end_1cb560087:;
	};
}



inline jule::Bool _1c9690ebc_is_nil(_1c968bb88_Const* _self_) {
	return ((*_self_)._field_data == nullptr);
}



inline jule::Bool _1c96912ca_are_same_types(_1c968bb88_Const* _self_, _1c968bb88_Const _21033_x) {
	{
		
		if ((_1c96902a7_is_i64(&(*_self_)) == _1c96902a7_is_i64(&_21033_x))) {
			_case_begin_1cb56282b:;
			{
				return true;
			}
		}
		else if ((_1c969051b_is_u64(&(*_self_)) == _1c969051b_is_u64(&_21033_x))) {
			_case_begin_1cb5628d6:;
			{
				return true;
			}
		}
		else if ((_1c9690c58_is_f64(&(*_self_)) == _1c9690c58_is_f64(&_21033_x))) {
			_case_begin_1cb56295d:;
			{
				return true;
			}
		}
		else if ((_1c9690780_is_bool(&(*_self_)) == _1c9690780_is_bool(&_21033_x))) {
			_case_begin_1cb56263e:;
			{
				return true;
			}
		}
		else if ((_1c96909e4_is_str(&(*_self_)) == _1c96909e4_is_str(&_21033_x))) {
			_case_begin_1cb5626b6:;
			{
				return true;
			}
		}
		else if ((_1c9690ebc_is_nil(&(*_self_)) == _1c9690ebc_is_nil(&_21033_x))) {
			_case_begin_1cb562243:;
			{
				return true;
			}
		}
		else {
			_case_begin_1cb5621cc:;
			{
				return false;
			}
		}
		_match_end_1cb562111:;
	};
}



inline jule::Bool _1c96915d8_and(_1c968bb88_Const* _self_, _1c968bb88_Const _23522_x) {
	{
		
		if ((_1c9690780_is_bool(&(*_self_)) && _1c9690780_is_bool(&_23522_x))) {
			_case_begin_1cb56616a:;
			{
				return (_1c968d3d7_read_bool(&(*_self_)) && _1c968d3d7_read_bool(&_23522_x));
			}
		}
		else {
			_case_begin_1cb565a71:;
			{
				return false;
			}
		}
		_match_end_1cb5659a5:;
	};
}



inline jule::Bool _1c96918e6_or(_1c968bb88_Const* _self_, _1c968bb88_Const _24621_x) {
	{
		
		if ((_1c9690780_is_bool(&(*_self_)) && _1c9690780_is_bool(&_24621_x))) {
			_case_begin_1cb567a73:;
			{
				return (_1c968d3d7_read_bool(&(*_self_)) || _1c968d3d7_read_bool(&_24621_x));
			}
		}
		else {
			_case_begin_1cb567479:;
			{
				return false;
			}
		}
		_match_end_1cb5673ad:;
	};
}



inline jule::Bool _1c9691c04_eq(_1c968bb88_Const* _self_, _1c968bb88_Const _25721_x) {
	{
		
		if (_1c9690ebc_is_nil(&(*_self_))) {
			_case_begin_1cb568e92:;
			{
				return _1c9690ebc_is_nil(&_25721_x);
			}
		}
		else if (_1c9690780_is_bool(&(*_self_))) {
			_case_begin_1cb56903b:;
			{
				return (_1c9690780_is_bool(&_25721_x) && (_1c968d3d7_read_bool(&(*_self_)) == _1c968d3d7_read_bool(&_25721_x)));
			}
		}
		else if (_1c96909e4_is_str(&(*_self_))) {
			_case_begin_1cb5690a2:;
			{
				return (_1c96909e4_is_str(&_25721_x) && (_1c968d64b_read_str(&(*_self_)) == _1c968d64b_read_str(&_25721_x)));
			}
		}
		else if (_1c96902a7_is_i64(&(*_self_))) {
			_case_begin_1cb568ca5:;
			{
				return (_1c968ce0e_read_i64(&(*_self_)) == _1c968db24_as_i64(&_25721_x));
			}
		}
		else if (_1c969051b_is_u64(&(*_self_))) {
			_case_begin_1cb568d1b:;
			{
				return (_1c968d173_read_u64(&(*_self_)) == _1c968dd88_as_u64(&_25721_x));
			}
		}
		else if (_1c9690c58_is_f64(&(*_self_))) {
			_case_begin_1cb568d82:;
			{
				return (_1c968d8b0_read_f64(&(*_self_)) == _1c968e0ec_as_f64(&_25721_x));
			}
		}
		else {
			_case_begin_1cb56803a:;
			{
				return false;
			}
		}
		_match_end_1cb567e6e:;
	};
}



inline jule::Bool _1c9692012_lt(_1c968bb88_Const* _self_, _1c968bb88_Const _28421_x) {
	{
		
		if (_1c96909e4_is_str(&(*_self_))) {
			_case_begin_1cb56d161:;
			{
				return (_1c96909e4_is_str(&_28421_x) && (_1c968d64b_read_str(&(*_self_)) < _1c968d64b_read_str(&_28421_x)));
			}
		}
		else if (_1c96902a7_is_i64(&(*_self_))) {
			_case_begin_1cb56d22c:;
			{
				return (_1c968ce0e_read_i64(&(*_self_)) < _1c968db24_as_i64(&_28421_x));
			}
		}
		else if (_1c969051b_is_u64(&(*_self_))) {
			_case_begin_1cb56d293:;
			{
				return (_1c968d173_read_u64(&(*_self_)) < _1c968dd88_as_u64(&_28421_x));
			}
		}
		else if (_1c9690c58_is_f64(&(*_self_))) {
			_case_begin_1cb56ce96:;
			{
				return (_1c968d8b0_read_f64(&(*_self_)) < _1c968e0ec_as_f64(&_28421_x));
			}
		}
		else {
			_case_begin_1cb569349:;
			{
				return false;
			}
		}
		_match_end_1cb56927d:;
	};
}



inline jule::Bool _1c9692320_lt_eq(_1c968bb88_Const* _self_, _1c968bb88_Const _30724_x) {
	{
		
		if (_1c96909e4_is_str(&(*_self_))) {
			_case_begin_1cb571131:;
			{
				return (_1c96909e4_is_str(&_30724_x) && (_1c968d64b_read_str(&(*_self_)) <= _1c968d64b_read_str(&_30724_x)));
			}
		}
		else if (_1c96902a7_is_i64(&(*_self_))) {
			_case_begin_1cb5711ec:;
			{
				return (_1c968ce0e_read_i64(&(*_self_)) <= _1c968db24_as_i64(&_30724_x));
			}
		}
		else if (_1c969051b_is_u64(&(*_self_))) {
			_case_begin_1cb571263:;
			{
				return (_1c968d173_read_u64(&(*_self_)) <= _1c968dd88_as_u64(&_30724_x));
			}
		}
		else if (_1c9690c58_is_f64(&(*_self_))) {
			_case_begin_1cb570e66:;
			{
				return (_1c968d8b0_read_f64(&(*_self_)) <= _1c968e0ec_as_f64(&_30724_x));
			}
		}
		else {
			_case_begin_1cb56d419:;
			{
				return false;
			}
		}
		_match_end_1cb56d34d:;
	};
}



inline jule::Bool _1c969262d_gt(_1c968bb88_Const* _self_, _1c968bb88_Const _33021_x) {
	{
		
		if (_1c96909e4_is_str(&(*_self_))) {
			_case_begin_1cb574101:;
			{
				return (_1c96909e4_is_str(&_33021_x) && (_1c968d64b_read_str(&(*_self_)) > _1c968d64b_read_str(&_33021_x)));
			}
		}
		else if (_1c96902a7_is_i64(&(*_self_))) {
			_case_begin_1cb5741bc:;
			{
				return (_1c968ce0e_read_i64(&(*_self_)) > _1c968db24_as_i64(&_33021_x));
			}
		}
		else if (_1c969051b_is_u64(&(*_self_))) {
			_case_begin_1cb574233:;
			{
				return (_1c968d173_read_u64(&(*_self_)) > _1c968dd88_as_u64(&_33021_x));
			}
		}
		else if (_1c9690c58_is_f64(&(*_self_))) {
			_case_begin_1cb573e36:;
			{
				return (_1c968d8b0_read_f64(&(*_self_)) > _1c968e0ec_as_f64(&_33021_x));
			}
		}
		else {
			_case_begin_1cb5713d9:;
			{
				return false;
			}
		}
		_match_end_1cb57131d:;
	};
}



inline jule::Bool _1c969293b_gt_eq(_1c968bb88_Const* _self_, _1c968bb88_Const _35324_x) {
	{
		
		if (_1c96909e4_is_str(&(*_self_))) {
			_case_begin_1cb5770c1:;
			{
				return (_1c96909e4_is_str(&_35324_x) && (_1c968d64b_read_str(&(*_self_)) >= _1c968d64b_read_str(&_35324_x)));
			}
		}
		else if (_1c96902a7_is_i64(&(*_self_))) {
			_case_begin_1cb57718c:;
			{
				return (_1c968ce0e_read_i64(&(*_self_)) >= _1c968db24_as_i64(&_35324_x));
			}
		}
		else if (_1c969051b_is_u64(&(*_self_))) {
			_case_begin_1cb577203:;
			{
				return (_1c968d173_read_u64(&(*_self_)) >= _1c968dd88_as_u64(&_35324_x));
			}
		}
		else if (_1c9690c58_is_f64(&(*_self_))) {
			_case_begin_1cb576e06:;
			{
				return (_1c968d8b0_read_f64(&(*_self_)) >= _1c968e0ec_as_f64(&_35324_x));
			}
		}
		else {
			_case_begin_1cb5743a9:;
			{
				return false;
			}
		}
		_match_end_1cb5742dd:;
	};
}



inline jule::Bool _1c9692c49_add(_1c968bb88_Const* _self_, _1c968bb88_Const _37426_x) {
	{
		
		if (_1c96909e4_is_str(&(*_self_))) {
			_case_begin_1cb57a091:;
			{
				if ((!(_1c96909e4_is_str(&_37426_x)))) {
					return false;
				};
				_1c968eae2_set_str(&(*_self_), (_1c968d64b_read_str(&(*_self_)) + _1c968d64b_read_str(&_37426_x)));
			}
		}
		else if (_1c9690c58_is_f64(&(*_self_))) {
			_case_begin_1cb57a15c:;
			{
				_1c968ed67_set_f64(&(*_self_), static_cast<jule::F64>((_1c968d8b0_read_f64(&(*_self_)) + _1c968e0ec_as_f64(&_37426_x))));
			}
		}
		else if (_1c96902a7_is_i64(&(*_self_))) {
			_case_begin_1cb57a1c3:;
			{
				if (_1c9690c58_is_f64(&_37426_x)) {
					_1c968ed67_set_f64(&(*_self_), static_cast<jule::F64>((_1c968e0ec_as_f64(&(*_self_)) + _1c968d8b0_read_f64(&_37426_x))));
				} else {
					_1c968e372_set_i64(&(*_self_), static_cast<jule::I64>((_1c968ce0e_read_i64(&(*_self_)) + _1c968db24_as_i64(&_37426_x))));
				};
			}
		}
		else if (_1c969051b_is_u64(&(*_self_))) {
			_case_begin_1cb579dc6:;
			{
				if (_1c9690c58_is_f64(&_37426_x)) {
					_1c968ed67_set_f64(&(*_self_), static_cast<jule::F64>((_1c968e0ec_as_f64(&(*_self_)) + _1c968d8b0_read_f64(&_37426_x))));
				} else {
					_1c968e5e7_set_u64(&(*_self_), static_cast<jule::U64>((_1c968d173_read_u64(&(*_self_)) + _1c968dd88_as_u64(&_37426_x))));
				};
			}
		}
		else {
			_case_begin_1cb577379:;
			{
				return false;
			}
		}
		_match_end_1cb5772ad:;
	};
	return true;
}



inline jule::Bool _1c9693057_sub(_1c968bb88_Const* _self_, _1c968bb88_Const _40326_x) {
	{
		
		if (_1c9690c58_is_f64(&(*_self_))) {
			_case_begin_1cb580a03:;
			{
				_1c968ed67_set_f64(&(*_self_), static_cast<jule::F64>((_1c968d8b0_read_f64(&(*_self_)) - _1c968e0ec_as_f64(&_40326_x))));
			}
		}
		else if (_1c96902a7_is_i64(&(*_self_))) {
			_case_begin_1cb580ad0:;
			{
				if (_1c9690c58_is_f64(&_40326_x)) {
					_1c968ed67_set_f64(&(*_self_), static_cast<jule::F64>((_1c968e0ec_as_f64(&(*_self_)) - _1c968d8b0_read_f64(&_40326_x))));
				} else {
					_1c968e372_set_i64(&(*_self_), static_cast<jule::I64>((_1c968ce0e_read_i64(&(*_self_)) - _1c968db24_as_i64(&_40326_x))));
				};
			}
		}
		else if (_1c969051b_is_u64(&(*_self_))) {
			_case_begin_1cb580b46:;
			{
				if (_1c9690c58_is_f64(&_40326_x)) {
					_1c968ed67_set_f64(&(*_self_), static_cast<jule::F64>((_1c968e0ec_as_f64(&(*_self_)) - _1c968d8b0_read_f64(&_40326_x))));
				} else {
					_1c968e5e7_set_u64(&(*_self_), static_cast<jule::U64>((_1c968d173_read_u64(&(*_self_)) - _1c968dd88_as_u64(&_40326_x))));
				};
			}
		}
		else {
			_case_begin_1cb58041a:;
			{
				return false;
			}
		}
		_match_end_1cb57e9e1:;
	};
	return true;
}



inline jule::Bool _1c9693365_mul(_1c968bb88_Const* _self_, _1c968bb88_Const _42726_x) {
	{
		
		if (_1c9690c58_is_f64(&(*_self_))) {
			_case_begin_1cb58a1a0:;
			{
				_1c968ed67_set_f64(&(*_self_), static_cast<jule::F64>((_1c968d8b0_read_f64(&(*_self_)) * _1c968e0ec_as_f64(&_42726_x))));
			}
		}
		else if (_1c96902a7_is_i64(&(*_self_))) {
			_case_begin_1cb58a27c:;
			{
				if (_1c9690c58_is_f64(&_42726_x)) {
					_1c968ed67_set_f64(&(*_self_), static_cast<jule::F64>((_1c968e0ec_as_f64(&(*_self_)) * _1c968d8b0_read_f64(&_42726_x))));
				} else {
					_1c968e372_set_i64(&(*_self_), static_cast<jule::I64>((_1c968ce0e_read_i64(&(*_self_)) * _1c968db24_as_i64(&_42726_x))));
				};
			}
		}
		else if (_1c969051b_is_u64(&(*_self_))) {
			_case_begin_1cb58a2e3:;
			{
				if (_1c9690c58_is_f64(&_42726_x)) {
					_1c968ed67_set_f64(&(*_self_), static_cast<jule::F64>((_1c968e0ec_as_f64(&(*_self_)) * _1c968d8b0_read_f64(&_42726_x))));
				} else {
					_1c968e5e7_set_u64(&(*_self_), static_cast<jule::U64>((_1c968d173_read_u64(&(*_self_)) * _1c968dd88_as_u64(&_42726_x))));
				};
			}
		}
		else {
			_case_begin_1cb589ab7:;
			{
				return false;
			}
		}
		_match_end_1cb5891b0:;
	};
	return true;
}



inline jule::Bool _1c9693673_div(_1c968bb88_Const* _self_, _1c968bb88_Const _45526_x) {
	{
		
		if (_1c9690c58_is_f64(&(*_self_))) {
			_case_begin_1cb58e9e0:;
			{
				jule::F64 _45817_l = _1c968e0ec_as_f64(&_45526_x);;
				if ((_45817_l == 0LL)) {
					return false;
				};
				_1c968ed67_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(_1c968d8b0_read_f64(&(*_self_)),_45817_l)));
			}
		}
		else if (_1c96902a7_is_i64(&(*_self_))) {
			_case_begin_1cb58eabc:;
			{
				jule::F64 _46417_l = _1c968e0ec_as_f64(&_45526_x);;
				if ((_46417_l == 0LL)) {
					return false;
				};
				_1c968ed67_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(_1c968e0ec_as_f64(&(*_self_)),_46417_l)));
			}
		}
		else if (_1c969051b_is_u64(&(*_self_))) {
			_case_begin_1cb58eb33:;
			{
				jule::F64 _47017_l = _1c968e0ec_as_f64(&_45526_x);;
				if ((_47017_l == 0LL)) {
					return false;
				};
				_1c968ed67_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(_1c968e0ec_as_f64(&(*_self_)),_47017_l)));
			}
		}
		else {
			_case_begin_1cb58e407:;
			{
				return false;
			}
		}
		_match_end_1cb58da00:;
	};
	return true;
}



inline jule::Bool _1c9693981_mod(_1c968bb88_Const* _self_, _1c968bb88_Const _48426_x) {
	{
		
		if (_1c96902a7_is_i64(&(*_self_))) {
			_case_begin_1cb5940cc:;
			{
				jule::I64 _48717_l = _1c968db24_as_i64(&_48426_x);;
				if ((_48717_l == 0LL)) {
					return false;
				};
				_1c968e372_set_i64(&(*_self_), static_cast<jule::I64>(jule::mod(_1c968ce0e_read_i64(&(*_self_)),_48717_l)));
			}
		}
		else if (_1c969051b_is_u64(&(*_self_))) {
			_case_begin_1cb5941ba:;
			{
				jule::U64 _49317_l = _1c968dd88_as_u64(&_48426_x);;
				if ((_49317_l == 0LLU)) {
					return false;
				};
				_1c968e5e7_set_u64(&(*_self_), static_cast<jule::U64>(jule::mod(_1c968d173_read_u64(&(*_self_)),_49317_l)));
			}
		}
		else {
			_case_begin_1cb5939c2:;
			{
				return false;
			}
		}
		_match_end_1cb593906:;
	};
	return true;
}



inline jule::Bool _1c9693c8e_bitwise_and(_1c968bb88_Const* _self_, _1c968bb88_Const _50634_x) {
	{
		
		if (_1c96902a7_is_i64(&(*_self_))) {
			_case_begin_1cb597883:;
			{
				_1c968e372_set_i64(&(*_self_), static_cast<jule::I64>((_1c968ce0e_read_i64(&(*_self_)) & _1c968db24_as_i64(&_50634_x))));
			}
		}
		else if (_1c969051b_is_u64(&(*_self_))) {
			_case_begin_1cb597971:;
			{
				_1c968e5e7_set_u64(&(*_self_), static_cast<jule::U64>((_1c968d173_read_u64(&(*_self_)) & _1c968dd88_as_u64(&_50634_x))));
			}
		}
		else {
			_case_begin_1cb597278:;
			{
				return false;
			}
		}
		_match_end_1cb5971ac:;
	};
	return true;
}



inline jule::Bool _1c969409c_bitwise_or(_1c968bb88_Const* _self_, _1c968bb88_Const _52033_x) {
	{
		
		if (_1c96902a7_is_i64(&(*_self_))) {
			_case_begin_1cb59a1b0:;
			{
				_1c968e372_set_i64(&(*_self_), static_cast<jule::I64>((_1c968ce0e_read_i64(&(*_self_)) | _1c968db24_as_i64(&_52033_x))));
			}
		}
		else if (_1c969051b_is_u64(&(*_self_))) {
			_case_begin_1cb59a29d:;
			{
				_1c968e5e7_set_u64(&(*_self_), static_cast<jule::U64>((_1c968d173_read_u64(&(*_self_)) | _1c968dd88_as_u64(&_52033_x))));
			}
		}
		else {
			_case_begin_1cb599aa5:;
			{
				return false;
			}
		}
		_match_end_1cb5999d9:;
	};
	return true;
}



inline jule::Bool _1c96943aa_xor(_1c968bb88_Const* _self_, _1c968bb88_Const _53426_x) {
	{
		
		if (_1c96902a7_is_i64(&(*_self_))) {
			_case_begin_1cb59c9dc:;
			{
				_1c968e372_set_i64(&(*_self_), static_cast<jule::I64>((_1c968ce0e_read_i64(&(*_self_)) ^ _1c968db24_as_i64(&_53426_x))));
			}
		}
		else if (_1c969051b_is_u64(&(*_self_))) {
			_case_begin_1cb59caca:;
			{
				_1c968e5e7_set_u64(&(*_self_), static_cast<jule::U64>((_1c968d173_read_u64(&(*_self_)) ^ _1c968dd88_as_u64(&_53426_x))));
			}
		}
		else {
			_case_begin_1cb59c3d2:;
			{
				return false;
			}
		}
		_match_end_1cb59c316:;
	};
	return true;
}



inline jule::Bool _1c96946b8_lshift(_1c968bb88_Const* _self_, _1c968bb88_Const _54829_x) {
	{
		
		if (_1c96902a7_is_i64(&(*_self_))) {
			_case_begin_1cb5a0319:;
			{
				jule::I64 _55117_l = _1c968db24_as_i64(&(*_self_));;
				if ((_55117_l < 0LL)) {
					jule::U64 _55321_r = _1c968dd88_as_u64(&_54829_x);;
					_1c968e372_set_i64(&(*_self_), static_cast<jule::I64>((_55117_l << _55321_r)));
				} else {
					_1c9694d39_lshift_unsig((*_self_),_54829_x);
				};
			}
		}
		else if (_1c969051b_is_u64(&(*_self_))) {
			_case_begin_1cb5a0407:;
			{
				_1c9694d39_lshift_unsig((*_self_),_54829_x);
			}
		}
		else {
			_case_begin_1cb59ec0e:;
			{
				return false;
			}
		}
		_match_end_1cb59eb43:;
	};
	return true;
}



inline jule::Bool _1c96949c6_rshift(_1c968bb88_Const* _self_, _1c968bb88_Const _56829_x) {
	{
		
		if (_1c96902a7_is_i64(&(*_self_))) {
			_case_begin_1cb5a34b5:;
			{
				jule::I64 _57117_l = _1c968db24_as_i64(&(*_self_));;
				if ((_57117_l < 0LL)) {
					jule::U64 _57321_r = _1c968dd88_as_u64(&_56829_x);;
					_1c968e372_set_i64(&(*_self_), static_cast<jule::I64>((_57117_l >> _57321_r)));
				} else {
					_1c9695136_rshift_unsig((*_self_),_56829_x);
				};
			}
		}
		else if (_1c969051b_is_u64(&(*_self_))) {
			_case_begin_1cb5a35a3:;
			{
				_1c9695136_rshift_unsig((*_self_),_56829_x);
			}
		}
		else {
			_case_begin_1cb5a2daa:;
			{
				return false;
			}
		}
		_match_end_1cb5a2cde:;
	};
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1c968bb88_Const _Src) {
	_Stream << "Const{";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e434014b_FieldIns> _1e4338b39_instance(jule::Ptr<_1e43542c5_Field> _self_) {
	return jule::new_ptr<_1e434014b_FieldIns>(_1e434014b_FieldIns{._field_decl=_self_, });
}







std::ostream &operator<<(std::ostream &_Stream, _1e43542c5_Field _Src) {
	_Stream << "Field{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e434a783_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "eq:" << _Src._field_eq << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "gt_eq:" << _Src._field_gt_eq << ", ";
	_Stream << "lt:" << _Src._field_lt << ", ";
	_Stream << "lt_eq:" << _Src._field_lt_eq << ", ";
	_Stream << "shl:" << _Src._field_shl << ", ";
	_Stream << "shr:" << _Src._field_shr << ", ";
	_Stream << "add:" << _Src._field_add << ", ";
	_Stream << "sub:" << _Src._field_sub << ", ";
	_Stream << "div:" << _Src._field_div << ", ";
	_Stream << "mul:" << _Src._field_mul << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "bit_and:" << _Src._field_bit_and << ", ";
	_Stream << "bit_or:" << _Src._field_bit_or << ", ";
	_Stream << "bit_xor:" << _Src._field_bit_xor << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "bit_not:" << _Src._field_bit_not << ", ";
	_Stream << "add_assign:" << _Src._field_add_assign << ", ";
	_Stream << "sub_assign:" << _Src._field_sub_assign << ", ";
	_Stream << "div_assign:" << _Src._field_div_assign << ", ";
	_Stream << "mul_assign:" << _Src._field_mul_assign << ", ";
	_Stream << "mod_assign:" << _Src._field_mod_assign << ", ";
	_Stream << "shl_assign:" << _Src._field_shl_assign << ", ";
	_Stream << "shr_assign:" << _Src._field_shr_assign << ", ";
	_Stream << "bit_or_assign:" << _Src._field_bit_or_assign << ", ";
	_Stream << "bit_and_assign:" << _Src._field_bit_and_assign << ", ";
	_Stream << "bit_xor_assign:" << _Src._field_bit_xor_assign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e43462ea_StructIns> _1e4339101_instance(jule::Ptr<_1e43360cb_Struct> _self_) {
	if (((_self_.get()._field_generics.len() == 0LL) && (_self_.get()._field_instances.len() == 1LL))) {
		return _self_.get()._field_instances[0LL];
	};
	jule::Ptr<_1e43462ea_StructIns> _9917_ins = jule::new_ptr<_1e43462ea_StructIns>(_1e43462ea_StructIns{._field_decl=_self_, ._field_fields=jule::Slice<jule::Ptr<_1e434014b_FieldIns>>::alloc(0LL,_self_.get()._field_fields.len()), ._field_refers=static__1e438601b_new(), });;
	{
		auto &expr = _self_.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1cb70e236:;
		if (it != expr.end()) {
			jule::Ptr<_1e43542c5_Field> _10521_f = *it;
			{
				_9917_ins.get()._field_fields = jule::alloc_for_append(_9917_ins.get()._field_fields,1);_9917_ins.get()._field_fields.__push(_1e4338b39_instance(_10521_f));;
				if ((((!(_10521_f.get()._field_mutable)) && (_10521_f.get()._field_kind.get()._field_kind != nullptr)) && _1c9775a96_mutable(_10521_f.get()._field_kind.get()._field_kind.ptr()))) {
					_9917_ins.get()._field_mutable=true;
				};
			}
			_iter_next_1cb70e236:;
			++it;
			goto _iter_begin_1cb70e236;
		}
		_iter_end_1cb70e236:;
	};
	if ((_self_.get()._field_generics.len() == 0LL)) {
		_9917_ins.get()._field_methods=_self_.get()._field_methods;
	} else {
		_9917_ins.get()._field_methods=jule::Slice<jule::Ptr<_1e4380576_Fn>>::alloc(0LL,_self_.get()._field_methods.len());
		{
			auto &expr = _self_.get()._field_methods;
			auto it = expr.begin();
			_iter_begin_1cb712415:;
			if (it != expr.end()) {
				jule::Ptr<_1e4380576_Fn> _11625_f = *it;
				{
					jule::Ptr<_1e4380576_Fn> _11725_fins = jule::new_ptr<_1e4380576_Fn>((*(_11625_f)));;
					_11725_fins.get()._field_instances=nullptr;
					_9917_ins.get()._field_methods = jule::alloc_for_append(_9917_ins.get()._field_methods,1);_9917_ins.get()._field_methods.__push(_11725_fins);;
				}
				_iter_next_1cb712415:;
				++it;
				goto _iter_begin_1cb712415;
			}
			_iter_end_1cb712415:;
		};
	};
	return _9917_ins;
}



inline jule::Ptr<_1e43462ea_StructIns> _1e433a6b8_append_instance(_1e43360cb_Struct* _self_, jule::Ptr<_1e43462ea_StructIns>& _12839_ins) {
	if ((((*_self_)._field_generics.len() == 0LL) && ((*_self_)._field_instances.len() == 1LL))) {
		return (*_self_)._field_instances[0LL];
	};
	{
		auto &expr = (*_self_)._field_instances;
		auto it = expr.begin();
		_iter_begin_1cb714ca8:;
		if (it != expr.end()) {
			jule::Ptr<_1e43462ea_StructIns> _13421_ains = *it;
			{
				if (_1e4356470_same(_13421_ains.ptr(), _12839_ins)) {
					return _13421_ains;
				};
			}
			_iter_next_1cb714ca8:;
			++it;
			goto _iter_begin_1cb714ca8;
		}
		_iter_end_1cb714ca8:;
	};
	(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_12839_ins);;
	return nullptr;
}



inline jule::Ptr<_1e4380576_Fn> _1e433b71e_find_method(_1e43360cb_Struct* _self_, jule::Str _14634_ident, jule::Bool _14646_statically) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1cb7170a7:;
		if (it != expr.end()) {
			jule::Ptr<_1e4380576_Fn> _14721_f = *it;
			{
				if (((_14721_f.get()._field_statically == _14646_statically) && (_14721_f.get()._field_ident == _14634_ident))) {
					return _14721_f;
				};
			}
			_iter_next_1cb7170a7:;
			++it;
			goto _iter_begin_1cb7170a7;
		}
		_iter_end_1cb7170a7:;
	};
	return nullptr;
}



inline jule::Ptr<_1e46c6eb6_Var> _1e433ce90_find_static(_1e43360cb_Struct* _self_, jule::Str _15734_ident) {
	{
		auto &expr = (*_self_)._field_statics;
		auto it = expr.begin();
		_iter_begin_1cb7187e5:;
		if (it != expr.end()) {
			jule::Ptr<_1e46c6eb6_Var> _15821_v = *it;
			{
				if ((_15821_v.get()._field_ident == _15734_ident)) {
					return _15821_v;
				};
			}
			_iter_next_1cb7187e5:;
			++it;
			goto _iter_begin_1cb7187e5;
		}
		_iter_end_1cb7187e5:;
	};
	return nullptr;
}



inline jule::Ptr<_1e43542c5_Field> _1e433e17d_find_field(_1e43360cb_Struct* _self_, jule::Str _16833_ident) {
	{
		auto &expr = (*_self_)._field_fields;
		auto it = expr.begin();
		_iter_begin_1cb719c58:;
		if (it != expr.end()) {
			jule::Ptr<_1e43542c5_Field> _16921_f = *it;
			{
				if ((_16921_f.get()._field_ident == _16833_ident)) {
					return _16921_f;
				};
			}
			_iter_next_1cb719c58:;
			++it;
			goto _iter_begin_1cb719c58;
		}
		_iter_end_1cb719c58:;
	};
	return nullptr;
}



inline jule::Bool _1e4340a75_is_implements(_1e43360cb_Struct* _self_, jule::Ptr<_1e43d8d0a_Trait> _17832_t) {
	{
		auto &expr = (*_self_)._field_implements;
		auto it = expr.begin();
		_iter_begin_1cb71b1bb:;
		if (it != expr.end()) {
			jule::Ptr<_1e43d8d0a_Trait> &_17916_it = *it;
			{
				if ((_17832_t == _17916_it)) {
					return true;
				};
			}
			_iter_next_1cb71b1bb:;
			++it;
			goto _iter_begin_1cb71b1bb;
		}
		_iter_end_1cb71b1bb:;
	};
	return false;
}



inline jule::Bool _1e433ab2a_is_derives(_1e43360cb_Struct* _self_, jule::Str _18829_ident) {
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_1cb71c530:;
		if (it != expr.end()) {
			jule::Ptr<_1e43620c4_Directive> &_18916_d = *it;
			{
				if ((_18916_d.get()._field_tag.get()._field_kind == jule::Str("derive", 6))) {
					if (((_18916_d.get()._field_args.len() == 1LL) && (_18916_d.get()._field_args[0LL].get()._field_kind == _18829_ident))) {
						return true;
					};
				};
			}
			_iter_next_1cb71c530:;
			++it;
			goto _iter_begin_1cb71c530;
		}
		_iter_end_1cb71c530:;
	};
	return false;
}



inline jule::Bool _1e43484a6_is_uses(_1e43360cb_Struct* _self_, jule::Ptr<_1e43360cb_Struct> _20026_s) {
	{
		auto &expr = (*_self_)._field_uses;
		auto it = expr.begin();
		_iter_begin_1cb71e82e:;
		if (it != expr.end()) {
			jule::Ptr<_1e43360cb_Struct> &_20116_u = *it;
			{
				while ((_20026_s == _20116_u)) {
					{
						return true;
					}
				_iter_next_1cb71ee06:;
				}
				_iter_end_1cb71ee06:;;
			}
			_iter_next_1cb71e82e:;
			++it;
			goto _iter_begin_1cb71e82e;
		}
		_iter_end_1cb71e82e:;
	};
	return false;
}



inline jule::Bool _1e434a530_has_ref_accessible(_1e43360cb_Struct* _self_) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1cb720885:;
		if (it != expr.end()) {
			jule::Ptr<_1e4380576_Fn> &_21116_m = *it;
			{
				if (((_21116_m.get()._field_params.len() > 0LL) && _1e4355edb_is_ref(_21116_m.get()._field_params[0LL].ptr()))) {
					return true;
				};
			}
			_iter_next_1cb720885:;
			++it;
			goto _iter_begin_1cb720885;
		}
		_iter_end_1cb720885:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1e43360cb_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "depends:" << _Src._field_depends << ", ";
	_Stream << "uses:" << _Src._field_uses << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "implements:" << _Src._field_implements << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e434014b_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4347a8d_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e435a8e7_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e435972b_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e433773c_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e433b004_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "strct:" << _Src._field_strct << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4331d63_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "lit:" << _Src._field_lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e434e7dc_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4354902_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "is_co:" << _Src._field_is_co << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "except:" << _Src._field_except << ", ";
	_Stream << "assigned:" << _Src._field_assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4354ade_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "elem_kind:" << _Src._field_elem_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e437b31e_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e437b50b_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "global:" << _Src._field_global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e437b6e8_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e437b8d5_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "key_kind:" << _Src._field_key_kind << ", ";
	_Stream << "val_kind:" << _Src._field_val_kind << ", ";
	_Stream << "entries:" << _Src._field_entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e437bac2_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e437bcae_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "trt:" << _Src._field_trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e437c1cc_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "field:" << _Src._field_field;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e437c3b9_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "structure:" << _Src._field_structure << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e437c5a6_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e437c793_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e437c980_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e437cb6c_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "datas:" << _Src._field_datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e437cd59_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "debug:" << _Src._field_debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e437d046_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "debug:" << _Src._field_debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e437d233_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e437d420_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "init:" << _Src._field_init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e437d60c_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e437d7e9_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "log:" << _Src._field_log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e437d9d6_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "len:" << _Src._field_len << ", ";
	_Stream << "cap:" << _Src._field_cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e437dbc3_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elements:" << _Src._field_elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e437ddb0_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e437e09c_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e437be9b_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e437e70c_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e437e8e9_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "code:" << _Src._field_code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e437ead6_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e437ecc3_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "code:" << _Src._field_code << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e437eeb0_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e438019c_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e438217c_ParamIns> _1e434145a_instance(jule::Ptr<_1e4380389_Param> _self_) {
	return jule::new_ptr<_1e438217c_ParamIns>(_1e438217c_ParamIns{._field_decl=_self_, });
}



inline jule::Bool _1e435279b_is_self(_1e4380389_Param* _self_) {
	return (((*_self_)._field_ident == jule::Str("&self", 5)) || ((*_self_)._field_ident == jule::Str("self", 4)));
}



inline jule::Bool _1e4355edb_is_ref(_1e4380389_Param* _self_) {
	return ((!((*_self_)._field_ident.empty())) && ((*_self_)._field_ident[0LL] == '&'));
}







std::ostream &operator<<(std::ostream &_Stream, _1e4380389_Param _Src) {
	_Stream << "Param{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e43807c9_is_void(_1e4380576_Fn* _self_) {
	return ((*_self_)._field_result == nullptr);
}



inline jule::Bool _1e4380a3d_is_method(_1e4380576_Fn* _self_) {
	return ((*_self_)._field_owner != nullptr);
}



inline jule::Bool _1e4380ca2_is_entry_point(_1e4380576_Fn* _self_) {
	return ((*_self_)._field_ident == jule::Str("main", 4));
}



inline jule::Bool _1e4381016_is_init(_1e4380576_Fn* _self_) {
	return ((*_self_)._field_ident == jule::Str("init", 4));
}



inline jule::Bool _1e438127a_is_anon(_1e4380576_Fn* _self_) {
	return _20cda21e4_is_anon_ident((*_self_)._field_ident);
}



inline jule::Bool _1e43814de_any_var(_1e4380576_Fn* _self_) {
	return (((*_self_)._field_result != nullptr) && ((*_self_)._field_result.get()._field_idents.len() > 0LL));
}



inline jule::Ptr<_1e4383018_FnIns> _1e4381753_instance_force(jule::Ptr<_1e4380576_Fn> _self_) {
	jule::Ptr<_1e4383018_FnIns> _10017_ins = jule::new_ptr<_1e4383018_FnIns>(_1e4383018_FnIns{._field_decl=_self_, ._field_scope=jule::new_ptr<_1e46862c7_Scope>(), ._field_refers=static__1e438601b_new(), });;
	_10017_ins.get()._field_params=jule::Slice<jule::Ptr<_1e438217c_ParamIns>>::alloc(0LL,_self_.get()._field_params.len());
	{
		auto &expr = _self_.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1cb7379ac:;
		if (it != expr.end()) {
			jule::Ptr<_1e4380389_Param> _10721_p = *it;
			{
				_10017_ins.get()._field_params = jule::alloc_for_append(_10017_ins.get()._field_params,1);_10017_ins.get()._field_params.__push(_1e434145a_instance(_10721_p));;
			}
			_iter_next_1cb7379ac:;
			++it;
			goto _iter_begin_1cb7379ac;
		}
		_iter_end_1cb7379ac:;
	};
	if ((_10017_ins.get()._field_decl.get()._field_result != nullptr)) {
		_10017_ins.get()._field_result=_10017_ins.get()._field_decl.get()._field_result.get()._field_kind.get()._field_kind;
	};
	return _10017_ins;
}



inline jule::Ptr<_1e4383018_FnIns> _1e43819b7_instance(jule::Ptr<_1e4380576_Fn> _self_) {
	if (((_self_.get()._field_generics.len() == 0LL) && (_self_.get()._field_instances.len() == 1LL))) {
		return _self_.get()._field_instances[0LL];
	};
	return _1e4381753_instance_force(_self_);
}



inline jule::Ptr<_1e4383018_FnIns> _1e4381cc5_append_instance(_1e4380576_Fn* _self_, jule::Ptr<_1e4383018_FnIns>& _12839_ins) {
	if (((*_self_)._field_generics.len() == 0LL)) {
		if (((*_self_)._field_instances.len() == 1LL)) {
			return (*_self_)._field_instances[0LL];
		};
		(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_12839_ins);;
		return nullptr;
	};
	if (((*_self_)._field_instances.len() == 0LL)) {
		(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_12839_ins);;
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_instances;
		auto it = expr.begin();
		_iter_begin_1cb73d045:;
		if (it != expr.end()) {
			jule::Ptr<_1e4383018_FnIns> _14421_ains = *it;
			{
				if (_1e4384316_same(_14421_ains.ptr(), _12839_ins)) {
					return _14421_ains;
				};
			}
			_iter_next_1cb73d045:;
			++it;
			goto _iter_begin_1cb73d045;
		}
		_iter_end_1cb73d045:;
	};
	(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_12839_ins);;
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4380576_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "exceptional:" << _Src._field_exceptional << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e4382556_to_str(_1e438217c_ParamIns* _self_) {
	jule::Str _16617_s = jule::Str();;
	if ((*_self_)._field_decl.get()._field_mutable) {
		_16617_s+=jule::Str("mut ", 4);
	};
	if ((*_self_)._field_decl.get()._field_reference) {
		_16617_s+=jule::Str("&_:", 3);
	};
	if (_1e435279b_is_self((*_self_)._field_decl.ptr())) {
		if (_1e4355edb_is_ref((*_self_)._field_decl.ptr())) {
			_16617_s+=jule::Str("&", 1);
		};
		_16617_s+=jule::Str("self", 4);
		return _16617_s;
	};
	if ((*_self_)._field_decl.get()._field_variadic) {
		_16617_s+=jule::Str("...", 3);
	};
	if (((*_self_)._field_kind != nullptr)) {
		_16617_s+=_1c9774aa6_to_str((*_self_)._field_kind.ptr());
	};
	return _16617_s;
}







std::ostream &operator<<(std::ostream &_Stream, _1e438217c_ParamIns _Src) {
	_Stream << "ParamIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e438337b_to_str(_1e4383018_FnIns* _self_) {
	;
	return _1e4384624_get_kind_str(&(*_self_), false);
}



inline jule::Bool _1e4383689_equals(jule::Ptr<_1e4383018_FnIns> _self_, jule::Ptr<_1c97746ee_TypeKind> _21726_other) {
	jule::Ptr<_1e4383018_FnIns> _21813_f = _1c9777735_fnc(_21726_other.ptr());;
	if ((_21813_f == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_decl.get()._field_exceptional != _21813_f.get()._field_decl.get()._field_exceptional)) {
		return false;
	};
	if ((_self_.get()._field_decl.get()._field_unsafety != _21813_f.get()._field_decl.get()._field_unsafety)) {
		return false;
	};
	if ((_self_.get()._field_generics.len() != _21813_f.get()._field_generics.len())) {
		return false;
	};
	if ((_1e43807c9_is_void(_self_.get()._field_decl.ptr()) != _1e43807c9_is_void(_21813_f.get()._field_decl.ptr()))) {
		return false;
	};
	jule::I64 _23917_i = 0LL;;
	for (; (_23917_i < _self_.get()._field_generics.len()); (_23917_i)++) {
		{
			if ((!(_1c9774db4_equals(_self_.get()._field_generics[_23917_i], _21813_f.get()._field_generics[_23917_i])))) {
				return false;
			};
		}
	_iter_next_1cb745d94:;
	}
	_iter_end_1cb745d94:;;
	jule::Fn<jule::Bool(jule::Ptr<_1e438217c_ParamIns>,jule::Ptr<_1e438217c_ParamIns>)> _24613_check_params = jule::Fn<jule::Bool(jule::Ptr<_1e438217c_ParamIns>,jule::Ptr<_1e438217c_ParamIns>)>([=](jule::Ptr<_1e438217c_ParamIns> _24631_p1, jule::Ptr<_1e438217c_ParamIns> _24646_p2) mutable -> jule::Bool {
		if ((_24631_p1.get()._field_decl.get()._field_mutable != _24646_p2.get()._field_decl.get()._field_mutable)) {
			return false;
		};
		if (_1e435279b_is_self(_24631_p1.get()._field_decl.ptr())) {
			if ((!(_1e435279b_is_self(_24646_p2.get()._field_decl.ptr())))) {
				return false;
			};
			if ((_1e4355edb_is_ref(_24631_p1.get()._field_decl.ptr()) != _1e4355edb_is_ref(_24646_p2.get()._field_decl.ptr()))) {
				return false;
			};
			return true;
		};
		if ((_24631_p1.get()._field_decl.get()._field_reference != _24646_p2.get()._field_decl.get()._field_reference)) {
			return false;
		};
		if ((_24631_p1.get()._field_decl.get()._field_variadic != _24646_p2.get()._field_decl.get()._field_variadic)) {
			return false;
		};
		return _1c9774db4_equals(_24631_p1.get()._field_kind, _24646_p2.get()._field_kind);
	});;
	if ((_21813_f.get()._field_params.len() != _self_.get()._field_params.len())) {
		return false;
	};
	_23917_i=0LL;
	for (; (_23917_i < _self_.get()._field_params.len()); (_23917_i)++) {
		{
			if ((!(_24613_check_params(_self_.get()._field_params[_23917_i],_21813_f.get()._field_params[_23917_i])))) {
				return false;
			};
		}
	_iter_next_1cb74d63d:;
	}
	_iter_end_1cb74d63d:;;
	if ((!(_1e43807c9_is_void(_self_.get()._field_decl.ptr())))) {
		if ((!(_1c9774db4_equals(_self_.get()._field_result, _21813_f.get()._field_result)))) {
			return false;
		};
	};
	return true;
}



inline jule::Slice<jule::Ptr<_1c97746ee_TypeKind>> _1e4383a30_types(_1e4383018_FnIns* _self_) {
	{
		
		if (((*_self_)._field_result == nullptr)) {
			_case_begin_1cb750e8c:;
			{
				return nullptr;
			}
		}
		else if ((_1c97781d6_tup((*_self_)._field_result.ptr()) == nullptr)) {
			_case_begin_1cb751003:;
			{
				return jule::Slice<jule::Ptr<_1c97746ee_TypeKind>>::make({(*_self_)._field_result});
			}
		}
		else {
			_case_begin_1cb750e26:;
			{
				return _1c97781d6_tup((*_self_)._field_result.ptr()).get()._field_types;
			}
		}
		_match_end_1cb750d5a:;
	};
}



inline jule::Bool _1e4383c94_is_builtin(_1e4383018_FnIns* _self_) {
	return ((*_self_)._field_caller != nullptr);
}



inline jule::Bool _1e4384008_is_anon(_1e4383018_FnIns* _self_) {
	return ((*_self_)._field_anon || (((*_self_)._field_decl != nullptr) && _1e438127a_is_anon((*_self_)._field_decl.ptr())));
}



inline jule::Bool _1e4384316_same(_1e4383018_FnIns* _self_, jule::Ptr<_1e4383018_FnIns> _32323_f) {
	if ((((*_self_)._field_decl != _32323_f.get()._field_decl) || (_32323_f.get()._field_generics.len() != (*_self_)._field_generics.len()))) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_generics;
		auto it = expr.begin();
		_iter_begin_1cb755678:;
		if (it != expr.end()) {
			jule::I64 _32813_i = it - expr.begin();
			jule::Ptr<_1c97746ee_TypeKind> &_32816_g = *it;
			{
				if ((!(_1c9774db4_equals(_32816_g, _32323_f.get()._field_generics[_32813_i])))) {
					return false;
				};
			}
			_iter_next_1cb755678:;
			++it;
			_32813_i++;
			goto _iter_begin_1cb755678;
		}
		_iter_end_1cb755678:;
	};
	return true;
}



inline jule::Str _1e4384624_get_kind_str(_1e4383018_FnIns* _self_, jule::Bool _33931_ident) {
	jule::Str _34017_s = jule::Str();;
	if ((*_self_)._field_decl.get()._field_unsafety) {
		_34017_s+=jule::Str("unsafe ", 7);
	};
	_34017_s+=jule::Str("fn", 2);
	if ((_33931_ident && ((*_self_)._field_decl != nullptr))) {
		_34017_s+=(jule::Str(" ", 1) + (*_self_)._field_decl.get()._field_ident);
	};
	if (((*_self_)._field_generics.len() > 0LL)) {
		_34017_s+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_generics;
			auto it = expr.begin();
			_iter_begin_1cb758a11:;
			if (it != expr.end()) {
				jule::I64 _35417_i = it - expr.begin();
				jule::Ptr<_1c97746ee_TypeKind> &_35420_t = *it;
				{
					_34017_s+=_1c9774aa6_to_str(_35420_t.ptr());
					if (((_35417_i + 1LL) < (*_self_)._field_generics.len())) {
						_34017_s+=jule::Str(",", 1);
					};
				}
				_iter_next_1cb758a11:;
				++it;
				_35417_i++;
				goto _iter_begin_1cb758a11;
			}
			_iter_end_1cb758a11:;
		};
		_34017_s+=jule::Str("]", 1);
	} else if (((*_self_)._field_decl.get()._field_generics.len() > 0LL)) {
		_34017_s+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_decl.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1cb75a77c:;
			if (it != expr.end()) {
				jule::I64 _36317_i = it - expr.begin();
				jule::Ptr<_1e436d50e_GenericDecl> &_36320_g = *it;
				{
					_34017_s+=_36320_g.get()._field_ident;
					if (((_36317_i + 1LL) < (*_self_)._field_decl.get()._field_generics.len())) {
						_34017_s+=jule::Str(",", 1);
					};
				}
				_iter_next_1cb75a77c:;
				++it;
				_36317_i++;
				goto _iter_begin_1cb75a77c;
			}
			_iter_end_1cb75a77c:;
		};
		_34017_s+=jule::Str("]", 1);
	};
	_34017_s+=jule::Str("(", 1);
	jule::I64 _37313_n = (*_self_)._field_params.len();;
	if ((_37313_n > 0LL)) {
		{
			auto &expr = (*_self_)._field_params;
			auto it = expr.begin();
			_iter_begin_1cb75cad1:;
			if (it != expr.end()) {
				jule::Ptr<_1e438217c_ParamIns> &_37520_p = *it;
				{
					_34017_s+=_1e4382556_to_str(_37520_p.ptr());
					_34017_s+=jule::Str(",", 1);
				}
				_iter_next_1cb75cad1:;
				++it;
				goto _iter_begin_1cb75cad1;
			}
			_iter_end_1cb75cad1:;
		};
		(_34017_s).mut_slice(0LL,(_34017_s.len() - 1LL));;
	};
	_34017_s+=jule::Str(")", 1);
	if ((*_self_)._field_decl.get()._field_exceptional) {
		_34017_s+=jule::Str("!", 1);
	};
	if ((!(_1e43807c9_is_void((*_self_)._field_decl.ptr())))) {
		_34017_s+=jule::Str(":", 1);
		_34017_s+=_1c9774aa6_to_str((*_self_)._field_result.ptr());
	};
	return _34017_s;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4383018_FnIns _Src) {
	_Stream << _1e438337b_to_str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1e4385c0d_ReferenceStack> static__1e438601b_new(void) {
	return jule::new_ptr<_1e4385c0d_ReferenceStack>(_1e4385c0d_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL,10LL)});
}



inline jule::I64 _1e43863a1_len(_1e4385c0d_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*_self_)._field_buffer.len());
}



inline jule::Any _1e43866ae_at(_1e4385c0d_ReferenceStack* _self_, jule::I64 _6025_i) {
	return jule::Any((*_self_)._field_buffer[_6025_i]);
}



inline void _1e4386934_push(_1e4385c0d_ReferenceStack* _self_, jule::Any _6531_ref) {
	(*_self_)._field_buffer = jule::alloc_for_append((*_self_)._field_buffer,1);(*_self_)._field_buffer.__push(jule::Any(_6531_ref));;
}



inline jule::Bool _1cb92411b_exist(_1e4385c0d_ReferenceStack* _self_, jule::Ptr<_1e4383018_FnIns> _7027_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1cb92533c:;
		if (it != expr.end()) {
			jule::Any &_7116_ref = *it;
			{
				if ((_7116_ref == _7027_t)) {
					return true;
				};
			}
			_iter_next_1cb92533c:;
			++it;
			goto _iter_begin_1cb92533c;
		}
		_iter_end_1cb92533c:;
	};
	return false;
}

inline jule::Bool _1cb93ab7c_exist(_1e4385c0d_ReferenceStack* _self_, jule::Ptr<_1e46c6eb6_Var> _7027_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1cb93bd59:;
		if (it != expr.end()) {
			jule::Any &_7116_ref = *it;
			{
				if ((_7116_ref == _7027_t)) {
					return true;
				};
			}
			_iter_next_1cb93bd59:;
			++it;
			goto _iter_begin_1cb93bd59;
		}
		_iter_end_1cb93bd59:;
	};
	return false;
}

inline jule::Bool _1cc1b9d01_exist(_1e4385c0d_ReferenceStack* _self_, jule::Ptr<_1e43462ea_StructIns> _7027_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1cc1bb022:;
		if (it != expr.end()) {
			jule::Any &_7116_ref = *it;
			{
				if ((_7116_ref == _7027_t)) {
					return true;
				};
			}
			_iter_next_1cc1bb022:;
			++it;
			goto _iter_begin_1cc1bb022;
		}
		_iter_end_1cc1bb022:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4385c0d_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e43870e9_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e438ab9c_SymbolBuilder> _1e438b263_get_root(jule::Ptr<_1e438ab9c_SymbolBuilder> _self_) {
	jule::Ptr<_1e438ab9c_SymbolBuilder> _28317_root = _self_;;
	while ((_28317_root.get()._field_owner != nullptr)) {
		{
			_28317_root=_28317_root.get()._field_owner;
		}
	_iter_next_1cb763048:;
	}
	_iter_end_1cb763048:;;
	return _28317_root;
}



inline void _1e438b62b_push_err(_1e438ab9c_SymbolBuilder* _self_, jule::Ptr<_20cd9e6ec_Token>& _29028_token, jule::Str _29043_fmt, jule::Slice<jule::Any> _29056_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1e46aaab0_compiler_err(_29028_token,true,_29043_fmt,jule::Any(_29056_args)));;
}



inline void _1e438b9e4_push_err_text(_1e438ab9c_SymbolBuilder* _self_, jule::Ptr<_20cd9e6ec_Token>& _29433_token, jule::Str _29448_fmt, jule::Slice<jule::Any> _29461_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1e46aaab0_compiler_err(_29433_token,false,_29448_fmt,jule::Any(_29461_args)));;
}



inline void _1e438bd13_push_suggestion(_1e438ab9c_SymbolBuilder* _self_, jule::Str _29934_fmt, jule::Slice<jule::Any> _29947_args) {
	{
		_1e46abebd_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_29934_fmt,jule::Any(_29947_args));
	};
}



inline jule::Bool _1e438c1dc_check_cpp_use_decl_path(_1e438ab9c_SymbolBuilder* _self_, jule::Ptr<_1e43778e2_UseDecl>& _30343_decl, jule::Str _30359_path) {
	jule::Bool _30372_ok = jule::Bool();
	jule::Str _30413_ext = _20b972bd9_ext(_30359_path);;
	if (((!(_20ca834be_is_valid_header_ext(_30413_ext))) && (!(_20ca83766_is_valid_cpp_ext(_30413_ext))))) {
		_1e438b62b_push_err(&(*_self_), _30343_decl.get()._field_token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>::make({jule::Any(_30413_ext)}));
		_30372_ok = false;
		return _30372_ok;
	};
	jule::Ptr<_2253b6d95_Status> _31113_info = ({
		auto except = static__20b8a3642_of(_30359_path);
		(except.ok()) ? (except.result) : ({{
			_1e438b62b_push_err(&(*_self_), _30343_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_30343_decl.get()._field_link_path)}));
			_30372_ok = false;
			return _30372_ok;
		} jule::Ptr<_2253b6d95_Status>();});
	});;
	if (_2252e2012_is_dir(_31113_info.ptr())) {
		_1e438b62b_push_err(&(*_self_), _30343_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_30343_decl.get()._field_link_path)}));
		_30372_ok = false;
		return _30372_ok;
	};
	_30372_ok = true;
	return _30372_ok;
}



inline jule::Ptr<_1e46a4768_ImportInfo> _1e438c4ea_build_cpp_header_import(_1e438ab9c_SymbolBuilder* _self_, jule::Ptr<_1e43778e2_UseDecl>& _32347_decl) {
	jule::Str _32417_path = _32347_decl.get()._field_link_path;;
	if ((!(_20ca83337_is_std_header_path(_32347_decl.get()._field_link_path)))) {
		_32417_path=_20b961436_join(jule::Slice<jule::Str>::make({_20cda54d3_dir(_32347_decl.get()._field_token.get()._field_file.ptr()),_32347_decl.get()._field_link_path}));
		jule::Bool _32821_ok = _1e438c1dc_check_cpp_use_decl_path(&(*_self_), _32347_decl,_32417_path);;
		if ((!(_32821_ok))) {
			return nullptr;
		};
		std::tie(_32417_path,_32821_ok) = _20b9737ab_abs(_32417_path);
		if ((!(_32821_ok))) {
			_1e438b62b_push_err(&(*_self_), _32347_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_32347_decl.get()._field_link_path)}));
		};
	};
	return jule::new_ptr<_1e46a4768_ImportInfo>(_1e46a4768_ImportInfo{._field_token=_32347_decl.get()._field_token, ._field_path=_32417_path, ._field_link_path=_32347_decl.get()._field_link_path, ._field_ident=jule::Str(), ._field_cpp_linked=true, ._field_std=false, ._field_package=nullptr, });
}



inline jule::Ptr<_1e46a4768_ImportInfo> _1e438c819_build_std_import(_1e438ab9c_SymbolBuilder* _self_, jule::Ptr<_1e43778e2_UseDecl>& _35140_decl) {
	jule::Str _35217_path = _35140_decl.get()._field_link_path.slice(5LL);;
	_35217_path=_20c82d0b0_replace(_35217_path,jule::Str("::", 2),static_cast<jule::Str>(92LL),-1LL);
	_35217_path=_20b961436_join(jule::Slice<jule::Str>::make({_20caa3654_PATH_STDLIB,_35217_path}));
	jule::Bool _35520_ok;;
	std::tie(_35217_path,_35520_ok) = _20b9737ab_abs(_35217_path);
	if ((!(_35520_ok))) {
		_1e438b62b_push_err(&(*_self_), _35140_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_35140_decl.get()._field_link_path)}));
		return nullptr;
	};
	jule::Ptr<_2253b6d95_Status> _36213_info = ({
		auto except = static__20b8a3642_of(_35217_path);
		(except.ok()) ? (except.result) : ({{
			_1e438b62b_push_err(&(*_self_), _35140_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_35140_decl.get()._field_link_path)}));
			return nullptr;
		} jule::Ptr<_2253b6d95_Status>();});
	});;
	if ((!(_2252e2012_is_dir(_36213_info.ptr())))) {
		_1e438b62b_push_err(&(*_self_), _35140_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_35140_decl.get()._field_link_path)}));
		return nullptr;
	};
	jule::I64 _37213_i = (_20b9a4b2d_find_last(_35140_decl.get()._field_link_path,jule::Str("::", 2)) + 1LL);;
	jule::Str _37313_ident = _35140_decl.get()._field_link_path.slice(_37213_i);;
	return jule::new_ptr<_1e46a4768_ImportInfo>(_1e46a4768_ImportInfo{._field_token=_35140_decl.get()._field_token, ._field_path=_35217_path, ._field_link_path=_35140_decl.get()._field_link_path, ._field_ident=_37313_ident, ._field_alias=_35140_decl.get()._field_alias, ._field_cpp_linked=false, ._field_std=true, ._field_import_all=_35140_decl.get()._field_full, ._field_package=jule::new_ptr<_1e46a742a_Package>(_1e46a742a_Package{._field_files=nullptr}), });
}



inline jule::Ptr<_1e46a4768_ImportInfo> _1e438cb27_build_ident_import(jule::Ptr<_1e438ab9c_SymbolBuilder> _self_, jule::Ptr<_1e43778e2_UseDecl>& _39043_decl) {
	jule::Str _39113_mod_path = _1e46a2403_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e46a1567_get_mod_path(_self_.get()._field_importer);;
	if ((_39113_mod_path.len() == 0LL)) {
		_1e438b62b_push_err(_self_.ptr(), _39043_decl.get()._field_token,jule::Str("no module file found in current directory or any parent directory", 65),jule::Slice<jule::Any>());
		_1e438bd13_push_suggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Str _39817_path = _39043_decl.get()._field_link_path;;
	_39817_path=_20c82d0b0_replace(_39817_path,jule::Str("::", 2),static_cast<jule::Str>(92LL),-1LL);
	_39817_path=_20b961436_join(jule::Slice<jule::Str>::make({_39113_mod_path,_39817_path}));
	jule::Bool _40220_ok;;
	std::tie(_39817_path,_40220_ok) = _20b9737ab_abs(_39817_path);
	if ((!(_40220_ok))) {
		_1e438b62b_push_err(_self_.ptr(), _39043_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_39043_decl.get()._field_link_path)}));
		return nullptr;
	};
	jule::Ptr<_2253b6d95_Status> _40913_info = ({
		auto except = static__20b8a3642_of(_39817_path);
		(except.ok()) ? (except.result) : ({{
			_1e438b62b_push_err(_self_.ptr(), _39043_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_39043_decl.get()._field_link_path)}));
			return nullptr;
		} jule::Ptr<_2253b6d95_Status>();});
	});;
	if ((!(_2252e2012_is_dir(_40913_info.ptr())))) {
		_1e438b62b_push_err(_self_.ptr(), _39043_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_39043_decl.get()._field_link_path)}));
		return nullptr;
	};
	jule::I64 _41913_i = (_20b9a4b2d_find_last(_39043_decl.get()._field_link_path,jule::Str("::", 2)) + 1LL);;
	jule::Str _42013_ident = _39043_decl.get()._field_link_path.slice(_41913_i);;
	return jule::new_ptr<_1e46a4768_ImportInfo>(_1e46a4768_ImportInfo{._field_token=_39043_decl.get()._field_token, ._field_path=_39817_path, ._field_link_path=_39043_decl.get()._field_link_path, ._field_ident=_42013_ident, ._field_alias=_39043_decl.get()._field_alias, ._field_cpp_linked=false, ._field_std=false, ._field_import_all=_39043_decl.get()._field_full, ._field_package=jule::new_ptr<_1e46a742a_Package>(_1e46a742a_Package{._field_files=nullptr}), });
}



inline jule::Ptr<_1e46a4768_ImportInfo> _1e438ce35_build_import(jule::Ptr<_1e438ab9c_SymbolBuilder> _self_, jule::Ptr<_1e43778e2_UseDecl>& _43737_decl) {
	{
		
		if (_43737_decl.get()._field_cpp_linked) {
			_case_begin_1cb3dab8d:;
			{
				return _1e438c4ea_build_cpp_header_import(_self_.ptr(), _43737_decl);
			}
		}
		else if (_43737_decl.get()._field_std) {
			_case_begin_1cb3dac04:;
			{
				return _1e438c819_build_std_import(_self_.ptr(), _43737_decl);
			}
		}
		else {
			_case_begin_1cb3da143:;
			{
				return _1e438cb27_build_ident_import(_self_, _43737_decl);
			}
		}
		_match_end_1cb3da077:;
	};
}



inline jule::Bool _1e438d265_check_duplicate_use_decl(_1e438ab9c_SymbolBuilder* _self_, jule::Ptr<_1e46a4768_ImportInfo>& _44844_pkg) {
	jule::Bool _44864_ok = jule::Bool();
	jule::Ptr<_1e46a4768_ImportInfo> _45013_lpkg = _1c974655b_select_package((*_self_)._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1e46a4768_ImportInfo>)>([=](jule::Ptr<_1e46a4768_ImportInfo> _45049_spkg) mutable -> jule::Bool {
		return (_44844_pkg.get()._field_path == _45049_spkg.get()._field_path);
	}));;
	if ((_45013_lpkg == nullptr)) {
		_44864_ok = true;
		return _44864_ok;
	};
	_1e438b62b_push_err(&(*_self_), _44844_pkg.get()._field_token,jule::Str("use declaration duplication: @ is already used above", 52),jule::Slice<jule::Any>::make({jule::Any(_44844_pkg.get()._field_link_path)}));
	_1e438bd13_push_suggestion(&(*_self_), jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>());
	_44864_ok = false;
	return _44864_ok;
}



inline void _1e438d595_impl_import_selections(_1e438ab9c_SymbolBuilder* _self_, jule::Ptr<_1e46a4768_ImportInfo>& _46246_imp, jule::Ptr<_1e43778e2_UseDecl>& _46269_decl) {
	{
		auto &expr = _46269_decl.get()._field_selected;
		auto it = expr.begin();
		_iter_begin_1cb3e14ce:;
		if (it != expr.end()) {
			jule::Ptr<_20cd9e6ec_Token> _46321_ident = *it;
			{
				if (_1e46a6d97_exist_ident(_46246_imp.ptr(), _46321_ident.get()._field_kind)) {
					_1e438b62b_push_err(&(*_self_), _46321_ident,jule::Str("duplicated selection: @ is already selected", 43),jule::Slice<jule::Any>::make({jule::Any(_46321_ident.get()._field_kind)}));
					_1e438bd13_push_suggestion(&(*_self_), jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>());
					goto _iter_next_1cb3e14ce;
				};
				_46246_imp.get()._field_selected = jule::alloc_for_append(_46246_imp.get()._field_selected,1);_46246_imp.get()._field_selected.__push(_46321_ident);;
			}
			_iter_next_1cb3e14ce:;
			++it;
			goto _iter_begin_1cb3e14ce;
		}
		_iter_end_1cb3e14ce:;
	};
}



inline jule::Str _1e438d8a3_get_as_link_path(jule::Ptr<_1e438ab9c_SymbolBuilder> _self_, jule::Str _47440_path) {
	if (_20c83c443_has_prefix(_47440_path,_20caa3654_PATH_STDLIB)) {
		(_47440_path).mut_slice(_20caa3654_PATH_STDLIB.len());;
		return (jule::Str("std", 3) + _20c82d0b0_replace(_47440_path,static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL));
	};
	jule::Str _48014_root;;
	std::tie(_48014_root,std::ignore) = _20b9737ab_abs(_1e46a2403_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e46a1567_get_mod_path(_self_.get()._field_importer));
	(_47440_path).mut_slice(_48014_root.len());;
	if ((_47440_path[0LL] == 92LLU)) {
		(_47440_path).mut_slice(1LL);;
	};
	return _20c82d0b0_replace(_47440_path,static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL);
}



inline void _1e438dc6b_push_cycle_error(jule::Ptr<_1e438ab9c_SymbolBuilder> _self_, jule::Ptr<_1e438ab9c_SymbolBuilder>& _48837_sb, jule::Str _48857_path, jule::Str& _48873_message) {
	;
	jule::Str _49113_refers_to = _20ca9019b_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_1e438d8a3_get_as_link_path(_self_, _20cda54d3_dir(_48837_sb.get()._field_table.get()._field_file.ptr()))),jule::Any(_1e438d8a3_get_as_link_path(_self_, _48857_path))}));;
	(_48873_message).buffer.insert(0, (((_20b9a0233_repeat(jule::Str(" ", 1),4LL) + _49113_refers_to) + jule::Str("\n", 1))));;
}



inline void _1e438e134_push_cross_cycle_error(jule::Ptr<_1e438ab9c_SymbolBuilder> _self_, jule::Ptr<_1e438ab9c_SymbolBuilder>& _49843_target, jule::Ptr<_1e46a4768_ImportInfo>& _49868_imp, jule::Ptr<_20cd9e6ec_Token>& _49887_error_token) {
	jule::Str _49917_message = jule::Str();;
	_1e438dc6b_push_cycle_error(_self_, _self_,_49868_imp.get()._field_path,_49917_message);
	jule::Ptr<_1e438ab9c_SymbolBuilder> _50317_owner = _self_.get()._field_owner;;
	jule::Ptr<_1e438ab9c_SymbolBuilder> _50417_old = _self_;;
	while ((_50317_owner.get()._field_owner != nullptr)) {
		{
			_1e438dc6b_push_cycle_error(_self_, _50417_old.get()._field_owner,_20cda54d3_dir(_50417_old.get()._field_table.get()._field_file.ptr()),_49917_message);
			if ((_50317_owner.get()._field_owner == _49843_target)) {
				_1e438dc6b_push_cycle_error(_self_, _49843_target,_20cda54d3_dir(_50317_owner.get()._field_table.get()._field_file.ptr()),_49917_message);
				goto _iter_end_1cb3ea708;
			};
			_50417_old=_50317_owner;
			_50317_owner=_50317_owner.get()._field_owner;
		}
	_iter_next_1cb3ea708:;
	}
	_iter_end_1cb3ea708:;;
	_1e438b62b_push_err(_self_.ptr(), _49887_error_token,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>::make({jule::Any(_49917_message)}));
}



inline jule::Bool _1e438e4db_check_import_cycles(jule::Ptr<_1e438ab9c_SymbolBuilder> _self_, jule::Ptr<_1e46a4768_ImportInfo> _52139_imp, jule::Ptr<_1e43778e2_UseDecl>& _52158_decl) {
	if ((_52139_imp.get()._field_path == _20cda54d3_dir(_self_.get()._field_table.get()._field_file.ptr()))) {
		_1e438b62b_push_err(_self_.ptr(), _52158_decl.get()._field_token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>::make({jule::Any(_1e438d8a3_get_as_link_path(_self_, _52139_imp.get()._field_path))}));
		return false;
	};
	if ((_self_.get()._field_owner == nullptr)) {
		return true;
	};
	if ((_20cda54d3_dir(_self_.get()._field_owner.get()._field_table.get()._field_file.ptr()) == _52139_imp.get()._field_path)) {
		_1e438e134_push_cross_cycle_error(_self_, _self_.get()._field_owner,_52139_imp,_52158_decl.get()._field_token);
		return false;
	};
	jule::Ptr<_1e438ab9c_SymbolBuilder> _53617_owner = _self_.get()._field_owner;;
	_julec_label_iter:;
	if ((_20cda54d3_dir(_53617_owner.get()._field_table.get()._field_file.ptr()) == _52139_imp.get()._field_path)) {
		_1e438e134_push_cross_cycle_error(_self_, _53617_owner,_52139_imp,_52158_decl.get()._field_token);
		return false;
	};
	if ((_53617_owner.get()._field_owner != nullptr)) {
		_53617_owner=_53617_owner.get()._field_owner;
		goto _julec_label_iter;
	};
	return true;
}



inline void _1e438e8c6_check_package_accessibility(_1e438ab9c_SymbolBuilder* _self_, jule::Ptr<_1e43778e2_UseDecl>& _55747_decl, jule::Str& _55764_mod, jule::Str& _55775_path) {
	if (((_1e46a2403_Importer_mptr_data[((*_self_)._field_importer).type_offset]._1e46a1567_get_mod_path((*_self_)._field_importer) != _55764_mod) && _20c5c5ce2_contains(_55775_path,jule::Str("internal", 8)))) {
		_1e438b62b_push_err(&(*_self_), _55747_decl.get()._field_token,jule::Str("you cannot access to internal packages", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1e438ec8e_import_package(jule::Ptr<_1e438ab9c_SymbolBuilder> _self_, jule::Ptr<_1e46a4768_ImportInfo>& _56339_imp, jule::Ptr<_1e43778e2_UseDecl>& _56362_decl) {
	jule::Bool _56380_ok = jule::Bool();
	if (_56339_imp.get()._field_cpp_linked) {
		_56380_ok = true;
		return _56380_ok;
	};
	jule::Ptr<_1e46a4768_ImportInfo> _56817_port = _1e46a2403_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e46a1b83_get_import(_self_.get()._field_importer, _56339_imp.get()._field_path);;
	if ((_56817_port != nullptr)) {
		_56339_imp.get()._field_package=_56817_port.get()._field_package;
		_56339_imp.get()._field_duplicate=true;
		jule::Str _57317_old_mod = _1e46a2403_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e46a1567_get_mod_path(_self_.get()._field_importer);;
		_1e46a2403_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e46a1303_set_mod_path(_self_.get()._field_importer, _1e46a2403_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e46a1875_mod_by_id(_self_.get()._field_importer, _56339_imp.get()._field_mod_id));
		_1e438e8c6_check_package_accessibility(_self_.ptr(), _56362_decl,_57317_old_mod,_56817_port.get()._field_path);
		_1e46a2403_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e46a1303_set_mod_path(_self_.get()._field_importer, _57317_old_mod);
	} else {
		if ((!(_1e438e4db_check_import_cycles(_self_, _56339_imp,_56362_decl)))) {
			_56380_ok = false;
			return _56380_ok;
		};
		jule::Str _58217_old_mod = _1e46a2403_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e46a1567_get_mod_path(_self_.get()._field_importer);;
		__JULE_DEFER({
			_1e46a2403_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e46a1303_set_mod_path(_self_.get()._field_importer, _58217_old_mod);
		});;
		if (_56339_imp.get()._field_std) {
			_1e46a2403_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e46a1303_set_mod_path(_self_.get()._field_importer, _20caa3654_PATH_STDLIB);
		};
		jule::Slice<jule::Ptr<_1e433079b_Ast>> _58722_asts;;
		jule::Slice<_20ca8ec5b_Log> _58732_errors;;
		std::tie(_58722_asts,_58732_errors) = _1e46a2403_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e46a203a_import_package(_self_.get()._field_importer, _56339_imp.get()._field_path,(!(_56339_imp.get()._field_std)));
		if ((_58732_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_58732_errors);
			_56380_ok = false;
			return _56380_ok;
		};
		_1e438e8c6_check_package_accessibility(_self_.ptr(), _56362_decl,_58217_old_mod,_56339_imp.get()._field_path);
		{
			auto &expr = _58722_asts;
			auto it = expr.begin();
			_iter_begin_1cb40d9e6:;
			if (it != expr.end()) {
				jule::Ptr<_1e433079b_Ast> _59525_ast = *it;
				{
					jule::Ptr<_1c9745c42_SymbolTable> _59625_table = nullptr;;
					std::tie(_59625_table,_58732_errors) = _1c978e807_build_symbols(_59525_ast,_self_.get()._field_importer,_self_);
					if ((_58732_errors.len() > 0LL)) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_58732_errors);
						_1e438b9e4_push_err_text(_self_.ptr(), _56339_imp.get()._field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>::make({jule::Any(_56339_imp.get()._field_link_path)}));
						_56380_ok = false;
						return _56380_ok;
					};
					_56339_imp.get()._field_package.get()._field_files = jule::alloc_for_append(_56339_imp.get()._field_package.get()._field_files,1);_56339_imp.get()._field_package.get()._field_files.__push(_59625_table);;
				}
				_iter_next_1cb40d9e6:;
				++it;
				goto _iter_begin_1cb40d9e6;
			}
			_iter_end_1cb40d9e6:;
		};
	};
	_1e438d595_impl_import_selections(_self_.ptr(), _56339_imp,_56362_decl);
	_56380_ok = true;
	return _56380_ok;
}



inline jule::Ptr<_1e46a4768_ImportInfo> _1e439009c_import_use_decl(jule::Ptr<_1e438ab9c_SymbolBuilder> _self_, jule::Ptr<_1e43778e2_UseDecl>& _61540_decl) {
	jule::Ptr<_1e46a4768_ImportInfo> _61617_imp = _1e438ce35_build_import(_self_, _61540_decl);;
	if ((_61617_imp == nullptr)) {
		return nullptr;
	};
	jule::Bool _62217_ok = _1e438d265_check_duplicate_use_decl(_self_.ptr(), _61617_imp);;
	if ((!(_62217_ok))) {
		return nullptr;
	};
	_62217_ok=_1e438ec8e_import_package(_self_, _61617_imp,_61540_decl);
	_self_.get()._field_table.get()._field_imports = jule::alloc_for_append(_self_.get()._field_table.get()._field_imports,1);_self_.get()._field_table.get()._field_imports.__push(_61617_imp);;
	if (_62217_ok) {
		_1e46a2403_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e46a22b0_imported(_self_.get()._field_importer, _61617_imp);
		return _61617_imp;
	};
	return nullptr;
}



inline void _1e4390278_import_use_decls(jule::Ptr<_1e438ab9c_SymbolBuilder> _self_) {
	{
		auto &expr = _self_.get()._field_ast.get()._field_use_decls;
		auto it = expr.begin();
		_iter_begin_1cb415987:;
		if (it != expr.end()) {
			jule::Ptr<_1e43778e2_UseDecl> _63721_decl = *it;
			{
				_1e439009c_import_use_decl(_self_, _63721_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_1cb415987;
				};
			}
			_iter_next_1cb415987:;
			++it;
			goto _iter_begin_1cb415987;
		}
		_iter_end_1cb415987:;
	};
}



inline void _1e43904ed_append_node(_1e438ab9c_SymbolBuilder* _self_, _1e43314d3_Node& _64735_node) {
	{
		auto &_match_expr{ _64735_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1e437aa5a_Impl>>()) {
			_case_begin_1cb4172b3:;
			{
				(*_self_)._field_table.get()._field_impls = jule::alloc_for_append((*_self_)._field_table.get()._field_impls,1);(*_self_)._field_table.get()._field_impls.__push(_1e438a64c_build_impl(_64735_node._field_data.operator jule::Ptr<_1e437aa5a_Impl>()));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4376506_TypeAliasDecl>>()) {
			_case_begin_1cb417329:;
			{
				jule::Ptr<_1c97739b7_TypeAlias> _65221_ta = _1e43879ce_build_type_alias(_64735_node._field_data.operator jule::Ptr<_1e4376506_TypeAliasDecl>());;
				(*_self_)._field_table.get()._field_type_aliases = jule::alloc_for_append((*_self_)._field_table.get()._field_type_aliases,1);(*_self_)._field_table.get()._field_type_aliases.__push(_65221_ta);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4379d45_StructDecl>>()) {
			_case_begin_1cb417390:;
			{
				jule::Ptr<_1e43360cb_Struct> _65521_srct = _1e4388309_build_struct(_64735_node._field_data.operator jule::Ptr<_1e4379d45_StructDecl>());;
				(*_self_)._field_table.get()._field_structs = jule::alloc_for_append((*_self_)._field_table.get()._field_structs,1);(*_self_)._field_table.get()._field_structs.__push(_65521_srct);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4371ca4_FnDecl>>()) {
			_case_begin_1cb417406:;
			{
				jule::Ptr<_1e4380576_Fn> _65821_f = _1e4388e20_build_fn(_64735_node._field_data.operator jule::Ptr<_1e4371ca4_FnDecl>());;
				(*_self_)._field_table.get()._field_funcs = jule::alloc_for_append((*_self_)._field_table.get()._field_funcs,1);(*_self_)._field_table.get()._field_funcs.__push(_65821_f);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437a450_TraitDecl>>()) {
			_case_begin_1cb417c97:;
			{
				jule::Ptr<_1e43d8d0a_Trait> _66121_t = _1e438945e_build_trait(_64735_node._field_data.operator jule::Ptr<_1e437a450_TraitDecl>());;
				(*_self_)._field_table.get()._field_traits = jule::alloc_for_append((*_self_)._field_table.get()._field_traits,1);(*_self_)._field_table.get()._field_traits.__push(_66121_t);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4372c83_VarDecl>>()) {
			_case_begin_1cb417d0d:;
			{
				jule::Ptr<_1e46c6eb6_Var> _66421_v = _1e438a10d_build_var(_64735_node._field_data.operator jule::Ptr<_1e4372c83_VarDecl>());;
				(*_self_)._field_table.get()._field_vars = jule::alloc_for_append((*_self_)._field_table.get()._field_vars,1);(*_self_)._field_table.get()._field_vars.__push(_66421_v);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e43789ae_EnumDecl>>()) {
			_case_begin_1cb417d74:;
			{
				jule::Ptr<_1e4456b58_Enum> _66721_e = _1e4389c45_build_enum(_64735_node._field_data.operator jule::Ptr<_1e43789ae_EnumDecl>());;
				(*_self_)._field_table.get()._field_enums = jule::alloc_for_append((*_self_)._field_table.get()._field_enums,1);(*_self_)._field_table.get()._field_enums.__push(_66721_e);;
			}
		}
		else {
			_case_begin_1cb4171d6:;
			{
				_1e438b62b_push_err(&(*_self_), _64735_node._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1cb417181:;
	};
}



inline void _1e43906c9_append_nodes(_1e438ab9c_SymbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_nodes;
		auto it = expr.begin();
		_iter_begin_1cb420277:;
		if (it != expr.end()) {
			_1e43314d3_Node _67521_node = *it;
			{
				_1e43904ed_append_node(&(*_self_), _67521_node);
			}
			_iter_next_1cb420277:;
			++it;
			goto _iter_begin_1cb420277;
		}
		_iter_end_1cb420277:;
	};
}



inline void _1e439094e_push_directive_pass(_1e438ab9c_SymbolBuilder* _self_, jule::Ptr<_1e43620c4_Directive>& _68043_d) {
	if ((_68043_d.get()._field_args.len() == 0LL)) {
		_1e438b62b_push_err(&(*_self_), _68043_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_68043_d.get()._field_args.len() > 1LL)) {
		jule::Ptr<_20cd9e6ec_Token> _68517_arg = _68043_d.get()._field_args[1LL];;
		_1e438b62b_push_err(&(*_self_), _68517_arg,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20cd9e6ec_Token> _68913_arg = _68043_d.get()._field_args[0LL];;
	if ((_68913_arg.get()._field_id != static_cast<jule::U64>(6LLU))) {
		_1e438b62b_push_err(&(*_self_), _68913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_68913_arg.get()._field_kind[0LL] != '\"')) {
		_1e438b62b_push_err(&(*_self_), _68913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	(*_self_)._field_table.get()._field_passes = jule::alloc_for_append((*_self_)._field_table.get()._field_passes,1);(*_self_)._field_table.get()._field_passes.__push(_1e43870e9_Pass{._field_token=_68043_d.get()._field_tag, ._field_text=_68913_arg.get()._field_kind.slice(1LL,(_68913_arg.get()._field_kind.len() - 1LL))});;
}



inline void _1e4390b2a_append_top_directives(_1e438ab9c_SymbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_top_directives;
		auto it = expr.begin();
		_iter_begin_1cb425e2b:;
		if (it != expr.end()) {
			jule::Ptr<_1e43620c4_Directive> _70721_d = *it;
			{
				{
					auto &_match_expr{ _70721_d.get()._field_tag.get()._field_kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_1cb84e695:;
						{
							_1e439094e_push_directive_pass(&(*_self_), _70721_d);
						}
					}
					_match_end_1cb84e5da:;
				};
			}
			_iter_next_1cb425e2b:;
			++it;
			goto _iter_begin_1cb425e2b;
		}
		_iter_end_1cb425e2b:;
	};
}



inline void _1e4390d06_build(jule::Ptr<_1e438ab9c_SymbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_1c9745c42_SymbolTable>(_1c9745c42_SymbolTable{._field_file=_self_.get()._field_ast.get()._field_file, });
	_1e4390b2a_append_top_directives(_self_.ptr());
	_1e4390278_import_use_decls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	_1e43906c9_append_nodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e438ab9c_SymbolBuilder _Src) {
	_Stream << "SymbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e43da8de_to_str(_1e43d8d0a_Trait* _self_) {
	return (*_self_)._field_ident;
}



inline jule::Bool _1e43dc429_equals(jule::Ptr<_1e43d8d0a_Trait> _self_, jule::Ptr<_1c97746ee_TypeKind> _2626_other) {
	jule::Ptr<_1e43d8d0a_Trait> _2713_trt = _1c9777c0d_trt(_2626_other.ptr());;
	return (_self_ == _2713_trt);
}



inline jule::Bool _1e4415ae5_is_builtin(_1e43d8d0a_Trait* _self_) {
	return ((*_self_)._field_token == nullptr);
}



inline jule::Ptr<_1e4380576_Fn> _1e44161ab_find_method(_1e43d8d0a_Trait* _self_, jule::Str _4034_ident) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1cb8556ce:;
		if (it != expr.end()) {
			jule::Ptr<_1e4380576_Fn> _4121_f = *it;
			{
				if ((_4121_f.get()._field_ident == _4034_ident)) {
					return _4121_f;
				};
			}
			_iter_next_1cb8556ce:;
			++it;
			goto _iter_begin_1cb8556ce;
		}
		_iter_end_1cb8556ce:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1e43d8d0a_Trait _Src) {
	_Stream << _1e43da8de_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _1e4438420_auto_expr(_1e4392797_EnumItem* _self_) {
	return ((*_self_)._field_value == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e4392797_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e4456d45_to_str(_1e4456b58_Enum* _self_) {
	return (*_self_)._field_ident;
}



inline jule::Bool _1e4456e77_equals(jule::Ptr<_1e4456b58_Enum> _self_, jule::Ptr<_1c97746ee_TypeKind> _3826_other) {
	jule::Ptr<_1e4456b58_Enum> _3913_enm = _1c9776ee8_enm(_3826_other.ptr());;
	return (_self_ == _3913_enm);
}



inline jule::Ptr<_1e4392797_EnumItem> _1e5c31145_find_item(_1e4456b58_Enum* _self_, jule::Str _4732_ident) {
	{
		auto &expr = (*_self_)._field_items;
		auto it = expr.begin();
		_iter_begin_1cb8598c0:;
		if (it != expr.end()) {
			jule::Ptr<_1e4392797_EnumItem> _4821_item = *it;
			{
				if ((_4821_item.get()._field_ident == _4732_ident)) {
					return _4821_item;
				};
			}
			_iter_next_1cb8598c0:;
			++it;
			goto _iter_begin_1cb8598c0;
		}
		_iter_end_1cb8598c0:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4456b58_Enum _Src) {
	_Stream << _1e4456d45_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _1e5c3161d_is_trait_impl(_1e5c31431_Impl* _self_) {
	return ((*_self_)._field_base != nullptr);
}



inline jule::Bool _1e5c31750_is_struct_impl(_1e5c31431_Impl* _self_) {
	return ((*_self_)._field_base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e5c31431_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e46862c7_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e46866c3_If _Src) {
	_Stream << "If{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e46869ae_Else _Src) {
	_Stream << "Else{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4686daa_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "elifs:" << _Src._field_elifs << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4687196_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e46879b0_is_while_next(_1e4687619_WhileIter* _self_) {
	return ((*_self_)._field_next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e4687619_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4687eee_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4688373_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "it:" << _Src._field_it;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e468872a_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "mtch:" << _Src._field_mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4688a16_Label _Src) {
	_Stream << "Label{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4688d02_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e46891a9_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e468962c_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e46899d4_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e468a496_is_generic_type_match(_1e468a023_Match* _self_) {
	return (((*_self_)._field_type_match && ((*_self_)._field_expr != nullptr)) && (*_self_)._field_expr.get()._field_kind.get()._field_generic);
}







std::ostream &operator<<(std::ostream &_Stream, _1e468a023_Match _Src) {
	_Stream << "Match{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e468adae_is_default(_1e468a9d5_Case* _self_) {
	return ((*_self_)._field_exprs == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e468a9d5_Case _Src) {
	_Stream << "Case{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "next:" << _Src._field_next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e468b167_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "dest_case:" << _Src._field_dest_case;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e468b5da_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e468bbe5_ScopeLabel _Src) {
	_Stream << "ScopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e468c168_ScopeGoto _Src) {
	_Stream << "ScopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e46a4768_ImportInfo> _1e468d400_find_package(_1e468ce7c_ScopeChecker* _self_, jule::Str _43935_ident) {
	return _1e46ac95d_find_package((*_self_)._field_s.ptr(), _43935_ident);
}



inline jule::Ptr<_1e46a4768_ImportInfo> _1e468d70d_select_package(_1e468ce7c_ScopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_1e46a4768_ImportInfo>)> _44937_selector) {
	return _1e46acc6b_select_package((*_self_)._field_s.ptr(), _44937_selector);
}



inline jule::Ptr<_1e46c6eb6_Var> _1e468dab5_find_var(_1e468ce7c_ScopeChecker* _self_, jule::Str _46031_ident, jule::Bool _46043_cpp_linked) {
	;
	jule::Ptr<_1e46c6eb6_Var> _46317_v = _1c97481b7___find_var((*_self_)._field_table.ptr(), _46031_ident,_46043_cpp_linked,true);;
	if ((_46317_v != nullptr)) {
		return _46317_v;
	};
	jule::Ptr<_1e468ce7c_ScopeChecker> _46817_parent = (*_self_)._field_parent;;
	while ((_46817_parent != nullptr)) {
		{
			_46317_v=_1c97481b7___find_var(_46817_parent.get()._field_table.ptr(), _46031_ident,_46043_cpp_linked,true);
			if ((_46317_v != nullptr)) {
				return _46317_v;
			};
			_46817_parent=_46817_parent.get()._field_parent;
		}
	_iter_next_1cb864db4:;
	}
	_iter_end_1cb864db4:;;
	return _1e46ad123_find_var((*_self_)._field_s.ptr(), _46031_ident,_46043_cpp_linked);
}



inline jule::Ptr<_1c97739b7_TypeAlias> _1e468de6c_find_type_alias(_1e468ce7c_ScopeChecker* _self_, jule::Str _48738_ident, jule::Bool _48750_cpp_linked) {
	;
	jule::Ptr<_1c97739b7_TypeAlias> _49017_ta = _1c9748618___find_type_alias((*_self_)._field_table.ptr(), _48738_ident,_48750_cpp_linked,true);;
	if ((_49017_ta != nullptr)) {
		return _49017_ta;
	};
	jule::Ptr<_1e468ce7c_ScopeChecker> _49517_parent = (*_self_)._field_parent;;
	while ((_49517_parent != nullptr)) {
		{
			_49017_ta=_1c9748618___find_type_alias(_49517_parent.get()._field_table.ptr(), _48738_ident,_48750_cpp_linked,true);
			if ((_49017_ta != nullptr)) {
				return _49017_ta;
			};
			_49517_parent=_49517_parent.get()._field_parent;
		}
	_iter_next_1cb8693e6:;
	}
	_iter_end_1cb8693e6:;;
	return _1e46ad4ca_find_type_alias((*_self_)._field_s.ptr(), _48738_ident,_48750_cpp_linked);
}



inline jule::Ptr<_1e43360cb_Struct> _1e468e324_find_struct(_1e468ce7c_ScopeChecker* _self_, jule::Str _51234_ident, jule::Bool _51246_cpp_linked) {
	return _1e46ad882_find_struct((*_self_)._field_s.ptr(), _51234_ident,_51246_cpp_linked);
}



inline jule::Ptr<_1e4380576_Fn> _1e468e6cb_find_fn(_1e468ce7c_ScopeChecker* _self_, jule::Str _52130_ident, jule::Bool _52142_cpp_linked) {
	return _1e46adc39_find_fn((*_self_)._field_s.ptr(), _52130_ident,_52142_cpp_linked);
}



inline jule::Ptr<_1e43d8d0a_Trait> _1e468e9d9_find_trait(_1e468ce7c_ScopeChecker* _self_, jule::Str _53033_ident) {
	return _1e46ae047_find_trait((*_self_)._field_s.ptr(), _53033_ident);
}



inline jule::Ptr<_1e4456b58_Enum> _1e468ece7_find_enum(_1e468ce7c_ScopeChecker* _self_, jule::Str _53932_ident) {
	return _1e46ae355_find_enum((*_self_)._field_s.ptr(), _53932_ident);
}



inline jule::Bool _1e4690127_is_unsafe(jule::Ptr<_1e468ce7c_ScopeChecker> _self_) {
	jule::Ptr<_1e468ce7c_ScopeChecker> _54717_scope = _self_;;
	_julec_label_iter:;
	if (_54717_scope.get()._field_scope.get()._field_unsafety) {
		return true;
	};
	if ((_54717_scope.get()._field_parent != nullptr)) {
		_54717_scope=_54717_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Bool _1e469038b_is_root(_1e468ce7c_ScopeChecker* _self_) {
	return (((*_self_)._field_parent == nullptr) || ((*_self_)._field_owner != nullptr));
}



inline void _1e4690567_stop(_1e468ce7c_ScopeChecker* _self_) {
	(*_self_)._field_i=-1LL;
}



inline jule::Bool _1e46907cb_stopped(_1e468ce7c_ScopeChecker* _self_) {
	return ((*_self_)._field_i == -1LL);
}



inline jule::Bool _1e4690a40_is_deferred(jule::Ptr<_1e468ce7c_ScopeChecker> _self_) {
	jule::Ptr<_1e468ce7c_ScopeChecker> _58017_scope = _self_;;
	_julec_label_iter:;
	if (_58017_scope.get()._field_scope.get()._field_deferred) {
		return true;
	};
	if ((_58017_scope.get()._field_parent != nullptr)) {
		_58017_scope=_58017_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Ptr<_1e468ce7c_ScopeChecker> _1e4690ca4_get_root(jule::Ptr<_1e468ce7c_ScopeChecker> _self_) {
	jule::Ptr<_1e468ce7c_ScopeChecker> _59817_root = _self_;;
	while (((_59817_root.get()._field_parent != nullptr) && (_59817_root.get()._field_owner == nullptr))) {
		{
			_59817_root=_59817_root.get()._field_parent;
		}
	_iter_next_1cb878aba:;
	}
	_iter_end_1cb878aba:;;
	return _59817_root;
}



inline jule::Ptr<_1e468ce7c_ScopeChecker> _1e4691018_get_hard_root(jule::Ptr<_1e468ce7c_ScopeChecker> _self_) {
	jule::Ptr<_1e468ce7c_ScopeChecker> _60817_root = _self_;;
	while ((_60817_root.get()._field_parent != nullptr)) {
		{
			_60817_root=_60817_root.get()._field_parent;
		}
	_iter_next_1cb87a2b4:;
	}
	_iter_end_1cb87a2b4:;;
	return _60817_root;
}



inline jule::Ptr<_1e4688a16_Label> _1e4691326_find_label(_1e468ce7c_ScopeChecker* _self_, jule::Str _61829_ident) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1cb87b78d:;
		if (it != expr.end()) {
			jule::Any _61921_st = *it;
			{
				{
					auto &_match_expr{ _61921_st };
					
					if (_match_expr.type_is<jule::Ptr<_1e4688a16_Label>>()) {
						_case_begin_1cb87c00d:;
						{
							jule::Ptr<_1e4688a16_Label> _62225_label = _61921_st.operator jule::Ptr<_1e4688a16_Label>();;
							if ((_62225_label.get()._field_ident == _61829_ident)) {
								return _62225_label;
							};
						}
					}
					_match_end_1cb87bea8:;
				};
			}
			_iter_next_1cb87b78d:;
			++it;
			goto _iter_begin_1cb87b78d;
		}
		_iter_end_1cb87b78d:;
	};
	return nullptr;
}



inline jule::Ptr<_1e468bbe5_ScopeLabel> _1e4691634_find_label_scope(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Str _63436_ident) {
	jule::Ptr<_1e468bbe5_ScopeLabel> _63517_label = _1e4691942_find_label_all(_self_.ptr(), _63436_ident);;
	if (((_63517_label != nullptr) && (_63517_label.get()._field_scope == _self_))) {
		return _63517_label;
	};
	return nullptr;
}



inline jule::Ptr<_1e468bbe5_ScopeLabel> _1e4691942_find_label_all(_1e468ce7c_ScopeChecker* _self_, jule::Str _64633_ident) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1cb880187:;
		if (it != expr.end()) {
			jule::Ptr<_1e468bbe5_ScopeLabel> _64721_lbl = *it;
			{
				if ((_64721_lbl.get()._field_label.get()._field_ident == _64633_ident)) {
					return _64721_lbl;
				};
			}
			_iter_next_1cb880187:;
			++it;
			goto _iter_begin_1cb880187;
		}
		_iter_end_1cb880187:;
	};
	return nullptr;
}



inline jule::Bool _1e4691ce9_is_duplicated_ident(_1e468ce7c_ScopeChecker* _self_, jule::U64 _65838_itself, jule::Str _65855_ident) {
	jule::Ptr<_1e46c6eb6_Var> _65913_v = _1e468dab5_find_var(&(*_self_), _65855_ident,false);;
	if (((_65913_v != nullptr) && (static_cast<jule::U64>(_65913_v) != _65838_itself))) {
		if ((_65913_v.get()._field_scope == nullptr)) {
			return false;
		};
		return ((_65913_v.get()._field_scope == (*_self_)._field_scope) || (!(_1e46ae72e_is_flag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));
	};
	jule::Ptr<_1c97739b7_TypeAlias> _66713_ta = _1e468de6c_find_type_alias(&(*_self_), _65855_ident,false);;
	if (((_66713_ta != nullptr) && (static_cast<jule::U64>(_66713_ta) != _65838_itself))) {
		if ((_66713_ta.get()._field_scope == nullptr)) {
			return false;
		};
		return ((_66713_ta.get()._field_scope == (*_self_)._field_tree) || (!(_1e46ae72e_is_flag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));
	};
	return false;
}



inline void _1e469206e_check_var_decl(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e4372c83_VarDecl> _67838_decl) {
	jule::Ptr<_1e46c6eb6_Var> _67917_v = _1e438a10d_build_var(_67838_decl);;
	_67917_v.get()._field_scope=_self_.get()._field_scope;
	__JULE_DEFER({
		_self_.get()._field_table.get()._field_vars = jule::alloc_for_append(_self_.get()._field_table.get()._field_vars,1);_self_.get()._field_table.get()._field_vars.__push(_67917_v);;
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_67917_v));;
	});;
	if (_1e4691ce9_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_67917_v)),_67917_v.get()._field_ident)) {
		_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _67917_v.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_67917_v.get()._field_ident)}));
		_1e46b018b_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1e4690567_stop(_self_.ptr());
		return;;
	};
	_1e46bb4a5_check_var_decl(_self_.get()._field_s, _67917_v,jule::Trait<_1c978dc35_Lookup>(_self_, 0));
	if (((!(_1e46c75d2_is_type_inferred(_67917_v.ptr()))) && ((_67917_v.get()._field_kind == nullptr) || (_67917_v.get()._field_kind.get()._field_kind == nullptr)))) {
		return;;
	};
	_1e46beb29_check_type_var(_self_.get()._field_s, _67917_v,jule::Trait<_1c978dc35_Lookup>(_self_, 0));
}



inline void _1e46922e4_check_type_alias_decl(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e4376506_TypeAliasDecl> _70245_decl) {
	jule::Ptr<_1c97739b7_TypeAlias> _70317_ta = _1e43879ce_build_type_alias(_70245_decl);;
	if (_1e4691ce9_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_70317_ta)),_70317_ta.get()._field_ident)) {
		_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _70317_ta.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_70317_ta.get()._field_ident)}));
		_1e46b018b_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1e4690567_stop(_self_.ptr());
		return;;
	};
	_1e46b765a_check_type_alias_decl(_self_.get()._field_s, _70317_ta,jule::Trait<_1c978dc35_Lookup>(_self_, 0));
	_self_.get()._field_table.get()._field_type_aliases = jule::alloc_for_append(_self_.get()._field_table.get()._field_type_aliases,1);_self_.get()._field_table.get()._field_type_aliases.__push(_70317_ta);;
	if ((_70317_ta.get()._field_kind.get()._field_kind == nullptr)) {
		_1e4690567_stop(_self_.ptr());
	};
}



inline jule::Ptr<_1e46862c7_Scope> _1e4692558_get_child(_1e468ce7c_ScopeChecker* _self_) {
	return jule::new_ptr<_1e46862c7_Scope>(_1e46862c7_Scope{._field_parent=(*_self_)._field_scope, });
}



inline void _1e4692921_check_child_ssc(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e43702ad_ScopeTree>& _72640_tree, jule::Ptr<_1e46862c7_Scope>& _72663_s, jule::Ptr<_1e468ce7c_ScopeChecker>& _72679_ssc) {
	_72679_ssc.get()._field_parent=_self_;
	_1e469cec0_check(_72679_ssc, _72640_tree,_72663_s);
}



inline jule::Ptr<_1e46862c7_Scope> _1e4692cc8_check_child_sc(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e43702ad_ScopeTree>& _73139_tree, jule::Ptr<_1e468ce7c_ScopeChecker>& _73162_ssc) {
	jule::Ptr<_1e46862c7_Scope> _73217_s = _1e4692558_get_child(_self_.ptr());;
	_1e4692921_check_child_ssc(_self_, _73139_tree,_73217_s,_73162_ssc);
	return _73217_s;
}



inline jule::Ptr<_1e46862c7_Scope> _1e46930d6_check_child(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e43702ad_ScopeTree>& _73736_tree) {
	jule::Ptr<_1e468ce7c_ScopeChecker> _73817_ssc = _1e469d234_new_child_checker(_self_);;
	return _1e4692cc8_check_child_sc(_self_, _73736_tree,_73817_ssc);
}



inline void _1e469335b_check_anon_scope(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e43702ad_ScopeTree> _74240_tree) {
	jule::Ptr<_1e46862c7_Scope> _74317_s = _1e46930d6_check_child(_self_, _74240_tree);;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_74317_s));;
}



inline void _1e469367a_process_error_call(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e437e09c_BuiltinErrorCallExprModel>& _74743_m, jule::Ptr<_20cd9e6ec_Token> _74774_err) {
	if (_1e4690a40_is_deferred(_self_)) {
		_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _74774_err,jule::Str("deferred scopes are not supports error calls", 44),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e468ce7c_ScopeChecker> _75217_root = _1e4690ca4_get_root(_self_);;
	if ((!(_75217_root.get()._field_owner.get()._field_decl.get()._field_exceptional))) {
		_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _74774_err,jule::Str("error call can only useable for exceptional functions", 53),jule::Slice<jule::Any>());
		_1e46b018b_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57),jule::Slice<jule::Any>());
	};
	_74743_m.get()._field_func=_75217_root.get()._field_owner;
}



inline void _1e4693900_check_expr(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e43659e0_Expr> _76034_expr) {
	jule::Ptr<_1c974c73d_Eval> _76117_eval = _1e46b4b74_eval(_self_.get()._field_s, jule::Trait<_1c978dc35_Lookup>(_self_, 0));;
	_76117_eval.get()._field_ignored=true;
	jule::Ptr<_1c974abc0_Data> _76317_d = _1c9766647_eval_expr(_76117_eval, _76034_expr);;
	if ((_76317_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _76317_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e437e09c_BuiltinErrorCallExprModel>>()) {
			_case_begin_1cb8a13ea:;
			{
				jule::Ptr<_1e437e09c_BuiltinErrorCallExprModel> _77021_m = _76317_d.get()._field_model.operator jule::Ptr<_1e437e09c_BuiltinErrorCallExprModel>();;
				_1e469367a_process_error_call(_self_, _77021_m,_76034_expr.get()._field_token);
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_76317_d));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437ecc3_BackendEmitExprModel>>() || _match_expr.type_is<jule::Ptr<_1e437dbc3_BuiltinAppendCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e437d233_BuiltinCloneCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e437cd59_BuiltinOutCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e437d046_BuiltinOutlnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e437d60c_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e437d7e9_BuiltinAssertCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e437ddb0_BuiltinCopyCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e437eeb0_FreeExprModel>>() || _match_expr.type_is<jule::Ptr<_1e4354902_FnCallExprModel>>()) {
			_case_begin_1cb8a1692:;
			{
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_76317_d));;
			}
		}
		else {
			_case_begin_1cb8a154e:;
			{
				_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _76034_expr.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1cb8a12b8:;
	};
}



inline void _1e4693b75_check_co_expr(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e436721c_CoExpr> _78937_expr) {
	jule::Ptr<_1c974c73d_Eval> _79017_eval = _1e46b4b74_eval(_self_.get()._field_s, jule::Trait<_1c978dc35_Lookup>(_self_, 0));;
	_79017_eval.get()._field_ignored=true;
	jule::Ptr<_1c974abc0_Data> _79217_d = _1c9766647_eval_expr(_79017_eval, _78937_expr.get()._field_expr);;
	if ((_79217_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _79217_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e4354902_FnCallExprModel>>()) {
			_case_begin_1cb8a7b60:;
			{
				jule::Ptr<_1e4354902_FnCallExprModel> _79921_model = _79217_d.get()._field_model.operator jule::Ptr<_1e4354902_FnCallExprModel>();;
				if (_79921_model.get()._field_func.get()._field_decl.get()._field_exceptional) {
					_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _78937_expr.get()._field_token,jule::Str("concurrent calls not supports exceptionals", 42),jule::Slice<jule::Any>());
					_1e46b018b_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63),jule::Slice<jule::Any>());
				};
				_79921_model.get()._field_is_co=true;
				_1c975d892_check_fn_of_concurrent_call(_79017_eval.ptr(), _79921_model.get()._field_func,_78937_expr.get()._field_expr.get()._field_token);
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_79217_d));;
			}
		}
		else {
			_case_begin_1cb8a6eb1:;
			{
				_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _78937_expr.get()._field_token,jule::Str("statement must have function call expression", 44),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1cb8a6be7:;
	};
}



inline jule::Ptr<_1e46866c3_If> _1e4693e83_check_if(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e4375505_If> _81332_i) {
	jule::Ptr<_1e46862c7_Scope> _81417_s = _1e46930d6_check_child(_self_, _81332_i.get()._field_scope);;
	jule::Ptr<_1c974abc0_Data> _81617_d = _1c9766647_eval_expr(_1e46b4b74_eval(_self_.get()._field_s, jule::Trait<_1c978dc35_Lookup>(_self_, 0)), _81332_i.get()._field_expr);;
	if ((_81617_d == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1c9778e51_Prim> _82117_prim = _1c97767ab_prim(_81617_d.get()._field_kind.ptr());;
	if (((_82117_prim == nullptr) || (!(_1c977bb9b_is_bool(_82117_prim.ptr()))))) {
		_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _81332_i.get()._field_expr.get()._field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1e46866c3_If>(_1e46866c3_If{._field_expr=jule::Any(_81617_d.get()._field_model), ._field_scope=_81417_s});
}



inline jule::Ptr<_1e46869ae_Else> _1e4694291_check_else(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e43758ac_Else> _83334_e) {
	return jule::new_ptr<_1e46869ae_Else>(_1e46869ae_Else{._field_scope=_1e46930d6_check_child(_self_, _83334_e.get()._field_scope)});
}



inline void _1e4694516_check_conditional(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e4375d30_Conditional> _83941_conditional) {
	jule::Ptr<_1e4686daa_Conditional> _84017_c = jule::new_ptr<_1e4686daa_Conditional>(_1e4686daa_Conditional{});;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_84017_c));;
	_84017_c.get()._field_elifs=jule::Slice<jule::Ptr<_1e46866c3_If>>::alloc(0LL,(_83941_conditional.get()._field_tail.len() + 1LL));
	_84017_c.get()._field_elifs = jule::alloc_for_append(_84017_c.get()._field_elifs,1);_84017_c.get()._field_elifs.__push(_1e4693e83_check_if(_self_, _83941_conditional.get()._field_head));;
	{
		auto &expr = _83941_conditional.get()._field_tail;
		auto it = expr.begin();
		_iter_begin_1cb8b23b7:;
		if (it != expr.end()) {
			jule::Ptr<_1e4375505_If> _84621_elif = *it;
			{
				_84017_c.get()._field_elifs = jule::alloc_for_append(_84017_c.get()._field_elifs,1);_84017_c.get()._field_elifs.__push(_1e4693e83_check_if(_self_, _84621_elif));;
			}
			_iter_next_1cb8b23b7:;
			++it;
			goto _iter_begin_1cb8b23b7;
		}
		_iter_end_1cb8b23b7:;
	};
	if ((_83941_conditional.get()._field_default != nullptr)) {
		_84017_c.get()._field_default=_1e4694291_check_else(_self_, _83941_conditional.get()._field_default);
	};
}



inline void _1e4694978_check_iter_scope_ssc(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::U64 _85540_it, jule::Ptr<_1e43702ad_ScopeTree> _85557_tree, jule::Ptr<_1e46862c7_Scope>& _85580_s, jule::Ptr<_1e468ce7c_ScopeChecker> _85595_ssc) {
	_85595_ssc.get()._field_it=_85540_it;
	_1e4692921_check_child_ssc(_self_, _85557_tree,_85580_s,_85595_ssc);
}



inline jule::Ptr<_1e46862c7_Scope> _1e4694dc9_check_iter_scope_sc(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::U64 _86039_it, jule::Ptr<_1e43702ad_ScopeTree> _86056_tree, jule::Ptr<_1e468ce7c_ScopeChecker> _86078_ssc) {
	jule::Ptr<_1e46862c7_Scope> _86117_scope = _1e4692558_get_child(_self_.ptr());;
	_1e4694978_check_iter_scope_ssc(_self_, _86039_it,_86056_tree,_86117_scope,_86078_ssc);
	return _86117_scope;
}



inline jule::Ptr<_1e46862c7_Scope> _1e4695281_check_iter_scope(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::U64 _86636_it, jule::Ptr<_1e43702ad_ScopeTree>& _86654_tree) {
	jule::Ptr<_1e468ce7c_ScopeChecker> _86717_ssc = _1e469d234_new_child_checker(_self_);;
	return _1e4694dc9_check_iter_scope_sc(_self_, _86636_it,_86654_tree,_86717_ssc);
}



inline void _1e4695506_check_inf_iter(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e43736ac_Iter>& _87139_it) {
	jule::Ptr<_1e4687196_InfIter> _87217_kind = jule::new_ptr<_1e4687196_InfIter>();;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_87217_kind));;
	_87217_kind.get()._field_scope=_1e4695281_check_iter_scope(_self_, static_cast<jule::U64>(static_cast<jule::U64>(_87217_kind)),_87139_it.get()._field_scope);
}



inline void _1e469577b_check_while_iter(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e43736ac_Iter>& _87741_it) {
	jule::Ptr<_1e4373e82_WhileKind> _87817_wh = _87741_it.get()._field_kind.operator jule::Ptr<_1e4373e82_WhileKind>();;
	if (((_87817_wh.get()._field_expr == nullptr) && (_87817_wh.get()._field_next == nullptr))) {
		_1e4695506_check_inf_iter(_self_, _87741_it);
		return;;
	};
	jule::Ptr<_1e4687619_WhileIter> _88417_kind = jule::new_ptr<_1e4687619_WhileIter>();;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_88417_kind));;
	_88417_kind.get()._field_scope=_1e4695281_check_iter_scope(_self_, static_cast<jule::U64>(static_cast<jule::U64>(_88417_kind)),_87741_it.get()._field_scope);
	if ((_87817_wh.get()._field_expr != nullptr)) {
		jule::Ptr<_1c974abc0_Data> _88921_d = _1c9766647_eval_expr(_1e46b4b74_eval(_self_.get()._field_s, jule::Trait<_1c978dc35_Lookup>(_self_, 0)), _87817_wh.get()._field_expr);;
		if ((_88921_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1c9778e51_Prim> _89417_prim = _1c97767ab_prim(_88921_d.get()._field_kind.ptr());;
		if ((_89417_prim == nullptr)) {
			_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _87741_it.get()._field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1c977bb9b_is_bool(_89417_prim.ptr())))) {
			_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _87741_it.get()._field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		_88417_kind.get()._field_expr=jule::Any(_88921_d.get()._field_model);
	};
	if (_1e43742d4_is_while_next(_87817_wh.ptr())) {
		if ((!(_1e46857b0_is_valid_ast_st_for_next_st(_87817_wh.get()._field_next)))) {
			_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _87817_wh.get()._field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _91417_n = _self_.get()._field_scope.get()._field_stmts.len();;
		_1e469bc6b_check_node(_self_, _87817_wh.get()._field_next);
		if ((_91417_n < _self_.get()._field_scope.get()._field_stmts.len())) {
			jule::Any _91725_st = _self_.get()._field_scope.get()._field_stmts[_91417_n];;
			_self_.get()._field_scope.get()._field_stmts=_self_.get()._field_scope.get()._field_stmts.slice(0LL,_91417_n);
			if ((!(_1e4685a8a_is_valid_st_for_next_st(_91725_st)))) {
				_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _87817_wh.get()._field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			};
			_88417_kind.get()._field_next=jule::Any(_91725_st);
		};
	};
}



inline void _1e4695a01_check_range_iter(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e43736ac_Iter>& _92841_it) {
	jule::Ptr<_1e4374823_RangeKind> _92917_rang = _92841_it.get()._field_kind.operator jule::Ptr<_1e4374823_RangeKind>();;
	jule::Ptr<_1c974abc0_Data> _93117_d = _1c9766647_eval_expr(_1e46b4b74_eval(_self_.get()._field_s, jule::Trait<_1c978dc35_Lookup>(_self_, 0)), _92917_rang.get()._field_expr);;
	if ((_93117_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1e4687eee_RangeIter> _93617_kind = jule::new_ptr<_1e4687eee_RangeIter>(_1e4687eee_RangeIter{._field_expr=_93117_d, });;
	_1c9741d2b_RangeChecker _94017_rc = _1c9741d2b_RangeChecker{._field_sc=_self_, ._field_rang=_92917_rang, ._field_kind=_93617_kind, ._field_d=_93117_d};;
	jule::Bool _94613_ok = _1c9743723_check(&_94017_rc);;
	if ((!(_94613_ok))) {
		return;;
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_93617_kind));;
	jule::Ptr<_1e468ce7c_ScopeChecker> _95317_ssc = _1e469d234_new_child_checker(_self_);;
	jule::Ptr<_1e46862c7_Scope> _95417_scope = _1e4692558_get_child(_self_.ptr());;
	if ((_93617_kind.get()._field_key_a != nullptr)) {
		if (((!(_1e46ae72e_is_flag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1e4691ce9_is_duplicated_ident(_self_.ptr(), 0LLU,_93617_kind.get()._field_key_a.get()._field_ident))) {
			_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _93617_kind.get()._field_key_a.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_93617_kind.get()._field_key_a.get()._field_ident)}));
			_1e46b018b_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_93617_kind.get()._field_key_a.get()._field_scope=_95417_scope;
		_95317_ssc.get()._field_table.get()._field_vars = jule::alloc_for_append(_95317_ssc.get()._field_table.get()._field_vars,1);_95317_ssc.get()._field_table.get()._field_vars.__push(_93617_kind.get()._field_key_a);;
	};
	if ((_93617_kind.get()._field_key_b != nullptr)) {
		if (((!(_1e46ae72e_is_flag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1e4691ce9_is_duplicated_ident(_self_.ptr(), 0LLU,_93617_kind.get()._field_key_b.get()._field_ident))) {
			_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _93617_kind.get()._field_key_b.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_93617_kind.get()._field_key_b.get()._field_ident)}));
			_1e46b018b_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_93617_kind.get()._field_key_b.get()._field_scope=_95417_scope;
		_95317_ssc.get()._field_table.get()._field_vars = jule::alloc_for_append(_95317_ssc.get()._field_table.get()._field_vars,1);_95317_ssc.get()._field_table.get()._field_vars.__push(_93617_kind.get()._field_key_b);;
	};
	_1e4694978_check_iter_scope_ssc(_self_, static_cast<jule::U64>(static_cast<jule::U64>(_93617_kind)),_92841_it.get()._field_scope,_95417_scope,_95317_ssc);
	_93617_kind.get()._field_scope=_95417_scope;
}



inline void _1e4695c76_check_iter(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e43736ac_Iter> _97834_it) {
	if (_1e4373a0e_is_inf(_97834_it.ptr())) {
		_1e4695506_check_inf_iter(_self_, _97834_it);
		return;;
	};
	{
		auto &_match_expr{ _97834_it.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e4373e82_WhileKind>>()) {
			_case_begin_1cb29244b:;
			{
				_1e469577b_check_while_iter(_self_, _97834_it);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4374823_RangeKind>>()) {
			_case_begin_1cb2932a4:;
			{
				_1e4695a01_check_range_iter(_self_, _97834_it);
			}
		}
		else {
			_case_begin_1cb292a9a:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1cb292a45:;
	};
}



inline jule::Bool _1e4696084_check_valid_cont_label(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::U64 _99442_it) {
	jule::Ptr<_1e468ce7c_ScopeChecker> _99517_scope = _self_;;
	_julec_label_iter:;
	if ((_99517_scope.get()._field_it == _99442_it)) {
		return true;
	};
	if ((_99517_scope.get()._field_parent != nullptr)) {
		_99517_scope=_99517_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Bool _1e46963b4_check_valid_break_label(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::U64 _101043_ptr) {
	jule::Ptr<_1e468ce7c_ScopeChecker> _101117_scope = _self_;;
	_julec_label_iter:;
	if ((_101117_scope.get()._field_it == _101043_ptr)) {
		return true;
	};
	if ((_101117_scope.get()._field_cse != 0LLU)) {
		jule::U64 _101917_mtch = static_cast<jule::U64>(((_1e468a9d5_Case*)(_101117_scope.get()._field_cse))->_field_owner);;
		if ((_101917_mtch == _101043_ptr)) {
			return true;
		};
	};
	if ((_101117_scope.get()._field_parent != nullptr)) {
		_101117_scope=_101117_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Ptr<_1e4688373_ContSt> _1e46966d3_check_cont_valid_scope(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e4375082_ContSt> _103342_c) {
	if (_1e4690a40_is_deferred(_self_)) {
		_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _103342_c.get()._field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_103342_c.get()._field_label != nullptr)) {
		return jule::new_ptr<_1e4688373_ContSt>();
	};
	jule::Ptr<_1e468ce7c_ScopeChecker> _104317_scope = _self_;;
	_julec_label_iter:;
	{
		
		if ((((_104317_scope.get()._field_it == 0LLU) && (_104317_scope.get()._field_parent != nullptr)) && (_104317_scope.get()._field_owner == nullptr))) {
			_case_begin_1cb29b873:;
			{
				_104317_scope=_104317_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_104317_scope.get()._field_it != 0LLU)) {
			_case_begin_1cb29b8ea:;
			{
				return jule::new_ptr<_1e4688373_ContSt>(_1e4688373_ContSt{._field_it=_104317_scope.get()._field_it});
			}
		}
		_match_end_1cb29b7a7:;
	};
	_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _103342_c.get()._field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1e4696958_check_cont(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e4375082_ContSt> _105730_c) {
	jule::Ptr<_1e4688373_ContSt> _105817_cont = _1e46966d3_check_cont_valid_scope(_self_, _105730_c);;
	if ((_105817_cont == nullptr)) {
		return;;
	};
	if ((_105730_c.get()._field_label != nullptr)) {
		jule::Ptr<_1e468bbe5_ScopeLabel> _106421_label = _1e4635e14_find_label_parent(_105730_c.get()._field_label.get()._field_kind,_self_.get()._field_parent);;
		if ((_106421_label == nullptr)) {
			_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _105730_c.get()._field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_105730_c.get()._field_label.get()._field_kind)}));
			return;;
		};
		_106421_label.get()._field_used=true;
		if (((_106421_label.get()._field_pos + 1LL) >= _106421_label.get()._field_scope.get()._field_scope.get()._field_stmts.len())) {
			_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _105730_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_105730_c.get()._field_label.get()._field_kind)}));
			return;;
		};
		jule::I64 _107717_i = (_106421_label.get()._field_pos + 1LL);;
		if ((_107717_i >= _106421_label.get()._field_scope.get()._field_scope.get()._field_stmts.len())) {
			_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _105730_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>());
		} else {
			jule::Any _108125_st = _106421_label.get()._field_scope.get()._field_scope.get()._field_stmts[_107717_i];;
			{
				auto &_match_expr{ _108125_st };
				
				if (_match_expr.type_is<jule::Ptr<_1e4687196_InfIter>>()) {
					_case_begin_1cb2a424e:;
					{
						_105817_cont.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_108125_st.operator jule::Ptr<_1e4687196_InfIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1e4687eee_RangeIter>>()) {
					_case_begin_1cb2a5a69:;
					{
						_105817_cont.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_108125_st.operator jule::Ptr<_1e4687eee_RangeIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1e4687619_WhileIter>>()) {
					_case_begin_1cb2a5ad0:;
					{
						_105817_cont.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_108125_st.operator jule::Ptr<_1e4687619_WhileIter>()));
					}
				}
				else {
					_case_begin_1cb2a58e3:;
					{
						_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _105730_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_105730_c.get()._field_label.get()._field_kind)}));
					}
				}
				_match_end_1cb2a588d:;
			};
		};
	};
	if ((_105817_cont.get()._field_it != 0LLU)) {
		if ((!(_1e4696084_check_valid_cont_label(_self_, _105817_cont.get()._field_it)))) {
			_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _105730_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_105730_c.get()._field_label.get()._field_kind)}));
		};
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_105817_cont));;
}



inline void _1e4696bcd_check_label(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e436d8b6_LabelSt> _110435_l) {
	if ((_1e4691326_find_label(_self_.ptr(), _110435_l.get()._field_ident) != nullptr)) {
		_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _110435_l.get()._field_token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>::make({jule::Any(_110435_l.get()._field_ident)}));
		return;;
	};
	jule::Ptr<_1e4688a16_Label> _111017_label = jule::new_ptr<_1e4688a16_Label>(_1e4688a16_Label{._field_ident=_110435_l.get()._field_ident});;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_111017_label));;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1e468bbe5_ScopeLabel>>::make({jule::new_ptr<_1e468bbe5_ScopeLabel>(_1e468bbe5_ScopeLabel{._field_token=_110435_l.get()._field_token, ._field_label=_111017_label, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_stmts.len() - 1LL)), ._field_scope=_self_, })}));
}



inline void _1e4696e53_push_goto(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e436dc6d_GotoSt> _112333_gt) {
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(jule::new_ptr<_1e4688d02_GotoSt>(_1e4688d02_GotoSt{._field_ident=_112333_gt.get()._field_label.get()._field_kind})));;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1e468c168_ScopeGoto>>::make({jule::new_ptr<_1e468c168_ScopeGoto>(_1e468c168_ScopeGoto{._field_gt=_112333_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_stmts.len() - 1LL))})}));
}



inline void _1e46971c8_check_postfix(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e436eba3_AssignSt> _113537_a) {
	if ((_113537_a.get()._field_left.len() > 1LL)) {
		_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _113537_a.get()._field_setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e43659e0_Expr> _114117_expr = _113537_a.get()._field_left[0LL].get()._field_expr;;
	jule::Ptr<_1c974abc0_Data> _114217_d = _1c9766647_eval_expr(_1e46b4b74_eval(_self_.get()._field_s, jule::Trait<_1c978dc35_Lookup>(_self_, 0)), _114117_expr);;
	if ((_114217_d == nullptr)) {
		return;;
	};
	_1e46854e6_check_assign(_self_.get()._field_s,_114217_d,nullptr,_113537_a.get()._field_setter);
	if ((_1c9776c84_ptr(_114217_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1c97809c4_Ptr> _115021_ptr = _1c9776c84_ptr(_114217_d.get()._field_kind.ptr());;
		if (_1c9781497_is_unsafe(_115021_ptr.ptr())) {
			_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _113537_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_113537_a.get()._field_setter.get()._field_kind),jule::Any(_1c9774aa6_to_str(_114217_d.get()._field_kind.ptr()))}));
			return;;
		};
	} else {
		if (((_1c97767ab_prim(_114217_d.get()._field_kind.ptr()) == nullptr) || (!(_1e46843e6_is_num(_1c97767ab_prim(_114217_d.get()._field_kind.ptr()).get()._field_kind))))) {
			_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _113537_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_113537_a.get()._field_setter.get()._field_kind),jule::Any(_1c9774aa6_to_str(_114217_d.get()._field_kind.ptr()))}));
			return;;
		};
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(jule::new_ptr<_1e46891a9_Postfix>(_1e46891a9_Postfix{._field_expr=jule::Any(_114217_d.get()._field_model), ._field_op=_113537_a.get()._field_setter.get()._field_kind})));;
}



inline jule::Bool _1e46974d6_is_new_assign_ident(_1e468ce7c_ScopeChecker* _self_, jule::Str _116838_ident) {
	if ((_20cda1e4c_is_ignore_ident(_116838_ident) || _116838_ident.empty())) {
		return false;
	};
	return (_1c97489c0_def_by_ident((*_self_)._field_table.ptr(), _116838_ident,false) == nullptr);
}



inline jule::Bool _1e4697959_check_structure_assign_op(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e43462ea_StructIns>& _117650_s, jule::Ptr<_1e436eba3_AssignSt>& _117670_a, jule::Ptr<_1c974abc0_Data>& _117689_r) {
	jule::Ptr<_1e4383018_FnIns> _117917_overload = nullptr;;
	{
		auto &_match_expr{ _117670_a.get()._field_setter.get()._field_kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_1cb9aabb9:;
			{
				_117917_overload=_117650_s.get()._field_operators._field_add_assign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_1cb9ababb:;
			{
				_117917_overload=_117650_s.get()._field_operators._field_sub_assign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_1cb9abb32:;
			{
				_117917_overload=_117650_s.get()._field_operators._field_div_assign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_1cb9abb98:;
			{
				_117917_overload=_117650_s.get()._field_operators._field_mul_assign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_1cb9aa8cd:;
			{
				_117917_overload=_117650_s.get()._field_operators._field_mod_assign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_1cb9aa944:;
			{
				_117917_overload=_117650_s.get()._field_operators._field_shl_assign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_1cb9aa9aa:;
			{
				_117917_overload=_117650_s.get()._field_operators._field_shr_assign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_1cb9aaa21:;
			{
				_117917_overload=_117650_s.get()._field_operators._field_bit_or_assign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_1cb9abd96:;
			{
				_117917_overload=_117650_s.get()._field_operators._field_bit_and_assign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_1cb9abe0c:;
			{
				_117917_overload=_117650_s.get()._field_operators._field_bit_xor_assign;
			}
		}
		else {
			_case_begin_1cb9aa427:;
			{
				_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _117670_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_117670_a.get()._field_setter.get()._field_kind),jule::Any(_1e4339de3_to_str(_117650_s.ptr()))}));
				return false;
			}
		}
		_match_end_1cb9aa867:;
	};
	if ((_117917_overload == nullptr)) {
		_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _117670_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_117670_a.get()._field_setter.get()._field_kind),jule::Any(_1e4339de3_to_str(_117650_s.ptr()))}));
		return false;
	};
	jule::Ptr<_1e438217c_ParamIns> _121117_p = _117917_overload.get()._field_params[1LL];;
	return _1e46b516e_check_assign_type(_self_.get()._field_s, _121117_p.get()._field_decl.get()._field_reference,_121117_p.get()._field_kind,_117689_r,_117670_a.get()._field_setter);
}



inline void _1e4697be0_check_single_assign(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e436eba3_AssignSt>& _121544_a) {
	jule::Ptr<_1c974abc0_Data> _121617_l = nullptr;;
	if ((!(_20cda1e4c_is_ignore_ident(_121544_a.get()._field_left[0LL].get()._field_ident)))) {
		jule::Ptr<_1e43659e0_Expr> _121921_expr = _121544_a.get()._field_left[0LL].get()._field_expr;;
		_121617_l=_1c9766647_eval_expr(_1e46b4b74_eval(_self_.get()._field_s, jule::Trait<_1c978dc35_Lookup>(_self_, 0)), _121921_expr);
		if ((_121617_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1c974c73d_Eval> _122617_eval = nullptr;;
	if ((_121617_l != nullptr)) {
		_122617_eval=_1e46b4866_evalp(_self_.get()._field_s, jule::Trait<_1c978dc35_Lookup>(_self_, 0),_121617_l.get()._field_kind);
	} else {
		_122617_eval=_1e46b4b74_eval(_self_.get()._field_s, jule::Trait<_1c978dc35_Lookup>(_self_, 0));
	};
	_122617_eval.get()._field_unsafety=_1e4690127_is_unsafe(_self_);
	jule::Ptr<_1c974abc0_Data> _123317_r = _1c9766647_eval_expr(_122617_eval, _121544_a.get()._field_right);;
	if ((_123317_r == nullptr)) {
		return;;
	};
	if ((_121617_l == nullptr)) {
		if (_1c9775832_void(_123317_r.get()._field_kind.ptr())) {
			_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _121544_a.get()._field_right.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_123317_r));;
		return;;
	};
	if ((!(_1e46854e6_check_assign(_self_.get()._field_s,_121617_l,_123317_r,_121544_a.get()._field_setter)))) {
		return;;
	};
	if ((_1c97781d6_tup(_123317_r.get()._field_kind.ptr()) != nullptr)) {
		_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _121544_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e4347a8d_OperandExprModel> _125517_lm = jule::new_ptr<_1e4347a8d_OperandExprModel>(_1e4347a8d_OperandExprModel{._field_kind=_121617_l.get()._field_kind, ._field_model=jule::Any(_121617_l.get()._field_model)});;
	jule::Ptr<_1e4347a8d_OperandExprModel> _125917_rm = jule::new_ptr<_1e4347a8d_OperandExprModel>(_1e4347a8d_OperandExprModel{._field_kind=_123317_r.get()._field_kind, ._field_model=jule::Any(_123317_r.get()._field_model)});;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(jule::new_ptr<_1e468962c_Assign>(_1e468962c_Assign{._field_l=_125517_lm, ._field_r=_125917_rm, ._field_op=_121544_a.get()._field_setter})));;
	if ((_121544_a.get()._field_setter.get()._field_kind != jule::Str("=", 1))) {
		jule::Ptr<_1e43462ea_StructIns> _126621_strct = _1c9777999_strct(_121617_l.get()._field_kind.ptr());;
		if ((_126621_strct != nullptr)) {
			_1e4697959_check_structure_assign_op(_self_, _126621_strct,_121544_a,_123317_r);
			return;;
		};
		_121544_a.get()._field_setter.get()._field_kind=_121544_a.get()._field_setter.get()._field_kind.slice(0LL,(_121544_a.get()._field_setter.get()._field_kind.len() - 1LL));
		_1c9768858_BinaryEval _127321_solver = static__1c976924e_new(_122617_eval,_121544_a.get()._field_setter);;
		_123317_r=_1c976dbd2_solve_explicit(&_127321_solver, _121617_l,_123317_r);
		if ((_123317_r == nullptr)) {
			return;;
		};
		_121544_a.get()._field_setter.get()._field_kind+=jule::Str("=", 1);
		return;;
	};
	_1c973822e_AssignTypeChecker _128217_checker = _1c973822e_AssignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_121617_l.get()._field_kind, ._field_d=_123317_r, ._field_error_token=_121544_a.get()._field_setter};;
	if (_1c97393a6_check(&_128217_checker)) {
		_125917_rm.get()._field_model=jule::Any(_123317_r.get()._field_model);
		_125517_lm.get()._field_model=jule::Any(_121617_l.get()._field_model);
	};
}



inline void _1e469822e___process_end_part_of_multi_assign(_1e468ce7c_ScopeChecker* _self_, jule::Ptr<_1e46899d4_MultiAssign> _129457_st, jule::Ptr<_1e436eba3_AssignSt> _129513_a, jule::Ptr<_1e436e664_AssignLeft> _129531_lexpr, jule::Ptr<_1c974abc0_Data> _129555_l, jule::Ptr<_1c974abc0_Data> _129569_r) {
	if (_20cda1e4c_is_ignore_ident(_129531_lexpr.get()._field_ident)) {
		if (_1c9775832_void(_129569_r.get()._field_kind.ptr())) {
			_1e46aed6c_push_err((*_self_)._field_s.ptr(), _129513_a.get()._field_right.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_129457_st.get()._field_l = jule::alloc_for_append(_129457_st.get()._field_l,1);_129457_st.get()._field_l.__push(nullptr);;
		return;;
	};
	if ((_129513_a.get()._field_declarative && _1e46974d6_is_new_assign_ident(&(*_self_), _129531_lexpr.get()._field_ident))) {
		if (_1e4691ce9_is_duplicated_ident(&(*_self_), 0LLU,_129531_lexpr.get()._field_ident)) {
			_1e46aed6c_push_err((*_self_)._field_s.ptr(), _129531_lexpr.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_129531_lexpr.get()._field_ident)}));
			_1e46b018b_push_suggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
			_1e4690567_stop(&(*_self_));
			return;;
		};
		jule::Ptr<_1e46c6eb6_Var> _131321_v = jule::new_ptr<_1e46c6eb6_Var>(_1e46c6eb6_Var{._field_scope=(*_self_)._field_scope, ._field_token=_129531_lexpr.get()._field_token, ._field_ident=_129531_lexpr.get()._field_ident, ._field_mutable=_129531_lexpr.get()._field_mutable, ._field_reference=_129531_lexpr.get()._field_reference, ._field_value=jule::new_ptr<_1c974bc48_Value>(_1c974bc48_Value{._field_expr=_129513_a.get()._field_right, ._field_data=_129569_r}), });;
		_1e46be80a_check_var((*_self_)._field_s, _131321_v);
		_129457_st.get()._field_l = jule::alloc_for_append(_129457_st.get()._field_l,1);_129457_st.get()._field_l.__push(jule::Any(_131321_v));;
		(*_self_)._field_table.get()._field_vars = jule::alloc_for_append((*_self_)._field_table.get()._field_vars,1);(*_self_)._field_table.get()._field_vars.__push(_131321_v);;
		(*_self_)._field_scope.get()._field_stmts = jule::alloc_for_append((*_self_)._field_scope.get()._field_stmts,1);(*_self_)._field_scope.get()._field_stmts.__push(jule::Any(_131321_v));;
		return;;
	};
	if ((_129531_lexpr.get()._field_mutable || _129531_lexpr.get()._field_reference)) {
		_1e46aed6c_push_err((*_self_)._field_s.ptr(), _129531_lexpr.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_129531_lexpr.get()._field_ident)}));
		_1e46b018b_push_suggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((!(_1e46854e6_check_assign((*_self_)._field_s,_129555_l,_129569_r,_129513_a.get()._field_setter)))) {
		return;;
	};
	;
	_1e46b6e73_check_validity_for_init_expr((*_self_)._field_s, _129555_l.get()._field_mutable,false,_129555_l.get()._field_kind,_129569_r,_129513_a.get()._field_setter);
	_1c973822e_AssignTypeChecker _134817_checker = _1c973822e_AssignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_129555_l.get()._field_kind, ._field_d=_129569_r, ._field_error_token=_129513_a.get()._field_setter};;
	_1c97393a6_check(&_134817_checker);
	_129457_st.get()._field_l = jule::alloc_for_append(_129457_st.get()._field_l,1);_129457_st.get()._field_l.__push(jule::Any(_129555_l.get()._field_model));;
}



inline void _1e46984a4_check_ret_multi_assign(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e436eba3_AssignSt>& _135947_a) {
	jule::Ptr<_1c974abc0_Data> _136017_rd = _1c9766647_eval_expr(_1e46b4b74_eval(_self_.get()._field_s, jule::Trait<_1c978dc35_Lookup>(_self_, 0)), _135947_a.get()._field_right);;
	if ((_136017_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1c974abc0_Data>> _136517_r = _1e4684a34_get_datas_from_tuple_data(_136017_rd);;
	{
		
		if ((_135947_a.get()._field_left.len() > _136517_r.len())) {
			_case_begin_1cb9d354e:;
			{
				_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _135947_a.get()._field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_135947_a.get()._field_left.len() < _136517_r.len())) {
			_case_begin_1cb9d35c6:;
			{
				_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _135947_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1cb9d34d8:;
	};
	jule::Ptr<_1e46899d4_MultiAssign> _137617_st = jule::new_ptr<_1e46899d4_MultiAssign>(_1e46899d4_MultiAssign{._field_r=jule::Any(_136017_rd.get()._field_model)});;
	if ((_1c97781d6_tup(_136017_rd.get()._field_kind.ptr()) == nullptr)) {
		_137617_st.get()._field_r=jule::Any(jule::new_ptr<_1e437cb6c_TupleExprModel>(_1e437cb6c_TupleExprModel{._field_datas=_136517_r}));
	};
	{
		auto &expr = _135947_a.get()._field_left;
		auto it = expr.begin();
		_iter_begin_1cb9d6750:;
		if (it != expr.end()) {
			jule::I64 _138413_i = it - expr.begin();
			{
				jule::Ptr<_1e436e664_AssignLeft> _138521_lexpr = _135947_a.get()._field_left[_138413_i];;
				jule::Ptr<_1c974abc0_Data> _138621_l = nullptr;;
				if (((!(_20cda1e4c_is_ignore_ident(_138521_lexpr.get()._field_ident))) && ((!(_135947_a.get()._field_declarative)) || (!(_1e46974d6_is_new_assign_ident(_self_.ptr(), _138521_lexpr.get()._field_ident)))))) {
					_138621_l=_1c9766647_eval_expr(_1e46b4b74_eval(_self_.get()._field_s, jule::Trait<_1c978dc35_Lookup>(_self_, 0)), _138521_lexpr.get()._field_expr);
					if ((_138621_l == nullptr)) {
						goto _iter_next_1cb9d6750;
					};
				};
				_1e469822e___process_end_part_of_multi_assign(_self_.ptr(), _137617_st,_135947_a,_138521_lexpr,_138621_l,_136517_r[_138413_i]);
			}
			_iter_next_1cb9d6750:;
			++it;
			_138413_i++;
			goto _iter_begin_1cb9d6750;
		}
		_iter_end_1cb9d6750:;
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_137617_st));;
}



inline void _1e4698729_check_multi_assign(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e436eba3_AssignSt>& _140243_a) {
	{
		auto &_match_expr{ _140243_a.get()._field_right.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e43699b1_FnCallExpr>>()) {
			_case_begin_1cb9dabc7:;
			{
				_1e46984a4_check_ret_multi_assign(_self_, _140243_a);
				return;;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4366d65_UnsafeExpr>>()) {
			_case_begin_1cb9dac3d:;
			{
				{
					auto &_match_expr{ _140243_a.get()._field_right.get()._field_kind.operator jule::Ptr<_1e4366d65_UnsafeExpr>().get()._field_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1e43699b1_FnCallExpr>>()) {
						_case_begin_1cb9dc0d5:;
						{
							_1e46984a4_check_ret_multi_assign(_self_, _140243_a);
							return;;
						}
					}
					_match_end_1cb9dc06e:;
				};
			}
		}
		_match_end_1cb9dab1c:;
	};
	jule::Slice<jule::Any> _141517_right = _1e4684c76_get_expr_models(_140243_a.get()._field_right.get()._field_kind);;
	{
		
		if ((_140243_a.get()._field_left.len() > _141517_right.len())) {
			_case_begin_1cb9dcd72:;
			{
				_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _140243_a.get()._field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_140243_a.get()._field_left.len() < _141517_right.len())) {
			_case_begin_1cb9dcde9:;
			{
				_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _140243_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1cb9dcc84:;
	};
	jule::Ptr<_1e437cb6c_TupleExprModel> _142617_right_tuple = jule::new_ptr<_1e437cb6c_TupleExprModel>();;
	jule::Ptr<_1e46899d4_MultiAssign> _142817_st = jule::new_ptr<_1e46899d4_MultiAssign>(_1e46899d4_MultiAssign{._field_r=jule::Any(_142617_right_tuple)});;
	{
		auto &expr = _140243_a.get()._field_left;
		auto it = expr.begin();
		_iter_begin_1cb9e0902:;
		if (it != expr.end()) {
			jule::I64 _143213_i = it - expr.begin();
			{
				jule::Ptr<_1e436e664_AssignLeft> _143321_lexpr = _140243_a.get()._field_left[_143213_i];;
				jule::Ptr<_1c974abc0_Data> _143421_l = nullptr;;
				if (((!(_20cda1e4c_is_ignore_ident(_143321_lexpr.get()._field_ident))) && ((!(_140243_a.get()._field_declarative)) || (!(_1e46974d6_is_new_assign_ident(_self_.ptr(), _143321_lexpr.get()._field_ident)))))) {
					_143421_l=_1c9766647_eval_expr(_1e46b4b74_eval(_self_.get()._field_s, jule::Trait<_1c978dc35_Lookup>(_self_, 0)), _143321_lexpr.get()._field_expr);
					if ((_143421_l == nullptr)) {
						goto _iter_next_1cb9e0902;
					};
				};
				jule::Ptr<_1e43659e0_Expr> _144421_expr = jule::new_ptr<_1e43659e0_Expr>(_1e43659e0_Expr{._field_token=_140243_a.get()._field_right.get()._field_token, ._field_kind=jule::Any(_141517_right[_143213_i])});;
				jule::Ptr<_1c974c73d_Eval> _144821_eval = nullptr;;
				if ((_143421_l != nullptr)) {
					_144821_eval=_1e46b4866_evalp(_self_.get()._field_s, jule::Trait<_1c978dc35_Lookup>(_self_, 0),_143421_l.get()._field_kind);
				} else {
					_144821_eval=_1e46b4b74_eval(_self_.get()._field_s, jule::Trait<_1c978dc35_Lookup>(_self_, 0));
				};
				jule::Ptr<_1c974abc0_Data> _145421_r = _1c9766647_eval_expr(_144821_eval, _144421_expr);;
				if ((_145421_r == nullptr)) {
					goto _iter_next_1cb9e0902;
				};
				_142617_right_tuple.get()._field_datas = jule::alloc_for_append(_142617_right_tuple.get()._field_datas,1);_142617_right_tuple.get()._field_datas.__push(_145421_r);;
				_1e469822e___process_end_part_of_multi_assign(_self_.ptr(), _142817_st,_140243_a,_143321_lexpr,_143421_l,_145421_r);
			}
			_iter_next_1cb9e0902:;
			++it;
			_143213_i++;
			goto _iter_begin_1cb9e0902;
		}
		_iter_end_1cb9e0902:;
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_142817_st));;
}



inline void _1e469899e_check_assign_st(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e436eba3_AssignSt> _146739_a) {
	{
		
		if (_20cda3e60_is_postfix_op(_146739_a.get()._field_setter.get()._field_kind)) {
			_case_begin_1cb9e7c5b:;
			{
				_1e46971c8_check_postfix(_self_, _146739_a);
			}
		}
		else if (((_146739_a.get()._field_left.len() == 1LL) && (!(_146739_a.get()._field_declarative)))) {
			_case_begin_1cb9e794d:;
			{
				_1e4697be0_check_single_assign(_self_, _146739_a);
			}
		}
		else {
			_case_begin_1cb9e78d7:;
			{
				_1e4698729_check_multi_assign(_self_, _146739_a);
			}
		}
		_match_end_1cb9e781b:;
	};
}



inline jule::Ptr<_1e46862c7_Scope> _1e4698d56_check_case_scope(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e468a9d5_Case>& _147837_c, jule::Ptr<_1e43702ad_ScopeTree>& _147852_tree) {
	jule::Ptr<_1e468ce7c_ScopeChecker> _147917_ssc = _1e469d234_new_child_checker(_self_);;
	_147917_ssc.get()._field_cse=static_cast<jule::U64>(static_cast<jule::U64>(_147837_c));
	return _1e4692cc8_check_child_sc(_self_, _147852_tree,_147917_ssc);
}



inline jule::Ptr<_1e468a9d5_Case> _1e4699351_check_case(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e468a023_Match> _148434_m, jule::I64 _148445_i, jule::Ptr<_1e4376979_Case> _148457_c, jule::Ptr<_1c974abc0_Data> _148487_expr) {
	jule::Ptr<_1e468a9d5_Case> _148517__case = _148434_m.get()._field_cases[_148445_i];;
	_148517__case.get()._field_exprs=jule::Slice<jule::Ptr<_1c974abc0_Data>>::alloc(0LL,_148457_c.get()._field_exprs.len());
	jule::Bool _148717_generic_matched = false;;
	jule::Ptr<_1c974c73d_Eval> _148817_eval = _1e46b4b74_eval(_self_.get()._field_s, jule::Trait<_1c978dc35_Lookup>(_self_, 0));;
	{
		auto &expr = _148457_c.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1cb9ee180:;
		if (it != expr.end()) {
			jule::Ptr<_1e43659e0_Expr> _148921_e = *it;
			{
				jule::Ptr<_1c974abc0_Data> _149021_d = _1c976602b_eval_expr_kind(_148817_eval, jule::Any(_148921_e.get()._field_kind));;
				if ((_149021_d == nullptr)) {
					goto _iter_next_1cb9ee180;
				};
				if (_148434_m.get()._field_type_match) {
					_148517__case.get()._field_exprs = jule::alloc_for_append(_148517__case.get()._field_exprs,1);_148517__case.get()._field_exprs.__push(_149021_d);;
					if ((_1e4684902_count_match_type(_148434_m,_149021_d.get()._field_kind) > 1LL)) {
						_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _148921_e.get()._field_token,jule::Str("duplicated pattern: type @ is already matched", 45),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_149021_d.get()._field_kind.ptr()))}));
					};
					if (_148487_expr.get()._field_kind.get()._field_generic) {
						_148717_generic_matched=(_148717_generic_matched || _1c9774db4_equals(_148487_expr.get()._field_kind, _149021_d.get()._field_kind));
					} else {
						jule::Ptr<_1e43d8d0a_Trait> _150225_trt = _1c9777c0d_trt(_148487_expr.get()._field_kind.ptr());;
						if ((_150225_trt != nullptr)) {
							_1e46b55e2_check_type_compatibility(_self_.get()._field_s, _148487_expr.get()._field_kind,_149021_d.get()._field_kind,_148921_e.get()._field_token);
						};
					};
					goto _iter_next_1cb9ee180;
				};
				if (_149021_d.get()._field_decl) {
					_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _148921_e.get()._field_token,jule::Str("expecting expression, found type declaration", 44),jule::Slice<jule::Any>());
					_1e46b018b_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49),jule::Slice<jule::Any>());
					goto _iter_next_1cb9ee180;
				};
				_148517__case.get()._field_exprs = jule::alloc_for_append(_148517__case.get()._field_exprs,1);_148517__case.get()._field_exprs.__push(_149021_d);;
				_1c973822e_AssignTypeChecker _151921_checker = _1c973822e_AssignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_148487_expr.get()._field_kind, ._field_d=_149021_d, ._field_error_token=_148921_e.get()._field_token};;
				_1c97393a6_check(&_151921_checker);
			}
			_iter_next_1cb9ee180:;
			++it;
			goto _iter_begin_1cb9ee180;
		}
		_iter_end_1cb9ee180:;
	};
	if ((((!(_148434_m.get()._field_type_match)) || (!(_148487_expr.get()._field_kind.get()._field_generic))) || _148717_generic_matched)) {
		_148517__case.get()._field_scope=_1e4698d56_check_case_scope(_self_, _148517__case,_148457_c.get()._field_scope);
	};
	return _148517__case;
}



inline void _1e4699719_check_cases(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e4377150_MatchCase>& _153336_m, jule::Ptr<_1e468a023_Match> _153355_rm, jule::Ptr<_1c974abc0_Data> _153371_expr) {
	_153355_rm.get()._field_cases=jule::Slice<jule::Ptr<_1e468a9d5_Case>>::alloc(0LL,_153336_m.get()._field_cases.len());
	{
		auto &expr = _153336_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1cba08a08:;
		if (it != expr.end()) {
			jule::I64 _153513_i = it - expr.begin();
			{
				jule::Ptr<_1e468a9d5_Case> _153621__case = jule::new_ptr<_1e468a9d5_Case>(_1e468a9d5_Case{._field_owner=_153355_rm, });;
				if ((_153513_i > 0LL)) {
					_153355_rm.get()._field_cases[(_153513_i - 1LL)].get()._field_next=_153621__case;
				};
				_153355_rm.get()._field_cases = jule::alloc_for_append(_153355_rm.get()._field_cases,1);_153355_rm.get()._field_cases.__push(_153621__case);;
			}
			_iter_next_1cba08a08:;
			++it;
			_153513_i++;
			goto _iter_begin_1cba08a08;
		}
		_iter_end_1cba08a08:;
	};
	if (((_153355_rm.get()._field_default != nullptr) && (_153336_m.get()._field_cases.len() > 0LL))) {
		_153355_rm.get()._field_cases[(_153355_rm.get()._field_cases.len() - 1LL)].get()._field_next=_153355_rm.get()._field_default;
	};
	{
		auto &expr = _153336_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1cba0bda2:;
		if (it != expr.end()) {
			jule::I64 _154914_i = it - expr.begin();
			jule::Ptr<_1e4376979_Case> _154921_c = *it;
			{
				_1e4699351_check_case(_self_, _153355_rm,_154914_i,_154921_c,_153371_expr);
			}
			_iter_next_1cba0bda2:;
			++it;
			_154914_i++;
			goto _iter_begin_1cba0bda2;
		}
		_iter_end_1cba0bda2:;
	};
}



inline jule::Ptr<_1e468a9d5_Case> _1e4699ac1_check_default(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e468a023_Match> _155437_m, jule::Ptr<_1e43758ac_Else> _155452_d) {
	jule::Ptr<_1e468a9d5_Case> _155517_def = jule::new_ptr<_1e468a9d5_Case>(_1e468a9d5_Case{._field_owner=_155437_m, });;
	_155517_def.get()._field_scope=_1e4698d56_check_case_scope(_self_, _155517_def,_155452_d.get()._field_scope);
	return _155517_def;
}



inline void _1e4699d46_check_comptime_panic(_1e468ce7c_ScopeChecker* _self_, jule::Ptr<_1e46862c7_Scope>& _156240_s) {
	if ((_156240_s.get()._field_stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _156713_stmt = _156240_s.get()._field_stmts[0LL];;
	{
		auto &_match_expr{ _156713_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1c974abc0_Data>>()) {
			_case_begin_1cba10e61:;
			{
				jule::Ptr<_1c974abc0_Data> _157017_d = _156713_stmt.operator jule::Ptr<_1c974abc0_Data>();;
				{
					auto &_match_expr{ _157017_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1e437d60c_BuiltinPanicCallExprModel>>()) {
						_case_begin_1cba11c42:;
						{
							jule::Ptr<_1e437d60c_BuiltinPanicCallExprModel> _157321_m = _157017_d.get()._field_model.operator jule::Ptr<_1e437d60c_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ _157321_m.get()._field_expr };
								
								if (_match_expr.type_is<jule::Ptr<_1c968bb88_Const>>()) {
									_case_begin_1cba12b33:;
									{
										jule::Ptr<_1c968bb88_Const> _157625_c = _157321_m.get()._field_expr.operator jule::Ptr<_1c968bb88_Const>();;
										if (_1c96909e4_is_str(_157625_c.ptr())) {
											_1e46aed6c_push_err((*_self_)._field_s.ptr(), (*_self_)._field_called_from,jule::Str("compile-time panic: @", 21),jule::Slice<jule::Any>::make({jule::Any(_1c968d64b_read_str(_157625_c.ptr()))}));
										};
									}
								}
								_match_end_1cba12a9a:;
							};
						}
					}
					_match_end_1cba11ba9:;
				};
			}
		}
		_match_end_1cba10e0b:;
	};
}



inline void _1e469a165_push_type_match(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e468a023_Match> _158539_tm, jule::Ptr<_1e4377150_MatchCase>& _158556_m) {
	if (_158539_tm.get()._field_expr.get()._field_kind.get()._field_generic) {
		{
			auto &expr = _158539_tm.get()._field_cases;
			auto it = expr.begin();
			_iter_begin_1cba14e87:;
			if (it != expr.end()) {
				jule::Ptr<_1e468a9d5_Case> _158925_c = *it;
				{
					if ((_158925_c.get()._field_scope != nullptr)) {
						_1e4699d46_check_comptime_panic(_self_.ptr(), _158925_c.get()._field_scope);
						_158539_tm.get()._field_default=_158925_c;
						_158539_tm.get()._field_cases=nullptr;
						goto _julec_label_push;
					};
				}
				_iter_next_1cba14e87:;
				++it;
				goto _iter_begin_1cba14e87;
			}
			_iter_end_1cba14e87:;
		};
		if ((_158556_m.get()._field_default != nullptr)) {
			_158539_tm.get()._field_cases=nullptr;
			_158539_tm.get()._field_default=_1e4699ac1_check_default(_self_, _158539_tm,_158556_m.get()._field_default);
			if ((_158539_tm.get()._field_default != nullptr)) {
				_1e4699d46_check_comptime_panic(_self_.ptr(), _158539_tm.get()._field_default.get()._field_scope);
			};
		};
	};
	_julec_label_push:;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_158539_tm));;
}



inline void _1e469a3da_check_type_match(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e4377150_MatchCase>& _160941_m) {
	jule::Ptr<_1c974abc0_Data> _161017_d = _1c9766339_eval(_1e46b4b74_eval(_self_.get()._field_s, jule::Trait<_1c978dc35_Lookup>(_self_, 0)), _160941_m.get()._field_expr);;
	if ((_161017_d == nullptr)) {
		return;;
	};
	if (((!(_161017_d.get()._field_kind.get()._field_generic)) && (!((((_1c97767ab_prim(_161017_d.get()._field_kind.ptr()) != nullptr) && _1c977c174_is_any(_1c97767ab_prim(_161017_d.get()._field_kind.ptr()).ptr())) || (_1c9777c0d_trt(_161017_d.get()._field_kind.ptr()) != nullptr)))))) {
		_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _160941_m.get()._field_expr.get()._field_token,jule::Str("type-match must be have <any>, <trait> or <generic> typed expression", 68),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e468a023_Match> _162117_tm = jule::new_ptr<_1e468a023_Match>(_1e468a023_Match{._field_expr=_161017_d, ._field_type_match=true, });;
	if (((!(_162117_tm.get()._field_expr.get()._field_kind.get()._field_generic)) && (_160941_m.get()._field_default != nullptr))) {
		_162117_tm.get()._field_default=_1e4699ac1_check_default(_self_, _162117_tm,_160941_m.get()._field_default);
	};
	_1e4699719_check_cases(_self_, _160941_m,_162117_tm,_161017_d);
	_1e469a165_push_type_match(_self_, _162117_tm,_160941_m);
}



inline void _1e469a660_check_common_match(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e4377150_MatchCase>& _163443_m) {
	jule::Ptr<_1c974abc0_Data> _163517_d = nullptr;;
	if ((_163443_m.get()._field_expr == nullptr)) {
		_163517_d=jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("bool", 4)), 5)}), ._field_constant=static__1c968c0c8_new_bool(true)});
		_163517_d.get()._field_model=jule::Any(_163517_d.get()._field_constant);
	} else {
		_163517_d=_1c9766647_eval_expr(_1e46b4b74_eval(_self_.get()._field_s, jule::Trait<_1c978dc35_Lookup>(_self_, 0)), _163443_m.get()._field_expr);
		if ((_163517_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1e468a023_Match> _164917_mc = jule::new_ptr<_1e468a023_Match>(_1e468a023_Match{._field_expr=_163517_d, });;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_164917_mc));;
	if ((_163443_m.get()._field_default != nullptr)) {
		_164917_mc.get()._field_default=_1e4699ac1_check_default(_self_, _164917_mc,_163443_m.get()._field_default);
	};
	_1e4699719_check_cases(_self_, _163443_m,_164917_mc,_163517_d);
}



inline void _1e469a8d5_check_match(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e4377150_MatchCase> _166135_m) {
	if (_166135_m.get()._field_type_match) {
		_1e469a3da_check_type_match(_self_, _166135_m);
		return;;
	};
	_1e469a660_check_common_match(_self_, _166135_m);
}



inline void _1e469ab5a_check_fall(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e436e059_FallSt> _166930_f) {
	if ((((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_stmts.len() + 1LL) < _self_.get()._field_scope.get()._field_stmts.len())) || _1e4690a40_is_deferred(_self_))) {
		_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _166930_f.get()._field_token,jule::Str("fall keyword can only useable at end of the case scopes", 55),jule::Slice<jule::Any>());
		return;;
	};
	_1e468a9d5_Case* _167717__case = ((_1e468a9d5_Case*)(_self_.get()._field_cse));;
	if ((_167717__case->_field_next == nullptr)) {
		_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _166930_f.get()._field_token,jule::Str("fall cannot useable at final case", 33),jule::Slice<jule::Any>());
		_1e46b018b_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>());
		return;;
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(jule::new_ptr<_1e468b167_FallSt>(_1e468b167_FallSt{._field_dest_case=static_cast<jule::U64>(static_cast<jule::U64>(_167717__case->_field_next))})));;
}



inline jule::Ptr<_1e468872a_BreakSt> _1e469ae68_check_break_with_label(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e4374bca_BreakSt> _168942_b) {
	jule::Ptr<_1e468872a_BreakSt> _169017_brk = _1e469b276_check_plain_break(_self_, _168942_b);;
	if ((_169017_brk == nullptr)) {
		return nullptr;
	};
	_169017_brk.get()._field_it=0LLU;
	_169017_brk.get()._field_mtch=0LLU;
	jule::Ptr<_1e468bbe5_ScopeLabel> _170017_label = _1e4635e14_find_label_parent(_168942_b.get()._field_label.get()._field_kind,_self_.get()._field_parent);;
	if ((_170017_label == nullptr)) {
		_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _168942_b.get()._field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_168942_b.get()._field_label.get()._field_kind)}));
		return nullptr;
	};
	_170017_label.get()._field_used=true;
	if (((_170017_label.get()._field_pos + 1LL) >= _170017_label.get()._field_scope.get()._field_scope.get()._field_stmts.len())) {
		_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _168942_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_168942_b.get()._field_label.get()._field_kind)}));
		return nullptr;
	};
	jule::I64 _171313_i = (_170017_label.get()._field_pos + 1LL);;
	if ((_171313_i >= _170017_label.get()._field_scope.get()._field_scope.get()._field_stmts.len())) {
		_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _168942_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_168942_b.get()._field_label.get()._field_kind)}));
	} else {
		jule::Any _171721_st = _170017_label.get()._field_scope.get()._field_scope.get()._field_stmts[_171313_i];;
		{
			auto &_match_expr{ _171721_st };
			
			if (_match_expr.type_is<jule::Ptr<_1e4687196_InfIter>>()) {
				_case_begin_1cba31a20:;
				{
					_169017_brk.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_171721_st.operator jule::Ptr<_1e4687196_InfIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1e4687eee_RangeIter>>()) {
				_case_begin_1cba33615:;
				{
					_169017_brk.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_171721_st.operator jule::Ptr<_1e4687eee_RangeIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1e4687619_WhileIter>>()) {
				_case_begin_1cba3367b:;
				{
					_169017_brk.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_171721_st.operator jule::Ptr<_1e4687619_WhileIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1e468a023_Match>>()) {
				_case_begin_1cba336e2:;
				{
					_169017_brk.get()._field_mtch=static_cast<jule::U64>(static_cast<jule::U64>(_171721_st.operator jule::Ptr<_1e468a023_Match>()));
				}
			}
			else {
				_case_begin_1cba268a0:;
				{
					_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _168942_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_168942_b.get()._field_label.get()._field_kind)}));
				}
			}
			_match_end_1cba2684a:;
		};
	};
	if ((_169017_brk.get()._field_it != 0LLU)) {
		if ((!(_1e46963b4_check_valid_break_label(_self_, _169017_brk.get()._field_it)))) {
			_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _168942_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_168942_b.get()._field_label.get()._field_kind)}));
		};
	};
	if ((_169017_brk.get()._field_mtch != 0LLU)) {
		if ((!(_1e46963b4_check_valid_break_label(_self_, _169017_brk.get()._field_mtch)))) {
			_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _168942_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_168942_b.get()._field_label.get()._field_kind)}));
		};
	};
	return _169017_brk;
}



inline jule::Ptr<_1e468872a_BreakSt> _1e469b276_check_plain_break(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e4374bca_BreakSt> _174737_b) {
	if (_1e4690a40_is_deferred(_self_)) {
		_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _174737_b.get()._field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e468ce7c_ScopeChecker> _175317_scope = _self_;;
	_julec_label_iter:;
	{
		
		if (((((_175317_scope.get()._field_it == 0LLU) && (_175317_scope.get()._field_cse == 0LLU)) && (_175317_scope.get()._field_parent != nullptr)) && (_175317_scope.get()._field_owner == nullptr))) {
			_case_begin_1cba39de1:;
			{
				_175317_scope=_175317_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_175317_scope.get()._field_it != 0LLU)) {
			_case_begin_1cba39e68:;
			{
				return jule::new_ptr<_1e468872a_BreakSt>(_1e468872a_BreakSt{._field_it=_175317_scope.get()._field_it, });
			}
		}
		else if ((_175317_scope.get()._field_cse != 0LLU)) {
			_case_begin_1cba39ee0:;
			{
				return jule::new_ptr<_1e468872a_BreakSt>(_1e468872a_BreakSt{._field_mtch=static_cast<jule::U64>(static_cast<jule::U64>(((_1e468a9d5_Case*)(_175317_scope.get()._field_cse))->_field_owner))});
			}
		}
		_match_end_1cba39d14:;
	};
	_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _174737_b.get()._field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1e469b4eb_check_break(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e4374bca_BreakSt> _176931_b) {
	if ((_176931_b.get()._field_label != nullptr)) {
		jule::Ptr<_1e468872a_BreakSt> _177121_brk = _1e469ae68_check_break_with_label(_self_, _176931_b);;
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_177121_brk));;
		return;;
	};
	jule::Ptr<_1e468872a_BreakSt> _177617_brk = _1e469b276_check_plain_break(_self_, _176931_b);;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_177617_brk));;
}



inline void _1e469b771_check_ret(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e437313a_RetSt> _178033_r) {
	if (_1e4690a40_is_deferred(_self_)) {
		_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _178033_r.get()._field_token,jule::Str("deferred scopes are not supports return statements", 50),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e468b5da_RetSt> _178517_rt = jule::new_ptr<_1e468b5da_RetSt>(_1e468b5da_RetSt{._field_func=_1e4690ca4_get_root(_self_).get()._field_owner, });;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_178517_rt));;
	jule::Ptr<_1c9743eb5_RetTypeChecker> _179017_rtc = jule::new_ptr<_1c9743eb5_RetTypeChecker>(_1c9743eb5_RetTypeChecker{._field_sc=_self_, ._field_f=_178517_rt.get()._field_func, ._field_error_token=_178033_r.get()._field_token, });;
	jule::Bool _179513_ok = _1c9744da6_check(_179017_rtc.ptr(), _178033_r.get()._field_expr);;
	if ((!(_179513_ok))) {
		return;;
	};
	if (((_178033_r.get()._field_expr == nullptr) && (_179017_rtc.get()._field_vars.len() == 0LL))) {
		return;;
	};
	_178517_rt.get()._field_vars=_179017_rtc.get()._field_vars;
	if ((_178033_r.get()._field_expr != nullptr)) {
		_178517_rt.get()._field_expr=jule::Any(_179017_rtc.get()._field_model);
	};
}



inline void _1e469b9e6_check_use_expr(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e4365d97_UseExpr> _181134_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _181134_ue.get()._field_token,jule::Str("use expressions cannot useable out of exceptional handler scopes", 64),jule::Slice<jule::Any>());
		return;;
	};
	if (_1e4690a40_is_deferred(_self_)) {
		_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _181134_ue.get()._field_token,jule::Str("use expressions cannot useable in deferred scopes", 49),jule::Slice<jule::Any>());
	};
	if (((_self_.get()._field_i + 1LL) < _self_.get()._field_tree.get()._field_stmts.len())) {
		_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _181134_ue.get()._field_token,jule::Str("use expressions must be last statement of scope", 47),jule::Slice<jule::Any>());
	};
}



inline void _1e469bc6b_check_node(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Any& _182735_node) {
	{
		auto &_match_expr{ _182735_node };
		
		if (_match_expr.type_is<jule::Ptr<_1e43702ad_ScopeTree>>()) {
			_case_begin_1cb8ce4a0:;
			{
				_1e469335b_check_anon_scope(_self_, _182735_node.operator jule::Ptr<_1e43702ad_ScopeTree>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4372c83_VarDecl>>()) {
			_case_begin_1cb8ce060:;
			{
				_1e469206e_check_var_decl(_self_, _182735_node.operator jule::Ptr<_1e4372c83_VarDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4376506_TypeAliasDecl>>()) {
			_case_begin_1cb8ce7d0:;
			{
				_1e46922e4_check_type_alias_decl(_self_, _182735_node.operator jule::Ptr<_1e4376506_TypeAliasDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e43659e0_Expr>>()) {
			_case_begin_1cb8ce5e3:;
			{
				_1e4693900_check_expr(_self_, _182735_node.operator jule::Ptr<_1e43659e0_Expr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e436721c_CoExpr>>()) {
			_case_begin_1cb8ce978:;
			{
				_1e4693b75_check_co_expr(_self_, _182735_node.operator jule::Ptr<_1e436721c_CoExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4375d30_Conditional>>()) {
			_case_begin_1cb8ce9de:;
			{
				_1e4694516_check_conditional(_self_, _182735_node.operator jule::Ptr<_1e4375d30_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e43736ac_Iter>>()) {
			_case_begin_1cb8cea55:;
			{
				_1e4695c76_check_iter(_self_, _182735_node.operator jule::Ptr<_1e43736ac_Iter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4375082_ContSt>>()) {
			_case_begin_1cb8ceabb:;
			{
				_1e4696958_check_cont(_self_, _182735_node.operator jule::Ptr<_1e4375082_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e436d8b6_LabelSt>>()) {
			_case_begin_1cb8ceb32:;
			{
				_1e4696bcd_check_label(_self_, _182735_node.operator jule::Ptr<_1e436d8b6_LabelSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e436dc6d_GotoSt>>()) {
			_case_begin_1cb8ceb98:;
			{
				_1e4696e53_push_goto(_self_, _182735_node.operator jule::Ptr<_1e436dc6d_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e436eba3_AssignSt>>()) {
			_case_begin_1cb8cec0e:;
			{
				_1e469899e_check_assign_st(_self_, _182735_node.operator jule::Ptr<_1e436eba3_AssignSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4377150_MatchCase>>()) {
			_case_begin_1cb8cec75:;
			{
				_1e469a8d5_check_match(_self_, _182735_node.operator jule::Ptr<_1e4377150_MatchCase>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e436e059_FallSt>>()) {
			_case_begin_1cb8cecdb:;
			{
				_1e469ab5a_check_fall(_self_, _182735_node.operator jule::Ptr<_1e436e059_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4374bca_BreakSt>>()) {
			_case_begin_1cb8ced52:;
			{
				_1e469b4eb_check_break(_self_, _182735_node.operator jule::Ptr<_1e4374bca_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437313a_RetSt>>()) {
			_case_begin_1cb8cedb8:;
			{
				_1e469b771_check_ret(_self_, _182735_node.operator jule::Ptr<_1e437313a_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4365d97_UseExpr>>()) {
			_case_begin_1cb8cee2e:;
			{
				_1e469b9e6_check_use_expr(_self_, _182735_node.operator jule::Ptr<_1e4365d97_UseExpr>());
			}
		}
		else {
			_case_begin_1cb8ce219:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1cb8ce1b4:;
	};
}



inline void _1e469be47_check_result(jule::Ptr<_1e468ce7c_ScopeChecker> _self_) {
	_1e43314d3_Node _186717_stmt = _self_.get()._field_tree.get()._field_stmts[(_self_.get()._field_tree.get()._field_stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _186717_stmt._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1e4365d97_UseExpr>>()) {
			_case_begin_1cb8d9da1:;
			{
				jule::Ptr<_1e4365d97_UseExpr> _187021_ue = _186717_stmt._field_data.operator jule::Ptr<_1e4365d97_UseExpr>();;
				jule::Ptr<_1c974abc0_Data> _187121_d = _1c9766647_eval_expr(_1e46b4b74_eval(_self_.get()._field_s, jule::Trait<_1c978dc35_Lookup>(_self_, 0)), _187021_ue.get()._field_expr);;
				if ((_187121_d == nullptr)) {
					return;;
				};
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_187121_d));;
				jule::Ptr<_1c9743eb5_RetTypeChecker> _187621_rtc = jule::new_ptr<_1c9743eb5_RetTypeChecker>(_1c9743eb5_RetTypeChecker{._field_sc=_self_, ._field_types=_1e4383a30_types(_self_.get()._field_result.ptr()), ._field_error_token=_187021_ue.get()._field_expr.get()._field_token, });;
				_1c9744da6_check(_187621_rtc.ptr(), _187021_ue.get()._field_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e43659e0_Expr>>()) {
			_case_begin_1cb8d9e17:;
			{
				jule::Ptr<_1e43659e0_Expr> _188321_expr = _186717_stmt._field_data.operator jule::Ptr<_1e43659e0_Expr>();;
				jule::Ptr<_1c974abc0_Data> _188421_d = _1c9766647_eval_expr(_1e46b4b74_eval(_self_.get()._field_s, jule::Trait<_1c978dc35_Lookup>(_self_, 0)), _188321_expr);;
				if ((_188421_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ _188421_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1e437e09c_BuiltinErrorCallExprModel>>()) {
						_case_begin_1cb8de5e2:;
						{
							jule::Ptr<_1e437e09c_BuiltinErrorCallExprModel> _189025_m = _188421_d.get()._field_model.operator jule::Ptr<_1e437e09c_BuiltinErrorCallExprModel>();;
							_1e469367a_process_error_call(_self_, _189025_m,_188321_expr.get()._field_token);
							_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_188421_d));;
						}
					}
					else {
						_case_begin_1cb8de724:;
						{
							return;;
						}
					}
					_match_end_1cb8de49e:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e436dc6d_GotoSt>>() || _match_expr.type_is<jule::Ptr<_1e4374bca_BreakSt>>() || _match_expr.type_is<jule::Ptr<_1e4375082_ContSt>>() || _match_expr.type_is<jule::Ptr<_1e437313a_RetSt>>()) {
			_case_begin_1cb8d9598:;
			{
				_1e469bc6b_check_node(_self_, _186717_stmt._field_data);
			}
		}
		else {
			_case_begin_1cb8d94dd:;
			{
				_1e469bc6b_check_node(_self_, _186717_stmt._field_data);
				return;;
			}
		}
		_match_end_1cb8d9488:;
	};
	_self_.get()._field_result=nullptr;
}



inline void _1e469c123_check_tree(jule::Ptr<_1e468ce7c_ScopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	jule::I64 _191217_n = _self_.get()._field_tree.get()._field_stmts.len();;
	if ((_self_.get()._field_result != nullptr)) {
		(_191217_n)--;
	};
	for (; (_self_.get()._field_i < _191217_n); (_self_.get()._field_i)++) {
		{
			_1e43314d3_Node _192021_stmt = _self_.get()._field_tree.get()._field_stmts[_self_.get()._field_i];;
			_1e469bc6b_check_node(_self_, _192021_stmt._field_data);
			if (_1e46907cb_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1cb8e2eca:;
	}
	_iter_end_1cb8e2eca:;;
	if (((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_stmts.len() != 0LL))) {
		_1e469be47_check_result(_self_);
	};
}



inline void _1e469c442_check_goto(_1e468ce7c_ScopeChecker* _self_, jule::Ptr<_1e468c168_ScopeGoto>& _193134_gt, jule::Ptr<_1e468bbe5_ScopeLabel>& _193155_label) {
	jule::Ptr<_1e468ce7c_ScopeChecker> _193217_gtsc = _193134_gt.get()._field_scope;;
	while (((_193217_gtsc.get()._field_child_index - 1LL) > _193155_label.get()._field_scope.get()._field_child_index)) {
		{
			_193217_gtsc=_193217_gtsc.get()._field_parent;
		}
	_iter_next_1cb8e6132:;
	}
	_iter_end_1cb8e6132:;;
	jule::I64 _193717_n = 0LL;;
	if ((_193217_gtsc.get()._field_scope == _193155_label.get()._field_scope.get()._field_scope)) {
		if ((_193134_gt.get()._field_pos > _193155_label.get()._field_pos)) {
			return;;
		};
		_193717_n=_193134_gt.get()._field_pos;
	};
	jule::I64 _195017_i = (_193155_label.get()._field_pos - 1LL);;
	if ((_193717_n == 0LL)) {
		{
			auto &expr = _193155_label.get()._field_scope.get()._field_scope.get()._field_stmts;
			auto it = expr.begin();
			_iter_begin_1cb8e8981:;
			if (it != expr.end()) {
				jule::I64 _195317_j = it - expr.begin();
				jule::Any _195320_stmt = *it;
				{
					if (_1e46847c0_stmt_is_goto_scope(_195320_stmt,_193217_gtsc.get()._field_scope)) {
						_193717_n=_195317_j;
						goto _iter_end_1cb8e8981;
					};
				}
				_iter_next_1cb8e8981:;
				++it;
				_195317_j++;
				goto _iter_begin_1cb8e8981;
			}
			_iter_end_1cb8e8981:;
		};
	};
	for (; (_195017_i >= _193717_n); (_195017_i)--) {
		{
			jule::Any _196321_stmt = _193155_label.get()._field_scope.get()._field_scope.get()._field_stmts[_195017_i];;
			if (_1e4685d43_st_is_def(_196321_stmt)) {
				_1e46aed6c_push_err((*_self_)._field_s.ptr(), _193134_gt.get()._field_gt.get()._field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>::make({jule::Any(_193134_gt.get()._field_gt.get()._field_label.get()._field_kind)}));
				return;;
			};
		}
	_iter_next_1cb8e8376:;
	}
	_iter_end_1cb8e8376:;;
}



inline void _1e469c61d_check_gotos(_1e468ce7c_ScopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_gotos));
		auto it = expr.begin();
		_iter_begin_1cbb14e22:;
		if (it != expr.end()) {
			jule::Ptr<_1e468c168_ScopeGoto> _197221_gt = *it;
			{
				jule::Ptr<_1e468bbe5_ScopeLabel> _197321_label = _1e4691942_find_label_all(&(*_self_), _197221_gt.get()._field_gt.get()._field_label.get()._field_kind);;
				if ((_197321_label == nullptr)) {
					_1e46aed6c_push_err((*_self_)._field_s.ptr(), _197221_gt.get()._field_gt.get()._field_token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_197221_gt.get()._field_gt.get()._field_label.get()._field_kind)}));
					goto _iter_next_1cbb14e22;
				};
				_197321_label.get()._field_used=true;
				_1e469c442_check_goto(&(*_self_), _197221_gt,_197321_label);
			}
			_iter_next_1cbb14e22:;
			++it;
			goto _iter_begin_1cbb14e22;
		}
		_iter_end_1cbb14e22:;
	};
}



inline void _1e469c7e9_check_labels(_1e468ce7c_ScopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1cbb18068:;
		if (it != expr.end()) {
			jule::Ptr<_1e468bbe5_ScopeLabel> _198516_l = *it;
			{
				if ((!(_198516_l.get()._field_used))) {
					_1e46aed6c_push_err((*_self_)._field_s.ptr(), _198516_l.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_198516_l.get()._field_label.get()._field_ident)}));
				};
			}
			_iter_next_1cbb18068:;
			++it;
			goto _iter_begin_1cbb18068;
		}
		_iter_end_1cbb18068:;
	};
}



inline void _1e469c9c5_check_vars(_1e468ce7c_ScopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1cbb19a3c:;
		if (it != expr.end()) {
			jule::Ptr<_1e46c6eb6_Var> _199316_v = *it;
			{
				if (((((!(_199316_v.get()._field_used)) && (!(_20cda1e4c_is_ignore_ident(_199316_v.get()._field_ident)))) && (!(_20cda21e4_is_anon_ident(_199316_v.get()._field_ident)))) && (_199316_v.get()._field_ident != jule::Str("self", 4)))) {
					_1e46aed6c_push_err((*_self_)._field_s.ptr(), _199316_v.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_199316_v.get()._field_ident)}));
				};
			}
			_iter_next_1cbb19a3c:;
			++it;
			goto _iter_begin_1cbb19a3c;
		}
		_iter_end_1cbb19a3c:;
	};
}



inline void _1e469cba1_check_aliases(_1e468ce7c_ScopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1cbb1c138:;
		if (it != expr.end()) {
			jule::Ptr<_1c97739b7_TypeAlias> _200116_a = *it;
			{
				if ((((!(_200116_a.get()._field_used)) && (!(_20cda1e4c_is_ignore_ident(_200116_a.get()._field_ident)))) && (!(_20cda21e4_is_anon_ident(_200116_a.get()._field_ident))))) {
					_1e46aed6c_push_err((*_self_)._field_s.ptr(), _200116_a.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_200116_a.get()._field_ident)}));
				};
			}
			_iter_next_1cbb1c138:;
			++it;
			goto _iter_begin_1cbb1c138;
		}
		_iter_end_1cbb1c138:;
	};
}



inline void _1e469cec0_check(jule::Ptr<_1e468ce7c_ScopeChecker> _self_, jule::Ptr<_1e43702ad_ScopeTree>& _200930_tree, jule::Ptr<_1e46862c7_Scope>& _200953_s) {
	_200953_s.get()._field_deferred=_200930_tree.get()._field_deferred;
	_200953_s.get()._field_unsafety=_200930_tree.get()._field_unsafety;
	jule::I64 _201313_errors = _self_.get()._field_s.get()._field_errors.len();;
	_self_.get()._field_tree=_200930_tree;
	_self_.get()._field_scope=_200953_s;
	_1e469c123_check_tree(_self_);
	if ((_201313_errors == _self_.get()._field_s.get()._field_errors.len())) {
		_1e469c9c5_check_vars(_self_.ptr());
		_1e469cba1_check_aliases(_self_.ptr());
		if (_1e469038b_is_root(_self_.ptr())) {
			_1e469c61d_check_gotos(_self_.ptr());
			_1e469c7e9_check_labels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_1e468ce7c_ScopeChecker> _1e469d234_new_child_checker(jule::Ptr<_1e468ce7c_ScopeChecker> _self_) {
	jule::Ptr<_1e468ce7c_ScopeChecker> _203317_base = _1e45d4bd7_new_scope_checker_base(_self_.get()._field_s,nullptr);;
	_203317_base.get()._field_parent=_self_;
	_203317_base.get()._field_labels=_self_.get()._field_labels;
	_203317_base.get()._field_gotos=_self_.get()._field_gotos;
	_203317_base.get()._field_child_index=static_cast<jule::I64>((_self_.get()._field_child_index + 1LL));
	return _203317_base;
}







std::ostream &operator<<(std::ostream &_Stream, _1e468ce7c_ScopeChecker _Src) {
	_Stream << "ScopeChecker{";
	_Stream << "called_from:" << _Src._field_called_from << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "child_index:" << _Src._field_child_index << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1e469e378_check_cdef(_1e469de38_DirectiveChecker* _self_, jule::Ptr<_1e43620c4_Directive>& _1630_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1e4380576_Fn>>()) {
			_case_begin_1cbb23d76:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1e4380576_Fn>().get()._field_cpp_linked) {
					goto _match_end_1cbb24096;
				};
				goto _case_begin_1cbb240eb;
			}
		}
		else {
			_case_begin_1cbb240eb:;
			{
				_1e46aed6c_push_err((*_self_)._field_s.ptr(), _1630_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_1630_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1cbb24096:;
	};
	if ((_1630_d.get()._field_args.len() > 0LL)) {
		_1e46aed6c_push_err((*_self_)._field_s.ptr(), _1630_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1e469e5ed_check_typedef(_1e469de38_DirectiveChecker* _self_, jule::Ptr<_1e43620c4_Directive>& _3233_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1e43360cb_Struct>>()) {
			_case_begin_1cbb26d24:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1e43360cb_Struct>().get()._field_cpp_linked) {
					goto _match_end_1cbb27044;
				};
				goto _case_begin_1cbb27099;
			}
		}
		else {
			_case_begin_1cbb27099:;
			{
				_1e46aed6c_push_err((*_self_)._field_s.ptr(), _3233_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_3233_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1cbb27044:;
	};
	if ((_3233_d.get()._field_args.len() > 0LL)) {
		_1e46aed6c_push_err((*_self_)._field_s.ptr(), _3233_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1e469e873_check_derive(_1e469de38_DirectiveChecker* _self_, jule::Ptr<_1e43620c4_Directive>& _4832_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1e43360cb_Struct>>()) {
			_case_begin_1cbb29cc2:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1e43360cb_Struct>().get()._field_cpp_linked))) {
					goto _match_end_1cbb29ee2;
				};
				goto _case_begin_1cbb2a047;
			}
		}
		else {
			_case_begin_1cbb2a047:;
			{
				_1e46aed6c_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>());
			}
		}
		_match_end_1cbb29ee2:;
	};
	if ((_4832_d.get()._field_args.len() == 0LL)) {
		_1e46aed6c_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1e46b018b_push_suggestion((*_self_)._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	} else if ((_4832_d.get()._field_args.len() > 1LL)) {
		_1e46aed6c_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	{
		auto &_match_expr{ _4832_d.get()._field_args[0LL].get()._field_kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_1cbb2dd92:;
		}
		else {
			_case_begin_1cbb2d512:;
			{
				_1e46aed6c_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_args[0LL],jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_4832_d.get()._field_args[0LL].get()._field_kind)}));
			}
		}
		_match_end_1cbb2d9c9:;
	};
}



inline void _1e469eae8_check_namespace(_1e469de38_DirectiveChecker* _self_, jule::Ptr<_1e43620c4_Directive>& _7439_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1e43360cb_Struct>>()) {
			_case_begin_1cbb30646:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1e43360cb_Struct>().get()._field_cpp_linked))) {
					_1e46aed6c_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4380576_Fn>>()) {
			_case_begin_1cbb309ba:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1e4380576_Fn>().get()._field_cpp_linked))) {
					_1e46aed6c_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e46c6eb6_Var>>()) {
			_case_begin_1cbb30a31:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1e46c6eb6_Var>().get()._field_cpp_linked))) {
					_1e46aed6c_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else {
			_case_begin_1cbb308bb:;
			{
				_1e46aed6c_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1cbb30866:;
	};
	if ((_7439_d.get()._field_args.len() == 0LL)) {
		_1e46aed6c_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_7439_d.get()._field_args.len() > 1LL)) {
		_1e46aed6c_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20cd9e6ec_Token> _9913_arg = _7439_d.get()._field_args[0LL];;
	if ((_9913_arg.get()._field_id != static_cast<jule::U64>(6LLU))) {
		_1e46aed6c_push_err((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_9913_arg.get()._field_kind[0LL] != '\"')) {
		_1e46aed6c_push_err((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_7439_d.get()._field_args[0LL].get()._field_kind=_9913_arg.get()._field_kind.slice(1LL,(_9913_arg.get()._field_kind.len() - 1LL));
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1e43360cb_Struct>>()) {
			_case_begin_1cbb39919:;
			{
				if ((_1c976e3db_find_directive((*((*_self_)._field_d)),jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_1e43620c4_Directive> _11625_typedef = jule::new_ptr<_1e43620c4_Directive>(_1e43620c4_Directive{._field_tag=_7439_d.get()._field_tag, });;
					_11625_typedef.get()._field_tag.get()._field_kind=jule::Str("typedef", 7);
					(*((*_self_)._field_d))=jule::append((*((*_self_)._field_d)),jule::Slice<jule::Ptr<_1e43620c4_Directive>>::make({_11625_typedef}));
				};
			}
		}
		_match_end_1cbb398b4:;
	};
}



inline void _1e469ed6d_check_deprecated(_1e469de38_DirectiveChecker* _self_, jule::Ptr<_1e43620c4_Directive>& _12540_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1e43360cb_Struct>>()) {
			_case_begin_1cbb3bca1:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1e43360cb_Struct>().get()._field_cpp_linked) {
					_1e46aed6c_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4380576_Fn>>()) {
			_case_begin_1cbb3c125:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1e4380576_Fn>().get()._field_cpp_linked) {
					_1e46aed6c_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e46c6eb6_Var>>()) {
			_case_begin_1cbb3c18b:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1e46c6eb6_Var>().get()._field_cpp_linked) {
					_1e46aed6c_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else {
			_case_begin_1cbb3c026:;
			{
				_1e46aed6c_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1cbb3bec1:;
	};
	if ((_12540_d.get()._field_args.len() == 0LL)) {
		return;;
	};
	if ((_12540_d.get()._field_args.len() > 1LL)) {
		_1e46aed6c_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20cd9e6ec_Token> _15013_arg = _12540_d.get()._field_args[0LL];;
	if ((_15013_arg.get()._field_id != static_cast<jule::U64>(6LLU))) {
		_1e46aed6c_push_err((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_15013_arg.get()._field_kind[0LL] != '\"')) {
		_1e46aed6c_push_err((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_12540_d.get()._field_args[0LL].get()._field_kind=_15013_arg.get()._field_kind.slice(1LL,(_15013_arg.get()._field_kind.len() - 1LL));
}



inline void _1e46a00e3_check_test(_1e469de38_DirectiveChecker* _self_, jule::Ptr<_1e43620c4_Directive>& _16430_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1e4380576_Fn>>()) {
			_case_begin_1cbb45d32:;
			{
				jule::Ptr<_1e4380576_Fn> _16717_f = (*_self_)._field_o.operator jule::Ptr<_1e4380576_Fn>();;
				if ((((!(_16717_f.get()._field_cpp_linked)) && (!(_1e4381016_is_init(_16717_f.ptr())))) && (!(_1e4380ca2_is_entry_point(_16717_f.ptr()))))) {
					goto _match_end_1cbb46052;
				};
				if (_1e4380a3d_is_method(_16717_f.ptr())) {
					_1e46aed6c_push_err((*_self_)._field_s.ptr(), _16717_f.get()._field_token,jule::Str("you cannot declare test methods", 31),jule::Slice<jule::Any>());
					goto _match_end_1cbb46052;
				};
				goto _case_begin_1cbb460a7;
			}
		}
		else {
			_case_begin_1cbb460a7:;
			{
				_1e46aed6c_push_err((*_self_)._field_s.ptr(), _16430_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_16430_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1cbb46052:;
	};
	if ((_16430_d.get()._field_args.len() > 0LL)) {
		_1e46aed6c_push_err((*_self_)._field_s.ptr(), _16430_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1e46a0368_check_directive(_1e469de38_DirectiveChecker* _self_, jule::Ptr<_1e43620c4_Directive>& _18539_d) {
	{
		auto &_match_expr{ _18539_d.get()._field_tag.get()._field_kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_1cbb4adc0:;
			{
				_1e469e378_check_cdef(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_1cbb4a7b5:;
			{
				_1e469e5ed_check_typedef(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_1cbb4a82b:;
			{
				_1e469e873_check_derive(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_1cbb4a892:;
			{
				_1e469eae8_check_namespace(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_1cbb4a908:;
			{
				_1e469ed6d_check_deprecated(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_1cbb4b70b:;
			{
				_1e46a00e3_check_test(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_1cbb4b783:;
			{
				_1e46aed6c_push_err((*_self_)._field_s.ptr(), _18539_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_18539_d.get()._field_tag.get()._field_kind)}));
			}
		}
		else {
			_case_begin_1cbb4a430:;
			{
				_1e46aed6c_push_err((*_self_)._field_s.ptr(), _18539_d.get()._field_tag,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_18539_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1cbb4a70a:;
	};
}



inline void _1e46a0544_check(_1e469de38_DirectiveChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_d));
		auto it = expr.begin();
		_iter_begin_1cbb502e2:;
		if (it != expr.end()) {
			jule::Ptr<_1e43620c4_Directive> _20821_d = *it;
			{
				_1e46a0368_check_directive(&(*_self_), _20821_d);
			}
			_iter_next_1cbb502e2:;
			++it;
			goto _iter_begin_1cbb502e2;
		}
		_iter_end_1cbb502e2:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e469de38_DirectiveChecker _Src) {
	_Stream << "DirectiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e46a4768_ImportInfo> _1e46a4c74_find_package(_1e46a4768_ImportInfo* _self_, jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1e46a4768_ImportInfo> _1e46a5082_select_package(_1e46a4768_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_1e46a4768_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1e46c6eb6_Var> _1e46a5439_find_var(_1e46a4768_ImportInfo* _self_, jule::Str _16931_ident, jule::Bool _16943_cpp_linked) {
	if ((!(_1e46a6a89_is_lookupable(&(*_self_), _16931_ident)))) {
		return nullptr;
	};
	return _1e46a2788_find_var_in_package((*_self_)._field_package.get()._field_files,_16931_ident,false);
}



inline jule::Ptr<_1c97739b7_TypeAlias> _1e46a57e1_find_type_alias(_1e46a4768_ImportInfo* _self_, jule::Str _18238_ident, jule::Bool _18250_cpp_linked) {
	if ((!(_1e46a6a89_is_lookupable(&(*_self_), _18238_ident)))) {
		return nullptr;
	};
	return _1e46a2bd9_find_type_alias_in_package((*_self_)._field_package.get()._field_files,_18238_ident,false);
}



inline jule::Ptr<_1e43360cb_Struct> _1e46a5b98_find_struct(_1e46a4768_ImportInfo* _self_, jule::Str _19534_ident, jule::Bool _19546_cpp_linked) {
	if ((!(_1e46a6a89_is_lookupable(&(*_self_), _19534_ident)))) {
		return nullptr;
	};
	return _1e46a30d5_find_struct_in_package((*_self_)._field_package.get()._field_files,_19534_ident,false);
}



inline jule::Ptr<_1e4380576_Fn> _1e46a6050_find_fn(_1e46a4768_ImportInfo* _self_, jule::Str _20830_ident, jule::Bool _20842_cpp_linked) {
	if ((!(_1e46a6a89_is_lookupable(&(*_self_), _20830_ident)))) {
		return nullptr;
	};
	return _1e46a3514_find_fn_in_package((*_self_)._field_package.get()._field_files,_20830_ident,false);
}



inline jule::Ptr<_1e43d8d0a_Trait> _1e46a635d_find_trait(_1e46a4768_ImportInfo* _self_, jule::Str _22033_ident) {
	if ((!(_1e46a6a89_is_lookupable(&(*_self_), _22033_ident)))) {
		return nullptr;
	};
	return _1e46a3855_find_trait_in_package((*_self_)._field_package.get()._field_files,_22033_ident);
}



inline jule::Ptr<_1e4456b58_Enum> _1e46a666b_find_enum(_1e46a4768_ImportInfo* _self_, jule::Str _23232_ident) {
	if ((!(_1e46a6a89_is_lookupable(&(*_self_), _23232_ident)))) {
		return nullptr;
	};
	return _1e46a3b96_find_enum_in_package((*_self_)._field_package.get()._field_files,_23232_ident);
}



inline jule::Bool _1e46a6a89_is_lookupable(_1e46a4768_ImportInfo* _self_, jule::Str _24228_ident) {
	if ((*_self_)._field_cpp_linked) {
		return false;
	};
	if ((!((*_self_)._field_import_all))) {
		if ((((*_self_)._field_alias.len() != 0LL) || _1e46a6d97_exist_ident(&(*_self_), jule::Str("self", 4)))) {
			return true;
		};
		if (((*_self_)._field_selected.len() > 0LL)) {
			if ((!(_1e46a6d97_exist_ident(&(*_self_), _24228_ident)))) {
				return false;
			};
		};
	};
	return true;
}



inline jule::Bool _1e46a6d97_exist_ident(_1e46a4768_ImportInfo* _self_, jule::Str _26226_ident) {
	{
		auto &expr = (*_self_)._field_selected;
		auto it = expr.begin();
		_iter_begin_1cbb5d993:;
		if (it != expr.end()) {
			jule::Ptr<_20cd9e6ec_Token> &_26316_sident = *it;
			{
				if ((_26316_sident.get()._field_kind == _26226_ident)) {
					return true;
				};
			}
			_iter_next_1cbb5d993:;
			++it;
			goto _iter_begin_1cbb5d993;
		}
		_iter_end_1cbb5d993:;
	};
	return false;
}



inline jule::Bool _1e46a712d_is_accessible_via_selection(_1e46a4768_ImportInfo* _self_) {
	return (((*_self_)._field_import_all || ((*_self_)._field_selected.len() == 0LL)) || _1e46a6d97_exist_ident(&(*_self_), jule::Str("self", 4)));
}







std::ostream &operator<<(std::ostream &_Stream, _1e46a4768_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "duplicate:" << _Src._field_duplicate << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std << ", ";
	_Stream << "import_all:" << _Src._field_import_all << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "package:" << _Src._field_package << ", ";
	_Stream << "mod_id:" << _Src._field_mod_id;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e46a4768_ImportInfo> _1e46a78e2_find_package(_1e46a742a_Package* _self_, jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1e46a4768_ImportInfo> _1e46a7c00_select_package(_1e46a742a_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_1e46a4768_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1e46c6eb6_Var> _1e46a80a7_find_var(_1e46a742a_Package* _self_, jule::Str _29231_ident, jule::Bool _29243_cpp_linked) {
	return _1e46a2788_find_var_in_package((*_self_)._field_files,_29231_ident,_29243_cpp_linked);
}



inline jule::Ptr<_1c97739b7_TypeAlias> _1e46a845e_find_type_alias(_1e46a742a_Package* _self_, jule::Str _29838_ident, jule::Bool _29850_cpp_linked) {
	return _1e46a2bd9_find_type_alias_in_package((*_self_)._field_files,_29838_ident,_29850_cpp_linked);
}



inline jule::Ptr<_1e43360cb_Struct> _1e46a8816_find_struct(_1e46a742a_Package* _self_, jule::Str _30434_ident, jule::Bool _30446_cpp_linked) {
	return _1e46a30d5_find_struct_in_package((*_self_)._field_files,_30434_ident,_30446_cpp_linked);
}



inline jule::Ptr<_1e4380576_Fn> _1e46a8bbd_find_fn(_1e46a742a_Package* _self_, jule::Str _31030_ident, jule::Bool _31042_cpp_linked) {
	return _1e46a3514_find_fn_in_package((*_self_)._field_files,_31030_ident,_31042_cpp_linked);
}



inline jule::Ptr<_1e43d8d0a_Trait> _1e46a8ecb_find_trait(_1e46a742a_Package* _self_, jule::Str _31633_ident) {
	return _1e46a3855_find_trait_in_package((*_self_)._field_files,_31633_ident);
}



inline jule::Ptr<_1e4456b58_Enum> _1e46a92d9_find_enum(_1e46a742a_Package* _self_, jule::Str _32232_ident) {
	return _1e46a3b96_find_enum_in_package((*_self_)._field_files,_32232_ident);
}







std::ostream &operator<<(std::ostream &_Stream, _1e46a742a_Package _Src) {
	_Stream << "Package{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e46a4768_ImportInfo> _1e46ac95d_find_package(_1e46ac452_Sema* _self_, jule::Str _22435_ident) {
	return _1c974624d_find_package((*_self_)._field_file.ptr(), _22435_ident);
}



inline jule::Ptr<_1e46a4768_ImportInfo> _1e46acc6b_select_package(_1e46ac452_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_1e46a4768_ImportInfo>)> _23437_selector) {
	return _1c974655b_select_package((*_self_)._field_file.ptr(), _23437_selector);
}



inline jule::Ptr<_1e46c6eb6_Var> _1e46ad123_find_var(_1e46ac452_Sema* _self_, jule::Str _24431_ident, jule::Bool _24443_cpp_linked) {
	jule::Ptr<_1e46c6eb6_Var> _24617_v = _1e46a2788_find_var_in_package((*_self_)._field_files,_24431_ident,_24443_cpp_linked);;
	if ((_24617_v != nullptr)) {
		return _24617_v;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1e46d5513:;
		if (it != expr.end()) {
			jule::Ptr<_1e46a4768_ImportInfo> _25221_imp = *it;
			{
				if ((!(_1e46aae01_imp_is_lookupable(_25221_imp,_24431_ident)))) {
					goto _iter_next_1e46d5513;
				};
				_24617_v=_1e46a5439_find_var(_25221_imp.ptr(), _24431_ident,_24443_cpp_linked);
				if (((_24617_v != nullptr) && _1e46b0543_is_accessible_define(&(*_self_), _24617_v.get()._field_public,_24617_v.get()._field_token))) {
					return _24617_v;
				};
			}
			_iter_next_1e46d5513:;
			++it;
			goto _iter_begin_1e46d5513;
		}
		_iter_end_1e46d5513:;
	};
	return nullptr;
}



inline jule::Ptr<_1c97739b7_TypeAlias> _1e46ad4ca_find_type_alias(_1e46ac452_Sema* _self_, jule::Str _27138_ident, jule::Bool _27150_cpp_linked) {
	jule::Ptr<_1c97739b7_TypeAlias> _27317_ta = _1e46a2bd9_find_type_alias_in_package((*_self_)._field_files,_27138_ident,_27150_cpp_linked);;
	if ((_27317_ta != nullptr)) {
		return _27317_ta;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1e46d88e0:;
		if (it != expr.end()) {
			jule::Ptr<_1e46a4768_ImportInfo> _27921_imp = *it;
			{
				if ((!(_1e46aae01_imp_is_lookupable(_27921_imp,_27138_ident)))) {
					goto _iter_next_1e46d88e0;
				};
				_27317_ta=_1e46a57e1_find_type_alias(_27921_imp.ptr(), _27138_ident,_27150_cpp_linked);
				if (((_27317_ta != nullptr) && _1e46b0543_is_accessible_define(&(*_self_), _27317_ta.get()._field_public,_27317_ta.get()._field_token))) {
					return _27317_ta;
				};
			}
			_iter_next_1e46d88e0:;
			++it;
			goto _iter_begin_1e46d88e0;
		}
		_iter_end_1e46d88e0:;
	};
	return nullptr;
}



inline jule::Ptr<_1e43360cb_Struct> _1e46ad882_find_struct(_1e46ac452_Sema* _self_, jule::Str _29834_ident, jule::Bool _29846_cpp_linked) {
	jule::Ptr<_1e43360cb_Struct> _30017_s = _1e46a30d5_find_struct_in_package((*_self_)._field_files,_29834_ident,_29846_cpp_linked);;
	if ((_30017_s != nullptr)) {
		return _30017_s;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1e46db5b3:;
		if (it != expr.end()) {
			jule::Ptr<_1e46a4768_ImportInfo> _30621_imp = *it;
			{
				if ((!(_1e46aae01_imp_is_lookupable(_30621_imp,_29834_ident)))) {
					goto _iter_next_1e46db5b3;
				};
				_30017_s=_1e46a5b98_find_struct(_30621_imp.ptr(), _29834_ident,_29846_cpp_linked);
				if (((_30017_s != nullptr) && _1e46b0543_is_accessible_define(&(*_self_), _30017_s.get()._field_public,_30017_s.get()._field_token))) {
					return _30017_s;
				};
			}
			_iter_next_1e46db5b3:;
			++it;
			goto _iter_begin_1e46db5b3;
		}
		_iter_end_1e46db5b3:;
	};
	return nullptr;
}



inline jule::Ptr<_1e4380576_Fn> _1e46adc39_find_fn(_1e46ac452_Sema* _self_, jule::Str _32530_ident, jule::Bool _32542_cpp_linked) {
	jule::Ptr<_1e4380576_Fn> _32717_f = _1e46a3514_find_fn_in_package((*_self_)._field_files,_32530_ident,_32542_cpp_linked);;
	if ((_32717_f != nullptr)) {
		return _32717_f;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1e46de1a9:;
		if (it != expr.end()) {
			jule::Ptr<_1e46a4768_ImportInfo> _33321_imp = *it;
			{
				if ((!(_1e46aae01_imp_is_lookupable(_33321_imp,_32530_ident)))) {
					goto _iter_next_1e46de1a9;
				};
				_32717_f=_1e46a6050_find_fn(_33321_imp.ptr(), _32530_ident,_32542_cpp_linked);
				if (((_32717_f != nullptr) && _1e46b0543_is_accessible_define(&(*_self_), _32717_f.get()._field_public,_32717_f.get()._field_token))) {
					return _32717_f;
				};
			}
			_iter_next_1e46de1a9:;
			++it;
			goto _iter_begin_1e46de1a9;
		}
		_iter_end_1e46de1a9:;
	};
	return nullptr;
}



inline jule::Ptr<_1e43d8d0a_Trait> _1e46ae047_find_trait(_1e46ac452_Sema* _self_, jule::Str _35233_ident) {
	jule::Ptr<_1e43d8d0a_Trait> _35417_t = _1e46a3855_find_trait_in_package((*_self_)._field_files,_35233_ident);;
	if ((_35417_t != nullptr)) {
		return _35417_t;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1e46e1ab3:;
		if (it != expr.end()) {
			jule::Ptr<_1e46a4768_ImportInfo> _36021_imp = *it;
			{
				if ((!(_1e46aae01_imp_is_lookupable(_36021_imp,_35233_ident)))) {
					goto _iter_next_1e46e1ab3;
				};
				_35417_t=_1e46a635d_find_trait(_36021_imp.ptr(), _35233_ident);
				if (((_35417_t != nullptr) && _1e46b0543_is_accessible_define(&(*_self_), _35417_t.get()._field_public,_35417_t.get()._field_token))) {
					return _35417_t;
				};
			}
			_iter_next_1e46e1ab3:;
			++it;
			goto _iter_begin_1e46e1ab3;
		}
		_iter_end_1e46e1ab3:;
	};
	return nullptr;
}



inline jule::Ptr<_1e4456b58_Enum> _1e46ae355_find_enum(_1e46ac452_Sema* _self_, jule::Str _37932_ident) {
	jule::Ptr<_1e4456b58_Enum> _38117_e = _1e46a3b96_find_enum_in_package((*_self_)._field_files,_37932_ident);;
	if ((_38117_e != nullptr)) {
		return _38117_e;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1e46e4445:;
		if (it != expr.end()) {
			jule::Ptr<_1e46a4768_ImportInfo> _38721_imp = *it;
			{
				if ((!(_1e46aae01_imp_is_lookupable(_38721_imp,_37932_ident)))) {
					goto _iter_next_1e46e4445;
				};
				_38117_e=_1e46a666b_find_enum(_38721_imp.ptr(), _37932_ident);
				if (((_38117_e != nullptr) && _1e46b0543_is_accessible_define(&(*_self_), _38117_e.get()._field_public,_38117_e.get()._field_token))) {
					return _38117_e;
				};
			}
			_iter_next_1e46e4445:;
			++it;
			goto _iter_begin_1e46e4445;
		}
		_iter_end_1e46e4445:;
	};
	return nullptr;
}



inline jule::Bool _1e46ae72e_is_flag(_1e46ac452_Sema* _self_, jule::I64 _40322_flags) {
	return (((*_self_)._field_flags & _40322_flags) == _40322_flags);
}



inline void _1e46ae9a4_set_current_file(_1e46ac452_Sema* _self_, jule::Ptr<_1c9745c42_SymbolTable> _40539_f) {
	(*_self_)._field_file=_40539_f;
}



inline void _1e46aed6c_push_err(_1e46ac452_Sema* _self_, jule::Ptr<_20cd9e6ec_Token> _40727_token, jule::Str _40742_fmt, jule::Slice<jule::Any> _40755_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1e46aaab0_compiler_err(_40727_token,true,_40742_fmt,jule::Any(_40755_args)));;
}



inline void _1e46b018b_push_suggestion(_1e46ac452_Sema* _self_, jule::Str _41234_fmt, jule::Slice<jule::Any> _41247_args) {
	{
		_1e46abebd_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_41234_fmt,jule::Any(_41247_args));
	};
}



inline jule::Bool _1e46b0543_is_accessible_define(_1e46ac452_Sema* _self_, jule::Bool _41735_public, jule::Ptr<_20cd9e6ec_Token> _41749_token) {
	return ((_41735_public || (_41749_token.get()._field_file == nullptr)) || (_20cda54d3_dir((*_self_)._field_file.get()._field_file.ptr()) == _20cda54d3_dir(_41749_token.get()._field_file.ptr())));
}



inline jule::Bool _1e46b0994_is_duplicated_ident(_1e46ac452_Sema* _self_, jule::U64 _42434_itself, jule::Str _42451_ident, jule::Bool _42463_cpp_linked) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1e46ec393:;
		if (it != expr.end()) {
			jule::Ptr<_1c9745c42_SymbolTable> &_42516_f = *it;
			{
				if (_1c9748e21_is_duplicated_ident(_42516_f.ptr(), _42434_itself,_42451_ident,_42463_cpp_linked)) {
					return true;
				};
				{
					auto &expr = _42516_f.get()._field_imports;
					auto it = expr.begin();
					_iter_begin_1e46edb03:;
					if (it != expr.end()) {
						jule::Ptr<_1e46a4768_ImportInfo> &_43020_imp = *it;
						{
							{
								auto &expr = _43020_imp.get()._field_selected;
								auto it = expr.begin();
								_iter_begin_1e46ee340:;
								if (it != expr.end()) {
									jule::Ptr<_20cd9e6ec_Token> &_43124_selected = *it;
									{
										if ((_43124_selected.get()._field_kind == _42451_ident)) {
											return true;
										};
									}
									_iter_next_1e46ee340:;
									++it;
									goto _iter_begin_1e46ee340;
								}
								_iter_end_1e46ee340:;
							};
						}
						_iter_next_1e46edb03:;
						++it;
						goto _iter_begin_1e46edb03;
					}
					_iter_end_1e46edb03:;
				};
			}
			_iter_next_1e46ec393:;
			++it;
			goto _iter_begin_1e46ec393;
		}
		_iter_end_1e46ec393:;
	};
	return false;
}



inline void _1e46b0cb3_check_directives(jule::Ptr<_1e46ac452_Sema> _self_, jule::Slice<jule::Ptr<_1e43620c4_Directive>>& _44141_d, jule::Any _44167_o) {
	_1e469de38_DirectiveChecker _44217_dc = _1e469de38_DirectiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1e43620c4_Directive>>>)((&(_44141_d)))), ._field_o=jule::Any(_44167_o)};;
	_1e46a0544_check(&_44217_dc);
}



inline jule::Bool _1e46b1214_check_generic_quantity(_1e46ac452_Sema* _self_, jule::I64 _45041_required, jule::I64 _45056_given, jule::Ptr<_20cd9e6ec_Token> _45068_token) {
	jule::Bool _45085_ok = jule::Bool();
	{
		
		if (((_45041_required == 0LL) && (_45056_given > 0LL))) {
			_case_begin_1e4702c4a:;
			{
				_1e46aed6c_push_err(&(*_self_), _45068_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
				_45085_ok = false;
				return _45085_ok;
			}
		}
		else if (((_45041_required > 0LL) && (_45056_given == 0LL))) {
			_case_begin_1e4702ce4:;
			{
				_1e46aed6c_push_err(&(*_self_), _45068_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				_45085_ok = false;
				return _45085_ok;
			}
		}
		else if ((_45041_required < _45056_given)) {
			_case_begin_1e4702d5a:;
			{
				_1e46aed6c_push_err(&(*_self_), _45068_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>());
				_45085_ok = false;
				return _45085_ok;
			}
		}
		else if ((_45041_required > _45056_given)) {
			_case_begin_1e4702a2a:;
			{
				_1e46aed6c_push_err(&(*_self_), _45068_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>());
				_45085_ok = false;
				return _45085_ok;
			}
		}
		else {
			_case_begin_1e47025b8:;
			{
				_45085_ok = true;
				return _45085_ok;
			}
		}
		_match_end_1e470250d:;
	};
}



inline jule::Bool _1e46b15dd_is_duplicated_import_selection(_1e46ac452_Sema* _self_, jule::U64 _46945_itself, jule::Str _46962_ident) {
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1e4706930:;
		if (it != expr.end()) {
			jule::Ptr<_1e46a4768_ImportInfo> &_47016_imp = *it;
			{
				if ((static_cast<jule::U64>(_47016_imp) == _46945_itself)) {
					goto _iter_end_1e4706930;
				};
				if (_1e46a6d97_exist_ident(_47016_imp.ptr(), _46962_ident)) {
					return true;
				};
			}
			_iter_next_1e4706930:;
			++it;
			goto _iter_begin_1e4706930;
		}
		_iter_end_1e4706930:;
	};
	return false;
}



inline jule::Any _1e46b19a6_get_import_def(_1e46ac452_Sema* _self_, jule::Str _48429_ident, jule::Ptr<_1e46a4768_ImportInfo>& _48446_imp) {
	if ((_1c980265b_find_package_builtin_def(_48446_imp.get()._field_link_path,_48429_ident) != nullptr)) {
		return jule::Any(true);
	};
	{
		auto &expr = _48446_imp.get()._field_package.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1e47090d6:;
		if (it != expr.end()) {
			jule::Ptr<_1c9745c42_SymbolTable> _48921_f = *it;
			{
				;
				jule::Any _49121_def = _1c97489c0_def_by_ident(_48921_f.ptr(), _48429_ident,false);;
				if ((_49121_def != nullptr)) {
					return jule::Any(_49121_def);
				};
			}
			_iter_next_1e47090d6:;
			++it;
			goto _iter_begin_1e47090d6;
		}
		_iter_end_1e47090d6:;
	};
	return nullptr;
}



inline jule::Bool _1e46b1cd6_check_import_selections(_1e46ac452_Sema* _self_, jule::Ptr<_1e46a4768_ImportInfo>& _50047_imp) {
	jule::Bool _50067_ok = jule::Bool();
	_50067_ok=true;
	{
		auto &expr = _50047_imp.get()._field_selected;
		auto it = expr.begin();
		_iter_begin_1e470b2b4:;
		if (it != expr.end()) {
			jule::Ptr<_20cd9e6ec_Token> _50216_ident = *it;
			{
				if ((_50216_ident.get()._field_kind == jule::Str("self", 4))) {
					goto _iter_next_1e470b2b4;
				};
				if (_1e46b15dd_is_duplicated_import_selection(&(*_self_), static_cast<jule::U64>(static_cast<jule::U64>(_50047_imp)),_50216_ident.get()._field_kind)) {
					_1e46aed6c_push_err(&(*_self_), _50216_ident,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_50216_ident.get()._field_kind)}));
					_1e46b018b_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
					_50067_ok=false;
					goto _iter_next_1e470b2b4;
				};
				jule::Any _51421_def = _1e46b19a6_get_import_def(&(*_self_), _50216_ident.get()._field_kind,_50047_imp);;
				{
					auto &_match_expr{ _51421_def };
					
					if (_match_expr.type_is<jule::Bool>()) {
						_case_begin_1e470eb03:;
						{
							goto _iter_next_1e470b2b4;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e46c6eb6_Var>>()) {
						_case_begin_1e470e0b9:;
						{
							jule::Ptr<_1e46c6eb6_Var> _52025_v = _51421_def.operator jule::Ptr<_1e46c6eb6_Var>();;
							if (_1e46b0543_is_accessible_define(&(*_self_), _52025_v.get()._field_public,_52025_v.get()._field_token)) {
								goto _iter_next_1e470b2b4;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c97739b7_TypeAlias>>()) {
						_case_begin_1e470e130:;
						{
							jule::Ptr<_1c97739b7_TypeAlias> _52525_ta = _51421_def.operator jule::Ptr<_1c97739b7_TypeAlias>();;
							if (_1e46b0543_is_accessible_define(&(*_self_), _52525_ta.get()._field_public,_52525_ta.get()._field_token)) {
								goto _iter_next_1e470b2b4;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e43360cb_Struct>>()) {
						_case_begin_1e470ec46:;
						{
							jule::Ptr<_1e43360cb_Struct> _53025_strct = _51421_def.operator jule::Ptr<_1e43360cb_Struct>();;
							if (_1e46b0543_is_accessible_define(&(*_self_), _53025_strct.get()._field_public,_53025_strct.get()._field_token)) {
								goto _iter_next_1e470b2b4;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e43d8d0a_Trait>>()) {
						_case_begin_1e470ecac:;
						{
							jule::Ptr<_1e43d8d0a_Trait> _53525_t = _51421_def.operator jule::Ptr<_1e43d8d0a_Trait>();;
							if (_1e46b0543_is_accessible_define(&(*_self_), _53525_t.get()._field_public,_53525_t.get()._field_token)) {
								goto _iter_next_1e470b2b4;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e4456b58_Enum>>()) {
						_case_begin_1e470ed23:;
						{
							jule::Ptr<_1e4456b58_Enum> _54025_e = _51421_def.operator jule::Ptr<_1e4456b58_Enum>();;
							if (_1e46b0543_is_accessible_define(&(*_self_), _54025_e.get()._field_public,_54025_e.get()._field_token)) {
								goto _iter_next_1e470b2b4;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e4380576_Fn>>()) {
						_case_begin_1e470ed89:;
						{
							jule::Ptr<_1e4380576_Fn> _54525_f = _51421_def.operator jule::Ptr<_1e4380576_Fn>();;
							if (_1e46b0543_is_accessible_define(&(*_self_), _54525_f.get()._field_public,_54525_f.get()._field_token)) {
								goto _iter_next_1e470b2b4;
							};
						}
					}
					else {
						_case_begin_1e470ddaa:;
						{
							_1e46aed6c_push_err(&(*_self_), _50216_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_50216_ident.get()._field_kind)}));
							_50067_ok=false;
							goto _iter_next_1e470b2b4;
						}
					}
					_match_end_1e470dd55:;
				};
				_1e46aed6c_push_err(&(*_self_), _50216_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_50216_ident.get()._field_kind)}));
				_1e46b018b_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
				_50067_ok=false;
			}
			_iter_next_1e470b2b4:;
			++it;
			goto _iter_begin_1e470b2b4;
		}
		_iter_end_1e470b2b4:;
	};
	return _50067_ok;
}



inline jule::Bool _1e46b2127_is_use_alias_duplication(_1e46ac452_Sema* _self_, jule::Ptr<_1e46a4768_ImportInfo>& _56244_imp) {
	if ((_56244_imp.get()._field_alias.len() == 0LL)) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1e4717589:;
		if (it != expr.end()) {
			jule::Ptr<_1e46a4768_ImportInfo> _56721_imp2 = *it;
			{
				if ((_56721_imp2 == _56244_imp)) {
					goto _iter_end_1e4717589;
				};
				if ((_56721_imp2.get()._field_alias == _56244_imp.get()._field_alias)) {
					return true;
				};
				if (((_56721_imp2.get()._field_ident == _56721_imp2.get()._field_link_path) && (_56721_imp2.get()._field_ident == _56244_imp.get()._field_alias))) {
					return true;
				};
			}
			_iter_next_1e4717589:;
			++it;
			goto _iter_begin_1e4717589;
		}
		_iter_end_1e4717589:;
	};
	return false;
}



inline jule::Bool _1e46b2446_check_import(_1e46ac452_Sema* _self_, jule::Ptr<_1e46a4768_ImportInfo>& _58336_imp) {
	if ((_58336_imp.get()._field_cpp_linked || (_58336_imp.get()._field_package.get()._field_files.len() == 0LL))) {
		return true;
	};
	if (_1e46b2127_is_use_alias_duplication(&(*_self_), _58336_imp)) {
		_1e46aed6c_push_err(&(*_self_), _58336_imp.get()._field_token,jule::Str("identifier duplication: @ is already used for another use declaration above", 75),jule::Slice<jule::Any>::make({jule::Any(_58336_imp.get()._field_alias)}));
		_1e46b018b_push_suggestion(&(*_self_), jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>());
	};
	if ((!(_58336_imp.get()._field_duplicate))) {
		jule::Ptr<_1e46ac452_Sema> _59421_sema = jule::new_ptr<_1e46ac452_Sema>(_1e46ac452_Sema{._field_flags=(*_self_)._field_flags});;
		_1e46c3e6e_check(_59421_sema, _58336_imp.get()._field_package.get()._field_files);
		if ((_59421_sema.get()._field_errors.len() != 0LL)) {
			(*_self_)._field_errors=jule::append((*_self_)._field_errors,_59421_sema.get()._field_errors);
			_59421_sema.get()._field_errors=nullptr;
			return false;
		};
	};
	return _1e46b1cd6_check_import_selections(&(*_self_), _58336_imp);
}



inline void _1e46b2622_check_imports(_1e46ac452_Sema* _self_) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1e471e508:;
		if (it != expr.end()) {
			jule::Ptr<_1c9745c42_SymbolTable> _60821_file = *it;
			{
				_1e46ae9a4_set_current_file(&(*_self_), _60821_file);
				{
					auto &expr = _60821_file.get()._field_imports;
					auto it = expr.begin();
					_iter_begin_1cbc7081e:;
					if (it != expr.end()) {
						jule::Ptr<_1e46a4768_ImportInfo> _61125_imp = *it;
						{
							jule::Bool _61221_ok = _1e46b2446_check_import(&(*_self_), _61125_imp);;
							if ((!(_61221_ok))) {
								_1e46aed6c_push_err(&(*_self_), _61125_imp.get()._field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>::make({jule::Any(_61125_imp.get()._field_link_path)}));
								return;;
							};
						}
						_iter_next_1cbc7081e:;
						++it;
						goto _iter_begin_1cbc7081e;
					}
					_iter_end_1cbc7081e:;
				};
			}
			_iter_next_1e471e508:;
			++it;
			goto _iter_begin_1e471e508;
		}
		_iter_end_1e471e508:;
	};
}



inline void _1e46b27ed_impl_file_impls(jule::Ptr<_1e46ac452_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_impls;
		auto it = expr.begin();
		_iter_begin_1cbc7236a:;
		if (it != expr.end()) {
			jule::Ptr<_1e5c31431_Impl> _62421_imp = *it;
			{
				_1e46bb186_impl_impl(_self_, _62421_imp);
			}
			_iter_next_1cbc7236a:;
			++it;
			goto _iter_begin_1cbc7236a;
		}
		_iter_end_1cbc7236a:;
	};
}



inline void _1e46b29c9_impl_impls(jule::Ptr<_1e46ac452_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1cbc739ed:;
		if (it != expr.end()) {
			jule::Ptr<_1c9745c42_SymbolTable> _63021_file = *it;
			{
				_1e46ae9a4_set_current_file(_self_.ptr(), _63021_file);
				_1e46b27ed_impl_file_impls(_self_);
			}
			_iter_next_1cbc739ed:;
			++it;
			goto _iter_begin_1cbc739ed;
		}
		_iter_end_1cbc739ed:;
	};
}



inline void _1e46b2ba5_check_enums(jule::Ptr<_1e46ac452_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1cbc74d95:;
		if (it != expr.end()) {
			jule::Ptr<_1c9745c42_SymbolTable> _63721_file = *it;
			{
				_1e46ae9a4_set_current_file(_self_.ptr(), _63721_file);
				_1e46b88d1_check_enum_decls(_self_);
			}
			_iter_next_1cbc74d95:;
			++it;
			goto _iter_begin_1cbc74d95;
		}
		_iter_end_1cbc74d95:;
	};
}



inline jule::Bool _1e46b3106_check_type_with_refers(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1c977858d_TypeSymbol>& _64547_t, jule::Trait<_1c978dc35_Lookup> _64613_l, jule::Ptr<_1c978191a_Referencer> _64628_referencer) {
	jule::Bool _64655_ok = jule::Bool();
	if (_1c9778989_checked(_64547_t.ptr())) {
		_64655_ok = true;
		return _64655_ok;
	};
	_1c9782663_TypeChecker _65017_tc = _1c9782663_TypeChecker{._field_s=_self_, ._field_lookup=_64613_l, ._field_referencer=_64628_referencer, };;
	if (((_64628_referencer != nullptr) && (_64628_referencer.get()._field_refs != nullptr))) {
		_65017_tc._field_owner_alias=_64628_referencer.get()._field_owner.operator jule::Ptr<_1c97739b7_TypeAlias>();
	};
	_1c9789280_check(&_65017_tc, _64547_t);
	_64655_ok = _1c9778989_checked(_64547_t.ptr());
	return _64655_ok;
}



inline jule::Bool _1e46b34ad_check_type(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1c977858d_TypeSymbol>& _66935_t, jule::Trait<_1c978dc35_Lookup> _66955_l) {
	return _1e46b3106_check_type_with_refers(_self_, _66935_t,_66955_l,nullptr);
}



inline jule::Ptr<_1c97746ee_TypeKind> _1e46b3931_build_type_with_generics(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1e436257a_TypeDecl>& _67549_t, jule::Slice<jule::Ptr<_1c97739b7_TypeAlias>> _67613_generics, jule::Ptr<_1e4385c0d_ReferenceStack> _67641_refers) {
	jule::Ptr<_1c9782663_TypeChecker> _67717_tc = jule::new_ptr<_1c9782663_TypeChecker>(_1c9782663_TypeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1c978dc35_Lookup>(_self_, 3), ._field_refers=_67641_refers, ._field_use_generics=_67613_generics, });;
	return _1c978900a_check_decl(_67717_tc.ptr(), _67549_t);
}



inline jule::Ptr<_1c97746ee_TypeKind> _1e46b3c50_build_type(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1e436257a_TypeDecl>& _68735_t) {
	return _1e46b3931_build_type_with_generics(_self_, _68735_t,nullptr,nullptr);
}



inline jule::Ptr<_1c97746ee_TypeKind> _1e46b405d_select_type(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1e436257a_TypeDecl>& _69236_t) {
	jule::Ptr<_1c9782663_TypeChecker> _69317_tc = jule::new_ptr<_1c9782663_TypeChecker>(_1c9782663_TypeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1c978dc35_Lookup>(_self_, 3), ._field_selection=true, });;
	return _1c978900a_check_decl(_69317_tc.ptr(), _69236_t);
}



inline jule::Ptr<_1c974c73d_Eval> _1e46b44ae_evalpd(jule::Ptr<_1e46ac452_Sema> _self_, jule::Trait<_1c978dc35_Lookup> _70330_l, jule::Ptr<_1c97746ee_TypeKind> _70345_p, jule::Ptr<_1e46c6eb6_Var> _70363_owner) {
	jule::Ptr<_1c974c73d_Eval> _70417_e = jule::new_ptr<_1c974c73d_Eval>(_1c974c73d_Eval{._field_s=_self_, ._field_lookup=_70330_l, ._field_owner=_70363_owner, });;
	{
		auto &_match_expr{ _70330_l };
		
		if (_match_expr.type_is<jule::Ptr<_1e468ce7c_ScopeChecker>>()) {
			_case_begin_1cbc826aa:;
			{
				_70417_e.get()._field_unsafety=_1e4690127_is_unsafe(_70330_l.operator jule::Ptr<_1e468ce7c_ScopeChecker>());
			}
		}
		_match_end_1cbc82633:;
	};
	_70417_e.get()._field_prefix=_70345_p;
	return _70417_e;
}



inline jule::Ptr<_1c974c73d_Eval> _1e46b4866_evalp(jule::Ptr<_1e46ac452_Sema> _self_, jule::Trait<_1c978dc35_Lookup> _72129_l, jule::Ptr<_1c97746ee_TypeKind> _72144_p) {
	return _1e46b44ae_evalpd(_self_, _72129_l,_72144_p,nullptr);
}



inline jule::Ptr<_1c974c73d_Eval> _1e46b4b74_eval(jule::Ptr<_1e46ac452_Sema> _self_, jule::Trait<_1c978dc35_Lookup> _72628_l) {
	return _1e46b4866_evalp(_self_, _72628_l,nullptr);
}



inline jule::Bool _1e46b516e_check_assign_type(jule::Ptr<_1e46ac452_Sema> _self_, jule::Bool _73037_dest_is_ref, jule::Ptr<_1c97746ee_TypeKind>& _73061_dest, jule::Ptr<_1c974abc0_Data>& _73114_d, jule::Ptr<_20cd9e6ec_Token> _73128_error_token) {
	if (_73114_d.get()._field_decl) {
		_1e46aed6c_push_err(_self_.ptr(), _73128_error_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return false;
	};
	if (_73037_dest_is_ref) {
		if ((!(_1c9774db4_equals(_73061_dest, _73114_d.get()._field_kind)))) {
			_1e46aed6c_push_err(_self_.ptr(), _73128_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_73061_dest.ptr())),jule::Any(_1c9774aa6_to_str(_73114_d.get()._field_kind.ptr()))}));
			return false;
		};
	} else {
		jule::Ptr<_1c973822e_AssignTypeChecker> _74221_atc = jule::new_ptr<_1c973822e_AssignTypeChecker>(_1c973822e_AssignTypeChecker{._field_s=_self_, ._field_dest=_73061_dest, ._field_d=_73114_d, ._field_error_token=_73128_error_token});;
		jule::Bool _74817_ok = _1c97393a6_check(_74221_atc.ptr());;
		if ((!(_74817_ok))) {
			return false;
		};
	};
	if (((!(_1c974b583_is_const(_73114_d.ptr()))) || (_1c97767ab_prim(_73061_dest.ptr()) == nullptr))) {
		return true;
	};
	jule::Str _75817_kind = _1c97767ab_prim(_73061_dest.ptr()).get()._field_kind;;
	{
		
		if (_1e46837d0_is_sig_int(_75817_kind)) {
			_case_begin_1cbc89abe:;
			{
				_1c968e372_set_i64(_73114_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1c968db24_as_i64(_73114_d.get()._field_constant.ptr())));
			}
		}
		else if (_1e4683abb_is_unsig_int(_75817_kind)) {
			_case_begin_1cbc89b46:;
			{
				_1c968e5e7_set_u64(_73114_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1c968dd88_as_u64(_73114_d.get()._field_constant.ptr())));
			}
		}
		else if (_1e468414e_is_float(_75817_kind)) {
			_case_begin_1cbc89bbd:;
			{
				_1c968ed67_set_f64(_73114_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1c968e0ec_as_f64(_73114_d.get()._field_constant.ptr())));
			}
		}
		_match_end_1cbc899e2:;
	};
	return true;
}



inline jule::Bool _1e46b55e2_check_type_compatibility(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1c97746ee_TypeKind>& _77249_dest, jule::Ptr<_1c97746ee_TypeKind>& _77314_src, jule::Ptr<_20cd9e6ec_Token>& _77335_error_token) {
	if ((_77314_src == nullptr)) {
		_1e46aed6c_push_err(_self_.ptr(), _77335_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_77249_dest.ptr())),jule::Any(_1c9774aa6_to_str(_77314_src.ptr()))}));
		return false;
	};
	if ((_1c97781d6_tup(_77314_src.ptr()) != nullptr)) {
		_1e46aed6c_push_err(_self_.ptr(), _77335_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_77249_dest.ptr())),jule::Any(_1c9774aa6_to_str(_77314_src.ptr()))}));
		return false;
	};
	_1c9736c55_TypeCompatibilityChecker _78717_tcc = _1c9736c55_TypeCompatibilityChecker{._field_s=_self_, ._field_dest=_77249_dest, ._field_src=_77314_src, ._field_error_token=_77335_error_token};;
	if (_1c9737be0_check(&_78717_tcc)) {
		return true;
	};
	_1e46aed6c_push_err(_self_.ptr(), _77335_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_77249_dest.ptr())),jule::Any(_1c9774aa6_to_str(_77314_src.ptr()))}));
	return false;
}



inline jule::Ptr<_1c97746ee_TypeKind> _1e46b59cc_build_non_generic_type_kind(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1e436257a_TypeDecl>& _80852_ast, jule::Slice<jule::Ptr<_1e436d50e_GenericDecl>>& _80914_generics) {
	jule::Ptr<_1c9782663_TypeChecker> _81017_tc = jule::new_ptr<_1c9782663_TypeChecker>(_1c9782663_TypeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1c978dc35_Lookup>(_self_, 3), ._field_ignore_generics=_80914_generics, });;
	return _1c978900a_check_decl(_81017_tc.ptr(), _80852_ast);
}



inline void _1e46b5c85_build_fn_non_generic_type_kinds(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1e4383018_FnIns>& _81856_f) {
	jule::Slice<jule::Ptr<_1e436d50e_GenericDecl>> _81917_generics = nullptr;;
	if (_1e4380a3d_is_method(_81856_f.get()._field_decl.ptr())) {
		_81917_generics=jule::append(_81856_f.get()._field_decl.get()._field_generics,_81856_f.get()._field_decl.get()._field_owner.get()._field_generics);
	} else {
		_81917_generics=_81856_f.get()._field_decl.get()._field_generics;
	};
	{
		auto &expr = _81856_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1cbc94964:;
		if (it != expr.end()) {
			jule::Ptr<_1e438217c_ParamIns> _82621_p = *it;
			{
				if ((!(_1e435279b_is_self(_82621_p.get()._field_decl.ptr())))) {
					_82621_p.get()._field_kind=_1e46b59cc_build_non_generic_type_kind(_self_, _82621_p.get()._field_decl.get()._field_kind.get()._field_decl,_81917_generics);
				};
			}
			_iter_next_1cbc94964:;
			++it;
			goto _iter_begin_1cbc94964;
		}
		_iter_end_1cbc94964:;
	};
	if ((!(_1e43807c9_is_void(_81856_f.get()._field_decl.ptr())))) {
		_81856_f.get()._field_result=_1e46b59cc_build_non_generic_type_kind(_self_, _81856_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl,_81917_generics);
	};
}



inline jule::Ptr<_1e4383018_FnIns> _1e46b60c6_get_trait_check_fn_kind(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1e4380576_Fn>& _83648_f) {
	if ((_83648_f.get()._field_instances.len() == 1LL)) {
		return _83648_f.get()._field_instances[0LL];
	};
	jule::Ptr<_1e4383018_FnIns> _84017_ins = _1e4381753_instance_force(_83648_f);;
	jule::Ptr<_1c9782663_TypeChecker> _84217_tc = jule::new_ptr<_1c9782663_TypeChecker>(_1c9782663_TypeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1c978dc35_Lookup>(_self_, 3), });;
	{
		auto &expr = _84017_ins.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1cbc99606:;
		if (it != expr.end()) {
			jule::Ptr<_1e438217c_ParamIns> _84621_p = *it;
			{
				if ((!(_1e435279b_is_self(_84621_p.get()._field_decl.ptr())))) {
					_84621_p.get()._field_kind=_1c978900a_check_decl(_84217_tc.ptr(), _84621_p.get()._field_decl.get()._field_kind.get()._field_decl);
				};
			}
			_iter_next_1cbc99606:;
			++it;
			goto _iter_begin_1cbc99606;
		}
		_iter_end_1cbc99606:;
	};
	if ((!(_1e43807c9_is_void(_83648_f.ptr())))) {
		_84017_ins.get()._field_result=_1c978900a_check_decl(_84217_tc.ptr(), _83648_f.get()._field_result.get()._field_kind.get()._field_decl);
	};
	return _84017_ins;
}



inline jule::Bool _1e46b63e5_reload_fn_ins_types(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1e4383018_FnIns>& _85844_f) {
	jule::Bool _85857_ok = jule::Bool();
	if ((_1e4383c94_is_builtin(_85844_f.ptr()) || _1e4384008_is_anon(_85844_f.ptr()))) {
		_85857_ok = true;
		return _85857_ok;
	};
	jule::Ptr<_1e46ac452_Sema> _86317_sema = _85844_f.get()._field_decl.get()._field_sema;;
	jule::Ptr<_1c9745c42_SymbolTable> _86517_old = _85844_f.get()._field_decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1e46ae9a4_set_current_file(_85844_f.get()._field_decl.get()._field_sema.ptr(), _86517_old);
	});;
	jule::Ptr<_1c9745c42_SymbolTable> _86717_file = _1e46abad3_find_file(_85844_f.get()._field_decl.get()._field_sema.get()._field_files,_85844_f.get()._field_decl.get()._field_token.get()._field_file);;
	if ((_86717_file != nullptr)) {
		_1e46ae9a4_set_current_file(_85844_f.get()._field_decl.get()._field_sema.ptr(), _86717_file);
	};
	jule::I64 _87217_size = _85844_f.get()._field_generics.len();;
	if (((_85844_f.get()._field_decl != nullptr) && (_85844_f.get()._field_decl.get()._field_owner != nullptr))) {
		_87217_size+=_85844_f.get()._field_decl.get()._field_owner.get()._field_generics.len();
	};
	jule::Slice<jule::Ptr<_1c97739b7_TypeAlias>> _87717_generics = jule::Slice<jule::Ptr<_1c97739b7_TypeAlias>>::alloc(0LL,_87217_size);;
	{
		auto &expr = _85844_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1cbca18b6:;
		if (it != expr.end()) {
			jule::I64 _87914_i = it - expr.begin();
			jule::Ptr<_1c97746ee_TypeKind> _87921_g = *it;
			{
				_87717_generics = jule::alloc_for_append(_87717_generics,1);_87717_generics.__push(jule::new_ptr<_1c97739b7_TypeAlias>(_1c97739b7_TypeAlias{._field_ident=_85844_f.get()._field_decl.get()._field_generics[_87914_i].get()._field_ident, ._field_kind=jule::new_ptr<_1c977858d_TypeSymbol>(_1c977858d_TypeSymbol{._field_kind=_87921_g}), }));;
			}
			_iter_next_1cbca18b6:;
			++it;
			_87914_i++;
			goto _iter_begin_1cbca18b6;
		}
		_iter_end_1cbca18b6:;
	};
	if (((_85844_f.get()._field_decl != nullptr) && (_85844_f.get()._field_decl.get()._field_owner != nullptr))) {
		jule::Ptr<_1e43462ea_StructIns> _88921_owner = _85844_f.get()._field_owner;;
		{
			auto &expr = _88921_owner.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1cbca3555:;
			if (it != expr.end()) {
				jule::I64 _89018_i = it - expr.begin();
				jule::Ptr<_1c97746ee_TypeKind> _89025_g = *it;
				{
					_87717_generics = jule::alloc_for_append(_87717_generics,1);_87717_generics.__push(jule::new_ptr<_1c97739b7_TypeAlias>(_1c97739b7_TypeAlias{._field_ident=_88921_owner.get()._field_decl.get()._field_generics[_89018_i].get()._field_ident, ._field_kind=jule::new_ptr<_1c977858d_TypeSymbol>(_1c977858d_TypeSymbol{._field_kind=_89025_g}), }));;
				}
				_iter_next_1cbca3555:;
				++it;
				_89018_i++;
				goto _iter_begin_1cbca3555;
			}
			_iter_end_1cbca3555:;
		};
	};
	_85857_ok=true;
	{
		auto &expr = _85844_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1cbca4db4:;
		if (it != expr.end()) {
			jule::Ptr<_1e438217c_ParamIns> _90121_p = *it;
			{
				if (_1e435279b_is_self(_90121_p.get()._field_decl.ptr())) {
					if (_1e4355edb_is_ref(_90121_p.get()._field_decl.ptr())) {
						_90121_p.get()._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(jule::new_ptr<_1c977c460_Sptr>(_1c977c460_Sptr{._field_elem=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_85844_f.get()._field_owner, 0)})}), 6)});
					} else {
						_90121_p.get()._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_85844_f.get()._field_owner, 0)});
					};
				} else {
					_90121_p.get()._field_kind=_1e46b3931_build_type_with_generics(_86317_sema, _90121_p.get()._field_decl.get()._field_kind.get()._field_decl,_87717_generics,_85844_f.get()._field_refers);
					if ((_90121_p.get()._field_kind != nullptr)) {
						_90121_p.get()._field_kind.get()._field_variadic=_90121_p.get()._field_decl.get()._field_variadic;
						if ((_90121_p.get()._field_decl.get()._field_reference && (!(_1c978a98a_is_valid_for_ref(_90121_p.get()._field_kind))))) {
							_1e46aed6c_push_err(_self_.ptr(), _90121_p.get()._field_decl.get()._field_token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_90121_p.get()._field_kind.ptr()))}));
						};
					} else {
						_85857_ok=false;
					};
				};
			}
			_iter_next_1cbca4db4:;
			++it;
			goto _iter_begin_1cbca4db4;
		}
		_iter_end_1cbca4db4:;
	};
	if ((!(_1e43807c9_is_void(_85844_f.get()._field_decl.ptr())))) {
		_85844_f.get()._field_result=_1e46b3931_build_type_with_generics(_86317_sema, _85844_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl,_87717_generics,_85844_f.get()._field_refers);
		_85857_ok=((_85844_f.get()._field_result != nullptr) && _85857_ok);
	};
	if ((_86317_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_86317_sema.get()._field_errors);
		_86317_sema.get()._field_errors=nullptr;
	};
	return _85857_ok;
}



inline jule::Bool _1e46b6879_check_ref_validity_for_init_expr(jule::Ptr<_1e46ac452_Sema> _self_, jule::Bool _94252_left_mut, jule::Ptr<_1c974abc0_Data>& _94273_d, jule::Ptr<_20cd9e6ec_Token>& _94288_error_token) {
	{
		auto &_match_expr{ _94273_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e46c6eb6_Var>>()) {
			_case_begin_1cbcad41c:;
			{
				goto _match_end_1cbcac8b1;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437bcae_TraitSubIdentExprModel>>()) {
			_case_begin_1cbcad483:;
			{
				jule::Ptr<_1e437bcae_TraitSubIdentExprModel> _94721_model = _94273_d.get()._field_model.operator jule::Ptr<_1e437bcae_TraitSubIdentExprModel>();;
				if ((!(_1e46aa61a_is_valid_model_for_ref(_94721_model.get()._field_expr)))) {
					_1e46aed6c_push_err(_self_.ptr(), _94288_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_94721_model.get()._field_method.get()._field_ident)}));
					return false;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437c1cc_StructSubIdentExprModel>>()) {
			_case_begin_1cbcad50a:;
			{
				jule::Ptr<_1e437c1cc_StructSubIdentExprModel> _95321_model = _94273_d.get()._field_model.operator jule::Ptr<_1e437c1cc_StructSubIdentExprModel>();;
				if ((!(_1e46aa61a_is_valid_model_for_ref(_95321_model.get()._field_expr.get()._field_model)))) {
					_1e46aed6c_push_err(_self_.ptr(), _94288_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_95321_model.get()._field_field.get()._field_decl.get()._field_ident)}));
					return false;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437c793_CommonIdentExprModel>>() || _match_expr.type_is<jule::Ptr<_1e437c980_CommonSubIdentExprModel>>()) {
			_case_begin_1cbcad571:;
			{
				_1e46aed6c_push_err(_self_.ptr(), _94288_error_token,jule::Str("built-in defines cannot pass to references", 42),jule::Slice<jule::Any>());
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e435972b_UnaryExprModel>>()) {
			_case_begin_1cbcad62b:;
			{
				jule::Ptr<_1e435972b_UnaryExprModel> _96321_unary = _94273_d.get()._field_model.operator jule::Ptr<_1e435972b_UnaryExprModel>();;
				if ((_96321_unary.get()._field_op.get()._field_kind == jule::Str("*", 1))) {
					if ((!(_1e46aa61a_is_valid_model_for_ref(_94273_d.get()._field_model)))) {
						_1e46aed6c_push_err(_self_.ptr(), _94288_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(jule::Str("address from * &T", 17))}));
						return false;
					};
					goto _match_end_1cbcac8b1;
				};
				goto _case_begin_1cbcac916;
			}
		}
		else {
			_case_begin_1cbcac916:;
			{
				_1e46aed6c_push_err(_self_.ptr(), _94288_error_token,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1cbcac8b1:;
	};
	if ((_94252_left_mut && (!(_94273_d.get()._field_mutable)))) {
		_1e46aed6c_push_err(_self_.ptr(), _94288_error_token,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>());
		return false;
	};
	return true;
}



inline jule::Bool _1e46b6e73_check_validity_for_init_expr(jule::Ptr<_1e46ac452_Sema> _self_, jule::Bool _98448_left_mut, jule::Bool _98464_left_ref, jule::Ptr<_1c97746ee_TypeKind>& _98510_left_kind, jule::Ptr<_1c974abc0_Data>& _98537_d, jule::Ptr<_20cd9e6ec_Token>& _98552_error_token) {
	if (((_98448_left_mut && (!(_98537_d.get()._field_mutable))) && _1c9775a96_mutable(_98537_d.get()._field_kind.ptr()))) {
		_1e46aed6c_push_err(_self_.ptr(), _98552_error_token,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_98537_d.get()._field_kind.ptr()))}));
		return false;
	};
	if (_98464_left_ref) {
		if ((!(_1e46b6879_check_ref_validity_for_init_expr(_self_, _98448_left_mut,_98537_d,_98552_error_token)))) {
			return false;
		};
	};
	jule::Ptr<_1c973822e_AssignTypeChecker> _99617_atc = jule::new_ptr<_1c973822e_AssignTypeChecker>(_1c973822e_AssignTypeChecker{._field_s=_self_, ._field_d=_98537_d, ._field_error_token=_98552_error_token});;
	return _1c9738905_check_validity(_99617_atc.ptr());
}



inline jule::Bool _1e46b732a_check_type_alias_decl_kind(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1c97739b7_TypeAlias>& _100451_ta, jule::Trait<_1c978dc35_Lookup> _100471_l) {
	jule::Bool _100484_ok = jule::Bool();
	jule::Ptr<_1c9745c42_SymbolTable> _100517_old = _self_.get()._field_file;;
	__JULE_DEFER({
		_1e46ae9a4_set_current_file(_self_.ptr(), _100517_old);
	});;
	if ((_100451_ta.get()._field_token != nullptr)) {
		jule::Ptr<_1c9745c42_SymbolTable> _101021_file = _1e46abad3_find_file(_self_.get()._field_files,_100451_ta.get()._field_token.get()._field_file);;
		if ((_101021_file != nullptr)) {
			_1e46ae9a4_set_current_file(_self_.ptr(), _101021_file);
		};
	};
	_100484_ok=_1e46b3106_check_type_with_refers(_self_, _100451_ta.get()._field_kind,_100471_l,jule::new_ptr<_1c978191a_Referencer>(_1c978191a_Referencer{._field_ident=_100451_ta.get()._field_ident, ._field_owner=jule::Any(_100451_ta), ._field_refs=(&(_100451_ta.get()._field_refers))}));
	if (((_100484_ok && (_1c977725c_arr(_100451_ta.get()._field_kind.get()._field_kind.ptr()) != nullptr)) && _1c977725c_arr(_100451_ta.get()._field_kind.get()._field_kind.ptr()).get()._field_auto)) {
		_1e46aed6c_push_err(_self_.ptr(), _100451_ta.get()._field_kind.get()._field_decl.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
		_100484_ok=false;
	};
	return _100484_ok;
}



inline void _1e46b765a_check_type_alias_decl(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1c97739b7_TypeAlias>& _102746_ta, jule::Trait<_1c978dc35_Lookup> _102766_l) {
	if (_20cda1e4c_is_ignore_ident(_102746_ta.get()._field_ident)) {
		_1e46aed6c_push_err(_self_.ptr(), _102746_ta.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_1e46b732a_check_type_alias_decl_kind(_self_, _102746_ta,_102766_l);
}



inline void _1e46b7902_check_type_alias_decl_dup(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1c97739b7_TypeAlias>& _103550_ta) {
	if (_1e46b0994_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_103550_ta)),_103550_ta.get()._field_ident,_103550_ta.get()._field_cpp_linked)) {
		_1e46aed6c_push_err(_self_.ptr(), _103550_ta.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_103550_ta.get()._field_ident)}));
		_1e46b018b_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1e46b732a_check_type_alias_decl_kind(_self_, _103550_ta,jule::Trait<_1c978dc35_Lookup>(_self_, 3));
}



inline jule::Bool _1e46b7b77_check_type_alias_decls(jule::Ptr<_1e46ac452_Sema> _self_) {
	jule::Bool _104444_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1cbcc34dc:;
		if (it != expr.end()) {
			jule::Ptr<_1c97739b7_TypeAlias> _104521_ta = *it;
			{
				_1e46b7902_check_type_alias_decl_dup(_self_, _104521_ta);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_104444_ok = false;
					return _104444_ok;
				};
			}
			_iter_next_1cbcc34dc:;
			++it;
			goto _iter_begin_1cbcc34dc;
		}
		_iter_end_1cbcc34dc:;
	};
	_104444_ok = true;
	return _104444_ok;
}



inline void _1e46b7dec_check_enum_items_dup(_1e46ac452_Sema* _self_, jule::Ptr<_1e4456b58_Enum> _105639_e) {
	{
		auto &expr = _105639_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1cbcc4eb1:;
		if (it != expr.end()) {
			jule::Ptr<_1e4392797_EnumItem> &_105716_item = *it;
			{
				if (_20cda1e4c_is_ignore_ident(_105716_item.get()._field_ident)) {
					_1e46aed6c_push_err(&(*_self_), _105716_item.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _105639_e.get()._field_items;
						auto it = expr.begin();
						_iter_begin_1cbcc66aa:;
						if (it != expr.end()) {
							jule::Ptr<_1e4392797_EnumItem> &_106124_citem = *it;
							{
								if ((_105716_item == _106124_citem)) {
									goto _iter_end_1cbcc66aa;
								} else if ((_105716_item.get()._field_ident == _106124_citem.get()._field_ident)) {
									_1e46aed6c_push_err(&(*_self_), _105716_item.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_105716_item.get()._field_ident)}));
									_1e46b018b_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1cbcc66aa;
								};
							}
							_iter_next_1cbcc66aa:;
							++it;
							goto _iter_begin_1cbcc66aa;
						}
						_iter_end_1cbcc66aa:;
					};
				};
			}
			_iter_next_1cbcc4eb1:;
			++it;
			goto _iter_begin_1cbcc4eb1;
		}
		_iter_end_1cbcc4eb1:;
	};
}



inline void _1e46b8172_check_enum_items_str(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1e4456b58_Enum>& _107445_e) {
	{
		auto &expr = _107445_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1cbcc8613:;
		if (it != expr.end()) {
			jule::Ptr<_1e4392797_EnumItem> _107521_item = *it;
			{
				if (_1e4438420_auto_expr(_107521_item.ptr())) {
					_107521_item.get()._field_value=jule::new_ptr<_1c974bc48_Value>(_1c974bc48_Value{._field_data=jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_constant=static__1c968c370_new_str(_107521_item.get()._field_ident)})});
					_107521_item.get()._field_value.get()._field_data.get()._field_model=jule::Any(_107521_item.get()._field_value.get()._field_data.get()._field_constant);
				} else {
					jule::Ptr<_1c974abc0_Data> _108425_d = _1c9766647_eval_expr(_1e46b4b74_eval(_self_, jule::Trait<_1c978dc35_Lookup>(_self_, 3)), _107521_item.get()._field_value.get()._field_expr);;
					if ((_108425_d == nullptr)) {
						goto _iter_next_1cbcc8613;
					};
					if ((!(_1c974b583_is_const(_108425_d.ptr())))) {
						_1e46aed6c_push_err(_self_.ptr(), _107521_item.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_1e46b516e_check_assign_type(_self_, false,_107445_e.get()._field_kind.get()._field_kind,_108425_d,_107521_item.get()._field_token);
					_107521_item.get()._field_value.get()._field_data=_108425_d;
				};
			}
			_iter_next_1cbcc8613:;
			++it;
			goto _iter_begin_1cbcc8613;
		}
		_iter_end_1cbcc8613:;
	};
}



inline void _1e46b83e7_check_enum_items_int(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1e4456b58_Enum>& _109945_e) {
	jule::Ptr<_1c9778e51_Prim> _110013_prim = _1c97767ab_prim(_109945_e.get()._field_kind.get()._field_kind.ptr());;
	jule::U64 _110117_max = static_cast<jule::U64>(_1e467d8b8_max(_1c97792b4_to_str(_110013_prim.ptr())));;
	{
		auto &expr = _109945_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1cbcce6e6:;
		if (it != expr.end()) {
			jule::I64 _110214_i = it - expr.begin();
			jule::Ptr<_1e4392797_EnumItem> _110221_item = *it;
			{
				if ((_110117_max == 0LLU)) {
					_1e46aed6c_push_err(_self_.ptr(), _110221_item.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					(_110117_max)--;
				};
				if (_1e4438420_auto_expr(_110221_item.ptr())) {
					_110221_item.get()._field_value=jule::new_ptr<_1c974bc48_Value>(_1c974bc48_Value{._field_data=jule::new_ptr<_1c974abc0_Data>()});
					{
						
						if (_1e46837d0_is_sig_int(_1c97792b4_to_str(_110013_prim.ptr()))) {
							_case_begin_1cbcd1b8d:;
							{
								_110221_item.get()._field_value.get()._field_data.get()._field_constant=static__1c968ab87_new_i64(static_cast<jule::I64>(static_cast<jule::I64>((_110117_max - (_110117_max - static_cast<jule::U64>(_110214_i))))));
							}
						}
						else {
							_case_begin_1cbcd182a:;
							{
								_110221_item.get()._field_value.get()._field_data.get()._field_constant=static__1c968bd75_new_u64(static_cast<jule::U64>((_110117_max - (_110117_max - static_cast<jule::U64>(_110214_i)))));
							}
						}
						_match_end_1cbcd17c5:;
					};
					_110221_item.get()._field_value.get()._field_data.get()._field_model=jule::Any(_110221_item.get()._field_value.get()._field_data.get()._field_constant);
				} else {
					jule::Ptr<_1c974abc0_Data> _112025_d = _1c9766647_eval_expr(_1e46b4b74_eval(_self_, jule::Trait<_1c978dc35_Lookup>(_self_, 3)), _110221_item.get()._field_value.get()._field_expr);;
					if ((_112025_d == nullptr)) {
						goto _iter_next_1cbcce6e6;
					};
					if ((!(_1c974b583_is_const(_112025_d.ptr())))) {
						_1e46aed6c_push_err(_self_.ptr(), _110221_item.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_1e46b516e_check_assign_type(_self_, false,_109945_e.get()._field_kind.get()._field_kind,_112025_d,_110221_item.get()._field_token);
					_110221_item.get()._field_value.get()._field_data=_112025_d;
				};
			}
			_iter_next_1cbcce6e6:;
			++it;
			_110214_i++;
			goto _iter_begin_1cbcce6e6;
		}
		_iter_end_1cbcce6e6:;
	};
}



inline void _1e46b866c_check_enum_decl(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1e4456b58_Enum>& _113540_e) {
	if (_20cda1e4c_is_ignore_ident(_113540_e.get()._field_ident)) {
		_1e46aed6c_push_err(_self_.ptr(), _113540_e.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1e46b0994_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_113540_e)),_113540_e.get()._field_ident,false)) {
		_1e46aed6c_push_err(_self_.ptr(), _113540_e.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_113540_e.get()._field_ident)}));
		_1e46b018b_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_113540_e.get()._field_items.len() == 0LL)) {
		_1e46aed6c_push_err(_self_.ptr(), _113540_e.get()._field_token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_113540_e.get()._field_ident)}));
	};
	_1e46b7dec_check_enum_items_dup(_self_.ptr(), _113540_e);
	if ((_113540_e.get()._field_kind != nullptr)) {
		if ((!(_1e46b34ad_check_type(_self_, _113540_e.get()._field_kind,jule::Trait<_1c978dc35_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		_113540_e.get()._field_kind=jule::new_ptr<_1c977858d_TypeSymbol>(_1c977858d_TypeSymbol{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("int", 3)), 5)})});
	};
	jule::Ptr<_1c9778e51_Prim> _116217_t = _1c97767ab_prim(_113540_e.get()._field_kind.get()._field_kind.ptr());;
	if ((_116217_t == nullptr)) {
		_1e46aed6c_push_err(_self_.ptr(), _113540_e.get()._field_token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1c977be10_is_str(_116217_t.ptr())) {
			_case_begin_1cbcdc9bd:;
			{
				_1e46b8172_check_enum_items_str(_self_, _113540_e);
			}
		}
		else if (_1e4683d63_is_int(_1c97792b4_to_str(_116217_t.ptr()))) {
			_case_begin_1cbcdc737:;
			{
				_1e46b83e7_check_enum_items_int(_self_, _113540_e);
			}
		}
		else {
			_case_begin_1cbcdbacc:;
			{
				_1e46aed6c_push_err(_self_.ptr(), _113540_e.get()._field_token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
			}
		}
		_match_end_1cbcdba33:;
	};
}



inline jule::Bool _1e46b88d1_check_enum_decls(jule::Ptr<_1e46ac452_Sema> _self_) {
	jule::Bool _118038_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_enums;
		auto it = expr.begin();
		_iter_begin_1cbcdeb35:;
		if (it != expr.end()) {
			jule::Ptr<_1e4456b58_Enum> _118121_e = *it;
			{
				_1e46b866c_check_enum_decl(_self_, _118121_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_118038_ok = false;
					return _118038_ok;
				};
			}
			_iter_next_1cbcdeb35:;
			++it;
			goto _iter_begin_1cbcdeb35;
		}
		_iter_end_1cbcdeb35:;
	};
	_118038_ok = true;
	return _118038_ok;
}



inline jule::Bool _1e46b8bde_check_decl_generics(_1e46ac452_Sema* _self_, jule::Slice<jule::Ptr<_1e436d50e_GenericDecl>>& _119239_generics) {
	jule::Bool _119272_ok = jule::Bool();
	_119272_ok=true;
	{
		auto &expr = _119239_generics;
		auto it = expr.begin();
		_iter_begin_1cbce195b:;
		if (it != expr.end()) {
			jule::I64 _119413_i = it - expr.begin();
			jule::Ptr<_1e436d50e_GenericDecl> &_119416_g = *it;
			{
				if (_20cda1e4c_is_ignore_ident(_119416_g.get()._field_ident)) {
					_1e46aed6c_push_err(&(*_self_), _119416_g.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
					_119272_ok=false;
					goto _iter_next_1cbce195b;
				};
				_julec_label_duplication_lookup:;
				{
					auto &expr = _119239_generics;
					auto it = expr.begin();
					_iter_begin_1cbce25a5:;
					if (it != expr.end()) {
						jule::I64 _120317_j = it - expr.begin();
						jule::Ptr<_1e436d50e_GenericDecl> &_120320_ct = *it;
						{
							{
								
								if ((_120317_j >= _119413_i)) {
									_case_begin_1cbce40ce:;
									{
										goto _iter_end_1cbce25a5;
									}
								}
								else if ((_119416_g.get()._field_ident == _120320_ct.get()._field_ident)) {
									_case_begin_1cbce4156:;
									{
										_1e46aed6c_push_err(&(*_self_), _119416_g.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_119416_g.get()._field_ident)}));
										_1e46b018b_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										_119272_ok=false;
										goto _iter_end_1cbce25a5;
									}
								}
								_match_end_1cbce3ebe:;
							};
						}
						_iter_next_1cbce25a5:;
						++it;
						_120317_j++;
						goto _iter_begin_1cbce25a5;
					}
					_iter_end_1cbce25a5:;
				};
			}
			_iter_next_1cbce195b:;
			++it;
			_119413_i++;
			goto _iter_begin_1cbce195b;
		}
		_iter_end_1cbce195b:;
	};
	return _119272_ok;
}



inline jule::Bool _1e46b901e_check_fn_decl_params_dup(_1e46ac452_Sema* _self_, jule::Ptr<_1e4380576_Fn>& _121944_f) {
	jule::Bool _121954_ok = jule::Bool();
	_121954_ok=true;
	_julec_label_check:;
	{
		auto &expr = _121944_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1cbce6e06:;
		if (it != expr.end()) {
			jule::I64 _122213_i = it - expr.begin();
			jule::Ptr<_1e4380389_Param> &_122216_p = *it;
			{
				{
					auto &expr = _121944_f.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1cbce79b7:;
					if (it != expr.end()) {
						jule::Ptr<_1e436d50e_GenericDecl> &_122420_g = *it;
						{
							if ((_122216_p.get()._field_ident == _122420_g.get()._field_ident)) {
								_121954_ok=false;
								_1e46aed6c_push_err(&(*_self_), _122216_p.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_122216_p.get()._field_ident)}));
								_1e46b018b_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								goto _iter_next_1cbce6e06;
							};
						}
						_iter_next_1cbce79b7:;
						++it;
						goto _iter_begin_1cbce79b7;
					}
					_iter_end_1cbce79b7:;
				};
				_julec_label_params_lookup:;
				{
					auto &expr = _121944_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_1cbce7d08:;
					if (it != expr.end()) {
						jule::I64 _123417_j = it - expr.begin();
						jule::Ptr<_1e4380389_Param> &_123420_jp = *it;
						{
							{
								
								if ((_123417_j >= _122213_i)) {
									_case_begin_1cbcea16d:;
									{
										goto _iter_end_1cbce7d08;
									}
								}
								else if ((_20cda21e4_is_anon_ident(_122216_p.get()._field_ident) || _20cda21e4_is_anon_ident(_123420_jp.get()._field_ident))) {
									_case_begin_1cbcea1e5:;
									{
										goto _iter_end_1cbce7d08;
									}
								}
								else if ((_122216_p.get()._field_ident == _123420_jp.get()._field_ident)) {
									_case_begin_1cbcea26c:;
									{
										_121954_ok=false;
										_1e46aed6c_push_err(&(*_self_), _122216_p.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_122216_p.get()._field_ident)}));
										_1e46b018b_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_next_1cbce6e06;
									}
								}
								_match_end_1cbcea04c:;
							};
						}
						_iter_next_1cbce7d08:;
						++it;
						_123417_j++;
						goto _iter_begin_1cbce7d08;
					}
					_iter_end_1cbce7d08:;
				};
			}
			_iter_next_1cbce6e06:;
			++it;
			_122213_i++;
			goto _iter_begin_1cbce6e06;
		}
		_iter_end_1cbce6e06:;
	};
	return _121954_ok;
}



inline jule::Bool _1e46b9360_check_fn_decl_result_dup(_1e46ac452_Sema* _self_, jule::Ptr<_1e4380576_Fn>& _125344_f) {
	jule::Bool _125354_ok = jule::Bool();
	_125354_ok=true;
	if (_1e43807c9_is_void(_125344_f.ptr())) {
		return _125354_ok;
	};
	{
		auto &expr = _125344_f.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_1cbcedade:;
		if (it != expr.end()) {
			jule::I64 _126013_i = it - expr.begin();
			jule::Ptr<_20cd9e6ec_Token> &_126016_v = *it;
			{
				if ((_20cda1e4c_is_ignore_ident(_126016_v.get()._field_kind) || _20cda21e4_is_anon_ident(_126016_v.get()._field_kind))) {
					goto _iter_next_1cbcedade;
				};
				{
					auto &expr = _125344_f.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1cbceee86:;
					if (it != expr.end()) {
						jule::Ptr<_1e436d50e_GenericDecl> &_126520_g = *it;
						{
							if ((_126016_v.get()._field_kind == _126520_g.get()._field_ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1cbceee86:;
						++it;
						goto _iter_begin_1cbceee86;
					}
					_iter_end_1cbceee86:;
				};
				{
					auto &expr = _125344_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_1cbd01053:;
					if (it != expr.end()) {
						jule::Ptr<_1e4380389_Param> &_127120_p = *it;
						{
							if ((_126016_v.get()._field_kind == _127120_p.get()._field_ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1cbd01053:;
						++it;
						goto _iter_begin_1cbd01053;
					}
					_iter_end_1cbd01053:;
				};
				_julec_label_itself_lookup:;
				{
					auto &expr = _125344_f.get()._field_result.get()._field_idents;
					auto it = expr.begin();
					_iter_begin_1cbd02230:;
					if (it != expr.end()) {
						jule::I64 _127917_j = it - expr.begin();
						jule::Ptr<_20cd9e6ec_Token> &_127920_jv = *it;
						{
							{
								
								if ((_127917_j >= _126013_i)) {
									_case_begin_1cbd02ce1:;
									{
										goto _iter_end_1cbd02230;
									}
								}
								else if ((_127920_jv.get()._field_kind == _126016_v.get()._field_kind)) {
									_case_begin_1cbd02d68:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_1cbd02bd1:;
							};
						}
						_iter_next_1cbd02230:;
						++it;
						_127917_j++;
						goto _iter_begin_1cbd02230;
					}
					_iter_end_1cbd02230:;
				};
				goto _iter_next_1cbcedade;
				_julec_label_exist:;
				_1e46aed6c_push_err(&(*_self_), _126016_v,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_126016_v.get()._field_kind)}));
				_1e46b018b_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
				_125354_ok=false;
			}
			_iter_next_1cbcedade:;
			++it;
			_126013_i++;
			goto _iter_begin_1cbcedade;
		}
		_iter_end_1cbcedade:;
	};
	return _125354_ok;
}



inline void _1e46b9618_check_fn_decl_prototype(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1e4380576_Fn>& _130048_f) {
	if ((_130048_f.get()._field_exceptional && _130048_f.get()._field_cpp_linked)) {
		_1e46aed6c_push_err(_self_.ptr(), _130048_f.get()._field_token,jule::Str("cpp-linked defines cannot be exceptional", 40),jule::Slice<jule::Any>());
		return;;
	};
	if (_130048_f.get()._field_exceptional) {
		if (_1e4380ca2_is_entry_point(_130048_f.ptr())) {
			_1e46aed6c_push_err(_self_.ptr(), _130048_f.get()._field_token,jule::Str("entry point cannot be exceptional", 33),jule::Slice<jule::Any>());
		} else if (_1e4381016_is_init(_130048_f.ptr())) {
			_1e46aed6c_push_err(_self_.ptr(), _130048_f.get()._field_token,jule::Str("initializer function cannot be exceptional", 42),jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1e46b8bde_check_decl_generics(_self_.ptr(), _130048_f.get()._field_generics)))) {
			_case_begin_1cbd06b08:;
		}
		else if ((!(_1e46b901e_check_fn_decl_params_dup(_self_.ptr(), _130048_f)))) {
			_case_begin_1cbd06b80:;
		}
		else if ((!(_1e46b9360_check_fn_decl_result_dup(_self_.ptr(), _130048_f)))) {
			_case_begin_1cbd08269:;
		}
		_match_end_1cbd069d7:;
	};
}



inline void _1e46b98c1_check_trait_decl_method(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1e4380576_Fn>& _132148_f) {
	if (_20cda1e4c_is_ignore_ident(_132148_f.get()._field_ident)) {
		_1e46aed6c_push_err(_self_.ptr(), _132148_f.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_132148_f.get()._field_sema=_self_;
	_1e46b9618_check_fn_decl_prototype(_self_, _132148_f);
	jule::Ptr<_1e4383018_FnIns> _132817_ins = _1e43819b7_instance(_132148_f);;
	_1e46b63e5_reload_fn_ins_types(_self_, _132817_ins);
	_132817_ins.get()._field_reloaded=true;
	_1e4381cc5_append_instance(_132148_f.ptr(), _132817_ins);
}



inline void _1e46b9b79_check_trait_decl_methods(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1e43d8d0a_Trait>& _133449_t) {
	{
		auto &expr = _133449_t.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1cbd0c9aa:;
		if (it != expr.end()) {
			jule::I64 _133514_i = it - expr.begin();
			jule::Ptr<_1e4380576_Fn> _133521_f = *it;
			{
				_1e46b98c1_check_trait_decl_method(_self_, _133521_f);
				_133449_t.get()._field_mutable=(_133449_t.get()._field_mutable || _133521_f.get()._field_params[0LL].get()._field_mutable);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;;
				};
				_julec_label_duplicate_lookup:;
				{
					auto &expr = _133449_t.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1cbd0e32a:;
					if (it != expr.end()) {
						jule::I64 _134617_j = it - expr.begin();
						jule::Ptr<_1e4380576_Fn> _134620_jf = *it;
						{
							{
								
								if ((_134617_j >= _133514_i)) {
									_case_begin_1cbd1045d:;
									{
										goto _iter_end_1cbd0e32a;
									}
								}
								else if ((_133521_f.get()._field_ident == _134620_jf.get()._field_ident)) {
									_case_begin_1cbd104d5:;
									{
										_1e46aed6c_push_err(_self_.ptr(), _133521_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_133521_f.get()._field_ident)}));
										_1e46b018b_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_end_1cbd0e32a;
									}
								}
								_match_end_1cbd1034d:;
							};
						}
						_iter_next_1cbd0e32a:;
						++it;
						_134617_j++;
						goto _iter_begin_1cbd0e32a;
					}
					_iter_end_1cbd0e32a:;
				};
			}
			_iter_next_1cbd0c9aa:;
			++it;
			_133514_i++;
			goto _iter_begin_1cbd0c9aa;
		}
		_iter_end_1cbd0c9aa:;
	};
}



inline void _1e46b9e10_check_trait_decl(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1e43d8d0a_Trait>& _136541_t) {
	if (_20cda1e4c_is_ignore_ident(_136541_t.get()._field_ident)) {
		_1e46aed6c_push_err(_self_.ptr(), _136541_t.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1e46b0994_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_136541_t)),_136541_t.get()._field_ident,false)) {
		_1e46aed6c_push_err(_self_.ptr(), _136541_t.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_136541_t.get()._field_ident)}));
		_1e46b018b_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1e46b9b79_check_trait_decl_methods(_self_, _136541_t);
}



inline jule::Bool _1e46ba174_check_trait_decls(jule::Ptr<_1e46ac452_Sema> _self_) {
	jule::Bool _137739_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_traits;
		auto it = expr.begin();
		_iter_begin_1cbd15a7e:;
		if (it != expr.end()) {
			jule::Ptr<_1e43d8d0a_Trait> _137821_t = *it;
			{
				_1e46b9e10_check_trait_decl(_self_, _137821_t);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_137739_ok = false;
					return _137739_ok;
				};
			}
			_iter_next_1cbd15a7e:;
			++it;
			goto _iter_begin_1cbd15a7e;
		}
		_iter_end_1cbd15a7e:;
	};
	_137739_ok = true;
	return _137739_ok;
}



inline jule::Bool _1e46ba54d_check_trait_impl_methods(_1e46ac452_Sema* _self_, jule::Ptr<_1e43d8d0a_Trait>& _138948_base, jule::Ptr<_1e5c31431_Impl>& _138963_ipl) {
	jule::Bool _138977_ok = jule::Bool();
	_138977_ok=true;
	{
		auto &expr = _138963_ipl.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1cbd17d4a:;
		if (it != expr.end()) {
			jule::Ptr<_1e4380576_Fn> &_139116_f = *it;
			{
				if ((_1e44161ab_find_method(_138948_base.ptr(), _139116_f.get()._field_ident) == nullptr)) {
					_1e46aed6c_push_err(&(*_self_), _139116_f.get()._field_token,jule::Str("undefined identifier: trait @ has no define @", 45),jule::Slice<jule::Any>::make({jule::Any(_138948_base.get()._field_ident),jule::Any(_139116_f.get()._field_ident)}));
					_138977_ok=false;
				};
			}
			_iter_next_1cbd17d4a:;
			++it;
			goto _iter_begin_1cbd17d4a;
		}
		_iter_end_1cbd17d4a:;
	};
	return _138977_ok;
}



inline jule::Bool _1e46ba916_impl_to_struct(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1e43360cb_Struct>& _140039_dest, jule::Ptr<_1e5c31431_Impl>& _140059_ipl) {
	jule::Bool _140073_ok = jule::Bool();
	_140073_ok=true;
	{
		auto &expr = _140059_ipl.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1cbd1a9c9:;
		if (it != expr.end()) {
			jule::Ptr<_1e4380576_Fn> _140421_f = *it;
			{
				if (((_1e433b71e_find_method(_140039_dest.ptr(), _140421_f.get()._field_ident,_140421_f.get()._field_statically) != nullptr) || (_1e433e17d_find_field(_140039_dest.ptr(), _140421_f.get()._field_ident) != nullptr))) {
					_1e46aed6c_push_err(_self_.ptr(), _140421_f.get()._field_token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_140039_dest.get()._field_ident),jule::Any(_140421_f.get()._field_ident)}));
					_140073_ok=false;
					goto _iter_next_1cbd1a9c9;
				};
				if (((_140039_dest.get()._field_generics.len() > 0LL) && (_140421_f.get()._field_generics.len() > 0LL))) {
					{
						auto &expr = _140421_f.get()._field_generics;
						auto it = expr.begin();
						_iter_begin_1cbd1d35b:;
						if (it != expr.end()) {
							jule::Ptr<_1e436d50e_GenericDecl> _141224_fg = *it;
							{
								{
									auto &expr = _140039_dest.get()._field_generics;
									auto it = expr.begin();
									_iter_begin_1cbd1dadc:;
									if (it != expr.end()) {
										jule::Ptr<_1e436d50e_GenericDecl> _141328_dg = *it;
										{
											if ((_141224_fg.get()._field_ident == _141328_dg.get()._field_ident)) {
												_1e46aed6c_push_err(_self_.ptr(), _141224_fg.get()._field_token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>());
												_140073_ok=false;
											};
										}
										_iter_next_1cbd1dadc:;
										++it;
										goto _iter_begin_1cbd1dadc;
									}
									_iter_end_1cbd1dadc:;
								};
							}
							_iter_next_1cbd1d35b:;
							++it;
							goto _iter_begin_1cbd1d35b;
						}
						_iter_end_1cbd1d35b:;
					};
				};
				_1e46b0cb3_check_directives(_self_, _140421_f.get()._field_directives,jule::Any(_140421_f));
				_140421_f.get()._field_sema=_self_;
				_140421_f.get()._field_owner=_140039_dest;
				_140039_dest.get()._field_methods = jule::alloc_for_append(_140039_dest.get()._field_methods,1);_140039_dest.get()._field_methods.__push(_140421_f);;
			}
			_iter_next_1cbd1a9c9:;
			++it;
			goto _iter_begin_1cbd1a9c9;
		}
		_iter_end_1cbd1a9c9:;
	};
	{
		auto &expr = _140059_ipl.get()._field_statics;
		auto it = expr.begin();
		_iter_begin_1cbd214e6:;
		if (it != expr.end()) {
			jule::Ptr<_1e46c6eb6_Var> _142921_v = *it;
			{
				;
				if (((_1e433b71e_find_method(_140039_dest.ptr(), _142921_v.get()._field_ident,true) != nullptr) || (_1e433ce90_find_static(_140039_dest.ptr(), _142921_v.get()._field_ident) != nullptr))) {
					_1e46aed6c_push_err(_self_.ptr(), _142921_v.get()._field_token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_140039_dest.get()._field_ident),jule::Any(_142921_v.get()._field_ident)}));
					_140073_ok=false;
					goto _iter_next_1cbd214e6;
				};
				_1e46bb4a5_check_var_decl(_self_, _142921_v,jule::Trait<_1c978dc35_Lookup>(_self_, 3));
				_1e46beb29_check_type_var(_self_, _142921_v,jule::Trait<_1c978dc35_Lookup>(_self_, 3));
				_140039_dest.get()._field_statics = jule::alloc_for_append(_140039_dest.get()._field_statics,1);_140039_dest.get()._field_statics.__push(_142921_v);;
			}
			_iter_next_1cbd214e6:;
			++it;
			goto _iter_begin_1cbd214e6;
		}
		_iter_end_1cbd214e6:;
	};
	return _140073_ok;
}



inline void _1e46bab8b_impl_trait(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1e5c31431_Impl>& _144535_decl) {
	jule::Ptr<_1c97746ee_TypeKind> _144617_base_t = _1e46b405d_select_type(_self_, _144535_decl.get()._field_base);;
	if ((_144617_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1e43d8d0a_Trait> _145017_base = _1c9777c0d_trt(_144617_base_t.ptr());;
	if ((_145017_base == nullptr)) {
		_1e46aed6c_push_err(_self_.ptr(), _144535_decl.get()._field_base.get()._field_token,jule::Str("invalid base type for impl: @", 29),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_144617_base_t.ptr()))}));
		_1e46b018b_push_suggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c97746ee_TypeKind> _145717_dest_t = _1e46b405d_select_type(_self_, _144535_decl.get()._field_dest);;
	if ((_145717_dest_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1e43462ea_StructIns> _146117_dest_s = _1c9777999_strct(_145717_dest_t.ptr());;
	if ((_146117_dest_s == nullptr)) {
		_1e46aed6c_push_err(_self_.ptr(), _144535_decl.get()._field_dest.get()._field_token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_145717_dest_t.ptr()))}));
		_1e46b018b_push_suggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e43360cb_Struct> _146817_dest = _146117_dest_s.get()._field_decl;;
	if ((_20cda54d3_dir(_146817_dest.get()._field_token.get()._field_file.ptr()) != _20cda54d3_dir(_self_.get()._field_file.get()._field_file.ptr()))) {
		_1e46aed6c_push_err(_self_.ptr(), _144535_decl.get()._field_dest.get()._field_token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	_145017_base.get()._field_implemented = jule::alloc_for_append(_145017_base.get()._field_implemented,1);_145017_base.get()._field_implemented.__push(_146817_dest);;
	_146817_dest.get()._field_implements = jule::alloc_for_append(_146817_dest.get()._field_implements,1);_146817_dest.get()._field_implements.__push(_145017_base);;
	if ((_144535_decl.get()._field_statics.len() > 0LL)) {
		_1e46aed6c_push_err(_self_.ptr(), _144535_decl.get()._field_statics[0LL].get()._field_token,jule::Str("trait implementations cannot implement static field", 51),jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1e46ba54d_check_trait_impl_methods(_self_.ptr(), _145017_base,_144535_decl)))) {
			_case_begin_1cbd2c5ce:;
			{
				return;;
			}
		}
		else if ((!(_1e46ba916_impl_to_struct(_self_, _146817_dest,_144535_decl)))) {
			_case_begin_1cbd2c645:;
			{
				return;;
			}
		}
		_match_end_1cbd2c36a:;
	};
}



inline void _1e46bae11_impl_struct(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1e5c31431_Impl>& _149036_decl) {
	jule::Ptr<_1c97746ee_TypeKind> _149117_dest_t = _1e46b405d_select_type(_self_, _149036_decl.get()._field_dest);;
	if ((_149117_dest_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1e43462ea_StructIns> _149517_dest_s = _1c9777999_strct(_149117_dest_t.ptr());;
	if ((_149517_dest_s == nullptr)) {
		_1e46aed6c_push_err(_self_.ptr(), _149036_decl.get()._field_dest.get()._field_token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_149117_dest_t.ptr()))}));
		_1e46b018b_push_suggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e43360cb_Struct> _150217_dest = _149517_dest_s.get()._field_decl;;
	if ((_20cda54d3_dir(_150217_dest.get()._field_token.get()._field_file.ptr()) != _20cda54d3_dir(_self_.get()._field_file.get()._field_file.ptr()))) {
		_1e46aed6c_push_err(_self_.ptr(), _149036_decl.get()._field_dest.get()._field_token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1e46ba916_impl_to_struct(_self_, _150217_dest,_149036_decl)))) {
			_case_begin_1cbd2eceb:;
			{
				return;;
			}
		}
		_match_end_1cbd3222c:;
	};
}



inline void _1e46bb186_impl_impl(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1e5c31431_Impl>& _151534_decl) {
	{
		
		if (_1e5c3161d_is_trait_impl(_151534_decl.ptr())) {
			_case_begin_1cbd3378e:;
			{
				_1e46bab8b_impl_trait(_self_, _151534_decl);
			}
		}
		else if (_1e5c31750_is_struct_impl(_151534_decl.ptr())) {
			_case_begin_1cbd33816:;
			{
				_1e46bae11_impl_struct(_self_, _151534_decl);
			}
		}
		_match_end_1cbd3367e:;
	};
}



inline void _1e46bb4a5_check_var_decl(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1e46c6eb6_Var>& _152639_decl, jule::Trait<_1c978dc35_Lookup> _152655_l) {
	if (_20cda1e4c_is_ignore_ident(_152639_decl.get()._field_ident)) {
		_1e46aed6c_push_err(_self_.ptr(), _152639_decl.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_1e46c75d2_is_type_inferred(_152639_decl.ptr())) {
		if ((!(_1e46c736d_is_initialized(_152639_decl.ptr())))) {
			_1e46aed6c_push_err(_self_.ptr(), _152639_decl.get()._field_token,jule::Str("type inferred declarations should have a initializer expression", 63),jule::Slice<jule::Any>());
		};
	} else {
		_1e46b34ad_check_type(_self_, _152639_decl.get()._field_kind,_152655_l);
	};
	if ((_152639_decl.get()._field_constant && _152639_decl.get()._field_reference)) {
		_1e46aed6c_push_err(_self_.ptr(), _152639_decl.get()._field_token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>());
	};
	if ((!(_1e46c736d_is_initialized(_152639_decl.ptr())))) {
		if (_152639_decl.get()._field_constant) {
			_1e46aed6c_push_err(_self_.ptr(), _152639_decl.get()._field_token,jule::Str("missing expression for constant variable initialization", 55),jule::Slice<jule::Any>());
		};
		if (_152639_decl.get()._field_statically) {
			_1e46aed6c_push_err(_self_.ptr(), _152639_decl.get()._field_token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>());
		};
		if (_152639_decl.get()._field_reference) {
			_1e46aed6c_push_err(_self_.ptr(), _152639_decl.get()._field_token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>());
		};
	};
}



inline void _1e46bb72a_check_global_var_decl(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1e46c6eb6_Var>& _156046_decl) {
	if (_1e46b0994_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_156046_decl)),_156046_decl.get()._field_ident,_156046_decl.get()._field_cpp_linked)) {
		_1e46aed6c_push_err(_self_.ptr(), _156046_decl.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_156046_decl.get()._field_ident)}));
		_1e46b018b_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_156046_decl.get()._field_cpp_linked && _156046_decl.get()._field_constant)) {
		_1e46aed6c_push_err(_self_.ptr(), _156046_decl.get()._field_token,jule::Str("cpp linked variables cannot be constant", 39),jule::Slice<jule::Any>());
	};
	if ((((!(_156046_decl.get()._field_cpp_linked)) && (!(_156046_decl.get()._field_constant))) && (!(_156046_decl.get()._field_statically)))) {
		_1e46aed6c_push_err(_self_.ptr(), _156046_decl.get()._field_token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>());
		_1e46b018b_push_suggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>());
	};
	_1e46b0cb3_check_directives(_self_, _156046_decl.get()._field_directives,jule::Any(_156046_decl));
	_1e46bb4a5_check_var_decl(_self_, _156046_decl,jule::Trait<_1c978dc35_Lookup>(_self_, 3));
}



inline jule::Bool _1e46bb98e_check_global_decls(jule::Ptr<_1e46ac452_Sema> _self_) {
	jule::Bool _157940_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1cbd40922:;
		if (it != expr.end()) {
			jule::Ptr<_1e46c6eb6_Var> _158021_decl = *it;
			{
				_1e46bb72a_check_global_var_decl(_self_, _158021_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_157940_ok = false;
					return _157940_ok;
				};
			}
			_iter_next_1cbd40922:;
			++it;
			goto _iter_begin_1cbd40922;
		}
		_iter_end_1cbd40922:;
	};
	_157940_ok = true;
	return _157940_ok;
}



inline jule::Bool _1e46bbd68_check_struct_trait_impl(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1e43360cb_Struct>& _159148_strct, jule::Ptr<_1e43d8d0a_Trait>& _159169_trt) {
	jule::Bool _159184_ok = jule::Bool();
	{
		auto &expr = _159169_trt.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1cbd42b11:;
		if (it != expr.end()) {
			jule::Ptr<_1e4380576_Fn> _159221_tf = *it;
			{
				jule::Bool _159321_exist = false;;
				jule::Ptr<_1e4380576_Fn> _159421_sf = _1e433b71e_find_method(_159148_strct.ptr(), _159221_tf.get()._field_ident,_159221_tf.get()._field_statically);;
				jule::Ptr<_1e4383018_FnIns> _159517_tf_k = _1e46b60c6_get_trait_check_fn_kind(_self_, _159221_tf);;
				if ((_159421_sf != nullptr)) {
					jule::Ptr<_1e4383018_FnIns> _159725_sf_k = _1e46b60c6_get_trait_check_fn_kind(_self_, _159421_sf);;
					_159321_exist=(((_159517_tf_k.get()._field_decl.get()._field_public == _159725_sf_k.get()._field_decl.get()._field_public) && (_159517_tf_k.get()._field_decl.get()._field_ident == _159725_sf_k.get()._field_decl.get()._field_ident)) && _1e4383689_equals(_159517_tf_k, jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_159725_sf_k, 1)})));
				};
				if (_159321_exist) {
					jule::Ptr<_1e43620c4_Directive> _160321_d = _1c976e3db_find_directive(_159421_sf.get()._field_directives,jule::Str("deprecated", 10));;
					if ((_160321_d != nullptr)) {
						_1e46aed6c_push_err(_self_.ptr(), _160321_d.get()._field_tag,jule::Str("trait implementations cannot have deprecated code", 49),jule::Slice<jule::Any>());
					};
					_159184_ok=false;
				} else {
					;
					jule::Str _161025_s = _1e4384624_get_kind_str(_159517_tf_k.ptr(), true);;
					if (_159221_tf.get()._field_public) {
						(_161025_s).buffer.insert(0, (jule::Str("pub ", 4)));;
					};
					_1e46aed6c_push_err(_self_.ptr(), _159148_strct.get()._field_token,jule::Str("trait @ derived but not implemented define @", 44),jule::Slice<jule::Any>::make({jule::Any(_159169_trt.get()._field_ident),jule::Any(_161025_s)}));
					_159184_ok=false;
				};
			}
			_iter_next_1cbd42b11:;
			++it;
			goto _iter_begin_1cbd42b11;
		}
		_iter_end_1cbd42b11:;
	};
	return _159184_ok;
}



inline jule::Bool _1e46bc187_check_struct_impls(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1e43360cb_Struct>& _162143_s) {
	jule::Bool _162157_ok = jule::Bool();
	_162157_ok=true;
	{
		auto &expr = _162143_s.get()._field_implements;
		auto it = expr.begin();
		_iter_begin_1cbd4a234:;
		if (it != expr.end()) {
			jule::Ptr<_1e43d8d0a_Trait> _162321_trt = *it;
			{
				_162157_ok=(_1e46bbd68_check_struct_trait_impl(_self_, _162143_s,_162321_trt) && _162157_ok);
			}
			_iter_next_1cbd4a234:;
			++it;
			goto _iter_begin_1cbd4a234;
		}
		_iter_end_1cbd4a234:;
	};
	return _162157_ok;
}



inline jule::Bool _1e46bc495_check_struct_fields(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1e43360cb_Struct>& _162944_st) {
	jule::Bool _162959_ok = jule::Bool();
	_162959_ok=true;
	{
		auto &expr = _162944_st.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1cbd4bcb3:;
		if (it != expr.end()) {
			jule::Ptr<_1e43542c5_Field> _163121_f = *it;
			{
				_163121_f.get()._field_owner=_162944_st;
				{
					auto &expr = _162944_st.get()._field_fields;
					auto it = expr.begin();
					_iter_begin_1cbd4c786:;
					if (it != expr.end()) {
						jule::Ptr<_1e43542c5_Field> _163320_cf = *it;
						{
							if ((_163121_f == _163320_cf)) {
								goto _iter_end_1cbd4c786;
							} else if ((_163121_f.get()._field_ident == _163320_cf.get()._field_ident)) {
								_1e46aed6c_push_err(_self_.ptr(), _163121_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_163121_f.get()._field_ident)}));
								_1e46b018b_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								_162959_ok=false;
							};
						}
						_iter_next_1cbd4c786:;
						++it;
						goto _iter_begin_1cbd4c786;
					}
					_iter_end_1cbd4c786:;
				};
			}
			_iter_next_1cbd4bcb3:;
			++it;
			goto _iter_begin_1cbd4bcb3;
		}
		_iter_end_1cbd4bcb3:;
	};
	return _162959_ok;
}



inline void _1e46bc71a_check_struct_decl(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1e43360cb_Struct>& _164642_s) {
	if (_20cda1e4c_is_ignore_ident(_164642_s.get()._field_ident)) {
		_1e46aed6c_push_err(_self_.ptr(), _164642_s.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1e46b0994_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_164642_s)),_164642_s.get()._field_ident,_164642_s.get()._field_cpp_linked)) {
		_1e46aed6c_push_err(_self_.ptr(), _164642_s.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_164642_s.get()._field_ident)}));
		_1e46b018b_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1e46b0cb3_check_directives(_self_, _164642_s.get()._field_directives,jule::Any(_164642_s));
	_164642_s.get()._field_sema=_self_;
	{
		
		if ((!(_1e46b8bde_check_decl_generics(_self_.ptr(), _164642_s.get()._field_generics)))) {
			_case_begin_1cbd524c2:;
		}
		else if ((!(_1e46bc495_check_struct_fields(_self_, _164642_s)))) {
			_case_begin_1cbd526ae:;
		}
		else if ((!(_1e46bc187_check_struct_impls(_self_, _164642_s)))) {
			_case_begin_1cbd52736:;
		}
		_match_end_1cbd523e5:;
	};
}



inline jule::Bool _1e46bc97e_check_struct_decls(jule::Ptr<_1e46ac452_Sema> _self_) {
	jule::Bool _166540_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1cbd5443b:;
		if (it != expr.end()) {
			jule::Ptr<_1e43360cb_Struct> _166621_s = *it;
			{
				_1e46bc71a_check_struct_decl(_self_, _166621_s);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_166540_ok = false;
					return _166540_ok;
				};
			}
			_iter_next_1cbd5443b:;
			++it;
			goto _iter_begin_1cbd5443b;
		}
		_iter_end_1cbd5443b:;
	};
	_166540_ok = true;
	return _166540_ok;
}



inline void _1e46bcc04_check_fn_decl(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1e4380576_Fn>& _167838_f) {
	if (_20cda1e4c_is_ignore_ident(_167838_f.get()._field_ident)) {
		_1e46aed6c_push_err(_self_.ptr(), _167838_f.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_1e46b0cb3_check_directives(_self_, _167838_f.get()._field_directives,jule::Any(_167838_f));
	_167838_f.get()._field_sema=_self_;
	_1e46b9618_check_fn_decl_prototype(_self_, _167838_f);
	if (_1e46b0994_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_167838_f)),_167838_f.get()._field_ident,_167838_f.get()._field_cpp_linked)) {
		if ((_167838_f.get()._field_ident == jule::Str("init", 4))) {
			jule::Ptr<_1e4380576_Fn> _169021_init = _1e46adc39_find_fn(_self_.ptr(), jule::Str("init", 4),false);;
			if ((_169021_init != nullptr)) {
				return;;
			};
		};
		_1e46aed6c_push_err(_self_.ptr(), _167838_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_167838_f.get()._field_ident)}));
		_1e46b018b_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1e46bce68_check_fn_decls(jule::Ptr<_1e46ac452_Sema> _self_) {
	jule::Bool _170136_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1cbd5a9b4:;
		if (it != expr.end()) {
			jule::Ptr<_1e4380576_Fn> _170221_f = *it;
			{
				_1e46bcc04_check_fn_decl(_self_, _170221_f);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_170136_ok = false;
					return _170136_ok;
				};
			}
			_iter_next_1cbd5a9b4:;
			++it;
			goto _iter_begin_1cbd5a9b4;
		}
		_iter_end_1cbd5a9b4:;
	};
	_170136_ok = true;
	return _170136_ok;
}



inline void _1e46bd331_push_cycle_error(_1e46ac452_Sema* _self_, jule::Ptr<_1e43360cb_Struct>& _171332_st1, jule::Ptr<_1e43360cb_Struct>& _171347_st2, jule::Str& _171366_message) {
	;
	jule::Str _171613_refers_to = _20ca9019b_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_171332_st1.get()._field_ident),jule::Any(_171347_st2.get()._field_ident)}));;
	(_171366_message).buffer.insert(0, (((_20b9a0233_repeat(jule::Str(" ", 1),4LL) + _171613_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1e46bd782_check_cross_cycle(_1e46ac452_Sema* _self_, jule::Ptr<_1e43360cb_Struct>& _172033_st1, jule::Ptr<_1e43360cb_Struct>& _172048_st2, jule::Str& _172067_message) {
	{
		auto &expr = _172048_st2.get()._field_uses;
		auto it = expr.begin();
		_iter_begin_1cbd600d4:;
		if (it != expr.end()) {
			jule::Ptr<_1e43360cb_Struct> &_172116_u = *it;
			{
				if ((_172116_u == _172033_st1)) {
					_1e46bd331_push_cycle_error(&(*_self_), _172048_st2,_172116_u,_172067_message);
					return false;
				};
				if ((!(_1e46bd782_check_cross_cycle(&(*_self_), _172033_st1,_172116_u,_172067_message)))) {
					_1e46bd331_push_cycle_error(&(*_self_), _172048_st2,_172116_u,_172067_message);
					return false;
				};
			}
			_iter_next_1cbd600d4:;
			++it;
			goto _iter_begin_1cbd600d4;
		}
		_iter_end_1cbd600d4:;
	};
	return true;
}



inline jule::Bool _1e46bdc16_check_struct_derive_illegal_cycles(_1e46ac452_Sema* _self_, jule::Str _173653_derive, jule::Ptr<_1e43360cb_Struct>& _173667_st1, jule::Ptr<_1c97746ee_TypeKind>& _173686_k) {
	jule::Bool _1736102_ok = jule::Bool();
	jule::Ptr<_1e43360cb_Struct> _173717_st2 = _1c978b617_get_struct_from_kind(_173686_k);;
	if ((_173717_st2 == nullptr)) {
		_1736102_ok = true;
		return _1736102_ok;
	};
	if ((_173667_st1 == _173717_st2)) {
		_1e46aed6c_push_err(&(*_self_), _173667_st1.get()._field_token,jule::Str("illegal cycle for derive @, struct @ refers to itself", 53),jule::Slice<jule::Any>::make({jule::Any(_173653_derive),jule::Any(_173667_st1.get()._field_ident)}));
		_1736102_ok = false;
		return _1736102_ok;
	};
	jule::Str _174917_message = jule::Str();;
	if ((!(_1e46bd782_check_cross_cycle(&(*_self_), _173667_st1,_173717_st2,_174917_message)))) {
		jule::Str _175221_err_msg = _174917_message;;
		_174917_message=jule::Str();
		_1e46bd331_push_cycle_error(&(*_self_), _173667_st1,_173717_st2,_174917_message);
		_175221_err_msg=(_175221_err_msg + _174917_message);
		_1e46aed6c_push_err(&(*_self_), _173667_st1.get()._field_token,jule::Str("illegal cross cycle for derive @;\n@", 35),jule::Slice<jule::Any>::make({jule::Any(_173653_derive),jule::Any(_175221_err_msg)}));
		_1736102_ok = false;
		return _1736102_ok;
	};
	_1736102_ok = true;
	return _1736102_ok;
}



inline jule::Bool _1e46be046_check_struct_ins_derive_clone(_1e46ac452_Sema* _self_, jule::Ptr<_1e43462ea_StructIns> _176352_st) {
	jule::Bool _176370_ok = jule::Bool();
	if ((!(_1e433ab2a_is_derives(_176352_st.get()._field_decl.ptr(), jule::Str("Clone", 5))))) {
		_176370_ok = true;
		return _176370_ok;
	};
	{
		auto &expr = _176352_st.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1cbd67c79:;
		if (it != expr.end()) {
			jule::Ptr<_1e434014b_FieldIns> _176821_f = *it;
			{
				if ((_176821_f.get()._field_kind == nullptr)) {
					goto _iter_next_1cbd67c79;
				};
				if ((!(_1c97762d3_supports_cloning(_176821_f.get()._field_kind.ptr())))) {
					_1e46aed6c_push_err(&(*_self_), _176352_st.get()._field_decl.get()._field_token,jule::Str("type @ is not compatible to derive @", 36),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_176821_f.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					_176370_ok = false;
					return _176370_ok;
				};
				if ((!(_1e46bdc16_check_struct_derive_illegal_cycles(&(*_self_), jule::Str("Clone", 5),_176352_st.get()._field_decl,_176821_f.get()._field_kind)))) {
					_176370_ok = false;
					return _176370_ok;
				};
			}
			_iter_next_1cbd67c79:;
			++it;
			goto _iter_begin_1cbd67c79;
		}
		_iter_end_1cbd67c79:;
	};
	_176370_ok = true;
	return _176370_ok;
}



inline void _1e46be233_check_package_decls(jule::Ptr<_1e46ac452_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1cbd6b145:;
		if (it != expr.end()) {
			jule::Ptr<_1c9745c42_SymbolTable> _178921_f = *it;
			{
				_1e46ae9a4_set_current_file(_self_.ptr(), _178921_f);
				if ((!(_1e46b7b77_check_type_alias_decls(_self_)))) {
					return;;
				};
			}
			_iter_next_1cbd6b145:;
			++it;
			goto _iter_begin_1cbd6b145;
		}
		_iter_end_1cbd6b145:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1cbd6bc4a:;
		if (it != expr.end()) {
			jule::Ptr<_1c9745c42_SymbolTable> _179621_f = *it;
			{
				_1e46ae9a4_set_current_file(_self_.ptr(), _179621_f);
				if ((!(_1e46ba174_check_trait_decls(_self_)))) {
					return;;
				};
			}
			_iter_next_1cbd6bc4a:;
			++it;
			goto _iter_begin_1cbd6bc4a;
		}
		_iter_end_1cbd6bc4a:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1cbd6ca1a:;
		if (it != expr.end()) {
			jule::Ptr<_1c9745c42_SymbolTable> _180321_f = *it;
			{
				_1e46ae9a4_set_current_file(_self_.ptr(), _180321_f);
				if ((!(_1e46bb98e_check_global_decls(_self_)))) {
					return;;
				};
			}
			_iter_next_1cbd6ca1a:;
			++it;
			goto _iter_begin_1cbd6ca1a;
		}
		_iter_end_1cbd6ca1a:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1cbd6d81d:;
		if (it != expr.end()) {
			jule::Ptr<_1c9745c42_SymbolTable> _181021_f = *it;
			{
				_1e46ae9a4_set_current_file(_self_.ptr(), _181021_f);
				if ((!(_1e46bce68_check_fn_decls(_self_)))) {
					return;;
				};
			}
			_iter_next_1cbd6d81d:;
			++it;
			goto _iter_begin_1cbd6d81d;
		}
		_iter_end_1cbd6d81d:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1cbd6e5cc:;
		if (it != expr.end()) {
			jule::Ptr<_1c9745c42_SymbolTable> _181721_f = *it;
			{
				_1e46ae9a4_set_current_file(_self_.ptr(), _181721_f);
				if ((!(_1e46bc97e_check_struct_decls(_self_)))) {
					return;;
				};
			}
			_iter_next_1cbd6e5cc:;
			++it;
			goto _iter_begin_1cbd6e5cc;
		}
		_iter_end_1cbd6e5cc:;
	};
}



inline void _1e46be574_check_data_for_type_inference(_1e46ac452_Sema* _self_, jule::Ptr<_1c974abc0_Data>& _182549_d, jule::Ptr<_20cd9e6ec_Token>& _182560_err_token) {
	{
		
		if (_1c974b0aa_is_nil(_182549_d.ptr())) {
			_case_begin_1cbd71436:;
			{
				_1e46aed6c_push_err(&(*_self_), _182560_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>());
			}
		}
		else if (_1c974b31e_is_void(_182549_d.ptr())) {
			_case_begin_1cbd714ad:;
			{
				_1e46aed6c_push_err(&(*_self_), _182560_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>());
			}
		}
		else if (_182549_d.get()._field_kind.get()._field_variadic) {
			_case_begin_1cbd71535:;
			{
				_1e46aed6c_push_err(&(*_self_), _182560_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>());
			}
		}
		_match_end_1cbd71326:;
	};
}



inline void _1e46be80a_check_var(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1e46c6eb6_Var>& _183634_v) {
	if (_183634_v.get()._field_cpp_linked) {
		return;;
	};
	if (_1e46c75d2_is_type_inferred(_183634_v.ptr())) {
		_183634_v.get()._field_kind=jule::new_ptr<_1c977858d_TypeSymbol>(_1c977858d_TypeSymbol{._field_kind=_183634_v.get()._field_value.get()._field_data.get()._field_kind});
		_1e46be574_check_data_for_type_inference(_self_.ptr(), _183634_v.get()._field_value.get()._field_data,_183634_v.get()._field_value.get()._field_expr.get()._field_token);
	} else {
		jule::Ptr<_1c9780067_Arr> _184721_arr = _1c977725c_arr(_183634_v.get()._field_kind.get()._field_kind.ptr());;
		if ((_184721_arr != nullptr)) {
			if (_184721_arr.get()._field_auto) {
				jule::Ptr<_1c9780067_Arr> _185025_data_arr = _1c977725c_arr(_183634_v.get()._field_value.get()._field_data.get()._field_kind.ptr());;
				if ((_185025_data_arr != nullptr)) {
					_184721_arr.get()._field_n=_185025_data_arr.get()._field_n;
				};
			};
		};
		_1e46b516e_check_assign_type(_self_, _183634_v.get()._field_reference,_183634_v.get()._field_kind.get()._field_kind,_183634_v.get()._field_value.get()._field_data,_183634_v.get()._field_value.get()._field_expr.get()._field_token);
	};
	if ((_183634_v.get()._field_reference && (!(_1c978a98a_is_valid_for_ref(_183634_v.get()._field_kind.get()._field_kind))))) {
		_1e46aed6c_push_err(_self_.ptr(), _183634_v.get()._field_token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_183634_v.get()._field_kind.get()._field_kind.ptr()))}));
	};
	_1e46b6e73_check_validity_for_init_expr(_self_, _183634_v.get()._field_mutable,_183634_v.get()._field_reference,_183634_v.get()._field_kind.get()._field_kind,_183634_v.get()._field_value.get()._field_data,_183634_v.get()._field_value.get()._field_expr.get()._field_token);
	if (_183634_v.get()._field_constant) {
		if ((!(_1c974b583_is_const(_183634_v.get()._field_value.get()._field_data.ptr())))) {
			_1e46aed6c_push_err(_self_.ptr(), _183634_v.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		};
	} else {
		_183634_v.get()._field_value.get()._field_data.get()._field_constant=nullptr;
	};
	if ((_1c97781d6_tup(_183634_v.get()._field_kind.get()._field_kind.ptr()) != nullptr)) {
		_183634_v.get()._field_kind.get()._field_kind=nullptr;
	};
}



inline void _1e46beb29_check_type_var(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1e46c6eb6_Var>& _188539_decl, jule::Trait<_1c978dc35_Lookup> _188555_l) {
	if ((_188539_decl.get()._field_cpp_linked || (!(_1e46c736d_is_initialized(_188539_decl.ptr()))))) {
		return;;
	};
	jule::Ptr<_1c974c73d_Eval> _189017_eval = nullptr;;
	if ((_188539_decl.get()._field_kind != nullptr)) {
		_189017_eval=_1e46b44ae_evalpd(_self_, _188555_l,_188539_decl.get()._field_kind.get()._field_kind,_188539_decl);
	} else {
		_189017_eval=_1e46b44ae_evalpd(_self_, _188555_l,nullptr,_188539_decl);
	};
	_189017_eval.get()._field_immutable=(!(_188539_decl.get()._field_mutable));
	_188539_decl.get()._field_value.get()._field_data=_1c9766647_eval_expr(_189017_eval, _188539_decl.get()._field_value.get()._field_expr);
	if ((_188539_decl.get()._field_value.get()._field_data == nullptr)) {
		return;;
	};
	_1e46be80a_check_var(_self_, _188539_decl);
}



inline void _1e46bed05_check_global_types(jule::Ptr<_1e46ac452_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1cbd8159a:;
		if (it != expr.end()) {
			jule::Ptr<_1e46c6eb6_Var> _190721_decl = *it;
			{
				if (((_1e46c736d_is_initialized(_190721_decl.ptr()) && (_190721_decl.get()._field_value.get()._field_data == nullptr)) || (_1e46c75d2_is_type_inferred(_190721_decl.ptr()) && (_190721_decl.get()._field_kind.get()._field_kind == nullptr)))) {
					_1e46beb29_check_type_var(_self_, _190721_decl,jule::Trait<_1c978dc35_Lookup>(_self_, 3));
				};
			}
			_iter_next_1cbd8159a:;
			++it;
			goto _iter_begin_1cbd8159a;
		}
		_iter_end_1cbd8159a:;
	};
}



inline jule::Ptr<_1e4383018_FnIns> _1e46c01ac_ready_to_check_fn(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1e43462ea_StructIns>& _191742_s, jule::Ptr<_1e4380576_Fn>& _191762_f) {
	jule::Ptr<_1e4383018_FnIns> _191817_ins = _1e43819b7_instance(_191762_f);;
	if ((_191762_f.get()._field_instances.len() != 0LL)) {
		return _191817_ins;
	};
	_191817_ins.get()._field_owner=_191742_s;
	_1e4381cc5_append_instance(_191762_f.ptr(), _191817_ins);
	_1e46b63e5_reload_fn_ins_types(_self_, _191817_ins);
	_191817_ins.get()._field_reloaded=true;
	return _191817_ins;
}



inline void _1e46c04cb_check_type_method(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1e43462ea_StructIns>& _192942_s, jule::Ptr<_1e4380576_Fn>& _192962_f) {
	if (_192962_f.get()._field_cpp_linked) {
		return;;
	};
	if ((_192962_f.get()._field_generics.len() > 0LL)) {
		return;;
	};
	_1e46c01ac_ready_to_check_fn(_self_, _192942_s,_192962_f);
	{
		auto &expr = _192962_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1cbd873a3:;
		if (it != expr.end()) {
			jule::Ptr<_1e4383018_FnIns> _194021_ins = *it;
			{
				if ((_194021_ins.get()._field_scope.get()._field_stmts.len() > 0LL)) {
					goto _iter_next_1cbd873a3;
				};
				_1e46c2a3e_check_fn_ins(_self_, _194021_ins);
			}
			_iter_next_1cbd873a3:;
			++it;
			goto _iter_begin_1cbd873a3;
		}
		_iter_end_1cbd873a3:;
	};
}



inline jule::Ptr<_1e4383018_FnIns> _1e46c092c_check_struct_ins_op(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1e43462ea_StructIns>& _194944_s, jule::Ptr<_1e4380576_Fn>& _194964_f, jule::Fn<jule::Bool(jule::Ptr<_1e4380576_Fn>)> _194972_p) {
	if (((_194964_f == nullptr) || (_194964_f.get()._field_generics.len() > 0LL))) {
		return nullptr;
	};
	jule::Ptr<_1e4383018_FnIns> _195317_ins = _1e46c01ac_ready_to_check_fn(_self_, _194944_s,_194964_f);;
	if (_194972_p(_194964_f)) {
		return _195317_ins;
	};
	return nullptr;
}



inline jule::Bool _1e46c0c3a_check_fields(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1e43462ea_StructIns>& _196037_s) {
	jule::Bool _196054_ok = jule::Bool();
	_1c9782663_TypeChecker _196117_tc = _1c9782663_TypeChecker{._field_s=_196037_s.get()._field_decl.get()._field_sema, ._field_lookup=jule::Trait<_1c978dc35_Lookup>(_196037_s.get()._field_decl.get()._field_sema, 3), ._field_referencer=jule::new_ptr<_1c978191a_Referencer>(_1c978191a_Referencer{._field_ident=_196037_s.get()._field_decl.get()._field_ident, ._field_owner=jule::Any(_196037_s.get()._field_decl), }), ._field_refers=_196037_s.get()._field_refers, };;
	if ((_196037_s.get()._field_generics.len() > 0LL)) {
		_196117_tc._field_use_generics=jule::Slice<jule::Ptr<_1c97739b7_TypeAlias>>::alloc(0LL,_196037_s.get()._field_generics.len());
		{
			auto &expr = _196037_s.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1cbd8d909:;
			if (it != expr.end()) {
				jule::I64 _197318_i = it - expr.begin();
				jule::Ptr<_1c97746ee_TypeKind> _197325_g = *it;
				{
					_196117_tc._field_use_generics = jule::alloc_for_append(_196117_tc._field_use_generics,1);_196117_tc._field_use_generics.__push(jule::new_ptr<_1c97739b7_TypeAlias>(_1c97739b7_TypeAlias{._field_ident=_196037_s.get()._field_decl.get()._field_generics[_197318_i].get()._field_ident, ._field_kind=jule::new_ptr<_1c977858d_TypeSymbol>(_1c977858d_TypeSymbol{._field_kind=_197325_g}), }));;
				}
				_iter_next_1cbd8d909:;
				++it;
				_197318_i++;
				goto _iter_begin_1cbd8d909;
			}
			_iter_end_1cbd8d909:;
		};
	};
	jule::Ptr<_1c9745c42_SymbolTable> _198317_old_file = _self_.get()._field_file;;
	__JULE_DEFER({
		_1e46ae9a4_set_current_file(_self_.ptr(), _198317_old_file);
	});;
	if ((_self_.get()._field_file.get()._field_file != _196037_s.get()._field_decl.get()._field_token.get()._field_file)) {
		jule::Ptr<_1c9745c42_SymbolTable> _198721_file = _1e46abad3_find_file(_self_.get()._field_files,_196037_s.get()._field_decl.get()._field_token.get()._field_file);;
		if ((_198721_file != nullptr)) {
			_1e46ae9a4_set_current_file(_self_.ptr(), _198721_file);
		};
	};
	jule::Ptr<_1c974c73d_Eval> _199317_eval = _1e46b4b74_eval(_self_, jule::Trait<_1c978dc35_Lookup>(_self_, 3));;
	{
		auto &expr = _196037_s.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1cbd92c2c:;
		if (it != expr.end()) {
			jule::Ptr<_1e434014b_FieldIns> _199421_f = *it;
			{
				jule::Ptr<_1c97746ee_TypeKind> _199521_kind = _1c978900a_check_decl(&_196117_tc, _199421_f.get()._field_decl.get()._field_kind.get()._field_decl);;
				_196054_ok=((_199521_kind != nullptr) && _196054_ok);
				if ((_199521_kind == nullptr)) {
					if (((_self_ != _196037_s.get()._field_decl.get()._field_sema) && (_196037_s.get()._field_decl.get()._field_sema.get()._field_errors.len() > 0LL))) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_196037_s.get()._field_decl.get()._field_sema.get()._field_errors);
						_196037_s.get()._field_decl.get()._field_sema.get()._field_errors=nullptr;
					};
					goto _iter_next_1cbd92c2c;
				};
				_199421_f.get()._field_kind=_199521_kind;
				_196037_s.get()._field_mutable=(_196037_s.get()._field_mutable || ((!(_199421_f.get()._field_decl.get()._field_mutable)) && _1c9775a96_mutable(_199421_f.get()._field_kind.ptr())));
				_1e46be046_check_struct_ins_derive_clone(_self_.ptr(), _196037_s);
				if ((_199421_f.get()._field_decl.get()._field_default == nullptr)) {
					goto _iter_next_1cbd92c2c;
				};
				_199317_eval.get()._field_prefix=_199421_f.get()._field_kind;
				_199317_eval.get()._field_field=_199421_f;
				_199421_f.get()._field_default=_1c9766647_eval_expr(_199317_eval, _199421_f.get()._field_decl.get()._field_default);
				if ((_199421_f.get()._field_default == nullptr)) {
					goto _iter_next_1cbd92c2c;
				};
				;
				_1e46b516e_check_assign_type(_self_, false,_199421_f.get()._field_kind,_199421_f.get()._field_default,_199421_f.get()._field_decl.get()._field_default.get()._field_token);
			}
			_iter_next_1cbd92c2c:;
			++it;
			goto _iter_begin_1cbd92c2c;
		}
		_iter_end_1cbd92c2c:;
	};
	return _196054_ok;
}



inline void _1e46c0eb0_precheck_struct_ins(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1e43462ea_StructIns>& _202844_s) {
	_1e46c0c3a_check_fields(_self_, _202844_s);
}



inline void _1e46c1235_check_struct_ins(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1e43462ea_StructIns>& _203241_s) {
	{
		auto &expr = _203241_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1cbd9a84a:;
		if (it != expr.end()) {
			jule::Ptr<_1e4380576_Fn> _203321_f = *it;
			{
				_1e46c04cb_check_type_method(_self_, _203241_s,_203321_f);
			}
			_iter_next_1cbd9a84a:;
			++it;
			goto _iter_begin_1cbd9a84a;
		}
		_iter_end_1cbd9a84a:;
	};
}



inline void _1e46c14aa_check_type_struct(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1e43360cb_Struct>& _203842_s) {
	if (_203842_s.get()._field_cpp_linked) {
		return;;
	};
	if ((_203842_s.get()._field_generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _203842_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1cbd9c709:;
		if (it != expr.end()) {
			jule::Ptr<_1e43462ea_StructIns> _205121_ins = *it;
			{
				_1e46c1235_check_struct_ins(_self_, _205121_ins);
			}
			_iter_next_1cbd9c709:;
			++it;
			goto _iter_begin_1cbd9c709;
		}
		_iter_end_1cbd9c709:;
	};
}



inline void _1e46c1686_check_struct_types(jule::Ptr<_1e46ac452_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1cbd9d870:;
		if (it != expr.end()) {
			jule::Ptr<_1e43360cb_Struct> _205721_s = *it;
			{
				_1e46c14aa_check_type_struct(_self_, _205721_s);
			}
			_iter_next_1cbd9d870:;
			++it;
			goto _iter_begin_1cbd9d870;
		}
		_iter_end_1cbd9d870:;
	};
}



inline void _1e46c192d_check_struct_ins_operators(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1e43462ea_StructIns> _206250_s) {
	{
		auto &expr = _206250_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1cbd9ec5b:;
		if (it != expr.end()) {
			jule::Ptr<_1e4380576_Fn> _206321_m = *it;
			{
				{
					auto &_match_expr{ _206321_m.get()._field_ident };
					
					if (_match_expr == jule::Str("eq", 2)) {
						_case_begin_1cbda05ec:;
						{
							_206250_s.get()._field_operators._field_eq=_1e46c092c_check_struct_ins_op(_self_, _206250_s,_206321_m,jule::Fn<jule::Bool(jule::Ptr<_1e4380576_Fn>)>([=](jule::Ptr<_1e4380576_Fn> _206668_f) mutable -> jule::Bool {
								return static__1e46c89bd_eq(_206668_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("gt", 2)) {
						_case_begin_1cbda0344:;
						{
							_206250_s.get()._field_operators._field_gt=_1e46c092c_check_struct_ins_op(_self_, _206250_s,_206321_m,jule::Fn<jule::Bool(jule::Ptr<_1e4380576_Fn>)>([=](jule::Ptr<_1e4380576_Fn> _206868_f) mutable -> jule::Bool {
								return static__1e46c8c65_gt(_206868_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("gt_eq", 5)) {
						_case_begin_1cbda0872:;
						{
							_206250_s.get()._field_operators._field_gt_eq=_1e46c092c_check_struct_ins_op(_self_, _206250_s,_206321_m,jule::Fn<jule::Bool(jule::Ptr<_1e4380576_Fn>)>([=](jule::Ptr<_1e4380576_Fn> _207071_f) mutable -> jule::Bool {
								return static__1e46c900c_gt_eq(_207071_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("lt", 2)) {
						_case_begin_1cbda08e9:;
						{
							_206250_s.get()._field_operators._field_lt=_1e46c092c_check_struct_ins_op(_self_, _206250_s,_206321_m,jule::Fn<jule::Bool(jule::Ptr<_1e4380576_Fn>)>([=](jule::Ptr<_1e4380576_Fn> _207268_f) mutable -> jule::Bool {
								return static__1e46c92a4_lt(_207268_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("lt_eq", 5)) {
						_case_begin_1cbda0971:;
						{
							_206250_s.get()._field_operators._field_lt_eq=_1e46c092c_check_struct_ins_op(_self_, _206250_s,_206321_m,jule::Fn<jule::Bool(jule::Ptr<_1e4380576_Fn>)>([=](jule::Ptr<_1e4380576_Fn> _207471_f) mutable -> jule::Bool {
								return static__1e46c954b_lt_eq(_207471_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shl", 3)) {
						_case_begin_1cbda09e8:;
						{
							_206250_s.get()._field_operators._field_shl=_1e46c092c_check_struct_ins_op(_self_, _206250_s,_206321_m,jule::Fn<jule::Bool(jule::Ptr<_1e4380576_Fn>)>([=](jule::Ptr<_1e4380576_Fn> _207669_f) mutable -> jule::Bool {
								return static__1e46c9b34_shl(_207669_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shr", 3)) {
						_case_begin_1cbda0a70:;
						{
							_206250_s.get()._field_operators._field_shr=_1e46c092c_check_struct_ins_op(_self_, _206250_s,_206321_m,jule::Fn<jule::Bool(jule::Ptr<_1e4380576_Fn>)>([=](jule::Ptr<_1e4380576_Fn> _207869_f) mutable -> jule::Bool {
								return static__1e46c9dcb_shr(_207869_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("add", 3)) {
						_case_begin_1cbda0ae7:;
						{
							_206250_s.get()._field_operators._field_add=_1e46c092c_check_struct_ins_op(_self_, _206250_s,_206321_m,jule::Fn<jule::Bool(jule::Ptr<_1e4380576_Fn>)>([=](jule::Ptr<_1e4380576_Fn> _208069_f) mutable -> jule::Bool {
								return static__1e46ca173_add(_208069_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("sub", 3)) {
						_case_begin_1cbda0b6e:;
						{
							_206250_s.get()._field_operators._field_sub=_1e46c092c_check_struct_ins_op(_self_, _206250_s,_206321_m,jule::Fn<jule::Bool(jule::Ptr<_1e4380576_Fn>)>([=](jule::Ptr<_1e4380576_Fn> _208269_f) mutable -> jule::Bool {
								return static__1e46ca41a_sub(_208269_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("div", 3)) {
						_case_begin_1cbda0be6:;
						{
							_206250_s.get()._field_operators._field_div=_1e46c092c_check_struct_ins_op(_self_, _206250_s,_206321_m,jule::Fn<jule::Bool(jule::Ptr<_1e4380576_Fn>)>([=](jule::Ptr<_1e4380576_Fn> _208469_f) mutable -> jule::Bool {
								return static__1e46ca6b2_div(_208469_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mul", 3)) {
						_case_begin_1cbda0c6d:;
						{
							_206250_s.get()._field_operators._field_mul=_1e46c092c_check_struct_ins_op(_self_, _206250_s,_206321_m,jule::Fn<jule::Bool(jule::Ptr<_1e4380576_Fn>)>([=](jule::Ptr<_1e4380576_Fn> _208669_f) mutable -> jule::Bool {
								return static__1e46ca959_mul(_208669_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mod", 3)) {
						_case_begin_1cbda0ce5:;
						{
							_206250_s.get()._field_operators._field_mod=_1e46c092c_check_struct_ins_op(_self_, _206250_s,_206321_m,jule::Fn<jule::Bool(jule::Ptr<_1e4380576_Fn>)>([=](jule::Ptr<_1e4380576_Fn> _208869_f) mutable -> jule::Bool {
								return static__1e46cac01_mod(_208869_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_and", 7)) {
						_case_begin_1cbda0d6c:;
						{
							_206250_s.get()._field_operators._field_bit_and=_1e46c092c_check_struct_ins_op(_self_, _206250_s,_206321_m,jule::Fn<jule::Bool(jule::Ptr<_1e4380576_Fn>)>([=](jule::Ptr<_1e4380576_Fn> _209073_f) mutable -> jule::Bool {
								return static__1e46cae98_bit_and(_209073_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_or", 6)) {
						_case_begin_1cbda0de4:;
						{
							_206250_s.get()._field_operators._field_bit_or=_1e46c092c_check_struct_ins_op(_self_, _206250_s,_206321_m,jule::Fn<jule::Bool(jule::Ptr<_1e4380576_Fn>)>([=](jule::Ptr<_1e4380576_Fn> _209272_f) mutable -> jule::Bool {
								return static__1e46cb240_bit_or(_209272_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_xor", 7)) {
						_case_begin_1cbda0e6b:;
						{
							_206250_s.get()._field_operators._field_bit_xor=_1e46c092c_check_struct_ins_op(_self_, _206250_s,_206321_m,jule::Fn<jule::Bool(jule::Ptr<_1e4380576_Fn>)>([=](jule::Ptr<_1e4380576_Fn> _209473_f) mutable -> jule::Bool {
								return static__1e46cb4d7_bit_xor(_209473_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("neg", 3)) {
						_case_begin_1cbda0ee3:;
						{
							_206250_s.get()._field_operators._field_neg=_1e46c092c_check_struct_ins_op(_self_, _206250_s,_206321_m,jule::Fn<jule::Bool(jule::Ptr<_1e4380576_Fn>)>([=](jule::Ptr<_1e4380576_Fn> _209669_f) mutable -> jule::Bool {
								return static__1e46cbac0_neg(_209669_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("pos", 3)) {
						_case_begin_1cbda106a:;
						{
							_206250_s.get()._field_operators._field_pos=_1e46c092c_check_struct_ins_op(_self_, _206250_s,_206321_m,jule::Fn<jule::Bool(jule::Ptr<_1e4380576_Fn>)>([=](jule::Ptr<_1e4380576_Fn> _209869_f) mutable -> jule::Bool {
								return static__1e46cbd67_pos(_209869_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_not", 7)) {
						_case_begin_1cbda10e2:;
						{
							_206250_s.get()._field_operators._field_bit_not=_1e46c092c_check_struct_ins_op(_self_, _206250_s,_206321_m,jule::Fn<jule::Bool(jule::Ptr<_1e4380576_Fn>)>([=](jule::Ptr<_1e4380576_Fn> _210073_f) mutable -> jule::Bool {
								return static__1e46cc10e_bit_not(_210073_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("add_assign", 10)) {
						_case_begin_1cbda1169:;
						{
							_206250_s.get()._field_operators._field_add_assign=_1e46c092c_check_struct_ins_op(_self_, _206250_s,_206321_m,jule::Fn<jule::Bool(jule::Ptr<_1e4380576_Fn>)>([=](jule::Ptr<_1e4380576_Fn> _210276_f) mutable -> jule::Bool {
								return static__1e46cc6e7_add_assign(_210276_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("sub_assign", 10)) {
						_case_begin_1cbda11e1:;
						{
							_206250_s.get()._field_operators._field_sub_assign=_1e46c092c_check_struct_ins_op(_self_, _206250_s,_206321_m,jule::Fn<jule::Bool(jule::Ptr<_1e4380576_Fn>)>([=](jule::Ptr<_1e4380576_Fn> _210476_f) mutable -> jule::Bool {
								return static__1e46cc98e_sub_assign(_210476_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("div_assign", 10)) {
						_case_begin_1cbda1268:;
						{
							_206250_s.get()._field_operators._field_div_assign=_1e46c092c_check_struct_ins_op(_self_, _206250_s,_206321_m,jule::Fn<jule::Bool(jule::Ptr<_1e4380576_Fn>)>([=](jule::Ptr<_1e4380576_Fn> _210676_f) mutable -> jule::Bool {
								return static__1e46ccc36_div_assign(_210676_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mul_assign", 10)) {
						_case_begin_1cbda12e0:;
						{
							_206250_s.get()._field_operators._field_mul_assign=_1e46c092c_check_struct_ins_op(_self_, _206250_s,_206321_m,jule::Fn<jule::Bool(jule::Ptr<_1e4380576_Fn>)>([=](jule::Ptr<_1e4380576_Fn> _210876_f) mutable -> jule::Bool {
								return static__1e46ccecd_mul_assign(_210876_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mod_assign", 10)) {
						_case_begin_1cbda1367:;
						{
							_206250_s.get()._field_operators._field_mod_assign=_1e46c092c_check_struct_ins_op(_self_, _206250_s,_206321_m,jule::Fn<jule::Bool(jule::Ptr<_1e4380576_Fn>)>([=](jule::Ptr<_1e4380576_Fn> _211076_f) mutable -> jule::Bool {
								return static__1e46cd275_mod_assign(_211076_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shl_assign", 10)) {
						_case_begin_1cbda13de:;
						{
							_206250_s.get()._field_operators._field_shl_assign=_1e46c092c_check_struct_ins_op(_self_, _206250_s,_206321_m,jule::Fn<jule::Bool(jule::Ptr<_1e4380576_Fn>)>([=](jule::Ptr<_1e4380576_Fn> _211276_f) mutable -> jule::Bool {
								return static__1e46cd51c_shl_assign(_211276_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shr_assign", 10)) {
						_case_begin_1cbda1466:;
						{
							_206250_s.get()._field_operators._field_shr_assign=_1e46c092c_check_struct_ins_op(_self_, _206250_s,_206321_m,jule::Fn<jule::Bool(jule::Ptr<_1e4380576_Fn>)>([=](jule::Ptr<_1e4380576_Fn> _211476_f) mutable -> jule::Bool {
								return static__1e46cd7b4_shr_assign(_211476_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_or_assign", 13)) {
						_case_begin_1cbda14dd:;
						{
							_206250_s.get()._field_operators._field_bit_or_assign=_1e46c092c_check_struct_ins_op(_self_, _206250_s,_206321_m,jule::Fn<jule::Bool(jule::Ptr<_1e4380576_Fn>)>([=](jule::Ptr<_1e4380576_Fn> _211679_f) mutable -> jule::Bool {
								return static__1e46cda5b_bit_or_assign(_211679_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_and_assign", 14)) {
						_case_begin_1cbda1565:;
						{
							_206250_s.get()._field_operators._field_bit_and_assign=_1e46c092c_check_struct_ins_op(_self_, _206250_s,_206321_m,jule::Fn<jule::Bool(jule::Ptr<_1e4380576_Fn>)>([=](jule::Ptr<_1e4380576_Fn> _211880_f) mutable -> jule::Bool {
								return static__1e46cdd03_bit_and_assign(_211880_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_xor_assign", 14)) {
						_case_begin_1cbda15dc:;
						{
							_206250_s.get()._field_operators._field_bit_xor_assign=_1e46c092c_check_struct_ins_op(_self_, _206250_s,_206321_m,jule::Fn<jule::Bool(jule::Ptr<_1e4380576_Fn>)>([=](jule::Ptr<_1e4380576_Fn> _212080_f) mutable -> jule::Bool {
								return static__1e46ce09a_bit_xor_assign(_212080_f);
							}));
						}
					}
					_match_end_1cbda0531:;
				};
			}
			_iter_next_1cbd9ec5b:;
			++it;
			goto _iter_begin_1cbd9ec5b;
		}
		_iter_end_1cbd9ec5b:;
	};
}



inline void _1e46c1bd6_check_type_struct_operators(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1e43360cb_Struct>& _212552_s) {
	if (_212552_s.get()._field_cpp_linked) {
		return;;
	};
	if ((_212552_s.get()._field_generics.len() > 0LL)) {
		return;;
	};
	if ((_212552_s.get()._field_instances.len() == 0LL)) {
		jule::Ptr<_1e43462ea_StructIns> _213621_ins = _1e4339101_instance(_212552_s);;
		_213621_ins.get()._field_checked=true;
		_1e433a6b8_append_instance(_212552_s.ptr(), _213621_ins);
		_1e46c0eb0_precheck_struct_ins(_self_, _213621_ins);
	};
	_1e46c192d_check_struct_ins_operators(_self_, _212552_s.get()._field_instances[0LL]);
}



inline void _1e46c1de5_check_struct_types_operators(jule::Ptr<_1e46ac452_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1cbdc1662:;
		if (it != expr.end()) {
			jule::Ptr<_1e43360cb_Struct> _214621_s = *it;
			{
				_1e46c1bd6_check_type_struct_operators(_self_, _214621_s);
			}
			_iter_next_1cbdc1662:;
			++it;
			goto _iter_begin_1cbdc1662;
		}
		_iter_end_1cbdc1662:;
	};
}



inline void _1e46c217b_check_rets(_1e46ac452_Sema* _self_, jule::Ptr<_1e4383018_FnIns>& _215134_f) {
	if (_1e43807c9_is_void(_215134_f.get()._field_decl.ptr())) {
		return;;
	};
	_1e46c4326_MissingRetChecker _215513_mrc = static__1e46c46de_new();;
	jule::Bool _215613_ok = _1e46c5701_check(&_215513_mrc, _215134_f.get()._field_scope);;
	if ((!(_215613_ok))) {
		_1e46aed6c_push_err(&(*_self_), _215134_f.get()._field_decl.get()._field_token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>());
	};
}



inline void _1e46c249a_check_fn_ins_sc(_1e46ac452_Sema* _self_, jule::Ptr<_1e4383018_FnIns>& _216239_f, jule::Ptr<_1e468ce7c_ScopeChecker>& _216255_sc) {
	if (_216239_f.get()._field_decl.get()._field_cpp_linked) {
		return;;
	};
	_1e46ab1ed_append_ret_vars(_216255_sc.get()._field_table.get()._field_vars,_216239_f);
	_1e46ab4a6_append_param_vars(_216255_sc.get()._field_table.get()._field_vars,_216239_f);
	_1e46ab781_append_generic_type_aliases(_216255_sc.get()._field_table.get()._field_type_aliases,_216239_f);
	_1e469cec0_check(_216255_sc, _216239_f.get()._field_decl.get()._field_scope,_216239_f.get()._field_scope);
	if ((!(_1e46907cb_stopped(_216255_sc.ptr())))) {
		_1e46c217b_check_rets(&(*_self_), _216239_f);
	};
}



inline void _1e46c27b9_check_fn_ins_caller(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1e4383018_FnIns>& _217944_f, jule::Ptr<_20cd9e6ec_Token> _217959_caller) {
	if (_217944_f.get()._field_decl.get()._field_cpp_linked) {
		return;;
	};
	jule::Ptr<_1c9745c42_SymbolTable> _218417_old = _217944_f.get()._field_decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1e46ae9a4_set_current_file(_217944_f.get()._field_decl.get()._field_sema.ptr(), _218417_old);
	});;
	jule::Ptr<_1c9745c42_SymbolTable> _218617_file = _1e46abad3_find_file(_217944_f.get()._field_decl.get()._field_sema.get()._field_files,_217944_f.get()._field_decl.get()._field_token.get()._field_file);;
	if ((_218617_file != nullptr)) {
		_1e46ae9a4_set_current_file(_217944_f.get()._field_decl.get()._field_sema.ptr(), _218617_file);
	};
	jule::Ptr<_1e468ce7c_ScopeChecker> _219117_sc = _1e4675151_new_scope_checker(_217944_f.get()._field_decl.get()._field_sema,_217944_f);;
	_219117_sc.get()._field_called_from=_217959_caller;
	_1e46c249a_check_fn_ins_sc(_self_.ptr(), _217944_f,_219117_sc);
	if ((_217944_f.get()._field_decl.get()._field_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_217944_f.get()._field_decl.get()._field_sema.get()._field_errors);
		_217944_f.get()._field_decl.get()._field_sema.get()._field_errors=nullptr;
	};
}



inline void _1e46c2a3e_check_fn_ins(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1e4383018_FnIns>& _220137_f) {
	_1e46c27b9_check_fn_ins_caller(_self_, _220137_f,nullptr);
}



inline void _1e46c2cb4_check_type_fn(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1e4380576_Fn>& _220538_f) {
	if (_220538_f.get()._field_cpp_linked) {
		return;;
	};
	if ((_220538_f.get()._field_generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _220538_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1cbdd516a:;
		if (it != expr.end()) {
			jule::Ptr<_1e4383018_FnIns> _221521_ins = *it;
			{
				_1e46c2a3e_check_fn_ins(_self_, _221521_ins);
			}
			_iter_next_1cbdd516a:;
			++it;
			goto _iter_begin_1cbdd516a;
		}
		_iter_end_1cbdd516a:;
	};
}



inline void _1e46c3039_check_test_fn(_1e46ac452_Sema* _self_, jule::Ptr<_1e4383018_FnIns>& _222037_f) {
	if (_222037_f.get()._field_decl.get()._field_public) {
		_1e46aed6c_push_err(&(*_self_), _222037_f.get()._field_decl.get()._field_token,jule::Str("test function cannot be public", 30),jule::Slice<jule::Any>());
		_1e46b018b_push_suggestion(&(*_self_), jule::Str("remove \"pub\" modifier", 21),jule::Slice<jule::Any>());
		return;;
	};
	if (((_222037_f.get()._field_params.len() != 1LL) || (_222037_f.get()._field_result != nullptr))) {
		_1e46aed6c_push_err(&(*_self_), _222037_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1e46b018b_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c977c460_Sptr> _223317_sptr = _1c9776a20_sptr(_222037_f.get()._field_params[0LL].get()._field_kind.ptr());;
	if ((_223317_sptr == nullptr)) {
		_1e46aed6c_push_err(&(*_self_), _222037_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1e46b018b_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e43462ea_StructIns> _224013_s = _1c9777999_strct(_223317_sptr.get()._field_elem.ptr());;
	if (((_224013_s == nullptr) || (!(_1e46a96d5_is_std_package(_224013_s.get()._field_decl.get()._field_token.get()._field_file.get()._field_path,jule::Str("testing", 7)))))) {
		_1e46aed6c_push_err(&(*_self_), _222037_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1e46b018b_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1e46c32ae_precheck_type_fn(jule::Ptr<_1e46ac452_Sema> _self_, jule::Ptr<_1e4380576_Fn>& _224841_f) {
	if (_224841_f.get()._field_cpp_linked) {
		return;;
	};
	if ((_224841_f.get()._field_generics.len() > 0LL)) {
		return;;
	};
	if ((_224841_f.get()._field_instances.len() == 0LL)) {
		jule::Ptr<_1e4383018_FnIns> _225921_ins = _1e43819b7_instance(_224841_f);;
		_224841_f.get()._field_instances = jule::alloc_for_append(_224841_f.get()._field_instances,1);_224841_f.get()._field_instances.__push(_225921_ins);;
		_1e46b63e5_reload_fn_ins_types(_self_, _225921_ins);
		_225921_ins.get()._field_reloaded=true;
		if (_1c978a160_has_directive(_224841_f.get()._field_directives,jule::Str("test", 4))) {
			_1e46c3039_check_test_fn(_self_.ptr(), _225921_ins);
		};
	};
}



inline void _1e46c348a_precheck_fn_types(jule::Ptr<_1e46ac452_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_traits;
		auto it = expr.begin();
		_iter_begin_1cbde18d5:;
		if (it != expr.end()) {
			jule::Ptr<_1e43d8d0a_Trait> _227221_decl = *it;
			{
				{
					auto &expr = _227221_decl.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1cbde2199:;
					if (it != expr.end()) {
						jule::Ptr<_1e4380576_Fn> _227325_m = *it;
						{
							_1e46c32ae_precheck_type_fn(_self_, _227325_m);
						}
						_iter_next_1cbde2199:;
						++it;
						goto _iter_begin_1cbde2199;
					}
					_iter_end_1cbde2199:;
				};
			}
			_iter_next_1cbde18d5:;
			++it;
			goto _iter_begin_1cbde18d5;
		}
		_iter_end_1cbde18d5:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1cbde1d8b:;
		if (it != expr.end()) {
			jule::Ptr<_1e4380576_Fn> _227721_decl = *it;
			{
				_1e46c32ae_precheck_type_fn(_self_, _227721_decl);
			}
			_iter_next_1cbde1d8b:;
			++it;
			goto _iter_begin_1cbde1d8b;
		}
		_iter_end_1cbde1d8b:;
	};
}



inline void _1e46c3666_check_fn_types(jule::Ptr<_1e46ac452_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1cbde3970:;
		if (it != expr.end()) {
			jule::Ptr<_1e4380576_Fn> _228421_decl = *it;
			{
				_1e46c2cb4_check_type_fn(_self_, _228421_decl);
			}
			_iter_next_1cbde3970:;
			++it;
			goto _iter_begin_1cbde3970;
		}
		_iter_end_1cbde3970:;
	};
}



inline void _1e46c3842_check_package_types(jule::Ptr<_1e46ac452_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1cbde4a5e:;
		if (it != expr.end()) {
			jule::Ptr<_1c9745c42_SymbolTable> _229221_f = *it;
			{
				_1e46ae9a4_set_current_file(_self_.ptr(), _229221_f);
				_1e46bed05_check_global_types(_self_);
			}
			_iter_next_1cbde4a5e:;
			++it;
			goto _iter_begin_1cbde4a5e;
		}
		_iter_end_1cbde4a5e:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1cbde5730:;
		if (it != expr.end()) {
			jule::Ptr<_1c9745c42_SymbolTable> _229721_f = *it;
			{
				_1e46ae9a4_set_current_file(_self_.ptr(), _229721_f);
				_1e46c348a_precheck_fn_types(_self_);
			}
			_iter_next_1cbde5730:;
			++it;
			goto _iter_begin_1cbde5730;
		}
		_iter_end_1cbde5730:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1cbde5aa4:;
		if (it != expr.end()) {
			jule::Ptr<_1c9745c42_SymbolTable> _230421_f = *it;
			{
				_1e46ae9a4_set_current_file(_self_.ptr(), _230421_f);
				_1e46c1de5_check_struct_types_operators(_self_);
			}
			_iter_next_1cbde5aa4:;
			++it;
			goto _iter_begin_1cbde5aa4;
		}
		_iter_end_1cbde5aa4:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1cbde670e:;
		if (it != expr.end()) {
			jule::Ptr<_1c9745c42_SymbolTable> _230821_f = *it;
			{
				_1e46ae9a4_set_current_file(_self_.ptr(), _230821_f);
				_1e46c1686_check_struct_types(_self_);
			}
			_iter_next_1cbde670e:;
			++it;
			goto _iter_begin_1cbde670e;
		}
		_iter_end_1cbde670e:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1cbde7347:;
		if (it != expr.end()) {
			jule::Ptr<_1c9745c42_SymbolTable> _231321_f = *it;
			{
				_1e46ae9a4_set_current_file(_self_.ptr(), _231321_f);
				_1e46c3666_check_fn_types(_self_);
			}
			_iter_next_1cbde7347:;
			++it;
			goto _iter_begin_1cbde7347;
		}
		_iter_end_1cbde7347:;
	};
}



inline void _1e46c3a1d_set_file_sema_fields(jule::Ptr<_1e46ac452_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1cbde9091:;
		if (it != expr.end()) {
			jule::Ptr<_1e4380576_Fn> _232021_f = *it;
			{
				_232021_f.get()._field_sema=_self_;
			}
			_iter_next_1cbde9091:;
			++it;
			goto _iter_begin_1cbde9091;
		}
		_iter_end_1cbde9091:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1cbde9459:;
		if (it != expr.end()) {
			jule::Ptr<_1e43360cb_Struct> _232421_st = *it;
			{
				_232421_st.get()._field_sema=_self_;
			}
			_iter_next_1cbde9459:;
			++it;
			goto _iter_begin_1cbde9459;
		}
		_iter_end_1cbde9459:;
	};
}



inline void _1e46c3be9_set_sema_fields(jule::Ptr<_1e46ac452_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1cbdea702:;
		if (it != expr.end()) {
			jule::Ptr<_1c9745c42_SymbolTable> _233021_file = *it;
			{
				_1e46ae9a4_set_current_file(_self_.ptr(), _233021_file);
				_1e46c3a1d_set_file_sema_fields(_self_);
			}
			_iter_next_1cbdea702:;
			++it;
			goto _iter_begin_1cbdea702;
		}
		_iter_end_1cbdea702:;
	};
}



inline void _1e46c3e6e_check(jule::Ptr<_1e46ac452_Sema> _self_, jule::Slice<jule::Ptr<_1c9745c42_SymbolTable>>& _233630_files) {
	_self_.get()._field_files=_233630_files;
	_1e46b2622_check_imports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1e46b2ba5_check_enums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1e46c3be9_set_sema_fields(_self_);
	_1e46b29c9_impl_impls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1e46be233_check_package_decls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1e46c3842_check_package_types(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1e46ac452_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline _1e46c4326_MissingRetChecker static__1e46c46de_new(void) {
	return _1e46c4326_MissingRetChecker{._field_breaked=jule::Slice<jule::U64>::alloc(16LL), };
}



inline jule::Bool _1e46c49b9_check_conditional(_1e46c4326_MissingRetChecker* _self_, jule::Ptr<_1e4686daa_Conditional> _238236_c) {
	{
		auto &expr = _238236_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1cbe0041b:;
		if (it != expr.end()) {
			jule::Ptr<_1e46866c3_If> _238321_elif = *it;
			{
				if ((_238321_elif == nullptr)) {
					return false;
				};
				if ((!(_1e46c53e3_check_scope(&(*_self_), _238321_elif.get()._field_scope)))) {
					return false;
				};
			}
			_iter_next_1cbe0041b:;
			++it;
			goto _iter_begin_1cbe0041b;
		}
		_iter_end_1cbe0041b:;
	};
	return ((_238236_c.get()._field_default != nullptr) && _1e46c53e3_check_scope(&(*_self_), _238236_c.get()._field_default.get()._field_scope));
}



inline jule::Bool _1e46c4cc7_check_match(_1e46c4326_MissingRetChecker* _self_, jule::Ptr<_1e468a023_Match> _239430_m) {
	{
		auto &expr = _239430_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1cbe02d58:;
		if (it != expr.end()) {
			jule::Ptr<_1e468a9d5_Case> _239521_c = *it;
			{
				if ((_239521_c == nullptr)) {
					return false;
				};
				jule::I64 _239917_n = (*_self_)._field_breaked.len();;
				jule::Bool _240017_ok = _1e46c53e3_check_scope(&(*_self_), _239521_c.get()._field_scope);;
				{
					
					if ((_239917_n != (*_self_)._field_breaked.len())) {
						_case_begin_1cbe04772:;
						{
							return false;
						}
					}
					else if ((!(_240017_ok))) {
						_case_begin_1cbe047e9:;
						{
							if ((!((*_self_)._field_falled))) {
								return false;
							};
							goto _case_begin_1cbe04871;
						}
					}
					else if ((*_self_)._field_falled) {
						_case_begin_1cbe04871:;
						{
							(*_self_)._field_falled=false;
							if ((_239521_c.get()._field_next == nullptr)) {
								return false;
							};
							goto _iter_next_1cbe02d58;
						}
					}
					_match_end_1cbe04695:;
				};
			}
			_iter_next_1cbe02d58:;
			++it;
			goto _iter_begin_1cbe02d58;
		}
		_iter_end_1cbe02d58:;
	};
	return ((_239430_m.get()._field_default != nullptr) && _1e46c53e3_check_scope(&(*_self_), _239430_m.get()._field_default.get()._field_scope));
}



inline jule::Bool _1e46c50d5_check_inf_iter(_1e46c4326_MissingRetChecker* _self_, jule::Ptr<_1e4687196_InfIter> _242033_it) {
	jule::I64 _242113_n = (*_self_)._field_breaked.len();;
	if (_1e46c53e3_check_scope(&(*_self_), _242033_it.get()._field_scope)) {
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_242113_n);
		return true;
	};
	if ((_242113_n != (*_self_)._field_breaked.len())) {
		jule::U64 _242717_itaddr = static_cast<jule::U64>(_242033_it);;
		{
			auto expr = (*_self_)._field_breaked.slice(_242113_n);
			auto it = expr.begin();
			_iter_begin_1cbe08b83:;
			if (it != expr.end()) {
				jule::U64 _242820_addr = *it;
				{
					if ((_242717_itaddr == _242820_addr)) {
						(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_242113_n);
						return false;
					};
				}
				_iter_next_1cbe08b83:;
				++it;
				goto _iter_begin_1cbe08b83;
			}
			_iter_end_1cbe08b83:;
		};
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_242113_n);
	};
	return true;
}



inline jule::Bool _1e46c53e3_check_scope(_1e46c4326_MissingRetChecker* _self_, jule::Ptr<_1e46862c7_Scope> _243930_s) {
	if ((_243930_s == nullptr)) {
		return false;
	};
	{
		auto &expr = _243930_s.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1cbe0a0b3:;
		if (it != expr.end()) {
			jule::Any _244321_st = *it;
			{
				{
					auto &_match_expr{ _244321_st };
					
					if (_match_expr.type_is<jule::Ptr<_1e468b167_FallSt>>()) {
						_case_begin_1cbe0ad2d:;
						{
							(*_self_)._field_falled=true;
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e468872a_BreakSt>>()) {
						_case_begin_1cbe0adc7:;
						{
							jule::U64 _244921_addr = _244321_st.operator jule::Ptr<_1e468872a_BreakSt>().get()._field_it;;
							if ((_244921_addr != 0LLU)) {
								(*_self_)._field_breaked = jule::alloc_for_append((*_self_)._field_breaked,1);(*_self_)._field_breaked.__push(_244921_addr);;
							};
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e4688373_ContSt>>()) {
						_case_begin_1cbe0ae3d:;
						{
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e4687196_InfIter>>()) {
						_case_begin_1cbe0aea4:;
						{
							if (_1e46c50d5_check_inf_iter(&(*_self_), _244321_st.operator jule::Ptr<_1e4687196_InfIter>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e468b5da_RetSt>>()) {
						_case_begin_1cbe0b01a:;
						{
							return true;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e46862c7_Scope>>()) {
						_case_begin_1cbe0b081:;
						{
							if (_1e46c53e3_check_scope(&(*_self_), _244321_st.operator jule::Ptr<_1e46862c7_Scope>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c974abc0_Data>>()) {
						_case_begin_1cbe0b108:;
						{
							{
								auto &_match_expr{ _244321_st.operator jule::Ptr<_1c974abc0_Data>().get()._field_model };
								
								if (_match_expr.type_is<jule::Ptr<_1e437d60c_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e437e09c_BuiltinErrorCallExprModel>>()) {
									_case_begin_1cbe0ebab:;
									{
										return true;
									}
								}
								_match_end_1cbe0eb56:;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e4686daa_Conditional>>()) {
						_case_begin_1cbe0b180:;
						{
							if (_1e46c49b9_check_conditional(&(*_self_), _244321_st.operator jule::Ptr<_1e4686daa_Conditional>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e468a023_Match>>()) {
						_case_begin_1cbe0b207:;
						{
							if (_1e46c4cc7_check_match(&(*_self_), _244321_st.operator jule::Ptr<_1e468a023_Match>())) {
								return true;
							};
						}
					}
					_match_end_1cbe0ac1d:;
				};
			}
			_iter_next_1cbe0a0b3:;
			++it;
			goto _iter_begin_1cbe0a0b3;
		}
		_iter_end_1cbe0a0b3:;
	};
	return false;
}



inline jule::Bool _1e46c5701_check(_1e46c4326_MissingRetChecker* _self_, jule::Ptr<_1e46862c7_Scope> _248524_s) {
	return _1e46c53e3_check_scope(&(*_self_), _248524_s);
}







std::ostream &operator<<(std::ostream &_Stream, _1e46c4326_MissingRetChecker _Src) {
	_Stream << "MissingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e46c5ee8_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "range:" << _Src._field_range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e46c736d_is_initialized(_1e46c6eb6_Var* _self_) {
	return ((*_self_)._field_value != nullptr);
}



inline jule::Bool _1e46c75d2_is_type_inferred(_1e46c6eb6_Var* _self_) {
	return (((*_self_)._field_kind == nullptr) || ((*_self_)._field_kind.get()._field_decl == nullptr));
}







std::ostream &operator<<(std::ostream &_Stream, _1e46c6eb6_Var _Src) {
	_Stream << "Var{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "value:" << _Src._field_value << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "iter_relation:" << _Src._field_iter_relation << ", ";
	_Stream << "depends:" << _Src._field_depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1e46c813d_dispose(jule::Ptr<_1e4380576_Fn> _1027_f) {
	return (((((((((((_1027_f != nullptr) && (_1027_f.get()._field_owner != nullptr)) && (_1027_f.get()._field_ident == jule::Str("dispose", 7))) && (!(_1027_f.get()._field_statically))) && (!(_1027_f.get()._field_unsafety))) && _1027_f.get()._field_public) && _1e43807c9_is_void(_1027_f.ptr())) && (_1027_f.get()._field_generics.len() == 0LL)) && (_1027_f.get()._field_params.len() == 1LL)) && _1027_f.get()._field_params[0LL].get()._field_mutable) && (!(_1e4355edb_is_ref(_1027_f.get()._field_params[0LL].ptr()))));
}



inline jule::Bool static__1e46c83d5_to_str(jule::Ptr<_1e4380576_Fn> _2526_f) {
	if ((((((((((((_2526_f == nullptr) || (_2526_f.get()._field_owner == nullptr)) || (_2526_f.get()._field_ident != jule::Str("to_str", 6))) || _2526_f.get()._field_statically) || _2526_f.get()._field_unsafety) || (!(_2526_f.get()._field_public))) || _1e43807c9_is_void(_2526_f.ptr())) || (_2526_f.get()._field_generics.len() != 0LL)) || (_2526_f.get()._field_params.len() != 1LL)) || _2526_f.get()._field_params[0LL].get()._field_mutable) || _1e4355edb_is_ref(_2526_f.get()._field_params[0LL].ptr()))) {
		return false;
	};
	jule::Ptr<_1e4383018_FnIns> _4017_ins = _2526_f.get()._field_instances[0LL];;
	jule::Ptr<_1c9778e51_Prim> _4113_prim = _1c97767ab_prim(_4017_ins.get()._field_result.ptr());;
	if ((_4113_prim == nullptr)) {
		return false;
	};
	return _1c977be10_is_str(_4113_prim.ptr());
}



inline jule::Bool static__1e46c8726_logical(jule::Ptr<_1e4380576_Fn>& _4824_f, jule::Str _4832_ident) {
	if (((((((((((((((_4824_f == nullptr) || (_4824_f.get()._field_ident != _4832_ident)) || (_4824_f.get()._field_owner == nullptr)) || (_4824_f.get()._field_instances.len() == 0LL)) || _4824_f.get()._field_statically) || _4824_f.get()._field_unsafety) || (!(_4824_f.get()._field_public))) || _1e43807c9_is_void(_4824_f.ptr())) || (_4824_f.get()._field_generics.len() != 0LL)) || (_4824_f.get()._field_params.len() != 2LL)) || _4824_f.get()._field_params[0LL].get()._field_mutable) || _1e4355edb_is_ref(_4824_f.get()._field_params[0LL].ptr())) || _4824_f.get()._field_params[1LL].get()._field_mutable) || _4824_f.get()._field_params[1LL].get()._field_reference)) {
		return false;
	};
	jule::Ptr<_1e4383018_FnIns> _6617_ins = _4824_f.get()._field_instances[0LL];;
	jule::Ptr<_1c9778e51_Prim> _6713_prim = _1c97767ab_prim(_6617_ins.get()._field_result.ptr());;
	if (((_6713_prim == nullptr) || (!(_1c977bb9b_is_bool(_6713_prim.ptr()))))) {
		return false;
	};
	return (_6617_ins.get()._field_owner == _1c9777999_strct(_6617_ins.get()._field_params[1LL].get()._field_kind.ptr()));
}



inline jule::Bool static__1e46c89bd_eq(jule::Ptr<_1e4380576_Fn> _7522_f) {
	return static__1e46c8726_logical(_7522_f,jule::Str("eq", 2));
}



inline jule::Bool static__1e46c8c65_gt(jule::Ptr<_1e4380576_Fn> _8022_f) {
	return static__1e46c8726_logical(_8022_f,jule::Str("gt", 2));
}



inline jule::Bool static__1e46c900c_gt_eq(jule::Ptr<_1e4380576_Fn> _8525_f) {
	return static__1e46c8726_logical(_8525_f,jule::Str("gt_eq", 5));
}



inline jule::Bool static__1e46c92a4_lt(jule::Ptr<_1e4380576_Fn> _9022_f) {
	return static__1e46c8726_logical(_9022_f,jule::Str("lt", 2));
}



inline jule::Bool static__1e46c954b_lt_eq(jule::Ptr<_1e4380576_Fn> _9525_f) {
	return static__1e46c8726_logical(_9525_f,jule::Str("lt_eq", 5));
}



inline jule::Bool static__1e46c988c_result(jule::Ptr<_1e4380576_Fn>& _9923_f, jule::Str _9931_ident) {
	if (((((((((((((((_9923_f == nullptr) || (_9923_f.get()._field_ident != _9931_ident)) || (_9923_f.get()._field_owner == nullptr)) || (_9923_f.get()._field_instances.len() == 0LL)) || _9923_f.get()._field_statically) || _9923_f.get()._field_unsafety) || (!(_9923_f.get()._field_public))) || _1e43807c9_is_void(_9923_f.ptr())) || (_9923_f.get()._field_generics.len() != 0LL)) || (_9923_f.get()._field_params.len() != 2LL)) || _9923_f.get()._field_params[0LL].get()._field_mutable) || _1e4355edb_is_ref(_9923_f.get()._field_params[0LL].ptr())) || _9923_f.get()._field_params[1LL].get()._field_mutable) || _9923_f.get()._field_params[1LL].get()._field_reference)) {
		return false;
	};
	jule::Ptr<_1e4383018_FnIns> _11717_ins = _9923_f.get()._field_instances[0LL];;
	return (_1c9777999_strct(_11717_ins.get()._field_result.ptr()) == _11717_ins.get()._field_owner);
}



inline jule::Bool static__1e46c9b34_shl(jule::Ptr<_1e4380576_Fn> _12223_f) {
	return static__1e46c988c_result(_12223_f,jule::Str("shl", 3));
}



inline jule::Bool static__1e46c9dcb_shr(jule::Ptr<_1e4380576_Fn> _12723_f) {
	return static__1e46c988c_result(_12723_f,jule::Str("shr", 3));
}



inline jule::Bool static__1e46ca173_add(jule::Ptr<_1e4380576_Fn> _13223_f) {
	return static__1e46c988c_result(_13223_f,jule::Str("add", 3));
}



inline jule::Bool static__1e46ca41a_sub(jule::Ptr<_1e4380576_Fn> _13723_f) {
	return static__1e46c988c_result(_13723_f,jule::Str("sub", 3));
}



inline jule::Bool static__1e46ca6b2_div(jule::Ptr<_1e4380576_Fn> _14223_f) {
	return static__1e46c988c_result(_14223_f,jule::Str("div", 3));
}



inline jule::Bool static__1e46ca959_mul(jule::Ptr<_1e4380576_Fn> _14723_f) {
	return static__1e46c988c_result(_14723_f,jule::Str("mul", 3));
}



inline jule::Bool static__1e46cac01_mod(jule::Ptr<_1e4380576_Fn> _15223_f) {
	return static__1e46c988c_result(_15223_f,jule::Str("mod", 3));
}



inline jule::Bool static__1e46cae98_bit_and(jule::Ptr<_1e4380576_Fn> _15727_f) {
	return static__1e46c988c_result(_15727_f,jule::Str("bit_and", 7));
}



inline jule::Bool static__1e46cb240_bit_or(jule::Ptr<_1e4380576_Fn> _16226_f) {
	return static__1e46c988c_result(_16226_f,jule::Str("bit_or", 6));
}



inline jule::Bool static__1e46cb4d7_bit_xor(jule::Ptr<_1e4380576_Fn> _16727_f) {
	return static__1e46c988c_result(_16727_f,jule::Str("bit_xor", 7));
}



inline jule::Bool static__1e46cb828_unary(jule::Ptr<_1e4380576_Fn>& _17122_f, jule::Str _17130_ident) {
	if (((((((((((((_17122_f == nullptr) || (_17122_f.get()._field_ident != _17130_ident)) || (_17122_f.get()._field_owner == nullptr)) || (_17122_f.get()._field_instances.len() == 0LL)) || _17122_f.get()._field_statically) || _17122_f.get()._field_unsafety) || (!(_17122_f.get()._field_public))) || _1e43807c9_is_void(_17122_f.ptr())) || (_17122_f.get()._field_generics.len() != 0LL)) || (_17122_f.get()._field_params.len() != 1LL)) || _17122_f.get()._field_params[0LL].get()._field_mutable) || _1e4355edb_is_ref(_17122_f.get()._field_params[0LL].ptr()))) {
		return false;
	};
	jule::Ptr<_1e4383018_FnIns> _18717_ins = _17122_f.get()._field_instances[0LL];;
	return (_1c9777999_strct(_18717_ins.get()._field_result.ptr()) == _18717_ins.get()._field_owner);
}



inline jule::Bool static__1e46cbac0_neg(jule::Ptr<_1e4380576_Fn> _19223_f) {
	return static__1e46cb828_unary(_19223_f,jule::Str("neg", 3));
}



inline jule::Bool static__1e46cbd67_pos(jule::Ptr<_1e4380576_Fn> _19723_f) {
	return static__1e46cb828_unary(_19723_f,jule::Str("pos", 3));
}



inline jule::Bool static__1e46cc10e_bit_not(jule::Ptr<_1e4380576_Fn> _20227_f) {
	return static__1e46cb828_unary(_20227_f,jule::Str("bit_not", 7));
}



inline jule::Bool static__1e46cc450_assign(jule::Ptr<_1e4380576_Fn>& _20623_f, jule::Str _20631_ident) {
	if (((((((((((((((_20623_f == nullptr) || (_20623_f.get()._field_ident != _20631_ident)) || (_20623_f.get()._field_owner == nullptr)) || (_20623_f.get()._field_instances.len() == 0LL)) || _20623_f.get()._field_statically) || _20623_f.get()._field_unsafety) || (!(_20623_f.get()._field_public))) || (!(_1e43807c9_is_void(_20623_f.ptr())))) || (_20623_f.get()._field_generics.len() != 0LL)) || (_20623_f.get()._field_params.len() != 2LL)) || (!(_20623_f.get()._field_params[0LL].get()._field_mutable))) || _1e4355edb_is_ref(_20623_f.get()._field_params[0LL].ptr())) || _20623_f.get()._field_params[1LL].get()._field_mutable) || _20623_f.get()._field_params[1LL].get()._field_reference)) {
		return false;
	};
	return true;
}



inline jule::Bool static__1e46cc6e7_add_assign(jule::Ptr<_1e4380576_Fn> _22730_f) {
	return static__1e46cc450_assign(_22730_f,jule::Str("add_assign", 10));
}



inline jule::Bool static__1e46cc98e_sub_assign(jule::Ptr<_1e4380576_Fn> _23230_f) {
	return static__1e46cc450_assign(_23230_f,jule::Str("sub_assign", 10));
}



inline jule::Bool static__1e46ccc36_div_assign(jule::Ptr<_1e4380576_Fn> _23730_f) {
	return static__1e46cc450_assign(_23730_f,jule::Str("div_assign", 10));
}



inline jule::Bool static__1e46ccecd_mul_assign(jule::Ptr<_1e4380576_Fn> _24230_f) {
	return static__1e46cc450_assign(_24230_f,jule::Str("mul_assign", 10));
}



inline jule::Bool static__1e46cd275_mod_assign(jule::Ptr<_1e4380576_Fn> _24730_f) {
	return static__1e46cc450_assign(_24730_f,jule::Str("mod_assign", 10));
}



inline jule::Bool static__1e46cd51c_shl_assign(jule::Ptr<_1e4380576_Fn> _25230_f) {
	return static__1e46cc450_assign(_25230_f,jule::Str("shl_assign", 10));
}



inline jule::Bool static__1e46cd7b4_shr_assign(jule::Ptr<_1e4380576_Fn> _25730_f) {
	return static__1e46cc450_assign(_25730_f,jule::Str("shr_assign", 10));
}



inline jule::Bool static__1e46cda5b_bit_or_assign(jule::Ptr<_1e4380576_Fn> _26233_f) {
	return static__1e46cc450_assign(_26233_f,jule::Str("bit_or_assign", 13));
}



inline jule::Bool static__1e46cdd03_bit_and_assign(jule::Ptr<_1e4380576_Fn> _26734_f) {
	return static__1e46cc450_assign(_26734_f,jule::Str("bit_and_assign", 14));
}



inline jule::Bool static__1e46ce09a_bit_xor_assign(jule::Ptr<_1e4380576_Fn> _27234_f) {
	return static__1e46cc450_assign(_27234_f,jule::Str("bit_xor_assign", 14));
}







std::ostream &operator<<(std::ostream &_Stream, _1e46c79bc_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1c973723e_push_err(_1c9736c55_TypeCompatibilityChecker* _self_, jule::Str _11727_fmt, jule::Slice<jule::Any> _11740_args) {
	_1e46aed6c_push_err((*_self_)._field_s.ptr(), (*_self_)._field_error_token,_11727_fmt,jule::Any(_11740_args));
}



inline jule::Bool _1c97374a3_check_trait(_1c9736c55_TypeCompatibilityChecker* _self_) {
	jule::Bool _12132_ok = jule::Bool();
	if (_1c97755bd_is_nil((*_self_)._field_src.ptr())) {
		_12132_ok = true;
		return _12132_ok;
	};
	jule::Ptr<_1e43d8d0a_Trait> _12613_trt = _1c9777c0d_trt((*_self_)._field_dest.ptr());;
	jule::Bool _12717_ref = false;;
	{
		
		if ((_1c9776a20_sptr((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1cbe4025d:;
			{
				_12717_ref=true;
				(*_self_)._field_src=_1c9776a20_sptr((*_self_)._field_src.ptr()).get()._field_elem;
				if ((_1c9777999_strct((*_self_)._field_src.ptr()) == nullptr)) {
					_12132_ok = false;
					return _12132_ok;
				};
				goto _case_begin_1cbe40318;
			}
		}
		else if ((_1c9777999_strct((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1cbe40318:;
			{
				jule::Ptr<_1e43462ea_StructIns> _13717_s = _1c9777999_strct((*_self_)._field_src.ptr());;
				if ((!(_1e4340a75_is_implements(_13717_s.get()._field_decl.ptr(), _12613_trt)))) {
					_12132_ok = false;
					return _12132_ok;
				};
				if (((!(_12717_ref)) && _1c9735391_trait_has_reference_receiver(_12613_trt))) {
					_1c973723e_push_err(&(*_self_), jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>());
					_12132_ok = false;
					return _12132_ok;
				};
				_12132_ok = true;
				return _12132_ok;
			}
		}
		else if ((_1c9777c0d_trt((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1cbe4037e:;
			{
				_12132_ok = (_12613_trt == _1c9777c0d_trt((*_self_)._field_src.ptr()));
				return _12132_ok;
			}
		}
		else {
			_case_begin_1cbe3eadc:;
			{
				_12132_ok = false;
				return _12132_ok;
			}
		}
		_match_end_1cbe3ea76:;
	};
}



inline jule::Bool _1c9737717_check_ptr(_1c9736c55_TypeCompatibilityChecker* _self_) {
	jule::Bool _15530_ok = jule::Bool();
	if (_1c97755bd_is_nil((*_self_)._field_src.ptr())) {
		_15530_ok = true;
		return _15530_ok;
	};
	jule::Ptr<_1c97809c4_Ptr> _16017_dest = _1c9776c84_ptr((*_self_)._field_dest.ptr());;
	if (_1c9781497_is_unsafe(_16017_dest.ptr())) {
		_15530_ok = true;
		return _15530_ok;
	};
	_15530_ok = _1c9774db4_equals((*_self_)._field_dest, (*_self_)._field_src);
	return _15530_ok;
}



inline jule::Bool _1c973797b_check_prim(_1c9736c55_TypeCompatibilityChecker* _self_) {
	jule::Bool _16931_ok = jule::Bool();
	if ((!((*_self_)._field_dest.get()._field_variadic))) {
		jule::Ptr<_1c9778e51_Prim> _17117_prim = _1c97767ab_prim((*_self_)._field_dest.ptr());;
		if (((_17117_prim != nullptr) && _1c977c174_is_any(_17117_prim.ptr()))) {
			_16931_ok = true;
			return _16931_ok;
		};
	};
	_16931_ok = _1c9774db4_equals((*_self_)._field_dest, (*_self_)._field_src);
	return _16931_ok;
}



inline jule::Bool _1c9737be0_check(_1c9736c55_TypeCompatibilityChecker* _self_) {
	jule::Bool _17926_ok = jule::Bool();
	if ((_1c9776c84_ptr((*_self_)._field_dest.ptr()) != nullptr)) {
		_17926_ok = _1c9737717_check_ptr(&(*_self_));
		return _17926_ok;
	};
	if (_1c9775d0a_nil_compatible((*_self_)._field_dest.ptr())) {
		if (_1c97755bd_is_nil((*_self_)._field_src.ptr())) {
			_17926_ok = true;
			return _17926_ok;
		};
	};
	{
		
		if ((_1c97767ab_prim((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1cbe4a994:;
			{
				_17926_ok = _1c973797b_check_prim(&(*_self_));
				return _17926_ok;
			}
		}
		else if ((_1c9777c0d_trt((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1cbe4a39a:;
			{
				_17926_ok = _1c97374a3_check_trait(&(*_self_));
				return _17926_ok;
			}
		}
		else {
			_case_begin_1cbe49d06:;
			{
				_17926_ok = _1c9774db4_equals((*_self_)._field_dest, (*_self_)._field_src);
				return _17926_ok;
			}
		}
		_match_end_1cbe49c29:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c9736c55_TypeCompatibilityChecker _Src) {
	_Stream << "TypeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline void _1c9738691_push_err(_1c973822e_AssignTypeChecker* _self_, jule::Str _20927_fmt, jule::Slice<jule::Any> _20940_args) {
	_1e46aed6c_push_err((*_self_)._field_s.ptr(), (*_self_)._field_error_token,_20927_fmt,jule::Any(_20940_args));
}



inline jule::Bool _1c9738905_check_validity(_1c973822e_AssignTypeChecker* _self_) {
	jule::Bool _21417_valid = true;;
	{
		
		if ((_1c9777735_fnc((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cbe4d535:;
			{
				jule::Ptr<_1e4383018_FnIns> _21717_f = _1c9777735_fnc((*_self_)._field_d.get()._field_kind.ptr());;
				{
					
					if (_1e4383c94_is_builtin(_21717_f.ptr())) {
						_case_begin_1cbe4ea53:;
						{
							_1c9738691_push_err(&(*_self_), jule::Str("builtin define cannot use as anonymous function", 47),jule::Slice<jule::Any>());
							_21417_valid=false;
						}
					}
					else if (_21717_f.get()._field_decl.get()._field_cpp_linked) {
						_case_begin_1cbe4eaca:;
						{
							_1c9738691_push_err(&(*_self_), jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>());
							_21417_valid=false;
						}
					}
					else if (_1e4380a3d_is_method(_21717_f.get()._field_decl.ptr())) {
						_case_begin_1cbe4eb52:;
						{
							_1c9738691_push_err(&(*_self_), jule::Str("methods cannot use as anonymous function", 40),jule::Slice<jule::Any>());
							_21417_valid=false;
						}
					}
					else if ((_21717_f.get()._field_decl.get()._field_generics.len() > 0LL)) {
						_case_begin_1cbe4ebc9:;
						{
							_1c9738691_push_err(&(*_self_), jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
							_21417_valid=false;
						}
					}
					_match_end_1cbe4e965:;
				};
			}
		}
		else if ((_1c97781d6_tup((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cbe4d5ac:;
			{
				_1c9738691_push_err(&(*_self_), jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>());
				_21417_valid=false;
			}
		}
		_match_end_1cbe4d469:;
	};
	return _21417_valid;
}



inline jule::Bool _1c9738b69_check_const(_1c973822e_AssignTypeChecker* _self_) {
	if (((((!(_1c974b583_is_const((*_self_)._field_d.ptr()))) || (_1c97767ab_prim((*_self_)._field_dest.ptr()) == nullptr)) || (_1c97767ab_prim((*_self_)._field_d.get()._field_kind.ptr()) == nullptr)) || (!(_1e46843e6_is_num(_1c97767ab_prim((*_self_)._field_d.get()._field_kind.ptr()).get()._field_kind))))) {
		return false;
	};
	if (((*_self_)._field_d.get()._field_model != (*_self_)._field_d.get()._field_constant)) {
		return false;
	};
	jule::Str _25313_kind = _1c97767ab_prim((*_self_)._field_dest.ptr()).get()._field_kind;;
	{
		
		if (_1e468414e_is_float(_25313_kind)) {
			_case_begin_1cbe56d13:;
			{
				if ((!(_1c971c895_float_assignable(_25313_kind,(*_self_)._field_d)))) {
					_1c9738691_push_err(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				};
			}
		}
		else if (_1e4683d63_is_int(_25313_kind)) {
			_case_begin_1cbe56e01:;
			{
				if ((!(_1c9736b23_int_assignable(_25313_kind,(*_self_)._field_d)))) {
					_1c9738691_push_err(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				};
			}
		}
		else {
			_case_begin_1cbe56708:;
			{
				return false;
			}
		}
		_match_end_1cbe56692:;
	};
	return true;
}



inline jule::Bool _1c9738dcd_is_prim(_1c973822e_AssignTypeChecker* _self_) {
	if (((*_self_)._field_dest.get()._field_variadic || (*_self_)._field_d.get()._field_kind.get()._field_variadic)) {
		return false;
	};
	if ((_1c9775359_cpp_linked((*_self_)._field_dest.ptr()) || _1c9775359_cpp_linked((*_self_)._field_d.get()._field_kind.ptr()))) {
		return false;
	};
	return ((_1c97767ab_prim((*_self_)._field_dest.ptr()) != nullptr) && (_1c97767ab_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr));
}



inline jule::Bool _1c9739142_check_compatibility(_1c973822e_AssignTypeChecker* _self_) {
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1cbe5bc19:;
			{
				return false;
			}
		}
		else if ((!(_1c9738905_check_validity(&(*_self_))))) {
			_case_begin_1cbe5bc91:;
			{
				return false;
			}
		}
		else if (_1c9738b69_check_const(&(*_self_))) {
			_case_begin_1cbe5bd18:;
			{
				return true;
			}
		}
		else if ((_1c9776ee8_enm((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cbe5bd90:;
			{
				jule::Ptr<_1c97746ee_TypeKind> _29521_dkind = (*_self_)._field_dest;;
				if ((_1c9776ee8_enm((*_self_)._field_dest.ptr()) != nullptr)) {
					_29521_dkind=_1c9776ee8_enm((*_self_)._field_dest.ptr()).get()._field_kind.get()._field_kind;
				} else if ((_1c97767ab_prim((*_self_)._field_dest.ptr()) == nullptr)) {
					goto _match_end_1cbe5bac6;
				};
				if (_1e4680b40_types_are_compatible(_1c97767ab_prim(_1c9776ee8_enm((*_self_)._field_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()).get()._field_kind,_1c97767ab_prim(_29521_dkind.ptr()).get()._field_kind)) {
					return true;
				};
			}
		}
		else if (_1c9738dcd_is_prim(&(*_self_))) {
			_case_begin_1cbe5be17:;
			{
				jule::Ptr<_1c9778e51_Prim> _30517_dest = _1c97767ab_prim((*_self_)._field_dest.ptr());;
				if (_1c977c174_is_any(_30517_dest.ptr())) {
					return true;
				};
				jule::Ptr<_1c9778e51_Prim> _30921_src = _1c97767ab_prim((*_self_)._field_d.get()._field_kind.ptr());;
				if (_1e4680b40_types_are_compatible(_30517_dest.get()._field_kind,_30921_src.get()._field_kind)) {
					return true;
				};
			}
		}
		_match_end_1cbe5bac6:;
	};
	return _1e46b55e2_check_type_compatibility((*_self_)._field_s, (*_self_)._field_dest,(*_self_)._field_d.get()._field_kind,(*_self_)._field_error_token);
}



inline jule::Bool _1c97393a6_check(_1c973822e_AssignTypeChecker* _self_) {
	jule::Bool _31813_ok = _1c9739142_check_compatibility(&(*_self_));;
	if (_31813_ok) {
		_1c978bb67_apply_implicit_cast((*_self_)._field_dest,(*_self_)._field_d);
	};
	return _31813_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1c973822e_AssignTypeChecker _Src) {
	_Stream << "AssignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline void _1c973a110_push_generic(_1c9739a7c_DynamicTypeAnnotation* _self_, jule::Ptr<_1c97746ee_TypeKind>& _33636_k, jule::I64 _33650_i) {
	(*_self_)._field_f.get()._field_generics[_33650_i]=_33636_k;
}



inline jule::Bool _1c973a3da_annotate_prim(_1c9739a7c_DynamicTypeAnnotation* _self_, jule::Ptr<_1c97746ee_TypeKind>& _34044_k) {
	jule::Bool _34060_ok = jule::Bool();
	jule::Str _34113_kind = _1c9774aa6_to_str((*((*_self_)._field_k)).ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1cbe666a2:;
		if (it != expr.end()) {
			jule::I64 _34213_i = it - expr.begin();
			jule::Ptr<_1e436d50e_GenericDecl> _34216_g = *it;
			{
				if ((_34113_kind != _34216_g.get()._field_ident)) {
					goto _iter_next_1cbe666a2;
				};
				jule::Ptr<_1c97746ee_TypeKind> _34717_t = (*_self_)._field_f.get()._field_generics[_34213_i];;
				{
					
					if ((_34717_t == nullptr)) {
						_case_begin_1cbe67c8b:;
						{
							_1c973a110_push_generic(&(*_self_), _34044_k,_34213_i);
						}
					}
					else if ((!(_1c9774db4_equals(_34717_t, _34044_k)))) {
						_case_begin_1cbe67d13:;
						{
							_34060_ok = false;
							return _34060_ok;
						}
					}
					_match_end_1cbe67b7b:;
				};
				(*((*_self_)._field_k)).get()._field_kind=_34044_k.get()._field_kind;
				_34060_ok = true;
				return _34060_ok;
			}
			_iter_next_1cbe666a2:;
			++it;
			_34213_i++;
			goto _iter_begin_1cbe666a2;
		}
		_iter_end_1cbe666a2:;
	};
	_34060_ok = false;
	return _34060_ok;
}



inline jule::Bool _1c973a6e8_annotate_slc(_1c9739a7c_DynamicTypeAnnotation* _self_, jule::Ptr<_1c97746ee_TypeKind>& _36343_k) {
	jule::Bool _36359_ok = jule::Bool();
	jule::Ptr<_1c977cdbc_Slc> _36417_pslc = _1c97774c1_slc((*((*_self_)._field_k)).ptr());;
	if ((_36417_pslc == nullptr)) {
		_36359_ok = false;
		return _36359_ok;
	};
	jule::Ptr<_1c977cdbc_Slc> _36917_slc = _1c97774c1_slc(_36343_k.ptr());;
	(*_self_)._field_k=(&(_36417_pslc.get()._field_elem));
	_36359_ok = _1c973be03_annotate_kind(&(*_self_), _36917_slc.get()._field_elem);
	return _36359_ok;
}



inline jule::Bool _1c973aaa0_check_map_key(_1c9739a7c_DynamicTypeAnnotation* _self_, jule::Ptr<_1c97746ee_TypeKind>* _37443_k, jule::Ptr<_1c97746ee_TypeKind>& _37463_ck) {
	jule::Bool _37480_ok = jule::Bool();
	jule::Ptr<_1c97746ee_TypeKind>* _37517_old = (*_self_)._field_k;;
	(*_self_)._field_k=_37443_k;
	_37480_ok=_1c973be03_annotate_kind(&(*_self_), _37463_ck);
	(*_self_)._field_k=_37517_old;
	return _37480_ok;
}



inline jule::Bool _1c973adad_annotate_map(_1c9739a7c_DynamicTypeAnnotation* _self_, jule::Ptr<_1c97746ee_TypeKind>& _38243_k) {
	jule::Bool _38259_ok = jule::Bool();
	jule::Ptr<_1c977e473_Map> _38317_pmap = _1c9777e72_map((*((*_self_)._field_k)).ptr());;
	if ((_38317_pmap == nullptr)) {
		_38259_ok = false;
		return _38259_ok;
	};
	jule::Ptr<_1c977e473_Map> _38817_m = _1c9777e72_map(_38243_k.ptr());;
	_38259_ok = (_1c973aaa0_check_map_key(&(*_self_), (&(_38317_pmap.get()._field_key)),_38817_m.get()._field_key) && _1c973aaa0_check_map_key(&(*_self_), (&(_38317_pmap.get()._field_val)),_38817_m.get()._field_val));
	return _38259_ok;
}



inline jule::Bool _1c973b1bb_annotate_fn(_1c9739a7c_DynamicTypeAnnotation* _self_, jule::Ptr<_1c97746ee_TypeKind>& _39442_k) {
	jule::Bool _39458_ok = jule::Bool();
	jule::Ptr<_1e4383018_FnIns> _39517_pf = _1c9777735_fnc((*((*_self_)._field_k)).ptr());;
	if ((_39517_pf == nullptr)) {
		_39458_ok = false;
		return _39458_ok;
	};
	jule::Ptr<_1e4383018_FnIns> _39917_f = _1c9777735_fnc(_39442_k.ptr());;
	{
		
		if ((_39517_pf.get()._field_params.len() != _39917_f.get()._field_params.len())) {
			_case_begin_1cbe73ca8:;
			{
				_39458_ok = false;
				return _39458_ok;
			}
		}
		else if ((_1e43807c9_is_void(_39517_pf.get()._field_decl.ptr()) != _1e43807c9_is_void(_39917_f.get()._field_decl.ptr()))) {
			_case_begin_1cbe73d30:;
			{
				_39458_ok = false;
				return _39458_ok;
			}
		}
		_match_end_1cbe73bdc:;
	};
	_39458_ok=true;
	jule::Ptr<_1c97746ee_TypeKind>* _40817_old = (*_self_)._field_k;;
	{
		auto &expr = _39917_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1cbe757c1:;
		if (it != expr.end()) {
			jule::I64 _40914_i = it - expr.begin();
			jule::Ptr<_1e438217c_ParamIns> _40921_fp = *it;
			{
				(*_self_)._field_k=(&(_39517_pf.get()._field_params[_40914_i].get()._field_kind));
				_39458_ok=(_1c973be03_annotate_kind(&(*_self_), _40921_fp.get()._field_kind) && _39458_ok);
			}
			_iter_next_1cbe757c1:;
			++it;
			_40914_i++;
			goto _iter_begin_1cbe757c1;
		}
		_iter_end_1cbe757c1:;
	};
	if ((!(_1e43807c9_is_void(_39517_pf.get()._field_decl.ptr())))) {
		(*_self_)._field_k=(&(_39517_pf.get()._field_result));
		_39458_ok=(_1c973be03_annotate_kind(&(*_self_), _39917_f.get()._field_result) && _39458_ok);
	};
	(*_self_)._field_k=_40817_old;
	return _39458_ok;
}



inline jule::Bool _1c973b4c9_annotate_ptr(_1c9739a7c_DynamicTypeAnnotation* _self_, jule::Ptr<_1c97746ee_TypeKind>& _42343_k) {
	jule::Bool _42359_ok = jule::Bool();
	jule::Ptr<_1c97809c4_Ptr> _42417_pptr = _1c9776c84_ptr((*((*_self_)._field_k)).ptr());;
	if ((_42417_pptr == nullptr)) {
		_42359_ok = false;
		return _42359_ok;
	};
	jule::Ptr<_1c97809c4_Ptr> _42917_ptr = _1c9776c84_ptr(_42343_k.ptr());;
	(*_self_)._field_k=(&(_42417_pptr.get()._field_elem));
	_42359_ok = _1c973be03_annotate_kind(&(*_self_), _42917_ptr.get()._field_elem);
	return _42359_ok;
}



inline jule::Bool _1c973b7d7_annotate_sptr(_1c9739a7c_DynamicTypeAnnotation* _self_, jule::Ptr<_1c97746ee_TypeKind>& _43444_k) {
	jule::Bool _43460_ok = jule::Bool();
	jule::Ptr<_1c977c460_Sptr> _43517_ssptr = _1c9776a20_sptr((*((*_self_)._field_k)).ptr());;
	if ((_43517_ssptr == nullptr)) {
		_43460_ok = false;
		return _43460_ok;
	};
	jule::Ptr<_1c977c460_Sptr> _44017_sptr = _1c9776a20_sptr(_43444_k.ptr());;
	(*_self_)._field_k=(&(_43517_ssptr.get()._field_elem));
	_43460_ok = _1c973be03_annotate_kind(&(*_self_), _44017_sptr.get()._field_elem);
	return _43460_ok;
}



inline jule::Bool _1c973bae5_annotate_any(_1c9739a7c_DynamicTypeAnnotation* _self_, jule::Ptr<_1c97746ee_TypeKind>& _44543_k) {
	jule::Bool _44559_ok = jule::Bool();
	jule::Str _44613_kind = _1c9774aa6_to_str((*((*_self_)._field_k)).ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1cbe7dd3a:;
		if (it != expr.end()) {
			jule::I64 _44713_i = it - expr.begin();
			jule::Ptr<_1e436d50e_GenericDecl> _44716_g = *it;
			{
				if ((_44613_kind != _44716_g.get()._field_ident)) {
					goto _iter_next_1cbe7dd3a;
				};
				jule::Ptr<_1c97746ee_TypeKind> _45217_t = (*_self_)._field_f.get()._field_generics[_44713_i];;
				{
					
					if ((_45217_t == nullptr)) {
						_case_begin_1cbe80424:;
						{
							_1c973a110_push_generic(&(*_self_), _44543_k,_44713_i);
						}
					}
					else if ((!(_1c9774db4_equals(_45217_t, _44543_k)))) {
						_case_begin_1cbe8049b:;
						{
							_44559_ok = false;
							return _44559_ok;
						}
					}
					_match_end_1cbe80314:;
				};
				(*((*_self_)._field_k)).get()._field_kind=_44543_k.get()._field_kind;
				_44559_ok = true;
				return _44559_ok;
			}
			_iter_next_1cbe7dd3a:;
			++it;
			_44713_i++;
			goto _iter_begin_1cbe7dd3a;
		}
		_iter_end_1cbe7dd3a:;
	};
	_44559_ok = false;
	return _44559_ok;
}



inline jule::Bool _1c973be03_annotate_kind(_1c9739a7c_DynamicTypeAnnotation* _self_, jule::Ptr<_1c97746ee_TypeKind>& _46844_k) {
	jule::Bool _46860_ok = jule::Bool();
	if ((((*_self_)._field_k == nullptr) || ((*((*_self_)._field_k)) == nullptr))) {
		return _46860_ok;
	};
	{
		
		if (_1c973bae5_annotate_any(&(*_self_), _46844_k)) {
			_case_begin_1cbe830b4:;
			{
				_46860_ok = true;
				return _46860_ok;
			}
		}
		else if ((_1c97767ab_prim(_46844_k.ptr()) != nullptr)) {
			_case_begin_1cbe8312a:;
			{
				_46860_ok = _1c973a3da_annotate_prim(&(*_self_), _46844_k);
				return _46860_ok;
			}
		}
		else if ((_1c97774c1_slc(_46844_k.ptr()) != nullptr)) {
			_case_begin_1cbe82cea:;
			{
				_46860_ok = _1c973a6e8_annotate_slc(&(*_self_), _46844_k);
				return _46860_ok;
			}
		}
		else if ((_1c9777e72_map(_46844_k.ptr()) != nullptr)) {
			_case_begin_1cbe82d61:;
			{
				_46860_ok = _1c973adad_annotate_map(&(*_self_), _46844_k);
				return _46860_ok;
			}
		}
		else if ((_1c9777735_fnc(_46844_k.ptr()) != nullptr)) {
			_case_begin_1cbe82dc7:;
			{
				_46860_ok = _1c973b1bb_annotate_fn(&(*_self_), _46844_k);
				return _46860_ok;
			}
		}
		else if ((_1c9776c84_ptr(_46844_k.ptr()) != nullptr)) {
			_case_begin_1cbe82921:;
			{
				_46860_ok = _1c973b4c9_annotate_ptr(&(*_self_), _46844_k);
				return _46860_ok;
			}
		}
		else if ((_1c9776a20_sptr(_46844_k.ptr()) != nullptr)) {
			_case_begin_1cbe82987:;
			{
				_46860_ok = _1c973b7d7_annotate_sptr(&(*_self_), _46844_k);
				return _46860_ok;
			}
		}
		else {
			_case_begin_1cbe828aa:;
			{
				_46860_ok = false;
				return _46860_ok;
			}
		}
		_match_end_1cbe82855:;
	};
}



inline jule::Bool _1c973c167_annotate(_1c9739a7c_DynamicTypeAnnotation* _self_) {
	jule::Bool _49336_ok = jule::Bool();
	(*_self_)._field_k=(&((*_self_)._field_p.get()._field_kind));
	_49336_ok = _1c973be03_annotate_kind(&(*_self_), (*_self_)._field_a.get()._field_kind);
	return _49336_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1c9739a7c_DynamicTypeAnnotation _Src) {
	_Stream << "DynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "k:" << _Src._field_k;
	_Stream << "}";
	return _Stream;
}



inline void _1c973cd8d_push_err_token(_1c973c83d_FnCallArgChecker* _self_, jule::Ptr<_20cd9e6ec_Token> _50933_token, jule::Str _50948_fmt, jule::Slice<jule::Any> _50961_args) {
	_1e46aed6c_push_err((*_self_)._field_e.get()._field_s.ptr(), _50933_token,_50948_fmt,jule::Any(_50961_args));
}



inline void _1c973d1ac_push_err(_1c973c83d_FnCallArgChecker* _self_, jule::Str _51327_fmt, jule::Slice<jule::Any> _51340_args) {
	_1c973cd8d_push_err_token(&(*_self_), (*_self_)._field_error_token,_51327_fmt,jule::Any(_51340_args));
}



inline jule::Slice<jule::Ptr<_1e438217c_ParamIns>> _1c973d421_get_params(_1c973c83d_FnCallArgChecker* _self_) {
	if (((((*_self_)._field_f.get()._field_params.len() > 0LL) && ((*_self_)._field_f.get()._field_params[0LL].get()._field_decl != nullptr)) && _1e435279b_is_self((*_self_)._field_f.get()._field_params[0LL].get()._field_decl.ptr()))) {
		return (*_self_)._field_f.get()._field_params.slice(1LL);
	};
	return (*_self_)._field_f.get()._field_params;
}



inline jule::Bool _1c973d72e_check_counts(_1c973c83d_FnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1e438217c_ParamIns>>& _52632_params) {
	jule::Bool _52655_ok = jule::Bool();
	jule::I64 _52717_n = _52632_params.len();;
	if (((_52717_n > 0LL) && _1e435279b_is_self(_52632_params[0LL].get()._field_decl.ptr()))) {
		(_52717_n)--;
	};
	jule::I64 _53217_diff = (_52717_n - (*_self_)._field_args.len());;
	{
		
		if ((_53217_diff == 0LL)) {
			_case_begin_1cbe90511:;
			{
				_52655_ok = true;
				return _52655_ok;
			}
		}
		else if (((_52717_n > 0LL) && _52632_params[(_52717_n - 1LL)].get()._field_decl.get()._field_variadic)) {
			_case_begin_1cbe90588:;
			{
				_52655_ok = true;
				return _52655_ok;
			}
		}
		else if (((_53217_diff < 0LL) || (_53217_diff > _52632_params.len()))) {
			_case_begin_1cbe90610:;
			{
				_1c973d1ac_push_err(&(*_self_), jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				_52655_ok = false;
				return _52655_ok;
			}
		}
		_match_end_1cbe90434:;
	};
	jule::Str _54317_idents = jule::Str();;
	for (; (_53217_diff > 0LL); (_53217_diff)--) {
		{
			_54317_idents+=(jule::Str(", ", 2) + _52632_params[(_52717_n - _53217_diff)].get()._field_decl.get()._field_ident);
		}
	_iter_next_1cbe906ba:;
	}
	_iter_end_1cbe906ba:;;
	(_54317_idents).mut_slice(2LL);;
	_1c973d1ac_push_err(&(*_self_), jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_54317_idents)}));
	_52655_ok = false;
	return _52655_ok;
}



inline jule::Bool _1c973db80_check_arg(_1c973c83d_FnCallArgChecker* _self_, jule::Ptr<_1e438217c_ParamIns>& _55333_p, jule::Ptr<_1c974abc0_Data>& _55352_arg, jule::Ptr<_20cd9e6ec_Token>& _55369_error_token) {
	jule::Bool _55392_ok = jule::Bool();
	if (((*_self_)._field_dynamic_annotation && _1e4384a42_parameter_uses_generics(_55333_p.get()._field_decl,(*_self_)._field_f.get()._field_decl.get()._field_generics))) {
		_55392_ok=(!(_55333_p.get()._field_decl.get()._field_variadic));
		if (_55392_ok) {
			_1c9739a7c_DynamicTypeAnnotation _55725_dta = _1c9739a7c_DynamicTypeAnnotation{._field_e=(*_self_)._field_e, ._field_f=(*_self_)._field_f, ._field_p=_55333_p, ._field_a=_55352_arg, ._field_error_token=_55369_error_token, };;
			_55392_ok=_1c973c167_annotate(&_55725_dta);
		};
		if ((!(_55392_ok))) {
			_1c973cd8d_push_err_token(&(*_self_), _55369_error_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
			_55392_ok = false;
			return _55392_ok;
		};
	};
	if (_1e46b6e73_check_validity_for_init_expr((*_self_)._field_e.get()._field_s, _55333_p.get()._field_decl.get()._field_mutable,_55333_p.get()._field_decl.get()._field_reference,_55333_p.get()._field_kind,_55352_arg,_55369_error_token)) {
		_1e46b516e_check_assign_type((*_self_)._field_e.get()._field_s, _55333_p.get()._field_decl.get()._field_reference,_55333_p.get()._field_kind,_55352_arg,_55369_error_token);
	};
	_55392_ok = true;
	return _55392_ok;
}



inline jule::Bool _1c973e037_push(_1c973c83d_FnCallArgChecker* _self_, jule::Ptr<_1e438217c_ParamIns>& _58028_p, jule::Ptr<_1e43659e0_Expr> _58046_arg) {
	jule::Bool _58060_ok = jule::Bool();
	jule::Ptr<_1c97746ee_TypeKind> _58117_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _58213_old_immut = (*_self_)._field_e.get()._field_immutable;;
	jule::Ptr<_1c974abc0_Data> _58317_d = nullptr;;
	(*_self_)._field_e.get()._field_immutable=(!(_58028_p.get()._field_decl.get()._field_mutable));
	if (((!((*_self_)._field_dynamic_annotation)) && (!(_58028_p.get()._field_decl.get()._field_variadic)))) {
		(*_self_)._field_e.get()._field_prefix=_58028_p.get()._field_kind;
	} else {
		(*_self_)._field_e.get()._field_prefix=nullptr;
	};
	_58317_d=_1c976602b_eval_expr_kind((*_self_)._field_e, jule::Any(_58046_arg.get()._field_kind));
	(*_self_)._field_e.get()._field_prefix=_58117_old;
	(*_self_)._field_e.get()._field_immutable=_58213_old_immut;
	if ((_58317_d == nullptr)) {
		_58060_ok = false;
		return _58060_ok;
	};
	(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(jule::Any(_58317_d));;
	_58060_ok = _1c973db80_check_arg(&(*_self_), _58028_p,_58317_d,_58046_arg.get()._field_token);
	return _58060_ok;
}



inline jule::Bool _1c973e3de_push_variadic(_1c973c83d_FnCallArgChecker* _self_, jule::Ptr<_1e438217c_ParamIns>& _60437_p, jule::I64 _60455_i) {
	jule::Bool _60465_ok = jule::Bool();
	_60465_ok=true;
	jule::Bool _60617_variadiced = false;;
	jule::Bool _60713_more = ((_60455_i + 1LL) < (*_self_)._field_args.len());;
	jule::Ptr<_1e4354ade_SliceExprModel> _60817_model = jule::new_ptr<_1e4354ade_SliceExprModel>(_1e4354ade_SliceExprModel{._field_elem_kind=_60437_p.get()._field_kind, });;
	jule::Ptr<_1c97746ee_TypeKind> _61217_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _61713_variadic = _60437_p.get()._field_kind.get()._field_variadic;;
	_60437_p.get()._field_kind.get()._field_variadic=false;
	__JULE_DEFER({
		_60437_p.get()._field_kind.get()._field_variadic=_61713_variadic;
	});;
	for (; (_60455_i < (*_self_)._field_args.len()); (_60455_i)++) {
		{
			jule::Ptr<_1e43659e0_Expr> _62421_arg = (*_self_)._field_args[_60455_i];;
			{
				auto &_match_expr{ _62421_arg.get()._field_kind };
				
				if (_match_expr.type_is<jule::Ptr<_1e4368251_VariadicExpr>>()) {
					_case_begin_1cbea2886:;
					{
						(*_self_)._field_e.get()._field_prefix=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(jule::new_ptr<_1c977cdbc_Slc>(_1c977cdbc_Slc{._field_elem=_60437_p.get()._field_kind}), 7)});
					}
				}
				else {
					_case_begin_1cbea2de7:;
					{
						(*_self_)._field_e.get()._field_prefix=_60437_p.get()._field_kind;
					}
				}
				_match_end_1cbea2d92:;
			};
			jule::Ptr<_1c974abc0_Data> _63721_d = _1c9766339_eval((*_self_)._field_e, _62421_arg);;
			if ((_63721_d == nullptr)) {
				_60465_ok=false;
				goto _iter_next_1cbea2556;
			};
			if (_63721_d.get()._field_kind.get()._field_variadic) {
				_60617_variadiced=true;
				{
					auto &_match_expr{ _63721_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1e4354ade_SliceExprModel>>()) {
						_case_begin_1cbea513b:;
						{
							_60817_model=_63721_d.get()._field_model.operator jule::Ptr<_1e4354ade_SliceExprModel>();
							_60817_model.get()._field_elem_kind=_60437_p.get()._field_kind;
						}
					}
					else {
						_case_begin_1cbea556a:;
						{
							_60817_model=nullptr;
							(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(jule::Any(_63721_d));;
						}
					}
					_match_end_1cbea5515:;
				};
				_60437_p.get()._field_kind.get()._field_variadic=true;
				_60465_ok=(_60465_ok && _1c973db80_check_arg(&(*_self_), _60437_p,_63721_d,_62421_arg.get()._field_token));
				(_60455_i)++;
				goto _iter_end_1cbea2556;
			};
			_60465_ok=(_60465_ok && _1c973db80_check_arg(&(*_self_), _60437_p,_63721_d,_62421_arg.get()._field_token));
			_60817_model.get()._field_elems = jule::alloc_for_append(_60817_model.get()._field_elems,1);_60817_model.get()._field_elems.__push(jule::Any(_63721_d.get()._field_model));;
		}
	_iter_next_1cbea2556:;
	}
	_iter_end_1cbea2556:;;
	(*_self_)._field_e.get()._field_prefix=_61217_old;
	if ((_60617_variadiced && _60713_more)) {
		_1c973cd8d_push_err_token(&(*_self_), (*_self_)._field_args[_60455_i].get()._field_token,jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>());
	};
	if ((_60817_model != nullptr)) {
		(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(jule::Any(_60817_model));;
	};
	return _60465_ok;
}



inline jule::Bool _1c973e6ec_check_args(_1c973c83d_FnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1e438217c_ParamIns>>& _68334_params) {
	jule::Bool _68357_ok = jule::Bool();
	jule::Bool _68413_arg = (*_self_)._field_e.get()._field_arg;;
	(*_self_)._field_e.get()._field_arg=true;
	_68357_ok=true;
	jule::I64 _68817_i = 0LL;;
	if (((_68334_params.len() > 0LL) && _1e435279b_is_self(_68334_params[0LL].get()._field_decl.ptr()))) {
		(_68817_i)++;
	};
	_julec_label_iter:;
	while ((_68817_i < _68334_params.len())) {
		{
			jule::Ptr<_1e438217c_ParamIns> _69521_p = _68334_params[_68817_i];;
			{
				
				if (_69521_p.get()._field_decl.get()._field_variadic) {
					_case_begin_1cbead5ea:;
					{
						_68357_ok=(_1c973e3de_push_variadic(&(*_self_), _69521_p,_68817_i) && _68357_ok);
						goto _iter_end_1cbeab54e;
					}
				}
				else if (((*_self_)._field_args.len() <= _68817_i)) {
					_case_begin_1cbeacc26:;
					{
						_68357_ok=false;
						goto _iter_end_1cbeab54e;
					}
				}
				else {
					_case_begin_1cbeac8a2:;
					{
						_68357_ok=(_1c973e037_push(&(*_self_), _69521_p,(*_self_)._field_args[_68817_i]) && _68357_ok);
					}
				}
				_match_end_1cbeac83b:;
			};
			(_68817_i)++;
		}
	_iter_next_1cbeab54e:;
	}
	_iter_end_1cbeab54e:;;
	(*_self_)._field_e.get()._field_arg=_68413_arg;
	return _68357_ok;
}



inline jule::Bool _1c973e983_check_dynamic_type_annotation(_1c973c83d_FnCallArgChecker* _self_) {
	jule::Bool _71450_ok = jule::Bool();
	{
		auto &expr = (*_self_)._field_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1cbeb05b9:;
		if (it != expr.end()) {
			jule::Ptr<_1c97746ee_TypeKind> _71516_g = *it;
			{
				if ((_71516_g == nullptr)) {
					_1c973d1ac_push_err(&(*_self_), jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
					_71450_ok = false;
					return _71450_ok;
				};
			}
			_iter_next_1cbeb05b9:;
			++it;
			goto _iter_begin_1cbeb05b9;
		}
		_iter_end_1cbeb05b9:;
	};
	_71450_ok = true;
	return _71450_ok;
}



inline jule::Bool _1c973ec08_check(_1c973c83d_FnCallArgChecker* _self_) {
	jule::Bool _72426_ok = jule::Bool();
	jule::Slice<jule::Ptr<_1e438217c_ParamIns>> _72517_params = _1c973d421_get_params(&(*_self_));;
	_72426_ok=_1c973d72e_check_counts(&(*_self_), _72517_params);
	if ((!(_72426_ok))) {
		_72426_ok = false;
		return _72426_ok;
	};
	_72426_ok=_1c973e6ec_check_args(&(*_self_), _72517_params);
	if ((_72426_ok && (*_self_)._field_dynamic_annotation)) {
		_72426_ok=_1c973e983_check_dynamic_type_annotation(&(*_self_));
	};
	return _72426_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1c973c83d_FnCallArgChecker _Src) {
	_Stream << "FnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamic_annotation:" << _Src._field_dynamic_annotation << ", ";
	_Stream << "arg_models:" << _Src._field_arg_models;
	_Stream << "}";
	return _Stream;
}



inline void _1c9740753_push_err(_1c9740247_StructLitChecker* _self_, jule::Ptr<_20cd9e6ec_Token> _74827_token, jule::Str _74842_fmt, jule::Slice<jule::Any> _74855_args) {
	_1c974cc16_push_err((*_self_)._field_e.ptr(), _74827_token,_74842_fmt,jule::Any(_74855_args));
}



inline void _1c9740a72_push_suggestion(_1c9740247_StructLitChecker* _self_, jule::Str _75334_fmt, jule::Slice<jule::Any> _75347_args) {
	_1c974d035_push_suggestion((*_self_)._field_e.ptr(), _75334_fmt,jule::Any(_75347_args));
}



inline void _1c9740e3a_push_match(_1c9740247_StructLitChecker* _self_, jule::Ptr<_1e434014b_FieldIns>& _75734_f, jule::Ptr<_1c974abc0_Data>& _75753_d, jule::Ptr<_20cd9e6ec_Token>& _75768_error_token) {
	;
	if (_1e46b6e73_check_validity_for_init_expr((*_self_)._field_e.get()._field_s, (!((*_self_)._field_e.get()._field_immutable)),false,_75734_f.get()._field_kind,_75753_d,_75768_error_token)) {
		_1e46b516e_check_assign_type((*_self_)._field_e.get()._field_s, false,_75734_f.get()._field_kind,_75753_d,_75768_error_token);
	};
	(*_self_)._field_args = jule::alloc_for_append((*_self_)._field_args,1);(*_self_)._field_args.__push(jule::new_ptr<_1e433773c_StructArgExprModel>(_1e433773c_StructArgExprModel{._field_field=_75734_f, ._field_expr=jule::Any(_75753_d.get()._field_model)}));;
}



inline void _1c9741259_check_pair(_1c9740247_StructLitChecker* _self_, jule::Ptr<_1e436a4c8_FieldExprPair>& _77034_pair, jule::Slice<jule::Ptr<_1e43659e0_Expr>>& _77061_exprs) {
	jule::Ptr<_1e434014b_FieldIns> _77217_f = _1e4356b35_find_field((*_self_)._field_s.ptr(), _77034_pair.get()._field_field.get()._field_kind);;
	if ((_77217_f == nullptr)) {
		_1c9740753_push_err(&(*_self_), _77034_pair.get()._field_field,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_77034_pair.get()._field_field.get()._field_kind)}));
		return;;
	};
	if ((!(_1e46b0543_is_accessible_define((*_self_)._field_e.get()._field_s.ptr(), _77217_f.get()._field_decl.get()._field_public,_77217_f.get()._field_decl.get()._field_token)))) {
		_1c9740753_push_err(&(*_self_), _77034_pair.get()._field_field,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_77034_pair.get()._field_field.get()._field_kind)}));
		_1c9740a72_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	_julec_label_dup_lookup:;
	{
		auto &expr = _77061_exprs;
		auto it = expr.begin();
		_iter_begin_1cbebe166:;
		if (it != expr.end()) {
			jule::Ptr<_1e43659e0_Expr> _78421_expr = *it;
			{
				{
					auto &_match_expr{ _78421_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1e436a4c8_FieldExprPair>>()) {
						_case_begin_1cbebea6d:;
						{
							jule::Ptr<_1e436a4c8_FieldExprPair> _78725_dpair = _78421_expr.get()._field_kind.operator jule::Ptr<_1e436a4c8_FieldExprPair>();;
							{
								
								if ((_77034_pair == _78725_dpair)) {
									_case_begin_1cbec0871:;
									{
										goto _iter_end_1cbebe166;
									}
								}
								else if ((_77034_pair.get()._field_field.get()._field_kind == _78725_dpair.get()._field_field.get()._field_kind)) {
									_case_begin_1cbec08e8:;
									{
										_1c9740753_push_err(&(*_self_), _77034_pair.get()._field_field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>::make({jule::Any(_77034_pair.get()._field_field.get()._field_kind)}));
										goto _iter_end_1cbebe166;
									}
								}
								_match_end_1cbec07b6:;
							};
						}
					}
					_match_end_1cbeba6d4:;
				};
			}
			_iter_next_1cbebe166:;
			++it;
			goto _iter_begin_1cbebe166;
		}
		_iter_end_1cbebe166:;
	};
	jule::Ptr<_1c97746ee_TypeKind> _79817_prefix = (*_self_)._field_e.get()._field_prefix;;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_79817_prefix;
	});;
	(*_self_)._field_e.get()._field_prefix=_77217_f.get()._field_kind;
	jule::Ptr<_1c974abc0_Data> _80217_d = _1c976602b_eval_expr_kind((*_self_)._field_e, jule::Any(_77034_pair.get()._field_expr));;
	if ((_80217_d == nullptr)) {
		return;;
	};
	_1c9740e3a_push_match(&(*_self_), _77217_f,_80217_d,_77034_pair.get()._field_field);
}



inline jule::Bool _1c9741567_ready_exprs(_1c9740247_StructLitChecker* _self_, jule::Slice<jule::Ptr<_1e43659e0_Expr>>& _80935_exprs) {
	jule::Bool _81017_ok = true;;
	{
		auto &expr = _80935_exprs;
		auto it = expr.begin();
		_iter_begin_1cbec4a51:;
		if (it != expr.end()) {
			jule::I64 _81114_i = it - expr.begin();
			jule::Ptr<_1e43659e0_Expr> _81121_expr = *it;
			{
				{
					auto &_match_expr{ _81121_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1e436b9e6_KeyValPair>>()) {
						_case_begin_1cbec5656:;
						{
							jule::Ptr<_1e436b9e6_KeyValPair> _81425_pair = _81121_expr.get()._field_kind.operator jule::Ptr<_1e436b9e6_KeyValPair>();;
							{
								auto &_match_expr{ _81425_pair.get()._field_key.get()._field_kind };
								
								if (_match_expr.type_is<jule::Ptr<_1e4367690_IdentExpr>>()) {
									_case_begin_1cbec72b2:;
									{
										goto _match_end_1cbec658b;
									}
								}
								else {
									_case_begin_1cbec6613:;
									{
										_1c9740753_push_err(&(*_self_), _81425_pair.get()._field_colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
										_81017_ok=false;
										goto _iter_next_1cbec4a51;
									}
								}
								_match_end_1cbec658b:;
							};
							_80935_exprs[_81114_i].get()._field_kind=jule::Any(jule::new_ptr<_1e436a4c8_FieldExprPair>(_1e436a4c8_FieldExprPair{._field_field=_81425_pair.get()._field_key.get()._field_token, ._field_expr=_81425_pair.get()._field_val}));
						}
					}
					_match_end_1cbec55bd:;
				};
			}
			_iter_next_1cbec4a51:;
			++it;
			_81114_i++;
			goto _iter_begin_1cbec4a51;
		}
		_iter_end_1cbec4a51:;
	};
	return _81017_ok;
}



inline void _1c97417dc_check(_1c9740247_StructLitChecker* _self_, jule::Slice<jule::Ptr<_1e43659e0_Expr>>& _83329_exprs) {
	if ((_83329_exprs.len() == 0LL)) {
		return;;
	};
	if ((!(_1c9741567_ready_exprs(&(*_self_), _83329_exprs)))) {
		return;;
	};
	jule::Bool _84217_paired = false;;
	{
		auto &expr = _83329_exprs;
		auto it = expr.begin();
		_iter_begin_1cbec924d:;
		if (it != expr.end()) {
			jule::I64 _84314_i = it - expr.begin();
			jule::Ptr<_1e43659e0_Expr> _84321_expr = *it;
			{
				{
					auto &_match_expr{ _84321_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1e436a4c8_FieldExprPair>>()) {
						_case_begin_1cbecec9d:;
						{
							jule::Ptr<_1e436a4c8_FieldExprPair> _84625_pair = _84321_expr.get()._field_kind.operator jule::Ptr<_1e436a4c8_FieldExprPair>();;
							if (((_84314_i > 0LL) && (!(_84217_paired)))) {
								_1c9740753_push_err(&(*_self_), _84625_pair.get()._field_field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							};
							_84217_paired=true;
							_1c9741259_check_pair(&(*_self_), _84625_pair,_83329_exprs);
						}
					}
					else {
						_case_begin_1cbec9d0e:;
						{
							if (_84217_paired) {
								_1c9740753_push_err(&(*_self_), _84321_expr.get()._field_token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>());
							};
							if ((_84314_i >= (*_self_)._field_s.get()._field_fields.len())) {
								_1c9740753_push_err(&(*_self_), _84321_expr.get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
								goto _iter_next_1cbec924d;
							};
							jule::Ptr<_1e434014b_FieldIns> _86125_field = (*_self_)._field_s.get()._field_fields[_84314_i];;
							if ((!(_1e46b0543_is_accessible_define((*_self_)._field_e.get()._field_s.ptr(), _86125_field.get()._field_decl.get()._field_public,_86125_field.get()._field_decl.get()._field_token)))) {
								_1c9740753_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("structure cannot instantiating because it has non-public fields", 63),jule::Slice<jule::Any>());
								_1c9740a72_push_suggestion(&(*_self_), jule::Str("use field:expression pairs to instantiate", 41),jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1c97746ee_TypeKind> _86925_prefix = (*_self_)._field_e.get()._field_prefix;;
							__JULE_DEFER({
								(*_self_)._field_e.get()._field_prefix=_86925_prefix;
							});;
							(*_self_)._field_e.get()._field_prefix=_86125_field.get()._field_kind;
							jule::Ptr<_1c974abc0_Data> _87325_d = _1c976602b_eval_expr_kind((*_self_)._field_e, jule::Any(_84321_expr.get()._field_kind));;
							if ((_87325_d == nullptr)) {
								goto _iter_next_1cbec924d;
							};
							_1c9740e3a_push_match(&(*_self_), _86125_field,_87325_d,_84321_expr.get()._field_token);
						}
					}
					_match_end_1cbec9ca9:;
				};
			}
			_iter_next_1cbec924d:;
			++it;
			_84314_i++;
			goto _iter_begin_1cbec924d;
		}
		_iter_end_1cbec924d:;
	};
	if ((!(_84217_paired))) {
		jule::I64 _88417_n = (*_self_)._field_s.get()._field_fields.len();;
		jule::I64 _88521_diff = (_88417_n - _83329_exprs.len());;
		{
			
			if ((_88521_diff <= 0LL)) {
				_case_begin_1cbed2d5b:;
				{
					return;;
				}
			}
			_match_end_1cbed2c4b:;
		};
		jule::Str _89121_idents = jule::Str();;
		for (; (_88521_diff > 0LL); (_88521_diff)--) {
			{
				_89121_idents+=(jule::Str(", ", 2) + (*_self_)._field_s.get()._field_fields[(_88417_n - _88521_diff)].get()._field_decl.get()._field_ident);
			}
		_iter_next_1cbec9a12:;
		}
		_iter_end_1cbec9a12:;;
		(_89121_idents).mut_slice(2LL);;
		_1c9740753_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_89121_idents)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c9740247_StructLitChecker _Src) {
	_Stream << "StructLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e46c6eb6_Var> _1c97422c1_build_var(_1c9741d2b_RangeChecker* _self_, jule::Ptr<_1e4372c83_VarDecl>& _91029_decl) {
	jule::Ptr<_1e46c6eb6_Var> _91117_v = _1e438a10d_build_var(_91029_decl);;
	return _91117_v;
}



inline void _1c974249c_set_size_key(_1c9741d2b_RangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_key_a == nullptr) || _20cda1e4c_is_ignore_ident((*_self_)._field_rang.get()._field_key_a.get()._field_ident))) {
		return;;
	};
	(*_self_)._field_kind.get()._field_key_a=_1c97422c1_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_a);
	(*_self_)._field_kind.get()._field_key_a.get()._field_kind=jule::new_ptr<_1c977858d_TypeSymbol>(_1c977858d_TypeSymbol{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("int", 3)), 5)})});
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e46c6eb6_Var>>()) {
			_case_begin_1cbed80c5:;
			{
				(*_self_)._field_kind.get()._field_key_a.get()._field_iter_relation=jule::new_ptr<_1e46c5ee8_IterRelation>(_1e46c5ee8_IterRelation{._field_range=(*_self_)._field_d.get()._field_model.operator jule::Ptr<_1e46c6eb6_Var>()});
			}
		}
		_match_end_1cbed803c:;
	};
}



inline void _1c9742887_check_range_expr_validity(_1c9741d2b_RangeChecker* _self_, jule::Ptr<_1c974abc0_Data>& _94149_d, jule::Ptr<_1e46c6eb6_Var>& _94160_key, jule::Ptr<_1c97746ee_TypeKind>& _94176_k) {
	jule::Bool _94217__mut = _94160_key.get()._field_mutable;;
	if ((_94217__mut && (!(_1c9775a96_mutable(_94176_k.ptr()))))) {
		_94217__mut=false;
	};
	_1e46b6e73_check_validity_for_init_expr((*_self_)._field_sc.get()._field_s, _94217__mut,_94160_key.get()._field_reference,_94160_key.get()._field_kind.get()._field_kind,_94149_d,(*_self_)._field_rang.get()._field_in_token);
}



inline void _1c9742a74_check_slice(_1c9741d2b_RangeChecker* _self_) {
	_1c974249c_set_size_key(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_key_b == nullptr) || _20cda1e4c_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident))) {
		return;;
	};
	jule::Ptr<_1c977cdbc_Slc> _96017_slc = _1c97774c1_slc((*_self_)._field_d.get()._field_kind.ptr());;
	(*_self_)._field_kind.get()._field_key_b=_1c97422c1_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1c977858d_TypeSymbol>(_1c977858d_TypeSymbol{._field_kind=_96017_slc.get()._field_elem});
	_1c9742887_check_range_expr_validity(&(*_self_), (*_self_)._field_d,(*_self_)._field_kind.get()._field_key_b,_96017_slc.get()._field_elem);
}



inline void _1c9742c50_check_array(_1c9741d2b_RangeChecker* _self_) {
	_1c974249c_set_size_key(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_key_b == nullptr) || _20cda1e4c_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident))) {
		return;;
	};
	jule::Ptr<_1c9780067_Arr> _97317_arr = _1c977725c_arr((*_self_)._field_d.get()._field_kind.ptr());;
	(*_self_)._field_kind.get()._field_key_b=_1c97422c1_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1c977858d_TypeSymbol>(_1c977858d_TypeSymbol{._field_kind=_97317_arr.get()._field_elem});
	_1c9742887_check_range_expr_validity(&(*_self_), (*_self_)._field_d,(*_self_)._field_kind.get()._field_key_b,_97317_arr.get()._field_elem);
}



inline void _1c9742e2b_check_map_key_a(_1c9741d2b_RangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_key_a == nullptr) || _20cda1e4c_is_ignore_ident((*_self_)._field_rang.get()._field_key_a.get()._field_ident))) {
		return;;
	};
	jule::Ptr<_1c977e473_Map> _98517_m = _1c9777e72_map((*_self_)._field_d.get()._field_kind.ptr());;
	(*_self_)._field_kind.get()._field_key_a=_1c97422c1_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_a);
	(*_self_)._field_kind.get()._field_key_a.get()._field_kind=jule::new_ptr<_1c977858d_TypeSymbol>(_1c977858d_TypeSymbol{._field_kind=_98517_m.get()._field_key});
	jule::Ptr<_1c974abc0_Data> _98917_d = jule::new_ptr<_1c974abc0_Data>((*((*_self_)._field_d)));;
	_98917_d.get()._field_kind=_98517_m.get()._field_key;
	_1c9742887_check_range_expr_validity(&(*_self_), _98917_d,(*_self_)._field_kind.get()._field_key_a,_98517_m.get()._field_key);
}



inline void _1c9743107_check_map_key_b(_1c9741d2b_RangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_key_b == nullptr) || _20cda1e4c_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident))) {
		return;;
	};
	jule::Ptr<_1c977e473_Map> _100017_m = _1c9777e72_map((*_self_)._field_d.get()._field_kind.ptr());;
	(*_self_)._field_kind.get()._field_key_b=_1c97422c1_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1c977858d_TypeSymbol>(_1c977858d_TypeSymbol{._field_kind=_100017_m.get()._field_val});
	jule::Ptr<_1c974abc0_Data> _100417_d = jule::new_ptr<_1c974abc0_Data>((*((*_self_)._field_d)));;
	_100417_d.get()._field_kind=_100017_m.get()._field_val;
	_1c9742887_check_range_expr_validity(&(*_self_), _100417_d,(*_self_)._field_kind.get()._field_key_b,_100017_m.get()._field_val);
}



inline void _1c97432d3_check_map(_1c9741d2b_RangeChecker* _self_) {
	_1c9742e2b_check_map_key_a(&(*_self_));
	_1c9743107_check_map_key_b(&(*_self_));
}



inline void _1c97434ae_check_str(_1c9741d2b_RangeChecker* _self_) {
	_1c974249c_set_size_key(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_key_b == nullptr) || _20cda1e4c_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident))) {
		return;;
	};
	(*_self_)._field_kind.get()._field_key_b=_1c97422c1_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1c977858d_TypeSymbol>(_1c977858d_TypeSymbol{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("u8", 2)), 5)})});
}



inline jule::Bool _1c9743723_check(_1c9741d2b_RangeChecker* _self_) {
	{
		
		if ((*_self_)._field_d.get()._field_kind.get()._field_variadic) {
			_case_begin_1cbeed65c:;
		}
		else if ((_1c97774c1_slc((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cbeed6c3:;
			{
				_1c9742a74_check_slice(&(*_self_));
				return true;
			}
		}
		else if ((_1c977725c_arr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cbeed739:;
			{
				_1c9742c50_check_array(&(*_self_));
				return true;
			}
		}
		else if ((_1c9777e72_map((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cbeed7a0:;
			{
				_1c97432d3_check_map(&(*_self_));
				return true;
			}
		}
		else {
			_case_begin_1cbeed5e6:;
			{
				jule::Ptr<_1c9778e51_Prim> _104317_prim = _1c97767ab_prim((*_self_)._field_d.get()._field_kind.ptr());;
				if (((_104317_prim != nullptr) && _1c977be10_is_str(_104317_prim.ptr()))) {
					_1c97434ae_check_str(&(*_self_));
					return true;
				};
			}
		}
		_match_end_1cbeed52a:;
	};
	_1e46aed6c_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_rang.get()._field_in_token,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>());
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1c9741d2b_RangeChecker _Src) {
	_Stream << "RangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1c974446b_prepare_types(_1c9743eb5_RetTypeChecker* _self_) {
	if (((*_self_)._field_f != nullptr)) {
		(*_self_)._field_types=_1e4383a30_types((*_self_)._field_f.ptr());
	};
}



inline void _1c97446e1_prepare_exprs(_1c9743eb5_RetTypeChecker* _self_, jule::Ptr<_1e43659e0_Expr>& _107237_e) {
	if ((_107237_e == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _107237_e.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e4366183_TupleExpr>>()) {
			_case_begin_1cc004ad6:;
			{
				(*_self_)._field_exprs=_107237_e.get()._field_kind.operator jule::Ptr<_1e4366183_TupleExpr>().get()._field_expr;
			}
		}
		else {
			_case_begin_1cc004c3a:;
			{
				(*_self_)._field_exprs = jule::alloc_for_append((*_self_)._field_exprs,1);(*_self_)._field_exprs.__push(_107237_e);;
			}
		}
		_match_end_1cc0048b6:;
	};
}



inline void _1c97448bc_ret_vars(_1c9743eb5_RetTypeChecker* _self_) {
	if ((((*_self_)._field_f == nullptr) || _1e43807c9_is_void((*_self_)._field_f.get()._field_decl.ptr()))) {
		return;;
	};
	(*_self_)._field_vars=jule::Slice<jule::Ptr<_1e46c6eb6_Var>>::alloc(0LL,(*_self_)._field_f.get()._field_decl.get()._field_result.get()._field_idents.len());
	jule::Ptr<_1e468ce7c_ScopeChecker> _109017_root_scope = _1e4690ca4_get_root((*_self_)._field_sc);;
	jule::I64 _109217_j = 0LL;;
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_1cc008315:;
		if (it != expr.end()) {
			jule::I64 _109313_i = it - expr.begin();
			jule::Ptr<_20cd9e6ec_Token> _109316_ident = *it;
			{
				if (((!(_20cda1e4c_is_ignore_ident(_109316_ident.get()._field_kind))) && (!(_20cda21e4_is_anon_ident(_109316_ident.get()._field_kind))))) {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(_109017_root_scope.get()._field_table.get()._field_vars[_109217_j]);;
					(_109217_j)++;
				} else {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(jule::new_ptr<_1e46c6eb6_Var>(_1e46c6eb6_Var{._field_ident=jule::Str("_", 1), ._field_kind=jule::new_ptr<_1c977858d_TypeSymbol>(_1c977858d_TypeSymbol{._field_kind=(*_self_)._field_types[_109313_i]}), }));;
				};
			}
			_iter_next_1cc008315:;
			++it;
			_109313_i++;
			goto _iter_begin_1cc008315;
		}
		_iter_end_1cc008315:;
	};
	if ((_109217_j == 0LL)) {
		(*_self_)._field_vars=nullptr;
	};
}



inline void _1c9744a98_check_exprs(_1c9743eb5_RetTypeChecker* _self_) {
	if (((*_self_)._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1c974abc0_Data>> _111617_datas = jule::Slice<jule::Ptr<_1c974abc0_Data>>::alloc(0LL,(*_self_)._field_exprs.len());;
	{
		auto &expr = (*_self_)._field_exprs;
		auto it = expr.begin();
		_iter_begin_1cc00c2b4:;
		if (it != expr.end()) {
			jule::I64 _111814_i = it - expr.begin();
			jule::Ptr<_1e43659e0_Expr> _111821_expr = *it;
			{
				if ((_111814_i >= (*_self_)._field_types.len())) {
					goto _iter_end_1cc00c2b4;
				};
				jule::Ptr<_1c97746ee_TypeKind> _112321_t = (*_self_)._field_types[_111814_i];;
				jule::Ptr<_1c974abc0_Data> _112521_d = _1c9766647_eval_expr(_1e46b4866_evalp((*_self_)._field_sc.get()._field_s, jule::Trait<_1c978dc35_Lookup>((*_self_)._field_sc, 0),_112321_t), _111821_expr);;
				if ((_112521_d == nullptr)) {
					goto _iter_next_1cc00c2b4;
				};
				_111617_datas = jule::alloc_for_append(_111617_datas,1);_111617_datas.__push(_112521_d);;
				if (((!(_112521_d.get()._field_mutable)) && _1c9775a96_mutable(_112521_d.get()._field_kind.ptr()))) {
					_1e46aed6c_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>());
					return;;
				};
				_1c973822e_AssignTypeChecker _113721_ac = _1c973822e_AssignTypeChecker{._field_s=(*_self_)._field_sc.get()._field_s, ._field_dest=_112321_t, ._field_d=_112521_d, ._field_error_token=(*_self_)._field_error_token};;
				_1c97393a6_check(&_113721_ac);
			}
			_iter_next_1cc00c2b4:;
			++it;
			_111814_i++;
			goto _iter_begin_1cc00c2b4;
		}
		_iter_end_1cc00c2b4:;
	};
	if ((_111617_datas.len() > 1LL)) {
		(*_self_)._field_model=jule::Any(jule::new_ptr<_1e437cb6c_TupleExprModel>(_1e437cb6c_TupleExprModel{._field_datas=_111617_datas}));
	} else if ((_111617_datas.len() == 1LL)) {
		(*_self_)._field_model=jule::Any(_111617_datas[0LL].get()._field_model);
	};
}



inline jule::Bool _1c9744da6_check(_1c9743eb5_RetTypeChecker* _self_, jule::Ptr<_1e43659e0_Expr>& _115629_e) {
	_1c974446b_prepare_types(&(*_self_));
	_1c97446e1_prepare_exprs(&(*_self_), _115629_e);
	_1c97448bc_ret_vars(&(*_self_));
	jule::I64 _116113_n = (*_self_)._field_exprs.len();;
	if (((_116113_n == 0LL) && ((*_self_)._field_types.len() > 0LL))) {
		if ((!(_1e43814de_any_var((*_self_)._field_f.get()._field_decl.ptr())))) {
			_1e46aed6c_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>());
			return false;
		};
		return true;
	};
	if ((((_116113_n > 0LL) && ((*_self_)._field_f != nullptr)) && _1e43807c9_is_void((*_self_)._field_f.get()._field_decl.ptr()))) {
		_1e46aed6c_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>());
		return false;
	};
	if ((_116113_n > (*_self_)._field_types.len())) {
		_1e46aed6c_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>());
	} else if ((_116113_n < (*_self_)._field_types.len())) {
		_1e46aed6c_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("missing return expressions for multi-return", 43),jule::Slice<jule::Any>());
	};
	_1c9744a98_check_exprs(&(*_self_));
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1c9743eb5_RetTypeChecker _Src) {
	_Stream << "RetTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e46a4768_ImportInfo> _1c974624d_find_package(_1c9745c42_SymbolTable* _self_, jule::Str _2535_ident) {
	{
		auto &expr = (*_self_)._field_imports;
		auto it = expr.begin();
		_iter_begin_1cc018ea2:;
		if (it != expr.end()) {
			jule::Ptr<_1e46a4768_ImportInfo> _2621_pkg = *it;
			{
				if ((_2621_pkg.get()._field_ident == _2535_ident)) {
					return _2621_pkg;
				};
			}
			_iter_next_1cc018ea2:;
			++it;
			goto _iter_begin_1cc018ea2;
		}
		_iter_end_1cc018ea2:;
	};
	return nullptr;
}



inline jule::Ptr<_1e46a4768_ImportInfo> _1c974655b_select_package(_1c9745c42_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_1e46a4768_ImportInfo>)> _3737_selector) {
	if ((_3737_selector == nullptr)) {
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_imports;
		auto it = expr.begin();
		_iter_begin_1cc01938c:;
		if (it != expr.end()) {
			jule::Ptr<_1e46a4768_ImportInfo> _4221_pkg = *it;
			{
				if (_3737_selector(_4221_pkg)) {
					return _4221_pkg;
				};
			}
			_iter_next_1cc01938c:;
			++it;
			goto _iter_begin_1cc01938c;
		}
		_iter_end_1cc01938c:;
	};
	return nullptr;
}



inline jule::Ptr<_1e46c6eb6_Var> _1c9746913_find_var(_1c9745c42_SymbolTable* _self_, jule::Str _5231_ident, jule::Bool _5243_cpp_linked) {
	return _1c97481b7___find_var(&(*_self_), _5231_ident,_5243_cpp_linked,false);
}



inline jule::Ptr<_1c97739b7_TypeAlias> _1c9746cba_find_type_alias(_1c9745c42_SymbolTable* _self_, jule::Str _5838_ident, jule::Bool _5850_cpp_linked) {
	return _1c9748618___find_type_alias(&(*_self_), _5838_ident,_5850_cpp_linked,false);
}



inline jule::Ptr<_1e43360cb_Struct> _1c9747172_find_struct(_1c9745c42_SymbolTable* _self_, jule::Str _6434_ident, jule::Bool _6446_cpp_linked) {
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_1cc01e161:;
		if (it != expr.end()) {
			jule::Ptr<_1e43360cb_Struct> _6521_s = *it;
			{
				if (((_6521_s.get()._field_ident == _6434_ident) && (_6521_s.get()._field_cpp_linked == _6446_cpp_linked))) {
					return _6521_s;
				};
			}
			_iter_next_1cc01e161:;
			++it;
			goto _iter_begin_1cc01e161;
		}
		_iter_end_1cc01e161:;
	};
	return nullptr;
}



inline jule::Ptr<_1e4380576_Fn> _1c9747529_find_fn(_1c9745c42_SymbolTable* _self_, jule::Str _7530_ident, jule::Bool _7542_cpp_linked) {
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1cc020bbd:;
		if (it != expr.end()) {
			jule::Ptr<_1e4380576_Fn> _7621_f = *it;
			{
				if (((_7621_f.get()._field_ident == _7530_ident) && (_7621_f.get()._field_cpp_linked == _7542_cpp_linked))) {
					return _7621_f;
				};
			}
			_iter_next_1cc020bbd:;
			++it;
			goto _iter_begin_1cc020bbd;
		}
		_iter_end_1cc020bbd:;
	};
	return nullptr;
}



inline jule::Ptr<_1e43d8d0a_Trait> _1c9747837_find_trait(_1c9745c42_SymbolTable* _self_, jule::Str _8633_ident) {
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_1cc02240b:;
		if (it != expr.end()) {
			jule::Ptr<_1e43d8d0a_Trait> _8721_t = *it;
			{
				if ((_8721_t.get()._field_ident == _8633_ident)) {
					return _8721_t;
				};
			}
			_iter_next_1cc02240b:;
			++it;
			goto _iter_begin_1cc02240b;
		}
		_iter_end_1cc02240b:;
	};
	return nullptr;
}



inline jule::Ptr<_1e4456b58_Enum> _1c9747b45_find_enum(_1c9745c42_SymbolTable* _self_, jule::Str _9732_ident) {
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_1cc02386e:;
		if (it != expr.end()) {
			jule::Ptr<_1e4456b58_Enum> _9821_e = *it;
			{
				if ((_9821_e.get()._field_ident == _9732_ident)) {
					return _9821_e;
				};
			}
			_iter_next_1cc02386e:;
			++it;
			goto _iter_begin_1cc02386e;
		}
		_iter_end_1cc02386e:;
	};
	return nullptr;
}



inline jule::Ptr<_1e46c6eb6_Var> _1c97481b7___find_var(_1c9745c42_SymbolTable* _self_, jule::Str _10829_ident, jule::Bool _10841_cpp_linked, jule::Bool _10859_reverse) {
	if (_10859_reverse) {
		jule::I64 _11021_i = ((*_self_)._field_vars.len() - 1LL);;
		for (; (_11021_i >= 0LL); (_11021_i)--) {
			{
				jule::Ptr<_1e46c6eb6_Var> _11225_v = (*_self_)._field_vars[_11021_i];;
				if (((_11225_v.get()._field_ident == _10829_ident) && (_11225_v.get()._field_cpp_linked == _10841_cpp_linked))) {
					return _11225_v;
				};
			}
		_iter_next_1cc025068:;
		}
		_iter_end_1cc025068:;;
	} else {
		{
			auto &expr = (*_self_)._field_vars;
			auto it = expr.begin();
			_iter_begin_1cc026982:;
			if (it != expr.end()) {
				jule::Ptr<_1e46c6eb6_Var> _11825_v = *it;
				{
					if (((_11825_v.get()._field_ident == _10829_ident) && (_11825_v.get()._field_cpp_linked == _10841_cpp_linked))) {
						return _11825_v;
					};
				}
				_iter_next_1cc026982:;
				++it;
				goto _iter_begin_1cc026982;
			}
			_iter_end_1cc026982:;
		};
	};
	return nullptr;
}



inline jule::Ptr<_1c97739b7_TypeAlias> _1c9748618___find_type_alias(_1c9745c42_SymbolTable* _self_, jule::Str _12736_ident, jule::Bool _12748_cpp_linked, jule::Bool _12766_reverse) {
	if (_12766_reverse) {
		jule::I64 _12921_i = ((*_self_)._field_type_aliases.len() - 1LL);;
		for (; (_12921_i >= 0LL); (_12921_i)--) {
			{
				jule::Ptr<_1c97739b7_TypeAlias> _13125_ta = (*_self_)._field_type_aliases[_12921_i];;
				if (((_13125_ta.get()._field_ident == _12736_ident) && (_13125_ta.get()._field_cpp_linked == _12748_cpp_linked))) {
					return _13125_ta;
				};
			}
		_iter_next_1cc02807c:;
		}
		_iter_end_1cc02807c:;;
	} else {
		{
			auto &expr = (*_self_)._field_type_aliases;
			auto it = expr.begin();
			_iter_begin_1cc029996:;
			if (it != expr.end()) {
				jule::Ptr<_1c97739b7_TypeAlias> _13725_ta = *it;
				{
					if (((_13725_ta.get()._field_ident == _12736_ident) && (_13725_ta.get()._field_cpp_linked == _12748_cpp_linked))) {
						return _13725_ta;
					};
				}
				_iter_next_1cc029996:;
				++it;
				goto _iter_begin_1cc029996;
			}
			_iter_end_1cc029996:;
		};
	};
	return nullptr;
}



inline jule::Any _1c97489c0_def_by_ident(_1c9745c42_SymbolTable* _self_, jule::Str _14831_ident, jule::Bool _14843_cpp_linked) {
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1cc02a9a8:;
		if (it != expr.end()) {
			jule::Ptr<_1e46c6eb6_Var> _14921_v = *it;
			{
				if (((_14921_v.get()._field_ident == _14831_ident) && (_14921_v.get()._field_cpp_linked == _14843_cpp_linked))) {
					return jule::Any(_14921_v);
				};
			}
			_iter_next_1cc02a9a8:;
			++it;
			goto _iter_begin_1cc02a9a8;
		}
		_iter_end_1cc02a9a8:;
	};
	{
		auto &expr = (*_self_)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1cc02b35a:;
		if (it != expr.end()) {
			jule::Ptr<_1c97739b7_TypeAlias> _15521_ta = *it;
			{
				if (((_15521_ta.get()._field_ident == _14831_ident) && (_15521_ta.get()._field_cpp_linked == _14843_cpp_linked))) {
					return jule::Any(_15521_ta);
				};
			}
			_iter_next_1cc02b35a:;
			++it;
			goto _iter_begin_1cc02b35a;
		}
		_iter_end_1cc02b35a:;
	};
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_1cc02c009:;
		if (it != expr.end()) {
			jule::Ptr<_1e43360cb_Struct> _16121_s = *it;
			{
				if (((_16121_s.get()._field_ident == _14831_ident) && (_16121_s.get()._field_cpp_linked == _14843_cpp_linked))) {
					return jule::Any(_16121_s);
				};
			}
			_iter_next_1cc02c009:;
			++it;
			goto _iter_begin_1cc02c009;
		}
		_iter_end_1cc02c009:;
	};
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1cc02cc85:;
		if (it != expr.end()) {
			jule::Ptr<_1e4380576_Fn> _16721_f = *it;
			{
				if (((_16721_f.get()._field_ident == _14831_ident) && (_16721_f.get()._field_cpp_linked == _14843_cpp_linked))) {
					return jule::Any(_16721_f);
				};
			}
			_iter_next_1cc02cc85:;
			++it;
			goto _iter_begin_1cc02cc85;
		}
		_iter_end_1cc02cc85:;
	};
	if (_14843_cpp_linked) {
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_1cc02d9cd:;
		if (it != expr.end()) {
			jule::Ptr<_1e43d8d0a_Trait> _17721_t = *it;
			{
				if ((_17721_t.get()._field_ident == _14831_ident)) {
					return jule::Any(_17721_t);
				};
			}
			_iter_next_1cc02d9cd:;
			++it;
			goto _iter_begin_1cc02d9cd;
		}
		_iter_end_1cc02d9cd:;
	};
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_1cc02eeeb:;
		if (it != expr.end()) {
			jule::Ptr<_1e4456b58_Enum> _18321_e = *it;
			{
				if ((_18321_e.get()._field_ident == _14831_ident)) {
					return jule::Any(_18321_e);
				};
			}
			_iter_next_1cc02eeeb:;
			++it;
			goto _iter_begin_1cc02eeeb;
		}
		_iter_end_1cc02eeeb:;
	};
	return nullptr;
}



inline jule::Bool _1c9748e21_is_duplicated_ident(_1c9745c42_SymbolTable* _self_, jule::U64 _19534_itself, jule::Str _19551_ident, jule::Bool _19563_cpp_linked) {
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1cc030d43:;
		if (it != expr.end()) {
			jule::Ptr<_1e46c6eb6_Var> &_19616_v = *it;
			{
				if ((((static_cast<jule::U64>(_19616_v) != _19534_itself) && (_19616_v.get()._field_ident == _19551_ident)) && (_19616_v.get()._field_cpp_linked == _19563_cpp_linked))) {
					return true;
				};
			}
			_iter_next_1cc030d43:;
			++it;
			goto _iter_begin_1cc030d43;
		}
		_iter_end_1cc030d43:;
	};
	{
		auto &expr = (*_self_)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1cc0370ad:;
		if (it != expr.end()) {
			jule::Ptr<_1c97739b7_TypeAlias> &_20216_ta = *it;
			{
				if ((((static_cast<jule::U64>(_20216_ta) != _19534_itself) && (_20216_ta.get()._field_ident == _19551_ident)) && (_20216_ta.get()._field_cpp_linked == _19563_cpp_linked))) {
					return true;
				};
			}
			_iter_next_1cc0370ad:;
			++it;
			goto _iter_begin_1cc0370ad;
		}
		_iter_end_1cc0370ad:;
	};
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_1cc03133d:;
		if (it != expr.end()) {
			jule::Ptr<_1e43360cb_Struct> &_20816_s = *it;
			{
				if ((((static_cast<jule::U64>(_20816_s) != _19534_itself) && (_20816_s.get()._field_ident == _19551_ident)) && (_20816_s.get()._field_cpp_linked == _19563_cpp_linked))) {
					return true;
				};
			}
			_iter_next_1cc03133d:;
			++it;
			goto _iter_begin_1cc03133d;
		}
		_iter_end_1cc03133d:;
	};
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1cc03918c:;
		if (it != expr.end()) {
			jule::Ptr<_1e4380576_Fn> &_21416_f = *it;
			{
				if ((((static_cast<jule::U64>(_21416_f) != _19534_itself) && (_21416_f.get()._field_ident == _19551_ident)) && (_21416_f.get()._field_cpp_linked == _19563_cpp_linked))) {
					return true;
				};
			}
			_iter_next_1cc03918c:;
			++it;
			goto _iter_begin_1cc03918c;
		}
		_iter_end_1cc03918c:;
	};
	if (_19563_cpp_linked) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_1cc03a501:;
		if (it != expr.end()) {
			jule::Ptr<_1e43d8d0a_Trait> &_22416_t = *it;
			{
				if (((static_cast<jule::U64>(_22416_t) != _19534_itself) && (_22416_t.get()._field_ident == _19551_ident))) {
					return true;
				};
			}
			_iter_next_1cc03a501:;
			++it;
			goto _iter_begin_1cc03a501;
		}
		_iter_end_1cc03a501:;
	};
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_1cc039357:;
		if (it != expr.end()) {
			jule::Ptr<_1e4456b58_Enum> &_23016_e = *it;
			{
				if (((static_cast<jule::U64>(_23016_e) != _19534_itself) && (_23016_e.get()._field_ident == _19551_ident))) {
					return true;
				};
			}
			_iter_next_1cc039357:;
			++it;
			goto _iter_begin_1cc039357;
		}
		_iter_end_1cc039357:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1c9745c42_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "imports:" << _Src._field_imports << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "type_aliases:" << _Src._field_type_aliases << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "funcs:" << _Src._field_funcs << ", ";
	_Stream << "traits:" << _Src._field_traits << ", ";
	_Stream << "enums:" << _Src._field_enums << ", ";
	_Stream << "impls:" << _Src._field_impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c974b0aa_is_nil(_1c974abc0_Data* _self_) {
	return _1c97755bd_is_nil((*_self_)._field_kind.ptr());
}



inline jule::Bool _1c974b31e_is_void(_1c974abc0_Data* _self_) {
	return _1c9775832_void((*_self_)._field_kind.ptr());
}



inline jule::Bool _1c974b583_is_const(_1c974abc0_Data* _self_) {
	return ((*_self_)._field_constant != nullptr);
}



inline jule::Bool _1c974b891_good_operand(_1c974abc0_Data* _self_, jule::Ptr<_1c974abc0_Data>& _9436_other) {
	return ((((_1c97767ab_prim(_9436_other.get()._field_kind.ptr()) == nullptr) || (!(_1c977c174_is_any(_1c97767ab_prim(_9436_other.get()._field_kind.ptr()).ptr())))) && (_1c9777c0d_trt(_9436_other.get()._field_kind.ptr()) == nullptr)) && (!(_1c97755bd_is_nil((*_self_)._field_kind.ptr()))));
}







std::ostream &operator<<(std::ostream &_Stream, _1c974abc0_Data _Src) {
	_Stream << "Data{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "lvalue:" << _Src._field_lvalue << ", ";
	_Stream << "is_rune:" << _Src._field_is_rune << ", ";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "constant:" << _Src._field_constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c974bc48_Value _Src) {
	_Stream << "Value{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline void _1c974cc16_push_err(_1c974c73d_Eval* _self_, jule::Ptr<_20cd9e6ec_Token> _12227_token, jule::Str _12242_fmt, jule::Slice<jule::Any> _12255_args) {
	_1e46aed6c_push_err((*_self_)._field_s.ptr(), _12227_token,_12242_fmt,jule::Any(_12255_args));
}



inline void _1c974d035_push_suggestion(_1c974c73d_Eval* _self_, jule::Str _12734_fmt, jule::Slice<jule::Any> _12747_args) {
	_1e46b018b_push_suggestion((*_self_)._field_s.ptr(), _12734_fmt,jule::Any(_12747_args));
}



inline void _1c974d211_allow_builtin(_1c974c73d_Eval* _self_) {
	(*_self_)._field_dis_builtin=false;
}



inline void _1c974d3dc_disallow_builtin(_1c974c73d_Eval* _self_) {
	(*_self_)._field_dis_builtin=true;
}



inline jule::Bool _1c974d651_is_unsafe(_1c974c73d_Eval* _self_) {
	return (*_self_)._field_unsafety;
}



inline jule::Bool _1c974d8b5_is_global(_1c974c73d_Eval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1e46ac452_Sema>>()) {
			_case_begin_1cc043e99:;
			{
				return true;
			}
		}
		else {
			_case_begin_1cc04421e:;
			{
				return false;
			}
		}
		_match_end_1cc0441b9:;
	};
}



inline jule::Bool _1c974dbc3_apply_numeric_prefix(_1c974c73d_Eval* _self_, jule::Ptr<_1c974abc0_Data>& _15444_d) {
	if (((((_15444_d == nullptr) || (!(_1c974b583_is_const(_15444_d.ptr())))) || (_1c97767ab_prim(_15444_d.get()._field_kind.ptr()) == nullptr)) || ((*_self_)._field_prefix == nullptr))) {
		return false;
	};
	jule::Ptr<_1c9778e51_Prim> _16113_prim = _1c97767ab_prim((*_self_)._field_prefix.ptr());;
	if ((_16113_prim == nullptr)) {
		return false;
	};
	{
		
		if (_1e468414e_is_float(_1c97792b4_to_str(_16113_prim.ptr()))) {
			_case_begin_1cc046be4:;
			{
				_15444_d.get()._field_kind=jule::new_ptr<_1c97746ee_TypeKind>((*((*_self_)._field_prefix)));
				_1c968ed67_set_f64(_15444_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1c968e0ec_as_f64(_15444_d.get()._field_constant.ptr())));
			}
		}
		else if (_1e46837d0_is_sig_int(_1c97792b4_to_str(_16113_prim.ptr()))) {
			_case_begin_1cc046c5a:;
			{
				if ((!(_1c97368ae_sig_assignable(_1c97792b4_to_str(_16113_prim.ptr()),_15444_d)))) {
					return false;
				};
				_15444_d.get()._field_kind=jule::new_ptr<_1c97746ee_TypeKind>((*((*_self_)._field_prefix)));
				_1c968e372_set_i64(_15444_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1c968db24_as_i64(_15444_d.get()._field_constant.ptr())));
			}
		}
		else if (_1e4683abb_is_unsig_int(_1c97792b4_to_str(_16113_prim.ptr()))) {
			_case_begin_1cc046cc1:;
			{
				if ((!(_1c97369e1_unsig_assignable(_1c97792b4_to_str(_16113_prim.ptr()),_15444_d)))) {
					return false;
				};
				_15444_d.get()._field_kind=jule::new_ptr<_1c97746ee_TypeKind>((*((*_self_)._field_prefix)));
				_1c968e5e7_set_u64(_15444_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1c968dd88_as_u64(_15444_d.get()._field_constant.ptr())));
			}
		}
		_match_end_1cc046ed0:;
	};
	return true;
}



inline jule::Ptr<_1c974abc0_Data> _1c974de37_lit_nil(_1c974c73d_Eval* _self_) {
	jule::Ptr<_1c968bb88_Const> _19017_constant = static__1c968c815_new_nil();;
	return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=nullptr}), ._field_mutable=false, ._field_lvalue=false, ._field_model=jule::Any(_19017_constant), ._field_decl=false, ._field_constant=_19017_constant});
}



inline jule::Ptr<_1c974abc0_Data> _1c974e245_lit_str(_1c974c73d_Eval* _self_, jule::Ptr<_1e436665b_LitExpr>& _20123_l) {
	jule::Str _20217_s = _20123_l.get()._field_value.slice(1LL,(_20123_l.get()._field_value.len() - 1LL));;
	if (_20cda0a50_is_raw_str(_20123_l.get()._field_value)) {
		_20217_s=_1c9735946_to_raw_str(static_cast<jule::Slice<jule::U8>>(_20217_s));
	} else {
		_20217_s=_1c9735c32_to_str(static_cast<jule::Slice<jule::U8>>(_20217_s));
	};
	jule::Ptr<_1c968bb88_Const> _20817_constant = static__1c968c370_new_str(_20217_s);;
	return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("str", 3)), 5)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=jule::Any(_20817_constant), ._field_decl=false, ._field_constant=_20817_constant});
}



inline jule::Ptr<_1c974abc0_Data> _1c974e553_lit_bool(_1c974c73d_Eval* _self_, jule::Ptr<_1e436665b_LitExpr>& _22224_l) {
	jule::Ptr<_1c968bb88_Const> _22317_constant = static__1c968c0c8_new_bool((_22224_l.get()._field_value == jule::Str("true", 4)));;
	return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("bool", 4)), 5)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=jule::Any(_22317_constant), ._field_decl=false, ._field_constant=_22317_constant});
}



inline jule::Ptr<_1c974abc0_Data> _1c974e861_lit_rune(_1c974c73d_Eval* _self_, jule::Ptr<_1e436665b_LitExpr>& _23624_l) {
	;
	;
	jule::Str _24013_lt = _23624_l.get()._field_value.slice(1LL,(_23624_l.get()._field_value.len() - 1LL));;
	jule::I32 _24113_r = _1c973569e_to_rune(static_cast<jule::Slice<jule::U8>>(_24013_lt));;
	jule::Ptr<_1c974abc0_Data> _24217_data = jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_mutable=false, ._field_lvalue=false, ._field_decl=false, ._field_constant=static__1c968ab87_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_24113_r)))});;
	jule::Bool _25013_is_ascii = _1c9733acb_is_ascii(_24113_r);;
	if (_25013_is_ascii) {
		_24217_data.get()._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("u8", 2)), 5)});
	} else {
		_24217_data.get()._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("i32", 3)), 5)});
	};
	_24217_data.get()._field_model=jule::Any(jule::new_ptr<_1e437e8e9_RuneExprModel>(_1e437e8e9_RuneExprModel{._field_code=_24113_r}));
	_24217_data.get()._field_is_rune=true;
	return _24217_data;
}



inline jule::Ptr<_1c974abc0_Data> _1c974eb6e_lit_float(_1c974c73d_Eval* _self_, jule::Ptr<_1e436665b_LitExpr>& _26625_l) {
	;
	jule::F64 _26913_f = ({
		auto except = _1e5c2cc8a_parse_float(_26625_l.get()._field_value,64LL);
		(except.ok()) ? (except.result) : ({
			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1c968bb88_Const> _27017_constant = static__1c968c617_new_f64(_26913_f);;
	return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("f64", 3)), 5)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=jule::Any(_27017_constant), ._field_decl=false, ._field_constant=_27017_constant});
}



inline jule::Ptr<_1c974abc0_Data> _1c974ee7c_lit_int(_1c974c73d_Eval* _self_, jule::Ptr<_1e436665b_LitExpr>& _28427_l) {
	;
	jule::Str _28717_lit = _28427_l.get()._field_value;;
	jule::I64 _28817_base = 0LL;;
	{
		
		if (_20c83c443_has_prefix(_28717_lit,jule::Str("0x", 2))) {
			_case_begin_1cc05ae7d:;
			{
				(_28717_lit).mut_slice(2LL);;
				_28817_base=16LL;
			}
		}
		else if (_20c83c443_has_prefix(_28717_lit,jule::Str("0b", 2))) {
			_case_begin_1cc05b29c:;
			{
				(_28717_lit).mut_slice(2LL);;
				_28817_base=2LL;
			}
		}
		else if (_20c83c443_has_prefix(_28717_lit,jule::Str("0o", 2))) {
			_case_begin_1cc05ab70:;
			{
				(_28717_lit).mut_slice(2LL);;
				_28817_base=8LL;
			}
		}
		else if (((_28717_lit[0LL] == '0') && (_28717_lit.len() > 1LL))) {
			_case_begin_1cc05abd6:;
			{
				(_28717_lit).mut_slice(1LL);;
				_28817_base=8LL;
			}
		}
		else {
			_case_begin_1cc05ab09:;
			{
				_28817_base=10LL;
			}
		}
		_match_end_1cc05aa93:;
	};
	jule::Ptr<_1c974abc0_Data> _30817_d = jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_mutable=false, ._field_lvalue=false, ._field_decl=false, });;
	jule::Bool _31417_ok = true;;
	jule::I64 _31513_sig = ({
		auto except = _1e569a61a_parse_int(_28717_lit,_28817_base,64LL);
		(except.ok()) ? (except.result) : ({
			_31417_ok=false;
			0LL;
		});
	});;
	if (_31417_ok) {
		_30817_d.get()._field_constant=static__1c968ab87_new_i64(_31513_sig);
		_30817_d.get()._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("int", 3)), 5)});
	} else {
		jule::U64 _32517_unsig = ({
			auto except = _1e47dca05_parse_uint(_28717_lit,_28817_base,64LL);
			(except.ok()) ? (except.result) : ({
				_1c974cc16_push_err(&(*_self_), _28427_l.get()._field_token,jule::Str("arithmetic value overflow: this value too big", 45),jule::Slice<jule::Any>());
				_1c974d035_push_suggestion(&(*_self_), jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>());
				jule::MAX_U64;
			});
		});;
		_30817_d.get()._field_constant=static__1c968bd75_new_u64(_32517_unsig);
		_30817_d.get()._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("uint", 4)), 5)});
	};
	_30817_d.get()._field_model=jule::Any(_30817_d.get()._field_constant);
	if ((!(_1c974dbc3_apply_numeric_prefix(&(*_self_), _30817_d)))) {
		_1c976e980_fit_bitsize(_30817_d);
	};
	return _30817_d;
}



inline jule::Ptr<_1c974abc0_Data> _1c975028a_lit_num(_1c974c73d_Eval* _self_, jule::Ptr<_1e436665b_LitExpr>& _34627_l) {
	{
		
		if (_20cda1666_is_float(_34627_l.get()._field_value)) {
			_case_begin_1cb9039ad:;
			{
				return _1c974eb6e_lit_float(&(*_self_), _34627_l);
			}
		}
		else {
			_case_begin_1cb902e63:;
			{
				return _1c974ee7c_lit_int(&(*_self_), _34627_l);
			}
		}
		_match_end_1cb902d97:;
	};
}



inline jule::Ptr<_1c974abc0_Data> _1c9750598_eval_lit(_1c974c73d_Eval* _self_, jule::Ptr<_1e436665b_LitExpr> _35527_lit) {
	{
		
		if (_1e43669ad_is_nil(_35527_lit.ptr())) {
			_case_begin_1cb905075:;
			{
				return _1c974de37_lit_nil(&(*_self_));
			}
		}
		else if (_20cda07a8_is_str(_35527_lit.get()._field_value)) {
			_case_begin_1cb9050db:;
			{
				return _1c974e245_lit_str(&(*_self_), _35527_lit);
			}
		}
		else if (_20cda13be_is_bool(_35527_lit.get()._field_value)) {
			_case_begin_1cb904d11:;
			{
				return _1c974e553_lit_bool(&(*_self_), _35527_lit);
			}
		}
		else if (_20cda0ce7_is_rune(_35527_lit.get()._field_value)) {
			_case_begin_1cb904d77:;
			{
				return _1c974e861_lit_rune(&(*_self_), _35527_lit);
			}
		}
		else if (_20cda190d_is_num(_35527_lit.get()._field_value)) {
			_case_begin_1cb904ddd:;
			{
				return _1c975028a_lit_num(&(*_self_), _35527_lit);
			}
		}
		else {
			_case_begin_1cb90489e:;
			{
				return nullptr;
			}
		}
		_match_end_1cb9047d3:;
	};
}



inline jule::Any _1c97508a6_find_builtins(_1c974c73d_Eval* _self_, jule::Str _37232_ident) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1e46a4768_ImportInfo>>()) {
			_case_begin_1cb907ebd:;
			{
				jule::Any _37521_def = _1c976e771_find_builtins_import(_37232_ident,(*_self_)._field_lookup.operator jule::Ptr<_1e46a4768_ImportInfo>());;
				if ((_37521_def != nullptr)) {
					return jule::Any(_37521_def);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e46ac452_Sema>>()) {
			_case_begin_1cb908078:;
			{
				jule::Any _38021_def = _1c977040e_find_builtins_sema(_37232_ident,(*_self_)._field_lookup.operator jule::Ptr<_1e46ac452_Sema>());;
				if ((_38021_def != nullptr)) {
					return jule::Any(_38021_def);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e468ce7c_ScopeChecker>>()) {
			_case_begin_1cb9080de:;
			{
				jule::Any _38521_def = _1c977040e_find_builtins_sema(_37232_ident,(*_self_)._field_lookup.operator jule::Ptr<_1e468ce7c_ScopeChecker>().get()._field_s);;
				if ((_38521_def != nullptr)) {
					return jule::Any(_38521_def);
				};
			}
		}
		_match_end_1cb907e24:;
	};
	if ((*_self_)._field_dis_builtin) {
		return nullptr;
	};
	return jule::Any(_1c97c7c2a_find_builtin_def(_37232_ident));
}



inline jule::Any _1c9750c5d_get_def(_1c974c73d_Eval* _self_, jule::Str _39626_ident, jule::Bool _39638_cpp_linked) {
	if ((!(_39638_cpp_linked))) {
		jule::Ptr<_1e4456b58_Enum> _39821_enm = _1c978dc35_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1c978dae2_find_enum((*_self_)._field_lookup, _39626_ident);;
		if ((_39821_enm != nullptr)) {
			return jule::Any(_39821_enm);
		};
	};
	jule::Ptr<_1e46c6eb6_Var> _40417_v = _1c978dc35_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1c978c8b0_find_var((*_self_)._field_lookup, _39626_ident,_39638_cpp_linked);;
	if ((_40417_v != nullptr)) {
		return jule::Any(_40417_v);
	};
	jule::Ptr<_1e4380576_Fn> _40917_f = _1c978dc35_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1c978d4c6_find_fn((*_self_)._field_lookup, _39626_ident,_39638_cpp_linked);;
	if ((_40917_f != nullptr)) {
		return jule::Any(_40917_f);
	};
	jule::Ptr<_1e43360cb_Struct> _41417_s = _1c978dc35_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1c978d11e_find_struct((*_self_)._field_lookup, _39626_ident,_39638_cpp_linked);;
	if ((_41417_s != nullptr)) {
		return jule::Any(_41417_s);
	};
	jule::Ptr<_1c97739b7_TypeAlias> _41917_ta = _1c978dc35_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1c978cc67_find_type_alias((*_self_)._field_lookup, _39626_ident,_39638_cpp_linked);;
	if ((_41917_ta != nullptr)) {
		return jule::Any(_41917_ta);
	};
	return jule::Any(_1c97508a6_find_builtins(&(*_self_), _39626_ident));
}



inline void _1cb9219ba_push_reference(_1c974c73d_Eval* _self_, jule::Ptr<_1e4383018_FnIns>& _42741_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1e468ce7c_ScopeChecker>>()) {
			_case_begin_1cb923439:;
			{
				jule::Ptr<_1e468ce7c_ScopeChecker> _43021_sc = _1e4691018_get_hard_root((*_self_)._field_lookup.operator jule::Ptr<_1e468ce7c_ScopeChecker>());;
				if ((!(_1cb92411b_exist(_43021_sc.get()._field_owner.get()._field_refers.ptr(), _42741_ref)))) {
					_1e4386934_push(_43021_sc.get()._field_owner.get()._field_refers.ptr(), jule::Any(_42741_ref));
				};
			}
		}
		else {
			_case_begin_1cb922c30:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1cb92411b_exist((*_self_)._field_owner.get()._field_refers.ptr(), _42741_ref))))) {
					_1e4386934_push((*_self_)._field_owner.get()._field_refers.ptr(), jule::Any(_42741_ref));
				};
			}
		}
		_match_end_1cb922bca:;
	};
}

inline void _1cb934add_push_reference(_1c974c73d_Eval* _self_, jule::Ptr<_1e46c6eb6_Var>& _42741_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1e468ce7c_ScopeChecker>>()) {
			_case_begin_1cb939ebc:;
			{
				jule::Ptr<_1e468ce7c_ScopeChecker> _43021_sc = _1e4691018_get_hard_root((*_self_)._field_lookup.operator jule::Ptr<_1e468ce7c_ScopeChecker>());;
				if ((!(_1cb93ab7c_exist(_43021_sc.get()._field_owner.get()._field_refers.ptr(), _42741_ref)))) {
					_1e4386934_push(_43021_sc.get()._field_owner.get()._field_refers.ptr(), jule::Any(_42741_ref));
				};
			}
		}
		else {
			_case_begin_1cb9397b3:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1cb93ab7c_exist((*_self_)._field_owner.get()._field_refers.ptr(), _42741_ref))))) {
					_1e4386934_push((*_self_)._field_owner.get()._field_refers.ptr(), jule::Any(_42741_ref));
				};
			}
		}
		_match_end_1cb93975d:;
	};
}

inline void _1cc1b76b1_push_reference(_1c974c73d_Eval* _self_, jule::Ptr<_1e43462ea_StructIns>& _42741_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1e468ce7c_ScopeChecker>>()) {
			_case_begin_1cc1b9141:;
			{
				jule::Ptr<_1e468ce7c_ScopeChecker> _43021_sc = _1e4691018_get_hard_root((*_self_)._field_lookup.operator jule::Ptr<_1e468ce7c_ScopeChecker>());;
				if ((!(_1cc1b9d01_exist(_43021_sc.get()._field_owner.get()._field_refers.ptr(), _42741_ref)))) {
					_1e4386934_push(_43021_sc.get()._field_owner.get()._field_refers.ptr(), jule::Any(_42741_ref));
				};
			}
		}
		else {
			_case_begin_1cc1b8937:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1cc1b9d01_exist((*_self_)._field_owner.get()._field_refers.ptr(), _42741_ref))))) {
					_1e4386934_push((*_self_)._field_owner.get()._field_refers.ptr(), jule::Any(_42741_ref));
				};
			}
		}
		_match_end_1cc1b88d2:;
	};
}



inline jule::Ptr<_1c974abc0_Data> _1c97512e1___eval_enum(_1c974c73d_Eval* _self_, jule::Ptr<_1e4456b58_Enum> _44130_enm) {
	return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_44130_enm, 3)}), ._field_mutable=false, ._field_lvalue=false, ._field_decl=true, ._field_constant=nullptr});
}



inline jule::Ptr<_1c974abc0_Data> _1c9751698_eval_enum(_1c974c73d_Eval* _self_, jule::Ptr<_1e4456b58_Enum> _45332_enm, jule::Ptr<_20cd9e6ec_Token> _45344_error_token) {
	if ((!(_1e46b0543_is_accessible_define((*_self_)._field_s.ptr(), _45332_enm.get()._field_public,_45332_enm.get()._field_token)))) {
		_1c974cc16_push_err(&(*_self_), _45344_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_45332_enm.get()._field_ident)}));
		_1c974d035_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _1c97512e1___eval_enum(&(*_self_), _45332_enm);
}



inline jule::Ptr<_1c974abc0_Data> _1c97519a6___eval_struct(_1c974c73d_Eval* _self_, jule::Ptr<_1e43462ea_StructIns> _46332_s) {
	return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_46332_s, 0)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=jule::Any(_46332_s), ._field_decl=true, ._field_constant=nullptr});
}



inline jule::Ptr<_1c974abc0_Data> _1c9751d5d_eval_struct(_1c974c73d_Eval* _self_, jule::Ptr<_1e43462ea_StructIns> _47634_s, jule::Ptr<_20cd9e6ec_Token> _47649_error_token) {
	if ((!(_1e46b0543_is_accessible_define((*_self_)._field_s.ptr(), _47634_s.get()._field_decl.get()._field_public,_47634_s.get()._field_decl.get()._field_token)))) {
		_1c974cc16_push_err(&(*_self_), _47649_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_47634_s.get()._field_decl.get()._field_ident)}));
		_1c974d035_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1c975248a_check_deprecated(&(*_self_), _47634_s.get()._field_decl.get()._field_directives,_47649_error_token);
	return _1c97519a6___eval_struct(&(*_self_), _47634_s);
}



inline jule::Ptr<_1c974abc0_Data> _1c975216b_eval_fn_ins(_1c974c73d_Eval* _self_, jule::Ptr<_1e4383018_FnIns> _48830_f) {
	return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_48830_f, 1)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=jule::Any(_48830_f), ._field_decl=false, ._field_constant=nullptr});
}



inline void _1c975248a_check_deprecated(_1c974c73d_Eval* _self_, jule::Slice<jule::Ptr<_1e43620c4_Directive>>& _50140_directives, jule::Ptr<_20cd9e6ec_Token> _50182_tok) {
	if (_1c974d651_is_unsafe(&(*_self_))) {
		return;;
	};
	jule::Ptr<_1e43620c4_Directive> _50613_d = _1c976e3db_find_directive(_50140_directives,jule::Str("deprecated", 10));;
	if ((_50613_d != nullptr)) {
		if ((_50613_d.get()._field_args.len() == 0LL)) {
			_1c974cc16_push_err(&(*_self_), _50182_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23))}));
		} else {
			_1c974cc16_push_err(&(*_self_), _50182_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(_50613_d.get()._field_args[0LL].get()._field_kind)}));
		};
		_1c974d035_push_suggestion(&(*_self_), jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1c974abc0_Data> _1c9752842_eval_fn(_1c974c73d_Eval* _self_, jule::Ptr<_1e4380576_Fn> _51730_f, jule::Ptr<_20cd9e6ec_Token> _51738_error_token) {
	if ((!(_1e46b0543_is_accessible_define((*_self_)._field_s.ptr(), _51730_f.get()._field_public,_51730_f.get()._field_token)))) {
		_1c974cc16_push_err(&(*_self_), _51738_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51730_f.get()._field_ident)}));
		_1c974d035_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1c975248a_check_deprecated(&(*_self_), _51730_f.get()._field_directives,_51738_error_token);
	jule::Ptr<_1e4383018_FnIns> _52617_ins = _1e43819b7_instance(_51730_f);;
	_1cb9219ba_push_reference(&(*_self_), _52617_ins);
	return _1c975216b_eval_fn_ins(&(*_self_), _52617_ins);
}



inline void _1c9752c2c_push_illegal_cycle_error(_1c974c73d_Eval* _self_, jule::Ptr<_1e46c6eb6_Var>& _53144_v1, jule::Ptr<_1e46c6eb6_Var>& _53155_v2, jule::Str& _53170_message) {
	;
	jule::Str _53413_refers_to = _20ca9019b_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_53144_v1.get()._field_ident),jule::Any(_53155_v2.get()._field_ident)}));;
	(_53170_message).buffer.insert(0, (((_20b9a0233_repeat(jule::Str(" ", 1),4LL) + _53413_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1c97530e5_check_cross_cycle(_1c974c73d_Eval* _self_, jule::Ptr<_1e46c6eb6_Var>& _53837_v, jule::Str& _53851_message) {
	{
		auto &expr = _53837_v.get()._field_depends;
		auto it = expr.begin();
		_iter_begin_1cb92a210:;
		if (it != expr.end()) {
			jule::Ptr<_1e46c6eb6_Var> &_53916_d = *it;
			{
				if ((_53916_d == (*_self_)._field_owner)) {
					_1c9752c2c_push_illegal_cycle_error(&(*_self_), _53837_v,_53916_d,_53851_message);
					return false;
				};
				if ((!(_1c97530e5_check_cross_cycle(&(*_self_), _53916_d,_53851_message)))) {
					_1c9752c2c_push_illegal_cycle_error(&(*_self_), _53837_v,_53916_d,_53851_message);
					return false;
				};
			}
			_iter_next_1cb92a210:;
			++it;
			goto _iter_begin_1cb92a210;
		}
		_iter_end_1cb92a210:;
	};
	return true;
}



inline jule::Bool _1c975349c_check_illegal_cycles(_1c974c73d_Eval* _self_, jule::Ptr<_1e46c6eb6_Var>& _55744_v, jule::Ptr<_20cd9e6ec_Token> _55753_decl_token) {
	jule::Bool _55775_ok = jule::Bool();
	if (((*_self_)._field_owner == nullptr)) {
		_55775_ok = true;
		return _55775_ok;
	};
	if (((*_self_)._field_owner == _55744_v)) {
		_1c974cc16_push_err(&(*_self_), (*_self_)._field_owner.get()._field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_owner.get()._field_ident)}));
		_55775_ok = false;
		return _55775_ok;
	};
	jule::Str _56917_message = jule::Str();;
	if ((!(_1c97530e5_check_cross_cycle(&(*_self_), _55744_v,_56917_message)))) {
		jule::Str _57221_err_msg = _56917_message;;
		_56917_message=jule::Str();
		_1c9752c2c_push_illegal_cycle_error(&(*_self_), (*_self_)._field_owner,_55744_v,_56917_message);
		_57221_err_msg=(_57221_err_msg + _56917_message);
		_1c974cc16_push_err(&(*_self_), _55753_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_57221_err_msg)}));
		_55775_ok = false;
		return _55775_ok;
	};
	(*_self_)._field_owner.get()._field_depends = jule::alloc_for_append((*_self_)._field_owner.get()._field_depends,1);(*_self_)._field_owner.get()._field_depends.__push(_55744_v);;
	_55775_ok = true;
	return _55775_ok;
}



inline jule::Ptr<_1c974abc0_Data> _1c9753854_eval_var(_1c974c73d_Eval* _self_, jule::Ptr<_1e46c6eb6_Var> _58431_v, jule::Ptr<_20cd9e6ec_Token> _58440_error_token) {
	if ((!(_1e46b0543_is_accessible_define((*_self_)._field_s.ptr(), _58431_v.get()._field_public,_58431_v.get()._field_token)))) {
		_1c974cc16_push_err(&(*_self_), _58440_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_58431_v.get()._field_ident)}));
		_1c974d035_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1c975248a_check_deprecated(&(*_self_), _58431_v.get()._field_directives,_58440_error_token);
	_58431_v.get()._field_used=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1e46ac452_Sema>>()) {
			_case_begin_1cb93466a:;
			{
				jule::Bool _59817_ok = _1c975349c_check_illegal_cycles(&(*_self_), _58431_v,_58440_error_token);;
				if ((!(_59817_ok))) {
					return nullptr;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e468ce7c_ScopeChecker>>()) {
			_case_begin_1cb9346d1:;
			{
				if (((!(_58431_v.get()._field_reference)) || _1c974d651_is_unsafe(&(*_self_)))) {
					goto _match_end_1cb9345d2;
				};
				jule::Ptr<_1e468ce7c_ScopeChecker> _60621_s = (*_self_)._field_lookup.operator jule::Ptr<_1e468ce7c_ScopeChecker>();;
				while (((_60621_s.get()._field_owner == nullptr) && (_60621_s.get()._field_parent != nullptr))) {
					{
						_60621_s=_60621_s.get()._field_parent;
					}
				_iter_next_1cb9355a0:;
				}
				_iter_end_1cb9355a0:;;
				if ((((_60621_s.get()._field_owner != nullptr) && _60621_s.get()._field_owner.get()._field_anon) && (_58431_v.get()._field_scope != _60621_s.get()._field_owner.get()._field_scope))) {
					_1c974cc16_push_err(&(*_self_), _58440_error_token,jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75),jule::Slice<jule::Any>::make({jule::Any(_58431_v.get()._field_ident)}));
				};
			}
		}
		_match_end_1cb9345d2:;
	};
	_1cb934add_push_reference(&(*_self_), _58431_v);
	if (((!(_58431_v.get()._field_cpp_linked)) && ((_58431_v.get()._field_value == nullptr) || (_58431_v.get()._field_value.get()._field_data == nullptr)))) {
		if (_58431_v.get()._field_constant) {
			_1e46beb29_check_type_var((*_self_)._field_s, _58431_v,jule::Trait<_1c978dc35_Lookup>((*_self_)._field_s, 3));
			if ((_58431_v.get()._field_value.get()._field_data == nullptr)) {
				return nullptr;
			};
		};
	};
	if (((_58431_v.get()._field_kind == nullptr) || (_58431_v.get()._field_kind.get()._field_kind == nullptr))) {
		if ((_58431_v.get()._field_scope != nullptr)) {
			return nullptr;
		};
		_1e46beb29_check_type_var((*_self_)._field_s, _58431_v,(*_self_)._field_lookup);
		if (((_58431_v.get()._field_kind == nullptr) || (_58431_v.get()._field_kind.get()._field_kind == nullptr))) {
			return nullptr;
		};
	};
	jule::Ptr<_1c974abc0_Data> _64617_d = jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=_58431_v.get()._field_kind.get()._field_kind, ._field_mutable=_58431_v.get()._field_mutable, ._field_reference=_58431_v.get()._field_reference, ._field_lvalue=(!(_58431_v.get()._field_constant)), ._field_model=jule::Any(_58431_v), });;
	if ((((!(_58431_v.get()._field_cpp_linked)) && _1e46c736d_is_initialized(_58431_v.ptr())) && (_58431_v.get()._field_value.get()._field_data != nullptr))) {
		_64617_d.get()._field_is_rune=_58431_v.get()._field_value.get()._field_data.get()._field_is_rune;
	};
	if ((_58431_v.get()._field_constant && (_58431_v.get()._field_value.get()._field_data.get()._field_constant != nullptr))) {
		_64617_d.get()._field_constant=jule::new_ptr<_1c968bb88_Const>((*(_58431_v.get()._field_value.get()._field_data.get()._field_constant)));
		_64617_d.get()._field_model=jule::Any(_64617_d.get()._field_constant);
	};
	if (_1c974b583_is_const(_64617_d.ptr())) {
		_1c974dbc3_apply_numeric_prefix(&(*_self_), _64617_d);
	};
	return _64617_d;
}



inline jule::Ptr<_1c974abc0_Data> _1c9753c0b_eval_type_alias(_1c974c73d_Eval* _self_, jule::Ptr<_1c97739b7_TypeAlias> _67038_ta, jule::Ptr<_20cd9e6ec_Token> _67054_error_token) {
	if ((!(_1e46b0543_is_accessible_define((*_self_)._field_s.ptr(), _67038_ta.get()._field_public,_67038_ta.get()._field_token)))) {
		_1c974cc16_push_err(&(*_self_), _67054_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_67038_ta.get()._field_ident)}));
		_1c974d035_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_67038_ta.get()._field_used=true;
	jule::Trait<_1c97742c0_Kind> _67917_kind = _67038_ta.get()._field_kind.get()._field_kind.get()._field_kind;;
	jule::Ptr<_1c974abc0_Data> _68017_d = nullptr;;
	{
		auto &_match_expr{ _67917_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e43462ea_StructIns>>()) {
			_case_begin_1cb94a0ed:;
			{
				_68017_d=_1c97519a6___eval_struct(&(*_self_), _67917_kind.operator jule::Ptr<_1e43462ea_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4456b58_Enum>>()) {
			_case_begin_1cb948c23:;
			{
				_68017_d=_1c97512e1___eval_enum(&(*_self_), _67917_kind.operator jule::Ptr<_1e4456b58_Enum>());
			}
		}
		else {
			_case_begin_1cb948a9c:;
			{
				_68017_d=jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=_67038_ta.get()._field_kind.get()._field_kind.get()._field_kind}), ._field_decl=true, });
				if (_67038_ta.get()._field_cpp_linked) {
					_68017_d.get()._field_kind.get()._field_cpp_ident=_67038_ta.get()._field_ident;
				} else {
					_68017_d.get()._field_kind.get()._field_cpp_ident=_67038_ta.get()._field_kind.get()._field_kind.get()._field_cpp_ident;
				};
				_68017_d.get()._field_model=jule::Any(_68017_d.get()._field_kind);
			}
		}
		_match_end_1cb948a47:;
	};
	_68017_d.get()._field_kind.get()._field_generic=_67038_ta.get()._field_generic;
	return _68017_d;
}



inline jule::Ptr<_1c974abc0_Data> _1c97540b3_eval_def(_1c974c73d_Eval* _self_, jule::Any _70431_def, jule::Ptr<_20cd9e6ec_Token> _70441_ident) {
	{
		auto &_match_expr{ _70431_def };
		
		if (_match_expr.type_is<jule::Ptr<_1e46c6eb6_Var>>()) {
			_case_begin_1cb94c980:;
			{
				return _1c9753854_eval_var(&(*_self_), _70431_def.operator jule::Ptr<_1e46c6eb6_Var>(),_70441_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4456b58_Enum>>()) {
			_case_begin_1cb94c9e6:;
			{
				return _1c9751698_eval_enum(&(*_self_), _70431_def.operator jule::Ptr<_1e4456b58_Enum>(),_70441_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e43360cb_Struct>>()) {
			_case_begin_1cb94ca90:;
			{
				return _1c9751d5d_eval_struct(&(*_self_), _1e4339101_instance(_70431_def.operator jule::Ptr<_1e43360cb_Struct>()),_70441_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4380576_Fn>>()) {
			_case_begin_1cb94cb06:;
			{
				jule::Ptr<_1e4380576_Fn> _71321_f = _70431_def.operator jule::Ptr<_1e4380576_Fn>();;
				if ((_71321_f.get()._field_ident != jule::Str("init", 4))) {
					return _1c9752842_eval_fn(&(*_self_), _71321_f,_70441_ident);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4383018_FnIns>>()) {
			_case_begin_1cb94cb6c:;
			{
				return _1c975216b_eval_fn_ins(&(*_self_), _70431_def.operator jule::Ptr<_1e4383018_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c97739b7_TypeAlias>>()) {
			_case_begin_1cb94cbd3:;
			{
				return _1c9753c0b_eval_type_alias(&(*_self_), _70431_def.operator jule::Ptr<_1c97739b7_TypeAlias>(),_70441_ident);
			}
		}
		_match_end_1cb94c8a3:;
	};
	_1c974cc16_push_err(&(*_self_), _70441_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_70441_ident.get()._field_kind)}));
	return nullptr;
}



inline jule::Ptr<_1c974abc0_Data> _1c97543c1_eval_ident(_1c974c73d_Eval* _self_, jule::Ptr<_1e4367690_IdentExpr> _72629_ident) {
	jule::Any _72717_def = _1c9750c5d_get_def(&(*_self_), _72629_ident.get()._field_ident,_72629_ident.get()._field_cpp_linked);;
	return _1c97540b3_eval_def(&(*_self_), jule::Any(_72717_def),_72629_ident.get()._field_token);
}



inline jule::Ptr<_1c974abc0_Data> _1c97546ce_eval_unary(jule::Ptr<_1c974c73d_Eval> _self_, jule::Ptr<_1e4367d99_UnaryExpr> _73134_u) {
	_1c9766aba_UnaryEval _73217_unary = static__1c9767071_new(_self_);;
	return _1c9768319_eval(&_73217_unary, _73134_u);
}



inline jule::Ptr<_1c974abc0_Data> _1c97549dc_eval_variadic(jule::Ptr<_1c974c73d_Eval> _self_, jule::Ptr<_1e4368251_VariadicExpr> _73637_v) {
	if ((_73637_v.get()._field_expr == nullptr)) {
		_1c974cc16_push_err(_self_.ptr(), _73637_v.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1c97746ee_TypeKind> _74217_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_74217_prefix;
	});;
	jule::Ptr<_1c974abc0_Data> _74617_d = _1c976602b_eval_expr_kind(_self_, jule::Any(_73637_v.get()._field_expr));;
	if ((_74617_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1c9776547_variadicable(_74617_d.get()._field_kind.ptr())))) {
		_1c974cc16_push_err(_self_.ptr(), _73637_v.get()._field_token,jule::Str("type @ is not variadicable", 26),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_74617_d.get()._field_kind.ptr()))}));
		return nullptr;
	};
	jule::Ptr<_1c977cdbc_Slc> _75613_slc = _1c97774c1_slc(_74617_d.get()._field_kind.ptr());;
	_74617_d.get()._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_cpp_ident=_75613_slc.get()._field_elem.get()._field_cpp_ident, ._field_generic=_75613_slc.get()._field_elem.get()._field_generic, ._field_variadic=true, ._field_kind=_75613_slc.get()._field_elem.get()._field_kind});
	return _74617_d;
}



inline jule::Ptr<_1c974abc0_Data> _1c9754cea_eval_unsafe(jule::Ptr<_1c974c73d_Eval> _self_, jule::Ptr<_1e4366d65_UnsafeExpr> _76635_u) {
	jule::Bool _76713_unsafety = _self_.get()._field_unsafety;;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_1c974abc0_Data> _77017_d = _1c976602b_eval_expr_kind(_self_, jule::Any(_76635_u.get()._field_expr));;
	_self_.get()._field_unsafety=_76713_unsafety;
	return _77017_d;
}



inline jule::Ptr<_1c974abc0_Data> _1c9755108_eval_arr(jule::Ptr<_1c974c73d_Eval> _self_, jule::Ptr<_1e436be69_SliceExpr> _77732_s) {
	jule::Ptr<_1c9780067_Arr> _77917_pt = _1c977725c_arr(_self_.get()._field_prefix.ptr());;
	jule::Ptr<_1c9780067_Arr> _78117_arr = jule::new_ptr<_1c9780067_Arr>(_1c9780067_Arr{._field_auto=false, ._field_n=0LL, ._field_elem=_77917_pt.get()._field_elem});;
	jule::Bool _78717_filled = false;;
	if ((_77732_s.get()._field_exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _77732_s.get()._field_exprs[1LL].get()._field_kind };
			
			if (_match_expr.type_is<jule::Ptr<_1e4368251_VariadicExpr>>()) {
				_case_begin_1cb9604ba:;
				{
					if ((_77732_s.get()._field_exprs[1LL].get()._field_kind.operator jule::Ptr<_1e4368251_VariadicExpr>().get()._field_expr != nullptr)) {
						goto _match_end_1cb960454;
					};
					if (_77917_pt.get()._field_auto) {
						_1c974cc16_push_err(_self_.ptr(), _77732_s.get()._field_token,jule::Str("auto-sized arrays cannot filled", 31),jule::Slice<jule::Any>());
						return nullptr;
					};
					_78717_filled=true;
					_77732_s.get()._field_exprs=_77732_s.get()._field_exprs.slice(0LL,1LL);
				}
			}
			_match_end_1cb960454:;
		};
	};
	_78117_arr.get()._field_n=static_cast<jule::I64>(_77732_s.get()._field_exprs.len());
	if ((!(_77917_pt.get()._field_auto))) {
		if ((_78117_arr.get()._field_n > _77917_pt.get()._field_n)) {
			_1c974cc16_push_err(_self_.ptr(), _77732_s.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else if ((_78117_arr.get()._field_n < _77917_pt.get()._field_n)) {
			_78117_arr.get()._field_n=_77917_pt.get()._field_n;
		};
	};
	jule::Ptr<_1e437c5a6_ArrayExprModel> _81617_model = jule::new_ptr<_1e437c5a6_ArrayExprModel>(_1e437c5a6_ArrayExprModel{._field_kind=_78117_arr, });;
	if (_78717_filled) {
		_81617_model.get()._field_elems=jule::Slice<jule::Any>::alloc(0LL,2LL);
	} else {
		_81617_model.get()._field_elems=jule::Slice<jule::Any>::alloc(0LL,_77732_s.get()._field_exprs.len());
	};
	jule::Ptr<_1c97746ee_TypeKind> _82517_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_78117_arr.get()._field_elem;
	{
		auto &expr = _77732_s.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1cb9658cc:;
		if (it != expr.end()) {
			jule::Ptr<_1e43659e0_Expr> _82721_elem = *it;
			{
				jule::Ptr<_1c974abc0_Data> _82821_d = _1c976602b_eval_expr_kind(_self_, jule::Any(_82721_elem));;
				if ((_82821_d == nullptr)) {
					goto _iter_next_1cb9658cc;
				};
				_1e46b516e_check_assign_type(_self_.get()._field_s, false,_78117_arr.get()._field_elem,_82821_d,_77732_s.get()._field_token);
				_81617_model.get()._field_elems = jule::alloc_for_append(_81617_model.get()._field_elems,1);_81617_model.get()._field_elems.__push(jule::Any(_82821_d.get()._field_model));;
			}
			_iter_next_1cb9658cc:;
			++it;
			goto _iter_begin_1cb9658cc;
		}
		_iter_end_1cb9658cc:;
	};
	_self_.get()._field_prefix=_82517_prefix;
	if (_78717_filled) {
		_81617_model.get()._field_elems = jule::alloc_for_append(_81617_model.get()._field_elems,1);_81617_model.get()._field_elems.__push(nullptr);;
	};
	return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_78117_arr, 10)}), ._field_mutable=true, ._field_model=jule::Any(_81617_model), });
}



inline jule::Ptr<_1c974abc0_Data> _1c97554b0_eval_exp_slc(jule::Ptr<_1c974c73d_Eval> _self_, jule::Ptr<_1e436be69_SliceExpr> _85236_s, jule::Ptr<_1c97746ee_TypeKind> _85255_elem_type) {
	jule::Ptr<_1c977cdbc_Slc> _85317_slc = jule::new_ptr<_1c977cdbc_Slc>(_1c977cdbc_Slc{._field_elem=_85255_elem_type});;
	jule::Ptr<_1e4354ade_SliceExprModel> _85717_model = jule::new_ptr<_1e4354ade_SliceExprModel>(_1e4354ade_SliceExprModel{._field_elem_kind=_85255_elem_type, ._field_elems=jule::Slice<jule::Any>::alloc(0LL,_85236_s.get()._field_exprs.len())});;
	jule::Ptr<_1c97746ee_TypeKind> _86217_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_85317_slc.get()._field_elem;
	{
		auto &expr = _85236_s.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1cb96a937:;
		if (it != expr.end()) {
			jule::Ptr<_1e43659e0_Expr> _86421_elem = *it;
			{
				jule::Ptr<_1c974abc0_Data> _86521_d = _1c976602b_eval_expr_kind(_self_, jule::Any(_86421_elem));;
				if ((_86521_d == nullptr)) {
					goto _iter_next_1cb96a937;
				};
				_1e46b516e_check_assign_type(_self_.get()._field_s, false,_85317_slc.get()._field_elem,_86521_d,_85236_s.get()._field_token);
				_85717_model.get()._field_elems = jule::alloc_for_append(_85717_model.get()._field_elems,1);_85717_model.get()._field_elems.__push(jule::Any(_86521_d.get()._field_model));;
			}
			_iter_next_1cb96a937:;
			++it;
			goto _iter_begin_1cb96a937;
		}
		_iter_end_1cb96a937:;
	};
	_self_.get()._field_prefix=_86217_prefix;
	return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_85317_slc, 7)}), ._field_mutable=true, ._field_model=jule::Any(_85717_model), });
}



inline jule::Ptr<_1c974abc0_Data> _1c97557bd_eval_slice_expr(jule::Ptr<_1c974c73d_Eval> _self_, jule::Ptr<_1e436be69_SliceExpr> _88339_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_1c977725c_arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1cb96e023:;
				{
					return _1c9755108_eval_arr(_self_, _88339_s);
				}
			}
			else if ((_1c97774c1_slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1cb96e09a:;
				{
					jule::Ptr<_1c977cdbc_Slc> _88925_pt = _1c97774c1_slc(_self_.get()._field_prefix.ptr());;
					return _1c97554b0_eval_exp_slc(_self_, _88339_s,_88925_pt.get()._field_elem);
				}
			}
			_match_end_1cb96de13:;
		};
	};
	jule::Ptr<_1c97746ee_TypeKind> _89417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	if ((_88339_s.get()._field_exprs.len() == 0LL)) {
		_1c974cc16_push_err(_self_.ptr(), _88339_s.get()._field_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1c974abc0_Data> _90217_first_elem = _1c976602b_eval_expr_kind(_self_, jule::Any(_88339_s.get()._field_exprs[0LL]));;
	if ((_90217_first_elem == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1c974abc0_Data> _90717_d = _1c97554b0_eval_exp_slc(_self_, _88339_s,_90217_first_elem.get()._field_kind);;
	_self_.get()._field_prefix=_89417_prefix;
	return _90717_d;
}



inline void _1c9755b0e_check_integer_indexing_by_data(_1c974c73d_Eval* _self_, jule::Ptr<_1c974abc0_Data>& _91354_d, jule::Ptr<_20cd9e6ec_Token> _91364_token) {
	jule::Str _91413_err_key = _1c97717d9_check_data_for_integer_indexing(_91354_d);;
	{
		auto &_match_expr{ _91413_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1cb974da3:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_1cb974e19:;
			{
				_1c974cc16_push_err(&(*_self_), _91364_token,_91413_err_key,jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_91354_d.get()._field_kind.ptr()))}));
			}
		}
		else {
			_case_begin_1cb9747a9:;
			{
				_1c974cc16_push_err(&(*_self_), _91364_token,_91413_err_key,jule::Slice<jule::Any>());
			}
		}
		_match_end_1cb974bc7:;
	};
}



inline void _1c9755ed8_indexing_ptr(_1c974c73d_Eval* _self_, jule::Ptr<_1c974abc0_Data>& _92536_d, jule::Ptr<_1c974abc0_Data>& _92551_index, jule::Ptr<_1e436ca4c_IndexingExpr>& _92566_i) {
	_1c9755b0e_check_integer_indexing_by_data(&(*_self_), _92551_index,_92566_i.get()._field_token);
	jule::Ptr<_1c97809c4_Ptr> _92817_ptr = _1c9776c84_ptr(_92536_d.get()._field_kind.ptr());;
	{
		
		if (_1c9781497_is_unsafe(_92817_ptr.ptr())) {
			_case_begin_1cb978071:;
			{
				_1c974cc16_push_err(&(*_self_), _92566_i.get()._field_token,jule::Str("unsafe pointers are not supports indexing", 41),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1c974d651_is_unsafe(&(*_self_))))) {
			_case_begin_1cb9780e8:;
			{
				_1c974cc16_push_err(&(*_self_), _92566_i.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
			}
		}
		_match_end_1cb977e61:;
	};
	_92536_d.get()._field_kind=_92817_ptr.get()._field_elem;
}



inline void _1c97563a1_indexing_arr(_1c974c73d_Eval* _self_, jule::Ptr<_1c974abc0_Data>& _94036_d, jule::Ptr<_1c974abc0_Data>& _94051_index, jule::Ptr<_1e436ca4c_IndexingExpr>& _94066_i) {
	jule::Ptr<_1c9780067_Arr> _94117_arr = _1c977725c_arr(_94036_d.get()._field_kind.ptr());;
	_94036_d.get()._field_kind=_94117_arr.get()._field_elem;
	_1c9755b0e_check_integer_indexing_by_data(&(*_self_), _94051_index,_94066_i.get()._field_token);
	if ((_1c974b583_is_const(_94051_index.ptr()) && (_1c968e0ec_as_f64(_94051_index.get()._field_constant.ptr()) >= static_cast<jule::F64>(_94117_arr.get()._field_n)))) {
		_1c974cc16_push_err(&(*_self_), _94066_i.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
	};
}



inline void _1c9756769_indexing_slc(_1c974c73d_Eval* _self_, jule::Ptr<_1c974abc0_Data>& _94936_d, jule::Ptr<_1c974abc0_Data>& _94951_index, jule::Ptr<_1e436ca4c_IndexingExpr>& _94966_i) {
	jule::Ptr<_1c977cdbc_Slc> _95017_slc = _1c97774c1_slc(_94936_d.get()._field_kind.ptr());;
	_94936_d.get()._field_kind=_95017_slc.get()._field_elem;
	_1c9755b0e_check_integer_indexing_by_data(&(*_self_), _94951_index,_94966_i.get()._field_token);
	if ((!(_1c974b583_is_const(_94951_index.ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ _94936_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e4354ade_SliceExprModel>>()) {
			_case_begin_1cb980320:;
			{
				jule::Ptr<_1e4354ade_SliceExprModel> _96021_m = _94936_d.get()._field_model.operator jule::Ptr<_1e4354ade_SliceExprModel>();;
				jule::F64 _96117_indx = _1c968e0ec_as_f64(_94951_index.get()._field_constant.ptr());;
				if ((_96117_indx >= static_cast<jule::F64>(_96021_m.get()._field_elems.len()))) {
					_1c974cc16_push_err(&(*_self_), _94966_i.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					_94936_d.get()._field_model=jule::Any(_96021_m.get()._field_elems[static_cast<jule::I64>(static_cast<jule::U64>(_96117_indx))]);
					_94936_d.get()._field_decl=true;
				};
			}
		}
		_match_end_1cb9802ba:;
	};
}



inline void _1c9756b32_indexing_map(_1c974c73d_Eval* _self_, jule::Ptr<_1c974abc0_Data>& _97136_d, jule::Ptr<_1c974abc0_Data>& _97151_index, jule::Ptr<_1e436ca4c_IndexingExpr>& _97170_i) {
	if ((_97151_index == nullptr)) {
		return;;
	};
	jule::Ptr<_1c977e473_Map> _97617_m = _1c9777e72_map(_97136_d.get()._field_kind.ptr());;
	_1c973822e_AssignTypeChecker _97717_atc = _1c973822e_AssignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_97617_m.get()._field_key, ._field_d=_97151_index, ._field_error_token=_97170_i.get()._field_token};;
	_1c97393a6_check(&_97717_atc);
	_97136_d.get()._field_kind=_97617_m.get()._field_val;
}



inline void _1c9756eea_indexing_str(_1c974c73d_Eval* _self_, jule::Ptr<_1c974abc0_Data>& _98836_d, jule::Ptr<_1c974abc0_Data>& _98851_index, jule::Ptr<_1e436ca4c_IndexingExpr>& _98866_i) {
	;
	_98836_d.get()._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("u8", 2)), 5)});
	if ((_98851_index == nullptr)) {
		return;;
	};
	_1c9755b0e_check_integer_indexing_by_data(&(*_self_), _98851_index,_98866_i.get()._field_token);
	if ((!(_1c974b583_is_const(_98851_index.ptr())))) {
		_98836_d.get()._field_constant=nullptr;
		return;;
	};
	if (_1c974b583_is_const(_98836_d.ptr())) {
		jule::Ptr<_20cd9e6ec_Token> _100417_error_token = _98866_i.get()._field_token;;
		jule::I64 _100517_j = _1c968db24_as_i64(_98851_index.get()._field_constant.ptr());;
		jule::Str _100617_s = _1c968d64b_read_str(_98836_d.get()._field_constant.ptr());;
		if ((static_cast<jule::I64>(_100517_j) >= _100617_s.len())) {
			_1c974cc16_push_err(&(*_self_), _100417_error_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else {
			_1c968e5e7_set_u64(_98836_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_100617_s[_100517_j])));
		};
	};
}



inline void _1c97573b3_to_indexing(_1c974c73d_Eval* _self_, jule::Ptr<_1c974abc0_Data>& _101535_d, jule::Ptr<_1c974abc0_Data>& _101550_index, jule::Ptr<_1e436ca4c_IndexingExpr>& _101569_i) {
	{
		
		if ((_1c9776c84_ptr(_101535_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cb98bbde:;
			{
				_1c9755ed8_indexing_ptr(&(*_self_), _101535_d,_101550_index,_101569_i);
				return;;
			}
		}
		else if ((_1c977725c_arr(_101535_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cb98bc66:;
			{
				_1c97563a1_indexing_arr(&(*_self_), _101535_d,_101550_index,_101569_i);
				return;;
			}
		}
		else if ((_1c97774c1_slc(_101535_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cb98bcdd:;
			{
				_1c9756769_indexing_slc(&(*_self_), _101535_d,_101550_index,_101569_i);
				return;;
			}
		}
		else if ((_1c9777e72_map(_101535_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cb98bd65:;
			{
				_1c9756b32_indexing_map(&(*_self_), _101535_d,_101550_index,_101569_i);
				return;;
			}
		}
		else if ((_1c97767ab_prim(_101535_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cb98bddc:;
			{
				jule::Ptr<_1c9778e51_Prim> _103017_prim = _1c97767ab_prim(_101535_d.get()._field_kind.ptr());;
				{
					
					if (_1c977be10_is_str(_103017_prim.ptr())) {
						_case_begin_1cb9912dc:;
						{
							_1c9756eea_indexing_str(&(*_self_), _101535_d,_101550_index,_101569_i);
							return;;
						}
					}
					_match_end_1cb991232:;
				};
			}
		}
		_match_end_1cb98baac:;
	};
	_1c974cc16_push_err(&(*_self_), _101569_i.get()._field_token,jule::Str("type @ is not support indexing", 30),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_101535_d.get()._field_kind.ptr()))}));
}



inline jule::Bool _1c975778c_push_generics_from_index_data(jule::Ptr<_1c974c73d_Eval> _self_, jule::Ptr<_1e4362b0d_IdentTypeDecl>& _104154_decl, jule::Ptr<_1e436ca4c_IndexingExpr>& _104181_i) {
	{
		auto &_match_expr{ _104181_i.get()._field_index.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e4367d99_UnaryExpr>>()) {
			_case_begin_1cb994125:;
			{
				jule::Ptr<_1c974abc0_Data> _104621_d = _1c97546ce_eval_unary(_self_, _104181_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1e4367d99_UnaryExpr>());;
				if ((!(_104621_d.get()._field_decl))) {
					_1c974cc16_push_err(_self_.ptr(), _104181_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return false;
				};
				_104154_decl.get()._field_generics = jule::alloc_for_append(_104154_decl.get()._field_generics,1);_104154_decl.get()._field_generics.__push(jule::new_ptr<_1e436257a_TypeDecl>(_1e436257a_TypeDecl{._field_kind=jule::Any(_104621_d.get()._field_kind)}));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e436257a_TypeDecl>>()) {
			_case_begin_1cb99418b:;
			{
				_104154_decl.get()._field_generics = jule::alloc_for_append(_104154_decl.get()._field_generics,1);_104154_decl.get()._field_generics.__push(_104181_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1e436257a_TypeDecl>());;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4367690_IdentExpr>>()) {
			_case_begin_1cb994213:;
			{
				jule::Ptr<_1e4367690_IdentExpr> _105721_expr = _104181_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1e4367690_IdentExpr>();;
				_104154_decl.get()._field_generics = jule::alloc_for_append(_104154_decl.get()._field_generics,1);_104154_decl.get()._field_generics.__push(jule::new_ptr<_1e436257a_TypeDecl>(_1e436257a_TypeDecl{._field_kind=jule::Any(jule::new_ptr<_1e4362b0d_IdentTypeDecl>(_1e4362b0d_IdentTypeDecl{._field_token=_105721_expr.get()._field_token, ._field_ident=_105721_expr.get()._field_ident, }))}));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4366183_TupleExpr>>()) {
			_case_begin_1cb994279:;
			{
				{
					auto &expr = _104181_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1e4366183_TupleExpr>().get()._field_expr;
					auto it = expr.begin();
					_iter_begin_1cb998767:;
					if (it != expr.end()) {
						jule::Ptr<_1e43659e0_Expr> _106525_expr = *it;
						{
							{
								auto &_match_expr{ _106525_expr.get()._field_kind };
								
								if (_match_expr.type_is<jule::Ptr<_1e436257a_TypeDecl>>()) {
									_case_begin_1cb9991d5:;
									{
										_104154_decl.get()._field_generics = jule::alloc_for_append(_104154_decl.get()._field_generics,1);_104154_decl.get()._field_generics.__push(_106525_expr.get()._field_kind.operator jule::Ptr<_1e436257a_TypeDecl>());;
									}
								}
								else if (_match_expr.type_is<jule::Ptr<_1e4367690_IdentExpr>>()) {
									_case_begin_1cb99924b:;
									{
										jule::Ptr<_1e4367690_IdentExpr> _107029_idexpr = _106525_expr.get()._field_kind.operator jule::Ptr<_1e4367690_IdentExpr>();;
										_104154_decl.get()._field_generics = jule::alloc_for_append(_104154_decl.get()._field_generics,1);_104154_decl.get()._field_generics.__push(jule::new_ptr<_1e436257a_TypeDecl>(_1e436257a_TypeDecl{._field_kind=jule::Any(jule::new_ptr<_1e4362b0d_IdentTypeDecl>(_1e4362b0d_IdentTypeDecl{._field_token=_107029_idexpr.get()._field_token, ._field_ident=_107029_idexpr.get()._field_ident, }))}));;
									}
								}
								_match_end_1cb98ae96:;
							};
						}
						_iter_next_1cb998767:;
						++it;
						goto _iter_begin_1cb998767;
					}
					_iter_end_1cb998767:;
				};
			}
		}
		else {
			_case_begin_1cb9935b9:;
			{
				_1c974cc16_push_err(_self_.ptr(), _104181_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1cb993520:;
	};
	return true;
}



inline jule::Ptr<_1c974abc0_Data> _1c9757b77_eval_ident_decl_from_indexing(jule::Ptr<_1c974c73d_Eval> _self_, jule::Ptr<_1c974abc0_Data>& _108654_d, jule::Ptr<_1e436ca4c_IndexingExpr>& _108669_i) {
	jule::Ptr<_1e436257a_TypeDecl> _108717_tdecl = jule::new_ptr<_1e436257a_TypeDecl>(_1e436257a_TypeDecl{});;
	jule::Ptr<_1e4362b0d_IdentTypeDecl> _108817_decl = nullptr;;
	{
		auto &_match_expr{ _108669_i.get()._field_expr.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e4367690_IdentExpr>>()) {
			_case_begin_1cb99d1a6:;
			{
				jule::Ptr<_1e4367690_IdentExpr> _109121_expr = _108669_i.get()._field_expr.get()._field_kind.operator jule::Ptr<_1e4367690_IdentExpr>();;
				_108817_decl=jule::new_ptr<_1e4362b0d_IdentTypeDecl>(_1e4362b0d_IdentTypeDecl{._field_token=_109121_expr.get()._field_token, ._field_ident=_109121_expr.get()._field_ident, });
				_108717_tdecl.get()._field_kind=jule::Any(_108817_decl);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e43689b0_NsSelectionExpr>>()) {
			_case_begin_1cb99d0a7:;
			{
				jule::Ptr<_1e43689b0_NsSelectionExpr> _109821_expr = _108669_i.get()._field_expr.get()._field_kind.operator jule::Ptr<_1e43689b0_NsSelectionExpr>();;
				_108817_decl=jule::new_ptr<_1e4362b0d_IdentTypeDecl>(_1e4362b0d_IdentTypeDecl{._field_token=_109821_expr.get()._field_ident, ._field_ident=_109821_expr.get()._field_ident.get()._field_kind, });
				_108717_tdecl.get()._field_kind=jule::Any(jule::new_ptr<_1e4363317_NamespaceTypeDecl>(_1e4363317_NamespaceTypeDecl{._field_idents=_109821_expr.get()._field_ns, ._field_kind=_108817_decl}));
			}
		}
		else {
			_case_begin_1cb99c518:;
			{
				_1c974cc16_push_err(_self_.ptr(), _108669_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1cb99c491:;
	};
	if ((!(_1c975778c_push_generics_from_index_data(_self_, _108817_decl,_108669_i)))) {
		return nullptr;
	};
	return _1c975ca5b_eval_type(_self_.ptr(), _108717_tdecl);
}



inline jule::Ptr<_1c974abc0_Data> _1c9757e96_eval_indexing(jule::Ptr<_1c974c73d_Eval> _self_, jule::Ptr<_1e436ca4c_IndexingExpr> _111737_i) {
	jule::Ptr<_1c97746ee_TypeKind> _111817_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_111817_prefix;
	});;
	jule::Ptr<_1c974abc0_Data> _112217_d = _1c976602b_eval_expr_kind(_self_, jule::Any(_111737_i.get()._field_expr));;
	if ((_112217_d == nullptr)) {
		return nullptr;
	};
	if (_112217_d.get()._field_decl) {
		return _1c9757b77_eval_ident_decl_from_indexing(_self_, _112217_d,_111737_i);
	};
	_1c974abc0_Data _113217_old_d = (*(_112217_d));;
	jule::Ptr<_1c974abc0_Data> _113417_index = _1c976602b_eval_expr_kind(_self_, jule::Any(_111737_i.get()._field_index));;
	if ((_113417_index == nullptr)) {
		return nullptr;
	};
	_112217_d.get()._field_decl=false;
	_1c97573b3_to_indexing(_self_.ptr(), _112217_d,_113417_index,_111737_i);
	if (_1c974b583_is_const(_112217_d.ptr())) {
		_112217_d.get()._field_decl=false;
		_112217_d.get()._field_model=jule::Any(_112217_d.get()._field_constant);
	} else if (_112217_d.get()._field_decl) {
		_112217_d.get()._field_decl=false;
	} else {
		_112217_d.get()._field_model=jule::Any(jule::new_ptr<_1e437b31e_IndexingExprModel>(_1e437b31e_IndexingExprModel{._field_token=_111737_i.get()._field_token, ._field_expr=jule::new_ptr<_1c974abc0_Data>(_113217_old_d), ._field_index=_113417_index}));
	};
	return _112217_d;
}



inline std::tuple<jule::Ptr<_1c974abc0_Data>,jule::Ptr<_1c974abc0_Data>> _1c97582a4_eval_slicing_exprs(jule::Ptr<_1c974c73d_Eval> _self_, jule::Ptr<_1e436d157_SlicingExpr>& _116543_s) {
	jule::Ptr<_1c97746ee_TypeKind> _116617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_116617_prefix;
	});;
	jule::Ptr<_1c974abc0_Data> _117017_l = nullptr;;
	jule::Ptr<_1c974abc0_Data> _117117_r = nullptr;;
	if ((_116543_s.get()._field_start != nullptr)) {
		_117017_l=_1c976602b_eval_expr_kind(_self_, jule::Any(_116543_s.get()._field_start));
		if ((_117017_l != nullptr)) {
			_1c9755b0e_check_integer_indexing_by_data(_self_.ptr(), _117017_l,_116543_s.get()._field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		};
	} else {
		_117017_l=jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("int", 3)), 5)}), ._field_constant=static__1c968ab87_new_i64(0LL)});
		_117017_l.get()._field_model=jule::Any(_117017_l.get()._field_constant);
	};
	if ((_116543_s.get()._field_to != nullptr)) {
		_117117_r=_1c976602b_eval_expr_kind(_self_, jule::Any(_116543_s.get()._field_to));
		if ((_117117_r != nullptr)) {
			_1c9755b0e_check_integer_indexing_by_data(_self_.ptr(), _117117_r,_116543_s.get()._field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		};
	};
	return std::make_tuple(_117017_l,_117117_r);
}



inline void _1c9758529_slicing_arr(_1c974c73d_Eval* _self_, jule::Ptr<_1c974abc0_Data>& _120031_d) {
	jule::Ptr<_1c97746ee_TypeKind> _120117_elem_type = _1c977725c_arr(_120031_d.get()._field_kind.ptr()).get()._field_elem;;
	_120031_d.get()._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(jule::new_ptr<_1c977cdbc_Slc>(_1c977cdbc_Slc{._field_elem=_120117_elem_type}), 7)});
	_120031_d.get()._field_lvalue=false;
	_120031_d.get()._field_mutable=(_120031_d.get()._field_mutable || (!(_1c9775a96_mutable(_120117_elem_type.ptr()))));
}



inline void _1c97588e2_slicing_str(_1c974c73d_Eval* _self_, jule::Ptr<_1c974abc0_Data>& _121531_d, jule::Ptr<_1c974abc0_Data>& _121542_l, jule::Ptr<_1c974abc0_Data>& _121553_r) {
	_121531_d.get()._field_lvalue=false;
	_121531_d.get()._field_mutable=true;
	if ((!(_1c974b583_is_const(_121531_d.ptr())))) {
		return;;
	};
	if (((_121542_l == nullptr) || (_121553_r == nullptr))) {
		_121531_d.get()._field_constant=nullptr;
		return;;
	};
	if ((_1c974b583_is_const(_121542_l.ptr()) && _1c974b583_is_const(_121553_r.ptr()))) {
		jule::I64 _122817_left = _1c968db24_as_i64(_121542_l.get()._field_constant.ptr());;
		if ((_122817_left < 0LL)) {
			return;;
		};
		jule::Str _123317_s = _1c968d64b_read_str(_121531_d.get()._field_constant.ptr());;
		jule::I64 _123421_right = 0LL;;
		if ((_121553_r == nullptr)) {
			_123421_right=static_cast<jule::I64>(static_cast<jule::I64>(_123317_s.len()));
		} else {
			_123421_right=static_cast<jule::I64>(_1c968db24_as_i64(_121553_r.get()._field_constant.ptr()));
		};
		if ((_122817_left > _123421_right)) {
			return;;
		};
		_1c968eae2_set_str(_121531_d.get()._field_constant.ptr(), _123317_s.slice(_122817_left,_123421_right));
		_121531_d.get()._field_decl=true;
	} else {
		_121531_d.get()._field_constant=nullptr;
	};
}



inline void _1c9758d54_check_slicing(_1c974c73d_Eval* _self_, jule::Ptr<_1c974abc0_Data>& _125137_d, jule::Ptr<_1c974abc0_Data>& _125148_l, jule::Ptr<_1c974abc0_Data>& _125159_r, jule::Ptr<_1e436d157_SlicingExpr>& _125170_s) {
	{
		
		if ((_1c977725c_arr(_125137_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cc1a50a5:;
			{
				_1c9758529_slicing_arr(&(*_self_), _125137_d);
				return;;
			}
		}
		else if ((_1c97774c1_slc(_125137_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cc1a512c:;
			{
				return;;
			}
		}
		else if ((_1c97767ab_prim(_125137_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cc1a51a4:;
			{
				jule::Ptr<_1c9778e51_Prim> _125917_prim = _1c97767ab_prim(_125137_d.get()._field_kind.ptr());;
				{
					
					if (_1c977be10_is_str(_125917_prim.ptr())) {
						_case_begin_1cc1a75a2:;
						{
							_1c97588e2_slicing_str(&(*_self_), _125137_d,_125148_l,_125159_r);
							return;;
						}
					}
					_match_end_1cc1a74e7:;
				};
			}
		}
		_match_end_1cc1a4e95:;
	};
	_1c974cc16_push_err(&(*_self_), _125170_s.get()._field_token,jule::Str("type @ is not support slicing", 29),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_125137_d.get()._field_kind.ptr()))}));
}



inline jule::Ptr<_1c974abc0_Data> _1c9759162_eval_slicing(jule::Ptr<_1c974c73d_Eval> _self_, jule::Ptr<_1e436d157_SlicingExpr> _127036_s) {
	jule::Ptr<_1c974abc0_Data> _127117_d = _1c976602b_eval_expr_kind(_self_, jule::Any(_127036_s.get()._field_expr));;
	if ((_127117_d == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1c974abc0_Data> _127618_l;;
	jule::Ptr<_1c974abc0_Data> _127625_r;;
	std::tie(_127618_l,_127625_r) = _1c97582a4_eval_slicing_exprs(_self_, _127036_s);
	if ((_127618_l == nullptr)) {
		return _127117_d;
	};
	_127117_d.get()._field_decl=false;
	_1c9758d54_check_slicing(_self_.ptr(), _127117_d,_127618_l,_127625_r,_127036_s);
	if (_1c974b583_is_const(_127117_d.ptr())) {
		_127117_d.get()._field_decl=false;
		_127117_d.get()._field_model=jule::Any(_127117_d.get()._field_constant);
	} else if (_127117_d.get()._field_decl) {
		_127117_d.get()._field_decl=false;
	} else {
		jule::Ptr<_1e437bac2_SlicingExprModel> _129421_model = jule::new_ptr<_1e437bac2_SlicingExprModel>(_1e437bac2_SlicingExprModel{._field_token=_127036_s.get()._field_token, ._field_expr=jule::Any(_127117_d.get()._field_model), ._field_left=jule::Any(_127618_l.get()._field_model), });;
		if ((_127625_r != nullptr)) {
			_129421_model.get()._field_right=jule::Any(_127625_r.get()._field_model);
		};
		_127117_d.get()._field_model=jule::Any(_129421_model);
	};
	return _127117_d;
}



inline void _1c975952a_cast_ptr(_1c974c73d_Eval* _self_, jule::Ptr<_1c97746ee_TypeKind> _130731_t, jule::Ptr<_1c974abc0_Data> _130749_d, jule::Ptr<_20cd9e6ec_Token> _130759_error_token) {
	jule::Ptr<_1c977c460_Sptr> _130813_sptr = _1c9776a20_sptr(_130749_d.get()._field_kind.ptr());;
	if ((_130813_sptr != nullptr)) {
		if ((!(_1c9774db4_equals(_1c9776c84_ptr(_130731_t.ptr()).get()._field_elem, _130813_sptr.get()._field_elem)))) {
			_1c974cc16_push_err(&(*_self_), _130759_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_130749_d.get()._field_kind.ptr())),jule::Any(_1c9774aa6_to_str(_130731_t.ptr()))}));
		};
		return;;
	};
	if ((!(_1c974d651_is_unsafe(&(*_self_))))) {
		_1c974cc16_push_err(&(*_self_), _130759_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c9778e51_Prim> _132113_prim = _1c97767ab_prim(_130749_d.get()._field_kind.ptr());;
	if (((_1c9776c84_ptr(_130749_d.get()._field_kind.ptr()) == nullptr) && ((_132113_prim == nullptr) || (!(_1e4683d63_is_int(_1c97792b4_to_str(_132113_prim.ptr()))))))) {
		_1c974cc16_push_err(&(*_self_), _130759_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_130749_d.get()._field_kind.ptr())),jule::Any(_1c9774aa6_to_str(_130731_t.ptr()))}));
	};
	_130749_d.get()._field_constant=nullptr;
}



inline void _1c97598e3_cast_struct(_1c974c73d_Eval* _self_, jule::Ptr<_1c97746ee_TypeKind> _132934_t, jule::Ptr<_1c974abc0_Data> _132952_d, jule::Ptr<_20cd9e6ec_Token> _132962_error_token) {
	jule::Ptr<_1e43d8d0a_Trait> _133017_tr = _1c9777c0d_trt(_132952_d.get()._field_kind.ptr());;
	if ((_133017_tr == nullptr)) {
		_1c974cc16_push_err(&(*_self_), _132962_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_132952_d.get()._field_kind.ptr())),jule::Any(_1c9774aa6_to_str(_132934_t.ptr()))}));
		return;;
	};
	jule::Ptr<_1e43462ea_StructIns> _133617_s = _1c9777999_strct(_132934_t.ptr());;
	_1cc1b76b1_push_reference(&(*_self_), _133617_s);
	if ((!(_1e4340a75_is_implements(_133617_s.get()._field_decl.ptr(), _133017_tr)))) {
		_1c974cc16_push_err(&(*_self_), _132962_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_132952_d.get()._field_kind.ptr())),jule::Any(_1c9774aa6_to_str(_132934_t.ptr()))}));
	};
}



inline void _1c9759cab_cast_ref(_1c974c73d_Eval* _self_, jule::Ptr<_1c97746ee_TypeKind> _134431_t, jule::Ptr<_1c974abc0_Data> _134449_d, jule::Ptr<_20cd9e6ec_Token> _134459_error_token) {
	jule::Ptr<_1c977c460_Sptr> _134517_sptr = _1c9776a20_sptr(_134431_t.ptr());;
	jule::Ptr<_1c97809c4_Ptr> _134717_ptr = _1c9776c84_ptr(_134449_d.get()._field_kind.ptr());;
	if (((_134717_ptr != nullptr) && _1c9774db4_equals(_134517_sptr.get()._field_elem, _134717_ptr.get()._field_elem))) {
		if ((!(_1c974d651_is_unsafe(&(*_self_))))) {
			_1c974cc16_push_err(&(*_self_), _134459_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1c9777999_strct(_134517_sptr.get()._field_elem.ptr()) != nullptr)) {
		_1c97598e3_cast_struct(&(*_self_), _134517_sptr.get()._field_elem,_134449_d,_134459_error_token);
		return;;
	};
	_1c974cc16_push_err(&(*_self_), _134459_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_134449_d.get()._field_kind.ptr())),jule::Any(_1c9774aa6_to_str(_134431_t.ptr()))}));
}



inline void _1c975a174_cast_slc(_1c974c73d_Eval* _self_, jule::Ptr<_1c97746ee_TypeKind> _136631_t, jule::Ptr<_1c974abc0_Data> _136649_d, jule::Ptr<_20cd9e6ec_Token> _136659_error_token) {
	if ((_1c9776ee8_enm(_136649_d.get()._field_kind.ptr()) != nullptr)) {
		if (((_1c97767ab_prim(_1c9776ee8_enm(_136649_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()) == nullptr) || (!(_1c977be10_is_str(_1c97767ab_prim(_1c9776ee8_enm(_136649_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()).ptr()))))) {
			_1c974cc16_push_err(&(*_self_), _136659_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_136649_d.get()._field_kind.ptr())),jule::Any(_1c9774aa6_to_str(_136631_t.ptr()))}));
			return;;
		};
	} else if (((_1c97767ab_prim(_136649_d.get()._field_kind.ptr()) == nullptr) || (!(_1c977be10_is_str(_1c97767ab_prim(_136649_d.get()._field_kind.ptr()).ptr()))))) {
		_1c974cc16_push_err(&(*_self_), _136659_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_136649_d.get()._field_kind.ptr())),jule::Any(_1c9774aa6_to_str(_136631_t.ptr()))}));
		return;;
	};
	_136631_t=_1c97774c1_slc(_136631_t.ptr()).get()._field_elem;
	jule::Ptr<_1c9778e51_Prim> _137813_prim = _1c97767ab_prim(_136631_t.ptr());;
	if (((_137813_prim == nullptr) || ((!(_1c977a4d5_is_u8(_137813_prim.ptr()))) && (!(_1c977a00c_is_i32(_137813_prim.ptr())))))) {
		_1c974cc16_push_err(&(*_self_), _136659_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_136649_d.get()._field_kind.ptr())),jule::Any(_1c9774aa6_to_str(_136631_t.ptr()))}));
	};
}



inline void _1c975a493_cast_str(_1c974c73d_Eval* _self_, jule::Ptr<_1c974abc0_Data> _138431_d, jule::Ptr<_20cd9e6ec_Token> _138441_error_token) {
	if ((_1c9776ee8_enm(_138431_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1e4456b58_Enum> _138621_e = _1c9776ee8_enm(_138431_d.get()._field_kind.ptr());;
		if (((_1c97767ab_prim(_138621_e.get()._field_kind.get()._field_kind.ptr()) != nullptr) && _1c977be10_is_str(_1c97767ab_prim(_138621_e.get()._field_kind.get()._field_kind.ptr()).ptr()))) {
			return;;
		};
	};
	if ((_1c97767ab_prim(_138431_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1c9778e51_Prim> _139317_prim = _1c97767ab_prim(_138431_d.get()._field_kind.ptr());;
		if (((!(_1c977a4d5_is_u8(_139317_prim.ptr()))) && (!(_1c977a00c_is_i32(_139317_prim.ptr()))))) {
			_1c974cc16_push_err(&(*_self_), _138441_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1c9774aa6_to_str(_138431_d.get()._field_kind.ptr()))}));
		};
		return;;
	};
	if ((_1c97774c1_slc(_138431_d.get()._field_kind.ptr()) == nullptr)) {
		_1c974cc16_push_err(&(*_self_), _138441_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1c9774aa6_to_str(_138431_d.get()._field_kind.ptr()))}));
		return;;
	};
	jule::Ptr<_1c97746ee_TypeKind> _140517_t = _1c97774c1_slc(_138431_d.get()._field_kind.ptr()).get()._field_elem;;
	jule::Ptr<_1c9778e51_Prim> _140613_prim = _1c97767ab_prim(_140517_t.ptr());;
	if (((_140613_prim == nullptr) || ((!(_1c977a4d5_is_u8(_140613_prim.ptr()))) && (!(_1c977a00c_is_i32(_140613_prim.ptr())))))) {
		_1c974cc16_push_err(&(*_self_), _138441_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1c9774aa6_to_str(_138431_d.get()._field_kind.ptr()))}));
	};
}



inline void _1c975a85b_cast_int(_1c974c73d_Eval* _self_, jule::Ptr<_1c97746ee_TypeKind> _141231_t, jule::Ptr<_1c974abc0_Data> _141249_d, jule::Ptr<_20cd9e6ec_Token> _141259_error_token) {
	if (_1c974b583_is_const(_141249_d.ptr())) {
		jule::Ptr<_1c9778e51_Prim> _141417_prim = _1c97767ab_prim(_141231_t.ptr());;
		{
			
			if (_1e46837d0_is_sig_int(_141417_prim.get()._field_kind)) {
				_case_begin_1cc1d4ed6:;
				{
					_1c968e372_set_i64(_141249_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1c968db24_as_i64(_141249_d.get()._field_constant.ptr())));
				}
			}
			else if (_1e4683abb_is_unsig_int(_141417_prim.get()._field_kind)) {
				_case_begin_1cc1d505d:;
				{
					_1c968e5e7_set_u64(_141249_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1c968dd88_as_u64(_141249_d.get()._field_constant.ptr())));
				}
			}
			_match_end_1cc1d4e1a:;
		};
	};
	if ((_1c9776ee8_enm(_141249_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1e4456b58_Enum> _142417_e = _1c9776ee8_enm(_141249_d.get()._field_kind.ptr());;
		if (_1e46843e6_is_num(_1c9774aa6_to_str(_142417_e.get()._field_kind.get()._field_kind.ptr()))) {
			return;;
		};
	};
	if ((_1c9776a20_sptr(_141249_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1c9778e51_Prim> _143117_prim = _1c97767ab_prim(_141231_t.ptr());;
		if ((!(_1c977b937_is_uintptr(_143117_prim.ptr())))) {
			_1c974cc16_push_err(&(*_self_), _141259_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_141249_d.get()._field_kind.ptr())),jule::Any(_1c9774aa6_to_str(_141231_t.ptr()))}));
		};
		return;;
	};
	if ((_1c9776c84_ptr(_141249_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1c9778e51_Prim> _143817_prim = _1c97767ab_prim(_141231_t.ptr());;
		if (_1c977b937_is_uintptr(_143817_prim.ptr())) {
		} else if ((!(_1c974d651_is_unsafe(&(*_self_))))) {
			_1c974cc16_push_err(&(*_self_), _141259_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		} else if ((((((!(_1c977a00c_is_i32(_143817_prim.ptr()))) && (!(_1c977a271_is_i64(_143817_prim.ptr())))) && (!(_1c977a749_is_u16(_143817_prim.ptr())))) && (!(_1c977a9ad_is_u32(_143817_prim.ptr())))) && (!(_1c977ac22_is_u64(_143817_prim.ptr()))))) {
			_1c974cc16_push_err(&(*_self_), _141259_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_141249_d.get()._field_kind.ptr())),jule::Any(_1c9774aa6_to_str(_141231_t.ptr()))}));
		};
		return;;
	};
	jule::Ptr<_1c9778e51_Prim> _144913_prim = _1c97767ab_prim(_141249_d.get()._field_kind.ptr());;
	if (((_144913_prim != nullptr) && _1e46843e6_is_num(_1c97792b4_to_str(_144913_prim.ptr())))) {
		return;;
	};
	_1c974cc16_push_err(&(*_self_), _141259_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_141249_d.get()._field_kind.ptr())),jule::Any(_1c9774aa6_to_str(_141231_t.ptr()))}));
}



inline void _1c975ac24_cast_num(_1c974c73d_Eval* _self_, jule::Ptr<_1c97746ee_TypeKind> _145731_t, jule::Ptr<_1c974abc0_Data> _145749_d, jule::Ptr<_20cd9e6ec_Token> _145759_error_token) {
	if (_1c974b583_is_const(_145749_d.ptr())) {
		jule::Ptr<_1c9778e51_Prim> _145917_prim = _1c97767ab_prim(_145731_t.ptr());;
		{
			
			if (_1e468414e_is_float(_145917_prim.get()._field_kind)) {
				_case_begin_1cc1e2d18:;
				{
					_1c968ed67_set_f64(_145749_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1c968e0ec_as_f64(_145749_d.get()._field_constant.ptr())));
				}
			}
			else if (_1e46837d0_is_sig_int(_145917_prim.get()._field_kind)) {
				_case_begin_1cc1e2d90:;
				{
					_1c968e372_set_i64(_145749_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1c968db24_as_i64(_145749_d.get()._field_constant.ptr())));
				}
			}
			else if (_1e4683abb_is_unsig_int(_145917_prim.get()._field_kind)) {
				_case_begin_1cc1e2e17:;
				{
					_1c968e5e7_set_u64(_145749_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1c968dd88_as_u64(_145749_d.get()._field_constant.ptr())));
				}
			}
			_match_end_1cc1e2c3b:;
		};
	};
	if ((_1c9776ee8_enm(_145749_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1e4456b58_Enum> _147117_e = _1c9776ee8_enm(_145749_d.get()._field_kind.ptr());;
		if (_1e46843e6_is_num(_1c9774aa6_to_str(_147117_e.get()._field_kind.get()._field_kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1c9778e51_Prim> _147713_prim = _1c97767ab_prim(_145749_d.get()._field_kind.ptr());;
	if (((_147713_prim != nullptr) && _1e46843e6_is_num(_1c97792b4_to_str(_147713_prim.ptr())))) {
		return;;
	};
	_1c974cc16_push_err(&(*_self_), _145759_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_145749_d.get()._field_kind.ptr())),jule::Any(_1c9774aa6_to_str(_145731_t.ptr()))}));
}



inline void _1c975b0dc_cast_prim(_1c974c73d_Eval* _self_, jule::Ptr<_1c97746ee_TypeKind> _148532_t, jule::Ptr<_1c974abc0_Data> _148550_d, jule::Ptr<_20cd9e6ec_Token> _148560_error_token) {
	jule::Ptr<_1c9778e51_Prim> _148613_prim = _1c97767ab_prim(_148532_t.ptr());;
	{
		
		if (_1c977c174_is_any(_148613_prim.ptr())) {
			_case_begin_1cc1e9d20:;
		}
		else if (_1c977be10_is_str(_148613_prim.ptr())) {
			_case_begin_1cc1e9a12:;
			{
				_1c975a493_cast_str(&(*_self_), _148550_d,_148560_error_token);
			}
		}
		else if (_1e4683d63_is_int(_1c97792b4_to_str(_148613_prim.ptr()))) {
			_case_begin_1cc1e9a78:;
			{
				_1c975a85b_cast_int(&(*_self_), _148532_t,_148550_d,_148560_error_token);
			}
		}
		else if (_1e46843e6_is_num(_1c97792b4_to_str(_148613_prim.ptr()))) {
			_case_begin_1cc1e9ade:;
			{
				_1c975ac24_cast_num(&(*_self_), _148532_t,_148550_d,_148560_error_token);
			}
		}
		else {
			_case_begin_1cc1e999b:;
			{
				_1c974cc16_push_err(&(*_self_), _148560_error_token,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_148532_t.ptr()))}));
			}
		}
		_match_end_1cc1e9924:;
	};
}



inline void _1c975b40b_cast_constant(_1c974c73d_Eval* _self_, jule::Ptr<_1c97746ee_TypeKind>& _150137_t, jule::Ptr<_1c974abc0_Data>& _150156_d) {
	if (((_150156_d == nullptr) || (!(_1c974b583_is_const(_150156_d.ptr()))))) {
		return;;
	};
	jule::Ptr<_1c9778e51_Prim> _150513_prim = _1c97767ab_prim(_150137_t.ptr());;
	_1c9771d8e_cast_const_by_type(_150513_prim.get()._field_kind,_150156_d);
	_150156_d.get()._field_model=jule::Any(_150156_d.get()._field_constant);
}



inline jule::Ptr<_1c974abc0_Data> _1c975b87e_eval_cast_by_type_n_data(_1c974c73d_Eval* _self_, jule::Ptr<_1c97746ee_TypeKind> _151047_t, jule::Ptr<_1c974abc0_Data> _151065_d, jule::Ptr<_20cd9e6ec_Token> _151079_error_token) {
	if (((_151065_d != nullptr) && _151065_d.get()._field_decl)) {
		_1c974cc16_push_err(&(*_self_), _151079_error_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	{
		
		if (((_1c97767ab_prim(_151065_d.get()._field_kind.ptr()) != nullptr) && _1c977c174_is_any(_1c97767ab_prim(_151065_d.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1cc2016d9:;
			{
				if ((_1c9776ee8_enm(_151047_t.ptr()) != nullptr)) {
					_1c974cc16_push_err(&(*_self_), _151079_error_token,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
					_1c974d035_push_suggestion(&(*_self_), jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>());
				};
			}
		}
		else if ((_1c9776c84_ptr(_151047_t.ptr()) != nullptr)) {
			_case_begin_1cc201750:;
			{
				_1c975952a_cast_ptr(&(*_self_), _151047_t,_151065_d,_151079_error_token);
			}
		}
		else if ((_1c9776a20_sptr(_151047_t.ptr()) != nullptr)) {
			_case_begin_1cc2017b6:;
			{
				_1c9759cab_cast_ref(&(*_self_), _151047_t,_151065_d,_151079_error_token);
			}
		}
		else if ((_1c97774c1_slc(_151047_t.ptr()) != nullptr)) {
			_case_begin_1cc20182c:;
			{
				_1c975a174_cast_slc(&(*_self_), _151047_t,_151065_d,_151079_error_token);
			}
		}
		else if ((_1c9777999_strct(_151047_t.ptr()) != nullptr)) {
			_case_begin_1cc202663:;
			{
				_1c97598e3_cast_struct(&(*_self_), _151047_t,_151065_d,_151079_error_token);
			}
		}
		else if ((_1c97767ab_prim(_151047_t.ptr()) != nullptr)) {
			_case_begin_1cc2026c9:;
			{
				_1c975b0dc_cast_prim(&(*_self_), _151047_t,_151065_d,_151079_error_token);
				_1c975b40b_cast_constant(&(*_self_), _151047_t,_151065_d);
			}
		}
		else {
			_case_begin_1cc201673:;
			{
				_1c974cc16_push_err(&(*_self_), _151079_error_token,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_151047_t.ptr()))}));
				_151065_d=nullptr;
			}
		}
		_match_end_1cc200a3a:;
	};
	if ((_151065_d == nullptr)) {
		return nullptr;
	};
	_151065_d.get()._field_mutable=(_151065_d.get()._field_mutable || ((!(_1c9775a96_mutable(_151065_d.get()._field_kind.ptr()))) && _1c9775a96_mutable(_151047_t.ptr())));
	_151065_d.get()._field_lvalue=false;
	_151065_d.get()._field_decl=false;
	if (((_1c9776ee8_enm(_151065_d.get()._field_kind.ptr()) == nullptr) || (!(_1c9774db4_equals(_1c9776ee8_enm(_151065_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind, _151047_t))))) {
		_1c9771322_apply_cast_kind(_151065_d,_151047_t);
		_151065_d.get()._field_model.operator jule::Ptr<_1e434e7dc_CastingExprModel>().get()._field_token=_151079_error_token;
	} else {
		_151065_d.get()._field_kind=_151047_t;
	};
	return _151065_d;
}



inline jule::Ptr<_1c974abc0_Data> _1c975bb9d_eval_cast(jule::Ptr<_1c974c73d_Eval> _self_, jule::Ptr<_1e4368608_CastExpr> _155933_c) {
	jule::Ptr<_1c977858d_TypeSymbol> _156017_t = _1e438744b_build_type(_155933_c.get()._field_kind);;
	jule::Bool _156113_ok = _1e46b34ad_check_type(_self_.get()._field_s, _156017_t,_self_.get()._field_lookup);;
	if ((!(_156113_ok))) {
		return nullptr;
	};
	jule::Ptr<_1c97746ee_TypeKind> _156617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_156617_prefix;
	});;
	jule::Ptr<_1c974abc0_Data> _157017_d = _1c976602b_eval_expr_kind(_self_, jule::Any(_155933_c.get()._field_expr));;
	if ((_157017_d == nullptr)) {
		return nullptr;
	};
	return _1c975b87e_eval_cast_by_type_n_data(_self_.ptr(), _156017_t.get()._field_kind,_157017_d,_155933_c.get()._field_kind.get()._field_token);
}



inline jule::Ptr<_1c974abc0_Data> _1c975beab_eval_ns_selection(_1c974c73d_Eval* _self_, jule::Ptr<_1e43689b0_NsSelectionExpr> _157836_s) {
	jule::Str _157913_path = _1c978b02e_build_link_path_by_tokens(_157836_s.get()._field_ns);;
	jule::Ptr<_1e46a4768_ImportInfo> _158017_imp = _1c978dc35_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1c978c508_select_package((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1e46a4768_ImportInfo>)>([=](jule::Ptr<_1e46a4768_ImportInfo> _158053_imp) mutable -> jule::Bool {
		if (((_157836_s.get()._field_ns.len() == 1LL) && (_158053_imp.get()._field_alias == _157913_path))) {
			return true;
		};
		return ((_158053_imp.get()._field_link_path == _157913_path) && _1e46a712d_is_accessible_via_selection(_158053_imp.ptr()));
	}));;
	if ((_158017_imp == nullptr)) {
		_1c974cc16_push_err(&(*_self_), _157836_s.get()._field_ident,jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_157913_path)}));
		return nullptr;
	};
	jule::Trait<_1c978dc35_Lookup> _159217_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_1c978dc35_Lookup>(_158017_imp, 1);
	;
	_1c974d3dc_disallow_builtin(&(*_self_));
	jule::Any _159717_def = _1c9750c5d_get_def(&(*_self_), _157836_s.get()._field_ident.get()._field_kind,false);;
	_1c974d211_allow_builtin(&(*_self_));
	(*_self_)._field_lookup=_159217_lookup;
	jule::Ptr<_1c974abc0_Data> _160117_d = _1c97540b3_eval_def(&(*_self_), jule::Any(_159717_def),_157836_s.get()._field_ident);;
	return _160117_d;
}



inline jule::Ptr<_1c974abc0_Data> _1c975c42e_eval_struct_lit_explicit(jule::Ptr<_1c974c73d_Eval> _self_, jule::Ptr<_1e43462ea_StructIns> _160648_s, jule::Slice<jule::Ptr<_1e43659e0_Expr>> _160713_exprs, jule::Ptr<_20cd9e6ec_Token> _160733_error_token) {
	jule::Bool _160813_ok = _1e46b1214_check_generic_quantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_160648_s.get()._field_decl.get()._field_generics.len()),static_cast<jule::I64>(_160648_s.get()._field_generics.len()),_160733_error_token);;
	if ((!(_160813_ok))) {
		return nullptr;
	};
	if (((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_decl.get()._field_owner == _160648_s.get()._field_decl))) {
		_1c974cc16_push_err(_self_.ptr(), _160733_error_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_160648_s.get()._field_decl.get()._field_ident)}));
	};
	_1cc1b76b1_push_reference(_self_.ptr(), _160648_s);
	_1c975248a_check_deprecated(_self_.ptr(), _160648_s.get()._field_decl.get()._field_directives,_160733_error_token);
	_1c9740247_StructLitChecker _162117_slc = _1c9740247_StructLitChecker{._field_e=_self_, ._field_error_token=_160733_error_token, ._field_s=_160648_s, };;
	_1c97417dc_check(&_162117_slc, _160713_exprs);
	return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_160648_s, 0)}), ._field_mutable=(!(_self_.get()._field_immutable)), ._field_model=jule::Any(jule::new_ptr<_1e433b004_StructLitExprModel>(_1e433b004_StructLitExprModel{._field_strct=_160648_s, ._field_args=_162117_slc._field_args})), });
}



inline jule::Ptr<_1c974abc0_Data> _1c975c74d_eval_struct_lit(jule::Ptr<_1c974c73d_Eval> _self_, jule::Ptr<_1e436ac9d_StructLit> _164039_lit) {
	jule::Ptr<_1c977858d_TypeSymbol> _164117_t = _1e438744b_build_type(_164039_lit.get()._field_kind);;
	jule::Bool _164213_ok = _1e46b34ad_check_type(_self_.get()._field_s, _164117_t,_self_.get()._field_lookup);;
	if ((!(_164213_ok))) {
		return nullptr;
	};
	jule::Ptr<_1e43462ea_StructIns> _164717_s = _1c9777999_strct(_164117_t.get()._field_kind.ptr());;
	if ((_164717_s == nullptr)) {
		if ((_1c9776a20_sptr(_164117_t.get()._field_kind.ptr()) != nullptr)) {
			_164717_s=_1c9777999_strct(_1c9776a20_sptr(_164117_t.get()._field_kind.ptr()).get()._field_elem.ptr());
			if ((_164717_s != nullptr)) {
				goto _julec_label_eval;
			};
		};
		_1c974cc16_push_err(_self_.ptr(), _164039_lit.get()._field_kind.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_julec_label_eval:;
	jule::Ptr<_1c974abc0_Data> _166017_d = _1c975c42e_eval_struct_lit_explicit(_self_, _164717_s,_164039_lit.get()._field_exprs,_164039_lit.get()._field_kind.get()._field_token);;
	if ((_1c9776a20_sptr(_164117_t.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1e433b004_StructLitExprModel> _166221_model = _166017_d.get()._field_model.operator jule::Ptr<_1e433b004_StructLitExprModel>();;
		_1c976ec7c_make_struct_lit_alloc(_166017_d,_166221_model);
	};
	return _166017_d;
}



inline jule::Ptr<_1c974abc0_Data> _1c975ca5b_eval_type(_1c974c73d_Eval* _self_, jule::Ptr<_1e436257a_TypeDecl> _166832_t) {
	jule::Ptr<_1c977858d_TypeSymbol> _166917_tk = _1e438744b_build_type(_166832_t);;
	jule::Bool _167013_ok = _1e46b34ad_check_type((*_self_)._field_s, _166917_tk,(*_self_)._field_lookup);;
	if ((!(_167013_ok))) {
		return nullptr;
	};
	return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=_166917_tk.get()._field_kind, ._field_model=jule::Any(_166917_tk.get()._field_kind), ._field_decl=true, });
}



inline void _1c975cd7a_call_type_fn(jule::Ptr<_1c974c73d_Eval> _self_, jule::Ptr<_1e43699b1_FnCallExpr>& _168137_fc, jule::Ptr<_1c974abc0_Data>& _168159_d) {
	if ((_168137_fc.get()._field_generics.len() > 0LL)) {
		_1c974cc16_push_err(_self_.ptr(), _168137_fc.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_168159_d.get()._field_kind.ptr()))}));
	} else if ((_168137_fc.get()._field_args.len() < 1LL)) {
		_1c974cc16_push_err(_self_.ptr(), _168137_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1))}));
	} else if ((_168137_fc.get()._field_args.len() > 1LL)) {
		_1c974cc16_push_err(_self_.ptr(), _168137_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	if ((_168137_fc.get()._field_args.len() > 0LL)) {
		jule::Ptr<_1c97746ee_TypeKind> _169121_prefix = _self_.get()._field_prefix;;
		_self_.get()._field_prefix=nullptr;
		jule::Ptr<_1c974abc0_Data> _169321_arg = _1c976602b_eval_expr_kind(_self_, jule::Any(_168137_fc.get()._field_args[0LL].get()._field_kind));;
		_self_.get()._field_prefix=_169121_prefix;
		if ((_169321_arg != nullptr)) {
			_168159_d=_1c975b87e_eval_cast_by_type_n_data(_self_.ptr(), _168159_d.get()._field_kind,_169321_arg,_168137_fc.get()._field_args[0LL].get()._field_token);
		};
	};
	if ((_168159_d != nullptr)) {
		_168159_d.get()._field_decl=false;
	};
}



inline std::tuple<jule::Bool,jule::Bool> _1c975d232_check_fn_call_generics(_1c974c73d_Eval* _self_, jule::Ptr<_1e4383018_FnIns> _170545_f, jule::Ptr<_1e43699b1_FnCallExpr> _170613_fc) {
	jule::Bool _170632_ok = jule::Bool();
	jule::Bool _170642_dynamic_annotation = jule::Bool();
	{
		
		if ((((_170545_f.get()._field_decl.get()._field_generics.len() > 0LL) && (_170613_fc.get()._field_generics.len() == 0LL)) && (_170545_f.get()._field_params.len() > 0LL))) {
			_case_begin_1cc230b03:;
			{
				_170642_dynamic_annotation=true;
				_170545_f.get()._field_generics=jule::Slice<jule::Ptr<_1c97746ee_TypeKind>>::alloc(_170545_f.get()._field_decl.get()._field_generics.len());
				_170632_ok = true;
				_170642_dynamic_annotation = true;
				return std::make_tuple(_170632_ok,_170642_dynamic_annotation);
			}
		}
		else if ((!(_1e46b1214_check_generic_quantity((*_self_)._field_s.ptr(), static_cast<jule::I64>(_170545_f.get()._field_decl.get()._field_generics.len()),static_cast<jule::I64>(_170613_fc.get()._field_generics.len()),_170613_fc.get()._field_token)))) {
			_case_begin_1cc230b69:;
			{
				_170632_ok = false;
				_170642_dynamic_annotation = false;
				return std::make_tuple(_170632_ok,_170642_dynamic_annotation);
			}
		}
		else {
			_case_begin_1cc22cade:;
			{
				_170545_f.get()._field_generics=jule::Slice<jule::Ptr<_1c97746ee_TypeKind>>::alloc(0LL,_170545_f.get()._field_decl.get()._field_generics.len());
				{
					auto &expr = _170613_fc.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1cc22cec9:;
					if (it != expr.end()) {
						jule::Ptr<_1e436257a_TypeDecl> _171825_g = *it;
						{
							jule::Ptr<_1c977858d_TypeSymbol> _171925_k = _1e438744b_build_type(_171825_g);;
							_170632_ok=_1e46b34ad_check_type((*_self_)._field_s, _171925_k,(*_self_)._field_lookup);
							if ((!(_170632_ok))) {
								_170632_ok = false;
								_170642_dynamic_annotation = false;
								return std::make_tuple(_170632_ok,_170642_dynamic_annotation);
							};
							_170545_f.get()._field_generics = jule::alloc_for_append(_170545_f.get()._field_generics,1);_170545_f.get()._field_generics.__push(_171925_k.get()._field_kind);;
						}
						_iter_next_1cc22cec9:;
						++it;
						goto _iter_begin_1cc22cec9;
					}
					_iter_end_1cc22cec9:;
				};
				_170632_ok = true;
				_170642_dynamic_annotation = false;
				return std::make_tuple(_170632_ok,_170642_dynamic_annotation);
			}
		}
		_match_end_1cc22ca34:;
	};
}



inline void _1c975d551_call_builtin_fn(jule::Ptr<_1c974c73d_Eval> _self_, jule::Ptr<_1e43699b1_FnCallExpr>& _173140_fc, jule::Ptr<_1c974abc0_Data>& _173162_d) {
	_173162_d=_1c9777735_fnc(_173162_d.get()._field_kind.ptr()).get()._field_caller(_self_,_173140_fc,_173162_d);
	if ((_173162_d == nullptr)) {
		return;;
	};
	_173162_d.get()._field_mutable=true;
}



inline void _1c975d892_check_fn_of_concurrent_call(_1c974c73d_Eval* _self_, jule::Ptr<_1e4383018_FnIns>& _173947_f, jule::Ptr<_20cd9e6ec_Token> _173958_error_token) {
	if (_1c974d651_is_unsafe(&(*_self_))) {
		return;;
	};
	{
		auto &expr = _173947_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1cc23617a:;
		if (it != expr.end()) {
			jule::Ptr<_1e438217c_ParamIns> &_174416_p = *it;
			{
				if (_174416_p.get()._field_decl.get()._field_reference) {
					_1c974cc16_push_err(&(*_self_), _173958_error_token,jule::Str("concurrent calls does not support functions which is has reference parameter(s)", 79),jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1cc23617a:;
			++it;
			goto _iter_begin_1cc23617a;
		}
		_iter_end_1cc23617a:;
	};
}



inline void _1c975dc8d_process_exceptional_handler(_1c974c73d_Eval* _self_, jule::Ptr<_1e4383018_FnIns>& _175251_f, jule::Ptr<_1e43699b1_FnCallExpr>& _175267_fc, jule::Ptr<_1c974abc0_Data>& _175289_d) {
	jule::Bool _175313_result_needed = ((!(_1e43807c9_is_void(_175251_f.get()._field_decl.ptr()))) && ((*_self_)._field_arg || (!((*_self_)._field_ignored))));;
	jule::Ptr<_1e468ce7c_ScopeChecker> _175417_csc = nullptr;;
	jule::Ptr<_1e46862c7_Scope> _175517_ch = nullptr;;
	jule::Ptr<_1e4354902_FnCallExprModel> _175717_model = _175289_d.get()._field_model.operator jule::Ptr<_1e4354902_FnCallExprModel>();;
	jule::Ptr<_1e468ce7c_ScopeChecker> _176117_sc = (*_self_)._field_lookup.operator jule::Ptr<_1e468ce7c_ScopeChecker>();;
	_175417_csc=_1e469d234_new_child_checker(_176117_sc);
	if (_175313_result_needed) {
		_175417_csc.get()._field_result=_175251_f;
	};
	_175517_ch=_1e4692558_get_child(_176117_sc.ptr());
	_175267_fc.get()._field_exception.get()._field_parent=_176117_sc.get()._field_tree;
	_175417_csc.get()._field_table.get()._field_vars = jule::alloc_for_append(_175417_csc.get()._field_table.get()._field_vars,1);_175417_csc.get()._field_table.get()._field_vars.__push(_1c97700bd_build_error_var(_175517_ch,_175267_fc));;
	_1e4692921_check_child_ssc(_176117_sc, _175267_fc.get()._field_exception,_175517_ch,_175417_csc);
	_175717_model.get()._field_assigned=_175313_result_needed;
	_175717_model.get()._field_except=_175517_ch;
	if ((_175313_result_needed && (_175417_csc.get()._field_result != nullptr))) {
		_1c974cc16_push_err(&(*_self_), _175267_fc.get()._field_token,jule::Str("assignments requires expression", 31),jule::Slice<jule::Any>());
	};
}



inline void _1c975e0bd_call_fn(jule::Ptr<_1c974c73d_Eval> _self_, jule::Ptr<_1e43699b1_FnCallExpr>& _177932_fc, jule::Ptr<_1c974abc0_Data>& _177954_d) {
	jule::Ptr<_1e4383018_FnIns> _178017_f = _1c9777735_fnc(_177954_d.get()._field_kind.ptr());;
	if ((_1c974d8b5_is_global(_self_.ptr()) && _178017_f.get()._field_decl.get()._field_exceptional)) {
		_1c974cc16_push_err(_self_.ptr(), _177932_fc.get()._field_token,jule::Str("exceptionals are not allowed in global scope", 44),jule::Slice<jule::Any>());
		_1c974d035_push_suggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48),jule::Slice<jule::Any>());
		_177954_d=nullptr;
		return;;
	};
	if (_1e4383c94_is_builtin(_178017_f.ptr())) {
		_1c975d551_call_builtin_fn(_self_, _177932_fc,_177954_d);
		return;;
	};
	if (((!(_1e4380a3d_is_method(_178017_f.get()._field_decl.ptr()))) && _1c978a160_has_directive(_178017_f.get()._field_decl.get()._field_directives,jule::Str("test", 4)))) {
		_1c974cc16_push_err(_self_.ptr(), _177932_fc.get()._field_token,jule::Str("you cannot call test functions", 30),jule::Slice<jule::Any>());
		_177954_d=nullptr;
		return;;
	};
	if (((((!(_177954_d.get()._field_mutable)) && _1e4380a3d_is_method(_178017_f.get()._field_decl.ptr())) && (!(_178017_f.get()._field_decl.get()._field_statically))) && _178017_f.get()._field_decl.get()._field_params[0LL].get()._field_mutable)) {
		_1c974cc16_push_err(_self_.ptr(), _177932_fc.get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	} else if (((!(_1c974d651_is_unsafe(_self_.ptr()))) && _178017_f.get()._field_decl.get()._field_unsafety)) {
		_1c974cc16_push_err(_self_.ptr(), _177932_fc.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	jule::Bool _180518_ok;;
	jule::Bool _180522_dynamic_annotation;;
	std::tie(_180518_ok,_180522_dynamic_annotation) = _1c975d232_check_fn_call_generics(_self_.ptr(), _178017_f,_177932_fc);
	if ((!(_180518_ok))) {
		_177954_d=nullptr;
		return;;
	};
	jule::Ptr<_1e46ac452_Sema> _181117_old = _self_.get()._field_s;;
	if ((_178017_f.get()._field_decl.get()._field_owner != nullptr)) {
		_self_.get()._field_s=_178017_f.get()._field_decl.get()._field_owner.get()._field_sema;
	};
	__JULE_DEFER({
		if ((_181117_old != _self_.get()._field_s)) {
			_181117_old.get()._field_errors=jule::append(_181117_old.get()._field_errors,_self_.get()._field_s.get()._field_errors);
			_self_.get()._field_s.get()._field_errors=nullptr;
		};
		_self_.get()._field_s=_181117_old;
	});;
	if ((!(_180522_dynamic_annotation))) {
		if ((!(_178017_f.get()._field_reloaded))) {
			_180518_ok=_1e46b63e5_reload_fn_ins_types(_self_.get()._field_s, _178017_f);
			if ((!(_180518_ok))) {
				_177954_d=nullptr;
				return;;
			};
			_178017_f.get()._field_reloaded=true;
		};
	} else if ((_178017_f.get()._field_generics.len() > 0LL)) {
		_1e46b5c85_build_fn_non_generic_type_kinds(_self_.get()._field_s, _178017_f);
	};
	_1c973c83d_FnCallArgChecker _183717_fcac = _1c973c83d_FnCallArgChecker{._field_e=_self_, ._field_args=_177932_fc.get()._field_args, ._field_error_token=_177932_fc.get()._field_token, ._field_f=_178017_f, ._field_dynamic_annotation=_180522_dynamic_annotation, };;
	if ((_178017_f.get()._field_decl.get()._field_owner != nullptr)) {
		std::tie(_181117_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_181117_old);
		_180518_ok=_1c973ec08_check(&_183717_fcac);
		std::tie(_181117_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_181117_old);
	} else {
		_180518_ok=_1c973ec08_check(&_183717_fcac);
	};
	if (((!(_180518_ok)) && _180522_dynamic_annotation)) {
		_177954_d=nullptr;
		return;;
	};
	if (_180522_dynamic_annotation) {
		_180518_ok=_1e46b63e5_reload_fn_ins_types(_self_.get()._field_s, _178017_f);
		if ((!(_180518_ok))) {
			_177954_d=nullptr;
			return;;
		};
		_178017_f.get()._field_reloaded=true;
	};
	jule::Ptr<_1e4383018_FnIns> _186617_exist_instance = _1e4381cc5_append_instance(_178017_f.get()._field_decl.ptr(), _178017_f);;
	if ((_186617_exist_instance != nullptr)) {
		_178017_f=_186617_exist_instance;
	};
	jule::Any _187117_call_model = _177954_d.get()._field_model;;
	if (_1e43807c9_is_void(_178017_f.get()._field_decl.ptr())) {
		_177954_d=_1c9771520_build_void_data();
	} else {
		_177954_d.get()._field_kind=_178017_f.get()._field_result;
		_177954_d.get()._field_lvalue=false;
	};
	jule::Ptr<_1e4354902_FnCallExprModel> _188017_model = jule::new_ptr<_1e4354902_FnCallExprModel>(_1e4354902_FnCallExprModel{._field_token=_177932_fc.get()._field_token, ._field_func=_178017_f, ._field_expr=jule::Any(_187117_call_model), ._field_args=_183717_fcac._field_arg_models, });;
	_177954_d.get()._field_model=jule::Any(_188017_model);
	_177954_d.get()._field_mutable=true;
	if (_178017_f.get()._field_decl.get()._field_exceptional) {
		{
			
			if (_1e4369e34_unhandled(_177932_fc.ptr())) {
				_case_begin_1cc250848:;
				{
					_1c974cc16_push_err(_self_.ptr(), _177932_fc.get()._field_token,jule::Str("exceptionals must be handled", 28),jule::Slice<jule::Any>());
					_1c974d035_push_suggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47),jule::Slice<jule::Any>());
				}
			}
			else if (_1e436a198_ignored(_177932_fc.ptr())) {
				_case_begin_1cc25053a:;
				{
					goto _match_end_1cc250408;
				}
			}
			else {
				_case_begin_1cc2504c4:;
				{
					_1c975dc8d_process_exceptional_handler(_self_.ptr(), _178017_f,_177932_fc,_177954_d);
				}
			}
			_match_end_1cc250408:;
		};
	} else if ((!(_1e4369e34_unhandled(_177932_fc.ptr())))) {
		_1c974cc16_push_err(_self_.ptr(), _177932_fc.get()._field_token,jule::Str("non-exceptionals cannot handled like exceptionals", 49),jule::Slice<jule::Any>());
	};
	if ((_178017_f.get()._field_generics.len() > 0LL)) {
		if ((_186617_exist_instance != nullptr)) {
			_1c977228a_update_model_to_generic_ins(_188017_model,_178017_f);
		} else {
			_1e46c27b9_check_fn_ins_caller(_self_.get()._field_s, _178017_f,_177932_fc.get()._field_token);
		};
	};
}



inline jule::Ptr<_1c974abc0_Data> _1c975e3cb_eval_fn_call(jule::Ptr<_1c974c73d_Eval> _self_, jule::Ptr<_1e43699b1_FnCallExpr> _191936_fc) {
	jule::Ptr<_1c97746ee_TypeKind> _192017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_192017_prefix;
	});;
	{
		auto &_match_expr{ _191936_fc.get()._field_expr.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e4367690_IdentExpr>>()) {
			_case_begin_1cc2551cc:;
			{
				if ((_191936_fc.get()._field_expr.get()._field_token.get()._field_kind == jule::Str("error", 5))) {
					return _1c98034e7_builtin_caller_error(_self_,_191936_fc);
				};
			}
		}
		_match_end_1cc255177:;
	};
	jule::Ptr<_1c974abc0_Data> _193317_d = _1c976602b_eval_expr_kind(_self_, jule::Any(_191936_fc.get()._field_expr.get()._field_kind));;
	if ((_193317_d == nullptr)) {
		return nullptr;
	};
	if (_193317_d.get()._field_decl) {
		_1c975cd7a_call_type_fn(_self_, _191936_fc,_193317_d);
		return _193317_d;
	};
	if ((_1c9777735_fnc(_193317_d.get()._field_kind.ptr()) == nullptr)) {
		_1c974cc16_push_err(_self_.ptr(), _191936_fc.get()._field_token,jule::Str("attempting to call a non-function", 33),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1c975e0bd_call_fn(_self_, _191936_fc,_193317_d);
	return _193317_d;
}



inline jule::Ptr<_1c974abc0_Data> _1c975e783_eval_enum_static(_1c974c73d_Eval* _self_, jule::Ptr<_1e4456b58_Enum> _195239_enm, jule::Ptr<_20cd9e6ec_Token> _195251_ident) {
	jule::Ptr<_1c974abc0_Data> _195317_d = jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_195239_enm, 3)}), ._field_mutable=false, ._field_lvalue=false, ._field_decl=false, });;
	jule::Ptr<_1e4392797_EnumItem> _196217_item = _1e5c31145_find_item(_195239_enm.ptr(), _195251_ident.get()._field_kind);;
	if ((_196217_item == nullptr)) {
		_1c974cc16_push_err(&(*_self_), _195251_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_195239_enm.get()._field_ident),jule::Any(_195251_ident.get()._field_kind)}));
	} else {
		_195317_d.get()._field_constant=jule::new_ptr<_1c968bb88_Const>((*(_196217_item.get()._field_value.get()._field_data.get()._field_constant)));
		_195317_d.get()._field_model=jule::Any(_195317_d.get()._field_constant);
		_1c9771ac5_apply_cast_model_by_enum(_195317_d,_195239_enm);
	};
	return _195317_d;
}



inline jule::Ptr<_1c974abc0_Data> _1c975eb3a_eval_struct_static(_1c974c73d_Eval* _self_, jule::Ptr<_1e43462ea_StructIns> _197441_s, jule::Ptr<_20cd9e6ec_Token> _197456_ident) {
	jule::Ptr<_1c974abc0_Data> _197517_d = jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_mutable=false, ._field_lvalue=false, ._field_decl=false, });;
	;
	jule::Ptr<_1e4380576_Fn> _198317_method = _1e4342758_find_method(_197441_s.ptr(), _197456_ident.get()._field_kind,true);;
	if ((_198317_method != nullptr)) {
		if ((!(_1e46b0543_is_accessible_define((*_self_)._field_s.ptr(), _198317_method.get()._field_public,_198317_method.get()._field_token)))) {
			_1c974cc16_push_err(&(*_self_), _197456_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_197456_ident.get()._field_kind)}));
			_1c974d035_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_1e4383018_FnIns> _199021_ins = _1e43819b7_instance(_198317_method);;
		_199021_ins.get()._field_owner=_197441_s;
		_1cb9219ba_push_reference(&(*_self_), _199021_ins);
		_197517_d.get()._field_model=jule::Any(jule::new_ptr<_1e437c3b9_StructStaticIdentExprModel>(_1e437c3b9_StructStaticIdentExprModel{._field_structure=_197441_s, ._field_expr=jule::Any(_197517_d.get()._field_model), ._field_method=_199021_ins}));
		_197517_d.get()._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_199021_ins, 1)});
		return _197517_d;
	};
	jule::Ptr<_1e46c6eb6_Var> _200417_sttc = _1e433ce90_find_static(_197441_s.get()._field_decl.ptr(), _197456_ident.get()._field_kind);;
	if ((_200417_sttc != nullptr)) {
		return _1c9753854_eval_var(&(*_self_), _200417_sttc,_197456_ident);
	};
	_1c974cc16_push_err(&(*_self_), _197456_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_197441_s.get()._field_decl.get()._field_ident),jule::Any(_197456_ident.get()._field_kind)}));
	return nullptr;
}



inline jule::Ptr<_1c974abc0_Data> _1c976008b_eval_trait_sub_ident(_1c974c73d_Eval* _self_, jule::Ptr<_1c974abc0_Data> _201343_d, jule::Ptr<_1e43d8d0a_Trait> _201357_trt, jule::Ptr<_20cd9e6ec_Token> _201374_ident) {
	jule::Ptr<_1e4380576_Fn> _201417_f = _1e44161ab_find_method(_201357_trt.ptr(), _201374_ident.get()._field_kind);;
	if ((_201417_f == nullptr)) {
		_1c974cc16_push_err(&(*_self_), _201374_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_201357_trt.get()._field_ident),jule::Any(_201374_ident.get()._field_kind)}));
		return nullptr;
	};
	return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1e43819b7_instance(_201417_f), 1)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=jule::Any(jule::new_ptr<_1e437bcae_TraitSubIdentExprModel>(_1e437bcae_TraitSubIdentExprModel{._field_token=_201374_ident, ._field_expr=jule::Any(_201343_d.get()._field_model), ._field_method=_201417_f, ._field_trt=_201357_trt})), ._field_decl=false, });
}



inline jule::Ptr<_1c974abc0_Data> _1c9760586_eval_struct_sub_ident(_1c974c73d_Eval* _self_, jule::Ptr<_1c974abc0_Data> _203644_d, jule::Ptr<_1e43462ea_StructIns> _203658_s, jule::Ptr<_1e4368e33_SubIdentExpr> _203677_si, jule::Bool _203696_ref) {
	jule::Ptr<_1e434014b_FieldIns> _203717_f = _1e4356b35_find_field(_203658_s.ptr(), _203677_si.get()._field_ident.get()._field_kind);;
	if ((_203717_f != nullptr)) {
		if ((!(_1e46b0543_is_accessible_define((*_self_)._field_s.ptr(), _203717_f.get()._field_decl.get()._field_public,_203717_f.get()._field_decl.get()._field_token)))) {
			_1c974cc16_push_err(&(*_self_), _203677_si.get()._field_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_203717_f.get()._field_decl.get()._field_ident)}));
			_1c974d035_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_1e437c1cc_StructSubIdentExprModel> _204421_model = jule::new_ptr<_1e437c1cc_StructSubIdentExprModel>(_1e437c1cc_StructSubIdentExprModel{._field_token=_203677_si.get()._field_ident, ._field_expr=jule::new_ptr<_1c974abc0_Data>((*(_203644_d))), ._field_expr_kind=_203644_d.get()._field_kind, ._field_field=_203717_f});;
		_203644_d.get()._field_model=jule::Any(_204421_model);
		_203644_d.get()._field_kind=_203717_f.get()._field_kind;
		_203644_d.get()._field_lvalue=true;
		if ((_203717_f.get()._field_decl.get()._field_mutable && (!(_203644_d.get()._field_mutable)))) {
			{
				auto &_match_expr{ (*_self_)._field_lookup };
				
				if (_match_expr.type_is<jule::Ptr<_1e468ce7c_ScopeChecker>>()) {
					_case_begin_1cc26d14b:;
					{
						jule::Ptr<_1e468ce7c_ScopeChecker> _205825_scope = _1e4690ca4_get_root((*_self_)._field_lookup.operator jule::Ptr<_1e468ce7c_ScopeChecker>());;
						_203644_d.get()._field_mutable=((_205825_scope.get()._field_owner != nullptr) && (_205825_scope.get()._field_owner.get()._field_owner == _203658_s));
					}
				}
				_match_end_1cc26d0e6:;
			};
		};
		return _203644_d;
	};
	;
	jule::Ptr<_1e4380576_Fn> _206717_m = _1e4342758_find_method(_203658_s.ptr(), _203677_si.get()._field_ident.get()._field_kind,false);;
	if ((_206717_m == nullptr)) {
		_1c974cc16_push_err(&(*_self_), _203677_si.get()._field_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_203658_s.get()._field_decl.get()._field_ident),jule::Any(_203677_si.get()._field_ident.get()._field_kind)}));
		return nullptr;
	};
	if ((!(_1e46b0543_is_accessible_define((*_self_)._field_s.ptr(), _206717_m.get()._field_public,_206717_m.get()._field_token)))) {
		_1c974cc16_push_err(&(*_self_), _203677_si.get()._field_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_206717_m.get()._field_ident)}));
		_1c974d035_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	if ((_1e4355edb_is_ref(_206717_m.get()._field_params[0LL].ptr()) && (!(_203696_ref)))) {
		_1c974cc16_push_err(&(*_self_), _203677_si.get()._field_ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>());
	};
	_1c975248a_check_deprecated(&(*_self_), _206717_m.get()._field_directives,_203677_si.get()._field_ident);
	jule::Ptr<_1e4383018_FnIns> _208317_ins = _1e43819b7_instance(_206717_m);;
	_208317_ins.get()._field_owner=_203658_s;
	_1cb9219ba_push_reference(&(*_self_), _208317_ins);
	jule::Ptr<_1c974abc0_Data> _208617_model = jule::new_ptr<_1c974abc0_Data>((*(_203644_d)));;
	_203644_d.get()._field_model=jule::Any(jule::new_ptr<_1e437c1cc_StructSubIdentExprModel>(_1e437c1cc_StructSubIdentExprModel{._field_token=_203677_si.get()._field_ident, ._field_expr=_208617_model, ._field_expr_kind=_203644_d.get()._field_kind, ._field_method=_208317_ins, }));
	_203644_d.get()._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_208317_ins, 1)});
	return _203644_d;
}



inline jule::Ptr<_1c974abc0_Data> _1c976093d_eval_slice_sub_ident(_1c974c73d_Eval* _self_, jule::Ptr<_1c974abc0_Data> _209743_d, jule::Ptr<_20cd9e6ec_Token> _209757_ident) {
	{
		auto &_match_expr{ _209757_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1cc2778b4:;
			{
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("int", 3)), 5)}), ._field_mutable=false, ._field_model=jule::Any(jule::new_ptr<_1e437c980_CommonSubIdentExprModel>(_1e437c980_CommonSubIdentExprModel{._field_expr_kind=_209743_d.get()._field_kind, ._field_expr=jule::Any(_209743_d.get()._field_model), ._field_token=_209757_ident, ._field_ident=jule::Str("len()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1cc27873e:;
			{
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("int", 3)), 5)}), ._field_mutable=false, ._field_model=jule::Any(jule::new_ptr<_1e437c980_CommonSubIdentExprModel>(_1e437c980_CommonSubIdentExprModel{._field_expr_kind=_209743_d.get()._field_kind, ._field_expr=jule::Any(_209743_d.get()._field_model), ._field_token=_209757_ident, ._field_ident=jule::Str("cap()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1cc2787a5:;
			{
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(jule::new_ptr<_1e4383018_FnIns>(_1e4383018_FnIns{._field_params=jule::Slice<jule::Ptr<_1e438217c_ParamIns>>::make({jule::new_ptr<_1e438217c_ParamIns>(_1e438217c_ParamIns{._field_decl=jule::new_ptr<_1e4380389_Param>(_1e4380389_Param{._field_ident=jule::Str("i", 1)}), ._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("int", 3)), 5)})}),jule::new_ptr<_1e438217c_ParamIns>(_1e438217c_ParamIns{._field_decl=jule::new_ptr<_1e4380389_Param>(_1e4380389_Param{._field_ident=jule::Str("j", 1)}), ._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("int", 3)), 5)})})}), ._field_caller=jule::Fn<jule::Ptr<_1c974abc0_Data>(jule::Ptr<_1c974c73d_Eval>&,jule::Ptr<_1e43699b1_FnCallExpr>&,jule::Ptr<_1c974abc0_Data>&)>(_1c97b4497_builtin_caller_common_mut), }), 1)}), ._field_mutable=_209743_d.get()._field_mutable, ._field_model=jule::Any(jule::new_ptr<_1e437c980_CommonSubIdentExprModel>(_1e437c980_CommonSubIdentExprModel{._field_expr_kind=_209743_d.get()._field_kind, ._field_expr=jule::Any(_209743_d.get()._field_model), ._field_token=_209757_ident, ._field_ident=jule::Str("swap", 4)})), });
			}
		}
		else {
			_case_begin_1cc2772ed:;
			{
				_1c974cc16_push_err(&(*_self_), _209757_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_209743_d.get()._field_kind.ptr())),jule::Any(_209757_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1cc2774da:;
	};
}



inline jule::Ptr<_1c974abc0_Data> _1c9760ce5_eval_array_sub_ident(_1c974c73d_Eval* _self_, jule::Ptr<_1c974abc0_Data> _215643_d, jule::Ptr<_20cd9e6ec_Token> _215657_ident) {
	{
		auto &_match_expr{ _215657_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1cc27d854:;
			{
				jule::Ptr<_1c968bb88_Const> _215921_c = static__1c968ab87_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1c977725c_arr(_215643_d.get()._field_kind.ptr()).get()._field_n)));;
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("int", 3)), 5)}), ._field_mutable=false, ._field_model=jule::Any(_215921_c), ._field_constant=_215921_c});
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1cc27e6ce:;
			{
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(jule::new_ptr<_1e4383018_FnIns>(_1e4383018_FnIns{._field_params=jule::Slice<jule::Ptr<_1e438217c_ParamIns>>::make({jule::new_ptr<_1e438217c_ParamIns>(_1e438217c_ParamIns{._field_decl=jule::new_ptr<_1e4380389_Param>(_1e4380389_Param{._field_ident=jule::Str("i", 1)}), ._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("int", 3)), 5)})}),jule::new_ptr<_1e438217c_ParamIns>(_1e438217c_ParamIns{._field_decl=jule::new_ptr<_1e4380389_Param>(_1e4380389_Param{._field_ident=jule::Str("j", 1)}), ._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("int", 3)), 5)})})}), ._field_caller=jule::Fn<jule::Ptr<_1c974abc0_Data>(jule::Ptr<_1c974c73d_Eval>&,jule::Ptr<_1e43699b1_FnCallExpr>&,jule::Ptr<_1c974abc0_Data>&)>(_1c97b4497_builtin_caller_common_mut), }), 1)}), ._field_mutable=_215643_d.get()._field_mutable, ._field_model=jule::Any(jule::new_ptr<_1e437c980_CommonSubIdentExprModel>(_1e437c980_CommonSubIdentExprModel{._field_expr_kind=_215643_d.get()._field_kind, ._field_expr=jule::Any(_215643_d.get()._field_model), ._field_token=_215657_ident, ._field_ident=jule::Str("swap", 4)})), });
			}
		}
		else {
			_case_begin_1cc27d28d:;
			{
				_1c974cc16_push_err(&(*_self_), _215657_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_215643_d.get()._field_kind.ptr())),jule::Any(_215657_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1cc27d47a:;
	};
}



inline jule::Ptr<_1c974abc0_Data> _1c976119c_eval_map_sub_ident(_1c974c73d_Eval* _self_, jule::Ptr<_1c974abc0_Data> _220141_d, jule::Ptr<_20cd9e6ec_Token> _220155_ident) {
	jule::Ptr<_1c977e473_Map> _220217_map_kind = _1c9777e72_map(_220141_d.get()._field_kind.ptr());;
	{
		auto &_match_expr{ _220155_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1cc285482:;
			{
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("int", 3)), 5)}), ._field_mutable=false, ._field_model=jule::Any(jule::new_ptr<_1e437c980_CommonSubIdentExprModel>(_1e437c980_CommonSubIdentExprModel{._field_expr_kind=_220141_d.get()._field_kind, ._field_expr=jule::Any(_220141_d.get()._field_model), ._field_token=_220155_ident, ._field_ident=jule::Str("len()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("clear", 5)) {
			_case_begin_1cc2854e8:;
			{
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(jule::new_ptr<_1e4383018_FnIns>(_1e4383018_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c974abc0_Data>(jule::Ptr<_1c974c73d_Eval>&,jule::Ptr<_1e43699b1_FnCallExpr>&,jule::Ptr<_1c974abc0_Data>&)>(_1c97b4497_builtin_caller_common_mut), }), 1)}), ._field_mutable=_220141_d.get()._field_mutable, ._field_model=jule::Any(jule::new_ptr<_1e437c980_CommonSubIdentExprModel>(_1e437c980_CommonSubIdentExprModel{._field_expr_kind=_220141_d.get()._field_kind, ._field_expr=jule::Any(_220141_d.get()._field_model), ._field_token=_220155_ident, ._field_ident=jule::Str("clear", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("keys", 4)) {
			_case_begin_1cc2852ea:;
			{
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(jule::new_ptr<_1e4383018_FnIns>(_1e4383018_FnIns{._field_result=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(jule::new_ptr<_1c977cdbc_Slc>(_1c977cdbc_Slc{._field_elem=_220217_map_kind.get()._field_key}), 7)}), ._field_caller=jule::Fn<jule::Ptr<_1c974abc0_Data>(jule::Ptr<_1c974c73d_Eval>&,jule::Ptr<_1e43699b1_FnCallExpr>&,jule::Ptr<_1c974abc0_Data>&)>(_1c97b4497_builtin_caller_common_mut), }), 1)}), ._field_mutable=_220141_d.get()._field_mutable, ._field_model=jule::Any(jule::new_ptr<_1e437c980_CommonSubIdentExprModel>(_1e437c980_CommonSubIdentExprModel{._field_expr_kind=_220141_d.get()._field_kind, ._field_expr=jule::Any(_220141_d.get()._field_model), ._field_token=_220155_ident, ._field_ident=jule::Str("keys", 4)})), });
			}
		}
		else if (_match_expr == jule::Str("values", 6)) {
			_case_begin_1cc285361:;
			{
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(jule::new_ptr<_1e4383018_FnIns>(_1e4383018_FnIns{._field_result=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(jule::new_ptr<_1c977cdbc_Slc>(_1c977cdbc_Slc{._field_elem=_220217_map_kind.get()._field_val}), 7)}), ._field_caller=jule::Fn<jule::Ptr<_1c974abc0_Data>(jule::Ptr<_1c974c73d_Eval>&,jule::Ptr<_1e43699b1_FnCallExpr>&,jule::Ptr<_1c974abc0_Data>&)>(_1c97b4497_builtin_caller_common_mut), }), 1)}), ._field_mutable=_220141_d.get()._field_mutable, ._field_model=jule::Any(jule::new_ptr<_1e437c980_CommonSubIdentExprModel>(_1e437c980_CommonSubIdentExprModel{._field_expr_kind=_220141_d.get()._field_kind, ._field_expr=jule::Any(_220141_d.get()._field_model), ._field_token=_220155_ident, ._field_ident=jule::Str("values", 6)})), });
			}
		}
		else if (_match_expr == jule::Str("has", 3)) {
			_case_begin_1cc2853c7:;
			{
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(jule::new_ptr<_1e4383018_FnIns>(_1e4383018_FnIns{._field_params=jule::Slice<jule::Ptr<_1e438217c_ParamIns>>::make({jule::new_ptr<_1e438217c_ParamIns>(_1e438217c_ParamIns{._field_decl=jule::new_ptr<_1e4380389_Param>(_1e4380389_Param{._field_ident=jule::Str("key", 3)}), ._field_kind=_220217_map_kind.get()._field_key})}), ._field_result=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("bool", 4)), 5)}), ._field_caller=jule::Fn<jule::Ptr<_1c974abc0_Data>(jule::Ptr<_1c974c73d_Eval>&,jule::Ptr<_1e43699b1_FnCallExpr>&,jule::Ptr<_1c974abc0_Data>&)>(_1c97b4365_builtin_caller_common), }), 1)}), ._field_mutable=_220141_d.get()._field_mutable, ._field_model=jule::Any(jule::new_ptr<_1e437c980_CommonSubIdentExprModel>(_1e437c980_CommonSubIdentExprModel{._field_expr_kind=_220141_d.get()._field_kind, ._field_expr=jule::Any(_220141_d.get()._field_model), ._field_token=_220155_ident, ._field_ident=jule::Str("has", 3)})), });
			}
		}
		else if (_match_expr == jule::Str("del", 3)) {
			_case_begin_1cc283edb:;
			{
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(jule::new_ptr<_1e4383018_FnIns>(_1e4383018_FnIns{._field_params=jule::Slice<jule::Ptr<_1e438217c_ParamIns>>::make({jule::new_ptr<_1e438217c_ParamIns>(_1e438217c_ParamIns{._field_decl=jule::new_ptr<_1e4380389_Param>(_1e4380389_Param{._field_ident=jule::Str("key", 3)}), ._field_kind=_220217_map_kind.get()._field_key})}), ._field_caller=jule::Fn<jule::Ptr<_1c974abc0_Data>(jule::Ptr<_1c974c73d_Eval>&,jule::Ptr<_1e43699b1_FnCallExpr>&,jule::Ptr<_1c974abc0_Data>&)>(_1c97b4497_builtin_caller_common_mut), }), 1)}), ._field_mutable=_220141_d.get()._field_mutable, ._field_model=jule::Any(jule::new_ptr<_1e437c980_CommonSubIdentExprModel>(_1e437c980_CommonSubIdentExprModel{._field_expr_kind=_220141_d.get()._field_kind, ._field_expr=jule::Any(_220141_d.get()._field_model), ._field_token=_220155_ident, ._field_ident=jule::Str("del", 3)})), });
			}
		}
		else {
			_case_begin_1cc283826:;
			{
				_1c974cc16_push_err(&(*_self_), _220155_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1c977e7d6_to_str(_220217_map_kind.ptr())),jule::Any(_220155_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1cc283da9:;
	};
}



inline jule::Ptr<_1c974abc0_Data> _1c9761554_eval_str_sub_ident(_1c974c73d_Eval* _self_, jule::Ptr<_1c974abc0_Data> _232441_d, jule::Ptr<_20cd9e6ec_Token> _232455_ident) {
	jule::Ptr<_1c97746ee_TypeKind> _232517_str_kind = jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("str", 3)), 5)});;
	{
		auto &_match_expr{ _232455_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1cc28e9a8:;
			{
				jule::Ptr<_1c974abc0_Data> _232821_sd = jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("int", 3)), 5)}), });;
				if (_1c974b583_is_const(_232441_d.ptr())) {
					_232821_sd.get()._field_constant=static__1c968ab87_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1c968d64b_read_str(_232441_d.get()._field_constant.ptr()).len())));
					_232821_sd.get()._field_model=jule::Any(_232821_sd.get()._field_constant);
				} else {
					_232821_sd.get()._field_model=jule::Any(jule::new_ptr<_1e437c980_CommonSubIdentExprModel>(_1e437c980_CommonSubIdentExprModel{._field_expr_kind=_232441_d.get()._field_kind, ._field_expr=jule::Any(_232441_d.get()._field_model), ._field_token=_232455_ident, ._field_ident=jule::Str("len()", 5)}));
				};
				return _232821_sd;
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1cc290745:;
			{
				jule::Ptr<_1c974abc0_Data> _234421_sd = jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("int", 3)), 5)}), });;
				if (_1c974b583_is_const(_232441_d.ptr())) {
					_234421_sd.get()._field_constant=static__1c968ab87_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1c968d64b_read_str(_232441_d.get()._field_constant.ptr()).cap())));
					_234421_sd.get()._field_model=jule::Any(_234421_sd.get()._field_constant);
				} else {
					_234421_sd.get()._field_model=jule::Any(jule::new_ptr<_1e437c980_CommonSubIdentExprModel>(_1e437c980_CommonSubIdentExprModel{._field_expr_kind=_232441_d.get()._field_kind, ._field_expr=jule::Any(_232441_d.get()._field_model), ._field_token=_232455_ident, ._field_ident=jule::Str("cap()", 5)}));
				};
				return _234421_sd;
			}
		}
		else {
			_case_begin_1cc28dd1a:;
			{
				_1c974cc16_push_err(&(*_self_), _232455_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_232517_str_kind.ptr())),jule::Any(_232455_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1cc28e5e0:;
	};
}



inline jule::Ptr<_1c974abc0_Data> _1c9761862_eval_int_type_static(_1c974c73d_Eval* _self_, jule::Ptr<_20cd9e6ec_Token> _236539_ident) {
	;
	{
		auto &_match_expr{ _236539_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1cc2965a3:;
			{
				jule::Ptr<_1c968bb88_Const> _237021_c = static__1c968ab87_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1e467d8b8_max(jule::Str("int", 3)))));;
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("int", 3)), 5)}), ._field_model=jule::Any(_237021_c), ._field_constant=_237021_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1cc297241:;
			{
				jule::Ptr<_1c968bb88_Const> _237721_c = static__1c968ab87_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1e467d5cc_min(jule::Str("int", 3)))));;
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("int", 3)), 5)}), ._field_model=jule::Any(_237721_c), ._field_constant=_237721_c});
			}
		}
		else {
			_case_begin_1cc295ea9:;
			{
				_1c974cc16_push_err(&(*_self_), _236539_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3)),jule::Any(_236539_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1cc296240:;
	};
}



inline jule::Ptr<_1c974abc0_Data> _1c9761b70_eval_uint_type_static(_1c974c73d_Eval* _self_, jule::Ptr<_20cd9e6ec_Token> _238940_ident) {
	;
	{
		auto &_match_expr{ _238940_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1cc29a860:;
			{
				jule::Ptr<_1c968bb88_Const> _239421_c = static__1c968bd75_new_u64(static_cast<jule::U64>(static_cast<jule::U64>(_1e467d8b8_max(jule::Str("uint", 4)))));;
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("uint", 4)), 5)}), ._field_model=jule::Any(_239421_c), ._field_constant=_239421_c});
			}
		}
		else {
			_case_begin_1cc29a266:;
			{
				_1c974cc16_push_err(&(*_self_), _238940_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4)),jule::Any(_238940_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1cc29a4ec:;
	};
}



inline jule::Ptr<_1c974abc0_Data> _1c9761e7d_eval_i8_type_static(_1c974c73d_Eval* _self_, jule::Ptr<_20cd9e6ec_Token> _240638_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _240638_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1cc29e07d:;
			{
				jule::Ptr<_1c968bb88_Const> _241321_c = static__1c968ab87_new_i64(127LL);;
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("i8", 2)), 5)}), ._field_model=jule::Any(_241321_c), ._field_constant=_241321_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1cc29ec2c:;
			{
				jule::Ptr<_1c968bb88_Const> _242021_c = static__1c968ab87_new_i64(-128LL);;
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("i8", 2)), 5)}), ._field_model=jule::Any(_242021_c), ._field_constant=_242021_c});
			}
		}
		else {
			_case_begin_1cc29d91d:;
			{
				_1c974cc16_push_err(&(*_self_), _240638_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2)),jule::Any(_240638_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1cc29dc4d:;
	};
}



inline jule::Ptr<_1c974abc0_Data> _1c976228b_eval_i16_type_static(_1c974c73d_Eval* _self_, jule::Ptr<_20cd9e6ec_Token> _243239_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _243239_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1cc2a34a0:;
			{
				jule::Ptr<_1c968bb88_Const> _243921_c = static__1c968ab87_new_i64(32767LL);;
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("i16", 3)), 5)}), ._field_model=jule::Any(_243921_c), ._field_constant=_243921_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1cc2a414e:;
			{
				jule::Ptr<_1c968bb88_Const> _244621_c = static__1c968ab87_new_i64(-32768LL);;
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("i16", 3)), 5)}), ._field_model=jule::Any(_244621_c), ._field_constant=_244621_c});
			}
		}
		else {
			_case_begin_1cc2a2d40:;
			{
				_1c974cc16_push_err(&(*_self_), _243239_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3)),jule::Any(_243239_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1cc2a3170:;
	};
}



inline jule::Ptr<_1c974abc0_Data> _1c9762599_eval_i32_type_static(_1c974c73d_Eval* _self_, jule::Ptr<_20cd9e6ec_Token> _245839_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _245839_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1cc2a78c2:;
			{
				jule::Ptr<_1c968bb88_Const> _246521_c = static__1c968ab87_new_i64(2147483647LL);;
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("i32", 3)), 5)}), ._field_model=jule::Any(_246521_c), ._field_constant=_246521_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1cc2a8571:;
			{
				jule::Ptr<_1c968bb88_Const> _247221_c = static__1c968ab87_new_i64(-2147483648LL);;
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("i32", 3)), 5)}), ._field_model=jule::Any(_247221_c), ._field_constant=_247221_c});
			}
		}
		else {
			_case_begin_1cc2a7262:;
			{
				_1c974cc16_push_err(&(*_self_), _245839_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3)),jule::Any(_245839_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1cc2a7592:;
	};
}



inline jule::Ptr<_1c974abc0_Data> _1c97628a7_eval_i64_type_static(_1c974c73d_Eval* _self_, jule::Ptr<_20cd9e6ec_Token> _248439_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _248439_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1cc2abce4:;
			{
				jule::Ptr<_1c968bb88_Const> _249121_c = static__1c968ab87_new_i64(jule::MAX_I64);;
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("i64", 3)), 5)}), ._field_model=jule::Any(_249121_c), ._field_constant=_249121_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1cc2ac993:;
			{
				jule::Ptr<_1c968bb88_Const> _249821_c = static__1c968ab87_new_i64(jule::MIN_I64);;
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("i64", 3)), 5)}), ._field_model=jule::Any(_249821_c), ._field_constant=_249821_c});
			}
		}
		else {
			_case_begin_1cc2ab684:;
			{
				_1c974cc16_push_err(&(*_self_), _248439_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3)),jule::Any(_248439_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1cc2ab9b4:;
	};
}



inline jule::Ptr<_1c974abc0_Data> _1c9762bb5_eval_u8_type_static(_1c974c73d_Eval* _self_, jule::Ptr<_20cd9e6ec_Token> _251038_ident) {
	;
	;
	{
		auto &_match_expr{ _251038_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1cc2b0dd6:;
			{
				jule::Ptr<_1c968bb88_Const> _251621_c = static__1c968bd75_new_u64(255LLU);;
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("u8", 2)), 5)}), ._field_model=jule::Any(_251621_c), ._field_constant=_251621_c});
			}
		}
		else {
			_case_begin_1cc2b02e2:;
			{
				_1c974cc16_push_err(&(*_self_), _251038_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2)),jule::Any(_251038_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1cc2b0a1d:;
	};
}



inline jule::Ptr<_1c974abc0_Data> _1c9762ec3_eval_u16_type_static(_1c974c73d_Eval* _self_, jule::Ptr<_20cd9e6ec_Token> _252839_ident) {
	;
	;
	{
		auto &_match_expr{ _252839_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1cc2b4060:;
			{
				jule::Ptr<_1c968bb88_Const> _253421_c = static__1c968bd75_new_u64(65535LLU);;
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("u16", 3)), 5)}), ._field_model=jule::Any(_253421_c), ._field_constant=_253421_c});
			}
		}
		else {
			_case_begin_1cc2b3427:;
			{
				_1c974cc16_push_err(&(*_self_), _252839_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3)),jule::Any(_252839_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1cc2b3b53:;
	};
}



inline jule::Ptr<_1c974abc0_Data> _1c97632d1_eval_u32_type_static(_1c974c73d_Eval* _self_, jule::Ptr<_20cd9e6ec_Token> _254639_ident) {
	;
	;
	{
		auto &_match_expr{ _254639_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1cc2b7195:;
			{
				jule::Ptr<_1c968bb88_Const> _255221_c = static__1c968bd75_new_u64(4294967295LLU);;
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("u32", 3)), 5)}), ._field_model=jule::Any(_255221_c), ._field_constant=_255221_c});
			}
		}
		else {
			_case_begin_1cc2b655c:;
			{
				_1c974cc16_push_err(&(*_self_), _254639_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3)),jule::Any(_254639_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1cc2b6c88:;
	};
}



inline jule::Ptr<_1c974abc0_Data> _1c97635de_eval_u64_type_static(_1c974c73d_Eval* _self_, jule::Ptr<_20cd9e6ec_Token> _256439_ident) {
	;
	;
	{
		auto &_match_expr{ _256439_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1cc2ba286:;
			{
				jule::Ptr<_1c968bb88_Const> _257021_c = static__1c968bd75_new_u64(jule::MAX_U64);;
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("u64", 3)), 5)}), ._field_model=jule::Any(_257021_c), ._field_constant=_257021_c});
			}
		}
		else {
			_case_begin_1cc2b9692:;
			{
				_1c974cc16_push_err(&(*_self_), _256439_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3)),jule::Any(_256439_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1cc2b9dbd:;
	};
}



inline jule::Ptr<_1c974abc0_Data> _1c97638ec_eval_f32_type_tatic(_1c974c73d_Eval* _self_, jule::Ptr<_20cd9e6ec_Token> _258238_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _258238_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1cc2be653:;
			{
				jule::Ptr<_1c968bb88_Const> _259021_c = static__1c968c617_new_f64(340282346638528860000000000000000000000.0);;
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("f32", 3)), 5)}), ._field_model=jule::Any(_259021_c), ._field_constant=_259021_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1cc2be6b9:;
			{
				jule::Ptr<_1c968bb88_Const> _259721_c = static__1c968c617_new_f64(-340282346638528860000000000000000000000.0);;
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("f32", 3)), 5)}), ._field_model=jule::Any(_259721_c), ._field_constant=_259721_c});
			}
		}
		else if (_match_expr == jule::Str("SMALLEST_NON_ZERO", 17)) {
			_case_begin_1cc2be4bb:;
			{
				jule::Ptr<_1c968bb88_Const> _260421_c = static__1c968c617_new_f64(0.000000000000000000000000000000000000000000001401298464324817);;
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("f32", 3)), 5)}), ._field_model=jule::Any(_260421_c), ._field_constant=_260421_c});
			}
		}
		else {
			_case_begin_1cc2bd014:;
			{
				_1c974cc16_push_err(&(*_self_), _258238_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3)),jule::Any(_258238_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1cc2bd652:;
	};
}



inline jule::Ptr<_1c974abc0_Data> _1c9763c0a_eval_f64_type_static(_1c974c73d_Eval* _self_, jule::Ptr<_20cd9e6ec_Token> _261639_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _261639_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1cc2c4cda:;
			{
				jule::Ptr<_1c968bb88_Const> _262421_c = static__1c968c617_new_f64(jule::MAX_F64);;
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("f64", 3)), 5)}), ._field_model=jule::Any(_262421_c), ._field_constant=_262421_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1cc2c4d51:;
			{
				jule::Ptr<_1c968bb88_Const> _263121_c = static__1c968c617_new_f64(jule::MIN_F64);;
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("f64", 3)), 5)}), ._field_model=jule::Any(_263121_c), ._field_constant=_263121_c});
			}
		}
		else if (_match_expr == jule::Str("SMALLEST_NON_ZERO", 17)) {
			_case_begin_1cc2c4b53:;
			{
				jule::Ptr<_1c968bb88_Const> _263821_c = static__1c968c617_new_f64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("f64", 3)), 5)}), ._field_model=jule::Any(_263821_c), ._field_constant=_263821_c});
			}
		}
		else {
			_case_begin_1cc2c369b:;
			{
				_1c974cc16_push_err(&(*_self_), _261639_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3)),jule::Any(_261639_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1cc2c3cd9:;
	};
}



inline jule::Ptr<_1c974abc0_Data> _1c97640b2_eval_prim_static(_1c974c73d_Eval* _self_, jule::Str _265035_kind, jule::Ptr<_20cd9e6ec_Token> _265046_ident) {
	{
		auto &_match_expr{ _265035_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1cc2c954d:;
			{
				return _1c9761862_eval_int_type_static(&(*_self_), _265046_ident);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1cc2c95b4:;
			{
				return _1c9761b70_eval_uint_type_static(&(*_self_), _265046_ident);
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1cc2c962a:;
			{
				return _1c9761e7d_eval_i8_type_static(&(*_self_), _265046_ident);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1cc2c88e3:;
			{
				return _1c976228b_eval_i16_type_static(&(*_self_), _265046_ident);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1cc2c8959:;
			{
				return _1c9762599_eval_i32_type_static(&(*_self_), _265046_ident);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1cc2c89c0:;
			{
				return _1c97628a7_eval_i64_type_static(&(*_self_), _265046_ident);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1cc2c8a36:;
			{
				return _1c9762bb5_eval_u8_type_static(&(*_self_), _265046_ident);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1cc2c8a9c:;
			{
				return _1c9762ec3_eval_u16_type_static(&(*_self_), _265046_ident);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1cc2c97b2:;
			{
				return _1c97632d1_eval_u32_type_static(&(*_self_), _265046_ident);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1cc2c9828:;
			{
				return _1c97635de_eval_u64_type_static(&(*_self_), _265046_ident);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1cc2c98a0:;
			{
				return _1c97638ec_eval_f32_type_tatic(&(*_self_), _265046_ident);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1cc2c9927:;
			{
				return _1c9763c0a_eval_f64_type_static(&(*_self_), _265046_ident);
			}
		}
		else {
			_case_begin_1cc2c85d5:;
			{
				_1c974cc16_push_err(&(*_self_), _265046_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_265035_kind),jule::Any(_265046_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1cc2c8706:;
	};
}



inline jule::Ptr<_1c974abc0_Data> _1c9764469_eval_type_static(_1c974c73d_Eval* _self_, jule::Ptr<_1c974abc0_Data> _268239_d, jule::Ptr<_1e4368e33_SubIdentExpr> _268253_si) {
	{
		
		if ((_1c97767ab_prim(_268239_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cc2ceec1:;
			{
				return _1c97640b2_eval_prim_static(&(*_self_), _1c97792b4_to_str(_1c97767ab_prim(_268239_d.get()._field_kind.ptr()).ptr()),_268253_si.get()._field_ident);
			}
		}
		else if ((_1c9776ee8_enm(_268239_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cc2d0b70:;
			{
				return _1c975e783_eval_enum_static(&(*_self_), _1c9776ee8_enm(_268239_d.get()._field_kind.ptr()),_268253_si.get()._field_ident);
			}
		}
		else if ((_1c9777999_strct(_268239_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cc2d0bd6:;
			{
				return _1c975eb3a_eval_struct_static(&(*_self_), _1c9777999_strct(_268239_d.get()._field_kind.ptr()),_268253_si.get()._field_ident);
			}
		}
		else {
			_case_begin_1cc2ceb4c:;
			{
				_1c974cc16_push_err(&(*_self_), _268253_si.get()._field_ident,jule::Str("type @ is not supports sub-defines", 34),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_268239_d.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1cc2cea92:;
	};
}



inline jule::Ptr<_1c974abc0_Data> _1c9764821_eval_obj_sub_ident(_1c974c73d_Eval* _self_, jule::Ptr<_1c974abc0_Data> _269641_d, jule::Ptr<_1e4368e33_SubIdentExpr> _269655_si) {
	if (_20cda1e4c_is_ignore_ident(_269655_si.get()._field_ident.get()._field_kind)) {
		_1c974cc16_push_err(&(*_self_), _269655_si.get()._field_ident,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1c97746ee_TypeKind> _270217_kind = _269641_d.get()._field_kind;;
	{
		
		if ((_1c9776c84_ptr(_269641_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cc2d57ac:;
			{
				jule::Ptr<_1c97809c4_Ptr> _270517_ptr = _1c9776c84_ptr(_269641_d.get()._field_kind.ptr());;
				if (_1c9781497_is_unsafe(_270517_ptr.ptr())) {
					goto _match_end_1cc2d56d0;
				};
				if (((!(_269655_si.get()._field_is_self)) && (!(_1c974d651_is_unsafe(&(*_self_)))))) {
					_1c974cc16_push_err(&(*_self_), _269655_si.get()._field_ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				_270217_kind=_1c9776c84_ptr(_269641_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		else if ((_1c9776a20_sptr(_269641_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cc2d5823:;
			{
				_270217_kind=_1c9776a20_sptr(_269641_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		_match_end_1cc2d56d0:;
	};
	{
		
		if ((_1c9777c0d_trt(_269641_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cc2d844c:;
			{
				return _1c976008b_eval_trait_sub_ident(&(*_self_), _269641_d,_1c9777c0d_trt(_269641_d.get()._field_kind.ptr()),_269655_si.get()._field_ident);
			}
		}
		else if ((_1c9777999_strct(_270217_kind.ptr()) != nullptr)) {
			_case_begin_1cc2d84c4:;
			{
				jule::Ptr<_1e43462ea_StructIns> _272117_s = _1c9777999_strct(_270217_kind.ptr());;
				if (_1c97709d6_is_instanced_struct(_272117_s)) {
					jule::Bool _272325_used_reference_elem = (_1c9776a20_sptr(_269641_d.get()._field_kind.ptr()) != nullptr);;
					return _1c9760586_eval_struct_sub_ident(&(*_self_), _269641_d,_1c9777999_strct(_270217_kind.ptr()),_269655_si,_272325_used_reference_elem);
				};
			}
		}
		else if ((_1c97774c1_slc(_270217_kind.ptr()) != nullptr)) {
			_case_begin_1cc2d854b:;
			{
				return _1c976093d_eval_slice_sub_ident(&(*_self_), _269641_d,_269655_si.get()._field_ident);
			}
		}
		else if ((_1c977725c_arr(_270217_kind.ptr()) != nullptr)) {
			_case_begin_1cc2d85c3:;
			{
				return _1c9760ce5_eval_array_sub_ident(&(*_self_), _269641_d,_269655_si.get()._field_ident);
			}
		}
		else if ((_1c9777e72_map(_270217_kind.ptr()) != nullptr)) {
			_case_begin_1cc2d864a:;
			{
				return _1c976119c_eval_map_sub_ident(&(*_self_), _269641_d,_269655_si.get()._field_ident);
			}
		}
		else if ((_1c97767ab_prim(_270217_kind.ptr()) != nullptr)) {
			_case_begin_1cc2d8b78:;
			{
				jule::Ptr<_1c9778e51_Prim> _273317_p = _1c97767ab_prim(_270217_kind.ptr());;
				{
					auto &_match_expr{ _273317_p.get()._field_kind };
					
					if (_match_expr == jule::Str("str", 3)) {
						_case_begin_1cc2de83d:;
						{
							return _1c9761554_eval_str_sub_ident(&(*_self_), _269641_d,_269655_si.get()._field_ident);
						}
					}
					_match_end_1cc2de7c7:;
				};
			}
		}
		_match_end_1cc2d8370:;
	};
	_1c974cc16_push_err(&(*_self_), _269655_si.get()._field_ident,jule::Str("object @ is not supports sub-defines", 36),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_269641_d.get()._field_kind.ptr()))}));
	return nullptr;
}



inline jule::Ptr<_1c974abc0_Data> _1c9764b2e_eval_sub_ident(jule::Ptr<_1c974c73d_Eval> _self_, jule::Ptr<_1e4368e33_SubIdentExpr> _274338_si) {
	jule::Ptr<_1c97746ee_TypeKind> _274417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_274417_prefix;
	});;
	jule::Ptr<_1c974abc0_Data> _274817_d = _1c976602b_eval_expr_kind(_self_, jule::Any(_274338_si.get()._field_expr));;
	if ((_274817_d == nullptr)) {
		return nullptr;
	};
	if (_274817_d.get()._field_decl) {
		return _1c9764469_eval_type_static(_self_.ptr(), _274817_d,_274338_si);
	};
	return _1c9764821_eval_obj_sub_ident(_self_.ptr(), _274817_d,_274338_si);
}



inline jule::Ptr<_1c974abc0_Data> _1c9764e3c_eval_tuple(jule::Ptr<_1c974c73d_Eval> _self_, jule::Ptr<_1e4366183_TupleExpr> _276034_tup) {
	jule::Ptr<_1c977d8b2_Tuple> _276117_tup_t = jule::new_ptr<_1c977d8b2_Tuple>(_1c977d8b2_Tuple{});;
	_276117_tup_t.get()._field_types=jule::Slice<jule::Ptr<_1c97746ee_TypeKind>>::alloc(0LL,_276034_tup.get()._field_expr.len());
	jule::Ptr<_1e437cb6c_TupleExprModel> _276417_model = jule::new_ptr<_1e437cb6c_TupleExprModel>(_1e437cb6c_TupleExprModel{._field_datas=jule::Slice<jule::Ptr<_1c974abc0_Data>>::alloc(0LL,_276034_tup.get()._field_expr.len())});;
	jule::Bool _276817_ok = true;;
	{
		auto &expr = _276034_tup.get()._field_expr;
		auto it = expr.begin();
		_iter_begin_1cc2e59dc:;
		if (it != expr.end()) {
			jule::Ptr<_1e43659e0_Expr> _276921_expr = *it;
			{
				jule::Ptr<_1c974abc0_Data> _277021_d = _1c976602b_eval_expr_kind(_self_, jule::Any(_276921_expr.get()._field_kind));;
				if ((_277021_d == nullptr)) {
					_276817_ok=false;
					goto _iter_next_1cc2e59dc;
				};
				_276117_tup_t.get()._field_types = jule::alloc_for_append(_276117_tup_t.get()._field_types,1);_276117_tup_t.get()._field_types.__push(_277021_d.get()._field_kind);;
				_276417_model.get()._field_datas = jule::alloc_for_append(_276417_model.get()._field_datas,1);_276417_model.get()._field_datas.__push(_277021_d);;
			}
			_iter_next_1cc2e59dc:;
			++it;
			goto _iter_begin_1cc2e59dc;
		}
		_iter_end_1cc2e59dc:;
	};
	if ((!(_276817_ok))) {
		return nullptr;
	};
	return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_276117_tup_t, 8)}), ._field_model=jule::Any(_276417_model), });
}



inline jule::Ptr<_1c974abc0_Data> _1c97652e4_eval_map(jule::Ptr<_1c974c73d_Eval> _self_, jule::Ptr<_1c977e473_Map> _278932_m, jule::Ptr<_1e436b221_BraceLit> _278945_lit) {
	jule::Ptr<_1e437b8d5_MapExprModel> _279017_model = jule::new_ptr<_1e437b8d5_MapExprModel>(_1e437b8d5_MapExprModel{._field_key_kind=_278932_m.get()._field_key, ._field_val_kind=_278932_m.get()._field_val, });;
	{
		auto &expr = _278945_lit.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1cc2ee51d:;
		if (it != expr.end()) {
			jule::Ptr<_1e43659e0_Expr> _279521_expr = *it;
			{
				{
					auto &_match_expr{ _279521_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1e436b9e6_KeyValPair>>()) {
						_case_begin_1cc2eeab2:;
						{
							goto _match_end_1cc2eec9e;
						}
					}
					else {
						_case_begin_1cc2eed04:;
						{
							_1c974cc16_push_err(_self_.ptr(), _278945_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							return nullptr;
						}
					}
					_match_end_1cc2eec9e:;
				};
				jule::Ptr<_1e436b9e6_KeyValPair> _280521_pair = _279521_expr.get()._field_kind.operator jule::Ptr<_1e436b9e6_KeyValPair>();;
				jule::Ptr<_1c974abc0_Data> _280721_key = _1c976602b_eval_expr_kind(_self_, jule::Any(_280521_pair.get()._field_key));;
				if ((_280721_key == nullptr)) {
					return nullptr;
				};
				jule::Ptr<_1c974abc0_Data> _281221_val = _1c976602b_eval_expr_kind(_self_, jule::Any(_280521_pair.get()._field_val));;
				if ((_281221_val == nullptr)) {
					return nullptr;
				};
				_1e46b516e_check_assign_type(_self_.get()._field_s, false,_278932_m.get()._field_key,_280721_key,_280521_pair.get()._field_colon);
				_1e46b516e_check_assign_type(_self_.get()._field_s, false,_278932_m.get()._field_val,_281221_val,_280521_pair.get()._field_colon);
				_279017_model.get()._field_entries = jule::alloc_for_append(_279017_model.get()._field_entries,1);_279017_model.get()._field_entries.__push(jule::new_ptr<_1e437b6e8_KeyValPairExprModel>(_1e437b6e8_KeyValPairExprModel{._field_key=jule::Any(_280721_key.get()._field_model), ._field_val=jule::Any(_281221_val.get()._field_model)}));;
			}
			_iter_next_1cc2ee51d:;
			++it;
			goto _iter_begin_1cc2ee51d;
		}
		_iter_end_1cc2ee51d:;
	};
	return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_278932_m, 9)}), ._field_mutable=true, ._field_model=jule::Any(_279017_model), });
}



inline jule::Ptr<_1c974abc0_Data> _1c9765602_eval_brace_lit(jule::Ptr<_1c974c73d_Eval> _self_, jule::Ptr<_1e436b221_BraceLit> _283338_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_1cc305e3c:;
			{
				_1c974cc16_push_err(_self_.ptr(), _283338_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else if ((_1c9777e72_map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1cc305d3d:;
			{
				return _1c97652e4_eval_map(_self_, _1c9777e72_map(_self_.get()._field_prefix.ptr()),_283338_lit);
			}
		}
		else if ((_1c9777999_strct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1cc305da4:;
			{
				return _1c975c42e_eval_struct_lit_explicit(_self_, _1c9777999_strct(_self_.get()._field_prefix.ptr()),_283338_lit.get()._field_exprs,_283338_lit.get()._field_token);
			}
		}
		else {
			_case_begin_1cc3051d3:;
			{
				_1c974cc16_push_err(_self_.ptr(), _283338_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1cc305117:;
	};
}



inline jule::Ptr<_1c974abc0_Data> _1c9765910_eval_anon_fn(_1c974c73d_Eval* _self_, jule::Ptr<_1e4371ca4_FnDecl> _284835_decl) {
	_1c9782663_TypeChecker _284917_tc = _1c9782663_TypeChecker{._field_s=(*_self_)._field_s, ._field_lookup=(*_self_)._field_lookup, };;
	jule::Ptr<_1e4383018_FnIns> _285317_ins = _1c97885d1_build_fn(&_284917_tc, _284835_decl);;
	_285317_ins.get()._field_anon=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1e468ce7c_ScopeChecker>>()) {
			_case_begin_1cc3091b5:;
			{
				jule::Ptr<_1e468ce7c_ScopeChecker> _285821_sc = (*_self_)._field_lookup.operator jule::Ptr<_1e468ce7c_ScopeChecker>();;
				jule::Ptr<_1e468ce7c_ScopeChecker> _285921_scc = _1e469d234_new_child_checker(_285821_sc);;
				_285921_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1e468bbe5_ScopeLabel>>>(nullptr);
				_285921_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1e468c168_ScopeGoto>>>(nullptr);
				_285921_scc.get()._field_owner=nullptr;
				_285921_scc.get()._field_child_index=0LL;
				_285921_scc.get()._field_it=0LLU;
				_285921_scc.get()._field_cse=0LLU;
				_285921_scc.get()._field_owner=_285317_ins;
				_1e46c249a_check_fn_ins_sc((*_self_)._field_s.ptr(), _285317_ins,_285921_scc);
			}
		}
		else {
			_case_begin_1cc30a8e2:;
			{
				_1e46c2a3e_check_fn_ins((*_self_)._field_s, _285317_ins);
			}
		}
		_match_end_1cc30a88c:;
	};
	return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_285317_ins, 1)}), ._field_model=jule::Any(jule::new_ptr<_1e437b50b_AnonFnExprModel>(_1e437b50b_AnonFnExprModel{._field_func=_285317_ins, ._field_global=_1c974d8b5_is_global(&(*_self_))})), });
}



inline jule::Ptr<_1c974abc0_Data> _1c9765c1d_eval_binop(jule::Ptr<_1c974c73d_Eval> _self_, jule::Ptr<_1e43693a6_BinopExpr> _288134_op) {
	_1c9768858_BinaryEval _288217_bs = static__1c9768e0d_new_plain(_self_);;
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_1c9778e51_Prim> _288617_prim = _1c97767ab_prim(_self_.get()._field_prefix.ptr());;
		if (((_288617_prim == nullptr) || (!(_1e46843e6_is_num(_1c97792b4_to_str(_288617_prim.ptr())))))) {
			jule::Ptr<_1c97746ee_TypeKind> _288825_prefix = _self_.get()._field_prefix;;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_288825_prefix;
			});;
			return _1c976dee0_eval(&_288217_bs, _288134_op);
		};
	};
	return _1c976dee0_eval(&_288217_bs, _288134_op);
}



inline jule::Ptr<_1c974abc0_Data> _1c976602b_eval_expr_kind(jule::Ptr<_1c974c73d_Eval> _self_, jule::Any _289838_kind) {
	jule::Ptr<_1c974abc0_Data> _289917_d = nullptr;;
	{
		auto &_match_expr{ _289838_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e43659e0_Expr>>()) {
			_case_begin_1cc3141c0:;
			{
				_289917_d=_1c976602b_eval_expr_kind(_self_, jule::Any(_289838_kind.operator jule::Ptr<_1e43659e0_Expr>().get()._field_kind));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e436665b_LitExpr>>()) {
			_case_begin_1cc314236:;
			{
				_289917_d=_1c9750598_eval_lit(_self_.ptr(), _289838_kind.operator jule::Ptr<_1e436665b_LitExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4367690_IdentExpr>>()) {
			_case_begin_1cc31429c:;
			{
				_289917_d=_1c97543c1_eval_ident(_self_.ptr(), _289838_kind.operator jule::Ptr<_1e4367690_IdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4367d99_UnaryExpr>>()) {
			_case_begin_1cc314324:;
			{
				_289917_d=_1c97546ce_eval_unary(_self_, _289838_kind.operator jule::Ptr<_1e4367d99_UnaryExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4368251_VariadicExpr>>()) {
			_case_begin_1cc31439b:;
			{
				_289917_d=_1c97549dc_eval_variadic(_self_, _289838_kind.operator jule::Ptr<_1e4368251_VariadicExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4366d65_UnsafeExpr>>()) {
			_case_begin_1cc314423:;
			{
				_289917_d=_1c9754cea_eval_unsafe(_self_, _289838_kind.operator jule::Ptr<_1e4366d65_UnsafeExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e436be69_SliceExpr>>()) {
			_case_begin_1cc31449a:;
			{
				_289917_d=_1c97557bd_eval_slice_expr(_self_, _289838_kind.operator jule::Ptr<_1e436be69_SliceExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e436ca4c_IndexingExpr>>()) {
			_case_begin_1cc314522:;
			{
				_289917_d=_1c9757e96_eval_indexing(_self_, _289838_kind.operator jule::Ptr<_1e436ca4c_IndexingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e436d157_SlicingExpr>>()) {
			_case_begin_1cc314599:;
			{
				_289917_d=_1c9759162_eval_slicing(_self_, _289838_kind.operator jule::Ptr<_1e436d157_SlicingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4368608_CastExpr>>()) {
			_case_begin_1cc314621:;
			{
				_289917_d=_1c975bb9d_eval_cast(_self_, _289838_kind.operator jule::Ptr<_1e4368608_CastExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e43689b0_NsSelectionExpr>>()) {
			_case_begin_1cc314698:;
			{
				_289917_d=_1c975beab_eval_ns_selection(_self_.ptr(), _289838_kind.operator jule::Ptr<_1e43689b0_NsSelectionExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e436ac9d_StructLit>>()) {
			_case_begin_1cc314720:;
			{
				_289917_d=_1c975c74d_eval_struct_lit(_self_, _289838_kind.operator jule::Ptr<_1e436ac9d_StructLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e436257a_TypeDecl>>()) {
			_case_begin_1cc314797:;
			{
				_289917_d=_1c975ca5b_eval_type(_self_.ptr(), _289838_kind.operator jule::Ptr<_1e436257a_TypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e43699b1_FnCallExpr>>()) {
			_case_begin_1cc31481e:;
			{
				_289917_d=_1c975e3cb_eval_fn_call(_self_, _289838_kind.operator jule::Ptr<_1e43699b1_FnCallExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4368e33_SubIdentExpr>>()) {
			_case_begin_1cc314896:;
			{
				_289917_d=_1c9764b2e_eval_sub_ident(_self_, _289838_kind.operator jule::Ptr<_1e4368e33_SubIdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4366183_TupleExpr>>()) {
			_case_begin_1cc31491d:;
			{
				_289917_d=_1c9764e3c_eval_tuple(_self_, _289838_kind.operator jule::Ptr<_1e4366183_TupleExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e436b221_BraceLit>>()) {
			_case_begin_1cc314995:;
			{
				_289917_d=_1c9765602_eval_brace_lit(_self_, _289838_kind.operator jule::Ptr<_1e436b221_BraceLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4371ca4_FnDecl>>()) {
			_case_begin_1cc314a1c:;
			{
				_289917_d=_1c9765910_eval_anon_fn(_self_.ptr(), _289838_kind.operator jule::Ptr<_1e4371ca4_FnDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e43693a6_BinopExpr>>()) {
			_case_begin_1cc314a94:;
			{
				_289917_d=_1c9765c1d_eval_binop(_self_, _289838_kind.operator jule::Ptr<_1e43693a6_BinopExpr>());
			}
		}
		_match_end_1cc314005:;
	};
	return _289917_d;
}



inline jule::Ptr<_1c974abc0_Data> _1c9766339_eval(jule::Ptr<_1c974c73d_Eval> _self_, jule::Ptr<_1e43659e0_Expr> _294528_expr) {
	jule::Ptr<_1c974abc0_Data> _294617_d = _1c976602b_eval_expr_kind(_self_, jule::Any(_294528_expr.get()._field_kind));;
	if (((_294617_d == nullptr) || (_294617_d.get()._field_kind == nullptr))) {
		return nullptr;
	};
	{
		
		if ((_1c9777735_fnc(_294617_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cc3209b2:;
			{
				jule::Ptr<_1e4383018_FnIns> _295321_f = _1c9777735_fnc(_294617_d.get()._field_kind.ptr());;
				if (_1e4383c94_is_builtin(_295321_f.ptr())) {
					goto _match_end_1cc3208d5;
				};
				if ((_295321_f.get()._field_generics.len() != _295321_f.get()._field_decl.get()._field_generics.len())) {
					_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _294528_expr.get()._field_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				};
				if (_1e4380a3d_is_method(_295321_f.get()._field_decl.ptr())) {
					_1e46aed6c_push_err(_self_.get()._field_s.ptr(), _294528_expr.get()._field_token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1cc3208d5:;
	};
	return _294617_d;
}



inline jule::Ptr<_1c974abc0_Data> _1c9766647_eval_expr(jule::Ptr<_1c974c73d_Eval> _self_, jule::Ptr<_1e43659e0_Expr> _297133_expr) {
	jule::Ptr<_1c974abc0_Data> _297217_d = _1c9766339_eval(_self_, _297133_expr);;
	{
		
		if ((_297217_d == nullptr)) {
			_case_begin_1cc324c08:;
			{
				return nullptr;
			}
		}
		else if (_297217_d.get()._field_decl) {
			_case_begin_1cc324a4e:;
			{
				_1c974cc16_push_err(_self_.ptr(), _297133_expr.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else {
			_case_begin_1cc3245dc:;
			{
				return _297217_d;
			}
		}
		_match_end_1cc324565:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c974c73d_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "dis_builtin:" << _Src._field_dis_builtin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1c9766aba_UnaryEval static__1c9767071_new(jule::Ptr<_1c974c73d_Eval> _299223_e) {
	return _1c9766aba_UnaryEval{._field_e=_299223_e, };
}



inline void _1c976724c_minus(_1c9766aba_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_1cc3266ee:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1c97767ab_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cc326b50:;
			{
				if ((!(_1e46843e6_is_num(_1c9774aa6_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1c9777999_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cc326bb6:;
			{
				if ((_1c9777999_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_neg == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1cc32637a:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1cc3262ae:;
	};
	if (_1c974b583_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1c9690c58_is_f64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1cc329c96:;
				{
					_1c968ed67_set_f64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::F64>((-(_1c968d8b0_read_f64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1c96902a7_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1cc329d1d:;
				{
					_1c968e372_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((-(_1c968ce0e_read_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1c969051b_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1cc329d95:;
				{
					_1c968e372_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((-(_1c968db24_as_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			_match_end_1cc329a54:;
		};
	};
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1e435972b_UnaryExprModel>(_1e435972b_UnaryExprModel{._field_expr=jule::new_ptr<_1c974abc0_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
}



inline void _1c9767428_plus(_1c9766aba_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_1cc32e839:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1c97767ab_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cc32ec8a:;
			{
				if ((!(_1e46843e6_is_num(_1c9774aa6_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1c9777999_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cc32ed01:;
			{
				if ((_1c9777999_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_pos == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1cc32e4b5:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1cc32e3e9:;
	};
	if (_1c974b583_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1c9690c58_is_f64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1cc332dd1:;
				{
					_1c968ed67_set_f64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::F64>((+(_1c968d8b0_read_f64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1c96902a7_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1cc332e58:;
				{
					_1c968e372_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((+(_1c968ce0e_read_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1c969051b_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1cc332ed0:;
				{
					_1c968e372_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((+(_1c968db24_as_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			_match_end_1cc332b8e:;
		};
	};
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1e435972b_UnaryExprModel>(_1e435972b_UnaryExprModel{._field_expr=jule::new_ptr<_1c974abc0_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
}



inline void _1c9767604_caret(_1c9766aba_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_1cc337897:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1c97767ab_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cc337ce8:;
			{
				if ((!(_1e4683d63_is_int(_1c9774aa6_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1c9777999_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cc337d5e:;
			{
				if ((_1c9777999_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_bit_not == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1cc337523:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1cc337457:;
	};
	if (_1c974b583_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1c96902a7_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1cc33ae2d:;
				{
					_1c968e372_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((~(_1c968ce0e_read_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1c969051b_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1cc33aea5:;
				{
					_1c968e5e7_set_u64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::U64>((~(_1c968d173_read_u64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			_match_end_1cc33abec:;
		};
	};
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1e435972b_UnaryExprModel>(_1e435972b_UnaryExprModel{._field_expr=jule::new_ptr<_1c974abc0_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
}



inline void _1c97677d0_excl(_1c9766aba_UnaryEval* _self_) {
	jule::Ptr<_1c9778e51_Prim> _311113_t = _1c97767ab_prim((*_self_)._field_d.get()._field_kind.ptr());;
	if (((_311113_t == nullptr) || (!(_1c977bb9b_is_bool(_311113_t.ptr()))))) {
		(*_self_)._field_d=nullptr;
		return;;
	};
	if (_1c974b583_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1c9690780_is_bool((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1cc340bad:;
				{
					_1c968e86c_set_bool((*_self_)._field_d.get()._field_constant.ptr(), (!(_1c968d3d7_read_bool((*_self_)._field_d.get()._field_constant.ptr()))));
				}
			}
			_match_end_1cc340aae:;
		};
	};
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1e435972b_UnaryExprModel>(_1e435972b_UnaryExprModel{._field_expr=jule::new_ptr<_1c974abc0_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
}



inline void _1c97679ab_star(_1c9766aba_UnaryEval* _self_) {
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1e435972b_UnaryExprModel>(_1e435972b_UnaryExprModel{._field_expr=jule::new_ptr<_1c974abc0_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
	{
		
		if ((_1c9776c84_ptr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cc344046:;
			{
				if ((!(_1c974d651_is_unsafe((*_self_)._field_e.ptr())))) {
					_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				jule::Ptr<_1c97809c4_Ptr> _314321_t = _1c9776c84_ptr((*_self_)._field_d.get()._field_kind.ptr());;
				if (_1c9781497_is_unsafe(_314321_t.ptr())) {
					(*_self_)._field_d=nullptr;
					return;;
				};
				(*_self_)._field_d.get()._field_kind=_314321_t.get()._field_elem;
			}
		}
		else if ((_1c9776a20_sptr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cc344486:;
			{
				(*_self_)._field_d.get()._field_kind=_1c9776a20_sptr((*_self_)._field_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		else {
			_case_begin_1cc343be4:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1cc343b8e:;
	};
	(*_self_)._field_d.get()._field_constant=nullptr;
	(*_self_)._field_d.get()._field_lvalue=true;
}



inline void _1c9767b87_amper(_1c9766aba_UnaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e433b004_StructLitExprModel>>()) {
			_case_begin_1cc349623:;
			{
				jule::Ptr<_1e433b004_StructLitExprModel> _316321_lit = (*_self_)._field_d.get()._field_model.operator jule::Ptr<_1e433b004_StructLitExprModel>();;
				_1c976ec7c_make_struct_lit_alloc((*_self_)._field_d,_316321_lit);
			}
		}
		else {
			_case_begin_1cc3487dc:;
			{
				{
					
					if (_1c978a407_can_get_ptr((*_self_)._field_d)) {
						_case_begin_1cc3493c0:;
						{
							(*_self_)._field_d.get()._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(jule::new_ptr<_1c97809c4_Ptr>(_1c97809c4_Ptr{._field_elem=(*_self_)._field_d.get()._field_kind}), 11)});
							(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1e435972b_UnaryExprModel>(_1e435972b_UnaryExprModel{._field_expr=jule::new_ptr<_1c974abc0_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
						}
					}
					else {
						_case_begin_1cc348c93:;
						{
							(*_self_)._field_d=nullptr;
						}
					}
					_match_end_1cc348be9:;
				};
			}
		}
		_match_end_1cc348732:;
	};
	if (((*_self_)._field_d != nullptr)) {
		(*_self_)._field_d.get()._field_constant=nullptr;
		(*_self_)._field_d.get()._field_lvalue=false;
	};
}



inline void _1c9767d63_type_decl(_1c9766aba_UnaryEval* _self_) {
	_1c9782663_TypeChecker _318717_tc = _1c9782663_TypeChecker{._field_s=(*_self_)._field_e.get()._field_s, ._field_lookup=(*_self_)._field_e.get()._field_lookup, ._field_error_token=(*_self_)._field_u.get()._field_op, };;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1cc34eded:;
			{
				(*_self_)._field_d.get()._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c9786e70_build_ptr_from_type(&_318717_tc, (*_self_)._field_d.get()._field_kind), 11)});
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1cc34ee64:;
			{
				(*_self_)._field_d.get()._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c9786854_build_sptr_from_type(&_318717_tc, (*_self_)._field_d.get()._field_kind), 6)});
			}
		}
		else {
			_case_begin_1cc34c8ce:;
			{
				_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_op.get()._field_kind),jule::Any(_1c9774aa6_to_str((*_self_)._field_d.get()._field_kind.ptr()))}));
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1cc34d616:;
	};
	(*_self_)._field_d.get()._field_decl=true;
}



inline void _1c976803e_eval_data(_1c9766aba_UnaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1cc35340c:;
			{
				jule::Ptr<_1c97746ee_TypeKind> _320921_prefix = (*_self_)._field_e.get()._field_prefix;;
				(*_self_)._field_e.get()._field_prefix=nullptr;
				(*_self_)._field_d=_1c976602b_eval_expr_kind((*_self_)._field_e, jule::Any((*_self_)._field_u.get()._field_expr));
				(*_self_)._field_e.get()._field_prefix=_320921_prefix;
			}
		}
		else {
			_case_begin_1cc352bae:;
			{
				(*_self_)._field_d=_1c976602b_eval_expr_kind((*_self_)._field_e, jule::Any((*_self_)._field_u.get()._field_expr));
			}
		}
		_match_end_1cc353077:;
	};
}



inline jule::Ptr<_1c974abc0_Data> _1c9768319_eval(_1c9766aba_UnaryEval* _self_, jule::Ptr<_1e4367d99_UnaryExpr> _321827_u) {
	(*_self_)._field_u=_321827_u;
	_1c976803e_eval_data(&(*_self_));
	if (((*_self_)._field_d == nullptr)) {
		return nullptr;
	};
	if ((*_self_)._field_d.get()._field_decl) {
		_1c9767d63_type_decl(&(*_self_));
		return (*_self_)._field_d;
	};
	jule::Ptr<_1c97746ee_TypeKind> _322913_kind = (*_self_)._field_d.get()._field_kind;;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1cba46a13:;
			{
				_1c976724c_minus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1cba4676b:;
			{
				_1c9767428_plus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1cba467d2:;
			{
				_1c9767604_caret(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1cba46491:;
			{
				_1c97677d0_excl(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1cba46507:;
			{
				_1c97679ab_star(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1cba4656d:;
			{
				_1c9767b87_amper(&(*_self_));
			}
		}
		else {
			_case_begin_1cb218c63:;
			{
				(*_self_)._field_d=nullptr;
			}
		}
		_match_end_1cba46408:;
	};
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1cba485a3:;
			{
				_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_op.get()._field_kind),jule::Any(_1c9774aa6_to_str(_322913_kind.ptr()))}));
				return nullptr;
			}
		}
		else if (_1c974b583_is_const((*_self_)._field_d.ptr())) {
			_case_begin_1cba4862a:;
			{
				(*_self_)._field_d.get()._field_model=jule::Any((*_self_)._field_d.get()._field_constant);
			}
		}
		_match_end_1cba47d33:;
	};
	(*_self_)._field_d.get()._field_mutable=true;
	return (*_self_)._field_d;
}







std::ostream &operator<<(std::ostream &_Stream, _1c9766aba_UnaryEval _Src) {
	_Stream << "UnaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1c9768858_BinaryEval static__1c9768e0d_new_plain(jule::Ptr<_1c974c73d_Eval> _326729_e) {
	return _1c9768858_BinaryEval{._field_e=_326729_e, };
}



inline _1c9768858_BinaryEval static__1c976924e_new(jule::Ptr<_1c974c73d_Eval> _327323_e, jule::Ptr<_20cd9e6ec_Token> _327337_op) {
	return _1c9768858_BinaryEval{._field_e=_327323_e, ._field_op=_327337_op};
}



inline jule::Bool _1c97694d5_check_type_compatibility(_1c9768858_BinaryEval* _self_) {
	return _1e46b55e2_check_type_compatibility((*_self_)._field_e.get()._field_s, (*_self_)._field_l.get()._field_kind,(*_self_)._field_r.get()._field_kind,(*_self_)._field_op);
}



inline jule::Bool _1c976978d_check_struct_common_operator_compatibility(_1c9768858_BinaryEval* _self_) {
	jule::Ptr<_1e4383018_FnIns> _328717_overload = nullptr;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1cba4dee3:;
			{
				_328717_overload=_1c9777999_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1cba5006b:;
			{
				_328717_overload=_1c9777999_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1cba500d2:;
			{
				_328717_overload=_1c9777999_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1cba50148:;
			{
				_328717_overload=_1c9777999_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1cba4dc5c:;
			{
				_328717_overload=_1c9777999_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1cba4dcc3:;
			{
				_328717_overload=_1c9777999_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1cba4dd39:;
			{
				_328717_overload=_1c9777999_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1cba4dda0:;
			{
				_328717_overload=_1c9777999_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_and;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1cba50335:;
			{
				_328717_overload=_1c9777999_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_or;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1cba5039b:;
			{
				_328717_overload=_1c9777999_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_xor;
			}
		}
		else {
			_case_begin_1cba4d751:;
			{
				_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c9774aa6_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return false;
			}
		}
		_match_end_1cba4dba2:;
	};
	if ((_328717_overload == nullptr)) {
		_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c9774aa6_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
		return false;
	};
	jule::Ptr<_1e438217c_ParamIns> _331917_p = _328717_overload.get()._field_params[1LL];;
	return _1e46b516e_check_assign_type((*_self_)._field_e.get()._field_s, _331917_p.get()._field_decl.get()._field_reference,_331917_p.get()._field_kind,(*_self_)._field_r,(*_self_)._field_op);
}



inline jule::Ptr<_1c974abc0_Data> _1c9769a35_eval_nil(_1c9768858_BinaryEval* _self_) {
	if ((!(_1c9775d0a_nil_compatible((*_self_)._field_r.get()._field_kind.ptr())))) {
		_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3)),jule::Any(_1c9774aa6_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1cba59ecc:;
			{
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("bool", 4)), 5)}), });
			}
		}
		else {
			_case_begin_1cba587a0:;
			{
				_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("nil", 3))}));
				return nullptr;
			}
		}
		_match_end_1cba59b47:;
	};
}



inline jule::Ptr<_1c974abc0_Data> _1c9769c99_eval_enum(_1c9768858_BinaryEval* _self_) {
	jule::Ptr<_1e4456b58_Enum> _334417_enm = _1c9776ee8_enm((*_self_)._field_l.get()._field_kind.ptr());;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1cba5bcd1:;
			{
				jule::Ptr<_1c97746ee_TypeKind> _334821_rkind = (*_self_)._field_r.get()._field_kind;;
				if ((_1c9776ee8_enm((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
					_334821_rkind=_1c9776ee8_enm((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind.get()._field_kind;
				};
				if ((!(_1e46b55e2_check_type_compatibility((*_self_)._field_e.get()._field_s, _334417_enm.get()._field_kind.get()._field_kind,_334821_rkind,(*_self_)._field_op)))) {
					return nullptr;
				};
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("bool", 4)), 5)}), });
			}
		}
		_match_end_1cba5c52e:;
	};
	if (((_1c9776ee8_enm((*_self_)._field_r.get()._field_kind.ptr()) == nullptr) || (_334417_enm != _1c9776ee8_enm((*_self_)._field_r.get()._field_kind.ptr())))) {
		_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_334417_enm.get()._field_ident),jule::Any(_1c9774aa6_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1cba6204a:;
			{
				if ((!(_1e46843e6_is_num(_1c9774aa6_to_str(_334417_enm.get()._field_kind.get()._field_kind.ptr()))))) {
					_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_334417_enm.get()._field_ident)}));
					return nullptr;
				};
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("bool", 4)), 5)}), });
			}
		}
		else if (_match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1cba62e80:;
			{
				if (((_1c97767ab_prim(_334417_enm.get()._field_kind.get()._field_kind.ptr()) == nullptr) || (!(_1e4683d63_is_int(_1c97792b4_to_str(_1c97767ab_prim(_334417_enm.get()._field_kind.get()._field_kind.ptr()).ptr())))))) {
					_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_334417_enm.get()._field_ident)}));
				};
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1cba6129c:;
			{
				_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_334417_enm.get()._field_ident)}));
				return nullptr;
			}
		}
		_match_end_1cba61bb5:;
	};
}



inline jule::Ptr<_1c974abc0_Data> _1c976a00d_eval_sptr(_1c9768858_BinaryEval* _self_) {
	if ((!(_1c97694d5_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1cba68293:;
			{
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("bool", 4)), 5)}), });
			}
		}
		else {
			_case_begin_1cba67c54:;
			{
				_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c9774aa6_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1cba67858:;
	};
}



inline jule::Ptr<_1c974abc0_Data> _1c976a272_eval_ptr(_1c9768858_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1cba6a718:;
			{
				if ((!(_1c97694d5_check_type_compatibility(&(*_self_))))) {
					return nullptr;
				};
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("bool", 4)), 5)}), });
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_1cba6b928:;
			{
				if ((_1c9776c84_ptr((*_self_)._field_l.get()._field_kind.ptr()) == nullptr)) {
					std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				};
				if (_1c9781497_is_unsafe(_1c9776c84_ptr((*_self_)._field_l.get()._field_kind.ptr()).ptr())) {
					_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c9774aa6_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				};
				if ((!(_1c9770cb1_is_ptr_arithmetic_compatible_int((*_self_)._field_r)))) {
					_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("type @ is incompatible to use for pointer arithmetic", 52),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1cba69580:;
			{
				_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c9774aa6_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1cba6a383:;
	};
}



inline jule::Ptr<_1c974abc0_Data> _1c976a4d6_eval_arr(_1c9768858_BinaryEval* _self_) {
	if ((!(_1c97694d5_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1cba72610:;
			{
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("bool", 4)), 5)}), });
			}
		}
		else {
			_case_begin_1cba71cd5:;
			{
				_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c9774aa6_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1cba71c80:;
	};
}



inline jule::Ptr<_1c974abc0_Data> _1c976a74a_eval_slc(_1c9768858_BinaryEval* _self_) {
	if ((!(_1c97694d5_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1cba75080:;
			{
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("bool", 4)), 5)}), });
			}
		}
		else {
			_case_begin_1cba74755:;
			{
				_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c9774aa6_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1cba74700:;
	};
}



inline jule::Ptr<_1c974abc0_Data> _1c976a9ae_eval_fn(_1c9768858_BinaryEval* _self_) {
	if ((!(_1c97694d5_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1cba77a00:;
			{
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("bool", 4)), 5)}), });
			}
		}
		else {
			_case_begin_1cba771c5:;
			{
				_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c9774aa6_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1cba77170:;
	};
}



inline jule::Ptr<_1c974abc0_Data> _1c976ac23_eval_struct(_1c9768858_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1cba79bbc:;
			{
				if ((_1c9777999_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_gt == nullptr)) {
					_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c9774aa6_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("bool", 4)), 5)}), });
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1cba79c33:;
			{
				if ((_1c9777999_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_gt_eq == nullptr)) {
					_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c9774aa6_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("bool", 4)), 5)}), });
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1cba79c99:;
			{
				if ((_1c9777999_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_lt == nullptr)) {
					_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c9774aa6_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("bool", 4)), 5)}), });
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1cba79d21:;
			{
				if ((_1c9777999_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_lt_eq == nullptr)) {
					_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c9774aa6_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("bool", 4)), 5)}), });
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1cba79d98:;
			{
				if ((!(_1c97694d5_check_type_compatibility(&(*_self_))))) {
					return nullptr;
				};
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("bool", 4)), 5)}), });
			}
		}
		_match_end_1cba79b12:;
	};
	if ((!(_1c976978d_check_struct_common_operator_compatibility(&(*_self_))))) {
		return nullptr;
	};
	return (*_self_)._field_l;
}



inline jule::Ptr<_1c974abc0_Data> _1c976ae87_eval_trait(_1c9768858_BinaryEval* _self_) {
	if ((!(_1c97694d5_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1cba8558a:;
			{
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("bool", 4)), 5)}), });
			}
		}
		else {
			_case_begin_1cba85090:;
			{
				_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c9774aa6_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1cba84bd8:;
	};
}



inline jule::Ptr<_1c974abc0_Data> _1c976b1eb_eval_any(_1c9768858_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1cba87a32:;
			{
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("bool", 4)), 5)}), });
			}
		}
		else {
			_case_begin_1cba86899:;
			{
				_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("any", 3))}));
				return nullptr;
			}
		}
		_match_end_1cba8769c:;
	};
}



inline jule::Ptr<_1c974abc0_Data> _1c976b460_eval_bool(_1c9768858_BinaryEval* _self_) {
	if ((!(_1c97694d5_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_1cba8a24e:;
			{
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1cba89924:;
			{
				_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c9774aa6_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1cba898be:;
	};
}



inline jule::Ptr<_1c974abc0_Data> _1c976b6c4_eval_str(_1c9768858_BinaryEval* _self_) {
	jule::Str _361717_rk = _1c9774aa6_to_str((*_self_)._field_r.get()._field_kind.ptr());;
	if ((_361717_rk != jule::Str("str", 3))) {
		_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_361717_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1cba8d7e6:;
			{
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1cba8d85c:;
			{
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("bool", 4)), 5)}), });
			}
		}
		else {
			_case_begin_1cba8c62a:;
			{
				_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("str", 3))}));
				return nullptr;
			}
		}
		_match_end_1cba8d6a3:;
	};
}



inline void _1c976b8a0_set_type_to_greater(_1c9768858_BinaryEval* _self_) {
	if (_1c974b583_is_const((*_self_)._field_l.ptr())) {
		if ((!(_1c974b583_is_const((*_self_)._field_r.ptr())))) {
			(*_self_)._field_l.get()._field_kind=(*_self_)._field_r.get()._field_kind;
			return;;
		};
		goto _julec_label_set;
	};
	if (_1c974b583_is_const((*_self_)._field_r.ptr())) {
		return;;
	};
	_julec_label_set:;
	if (_1e46826ad_is_greater(_1c97767ab_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind,_1c97767ab_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind)) {
		(*_self_)._field_l.get()._field_kind=(*_self_)._field_r.get()._field_kind;
	};
}



inline void _1c976bae2_check_mod_data(_1c9768858_BinaryEval* _self_, jule::Ptr<_1c974abc0_Data>& _366038_d) {
	if ((!(_1c974b583_is_const(_366038_d.ptr())))) {
		if (((_1c97767ab_prim(_366038_d.get()._field_kind.ptr()) == nullptr) || (!(_1e4683d63_is_int(_1c97767ab_prim(_366038_d.get()._field_kind.ptr()).get()._field_kind))))) {
			_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1c97368ae_sig_assignable(jule::Str("i64", 3),_366038_d)) {
			_case_begin_1cba965bd:;
			{
				_1c968e372_set_i64(_366038_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1c968db24_as_i64(_366038_d.get()._field_constant.ptr())));
			}
		}
		else if (_1c97369e1_unsig_assignable(jule::Str("u64", 3),_366038_d)) {
			_case_begin_1cba962e3:;
			{
				_1c968e5e7_set_u64(_366038_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1c968dd88_as_u64(_366038_d.get()._field_constant.ptr())));
			}
		}
		else {
			_case_begin_1cba9627c:;
			{
				_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
			}
		}
		_match_end_1cba948b8:;
	};
}



inline void _1c976bcbd_mod(_1c9768858_BinaryEval* _self_) {
	_1c976bae2_check_mod_data(&(*_self_), (*_self_)._field_l);
	_1c976bae2_check_mod_data(&(*_self_), (*_self_)._field_r);
}



inline jule::Bool _1c976c197_numbers_are_compatibile(_1c9768858_BinaryEval* _self_, jule::Str& _368239_lk, jule::Str& _368249_rk) {
	if ((!(_1e46843e6_is_num(_368249_rk)))) {
		return false;
	};
	if (_1c974b583_is_const((*_self_)._field_l.ptr())) {
		return true;
	};
	if ((_368239_lk == jule::Str("f32", 3))) {
		if (_1c974b583_is_const((*_self_)._field_r.ptr())) {
			return true;
		};
		return (_368249_rk == jule::Str("f32", 3));
	};
	if ((_368239_lk == jule::Str("f64", 3))) {
		if (_1c974b583_is_const((*_self_)._field_r.ptr())) {
			return true;
		};
		return (_368249_rk == jule::Str("f64", 3));
	};
	if (_1c974b583_is_const((*_self_)._field_r.ptr())) {
		return true;
	};
	return (_368239_lk == _368249_rk);
}



inline jule::Ptr<_1c974abc0_Data> _1c976c41c_eval_float(_1c9768858_BinaryEval* _self_) {
	jule::Str _371213_lk = _1c97767ab_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind;;
	jule::Str _371313_rk = _1c97767ab_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind;;
	if ((!(_1c976c197_numbers_are_compatibile(&(*_self_), _371213_lk,_371313_rk)))) {
		_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_371213_lk),jule::Any(_371313_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1cba9de66:;
			{
				if (((!(_1c974b583_is_const((*_self_)._field_l.ptr()))) || (!(_1c9736b23_int_assignable(jule::Str("i64", 3),(*_self_)._field_l))))) {
					_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_371213_lk),jule::Any(_371313_rk)}));
					return nullptr;
				};
				if (((!(_1c974b583_is_const((*_self_)._field_r.ptr()))) || (!(_1c9736b23_int_assignable(jule::Str("u64", 3),(*_self_)._field_r))))) {
					_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_371213_lk),jule::Any(_371313_rk)}));
					return nullptr;
				};
				_1c968e372_set_i64((*_self_)._field_l.get()._field_constant.ptr(), static_cast<jule::I64>(_1c968db24_as_i64((*_self_)._field_l.get()._field_constant.ptr())));
				_1c968e5e7_set_u64((*_self_)._field_r.get()._field_constant.ptr(), static_cast<jule::U64>(_1c968dd88_as_u64((*_self_)._field_r.get()._field_constant.ptr())));
				if ((!(_1c97706a6_is_ok_for_shifting((*_self_)._field_r)))) {
					_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		_match_end_1cbaa00bb:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1cbaa570e:;
			{
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("bool", 4)), 5)}), });
			}
		}
		_match_end_1cbaa48a6:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_1cbaa7711:;
			{
				_1c976b8a0_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1cbaa7623:;
			{
				if ((!(_1e4683d63_is_int(_371313_rk)))) {
					_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_371213_lk),jule::Any(_371313_rk)}));
					return nullptr;
				};
				_1c976bcbd_mod(&(*_self_));
				return (*_self_)._field_r;
			}
		}
		else {
			_case_begin_1cbaa5830:;
			{
				_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1cbaa5e7e:;
	};
}



inline jule::Ptr<_1c974abc0_Data> _1c976c681_eval_int(_1c9768858_BinaryEval* _self_) {
	jule::Str _377613_lk = _1c97767ab_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind;;
	jule::Str _377713_rk = _1c97767ab_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1cbaaa56b:;
			{
				if (((!(_1e4683d63_is_int(_377613_lk))) || (!(_1e4683d63_is_int(_377713_rk))))) {
					_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_377613_lk),jule::Any(_377713_rk)}));
					return nullptr;
				};
				if ((!(_1c97706a6_is_ok_for_shifting((*_self_)._field_r)))) {
					_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		_match_end_1cbaaacdb:;
	};
	if ((!(_1c976c197_numbers_are_compatibile(&(*_self_), _377613_lk,_377713_rk)))) {
		_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_377613_lk),jule::Any(_377713_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1cbaae5a3:;
			{
				return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("bool", 4)), 5)}), });
			}
		}
		_match_end_1cbaae53c:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1cbab18a2:;
			{
				_1c976b8a0_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1cbab17b4:;
			{
				_1c976bcbd_mod(&(*_self_));
				_1c976b8a0_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1cbaae6b3:;
			{
				_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for integer type(s)", 45),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1cbab0351:;
	};
}



inline jule::Ptr<_1c974abc0_Data> _1c976c8e5_eval_prim(_1c9768858_BinaryEval* _self_) {
	jule::Ptr<_1c9778e51_Prim> _383513_prim = _1c97767ab_prim((*_self_)._field_l.get()._field_kind.ptr());;
	{
		
		if (_1c977bb9b_is_bool(_383513_prim.ptr())) {
			_case_begin_1cbab3dd2:;
			{
				return _1c976b460_eval_bool(&(*_self_));
			}
		}
		else if (_1c977be10_is_str(_383513_prim.ptr())) {
			_case_begin_1cbab3e59:;
			{
				return _1c976b6c4_eval_str(&(*_self_));
			}
		}
		_match_end_1cbab3d16:;
	};
	if ((_1c97767ab_prim((*_self_)._field_r.get()._field_kind.ptr()) == nullptr)) {
		_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1c97792b4_to_str(_383513_prim.ptr())),jule::Any(_1c9774aa6_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	};
	{
		
		if (_1e468414e_is_float(_383513_prim.get()._field_kind)) {
			_case_begin_1cbab6a61:;
			{
				return _1c976c41c_eval_float(&(*_self_));
			}
		}
		else if (_1e4683d63_is_int(_383513_prim.get()._field_kind)) {
			_case_begin_1cbab6b1b:;
			{
				return _1c976c681_eval_int(&(*_self_));
			}
		}
		else {
			_case_begin_1cbab4c6d:;
			{
				return nullptr;
			}
		}
		_match_end_1cbab63ac:;
	};
}



inline jule::Ptr<_1c974abc0_Data> _1c976cb59_eval_op(_1c9768858_BinaryEval* _self_) {
	{
		
		if (_1c9775832_void((*_self_)._field_l.get()._field_kind.ptr())) {
			_case_begin_1cbab848b:;
			{
				_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("void", 4))}));
				return nullptr;
			}
		}
		else if (((_1c97767ab_prim((*_self_)._field_r.get()._field_kind.ptr()) != nullptr) && _1c977c174_is_any(_1c97767ab_prim((*_self_)._field_r.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1cbab8579:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1cbab85e0;
			}
		}
		else if (((_1c97767ab_prim((*_self_)._field_l.get()._field_kind.ptr()) != nullptr) && _1c977c174_is_any(_1c97767ab_prim((*_self_)._field_l.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1cbab85e0:;
			{
				return _1c976b1eb_eval_any(&(*_self_));
			}
		}
		else if (_1c97755bd_is_nil((*_self_)._field_l.get()._field_kind.ptr())) {
			_case_begin_1cbab7e19:;
			{
				return _1c9769a35_eval_nil(&(*_self_));
			}
		}
		else if ((_1c9776ee8_enm((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cbab7e80:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1cbab7ee6;
			}
		}
		else if ((_1c9776ee8_enm((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cbab7ee6:;
			{
				return _1c9769c99_eval_enum(&(*_self_));
			}
		}
		else if ((_1c9776a20_sptr((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cbab805c:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1cbab8667;
			}
		}
		else if ((_1c9776a20_sptr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cbab8667:;
			{
				return _1c976a00d_eval_sptr(&(*_self_));
			}
		}
		else if ((_1c9776c84_ptr((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cbab86cd:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1cbab8744;
			}
		}
		else if ((_1c9776c84_ptr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cbab8744:;
			{
				return _1c976a272_eval_ptr(&(*_self_));
			}
		}
		else if ((_1c977725c_arr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cbab87aa:;
			{
				return _1c976a4d6_eval_arr(&(*_self_));
			}
		}
		else if ((_1c97774c1_slc((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cbab8832:;
			{
				return _1c976a74a_eval_slc(&(*_self_));
			}
		}
		else if ((_1c9777735_fnc((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cbab88a9:;
			{
				return _1c976a9ae_eval_fn(&(*_self_));
			}
		}
		else if ((_1c9777c0d_trt((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cbab8931:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1cbab89a8;
			}
		}
		else if ((_1c9777c0d_trt((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cbab89a8:;
			{
				return _1c976ae87_eval_trait(&(*_self_));
			}
		}
		else if ((_1c9777999_strct((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cbab8a30:;
			{
				return _1c976ac23_eval_struct(&(*_self_));
			}
		}
		else if ((_1c97767ab_prim((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cbab8aa7:;
			{
				return _1c976c8e5_eval_prim(&(*_self_));
			}
		}
		else {
			_case_begin_1cbab7da3:;
			{
				return nullptr;
			}
		}
		_match_end_1cbab7cd7:;
	};
}



inline void _1c976cdce_eval_const(_1c9768858_BinaryEval* _self_, jule::Ptr<_1c974abc0_Data>& _390534_d) {
	{
		
		if ((_390534_d == nullptr)) {
			_case_begin_1cbac73ac:;
			{
				return;;
			}
		}
		else if ((!(_1c974b583_is_const((*_self_)._field_l.ptr()))) || (!(_1c974b583_is_const((*_self_)._field_r.ptr())))) {
			_case_begin_1cbac7434:;
			{
				_390534_d.get()._field_constant=nullptr;
				return;;
			}
		}
		_match_end_1cbac729c:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1cbac8402:;
			{
				_390534_d.get()._field_constant=static__1c968c0c8_new_bool(((*((*_self_)._field_l.get()._field_constant)) == (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1cbac84bd:;
			{
				_390534_d.get()._field_constant=static__1c968c0c8_new_bool(((*((*_self_)._field_l.get()._field_constant)) != (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1cbac89b8:;
			{
				_390534_d.get()._field_constant=static__1c968c0c8_new_bool(_1c96918e6_or((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1cbac8a2e:;
			{
				_390534_d.get()._field_constant=static__1c968c0c8_new_bool(_1c96915d8_and((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1cbac8a95:;
			{
				_390534_d.get()._field_constant=static__1c968c0c8_new_bool(((*((*_self_)._field_l.get()._field_constant)) > (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1cbac8b0b:;
			{
				_390534_d.get()._field_constant=static__1c968c0c8_new_bool(((*((*_self_)._field_l.get()._field_constant)) < (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1cbac8b83:;
			{
				_390534_d.get()._field_constant=static__1c968c0c8_new_bool(((*((*_self_)._field_l.get()._field_constant)) >= (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1cbac8c0a:;
			{
				_390534_d.get()._field_constant=static__1c968c0c8_new_bool(((*((*_self_)._field_l.get()._field_constant)) <= (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1cbac8c82:;
			{
				_1c9692c49_add((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_390534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1cbac8d09:;
			{
				_1c9693057_sub((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_390534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1cbac8d81:;
			{
				_1c9693365_mul((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_390534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1cbac8e08:;
			{
				jule::Bool _394217_ok = _1c9693673_div((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));;
				if (((!(_394217_ok)) && (_1c968e0ec_as_f64((*_self_)._field_r.get()._field_constant.ptr()) == 0LL))) {
					_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_390534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
				jule::Ptr<_1c9778e51_Prim> _394721_prim = _1c97767ab_prim(_390534_d.get()._field_kind.ptr());;
				{
					
					if (_1e46837d0_is_sig_int(_394721_prim.get()._field_kind)) {
						_case_begin_1cbad5db0:;
						{
							_1c968e372_set_i64(_390534_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1c968db24_as_i64(_390534_d.get()._field_constant.ptr())));
						}
					}
					else if (_1e4683abb_is_unsig_int(_394721_prim.get()._field_kind)) {
						_case_begin_1cbad5e37:;
						{
							_1c968e5e7_set_u64(_390534_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1c968dd88_as_u64(_390534_d.get()._field_constant.ptr())));
						}
					}
					_match_end_1cbad5ce4:;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1cbac8e80:;
			{
				jule::Bool _395517_ok = _1c9693981_mod((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));;
				if (((!(_395517_ok)) && (_1c968e0ec_as_f64((*_self_)._field_r.get()._field_constant.ptr()) == 0LL))) {
					_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_390534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1cbac9007:;
			{
				_1c969409c_bitwise_or((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_390534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1cbac907e:;
			{
				_1c9693c8e_bitwise_and((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_390534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1cbac9106:;
			{
				_1c96943aa_xor((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_390534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1cbac917d:;
			{
				_1c96946b8_lshift((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_390534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1cbac9205:;
			{
				_1c96949c6_rshift((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_390534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		_match_end_1cbac8248:;
	};
	_1c9771ac5_apply_cast_model_by_enum(_390534_d,_1c9776ee8_enm(_390534_d.get()._field_kind.ptr()));
	jule::Ptr<_1c9778e51_Prim> _397917_prim = _1c97767ab_prim(_390534_d.get()._field_kind.ptr());;
	if (((_397917_prim == nullptr) || (!(_1e46843e6_is_num(_1c97792b4_to_str(_397917_prim.ptr())))))) {
		_390534_d.get()._field_model=jule::Any(_390534_d.get()._field_constant);
		return;;
	};
	if ((((*_self_)._field_op.get()._field_kind != jule::Str("<<", 2)) && ((*_self_)._field_op.get()._field_kind != jule::Str(">>", 2)))) {
		if ((((*_self_)._field_l.get()._field_model == (*_self_)._field_l.get()._field_constant) && ((*_self_)._field_r.get()._field_model != (*_self_)._field_r.get()._field_constant))) {
			_390534_d.get()._field_kind=(*_self_)._field_r.get()._field_kind;
			_397917_prim=_1c97767ab_prim(_390534_d.get()._field_kind.ptr());
		};
	};
	_1c976e980_fit_bitsize(_390534_d);
	_1c9771d8e_cast_const_by_type(_397917_prim.get()._field_kind,_390534_d);
}



inline void _1c976d154_check_data(_1c9768858_BinaryEval* _self_, jule::Ptr<_1c974abc0_Data>& _399534_d) {
	jule::Ptr<_1e4383018_FnIns> _399613_f = _1c9777735_fnc(_399534_d.get()._field_kind.ptr());;
	if ((((_399613_f != nullptr) && (_399613_f.get()._field_decl != nullptr)) && _1e4380a3d_is_method(_399613_f.get()._field_decl.ptr()))) {
		_1c974cc16_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>());
	};
}



inline void _1c976d330_check_datas(_1c9768858_BinaryEval* _self_) {
	_1c976d154_check_data(&(*_self_), (*_self_)._field_l);
	_1c976d154_check_data(&(*_self_), (*_self_)._field_r);
}



inline void _1c976d5a5_set_model(_1c9768858_BinaryEval* _self_, jule::Ptr<_1c974abc0_Data>& _400733_d) {
	if (_1c974b583_is_const(_400733_d.ptr())) {
		if ((((*_self_)._field_l.get()._field_model == (*_self_)._field_l.get()._field_constant) && ((*_self_)._field_r.get()._field_model == (*_self_)._field_r.get()._field_constant))) {
			return;;
		};
	};
	jule::Ptr<_1c974abc0_Data> _401518_l = (*_self_)._field_l;;
	jule::Ptr<_1c974abc0_Data> _401525_r = (*_self_)._field_r;;
	std::tie(_401518_l,_401525_r) = std::make_tuple((*_self_)._field_l,(*_self_)._field_r);
	if ((!(_1c974b891_good_operand(_401518_l.ptr(), _401525_r)))) {
		std::tie(_401518_l,_401525_r) = std::make_tuple(_401525_r,_401518_l);
	};
	_400733_d.get()._field_model=jule::Any(jule::new_ptr<_1e435a8e7_BinopExprModel>(_1e435a8e7_BinopExprModel{._field_left=jule::new_ptr<_1e4347a8d_OperandExprModel>(_1e4347a8d_OperandExprModel{._field_kind=_401518_l.get()._field_kind, ._field_model=jule::Any(_401518_l.get()._field_model)}), ._field_right=jule::new_ptr<_1e4347a8d_OperandExprModel>(_1e4347a8d_OperandExprModel{._field_kind=_401525_r.get()._field_kind, ._field_model=jule::Any(_401525_r.get()._field_model)}), ._field_op=(*_self_)._field_op}));
}



inline void _1c976d82a_post_eval(_1c9768858_BinaryEval* _self_, jule::Ptr<_1c974abc0_Data>& _403333_d) {
	_403333_d.get()._field_lvalue=false;
	_1c976d5a5_set_model(&(*_self_), _403333_d);
}



inline jule::Ptr<_1c974abc0_Data> _1c976dbd2_solve_explicit(_1c9768858_BinaryEval* _self_, jule::Ptr<_1c974abc0_Data>& _403838_l, jule::Ptr<_1c974abc0_Data>& _403853_r) {
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_403838_l,_403853_r);
	_1c976d330_check_datas(&(*_self_));
	jule::Ptr<_1c974abc0_Data> _404317_d = _1c976cb59_eval_op(&(*_self_));;
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_403838_l,_403853_r);
	_1c976cdce_eval_const(&(*_self_), _404317_d);
	if ((_404317_d != nullptr)) {
		_404317_d.get()._field_mutable=true;
		_1c976d82a_post_eval(&(*_self_), _404317_d);
	};
	return _404317_d;
}



inline jule::Ptr<_1c974abc0_Data> _1c976dee0_eval(_1c9768858_BinaryEval* _self_, jule::Ptr<_1e43693a6_BinopExpr>& _405828_op) {
	if ((_405828_op.get()._field_op.get()._field_kind == jule::Str("=", 1))) {
		_1c974cc16_push_err((*_self_)._field_e.ptr(), _405828_op.get()._field_op,jule::Str("assignments not available for expressions", 41),jule::Slice<jule::Any>());
		_1c974d035_push_suggestion((*_self_)._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1c974abc0_Data> _406517_l = _1c976602b_eval_expr_kind((*_self_)._field_e, jule::Any(_405828_op.get()._field_left));;
	if (((_406517_l == nullptr) || (_406517_l.get()._field_kind == nullptr))) {
		return nullptr;
	};
	jule::Ptr<_1c97746ee_TypeKind> _407017_prefix = (*_self_)._field_e.get()._field_prefix;;
	(*_self_)._field_e.get()._field_prefix=_406517_l.get()._field_kind;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_407017_prefix;
	});;
	jule::Ptr<_1c974abc0_Data> _407317_r = _1c976602b_eval_expr_kind((*_self_)._field_e, jule::Any(_405828_op.get()._field_right));;
	if (((_407317_r == nullptr) || (_407317_r.get()._field_kind == nullptr))) {
		return nullptr;
	};
	(*_self_)._field_op=_405828_op.get()._field_op;
	jule::Ptr<_1c974abc0_Data> _408017_d = _1c976dbd2_solve_explicit(&(*_self_), _406517_l,_407317_r);;
	if ((((_408017_d != nullptr) && _406517_l.get()._field_is_rune) && _407317_r.get()._field_is_rune)) {
		_408017_d.get()._field_is_rune=true;
	};
	return _408017_d;
}







std::ostream &operator<<(std::ostream &_Stream, _1c9768858_BinaryEval _Src) {
	_Stream << "BinaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c97739b7_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "generic:" << _Src._field_generic << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c9774aa6_to_str(_1c97746ee_TypeKind* _self_) {
	if (_1c97755bd_is_nil(&(*_self_))) {
		return jule::Str("nil", 3);
	};
	jule::Str _6717_kind = jule::Str();;
	if ((*_self_)._field_variadic) {
		_6717_kind+=jule::Str("...", 3);
	};
	if (_1c9775359_cpp_linked(&(*_self_))) {
		_6717_kind+=jule::Str("cpp.", 4);
		_6717_kind+=(*_self_)._field_cpp_ident;
	} else {
		_6717_kind+=_1c97742c0_Kind_mptr_data[((*_self_)._field_kind).type_offset]._1c9773d6e_to_str((*_self_)._field_kind);
	};
	return _6717_kind;
}



inline jule::Bool _1c9774db4_equals(jule::Ptr<_1c97746ee_TypeKind> _self_, jule::Ptr<_1c97746ee_TypeKind> _8326_other) {
	if (_1c97755bd_is_nil(_self_.ptr())) {
		return _1c97755bd_is_nil(_8326_other.ptr());
	};
	if (_1c9775359_cpp_linked(_self_.ptr())) {
		return (_1c9775359_cpp_linked(_8326_other.ptr()) && (_self_.get()._field_cpp_ident == _8326_other.get()._field_cpp_ident));
	};
	return _1c97742c0_Kind_mptr_data[(_self_.get()._field_kind).type_offset]._1c977417c_equals(_self_.get()._field_kind, _8326_other);
}



inline jule::Bool _1c9775359_cpp_linked(_1c97746ee_TypeKind* _self_) {
	return ((*_self_)._field_cpp_ident.len() != 0LL);
}



inline jule::Bool _1c97755bd_is_nil(_1c97746ee_TypeKind* _self_) {
	return ((*_self_)._field_kind == nullptr);
}



inline jule::Bool _1c9775832_void(_1c97746ee_TypeKind* _self_) {
	jule::Ptr<_1c9778e51_Prim> _10613_prim = _1c97767ab_prim(&(*_self_));;
	return ((_10613_prim != nullptr) && (_10613_prim.get()._field_kind == jule::Str("void", 4)));
}



inline jule::Bool _1c9775a96_mutable(_1c97746ee_TypeKind* _self_) {
	{
		_1c97746ee_TypeKind* _11321__self = (&((*_self_)));;
		if ((_1c9777999_strct(_11321__self) != nullptr)) {
			return _1c9777999_strct(_11321__self).get()._field_mutable;
		};
		if ((_1c9777c0d_trt(_11321__self) != nullptr)) {
			return _1c9777c0d_trt(_11321__self).get()._field_mutable;
		};
		if ((_1c97767ab_prim(_11321__self) != nullptr)) {
			jule::Ptr<_1c9778e51_Prim> _12221_p = _1c97767ab_prim(_11321__self);;
			return _1c977c174_is_any(_12221_p.ptr());
		};
		if ((_1c977725c_arr(_11321__self) != nullptr)) {
			return _1c9775a96_mutable(_1c977725c_arr(_11321__self).get()._field_elem.ptr());
		};
		return (((_1c97774c1_slc(_11321__self) != nullptr) || (_1c9776c84_ptr(_11321__self) != nullptr)) || (_1c9776a20_sptr(_11321__self) != nullptr));
	};
}



inline jule::Bool _1c9775d0a_nil_compatible(_1c97746ee_TypeKind* _self_) {
	{
		_1c97746ee_TypeKind* _13721__self = (&((*_self_)));;
		jule::Ptr<_1c9778e51_Prim> _13917_prim = _1c97767ab_prim(_13721__self);;
		if (((_13917_prim != nullptr) && _1c977c174_is_any(_13917_prim.ptr()))) {
			return true;
		};
		return ((((((_1c97755bd_is_nil(_13721__self) || (_1c9777735_fnc(_13721__self) != nullptr)) || (_1c9776a20_sptr(_13721__self) != nullptr)) || (_1c9776c84_ptr(_13721__self) != nullptr)) || (_1c9777c0d_trt(_13721__self) != nullptr)) || (_1c97774c1_slc(_13721__self) != nullptr)) || (_1c9777e72_map(_13721__self) != nullptr));
	};
}



inline jule::Bool _1c977606e_performs_rc(_1c97746ee_TypeKind* _self_) {
	{
		_1c97746ee_TypeKind* _15721__self = (&((*_self_)));;
		return (((_1c9776a20_sptr(_15721__self) != nullptr) || (_1c97774c1_slc(_15721__self) != nullptr)) || (_1c9777c0d_trt(_15721__self) != nullptr));
	};
}



inline jule::Bool _1c97762d3_supports_cloning(_1c97746ee_TypeKind* _self_) {
	{
		_1c97746ee_TypeKind* _16521__self = (&((*_self_)));;
		{
			
			if ((_1c97767ab_prim(_16521__self) != nullptr)) {
				_case_begin_1cc45d517:;
				{
					return (!(_1c977c174_is_any(_1c97767ab_prim(_16521__self).ptr())));
				}
			}
			else if ((_1c9776ee8_enm(_16521__self) != nullptr)) {
				_case_begin_1cc45d57d:;
				{
					return true;
				}
			}
			else if ((_1c9777735_fnc(_16521__self) != nullptr)) {
				_case_begin_1cc45d281:;
				{
					return true;
				}
			}
			else if ((_1c9776c84_ptr(_16521__self) != nullptr)) {
				_case_begin_1cc45d2e7:;
				{
					return true;
				}
			}
			else if ((_1c97774c1_slc(_16521__self) != nullptr)) {
				_case_begin_1cc45d35d:;
				{
					return _1c97762d3_supports_cloning(_1c97774c1_slc(_16521__self).get()._field_elem.ptr());
				}
			}
			else if ((_1c9777e72_map(_16521__self) != nullptr)) {
				_case_begin_1cc45cd85:;
				{
					jule::Ptr<_1c977e473_Map> _17821_m = _1c9777e72_map(_16521__self);;
					return (_1c97762d3_supports_cloning(_17821_m.get()._field_key.ptr()) && _1c97762d3_supports_cloning(_17821_m.get()._field_val.ptr()));
				}
			}
			else if ((_1c977725c_arr(_16521__self) != nullptr)) {
				_case_begin_1cc45cdeb:;
				{
					return _1c97762d3_supports_cloning(_1c977725c_arr(_16521__self).get()._field_elem.ptr());
				}
			}
			else if ((_1c9776a20_sptr(_16521__self) != nullptr)) {
				_case_begin_1cc45ce62:;
				{
					return _1c97762d3_supports_cloning(_1c9776a20_sptr(_16521__self).get()._field_elem.ptr());
				}
			}
			else if ((_1c9777999_strct(_16521__self) != nullptr)) {
				_case_begin_1cc45ced9:;
				{
					jule::Ptr<_1e43462ea_StructIns> _18525_s = _1c9777999_strct(_16521__self);;
					return (((_18525_s.get()._field_decl != nullptr) && (!(_18525_s.get()._field_decl.get()._field_cpp_linked))) && _1e433ab2a_is_derives(_18525_s.get()._field_decl.ptr(), jule::Str("Clone", 5)));
				}
			}
			else {
				_case_begin_1cc45cd1e:;
				{
					return false;
				}
			}
			_match_end_1cc45cc97:;
		};
	};
}



inline jule::Bool _1c9776547_variadicable(_1c97746ee_TypeKind* _self_) {
	{
		_1c97746ee_TypeKind* _19821__self = (&((*_self_)));;
		return (_1c97774c1_slc(_19821__self) != nullptr);
	};
}



inline jule::Ptr<_1c9778e51_Prim> _1c97767ab_prim(_1c97746ee_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c9778e51_Prim>>()) {
			_case_begin_1cc465893:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1c9778e51_Prim>();
			}
		}
		else {
			_case_begin_1cc45ac95:;
			{
				return nullptr;
			}
		}
		_match_end_1cc45ac40:;
	};
}



inline jule::Ptr<_1c977c460_Sptr> _1c9776a20_sptr(_1c97746ee_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c977c460_Sptr>>()) {
			_case_begin_1cc465a5d:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1c977c460_Sptr>();
			}
		}
		else {
			_case_begin_1cc466058:;
			{
				return nullptr;
			}
		}
		_match_end_1cc466003:;
	};
}



inline jule::Ptr<_1c97809c4_Ptr> _1c9776c84_ptr(_1c97746ee_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c97809c4_Ptr>>()) {
			_case_begin_1cc466795:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1c97809c4_Ptr>();
			}
		}
		else {
			_case_begin_1cc466c90:;
			{
				return nullptr;
			}
		}
		_match_end_1cc466c3a:;
	};
}



inline jule::Ptr<_1e4456b58_Enum> _1c9776ee8_enm(_1c97746ee_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e4456b58_Enum>>()) {
			_case_begin_1cc467499:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1e4456b58_Enum>();
			}
		}
		else {
			_case_begin_1cc4679a5:;
			{
				return nullptr;
			}
		}
		_match_end_1cc467950:;
	};
}



inline jule::Ptr<_1c9780067_Arr> _1c977725c_arr(_1c97746ee_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c9780067_Arr>>()) {
			_case_begin_1cc4681e2:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1c9780067_Arr>();
			}
		}
		else {
			_case_begin_1cc4686dc:;
			{
				return nullptr;
			}
		}
		_match_end_1cc468687:;
	};
}



inline jule::Ptr<_1c977cdbc_Slc> _1c97774c1_slc(_1c97746ee_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c977cdbc_Slc>>()) {
			_case_begin_1cc468de6:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1c977cdbc_Slc>();
			}
		}
		else {
			_case_begin_1cc469402:;
			{
				return nullptr;
			}
		}
		_match_end_1cc46939c:;
	};
}



inline jule::Ptr<_1e4383018_FnIns> _1c9777735_fnc(_1c97746ee_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e4383018_FnIns>>()) {
			_case_begin_1cc469b3e:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1e4383018_FnIns>();
			}
		}
		else {
			_case_begin_1cc46a139:;
			{
				return nullptr;
			}
		}
		_match_end_1cc46a0d4:;
	};
}



inline jule::Ptr<_1e43462ea_StructIns> _1c9777999_strct(_1c97746ee_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e43462ea_StructIns>>()) {
			_case_begin_1cc46a1a0:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1e43462ea_StructIns>();
			}
		}
		else {
			_case_begin_1cc46ae5e:;
			{
				return nullptr;
			}
		}
		_match_end_1cc46ae09:;
	};
}



inline jule::Ptr<_1e43d8d0a_Trait> _1c9777c0d_trt(_1c97746ee_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e43d8d0a_Trait>>()) {
			_case_begin_1cc46b569:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1e43d8d0a_Trait>();
			}
		}
		else {
			_case_begin_1cc46ba64:;
			{
				return nullptr;
			}
		}
		_match_end_1cc46ba0e:;
	};
}



inline jule::Ptr<_1c977e473_Map> _1c9777e72_map(_1c97746ee_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c977e473_Map>>()) {
			_case_begin_1cc46c26d:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1c977e473_Map>();
			}
		}
		else {
			_case_begin_1cc46c779:;
			{
				return nullptr;
			}
		}
		_match_end_1cc46c724:;
	};
}



inline jule::Ptr<_1c977d8b2_Tuple> _1c97781d6_tup(_1c97746ee_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c977d8b2_Tuple>>()) {
			_case_begin_1cc46ceb6:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1c977d8b2_Tuple>();
			}
		}
		else {
			_case_begin_1cc46d4b1:;
			{
				return nullptr;
			}
		}
		_match_end_1cc46d45b:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c97746ee_TypeKind _Src) {
	_Stream << _1c9774aa6_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _1c9778989_checked(_1c977858d_TypeSymbol* _self_) {
	return ((*_self_)._field_kind != nullptr);
}



inline void _1c9778b65_remove_kind(_1c977858d_TypeSymbol* _self_) {
	(*_self_)._field_kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1c977858d_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c97792b4_to_str(_1c9778e51_Prim* _self_) {
	return (*_self_)._field_kind;
}



inline jule::Bool _1c97795c2_equals(jule::Ptr<_1c9778e51_Prim> _self_, jule::Ptr<_1c97746ee_TypeKind> _34126_other) {
	jule::Ptr<_1c9778e51_Prim> _34213_prim = _1c97767ab_prim(_34126_other.ptr());;
	if ((_34213_prim == nullptr)) {
		return false;
	};
	return (_self_.get()._field_kind == _34213_prim.get()._field_kind);
}



inline jule::Bool _1c9779a34_is_i8(_1c9778e51_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i8", 2));
}



inline jule::Bool _1c9779c98_is_i16(_1c9778e51_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i16", 3));
}



inline jule::Bool _1c977a00c_is_i32(_1c9778e51_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i32", 3));
}



inline jule::Bool _1c977a271_is_i64(_1c9778e51_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i64", 3));
}



inline jule::Bool _1c977a4d5_is_u8(_1c9778e51_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u8", 2));
}



inline jule::Bool _1c977a749_is_u16(_1c9778e51_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u16", 3));
}



inline jule::Bool _1c977a9ad_is_u32(_1c9778e51_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u32", 3));
}



inline jule::Bool _1c977ac22_is_u64(_1c9778e51_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u64", 3));
}



inline jule::Bool _1c977ae86_is_f32(_1c9778e51_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("f32", 3));
}



inline jule::Bool _1c977b1ea_is_f64(_1c9778e51_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("f64", 3));
}



inline jule::Bool _1c977b45e_is_int(_1c9778e51_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("int", 3));
}



inline jule::Bool _1c977b6c3_is_uint(_1c9778e51_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("uint", 4));
}



inline jule::Bool _1c977b937_is_uintptr(_1c9778e51_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("uintptr", 7));
}



inline jule::Bool _1c977bb9b_is_bool(_1c9778e51_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("bool", 4));
}



inline jule::Bool _1c977be10_is_str(_1c9778e51_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("str", 3));
}



inline jule::Bool _1c977c174_is_any(_1c9778e51_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("any", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _1c9778e51_Prim _Src) {
	_Stream << _1c97792b4_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1c977c7c3_to_str(_1c977c460_Sptr* _self_) {
	return (jule::Str("&", 1) + _1c9774aa6_to_str((*_self_)._field_elem.ptr()));
}



inline jule::Bool _1c977cad1_equals(jule::Ptr<_1c977c460_Sptr> _self_, jule::Ptr<_1c97746ee_TypeKind> _41026_other) {
	jule::Ptr<_1c977c460_Sptr> _41113_sptr = _1c9776a20_sptr(_41026_other.ptr());;
	if ((_41113_sptr == nullptr)) {
		return false;
	};
	return _1c9774db4_equals(_self_.get()._field_elem, _41113_sptr.get()._field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1c977c460_Sptr _Src) {
	_Stream << _1c977c7c3_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1c977d340_to_str(_1c977cdbc_Slc* _self_) {
	return (jule::Str("[]", 2) + _1c9774aa6_to_str((*_self_)._field_elem.ptr()));
}



inline jule::Bool _1c977d64d_equals(jule::Ptr<_1c977cdbc_Slc> _self_, jule::Ptr<_1c97746ee_TypeKind> _42926_other) {
	jule::Ptr<_1c977cdbc_Slc> _43013_slc = _1c97774c1_slc(_42926_other.ptr());;
	if ((_43013_slc == nullptr)) {
		return false;
	};
	return _1c9774db4_equals(_self_.get()._field_elem, _43013_slc.get()._field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1c977cdbc_Slc _Src) {
	_Stream << _1c977d340_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1c977dcad_to_str(_1c977d8b2_Tuple* _self_) {
	jule::Str _44617_s = jule::Str("(", 1);;
	_44617_s+=_1c9774aa6_to_str((*_self_)._field_types[0LL].ptr());
	{
		auto expr = (*_self_)._field_types.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1cc48100c:;
		if (it != expr.end()) {
			jule::Ptr<_1c97746ee_TypeKind> &_44816_t = *it;
			{
				_44617_s+=jule::Str(",", 1);
				_44617_s+=_1c9774aa6_to_str(_44816_t.ptr());
			}
			_iter_next_1cc48100c:;
			++it;
			goto _iter_begin_1cc48100c;
		}
		_iter_end_1cc48100c:;
	};
	_44617_s+=jule::Str(")", 1);
	return _44617_s;
}



inline jule::Bool _1c977e0bb_equals(jule::Ptr<_1c977d8b2_Tuple> _self_, jule::Ptr<_1c97746ee_TypeKind> _45726_other) {
	jule::Ptr<_1c977d8b2_Tuple> _45813_tup = _1c97781d6_tup(_45726_other.ptr());;
	if ((_45813_tup == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_types.len() != _45813_tup.get()._field_types.len())) {
		return false;
	};
	jule::I64 _46717_i = 0LL;;
	for (; (_46717_i < _self_.get()._field_types.len()); (_46717_i)++) {
		{
			if ((!(_1c9774db4_equals(_self_.get()._field_types[_46717_i], _45813_tup.get()._field_types[_46717_i])))) {
				return false;
			};
		}
	_iter_next_1cc483e66:;
	}
	_iter_end_1cc483e66:;;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1c977d8b2_Tuple _Src) {
	_Stream << _1c977dcad_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1c977e7d6_to_str(_1c977e473_Map* _self_) {
	jule::Str _48717_s = jule::Str("[", 1);;
	_48717_s+=_1c9774aa6_to_str((*_self_)._field_key.ptr());
	_48717_s+=jule::Str(":", 1);
	_48717_s+=_1c9774aa6_to_str((*_self_)._field_val.ptr());
	_48717_s+=jule::Str("]", 1);
	return _48717_s;
}



inline jule::Bool _1c977eae4_equals(jule::Ptr<_1c977e473_Map> _self_, jule::Ptr<_1c97746ee_TypeKind> _49626_other) {
	jule::Ptr<_1c977e473_Map> _49713_map = _1c9777e72_map(_49626_other.ptr());;
	if ((_49713_map == nullptr)) {
		return false;
	};
	return (_1c9774db4_equals(_self_.get()._field_key, _49713_map.get()._field_key) && _1c9774db4_equals(_self_.get()._field_val, _49713_map.get()._field_val));
}







std::ostream &operator<<(std::ostream &_Stream, _1c977e473_Map _Src) {
	_Stream << _1c977e7d6_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1c97803ca_to_str(_1c9780067_Arr* _self_) {
	jule::Str _51517_s = jule::Str("[", 1);;
	_51517_s+=_1e5c30b6c_itoa((*_self_)._field_n);
	_51517_s+=jule::Str("]", 1);
	_51517_s+=_1c9774aa6_to_str((*_self_)._field_elem.ptr());
	return _51517_s;
}



inline jule::Bool _1c97806d8_equals(jule::Ptr<_1c9780067_Arr> _self_, jule::Ptr<_1c97746ee_TypeKind> _52326_other) {
	jule::Ptr<_1c9780067_Arr> _52413_arr = _1c977725c_arr(_52326_other.ptr());;
	if ((_52413_arr == nullptr)) {
		return false;
	};
	return ((_self_.get()._field_n == _52413_arr.get()._field_n) && _1c9774db4_equals(_self_.get()._field_elem, _52413_arr.get()._field_elem));
}







std::ostream &operator<<(std::ostream &_Stream, _1c9780067_Arr _Src) {
	_Stream << _1c97803ca_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1c9780d37_to_str(_1c97809c4_Ptr* _self_) {
	if (_1c9781497_is_unsafe(&(*_self_))) {
		return jule::Str("*unsafe", 7);
	};
	return (jule::Str("*", 1) + _1c9774aa6_to_str((*_self_)._field_elem.ptr()));
}



inline jule::Bool _1c9781145_equals(jule::Ptr<_1c97809c4_Ptr> _self_, jule::Ptr<_1c97746ee_TypeKind> _54726_other) {
	jule::Ptr<_1c97809c4_Ptr> _54813_ptr = _1c9776c84_ptr(_54726_other.ptr());;
	if ((_54813_ptr == nullptr)) {
		return false;
	};
	return _1c9774db4_equals(_self_.get()._field_elem, _54813_ptr.get()._field_elem);
}



inline jule::Bool _1c9781497_is_unsafe(_1c97809c4_Ptr* _self_) {
	return ((*_self_)._field_elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1c97809c4_Ptr _Src) {
	_Stream << _1c9780d37_to_str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c978191a_Referencer _Src) {
	_Stream << "Referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1c9782d39_push_err(_1c9782663_TypeChecker* _self_, jule::Ptr<_20cd9e6ec_Token> _62527_token, jule::Str _62542_fmt, jule::Slice<jule::Any> _62555_args) {
	_1e46aed6c_push_err((*_self_)._field_s.ptr(), _62527_token,_62542_fmt,jule::Any(_62555_args));
}



inline void _1c9783015_allow_builtin(_1c9782663_TypeChecker* _self_) {
	(*_self_)._field_dis_builtin=false;
}



inline void _1c97831e1_disallow_builtin(_1c9782663_TypeChecker* _self_) {
	(*_self_)._field_dis_builtin=true;
}



inline jule::Ptr<_1c9778e51_Prim> _1c97834ee_build_prim(_1c9782663_TypeChecker* _self_, jule::Ptr<_1e4362b0d_IdentTypeDecl>& _63730_decl) {
	if ((!(_1c978b8ae_is_prim(_63730_decl.get()._field_ident)))) {
		_1c9782d39_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_63730_decl.get()._field_generics.len() > 0LL)) {
		_1c9782d39_push_err(&(*_self_), _63730_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_63730_decl.get()._field_ident)}));
		return nullptr;
	};
	return _1c978b370_build_prim_type(_63730_decl.get()._field_ident);
}



inline void _1cc4d0d81_push_reference(_1c9782663_TypeChecker* _self_, jule::Ptr<_1e43462ea_StructIns>& _65141_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_1cc1b9d01_exist((*_self_)._field_refers.ptr(), _65141_t)) {
		return;;
	};
	_1e4386934_push((*_self_)._field_refers.ptr(), jule::Any(_65141_t));
}



inline void _1c9783b3c_push_cycle_error(_1c9782663_TypeChecker* _self_, jule::Any _66131_def1, jule::Any _66142_def2, jule::Str& _66158_message) {
	;
	jule::Fn<jule::Str(jule::Any&)> _66413_get_ident = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _66429_def) mutable -> jule::Str {
		{
			auto &_match_expr{ _66429_def };
			
			if (_match_expr.type_is<jule::Ptr<_1c97739b7_TypeAlias>>()) {
				_case_begin_1cc497c5a:;
				{
					return _66429_def.operator jule::Ptr<_1c97739b7_TypeAlias>().get()._field_ident;
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1e43360cb_Struct>>()) {
				_case_begin_1cc497b6c:;
				{
					return _66429_def.operator jule::Ptr<_1e43360cb_Struct>().get()._field_ident;
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1e4456b58_Enum>>()) {
				_case_begin_1cc497bd3:;
				{
					return _66429_def.operator jule::Ptr<_1e4456b58_Enum>().get()._field_ident;
				}
			}
			else {
				_case_begin_1cc49773d:;
				{
					return jule::Str();
				}
			}
			_match_end_1cc4976d8:;
		};
	});;
	jule::Str _67713_def1_ident = _66413_get_ident(_66131_def1);;
	jule::Str _67813_def2_ident = _66413_get_ident(_66142_def2);;
	jule::Str _67913_refers_to = _20ca9019b_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_67713_def1_ident),jule::Any(_67813_def2_ident)}));;
	(_66158_message).buffer.insert(0, (((_20b9a0233_repeat(jule::Str(" ", 1),4LL) + _67913_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1c9783ee4_check_cross_cycle(_1c9782663_TypeChecker* _self_, jule::Any _68332_decl, jule::Str& _68348_message) {
	{
		auto &_match_expr{ _68332_decl };
		
		if (_match_expr.type_is<jule::Ptr<_1c97739b7_TypeAlias>>()) {
			_case_begin_1cc49b16a:;
			{
				jule::Ptr<_1c97739b7_TypeAlias> _68617_ta = _68332_decl.operator jule::Ptr<_1c97739b7_TypeAlias>();;
				{
					auto &expr = _68617_ta.get()._field_refers;
					auto it = expr.begin();
					_iter_begin_1cc49be4b:;
					if (it != expr.end()) {
						jule::Any &_68720_d = *it;
						{
							{
								
								if ((_68720_d == (*_self_)._field_referencer.get()._field_owner)) {
									_case_begin_1cc49c732:;
									{
										_1c9783b3c_push_cycle_error(&(*_self_), jule::Any(_68617_ta),jule::Any(_68720_d),_68348_message);
										return false;
									}
								}
								else if ((!(_1c9783ee4_check_cross_cycle(&(*_self_), jule::Any(_68720_d),_68348_message)))) {
									_case_begin_1cc49c7a9:;
									{
										_1c9783b3c_push_cycle_error(&(*_self_), jule::Any(_68617_ta),jule::Any(_68720_d),_68348_message);
										return false;
									}
								}
								_match_end_1cc49c622:;
							};
						}
						_iter_next_1cc49be4b:;
						++it;
						goto _iter_begin_1cc49be4b;
					}
					_iter_end_1cc49be4b:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e43360cb_Struct>>()) {
			_case_begin_1cc49b1e2:;
			{
				jule::Ptr<_1e43360cb_Struct> _69817_s = _68332_decl.operator jule::Ptr<_1e43360cb_Struct>();;
				{
					auto &expr = _69817_s.get()._field_depends;
					auto it = expr.begin();
					_iter_begin_1cc49c369:;
					if (it != expr.end()) {
						jule::Ptr<_1e43360cb_Struct> &_69920_d = *it;
						{
							{
								
								if (((*_self_)._field_referencer.get()._field_owner == _69920_d)) {
									_case_begin_1cc49eed7:;
									{
										_1c9783b3c_push_cycle_error(&(*_self_), jule::Any(_69817_s),jule::Any(_69920_d),_68348_message);
										return false;
									}
								}
								else if ((!(_1c9783ee4_check_cross_cycle(&(*_self_), jule::Any(_69920_d),_68348_message)))) {
									_case_begin_1cc4a005e:;
									{
										_1c9783b3c_push_cycle_error(&(*_self_), jule::Any(_69817_s),jule::Any(_69920_d),_68348_message);
										return false;
									}
								}
								_match_end_1cc49edc7:;
							};
						}
						_iter_next_1cc49c369:;
						++it;
						goto _iter_begin_1cc49c369;
					}
					_iter_end_1cc49c369:;
				};
			}
		}
		_match_end_1cc49b104:;
	};
	return true;
}



inline jule::Bool _1c978439b_check_illegal_cycles(_1c9782663_TypeChecker* _self_, jule::Ptr<_1e4362b0d_IdentTypeDecl>& _71740_ident, jule::Any _71767_decl) {
	jule::Bool _71780_ok = jule::Bool();
	if (((*_self_)._field_referencer == nullptr)) {
		_71780_ok = true;
		return _71780_ok;
	};
	{
		auto &_match_expr{ _71767_decl };
		
		if (_match_expr.type_is<jule::Ptr<_1e43360cb_Struct>>()) {
			_case_begin_1cc4a245c:;
			{
				if (((*_self_)._field_not_plain || _71767_decl.operator jule::Ptr<_1e43360cb_Struct>().get()._field_cpp_linked)) {
					_71780_ok = true;
					return _71780_ok;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c97739b7_TypeAlias>>()) {
			_case_begin_1cc4a24c3:;
			{
				if (_71767_decl.operator jule::Ptr<_1c97739b7_TypeAlias>().get()._field_cpp_linked) {
					_71780_ok = true;
					return _71780_ok;
				};
			}
		}
		_match_end_1cc4a276a:;
	};
	if ((_71767_decl == (*_self_)._field_referencer.get()._field_owner)) {
		_1c9782d39_push_err(&(*_self_), _71740_ident.get()._field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_referencer.get()._field_ident)}));
		_71780_ok = false;
		return _71780_ok;
	};
	jule::Str _74017_message = jule::Str();;
	if ((!(_1c9783ee4_check_cross_cycle(&(*_self_), jule::Any(_71767_decl),_74017_message)))) {
		jule::Str _74321_err_msg = _74017_message;;
		_74017_message=jule::Str();
		_1c9783b3c_push_cycle_error(&(*_self_), jule::Any((*_self_)._field_referencer.get()._field_owner),jule::Any(_71767_decl),_74017_message);
		_74321_err_msg=(_74321_err_msg + _74017_message);
		_1c9782d39_push_err(&(*_self_), _71740_ident.get()._field_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_74321_err_msg)}));
		_71780_ok = false;
		return _71780_ok;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_1c97739b7_TypeAlias>>()) {
			_case_begin_1cc4a6e89:;
			{
				{
					(*((*_self_)._field_referencer.get()._field_refs))=jule::append((*((*_self_)._field_referencer.get()._field_refs)),jule::Slice<jule::Any>::make({jule::Any(_71767_decl)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e43360cb_Struct>>()) {
			_case_begin_1cc4a7000:;
			{
				{
					auto &_match_expr{ _71767_decl };
					
					if (_match_expr.type_is<jule::Ptr<_1e43360cb_Struct>>()) {
						_case_begin_1cc4a782a:;
						{
							jule::Ptr<_1e43360cb_Struct> _75925_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_1e43360cb_Struct>();;
							_75925_s.get()._field_depends = jule::alloc_for_append(_75925_s.get()._field_depends,1);_75925_s.get()._field_depends.__push(_71767_decl.operator jule::Ptr<_1e43360cb_Struct>());;
						}
					}
					_match_end_1cc4a77c5:;
				};
			}
		}
		_match_end_1cc4a7121:;
	};
	_71780_ok = true;
	return _71780_ok;
}



inline jule::Trait<_1c97742c0_Kind> _1c9784753_from_type_alias(_1c9782663_TypeChecker* _self_, jule::Ptr<_1e4362b0d_IdentTypeDecl>& _76735_decl, jule::Ptr<_1c97739b7_TypeAlias>& _76762_ta) {
	if ((!(_1e46b0543_is_accessible_define((*_self_)._field_s.ptr(), _76762_ta.get()._field_public,_76762_ta.get()._field_token)))) {
		_1c9782d39_push_err(&(*_self_), _76735_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_76735_decl.get()._field_ident)}));
		return nullptr;
	};
	_76762_ta.get()._field_used=true;
	if ((_76735_decl.get()._field_generics.len() > 0LL)) {
		_1c9782d39_push_err(&(*_self_), _76735_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_76735_decl.get()._field_ident)}));
		return nullptr;
	};
	if (((!((*_self_)._field_inscatch)) && ((*_self_)._field_banned_generics != nullptr))) {
		(*_self_)._field_inscatch=true;
		{
			auto &expr = (*_self_)._field_banned_generics;
			auto it = expr.begin();
			_iter_begin_1cc4acb82:;
			if (it != expr.end()) {
				jule::Ptr<_1c97739b7_TypeAlias> _78420_bg = *it;
				{
					if (((_78420_bg == _76762_ta) || ((_76762_ta.get()._field_kind.get()._field_kind != nullptr) && _1c9774db4_equals(_76762_ta.get()._field_kind.get()._field_kind, _78420_bg.get()._field_kind.get()._field_kind)))) {
						(*_self_)._field_inscatch=false;
						goto _iter_end_1cc4acb82;
					};
				}
				_iter_next_1cc4acb82:;
				++it;
				goto _iter_begin_1cc4acb82;
			}
			_iter_end_1cc4acb82:;
		};
	};
	if ((*_self_)._field_inscatch) {
		{
			auto &expr = (*_self_)._field_banned_generics;
			auto it = expr.begin();
			_iter_begin_1cc4ae9db:;
			if (it != expr.end()) {
				jule::Ptr<_1c97739b7_TypeAlias> _79520_bg = *it;
				{
					if ((_79520_bg == _76762_ta)) {
						_1c9782d39_push_err(&(*_self_), _76735_decl.get()._field_token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_76735_decl.get()._field_ident)}));
						return nullptr;
					};
					{
						auto &expr = _76762_ta.get()._field_generics;
						auto it = expr.begin();
						_iter_begin_1cc4b0ec6:;
						if (it != expr.end()) {
							jule::Ptr<_1c97739b7_TypeAlias> _80024_dg = *it;
							{
								if ((_79520_bg == _80024_dg)) {
									_1c9782d39_push_err(&(*_self_), _76735_decl.get()._field_token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_76735_decl.get()._field_ident)}));
									return nullptr;
								};
							}
							_iter_next_1cc4b0ec6:;
							++it;
							goto _iter_begin_1cc4b0ec6;
						}
						_iter_end_1cc4b0ec6:;
					};
				}
				_iter_next_1cc4ae9db:;
				++it;
				goto _iter_begin_1cc4ae9db;
			}
			_iter_end_1cc4ae9db:;
		};
	};
	jule::Bool _80917_ok = _1c978439b_check_illegal_cycles(&(*_self_), _76735_decl,jule::Any(_76762_ta));;
	if ((!(_80917_ok))) {
		return nullptr;
	};
	_80917_ok=_1e46b732a_check_type_alias_decl_kind((*_self_)._field_s, _76762_ta,(*_self_)._field_lookup);
	if ((!(_80917_ok))) {
		return nullptr;
	};
	if ((_76762_ta.get()._field_generic && ((*_self_)._field_owner_alias != nullptr))) {
		(*_self_)._field_owner_alias.get()._field_generics = jule::alloc_for_append((*_self_)._field_owner_alias.get()._field_generics,1);(*_self_)._field_owner_alias.get()._field_generics.__push(_76762_ta);;
	};
	jule::Ptr<_1c97746ee_TypeKind> _82617_tk = jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_generic=_76762_ta.get()._field_generic, ._field_kind=_76762_ta.get()._field_kind.get()._field_kind.get()._field_kind});;
	if (_76762_ta.get()._field_cpp_linked) {
		_82617_tk.get()._field_cpp_ident=_76762_ta.get()._field_ident;
	} else {
		_82617_tk.get()._field_cpp_ident=_76762_ta.get()._field_kind.get()._field_kind.get()._field_cpp_ident;
	};
	return jule::Trait<_1c97742c0_Kind>(_82617_tk, 4);
}



inline jule::Ptr<_1e4456b58_Enum> _1c9784b0a_from_enum(_1c9782663_TypeChecker* _self_, jule::Ptr<_1e4362b0d_IdentTypeDecl>& _83829_decl, jule::Ptr<_1e4456b58_Enum>& _83856_e) {
	if ((!(_1e46b0543_is_accessible_define((*_self_)._field_s.ptr(), _83856_e.get()._field_public,_83856_e.get()._field_token)))) {
		_1c9782d39_push_err(&(*_self_), _83829_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_83829_decl.get()._field_ident)}));
		return nullptr;
	};
	if ((_83829_decl.get()._field_generics.len() > 0LL)) {
		_1c9782d39_push_err(&(*_self_), _83829_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_83829_decl.get()._field_ident)}));
		return nullptr;
	};
	return _83856_e;
}



inline jule::Ptr<_1e43d8d0a_Trait> _1c9784eb2_from_trait(_1c9782663_TypeChecker* _self_, jule::Ptr<_1e4362b0d_IdentTypeDecl>& _85030_decl, jule::Ptr<_1e43d8d0a_Trait>& _85057_t) {
	if ((!(_1e46b0543_is_accessible_define((*_self_)._field_s.ptr(), _85057_t.get()._field_public,_85057_t.get()._field_token)))) {
		_1c9782d39_push_err(&(*_self_), _85030_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_85030_decl.get()._field_ident)}));
		return nullptr;
	};
	if ((_85030_decl.get()._field_generics.len() > 0LL)) {
		_1c9782d39_push_err(&(*_self_), _85030_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_85030_decl.get()._field_ident)}));
		return nullptr;
	};
	return _85057_t;
}



inline jule::Bool _1c9785369_check_struct_ins(_1c9782663_TypeChecker* _self_, jule::Ptr<_1e43462ea_StructIns>& _86240_ins, jule::Ptr<_20cd9e6ec_Token>& _86258_error_token) {
	jule::Bool _86281_ok = jule::Bool();
	if (_86240_ins.get()._field_checked) {
		_86281_ok = true;
		return _86281_ok;
	};
	__JULE_DEFER({
		_86240_ins.get()._field_checked=true;
	});;
	if ((((*_self_)._field_referencer != nullptr) && ((*_self_)._field_referencer.get()._field_owner == _86240_ins.get()._field_decl))) {
		_86281_ok = true;
		return _86281_ok;
	};
	_1e46c0eb0_precheck_struct_ins((*_self_)._field_s, _86240_ins);
	if ((_86240_ins.get()._field_generics.len() > 0LL)) {
		_1e46c192d_check_struct_ins_operators((*_self_)._field_s, _86240_ins);
		_1e46c1235_check_struct_ins((*_self_)._field_s, _86240_ins);
	};
	_86281_ok = true;
	return _86281_ok;
}



inline void _1c9785611_append_used_struct_reference(_1c9782663_TypeChecker* _self_, jule::Ptr<_1e43360cb_Struct>& _88452_s) {
	if (((*_self_)._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_1e43360cb_Struct>>()) {
			_case_begin_1cc4c0755:;
			{
				jule::Ptr<_1e43360cb_Struct> _89121_ref_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_1e43360cb_Struct>();;
				if ((!(_1e43484a6_is_uses(_89121_ref_s.ptr(), _88452_s)))) {
					_89121_ref_s.get()._field_uses = jule::alloc_for_append(_89121_ref_s.get()._field_uses,1);_89121_ref_s.get()._field_uses.__push(_88452_s);;
				};
			}
		}
		_match_end_1cc4c0700:;
	};
}



inline jule::Ptr<_1e43462ea_StructIns> _1c97859c9_build_struct_instance(_1c9782663_TypeChecker* _self_, jule::Ptr<_1e4362b0d_IdentTypeDecl>& _89845_decl, jule::Ptr<_1e43360cb_Struct>& _89872_s) {
	jule::Ptr<_1c978191a_Referencer> _90017_referencer = (*_self_)._field_referencer;;
	(*_self_)._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1c97739b7_TypeAlias>> _90217_banned_generics = (*_self_)._field_banned_generics;;
	if (((*_self_)._field_banned_generics == nullptr)) {
		{
			auto &_match_expr{ (*_self_)._field_lookup };
			
			if (_match_expr.type_is<jule::Ptr<_1e468ce7c_ScopeChecker>>()) {
				_case_begin_1cc4c3a66:;
				{
					jule::Ptr<_1e468ce7c_ScopeChecker> _90925_sc = (*_self_)._field_lookup.operator jule::Ptr<_1e468ce7c_ScopeChecker>();;
					jule::Ptr<_1e468ce7c_ScopeChecker> _91025_hard = _1e4691018_get_hard_root(_90925_sc);;
					if (((_91025_hard.get()._field_owner.get()._field_owner == nullptr) || (_91025_hard.get()._field_owner.get()._field_owner.get()._field_decl != _89872_s))) {
						goto _match_end_1cc4c3a11;
					};
					jule::I64 _91421_n = (_91025_hard.get()._field_owner.get()._field_generics.len() + _91025_hard.get()._field_owner.get()._field_owner.get()._field_generics.len());;
					(*_self_)._field_banned_generics=_91025_hard.get()._field_table.get()._field_type_aliases.slice(0LL,_91421_n);
				}
			}
			_match_end_1cc4c3a11:;
		};
	} else {
		(*_self_)._field_inscatch=true;
	};
	jule::Ptr<_1e43462ea_StructIns> _92417_ins = _1e4339101_instance(_89872_s);;
	_92417_ins.get()._field_generics=jule::Slice<jule::Ptr<_1c97746ee_TypeKind>>::alloc(0LL,_89845_decl.get()._field_generics.len());
	{
		auto &expr = _89845_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1cc4c7592:;
		if (it != expr.end()) {
			jule::Ptr<_1e436257a_TypeDecl> _92621_g = *it;
			{
				jule::Ptr<_1c97746ee_TypeKind> _92721_kind = _1c9788bec_build(&(*_self_), _92621_g.get()._field_kind);;
				if ((_92721_kind == nullptr)) {
					return nullptr;
				};
				_92417_ins.get()._field_generics = jule::alloc_for_append(_92417_ins.get()._field_generics,1);_92417_ins.get()._field_generics.__push(_92721_kind);;
			}
			_iter_next_1cc4c7592:;
			++it;
			goto _iter_begin_1cc4c7592;
		}
		_iter_end_1cc4c7592:;
	};
	(*_self_)._field_banned_generics=_90217_banned_generics;
	(*_self_)._field_referencer=_90017_referencer;
	return _92417_ins;
}



inline jule::Ptr<_1e43462ea_StructIns> _1c9785d81_from_struct(_1c9782663_TypeChecker* _self_, jule::Ptr<_1e4362b0d_IdentTypeDecl>& _94135_decl, jule::Ptr<_1e43360cb_Struct>& _94162_s) {
	if ((!(_1e46b0543_is_accessible_define((*_self_)._field_s.ptr(), _94162_s.get()._field_public,_94162_s.get()._field_token)))) {
		_1c9782d39_push_err(&(*_self_), _94135_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_94135_decl.get()._field_ident)}));
		return nullptr;
	};
	if ((*_self_)._field_selection) {
		if ((_94135_decl.get()._field_generics.len() > 0LL)) {
			_1c9782d39_push_err(&(*_self_), _94135_decl.get()._field_token,jule::Str("generics are not allowed in this scope", 38),jule::Slice<jule::Any>());
			return nullptr;
		};
		return jule::new_ptr<_1e43462ea_StructIns>(_1e43462ea_StructIns{._field_decl=_94162_s, });
	};
	jule::Bool _95917_ok = ((*_self_)._field_not_plain || _1c978439b_check_illegal_cycles(&(*_self_), _94135_decl,jule::Any(_94162_s)));;
	if ((!(_95917_ok))) {
		return nullptr;
	};
	_1c9785611_append_used_struct_reference(&(*_self_), _94162_s);
	jule::Ptr<_1e43462ea_StructIns> _96517_ins = _1c97859c9_build_struct_instance(&(*_self_), _94135_decl,_94162_s);;
	if ((_96517_ins == nullptr)) {
		return nullptr;
	};
	_95917_ok=_1e46b1214_check_generic_quantity((*_self_)._field_s.ptr(), static_cast<jule::I64>(_96517_ins.get()._field_decl.get()._field_generics.len()),static_cast<jule::I64>(_96517_ins.get()._field_generics.len()),_94135_decl.get()._field_token);
	if ((!(_95917_ok))) {
		return nullptr;
	};
	jule::Ptr<_1e43462ea_StructIns> _97517_exist_instance = _1e433a6b8_append_instance(_94162_s.ptr(), _96517_ins);;
	if ((_97517_exist_instance != nullptr)) {
		_1cc4d0d81_push_reference(&(*_self_), _97517_exist_instance);
		return _97517_exist_instance;
	};
	_95917_ok=_1c9785369_check_struct_ins(&(*_self_), _96517_ins,_94135_decl.get()._field_token);
	if ((!(_95917_ok))) {
		return nullptr;
	};
	_1cc4d0d81_push_reference(&(*_self_), _96517_ins);
	return _96517_ins;
}



inline jule::Trait<_1c97742c0_Kind> _1c9786238_get_def(_1c9782663_TypeChecker* _self_, jule::Trait<_1c978dc35_Lookup> _99926_l, jule::Ptr<_1e4362b0d_IdentTypeDecl>& _99942_decl) {
	{
		auto &expr = (*_self_)._field_ignore_generics;
		auto it = expr.begin();
		_iter_begin_1cc4d5083:;
		if (it != expr.end()) {
			jule::Ptr<_1e436d50e_GenericDecl> _100016_g = *it;
			{
				if ((_100016_g.get()._field_ident == _99942_decl.get()._field_ident)) {
					return jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(_100016_g.get()._field_ident), 5);
				};
			}
			_iter_next_1cc4d5083:;
			++it;
			goto _iter_begin_1cc4d5083;
		}
		_iter_end_1cc4d5083:;
	};
	{
		auto &expr = (*_self_)._field_use_generics;
		auto it = expr.begin();
		_iter_begin_1cc4d5baa:;
		if (it != expr.end()) {
			jule::Ptr<_1c97739b7_TypeAlias> _100621_g = *it;
			{
				if ((_100621_g.get()._field_ident == _99942_decl.get()._field_ident)) {
					jule::Ptr<_1e43462ea_StructIns> _100825_st = _1c9777999_strct(_100621_g.get()._field_kind.get()._field_kind.ptr());;
					if ((_100825_st != nullptr)) {
						jule::Bool _101025_ok = _1c978439b_check_illegal_cycles(&(*_self_), _99942_decl,jule::Any(_100825_st.get()._field_decl));;
						if ((!(_101025_ok))) {
							return nullptr;
						};
					};
					return _100621_g.get()._field_kind.get()._field_kind.get()._field_kind;
				};
			}
			_iter_next_1cc4d5baa:;
			++it;
			goto _iter_begin_1cc4d5baa;
		}
		_iter_end_1cc4d5baa:;
	};
	if ((!(_99942_decl.get()._field_cpp_linked))) {
		jule::Ptr<_1e4456b58_Enum> _102021_e = _1c978dc35_Lookup_mptr_data[(_99926_l).type_offset]._1c978dae2_find_enum(_99926_l, _99942_decl.get()._field_ident);;
		if ((_102021_e != nullptr)) {
			return jule::Trait<_1c97742c0_Kind>(_1c9784b0a_from_enum(&(*_self_), _99942_decl,_102021_e), 3);
		};
		jule::Ptr<_1e43d8d0a_Trait> _102521_t = _1c978dc35_Lookup_mptr_data[(_99926_l).type_offset]._1c978d7d4_find_trait(_99926_l, _99942_decl.get()._field_ident);;
		if (((_102521_t == nullptr) && (!((*_self_)._field_dis_builtin)))) {
			_102521_t=_1c979b00b_find_builtin_trait(_99942_decl.get()._field_ident);
		};
		if ((_102521_t != nullptr)) {
			return jule::Trait<_1c97742c0_Kind>(_1c9784eb2_from_trait(&(*_self_), _99942_decl,_102521_t), 2);
		};
	} else if ((*_self_)._field_selection) {
		_1c9782d39_push_err(&(*_self_), _99942_decl.get()._field_token,jule::Str("cpp-linked definitions are not allowed in this scope", 52),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e43360cb_Struct> _103717_s = _1c978dc35_Lookup_mptr_data[(_99926_l).type_offset]._1c978d11e_find_struct(_99926_l, _99942_decl.get()._field_ident,_99942_decl.get()._field_cpp_linked);;
	if ((_103717_s != nullptr)) {
		return jule::Trait<_1c97742c0_Kind>(_1c9785d81_from_struct(&(*_self_), _99942_decl,_103717_s), 0);
	};
	jule::Ptr<_1c97739b7_TypeAlias> _104217_ta = _1c978dc35_Lookup_mptr_data[(_99926_l).type_offset]._1c978cc67_find_type_alias(_99926_l, _99942_decl.get()._field_ident,_99942_decl.get()._field_cpp_linked);;
	if (((_104217_ta == nullptr) && (!((*_self_)._field_dis_builtin)))) {
		_104217_ta=_1c9799bb9_find_builtin_type_alias(_99942_decl.get()._field_ident);
	};
	if ((_104217_ta != nullptr)) {
		return _1c9784753_from_type_alias(&(*_self_), _99942_decl,_104217_ta);
	};
	_1c9782d39_push_err(&(*_self_), _99942_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_99942_decl.get()._field_ident)}));
	return nullptr;
}



inline jule::Trait<_1c97742c0_Kind> _1c9786546_build_ident(_1c9782663_TypeChecker* _self_, jule::Ptr<_1e4362b0d_IdentTypeDecl> _105434_decl) {
	{
		
		if (_1c978b8ae_is_prim(_105434_decl.get()._field_ident)) {
			_case_begin_1cc4e0d4c:;
			{
				return jule::Trait<_1c97742c0_Kind>(_1c97834ee_build_prim(&(*_self_), _105434_decl), 5);
			}
		}
		else {
			_case_begin_1cc4e019d:;
			{
				return _1c9786238_get_def(&(*_self_), (*_self_)._field_lookup,_105434_decl);
			}
		}
		_match_end_1cc4e00d2:;
	};
}



inline jule::Ptr<_1c977c460_Sptr> _1c9786854_build_sptr_from_type(_1c9782663_TypeChecker* _self_, jule::Ptr<_1c97746ee_TypeKind>& _106344_elem) {
	{
		
		if ((_106344_elem == nullptr)) {
			_case_begin_1cc4e1215:;
			{
				return nullptr;
			}
		}
		else if ((_1c9777999_strct(_106344_elem.ptr()) != nullptr)) {
			_case_begin_1cc4e1798:;
			{
				jule::Ptr<_1e43462ea_StructIns> _106917_s = _1c9777999_strct(_106344_elem.ptr());;
				if (((_106917_s.get()._field_decl != nullptr) && _106917_s.get()._field_decl.get()._field_cpp_linked)) {
					_1c9782d39_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
					return nullptr;
				};
			}
		}
		else if (((_1c977725c_arr(_106344_elem.ptr()) != nullptr) && _1c977725c_arr(_106344_elem.ptr()).get()._field_auto)) {
			_case_begin_1cc4e180e:;
			{
				_1c9782d39_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1cc4e1105:;
	};
	return jule::new_ptr<_1c977c460_Sptr>(_1c977c460_Sptr{._field_elem=_106344_elem});
}



inline jule::Ptr<_1c977c460_Sptr> _1c9786b62_build_sptr(_1c9782663_TypeChecker* _self_, jule::Ptr<_1e4363603_SptrTypeDecl> _108333_decl) {
	jule::Bool _108413_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_108413_not_plain;
	});;
	jule::Ptr<_1c97746ee_TypeKind> _108817_elem = _1c978900a_check_decl(&(*_self_), _108333_decl.get()._field_elem);;
	return _1c9786854_build_sptr_from_type(&(*_self_), _108817_elem);
}



inline jule::Ptr<_1c97809c4_Ptr> _1c9786e70_build_ptr_from_type(_1c9782663_TypeChecker* _self_, jule::Ptr<_1c97746ee_TypeKind>& _109243_elem) {
	{
		
		if ((_109243_elem == nullptr)) {
			_case_begin_1cc4e6e96:;
			{
				return nullptr;
			}
		}
		else if (((_1c977725c_arr(_109243_elem.ptr()) != nullptr) && _1c977725c_arr(_109243_elem.ptr()).get()._field_auto)) {
			_case_begin_1cc4e701d:;
			{
				_1c9782d39_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return jule::new_ptr<_1c97809c4_Ptr>();
			}
		}
		_match_end_1cc4e6d86:;
	};
	return jule::new_ptr<_1c97809c4_Ptr>(_1c97809c4_Ptr{._field_elem=_109243_elem});
}



inline jule::Ptr<_1c97809c4_Ptr> _1c978727d_build_ptr(_1c9782663_TypeChecker* _self_, jule::Ptr<_1e436404e_PtrTypeDecl> _110732_decl) {
	jule::Bool _110813_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_110813_not_plain;
	});;
	jule::Ptr<_1c97746ee_TypeKind> _111217_elem = nullptr;;
	if ((!(_1e4364428_is_unsafe(_110732_decl.ptr())))) {
		_111217_elem=_1c978900a_check_decl(&(*_self_), _110732_decl.get()._field_elem);
		return _1c9786e70_build_ptr_from_type(&(*_self_), _111217_elem);
	};
	return jule::new_ptr<_1c97809c4_Ptr>(_1c97809c4_Ptr{._field_elem=_111217_elem});
}



inline jule::Ptr<_1c977cdbc_Slc> _1c978758b_build_slc(_1c9782663_TypeChecker* _self_, jule::Ptr<_1e43638de_SlcTypeDecl> _112432_decl) {
	jule::Bool _112513_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_112513_not_plain;
	});;
	jule::Ptr<_1c97746ee_TypeKind> _112917_elem = _1c978900a_check_decl(&(*_self_), _112432_decl.get()._field_elem);;
	{
		
		if ((_112917_elem == nullptr)) {
			_case_begin_1cc4ecdd1:;
			{
				return nullptr;
			}
		}
		else if (((_1c977725c_arr(_112917_elem.ptr()) != nullptr) && _1c977725c_arr(_112917_elem.ptr()).get()._field_auto)) {
			_case_begin_1cc4ece58:;
			{
				_1c9782d39_push_err(&(*_self_), _112432_decl.get()._field_elem.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1cc4ecd26:;
	};
	return jule::new_ptr<_1c977cdbc_Slc>(_1c977cdbc_Slc{._field_elem=_112917_elem});
}



inline jule::Ptr<_1c9780067_Arr> _1c9787899_build_arr(_1c9782663_TypeChecker* _self_, jule::Ptr<_1e436479c_ArrTypeDecl> _114532_decl) {
	jule::Bool _114613_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_114613_not_plain;
	});;
	jule::I64 _115017_n = 0LL;;
	if ((!(_1e4364aee_auto_sized(_114532_decl.ptr())))) {
		jule::Ptr<_1c974abc0_Data> _115321_size = _1c9766647_eval_expr(_1e46b4b74_eval((*_self_)._field_s, (*_self_)._field_lookup), _114532_decl.get()._field_size);;
		if ((_115321_size == nullptr)) {
			return nullptr;
		};
		if ((!(_1c974b583_is_const(_115321_size.ptr())))) {
			_1c9782d39_push_err(&(*_self_), _114532_decl.get()._field_size.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((_1c97767ab_prim(_115321_size.get()._field_kind.ptr()) == nullptr) || (!(_1e4683d63_is_int(_1c97767ab_prim(_115321_size.get()._field_kind.ptr()).get()._field_kind))))) {
			_1c9782d39_push_err(&(*_self_), _114532_decl.get()._field_size.get()._field_token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>());
			return nullptr;
		};
		_115017_n=static_cast<jule::I64>(static_cast<jule::I64>(_1c968db24_as_i64(_115321_size.get()._field_constant.ptr())));
		if ((_115017_n < 0LL)) {
			_1c9782d39_push_err(&(*_self_), _114532_decl.get()._field_elem.get()._field_token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((_1e46773c8_BIT_SIZE != 64LL) && (static_cast<jule::F64>(_115017_n) > _1e467d8b8_max(jule::Str("int", 3))))) {
			_1c9782d39_push_err(&(*_self_), _114532_decl.get()._field_size.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	jule::Ptr<_1c97746ee_TypeKind> _117617_elem = _1c978900a_check_decl(&(*_self_), _114532_decl.get()._field_elem);;
	{
		
		if ((_117617_elem == nullptr)) {
			_case_begin_1cc507517:;
			{
				return nullptr;
			}
		}
		else if (((_1c977725c_arr(_117617_elem.ptr()) != nullptr) && _1c977725c_arr(_117617_elem.ptr()).get()._field_auto)) {
			_case_begin_1cc50757d:;
			{
				_1c9782d39_push_err(&(*_self_), _114532_decl.get()._field_elem.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1cc50733b:;
	};
	return jule::new_ptr<_1c9780067_Arr>(_1c9780067_Arr{._field_auto=_1e4364aee_auto_sized(_114532_decl.ptr()), ._field_n=_115017_n, ._field_elem=_117617_elem});
}



inline jule::Ptr<_1c977e473_Map> _1c9787ba7_build_map(_1c9782663_TypeChecker* _self_, jule::Ptr<_1e4364ea6_MapTypeDecl> _119432_decl) {
	jule::Bool _119513_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_119513_not_plain;
	});;
	jule::Ptr<_1c97746ee_TypeKind> _119917_key = _1c978900a_check_decl(&(*_self_), _119432_decl.get()._field_key);;
	if ((_119917_key == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1c97746ee_TypeKind> _120417_val = _1c978900a_check_decl(&(*_self_), _119432_decl.get()._field_val);;
	if ((_120417_val == nullptr)) {
		return nullptr;
	};
	if ((_1c9776ee8_enm(_120417_val.ptr()) != nullptr)) {
		_1c9782d39_push_err(&(*_self_), _119432_decl.get()._field_val.get()._field_token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1c977e473_Map>(_1c977e473_Map{._field_key=_119917_key, ._field_val=_120417_val});
}



inline jule::Ptr<_1c977d8b2_Tuple> _1c9787eb5_build_tuple(_1c9782663_TypeChecker* _self_, jule::Ptr<_1e4363c63_TupleTypeDecl> _121834_decl) {
	jule::Slice<jule::Ptr<_1c97746ee_TypeKind>> _121917_types = jule::Slice<jule::Ptr<_1c97746ee_TypeKind>>::alloc(0LL,_121834_decl.get()._field_types.len());;
	{
		auto &expr = _121834_decl.get()._field_types;
		auto it = expr.begin();
		_iter_begin_1cc50da5c:;
		if (it != expr.end()) {
			jule::Ptr<_1e436257a_TypeDecl> _122021_t = *it;
			{
				jule::Ptr<_1c97746ee_TypeKind> _122121_kind = _1c978900a_check_decl(&(*_self_), _122021_t);;
				if ((_122121_kind == nullptr)) {
					return nullptr;
				};
				_121917_types = jule::alloc_for_append(_121917_types,1);_121917_types.__push(_122121_kind);;
			}
			_iter_next_1cc50da5c:;
			++it;
			goto _iter_begin_1cc50da5c;
		}
		_iter_end_1cc50da5c:;
	};
	return jule::new_ptr<_1c977d8b2_Tuple>(_1c977d8b2_Tuple{._field_types=_121917_types});
}



inline jule::Bool _1c97882c3_check_fn_types(_1c9782663_TypeChecker* _self_, jule::Ptr<_1e4383018_FnIns>& _123138_f) {
	jule::Bool _123151_ok = jule::Bool();
	{
		auto &expr = _123138_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1cc510e38:;
		if (it != expr.end()) {
			jule::Ptr<_1e438217c_ParamIns> _123221_p = *it;
			{
				_123221_p.get()._field_kind=_1c9788bec_build(&(*_self_), _123221_p.get()._field_decl.get()._field_kind.get()._field_decl.get()._field_kind);
				_123151_ok=(_123221_p.get()._field_kind != nullptr);
				if ((!(_123151_ok))) {
					_123151_ok = false;
					return _123151_ok;
				};
			}
			_iter_next_1cc510e38:;
			++it;
			goto _iter_begin_1cc510e38;
		}
		_iter_end_1cc510e38:;
	};
	if ((!(_1e43807c9_is_void(_123138_f.get()._field_decl.ptr())))) {
		_123138_f.get()._field_result=_1c9788bec_build(&(*_self_), _123138_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl.get()._field_kind);
		_123151_ok = (_123138_f.get()._field_result != nullptr);
		return _123151_ok;
	};
	_123151_ok = true;
	return _123151_ok;
}



inline jule::Ptr<_1e4383018_FnIns> _1c97885d1_build_fn(_1c9782663_TypeChecker* _self_, jule::Ptr<_1e4371ca4_FnDecl> _124831_decl) {
	if ((_124831_decl.get()._field_generics.len() > 0LL)) {
		_1c9782d39_push_err(&(*_self_), _124831_decl.get()._field_token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e4380576_Fn> _125417_f = _1e4388e20_build_fn(_124831_decl);;
	jule::Ptr<_1e4383018_FnIns> _125517_ins = _1e4381753_instance_force(_125417_f);;
	_125517_ins.get()._field_anon=true;
	jule::Bool _125813_ok = _1c97882c3_check_fn_types(&(*_self_), _125517_ins);;
	if ((!(_125813_ok))) {
		return nullptr;
	};
	return _125517_ins;
}



inline jule::Trait<_1c97742c0_Kind> _1c97888de_build_by_namespace(_1c9782663_TypeChecker* _self_, jule::Ptr<_1e4363317_NamespaceTypeDecl> _126641_decl) {
	jule::Str _126713_path = _1c978b02e_build_link_path_by_tokens(_126641_decl.get()._field_idents);;
	jule::Ptr<_1e46a4768_ImportInfo> _126817_imp = _1c978dc35_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1c978c508_select_package((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1e46a4768_ImportInfo>)>([=](jule::Ptr<_1e46a4768_ImportInfo> _126853_imp) mutable -> jule::Bool {
		if (((_126641_decl.get()._field_idents.len() == 1LL) && (_126853_imp.get()._field_alias == _126713_path))) {
			return true;
		};
		return ((_126853_imp.get()._field_link_path == _126713_path) && _1e46a712d_is_accessible_via_selection(_126853_imp.ptr()));
	}));;
	if (((_126817_imp == nullptr) || (!(_1e46a6a89_is_lookupable(_126817_imp.ptr(), jule::Str("self", 4)))))) {
		_1c9782d39_push_err(&(*_self_), _126641_decl.get()._field_idents[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_126713_path)}));
		return nullptr;
	};
	_1c97831e1_disallow_builtin(&(*_self_));
	jule::Trait<_1c97742c0_Kind> _128117_kind = _1c9786238_get_def(&(*_self_), jule::Trait<_1c978dc35_Lookup>(_126817_imp, 1),_126641_decl.get()._field_kind);;
	_1c9783015_allow_builtin(&(*_self_));
	return _128117_kind;
}



inline jule::Ptr<_1c97746ee_TypeKind> _1c9788bec_build(_1c9782663_TypeChecker* _self_, jule::Any& _128729_decl_kind) {
	jule::Trait<_1c97742c0_Kind> _128817_kind = nullptr;;
	{
		auto &_match_expr{ _128729_decl_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e4362b0d_IdentTypeDecl>>()) {
			_case_begin_1cc51bd67:;
			{
				jule::Trait<_1c97742c0_Kind> _129121_t = _1c9786546_build_ident(&(*_self_), _128729_decl_kind.operator jule::Ptr<_1e4362b0d_IdentTypeDecl>());;
				if ((_129121_t != nullptr)) {
					_128817_kind=_129121_t;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4363603_SptrTypeDecl>>()) {
			_case_begin_1cc51cc36:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1c977c460_Sptr> _129721_t = _1c9786b62_build_sptr(&(*_self_), _128729_decl_kind.operator jule::Ptr<_1e4363603_SptrTypeDecl>());;
				if ((_129721_t != nullptr)) {
					_128817_kind=jule::Trait<_1c97742c0_Kind>(_129721_t, 6);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e436404e_PtrTypeDecl>>()) {
			_case_begin_1cc51cc9c:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1c97809c4_Ptr> _130321_t = _1c978727d_build_ptr(&(*_self_), _128729_decl_kind.operator jule::Ptr<_1e436404e_PtrTypeDecl>());;
				if ((_130321_t != nullptr)) {
					_128817_kind=jule::Trait<_1c97742c0_Kind>(_130321_t, 11);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e43638de_SlcTypeDecl>>()) {
			_case_begin_1cc51ce23:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1c977cdbc_Slc> _130921_t = _1c978758b_build_slc(&(*_self_), _128729_decl_kind.operator jule::Ptr<_1e43638de_SlcTypeDecl>());;
				if ((_130921_t != nullptr)) {
					_128817_kind=jule::Trait<_1c97742c0_Kind>(_130921_t, 7);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e436479c_ArrTypeDecl>>()) {
			_case_begin_1cc51ce89:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1c9780067_Arr> _131521_t = _1c9787899_build_arr(&(*_self_), _128729_decl_kind.operator jule::Ptr<_1e436479c_ArrTypeDecl>());;
				if ((_131521_t != nullptr)) {
					_128817_kind=jule::Trait<_1c97742c0_Kind>(_131521_t, 10);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4364ea6_MapTypeDecl>>()) {
			_case_begin_1cc51c31d:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1c977e473_Map> _132121_t = _1c9787ba7_build_map(&(*_self_), _128729_decl_kind.operator jule::Ptr<_1e4364ea6_MapTypeDecl>());;
				if ((_132121_t != nullptr)) {
					_128817_kind=jule::Trait<_1c97742c0_Kind>(_132121_t, 9);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4363c63_TupleTypeDecl>>()) {
			_case_begin_1cc51c384:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1c977d8b2_Tuple> _132721_t = _1c9787eb5_build_tuple(&(*_self_), _128729_decl_kind.operator jule::Ptr<_1e4363c63_TupleTypeDecl>());;
				if ((_132721_t != nullptr)) {
					_128817_kind=jule::Trait<_1c97742c0_Kind>(_132721_t, 8);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4371ca4_FnDecl>>()) {
			_case_begin_1cc51c40b:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1e4383018_FnIns> _133321_t = _1c97885d1_build_fn(&(*_self_), _128729_decl_kind.operator jule::Ptr<_1e4371ca4_FnDecl>());;
				if ((_133321_t != nullptr)) {
					_128817_kind=jule::Trait<_1c97742c0_Kind>(_133321_t, 1);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4363317_NamespaceTypeDecl>>()) {
			_case_begin_1cc51d011:;
			{
				(*_self_)._field_inscatch=true;
				jule::Trait<_1c97742c0_Kind> _133921_t = _1c97888de_build_by_namespace(&(*_self_), _128729_decl_kind.operator jule::Ptr<_1e4363317_NamespaceTypeDecl>());;
				if ((_133921_t != nullptr)) {
					_128817_kind=_133921_t;
				};
			}
		}
		else {
			_case_begin_1cc51c1a8:;
			{
				_1c9782d39_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1cc51c153:;
	};
	if ((_128817_kind == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _128817_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c97746ee_TypeKind>>()) {
			_case_begin_1cc528a44:;
			{
				return _128817_kind.operator jule::Ptr<_1c97746ee_TypeKind>();
			}
		}
		else {
			_case_begin_1cc527e1c:;
			{
				return jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=_128817_kind});
			}
		}
		_match_end_1cc527cda:;
	};
}



inline jule::Ptr<_1c97746ee_TypeKind> _1c978900a_check_decl(_1c9782663_TypeChecker* _self_, jule::Ptr<_1e436257a_TypeDecl>& _136034_decl) {
	jule::Ptr<_20cd9e6ec_Token> _136217_error_token = (*_self_)._field_error_token;;
	(*_self_)._field_error_token=_136034_decl.get()._field_token;
	jule::Ptr<_1c97746ee_TypeKind> _136517_kind = _1c9788bec_build(&(*_self_), _136034_decl.get()._field_kind);;
	(*_self_)._field_error_token=_136217_error_token;
	return _136517_kind;
}



inline void _1c9789280_check(_1c9782663_TypeChecker* _self_, jule::Ptr<_1c977858d_TypeSymbol>& _137129_t) {
	if ((_137129_t.get()._field_decl == nullptr)) {
		return;;
	};
	jule::Ptr<_1c97746ee_TypeKind> _137517_kind = _1c978900a_check_decl(&(*_self_), _137129_t.get()._field_decl);;
	if ((_137517_kind == nullptr)) {
		_1c9778b65_remove_kind(_137129_t.ptr());
		return;;
	};
	_137129_t.get()._field_kind=_137517_kind;
}







std::ostream &operator<<(std::ostream &_Stream, _1c9782663_TypeChecker _Src) {
	_Stream << "TypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "ignore_generics:" << _Src._field_ignore_generics << ", ";
	_Stream << "use_generics:" << _Src._field_use_generics << ", ";
	_Stream << "not_plain:" << _Src._field_not_plain << ", ";
	_Stream << "dis_builtin:" << _Src._field_dis_builtin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "owner_alias:" << _Src._field_owner_alias << ", ";
	_Stream << "banned_generics:" << _Src._field_banned_generics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1c97898ce_exist(jule::Str& _138722_ident, jule::Any& _138735_k) {
	{
		auto &_match_expr{ _138735_k };
		
		if (_match_expr.type_is<jule::Ptr<_1e4362b0d_IdentTypeDecl>>()) {
			_case_begin_1cc52c31c:;
			{
				return (_138735_k.operator jule::Ptr<_1e4362b0d_IdentTypeDecl>().get()._field_ident == _138722_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4363603_SptrTypeDecl>>()) {
			_case_begin_1cc52c62a:;
			{
				jule::Ptr<_1e4363603_SptrTypeDecl> _139217_sptr = _138735_k.operator jule::Ptr<_1e4363603_SptrTypeDecl>();;
				return static__1c97898ce_exist(_138722_ident,_139217_sptr.get()._field_elem.get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e436404e_PtrTypeDecl>>()) {
			_case_begin_1cc52c691:;
			{
				jule::Ptr<_1e436404e_PtrTypeDecl> _139517_ptr = _138735_k.operator jule::Ptr<_1e436404e_PtrTypeDecl>();;
				return static__1c97898ce_exist(_138722_ident,_139517_ptr.get()._field_elem.get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e43638de_SlcTypeDecl>>()) {
			_case_begin_1cc52c707:;
			{
				jule::Ptr<_1e43638de_SlcTypeDecl> _139817_slc = _138735_k.operator jule::Ptr<_1e43638de_SlcTypeDecl>();;
				return static__1c97898ce_exist(_138722_ident,_139817_slc.get()._field_elem.get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e436479c_ArrTypeDecl>>()) {
			_case_begin_1cc52c76d:;
			{
				jule::Ptr<_1e436479c_ArrTypeDecl> _140117_arr = _138735_k.operator jule::Ptr<_1e436479c_ArrTypeDecl>();;
				return static__1c97898ce_exist(_138722_ident,_140117_arr.get()._field_elem.get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4364ea6_MapTypeDecl>>()) {
			_case_begin_1cc52c905:;
			{
				jule::Ptr<_1e4364ea6_MapTypeDecl> _140417_map = _138735_k.operator jule::Ptr<_1e4364ea6_MapTypeDecl>();;
				return (static__1c97898ce_exist(_138722_ident,_140417_map.get()._field_key.get()._field_kind) || static__1c97898ce_exist(_138722_ident,_140417_map.get()._field_val.get()._field_kind));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4371ca4_FnDecl>>()) {
			_case_begin_1cc52c96b:;
			{
				jule::Ptr<_1e4371ca4_FnDecl> _140817_f = _138735_k.operator jule::Ptr<_1e4371ca4_FnDecl>();;
				{
					auto &expr = _140817_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_1cc53319c:;
					if (it != expr.end()) {
						jule::Ptr<_1e4370984_ParamDecl> &_140920_p = *it;
						{
							if (_1e4370ce7_is_self(_140920_p.ptr())) {
								goto _iter_next_1cc53319c;
							};
							if (static__1c97898ce_exist(_138722_ident,_140920_p.get()._field_kind.get()._field_kind)) {
								return true;
							};
						}
						_iter_next_1cc53319c:;
						++it;
						goto _iter_begin_1cc53319c;
					}
					_iter_end_1cc53319c:;
				};
				if ((_140817_f.get()._field_result != nullptr)) {
					return static__1c97898ce_exist(_138722_ident,_140817_f.get()._field_result.get()._field_kind.get()._field_kind);
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4363c63_TupleTypeDecl>>()) {
			_case_begin_1cc52c9d2:;
			{
				jule::Ptr<_1e4363c63_TupleTypeDecl> _142217_tup = _138735_k.operator jule::Ptr<_1e4363c63_TupleTypeDecl>();;
				{
					auto &expr = _142217_tup.get()._field_types;
					auto it = expr.begin();
					_iter_begin_1cc535446:;
					if (it != expr.end()) {
						jule::Ptr<_1e436257a_TypeDecl> &_142320_t = *it;
						{
							if (static__1c97898ce_exist(_138722_ident,_142320_t.get()._field_kind)) {
								return true;
							};
						}
						_iter_next_1cc535446:;
						++it;
						goto _iter_begin_1cc535446;
					}
					_iter_end_1cc535446:;
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4363317_NamespaceTypeDecl>>()) {
			_case_begin_1cc52ca48:;
			{
				jule::Ptr<_1e4363317_NamespaceTypeDecl> _143017_ns = _138735_k.operator jule::Ptr<_1e4363317_NamespaceTypeDecl>();;
				return (_143017_ns.get()._field_kind.get()._field_ident == _138722_ident);
			}
		}
		else {
			_case_begin_1cc52c4c6:;
			{
				return false;
			}
		}
		_match_end_1cc52c471:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c97894a0_IdentTypeLookup _Src) {
	_Stream << "IdentTypeLookup{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c9c90214_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c9cd7547_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1c9cd8504_stop(_1c9cd7d72_ScopeParser* _self_) {
	(*_self_)._field_pos=-1LL;
}



inline jule::Bool _1c9cd8768_stopped(_1c9cd7d72_ScopeParser* _self_) {
	return ((*_self_)._field_pos == -1LL);
}



inline jule::Bool _1c9cd89cc_finished(_1c9cd7d72_ScopeParser* _self_) {
	return ((*_self_)._field_pos >= (*_self_)._field_stmts.len());
}



inline jule::Bool _1c9cd8c41_is_last_st(_1c9cd7d72_ScopeParser* _self_) {
	return (((*_self_)._field_pos + 1LL) >= (*_self_)._field_stmts.len());
}



inline void _1c9cd9060_push_err(_1c9cd7d72_ScopeParser* _self_, jule::Ptr<_20cd9e6ec_Token> _18927_token, jule::Str _18942_fmt) {
	_1c9d04e5a_push_err((*_self_)._field_p.ptr(), _18927_token,_18942_fmt,jule::Slice<jule::Any>());
}



inline void _1c9cd937e_push_suggestion(_1c9cd7d72_ScopeParser* _self_, jule::Str _19434_fmt, jule::Slice<jule::Any> _19447_args) {
	_1c9d05279_push_suggestion((*_self_)._field_p.ptr(), _19434_fmt,jule::Any(_19447_args));
}



inline void _1c9cd9604_insert_as_next(_1c9cd7d72_ScopeParser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _19838_tokens) {
	(*_self_)._field_stmts=jule::append((*_self_)._field_stmts.slice(0LL,((*_self_)._field_pos + 1LL)),(*_self_)._field_stmts.slice((*_self_)._field_pos));
	(*_self_)._field_stmts[((*_self_)._field_pos + 1LL)]=jule::new_ptr<_1c9cd7547_Stmt>(_1c9cd7547_Stmt{._field_tokens=_19838_tokens, });
}



inline jule::Ptr<_1c9cd7547_Stmt> _1c9cd9868_next(_1c9cd7d72_ScopeParser* _self_) {
	((*_self_)._field_pos)++;
	return (*_self_)._field_stmts[(*_self_)._field_pos];
}



inline jule::Ptr<_1e43702ad_ScopeTree> _1c9cd9c20_build_scope(_1c9cd7d72_ScopeParser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _20835_tokens, jule::Ptr<_20cd9e6ec_Token> _20857_end) {
	jule::Ptr<_1e43702ad_ScopeTree> _20917_s = _1c9cd6425_new_scope();;
	_20917_s.get()._field_parent=(*_self_)._field_s;
	_20917_s.get()._field_end=_20857_end;
	_1c9cd7d72_ScopeParser _21217_ssp = _1c9cd7d72_ScopeParser{._field_p=(*_self_)._field_p, };;
	_1c9ce3894_build(&_21217_ssp, _20835_tokens,_20917_s);
	return _20917_s;
}



inline jule::Any _1c9cda02d_build_var_st(_1c9cd7d72_ScopeParser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _21936_tokens) {
	jule::Ptr<_1e4372c83_VarDecl> _22017_v = _1c9d079c9_build_var((*_self_)._field_p, _21936_tokens);;
	_22017_v.get()._field_scope=(*_self_)._field_s;
	return jule::Any(_22017_v);
}



inline jule::Any _1c9cda33b_build_ret_st(_1c9cd7d72_ScopeParser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _22535_tokens) {
	jule::Ptr<_1e437313a_RetSt> _22617_st = jule::new_ptr<_1e437313a_RetSt>(_1e437313a_RetSt{._field_token=_22535_tokens[0LL], });;
	if ((_22535_tokens.len() > 1LL)) {
		_22535_tokens=_22535_tokens.slice(1LL);
		_22617_st.get()._field_expr=_1c9d05587_build_expr((*_self_)._field_p, _22535_tokens);
	};
	return jule::Any(_22617_st);
}



inline jule::Any _1c9cda649_build_while_next_iter(_1c9cd7d72_ScopeParser* _self_, jule::Ptr<_1c9cd7547_Stmt>& _23645_s) {
	jule::Ptr<_1e43736ac_Iter> _23717_it = jule::new_ptr<_1e43736ac_Iter>(_1e43736ac_Iter{._field_token=_23645_s.get()._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _24017_tokens = _23645_s.get()._field_tokens.slice(1LL);;
	jule::Ptr<_1e4373e82_WhileKind> _24117_kind = jule::new_ptr<_1e4373e82_WhileKind>(_1e4373e82_WhileKind{});;
	if ((_24017_tokens.len() > 0LL)) {
		_24117_kind.get()._field_expr=_1c9d05587_build_expr((*_self_)._field_p, _24017_tokens);
	};
	if (_1c9cd8c41_is_last_st(&(*_self_))) {
		_1c9cd9060_push_err(&(*_self_), _23717_it.get()._field_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	_24017_tokens=_1c9cd9868_next(&(*_self_)).get()._field_tokens;
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _25317_st_tokens = _1c9ce4d90_get_block_expr(_24017_tokens);;
	if ((_25317_st_tokens.len() > 0LL)) {
		jule::Ptr<_1c9cd7547_Stmt> _25521_stmt = jule::new_ptr<_1c9cd7547_Stmt>(_1c9cd7547_Stmt{._field_tokens=_25317_st_tokens, ._field_terminated=_23645_s.get()._field_terminated});;
		_24117_kind.get()._field_next_token=_25317_st_tokens[0LL];
		_24117_kind.get()._field_next=jule::Any(_1c9ce3575_build_st(&(*_self_), _25521_stmt));
	};
	jule::I64 _26317_i = _25317_st_tokens.len();;
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _26417_block_tokens = _1c9d02b17_range(_26317_i,jule::Str("{", 1),jule::Str("}", 1),_24017_tokens);;
	if ((_26417_block_tokens == nullptr)) {
		_1c9cd8504_stop(&(*_self_));
		_1c9cd9060_push_err(&(*_self_), _23717_it.get()._field_token,jule::Str("body is not exist", 17));
		_1c9cd937e_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_26317_i < _24017_tokens.len())) {
		_1c9cd9060_push_err(&(*_self_), _24017_tokens[_26317_i],jule::Str("invalid syntax", 14));
	};
	_23717_it.get()._field_scope=_1c9cd9c20_build_scope(&(*_self_), _26417_block_tokens,_24017_tokens[(_26317_i - 1LL)]);
	_23717_it.get()._field_kind=jule::Any(_24117_kind);
	return jule::Any(_23717_it);
}



inline jule::Ptr<_1e4373e82_WhileKind> _1c9cda957_build_while_iter_kind(_1c9cd7d72_ScopeParser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _28145_tokens) {
	return jule::new_ptr<_1e4373e82_WhileKind>(_1e4373e82_WhileKind{._field_expr=_1c9d05587_build_expr((*_self_)._field_p, _28145_tokens), });
}



inline jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>> _1c9cdac87_get_range_kind_keys_tokens(_1c9cd7d72_ScopeParser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _28750_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>> _28818_vars;;
	jule::Slice<_20ca8ec5b_Log> _28824_errs;;
	std::tie(_28818_vars,_28824_errs) = _1c9d032dd_parts(_28750_toks,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_28824_errs);
	return _28818_vars;
}



inline jule::Ptr<_1e4372c83_VarDecl> _1c9cdb0a6_build_range_kind_key(_1c9cd7d72_ScopeParser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _29344_tokens) {
	if ((_29344_tokens.len() == 0LL)) {
		return nullptr;
	};
	jule::Ptr<_1e4372c83_VarDecl> _29717_key = jule::new_ptr<_1e4372c83_VarDecl>(_1e4372c83_VarDecl{._field_token=_29344_tokens[0LL], });;
	if ((_29717_key.get()._field_token.get()._field_id == static_cast<jule::U64>(36LLU))) {
		_29717_key.get()._field_mutable=true;
		if ((_29344_tokens.len() == 1LL)) {
			_1c9cd9060_push_err(&(*_self_), _29717_key.get()._field_token,jule::Str("invalid syntax", 14));
		};
		_29717_key.get()._field_token=_29344_tokens[1LL];
	} else if ((_29344_tokens.len() > 1LL)) {
		_1c9cd9060_push_err(&(*_self_), _29344_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	if ((_29717_key.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1c9cd9060_push_err(&(*_self_), _29717_key.get()._field_token,jule::Str("invalid syntax", 14));
		_1c9cd937e_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	_29717_key.get()._field_ident=_29717_key.get()._field_token.get()._field_kind;
	return _29717_key;
}



inline jule::Slice<jule::Ptr<_1e4372c83_VarDecl>> _1c9cdb3b4_build_range_kind_keys(_1c9cd7d72_ScopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>>& _31845_parts) {
	jule::Slice<jule::Ptr<_1e4372c83_VarDecl>> _31917_keys = nullptr;;
	{
		auto &expr = _31845_parts;
		auto it = expr.begin();
		_iter_begin_1cbbad570:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _32021_tokens = *it;
			{
				_31917_keys = jule::alloc_for_append(_31917_keys,1);_31917_keys.__push(_1c9cdb0a6_build_range_kind_key(&(*_self_), _32021_tokens));;
			}
			_iter_next_1cbbad570:;
			++it;
			goto _iter_begin_1cbbad570;
		}
		_iter_end_1cbbad570:;
	};
	return _31917_keys;
}



inline void _1c9cdb705_setup_range_kind_keys_plain(_1c9cd7d72_ScopeParser* _self_, jule::Ptr<_1e4374823_RangeKind>& _32651_rng, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _32673_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>> _32717_key_tokens = _1c9cdac87_get_range_kind_keys_tokens(&(*_self_), _32673_tokens);;
	if ((_32717_key_tokens.len() == 0LL)) {
		return;;
	};
	if ((_32717_key_tokens.len() > 2LL)) {
		_1c9cd9060_push_err(&(*_self_), _32651_rng.get()._field_in_token,jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1e4372c83_VarDecl>> _33417_keys = _1c9cdb3b4_build_range_kind_keys(&(*_self_), _32717_key_tokens);;
	_32651_rng.get()._field_key_a=_33417_keys[0LL];
	if ((_33417_keys.len() > 1LL)) {
		_32651_rng.get()._field_key_b=_33417_keys[1LL];
	};
}



inline void _1c9cdba57_setup_range_kind_keys_explicit(_1c9cd7d72_ScopeParser* _self_, jule::Ptr<_1e4374823_RangeKind>& _34154_rng, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _34176_tokens) {
	jule::I64 _34217_i = 0LL;;
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _34317_rang = _1c9d02b17_range(_34217_i,jule::Str("(", 1),jule::Str(")", 1),_34176_tokens);;
	if ((_34217_i < _34176_tokens.len())) {
		_1c9cd9060_push_err(&(*_self_), _34154_rng.get()._field_in_token,jule::Str("invalid syntax", 14));
	};
	_1c9cdb705_setup_range_kind_keys_plain(&(*_self_), _34154_rng,_34317_rang);
}



inline void _1c9cdbd87_setup_range_kind_keys(_1c9cd7d72_ScopeParser* _self_, jule::Ptr<_1e4374823_RangeKind>& _35045_rng, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _35067_tokens) {
	if ((_35067_tokens[0LL].get()._field_id == static_cast<jule::U64>(3LLU))) {
		if ((_35067_tokens[0LL].get()._field_kind != jule::Str("(", 1))) {
			_1c9cd9060_push_err(&(*_self_), _35067_tokens[0LL],jule::Str("invalid syntax", 14));
			return;;
		};
		_1c9cdba57_setup_range_kind_keys_explicit(&(*_self_), _35045_rng,_35067_tokens);
		return;;
	};
	_1c9cdb705_setup_range_kind_keys_plain(&(*_self_), _35045_rng,_35067_tokens);
}



inline jule::Ptr<_1e4374823_RangeKind> _1c9cdc2d8_build_range_iter_kind(_1c9cd7d72_ScopeParser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _36245_var_tokens, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _36314_expr_tokens, jule::Ptr<_20cd9e6ec_Token>& _36342_in_token) {
	jule::Ptr<_1e4374823_RangeKind> _36417_rng = jule::new_ptr<_1e4374823_RangeKind>(_1e4374823_RangeKind{._field_in_token=_36342_in_token, });;
	if ((_36314_expr_tokens.len() == 0LL)) {
		_1c9cd9060_push_err(&(*_self_), _36417_rng.get()._field_in_token,jule::Str("expression missing", 18));
		return _36417_rng;
	};
	_36417_rng.get()._field_expr=_1c9d05587_build_expr((*_self_)._field_p, _36314_expr_tokens);
	if ((_36245_var_tokens.len() > 0LL)) {
		_1c9cdbd87_setup_range_kind_keys(&(*_self_), _36417_rng,_36245_var_tokens);
	};
	return _36417_rng;
}



inline jule::Any _1c9cdc690_build_common_iter_kind(_1c9cd7d72_ScopeParser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _37846_tokens, jule::Ptr<_20cd9e6ec_Token>& _37865_err_tok) {
	jule::I64 _37917_brace_n = 0LL;;
	{
		auto &expr = _37846_tokens;
		auto it = expr.begin();
		_iter_begin_1cbbbc1b6:;
		if (it != expr.end()) {
			jule::I64 _38014_i = it - expr.begin();
			jule::Ptr<_20cd9e6ec_Token> _38021_tok = *it;
			{
				if ((_38021_tok.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _38021_tok.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1cbbbd5c4:;
							{
								(_37917_brace_n)++;
								goto _iter_next_1cbbbc1b6;
							}
						}
						else {
							_case_begin_1cbbbd2b6:;
							{
								(_37917_brace_n)--;
							}
						}
						_match_end_1cbbbd20b:;
					};
				};
				if ((_37917_brace_n != 0LL)) {
					goto _iter_next_1cbbbc1b6;
				};
				{
					auto &_match_expr{ _38021_tok.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(15LLU)) {
						_case_begin_1cbbbd7a0:;
						{
							jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _39725_decl_tokens = _37846_tokens.slice(0LL,_38014_i);;
							jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _39825_expr_tokens = _37846_tokens.slice((_38014_i + 1LL));;
							return jule::Any(_1c9cdc2d8_build_range_iter_kind(&(*_self_), _39725_decl_tokens,_39825_expr_tokens,_38021_tok));
						}
					}
					_match_end_1cbbbe075:;
				};
			}
			_iter_next_1cbbbc1b6:;
			++it;
			_38014_i++;
			goto _iter_begin_1cbbbc1b6;
		}
		_iter_end_1cbbbc1b6:;
	};
	return jule::Any(_1c9cda957_build_while_iter_kind(&(*_self_), _37846_tokens));
}



inline jule::Any _1c9cdc99d_build_common_iter(_1c9cd7d72_ScopeParser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _40540_tokens) {
	jule::Ptr<_1e43736ac_Iter> _40617_it = jule::new_ptr<_1e43736ac_Iter>(_1e43736ac_Iter{._field_token=_40540_tokens[0LL], });;
	_40540_tokens=_40540_tokens.slice(1LL);
	if ((_40540_tokens.len() == 0LL)) {
		_1c9cd8504_stop(&(*_self_));
		_1c9cd9060_push_err(&(*_self_), _40617_it.get()._field_token,jule::Str("body is not exist", 17));
		_1c9cd937e_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _41617_expr_tokens = _1c9ce4d90_get_block_expr(_40540_tokens);;
	if ((_41617_expr_tokens.len() > 0LL)) {
		_40617_it.get()._field_kind=jule::Any(_1c9cdc690_build_common_iter_kind(&(*_self_), _41617_expr_tokens,_40617_it.get()._field_token));
	};
	jule::I64 _42017_i = _41617_expr_tokens.len();;
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _42117_scope_tokens = _1c9d02b17_range(_42017_i,jule::Str("{", 1),jule::Str("}", 1),_40540_tokens);;
	if ((_42117_scope_tokens == nullptr)) {
		_1c9cd8504_stop(&(*_self_));
		_1c9cd9060_push_err(&(*_self_), _40617_it.get()._field_token,jule::Str("body is not exist", 17));
		_1c9cd937e_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_42017_i < _40540_tokens.len())) {
		_1c9cd9060_push_err(&(*_self_), _40540_tokens[_42017_i],jule::Str("invalid syntax", 14));
	};
	_40617_it.get()._field_scope=_1c9cd9c20_build_scope(&(*_self_), _42117_scope_tokens,_40540_tokens[(_42017_i - 1LL)]);
	return jule::Any(_40617_it);
}



inline jule::Any _1c9cdccab_build_iter_st(_1c9cd7d72_ScopeParser* _self_, jule::Ptr<_1c9cd7547_Stmt>& _43537_st) {
	if (_43537_st.get()._field_terminated) {
		return jule::Any(_1c9cda649_build_while_next_iter(&(*_self_), _43537_st));
	};
	return jule::Any(_1c9cdc99d_build_common_iter(&(*_self_), _43537_st.get()._field_tokens));
}



inline jule::Any _1c9cdd0b9_build_break_st(_1c9cd7d72_ScopeParser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _44238_tokens) {
	jule::Ptr<_1e4374bca_BreakSt> _44317_brk = jule::new_ptr<_1e4374bca_BreakSt>(_1e4374bca_BreakSt{._field_token=_44238_tokens[0LL], });;
	if ((_44238_tokens.len() > 1LL)) {
		if ((_44238_tokens[1LL].get()._field_id != static_cast<jule::U64>(2LLU))) {
			_1c9cd9060_push_err(&(*_self_), _44238_tokens[1LL],jule::Str("invalid syntax", 14));
			_1c9cd937e_push_suggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_44317_brk.get()._field_label=_44238_tokens[1LL];
			if ((_44238_tokens.len() > 2LL)) {
				_1c9cd9060_push_err(&(*_self_), _44238_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return jule::Any(_44317_brk);
}



inline jule::Any _1c9cdd3c7_build_cont_st(_1c9cd7d72_ScopeParser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _46037_tokens) {
	jule::Ptr<_1e4375082_ContSt> _46117_cont = jule::new_ptr<_1e4375082_ContSt>(_1e4375082_ContSt{._field_token=_46037_tokens[0LL], });;
	if ((_46037_tokens.len() > 1LL)) {
		if ((_46037_tokens[1LL].get()._field_id != static_cast<jule::U64>(2LLU))) {
			_1c9cd9060_push_err(&(*_self_), _46037_tokens[1LL],jule::Str("invalid syntax", 14));
			_1c9cd937e_push_suggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_46117_cont.get()._field_label=_46037_tokens[1LL];
			if ((_46037_tokens.len() > 2LL)) {
				_1c9cd9060_push_err(&(*_self_), _46037_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return jule::Any(_46117_cont);
}



inline jule::Ptr<_1e4375505_If> _1c9cdd6d5_build_if(_1c9cd7d72_ScopeParser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _47832_tokens) {
	jule::Ptr<_1e4375505_If> _47917_model = jule::new_ptr<_1e4375505_If>(_1e4375505_If{._field_token=_47832_tokens[0LL], });;
	_47832_tokens=_47832_tokens.slice(1LL);
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _48317_expr_tokens = _1c9ce4d90_get_block_expr(_47832_tokens);;
	jule::I64 _48417_i = 0LL;;
	if ((_48317_expr_tokens.len() == 0LL)) {
		_1c9cd9060_push_err(&(*_self_), _47917_model.get()._field_token,jule::Str("expression missing", 18));
	} else {
		_48417_i=static_cast<jule::I64>(_48317_expr_tokens.len());
	};
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _49017_scope_tokens = _1c9d02b17_range(_48417_i,jule::Str("{", 1),jule::Str("}", 1),_47832_tokens);;
	if ((_49017_scope_tokens == nullptr)) {
		_1c9cd8504_stop(&(*_self_));
		_1c9cd9060_push_err(&(*_self_), _47917_model.get()._field_token,jule::Str("body is not exist", 17));
		_1c9cd937e_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_20cd9e6ec_Token> _49717_end = _47832_tokens[(_48417_i - 1LL)];;
	if ((_48417_i < _47832_tokens.len())) {
		if ((_47832_tokens[_48417_i].get()._field_id == static_cast<jule::U64>(17LLU))) {
			_47832_tokens=_47832_tokens.slice(_48417_i);
		} else {
			_1c9cd9060_push_err(&(*_self_), _47832_tokens[_48417_i],jule::Str("invalid syntax", 14));
			_47832_tokens=nullptr;
		};
	};
	_47917_model.get()._field_expr=_1c9d05587_build_expr((*_self_)._field_p, _48317_expr_tokens);
	_47917_model.get()._field_scope=_1c9cd9c20_build_scope(&(*_self_), _49017_scope_tokens,_49717_end);
	return _47917_model;
}



inline jule::Ptr<_1e43758ac_Else> _1c9cdd9e3_build_else(_1c9cd7d72_ScopeParser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _51134_tokens) {
	jule::Ptr<_1e43758ac_Else> _51217_els = jule::new_ptr<_1e43758ac_Else>(_1e43758ac_Else{._field_token=_51134_tokens[0LL], });;
	_51134_tokens=_51134_tokens.slice(1LL);
	jule::I64 _51617_i = 0LL;;
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _51717_scope_tokens = _1c9d02b17_range(_51617_i,jule::Str("{", 1),jule::Str("}", 1),_51134_tokens);;
	if ((_51717_scope_tokens == nullptr)) {
		if ((_51617_i < _51134_tokens.len())) {
			_1c9cd9060_push_err(&(*_self_), _51217_els.get()._field_token,jule::Str("else's cannot have any expression", 33));
		} else {
			_1c9cd8504_stop(&(*_self_));
			_1c9cd9060_push_err(&(*_self_), _51217_els.get()._field_token,jule::Str("body is not exist", 17));
			_1c9cd937e_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		};
		return nullptr;
	};
	if ((_51617_i < _51134_tokens.len())) {
		_1c9cd9060_push_err(&(*_self_), _51134_tokens[_51617_i],jule::Str("invalid syntax", 14));
	};
	_51217_els.get()._field_scope=_1c9cd9c20_build_scope(&(*_self_), _51717_scope_tokens,_51134_tokens[(_51617_i - 1LL)]);
	return _51217_els;
}



inline jule::Any _1c9cddd01_build_if_else_chain(_1c9cd7d72_ScopeParser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _53542_tokens) {
	jule::Ptr<_1e4375d30_Conditional> _53617_chain = jule::new_ptr<_1e4375d30_Conditional>(_1e4375d30_Conditional{._field_head=_1c9cdd6d5_build_if(&(*_self_), _53542_tokens), });;
	if ((_53617_chain.get()._field_head == nullptr)) {
		return nullptr;
	};
	while ((_53542_tokens.len() != 0LL)) {
		{
			if ((_53542_tokens[0LL].get()._field_id != static_cast<jule::U64>(17LLU))) {
				goto _iter_end_1cb777c83;
			};
			if (((_53542_tokens.len() > 1LL) && (_53542_tokens[1LL].get()._field_id == static_cast<jule::U64>(16LLU)))) {
				_53542_tokens=_53542_tokens.slice(1LL);
				jule::Ptr<_1e4375505_If> _54825_elif = _1c9cdd6d5_build_if(&(*_self_), _53542_tokens);;
				_53617_chain.get()._field_tail = jule::alloc_for_append(_53617_chain.get()._field_tail,1);_53617_chain.get()._field_tail.__push(_54825_elif);;
				goto _iter_next_1cb777c83;
			};
			_53617_chain.get()._field_default=_1c9cdd9e3_build_else(&(*_self_), _53542_tokens);
			goto _iter_end_1cb777c83;
		}
	_iter_next_1cb777c83:;
	}
	_iter_end_1cb777c83:;;
	return jule::Any(_53617_chain);
}



inline jule::Any _1c9cde10e_build_co_call_st(_1c9cd7d72_ScopeParser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _55839_tokens) {
	jule::Ptr<_1e436721c_CoExpr> _55917_c = jule::new_ptr<_1e436721c_CoExpr>(_1e436721c_CoExpr{._field_token=_55839_tokens[0LL], });;
	_55839_tokens=_55839_tokens.slice(1LL);
	_55917_c.get()._field_expr=_1c9d05587_build_expr((*_self_)._field_p, _55839_tokens);
	return jule::Any(_55917_c);
}



inline jule::Any _1c9cde41c_build_goto_st(_1c9cd7d72_ScopeParser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _56737_tokens) {
	jule::Ptr<_1e436dc6d_GotoSt> _56817_gt = jule::new_ptr<_1e436dc6d_GotoSt>(_1e436dc6d_GotoSt{._field_token=_56737_tokens[0LL], });;
	if ((_56737_tokens.len() == 1LL)) {
		_1c9cd9060_push_err(&(*_self_), _56817_gt.get()._field_token,jule::Str("missing label identifier for goto statement", 43));
		return nullptr;
	} else if ((_56737_tokens.len() > 2LL)) {
		_1c9cd9060_push_err(&(*_self_), _56737_tokens[2LL],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_20cd9e6ec_Token> _57717_ident_token = _56737_tokens[1LL];;
	if ((_57717_ident_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1c9cd9060_push_err(&(*_self_), _57717_ident_token,jule::Str("invalid syntax", 14));
		_1c9cd937e_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return jule::Any(_56817_gt);
	};
	_56817_gt.get()._field_label=_57717_ident_token;
	return jule::Any(_56817_gt);
}



inline jule::Any _1c9cde72a_build_fall_st(_1c9cd7d72_ScopeParser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _58737_tokens) {
	jule::Ptr<_1e436e059_FallSt> _58817_fll = jule::new_ptr<_1e436e059_FallSt>(_1e436e059_FallSt{._field_token=_58737_tokens[0LL]});;
	if ((_58737_tokens.len() > 1LL)) {
		_1c9cd9060_push_err(&(*_self_), _58737_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	return jule::Any(_58817_fll);
}



inline jule::Any _1c9cdea38_build_type_alias_st(_1c9cd7d72_ScopeParser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _59743_tokens) {
	jule::Ptr<_1e4376506_TypeAliasDecl> _59817_tad = _1c9d06b82_build_type_alias_decl((*_self_)._field_p, _59743_tokens);;
	_59817_tad.get()._field_scope=(*_self_)._field_s;
	return jule::Any(_59817_tad);
}



inline void _1c9cdee9a_push_case_expr(_1c9cd7d72_ScopeParser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _60337_tokens, jule::Ptr<_20cd9e6ec_Token> _60359_token, jule::Bool _6049_type_match, jule::Slice<jule::Ptr<_1e43659e0_Expr>>& _60432_exprs) {
	if ((_60337_tokens.len() == 0LL)) {
		return;;
	};
	if (_6049_type_match) {
		jule::I64 _61021_i = 0LL;;
		jule::Ptr<_1e436257a_TypeDecl> _61122_t;;
		jule::Bool _61125_ok;;
		std::tie(_61122_t,_61125_ok) = _1c9d06874_build_type((*_self_)._field_p, _60337_tokens,(&(_61021_i)),true);
		if (_61125_ok) {
			_60432_exprs = jule::alloc_for_append(_60432_exprs,1);_60432_exprs.__push(jule::new_ptr<_1e43659e0_Expr>(_1e43659e0_Expr{._field_token=_60337_tokens[0LL], ._field_kind=jule::Any(_61122_t)}));;
			if ((_61021_i < _60337_tokens.len())) {
				_1c9cd9060_push_err(&(*_self_), _60337_tokens[_61021_i],jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	_60432_exprs = jule::alloc_for_append(_60432_exprs,1);_60432_exprs.__push(_1c9d05587_build_expr((*_self_)._field_p, _60337_tokens));;
}



inline jule::Slice<jule::Ptr<_1e43659e0_Expr>> _1c9ce0352_build_case_exprs(_1c9cd7d72_ScopeParser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _62640_tokens, jule::Bool _62658_type_match) {
	jule::Slice<jule::Ptr<_1e43659e0_Expr>> _62717_exprs = jule::Slice<jule::Ptr<_1e43659e0_Expr>>::alloc(0LL,1LL);;
	jule::I64 _62917_brace_n = 0LL;;
	jule::I64 _63017_j = 0LL;;
	{
		auto &expr = _62640_tokens;
		auto it = expr.begin();
		_iter_begin_1cb78c1e8:;
		if (it != expr.end()) {
			jule::I64 _63114_i = it - expr.begin();
			jule::Ptr<_20cd9e6ec_Token> _63121_tok = *it;
			{
				if ((_63121_tok.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _63121_tok.get()._field_kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_1cb78d54b:;
							{
								(_62917_brace_n)++;
							}
						}
						else {
							_case_begin_1cb78d23d:;
							{
								(_62917_brace_n)--;
							}
						}
						_match_end_1cb78d183:;
					};
					goto _iter_next_1cb78c1e8;
				} else if ((_62917_brace_n != 0LL)) {
					goto _iter_next_1cb78c1e8;
				};
				{
					
					if (((_63121_tok.get()._field_id == static_cast<jule::U64>(7LLU)) && (_63121_tok.get()._field_kind == jule::Str("|", 1)))) {
						_case_begin_1cb78d727:;
						{
							jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _64721_expr_tokens = _62640_tokens.slice(_63017_j,_63114_i);;
							if ((_64721_expr_tokens.len() == 0LL)) {
								_1c9cd9060_push_err(&(*_self_), _63121_tok,jule::Str("expression missing", 18));
							} else {
								_1c9cdee9a_push_case_expr(&(*_self_), _62640_tokens.slice(_63017_j,_63114_i),_63121_tok,_62658_type_match,_62717_exprs);
							};
							_63017_j=static_cast<jule::I64>((_63114_i + 1LL));
						}
					}
					else if ((_63121_tok.get()._field_id == static_cast<jule::U64>(11LLU))) {
						_case_begin_1cb78dea8:;
						{
							_1c9cdee9a_push_case_expr(&(*_self_), _62640_tokens.slice(_63017_j,_63114_i),_63121_tok,_62658_type_match,_62717_exprs);
							_62640_tokens=_62640_tokens.slice((_63114_i + 1LL));
							return _62717_exprs;
						}
					}
					_match_end_1cb78d9e1:;
				};
			}
			_iter_next_1cb78c1e8:;
			++it;
			_63114_i++;
			goto _iter_begin_1cb78c1e8;
		}
		_iter_end_1cb78c1e8:;
	};
	_1c9cd9060_push_err(&(*_self_), _62640_tokens[0LL],jule::Str("invalid syntax", 14));
	_62640_tokens=nullptr;
	return nullptr;
}



inline jule::Ptr<_1e43702ad_ScopeTree> _1c9ce0660_build_case_scope(_1c9cd7d72_ScopeParser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _66540_tokens) {
	jule::I64 _66617_n = 0LL;;
	for (;;) {
		{
			jule::I64 _66821_i = 0LL;;
			jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _66922_next;;
			std::tie(_66922_next,std::ignore) = _1c9cd724a_skip_st(_66821_i,_66540_tokens.slice(_66617_n));
			if ((_66922_next.len() == 0LL)) {
				goto _iter_end_1cb79383c;
			};
			jule::Ptr<_20cd9e6ec_Token> _67317_tok = _66922_next[0LL];;
			if (((_67317_tok.get()._field_id != static_cast<jule::U64>(7LLU)) || (_67317_tok.get()._field_kind != jule::Str("|", 1)))) {
				_66617_n+=_66821_i;
				goto _iter_next_1cb79383c;
			};
			jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _67821_scope_tokens = _66540_tokens.slice(0LL,_66617_n);;
			jule::Ptr<_1e43702ad_ScopeTree> _67921_scope = _1c9cd9c20_build_scope(&(*_self_), _67821_scope_tokens,_66540_tokens[_66617_n]);;
			_66540_tokens=_66540_tokens.slice(_66617_n);
			return _67921_scope;
		}
	_iter_next_1cb79383c:;
	}
	_iter_end_1cb79383c:;;
	jule::Ptr<_20cd9e6ec_Token> _68317_end = jule::Ptr<_20cd9e6ec_Token>();;
	if ((_66540_tokens.len() > 0LL)) {
		_68317_end=_66540_tokens[(_66540_tokens.len() - 1LL)];
	};
	jule::Ptr<_1e43702ad_ScopeTree> _68717_scope = _1c9cd9c20_build_scope(&(*_self_), _66540_tokens,_68317_end);;
	_66540_tokens=nullptr;
	return _68717_scope;
}



inline std::tuple<jule::Ptr<_1e4376979_Case>,jule::Bool> _1c9ce0a17_build_case(_1c9cd7d72_ScopeParser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _69234_tokens, jule::Bool _69252_type_match) {
	jule::Ptr<_1e4376979_Case> _69317_c = jule::new_ptr<_1e4376979_Case>(_1e4376979_Case{._field_token=_69234_tokens[0LL], });;
	_69234_tokens=_69234_tokens.slice(1LL);
	_69317_c.get()._field_exprs=_1c9ce0352_build_case_exprs(&(*_self_), _69234_tokens,_69252_type_match);
	_69317_c.get()._field_scope=_1c9ce0660_build_case_scope(&(*_self_), _69234_tokens);
	jule::Bool _69913_is_default = (_69317_c.get()._field_exprs.len() == 0LL);;
	return std::make_tuple(_69317_c,_69913_is_default);
}



inline std::tuple<jule::Slice<jule::Ptr<_1e4376979_Case>>,jule::Ptr<_1e43758ac_Else>> _1c9ce0dbe_build_cases(_1c9cd7d72_ScopeParser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _70334_tokens, jule::Bool _70352_type_match) {
	jule::Slice<jule::Ptr<_1e4376979_Case>> _70417_cases = nullptr;;
	jule::Ptr<_1e43758ac_Else> _70517_def = nullptr;;
	jule::Bool _70617_def_not_last = false;;
	while ((_70334_tokens.len() > 0LL)) {
		{
			jule::Ptr<_20cd9e6ec_Token> _70821_tok = _70334_tokens[0LL];;
			if (((_70821_tok.get()._field_id != static_cast<jule::U64>(7LLU)) || (_70821_tok.get()._field_kind != jule::Str("|", 1)))) {
				_1c9cd9060_push_err(&(*_self_), _70821_tok,jule::Str("invalid syntax", 14));
				goto _iter_end_1cb79cd1e;
			};
			jule::Ptr<_1e4376979_Case> _71322_c;;
			jule::Bool _71325_is_default;;
			std::tie(_71322_c,_71325_is_default) = _1c9ce0a17_build_case(&(*_self_), _70334_tokens,_70352_type_match);
			if (_71325_is_default) {
				_71322_c.get()._field_token=_70821_tok;
				if ((_70517_def == nullptr)) {
					_70517_def=jule::new_ptr<_1e43758ac_Else>(_1e43758ac_Else{._field_token=_71322_c.get()._field_token, ._field_scope=_71322_c.get()._field_scope});
				} else {
					_1c9cd9060_push_err(&(*_self_), _70821_tok,jule::Str("invalid syntax", 14));
				};
			} else {
				_70617_def_not_last=(_70617_def_not_last || (_70517_def != nullptr));
				_70417_cases = jule::alloc_for_append(_70417_cases,1);_70417_cases.__push(_71322_c);;
			};
		}
	_iter_next_1cb79cd1e:;
	}
	_iter_end_1cb79cd1e:;;
	if (_70617_def_not_last) {
		_1c9cd9060_push_err(&(*_self_), _70517_def.get()._field_token,jule::Str("default case should be last case", 32));
	};
	return std::make_tuple(_70417_cases,_70517_def);
}



inline jule::Ptr<_1e4377150_MatchCase> _1c9ce11cc_build_match_case(_1c9cd7d72_ScopeParser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _73739_tokens) {
	jule::Ptr<_1e4377150_MatchCase> _73817_m = jule::new_ptr<_1e4377150_MatchCase>(_1e4377150_MatchCase{._field_token=_73739_tokens[0LL], });;
	_73739_tokens=_73739_tokens.slice(1LL);
	if (((_73739_tokens.len() > 0LL) && (_73739_tokens[0LL].get()._field_id == static_cast<jule::U64>(10LLU)))) {
		_73817_m.get()._field_type_match=true;
		_73739_tokens=_73739_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _74817_expr_tokens = _1c9ce4d90_get_block_expr(_73739_tokens);;
	if ((_74817_expr_tokens.len() > 0LL)) {
		_73817_m.get()._field_expr=_1c9d05587_build_expr((*_self_)._field_p, _74817_expr_tokens);
	} else if (_73817_m.get()._field_type_match) {
		_1c9cd9060_push_err(&(*_self_), _73817_m.get()._field_token,jule::Str("expression missing", 18));
	};
	jule::I64 _75517_i = _74817_expr_tokens.len();;
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _75617_block_toks = _1c9d02b17_range(_75517_i,jule::Str("{", 1),jule::Str("}", 1),_73739_tokens);;
	if ((_75617_block_toks == nullptr)) {
		_1c9cd8504_stop(&(*_self_));
		_1c9cd9060_push_err(&(*_self_), _73817_m.get()._field_token,jule::Str("body is not exist", 17));
		_1c9cd937e_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((_75517_i < _73739_tokens.len())) {
		_1c9cd9060_push_err(&(*_self_), _73739_tokens[_75517_i],jule::Str("invalid syntax", 14));
	};
	_73817_m.get()._field_end=_73739_tokens[(_75517_i - 1LL)];
	std::tie(_73817_m.get()._field_cases,_73817_m.get()._field_default) = _1c9ce0dbe_build_cases(&(*_self_), _75617_block_toks,_73817_m.get()._field_type_match);
	return _73817_m;
}



inline jule::Ptr<_1e43702ad_ScopeTree> _1c9ce14da_build_scope_st(_1c9cd7d72_ScopeParser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _77037_tokens) {
	jule::Bool _77117_is_unsafe = false;;
	jule::Bool _77217_is_deferred = false;;
	jule::Ptr<_20cd9e6ec_Token> _77317_token = _77037_tokens[0LL];;
	if ((_77317_token.get()._field_id == static_cast<jule::U64>(35LLU))) {
		_77117_is_unsafe=true;
		_77037_tokens=_77037_tokens.slice(1LL);
		if ((_77037_tokens.len() == 0LL)) {
			_1c9cd9060_push_err(&(*_self_), _77317_token,jule::Str("invalid syntax", 14));
			return nullptr;
		};
		_77317_token=_77037_tokens[0LL];
		if ((_77317_token.get()._field_id == static_cast<jule::U64>(37LLU))) {
			_77217_is_deferred=true;
			_77037_tokens=_77037_tokens.slice(1LL);
			if ((_77037_tokens.len() == 0LL)) {
				_1c9cd9060_push_err(&(*_self_), _77317_token,jule::Str("invalid syntax", 14));
				return nullptr;
			};
		};
	} else if ((_77317_token.get()._field_id == static_cast<jule::U64>(37LLU))) {
		_77217_is_deferred=true;
		_77037_tokens=_77037_tokens.slice(1LL);
		if ((_77037_tokens.len() == 0LL)) {
			_1c9cd9060_push_err(&(*_self_), _77317_token,jule::Str("invalid syntax", 14));
			return nullptr;
		};
	};
	jule::I64 _79917_i = 0LL;;
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _80017_scope_tokens = _1c9d02b17_range(_79917_i,jule::Str("{", 1),jule::Str("}", 1),_77037_tokens);;
	if ((_80017_scope_tokens == nullptr)) {
		_1c9cd9060_push_err(&(*_self_), _77317_token,jule::Str("invalid syntax", 14));
		return nullptr;
	} else if ((_79917_i < _77037_tokens.len())) {
		_1c9cd9060_push_err(&(*_self_), _77037_tokens[_79917_i],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1e43702ad_ScopeTree> _80717_scope = _1c9cd9c20_build_scope(&(*_self_), _80017_scope_tokens,_77037_tokens[(_79917_i - 1LL)]);;
	_80717_scope.get()._field_unsafety=_77117_is_unsafe;
	_80717_scope.get()._field_deferred=_77217_is_deferred;
	return _80717_scope;
}



inline jule::Ptr<_1e436d8b6_LabelSt> _1c9ce17e8_build_label_st(_1c9cd7d72_ScopeParser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _81338_tokens) {
	jule::Ptr<_1e436d8b6_LabelSt> _81417_lbl = jule::new_ptr<_1e436d8b6_LabelSt>(_1e436d8b6_LabelSt{._field_token=_81338_tokens[0LL], ._field_ident=_81338_tokens[0LL].get()._field_kind});;
	if ((_81338_tokens.len() > 2LL)) {
		_81338_tokens=_81338_tokens.slice(2LL);
		_1c9cd9604_insert_as_next(&(*_self_), _81338_tokens);
	};
	return _81417_lbl;
}



inline std::tuple<jule::Any,jule::Bool> _1c9ce1b06_build_id_st(_1c9cd7d72_ScopeParser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _82835_tokens) {
	jule::Bool _82865_ok = jule::Bool();
	if ((_82835_tokens.len() == 1LL)) {
		return std::make_tuple(jule::Any(),_82865_ok);
	};
	jule::Ptr<_20cd9e6ec_Token> _83317_token = _82835_tokens[1LL];;
	{
		auto &_match_expr{ _83317_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1cb7b5d15:;
			{
				_82865_ok = true;
				return std::make_tuple(jule::Any(_1c9ce17e8_build_label_st(&(*_self_), _82835_tokens)),_82865_ok);
			}
		}
		_match_end_1cb7b68c6:;
	};
	return std::make_tuple(jule::Any(),_82865_ok);
}



inline jule::Ptr<_1c9d00ebc_AssignInfo> _1c9ce1e14_build_assign_info(_1c9cd7d72_ScopeParser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _84241_tokens) {
	jule::Ptr<_1c9d00ebc_AssignInfo> _84317_info = jule::new_ptr<_1c9d00ebc_AssignInfo>(_1c9d00ebc_AssignInfo{._field_ok=true});;
	jule::I64 _84617_brace_n = 0LL;;
	{
		auto &expr = _84241_tokens;
		auto it = expr.begin();
		_iter_begin_1cb7b8c2a:;
		if (it != expr.end()) {
			jule::I64 _84714_i = it - expr.begin();
			jule::Ptr<_20cd9e6ec_Token> _84721_token = *it;
			{
				if ((_84721_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _84721_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1cb7ba17c:;
							{
								(_84617_brace_n)++;
							}
						}
						else {
							_case_begin_1cb7b9d6e:;
							{
								(_84617_brace_n)--;
							}
						}
						_match_end_1cb7b9cb4:;
					};
				};
				{
					
					if ((_84617_brace_n > 0LL)) {
						_case_begin_1cb7ba5ab:;
						{
							goto _iter_next_1cb7b8c2a;
						}
					}
					else if ((_84721_token.get()._field_id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1cb7ba622:;
						{
							goto _iter_next_1cb7b8c2a;
						}
					}
					else if ((!(_20cda4207_is_assign_op(_84721_token.get()._field_kind)))) {
						_case_begin_1cb7ba688:;
						{
							goto _iter_next_1cb7b8c2a;
						}
					}
					_match_end_1cb7ba358:;
				};
				_84317_info.get()._field_l=_84241_tokens.slice(0LL,_84714_i);
				if ((_84317_info.get()._field_l.len() == 0LL)) {
					_84317_info.get()._field_ok=false;
				};
				_84317_info.get()._field_setter=_84721_token;
				if (((_84714_i + 1LL) >= _84241_tokens.len())) {
					_84317_info.get()._field_r=nullptr;
					_84317_info.get()._field_ok=_20cda3e60_is_postfix_op(_84317_info.get()._field_setter.get()._field_kind);
					goto _iter_end_1cb7b8c2a;
				};
				_84317_info.get()._field_r=_84241_tokens.slice((_84714_i + 1LL));
				if (_20cda3e60_is_postfix_op(_84317_info.get()._field_setter.get()._field_kind)) {
					if ((_84317_info.get()._field_r.len() > 0LL)) {
						_1c9cd9060_push_err(&(*_self_), _84317_info.get()._field_r[0LL],jule::Str("invalid syntax", 14));
						_84317_info.get()._field_r=nullptr;
					};
				};
				goto _iter_end_1cb7b8c2a;
			}
			_iter_next_1cb7b8c2a:;
			++it;
			_84714_i++;
			goto _iter_begin_1cb7b8c2a;
		}
		_iter_end_1cb7b8c2a:;
	};
	return _84317_info;
}



inline jule::Ptr<_1e436e664_AssignLeft> _1c9ce2222_build_assign_l(_1c9cd7d72_ScopeParser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _89038_tokens) {
	jule::Ptr<_1e436e664_AssignLeft> _89117_l = jule::new_ptr<_1e436e664_AssignLeft>(_1e436e664_AssignLeft{._field_token=_89038_tokens[0LL], });;
	if ((_89038_tokens[0LL].get()._field_id == static_cast<jule::U64>(2LLU))) {
		_89117_l.get()._field_ident=_89117_l.get()._field_token.get()._field_kind;
	};
	_89117_l.get()._field_expr=_1c9d05587_build_expr((*_self_)._field_p, _89038_tokens);
	return _89117_l;
}



inline jule::Slice<jule::Ptr<_1e436e664_AssignLeft>> _1c9ce2530_build_assign_ls(_1c9cd7d72_ScopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>>& _90339_parts) {
	jule::Slice<jule::Ptr<_1e436e664_AssignLeft>> _90417_lefts = nullptr;;
	{
		auto &expr = _90339_parts;
		auto it = expr.begin();
		_iter_begin_1cb7c333e:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _90521_part = *it;
			{
				jule::Ptr<_1e436e664_AssignLeft> _90621_l = _1c9ce2222_build_assign_l(&(*_self_), _90521_part);;
				_90417_lefts = jule::alloc_for_append(_90417_lefts,1);_90417_lefts.__push(_90621_l);;
			}
			_iter_next_1cb7c333e:;
			++it;
			goto _iter_begin_1cb7c333e;
		}
		_iter_end_1cb7c333e:;
	};
	return _90417_lefts;
}



inline std::tuple<jule::Ptr<_1e436eba3_AssignSt>,jule::Bool> _1c9ce283d_build_plain_assign(_1c9cd7d72_ScopeParser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _91342_tokens) {
	jule::Ptr<_1c9d00ebc_AssignInfo> _91417_info = _1c9ce1e14_build_assign_info(&(*_self_), _91342_tokens);;
	if ((!(_91417_info.get()._field_ok))) {
		return std::make_tuple(nullptr,false);
	};
	jule::Ptr<_1e436eba3_AssignSt> _91917_assign = jule::new_ptr<_1e436eba3_AssignSt>(_1e436eba3_AssignSt{._field_setter=_91417_info.get()._field_setter, });;
	jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>> _92318_parts;;
	jule::Slice<_20ca8ec5b_Log> _92325_errs;;
	std::tie(_92318_parts,_92325_errs) = _1c9d032dd_parts(_91417_info.get()._field_l,static_cast<jule::U64>(8LLU),true);
	if ((_92325_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_92325_errs);
		return std::make_tuple(nullptr,false);
	};
	_91917_assign.get()._field_left=_1c9ce2530_build_assign_ls(&(*_self_), _92318_parts);
	if ((_91417_info.get()._field_r != nullptr)) {
		_91917_assign.get()._field_right=_1c9d05587_build_expr((*_self_)._field_p, _91417_info.get()._field_r);
	};
	return std::make_tuple(_91917_assign,true);
}



inline std::tuple<jule::Ptr<_1e436eba3_AssignSt>,jule::Bool> _1c9ce2b4b_build_decl_assign(_1c9cd7d72_ScopeParser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _93740_tokens) {
	if ((_93740_tokens.len() < 1LL)) {
		return std::make_tuple(nullptr,false);
	};
	_93740_tokens=_93740_tokens.slice(1LL);
	jule::Ptr<_20cd9e6ec_Token> _94317_token = _93740_tokens[0LL];;
	if (((_94317_token.get()._field_id != static_cast<jule::U64>(3LLU)) || (_94317_token.get()._field_kind != jule::Str("(", 1)))) {
		return std::make_tuple(nullptr,false);
	};
	jule::Ptr<_1e436eba3_AssignSt> _94817_assign = jule::new_ptr<_1e436eba3_AssignSt>(_1e436eba3_AssignSt{._field_declarative=true, });;
	jule::I64 _95217_i = 0LL;;
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _95317_rang = _1c9d02b17_range(_95217_i,jule::Str("(", 1),jule::Str(")", 1),_93740_tokens);;
	if ((_95317_rang == nullptr)) {
		_1c9cd9060_push_err(&(*_self_), _94317_token,jule::Str("invalid syntax", 14));
		return std::make_tuple(nullptr,false);
	} else if (((_95217_i + 1LL) < _93740_tokens.len())) {
		_94817_assign.get()._field_setter=_93740_tokens[_95217_i];
		(_95217_i)++;
		jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _96021_expr_tokens = _93740_tokens.slice(_95217_i);;
		_94817_assign.get()._field_right=_1c9d05587_build_expr((*_self_)._field_p, _96021_expr_tokens);
	};
	jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>> _96518_parts;;
	jule::Slice<_20ca8ec5b_Log> _96525_errs;;
	std::tie(_96518_parts,_96525_errs) = _1c9d032dd_parts(_95317_rang,static_cast<jule::U64>(8LLU),true);
	if ((_96525_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_96525_errs);
		return std::make_tuple(nullptr,false);
	};
	{
		auto &expr = _96518_parts;
		auto it = expr.begin();
		_iter_begin_1cb7d0d0d:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _97121_part = *it;
			{
				jule::Bool _97221_is_mut = false;;
				jule::Bool _97321_is_ref = false;;
				_94317_token=_97121_part[0LL];
				if ((_94317_token.get()._field_id == static_cast<jule::U64>(36LLU))) {
					_97221_is_mut=true;
					_97121_part=_97121_part.slice(1LL);
					if ((_97121_part.len() == 0LL)) {
						_1c9cd9060_push_err(&(*_self_), _94317_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1cb7d0d0d;
					};
				};
				if (((_97121_part[0LL].get()._field_id == static_cast<jule::U64>(7LLU)) && (_97121_part[0LL].get()._field_kind == jule::Str("&", 1)))) {
					_97321_is_ref=true;
					_97121_part=_97121_part.slice(1LL);
					if ((_97121_part.len() == 0LL)) {
						_1c9cd9060_push_err(&(*_self_), _94317_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1cb7d0d0d;
					};
				};
				if ((((_97121_part[0LL].get()._field_id != static_cast<jule::U64>(2LLU)) && (_97121_part[0LL].get()._field_id != static_cast<jule::U64>(3LLU))) && (_97121_part[0LL].get()._field_kind != jule::Str("(", 1)))) {
					_1c9cd9060_push_err(&(*_self_), _94317_token,jule::Str("invalid syntax", 14));
					goto _iter_next_1cb7d0d0d;
				};
				jule::Ptr<_1e436e664_AssignLeft> _100121_l = _1c9ce2222_build_assign_l(&(*_self_), _97121_part);;
				_100121_l.get()._field_mutable=_97221_is_mut;
				_100121_l.get()._field_reference=_97321_is_ref;
				_94817_assign.get()._field_left = jule::alloc_for_append(_94817_assign.get()._field_left,1);_94817_assign.get()._field_left.__push(_100121_l);;
			}
			_iter_next_1cb7d0d0d:;
			++it;
			goto _iter_begin_1cb7d0d0d;
		}
		_iter_end_1cb7d0d0d:;
	};
	return std::make_tuple(_94817_assign,true);
}



inline std::tuple<jule::Ptr<_1e436eba3_AssignSt>,jule::Bool> _1c9ce2e59_build_assign_st(_1c9cd7d72_ScopeParser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _101039_tokens) {
	jule::Ptr<_1e436eba3_AssignSt> _101059_st = jule::Ptr<_1e436eba3_AssignSt>();
	jule::Bool _101074_ok = jule::Bool();
	if ((!(_1c9d01363_check_assign_tokens(_101039_tokens)))) {
		_101059_st = nullptr;
		_101074_ok = false;
		return std::make_tuple(_101059_st,_101074_ok);
	};
	{
		auto &_match_expr{ _101039_tokens[0LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1cb7da235:;
			{
				std::tie(_101059_st,_101074_ok) = _1c9ce2b4b_build_decl_assign(&(*_self_), _101039_tokens);
			}
		}
		else {
			_case_begin_1cb7d9410:;
			{
				std::tie(_101059_st,_101074_ok) = _1c9ce283d_build_plain_assign(&(*_self_), _101039_tokens);
			}
		}
		_match_end_1cb7d9993:;
	};
	return std::make_tuple(_101059_st,_101074_ok);
}



inline jule::Any _1c9ce3267_build_use_expr(_1c9cd7d72_ScopeParser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _102538_tokens) {
	if ((_102538_tokens.len() == 1LL)) {
		_1c9cd9060_push_err(&(*_self_), _102538_tokens[0LL],jule::Str("expression missing", 18));
		return nullptr;
	};
	jule::Ptr<_1e4365d97_UseExpr> _103117_ue = jule::new_ptr<_1e4365d97_UseExpr>(_1e4365d97_UseExpr{._field_token=_102538_tokens[0LL], });;
	_102538_tokens=_102538_tokens.slice(1LL);
	_103117_ue.get()._field_expr=_1c9d05587_build_expr((*_self_)._field_p, _102538_tokens);
	return jule::Any(_103117_ue);
}



inline jule::Any _1c9ce3575_build_st(_1c9cd7d72_ScopeParser* _self_, jule::Ptr<_1c9cd7547_Stmt>& _104032_st) {
	jule::Ptr<_20cd9e6ec_Token> _104117_token = _104032_st.get()._field_tokens[0LL];;
	if ((_104117_token.get()._field_id == static_cast<jule::U64>(2LLU))) {
		jule::Any _104322_s;;
		jule::Bool _104325_ok;;
		std::tie(_104322_s,_104325_ok) = _1c9ce1b06_build_id_st(&(*_self_), _104032_st.get()._field_tokens);
		if (_104325_ok) {
			return jule::Any(_104322_s);
		};
	};
	jule::Ptr<_1e436eba3_AssignSt> _104918_s;;
	jule::Bool _104921_ok;;
	std::tie(_104918_s,_104921_ok) = _1c9ce2e59_build_assign_st(&(*_self_), _104032_st.get()._field_tokens);
	if (_104921_ok) {
		return jule::Any(_104918_s);
	};
	{
		auto &_match_expr{ _104117_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1cb7e026d:;
			{
				return jule::Any(_1c9ce3267_build_use_expr(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(38LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1cb7e0b31:;
			{
				return jule::Any(_1c9cda02d_build_var_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1cb7e0548:;
			{
				return jule::Any(_1c9cda33b_build_ret_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(12LLU)) {
			_case_begin_1cb7e05ae:;
			{
				return jule::Any(_1c9cdccab_build_iter_st(&(*_self_), _104032_st));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1cb7e0625:;
			{
				return jule::Any(_1c9cdd0b9_build_break_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(14LLU)) {
			_case_begin_1cb7e0c96:;
			{
				return jule::Any(_1c9cdd3c7_build_cont_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1cb7e0d0c:;
			{
				return jule::Any(_1c9cddd01_build_if_else_chain(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1cb7e0d73:;
			{
				return jule::Any(_1c9cde10e_build_co_call_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1cb7e0dd9:;
			{
				return jule::Any(_1c9cde41c_build_goto_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1cb7e0e50:;
			{
				return jule::Any(_1c9cde72a_build_fall_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1cb7e0eb6:;
			{
				return jule::Any(_1c9cdea38_build_type_alias_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1cb7e102c:;
			{
				return jule::Any(_1c9ce11cc_build_match_case(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU) || _match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1cb7e1093:;
			{
				return jule::Any(_1c9ce14da_build_scope_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1cb7e1109:;
			{
				if ((_104117_token.get()._field_kind == jule::Str("{", 1))) {
					return jule::Any(_1c9ce14da_build_scope_st(&(*_self_), _104032_st.get()._field_tokens));
				};
			}
		}
		_match_end_1cb7e0845:;
	};
	jule::Ptr<_1e43659e0_Expr> _109017_expr = _1c9d05587_build_expr((*_self_)._field_p, _104032_st.get()._field_tokens);;
	if ((_109017_expr != nullptr)) {
		return jule::Any(_109017_expr);
	};
	_1c9cd9060_push_err(&(*_self_), _104117_token,jule::Str("invalid syntax", 14));
	return nullptr;
}



inline void _1c9ce3894_build(_1c9cd7d72_ScopeParser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _109829_tokens, jule::Ptr<_1e43702ad_ScopeTree>& _109852_s) {
	if ((_109852_s == nullptr)) {
		return;;
	};
	(*_self_)._field_stmts=_1c9cd78dd_split_stmts(_109829_tokens);
	(*_self_)._field_pos=-1LL;
	(*_self_)._field_s=_109852_s;
	while (((!(_1c9cd8c41_is_last_st(&(*_self_)))) && (!(_1c9cd89cc_finished(&(*_self_)))))) {
		{
			jule::Ptr<_1c9cd7547_Stmt> _110721_st = _1c9cd9868_next(&(*_self_));;
			jule::Any _110821_data = _1c9ce3575_build_st(&(*_self_), _110721_st);;
			if ((_110821_data != nullptr)) {
				(*_self_)._field_s.get()._field_stmts = jule::alloc_for_append((*_self_)._field_s.get()._field_stmts,1);(*_self_)._field_s.get()._field_stmts.__push(_1e43314d3_Node{._field_token=_110721_st.get()._field_tokens[0LL], ._field_data=jule::Any(_110821_data)});;
			};
			if (_1c9cd8768_stopped(&(*_self_))) {
				goto _iter_end_1cb7ea9d7;
			};
		}
	_iter_next_1cb7ea9d7:;
	}
	_iter_end_1cb7ea9d7:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c9cd7d72_ScopeParser _Src) {
	_Stream << "ScopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c9ce4741_CallData _Src) {
	_Stream << "CallData{";
	_Stream << "expr_tokens:" << _Src._field_expr_tokens << ", ";
	_Stream << "args_tokens:" << _Src._field_args_tokens << ", ";
	_Stream << "generics_tokens:" << _Src._field_generics_tokens;
	_Stream << "}";
	return _Stream;
}



inline void _1c9ce648a_push_err(_1c9ce5b93_ExprBuilder* _self_, jule::Ptr<_20cd9e6ec_Token> _21827_token, jule::Str _21842_fmt, jule::Slice<jule::Any> _21855_args) {
	_1c9d04e5a_push_err((*_self_)._field_p.ptr(), _21827_token,_21842_fmt,jule::Any(_21855_args));
}



inline void _1c9ce67a9_push_suggestion(_1c9ce5b93_ExprBuilder* _self_, jule::Str _22334_fmt, jule::Slice<jule::Any> _22347_args) {
	_1c9d05279_push_suggestion((*_self_)._field_p.ptr(), _22334_fmt,jule::Any(_22347_args));
}



inline jule::Ptr<_1e4366183_TupleExpr> _1c9ce6ab7_build_tuple(_1c9ce5b93_ExprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>>& _22735_parts) {
	jule::Ptr<_1e4366183_TupleExpr> _22817_tuple = jule::new_ptr<_1e4366183_TupleExpr>(_1e4366183_TupleExpr{._field_expr=jule::Slice<jule::Ptr<_1e43659e0_Expr>>::alloc(0LL,_22735_parts.len())});;
	{
		auto &expr = _22735_parts;
		auto it = expr.begin();
		_iter_begin_1cb8022c4:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _23121_part = *it;
			{
				_22817_tuple.get()._field_expr = jule::alloc_for_append(_22817_tuple.get()._field_expr,1);_22817_tuple.get()._field_expr.__push(_1c9d00571_build_from_tokens(&(*_self_), _23121_part));;
			}
			_iter_next_1cb8022c4:;
			++it;
			goto _iter_begin_1cb8022c4;
		}
		_iter_end_1cb8022c4:;
	};
	return _22817_tuple;
}



inline jule::Ptr<_1e436665b_LitExpr> _1c9ce6dc5_build_lit(_1c9ce5b93_ExprBuilder* _self_, jule::Ptr<_20cd9e6ec_Token> _23728_token) {
	return jule::new_ptr<_1e436665b_LitExpr>(_1e436665b_LitExpr{._field_token=_23728_token, ._field_value=_23728_token.get()._field_kind});
}



inline jule::Ptr<_1e436257a_TypeDecl> _1c9ce71d3_build_primitive_type(_1c9ce5b93_ExprBuilder* _self_, jule::Ptr<_20cd9e6ec_Token>& _24440_token) {
	return _1c9d144ca_build_prim_type(_24440_token);
}



inline jule::Any _1c9ce74e1_build_single(_1c9ce5b93_ExprBuilder* _self_, jule::Ptr<_20cd9e6ec_Token> _24835_token) {
	{
		auto &_match_expr{ _24835_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1cb80545e:;
			{
				return jule::Any(_1c9ce6dc5_build_lit(&(*_self_), _24835_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1cb80578e:;
			{
				if ((_24835_token.get()._field_kind == jule::Str("...", 3))) {
					return jule::Any(jule::new_ptr<_1e4368251_VariadicExpr>(_1e4368251_VariadicExpr{._field_token=_24835_token, }));
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(28LLU) || _match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1cb805805:;
			{
				return jule::Any(_1c9ce56ba_build_ident_expr(_24835_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1cb80586b:;
			{
				return jule::Any(_1c9ce71d3_build_primitive_type(&(*_self_), _24835_token));
			}
		}
		_match_end_1cb80565c:;
	};
	_1c9ce648a_push_err(&(*_self_), _24835_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1e4367690_IdentExpr> _1c9ce77ee_build_cpp_linked_ident(_1c9ce5b93_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _26946_tokens) {
	if ((_26946_tokens[0LL].get()._field_id != static_cast<jule::U64>(31LLU))) {
		return nullptr;
	} else if ((_26946_tokens[1LL].get()._field_id != static_cast<jule::U64>(20LLU))) {
		_1c9ce648a_push_err(&(*_self_), _26946_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c9ce67a9_push_suggestion(&(*_self_), jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_20cd9e6ec_Token> _27717_token = _26946_tokens[2LL];;
	if ((_27717_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1c9ce648a_push_err(&(*_self_), _26946_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c9ce67a9_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e4367690_IdentExpr> _28317_expr = _1c9ce56ba_build_ident_expr(_27717_token);;
	_28317_expr.get()._field_cpp_linked=true;
	return _28317_expr;
}



inline jule::Ptr<_1e4367d99_UnaryExpr> _1c9ce7b0c_build_unary(_1c9ce5b93_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _28834_tokens) {
	jule::Ptr<_20cd9e6ec_Token> _28917_op = _28834_tokens[0LL];;
	if ((_28834_tokens.len() == 1LL)) {
		_1c9ce648a_push_err(&(*_self_), _28917_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((!(_20cd9ee39_is_unary_op(_28917_op.get()._field_kind)))) {
		_1c9ce648a_push_err(&(*_self_), _28917_op,jule::Str("invalid unary operator: @", 25),jule::Slice<jule::Any>::make({jule::Any(_28917_op.get()._field_kind)}));
		return nullptr;
	};
	_28834_tokens=_28834_tokens.slice(1LL);
	return jule::new_ptr<_1e4367d99_UnaryExpr>(_1e4367d99_UnaryExpr{._field_op=_28917_op, ._field_expr=_1c9d00571_build_from_tokens(&(*_self_), _28834_tokens)});
}



inline jule::Ptr<_1e4368e33_SubIdentExpr> _1c9ce7e1a_build_obj_sub_ident(_1c9ce5b93_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _30942_tokens) {
	jule::I64 _31017_i = (_30942_tokens.len() - 1LL);;
	jule::Ptr<_20cd9e6ec_Token> _31117_ident_token = _30942_tokens[_31017_i];;
	(_31017_i)--;
	_30942_tokens=_30942_tokens.slice(0LL,_31017_i);
	if ((_30942_tokens.len() == 0LL)) {
		_1c9ce648a_push_err(&(*_self_), _31117_ident_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1e4368e33_SubIdentExpr>(_1e4368e33_SubIdentExpr{._field_expr=_1c9d00571_build_from_tokens(&(*_self_), _30942_tokens), ._field_ident=_31117_ident_token});
}



inline jule::Ptr<_1e43689b0_NsSelectionExpr> _1c9ce8228_build_ns_sub_ident(_1c9ce5b93_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _32442_tokens) {
	jule::Ptr<_1e43689b0_NsSelectionExpr> _32517_ns = jule::new_ptr<_1e43689b0_NsSelectionExpr>(_1e43689b0_NsSelectionExpr{});;
	{
		auto &expr = _32442_tokens;
		auto it = expr.begin();
		_iter_begin_1cb8144a1:;
		if (it != expr.end()) {
			jule::I64 _32614_i = it - expr.begin();
			jule::Ptr<_20cd9e6ec_Token> _32621_token = *it;
			{
				if (((_32614_i & 1LL) == 0LL)) {
					if ((_32621_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
						_1c9ce648a_push_err(&(*_self_), _32621_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1c9ce67a9_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					};
					_32517_ns.get()._field_ns = jule::alloc_for_append(_32517_ns.get()._field_ns,1);_32517_ns.get()._field_ns.__push(_32621_token);;
				} else if ((_32621_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_1c9ce648a_push_err(&(*_self_), _32621_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1c9ce67a9_push_suggestion(&(*_self_), jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>());
				};
			}
			_iter_next_1cb8144a1:;
			++it;
			_32614_i++;
			goto _iter_begin_1cb8144a1;
		}
		_iter_end_1cb8144a1:;
	};
	_32517_ns.get()._field_ident=_32517_ns.get()._field_ns[(_32517_ns.get()._field_ns.len() - 1LL)];
	_32517_ns.get()._field_ns=_32517_ns.get()._field_ns.slice(0LL,(_32517_ns.get()._field_ns.len() - 1LL));
	return _32517_ns;
}



inline jule::Ptr<_1e436257a_TypeDecl> _1c9ce8536_build_type(_1c9ce5b93_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _34334_tokens) {
	jule::I64 _34417_i = 0LL;;
	jule::Ptr<_1e436257a_TypeDecl> _34518_t;;
	jule::Bool _34521_ok;;
	std::tie(_34518_t,_34521_ok) = _1c9d06874_build_type((*_self_)._field_p, _34334_tokens,(&(_34417_i)),false);
	if ((!(_34521_ok))) {
		_1c9ce648a_push_err(&(*_self_), _34334_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_34417_i < _34334_tokens.len())) {
		_1c9ce648a_push_err(&(*_self_), _34334_tokens[_34417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _34518_t;
}



inline jule::Any _1c9ce8844_build_sub_ident(_1c9ce5b93_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _35739_tokens) {
	jule::I64 _35813_i = (_35739_tokens.len() - 2LL);;
	jule::Ptr<_20cd9e6ec_Token> _35913_token = _35739_tokens[_35813_i];;
	{
		auto &_match_expr{ _35913_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1cb81c377:;
			{
				return jule::Any(_1c9ce7e1a_build_obj_sub_ident(&(*_self_), _35739_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1cb81d004:;
			{
				return jule::Any(_1c9ce8228_build_ns_sub_ident(&(*_self_), _35739_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1cb81d06a:;
			{
				if ((_35913_token.get()._field_kind == jule::Str("]", 1))) {
					return jule::Any(_1c9ce8536_build_type(&(*_self_), _35739_tokens));
				};
			}
		}
		_match_end_1cb81cdb1:;
	};
	_1c9ce648a_push_err(&(*_self_), _35913_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1e4368251_VariadicExpr> _1c9ce8b52_build_variadic(_1c9ce5b93_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _37537_tokens) {
	jule::Ptr<_20cd9e6ec_Token> _37617_token = _37537_tokens[(_37537_tokens.len() - 1LL)];;
	_37537_tokens=_37537_tokens.slice(0LL,(_37537_tokens.len() - 1LL));
	return jule::new_ptr<_1e4368251_VariadicExpr>(_1e4368251_VariadicExpr{._field_token=_37617_token, ._field_expr=_1c9d00571_build_from_tokens(&(*_self_), _37537_tokens)});
}



inline jule::Any _1c9ce8e60_build_op_right(_1c9ce5b93_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _38438_tokens) {
	jule::Ptr<_20cd9e6ec_Token> _38517_token = _38438_tokens[(_38438_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _38517_token.get()._field_kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1cb8227cd:;
			{
				_38438_tokens=_38438_tokens.slice(0LL,(_38438_tokens.len() - 1LL));
				jule::Any _38921_d = _1c9ceee55_build(&(*_self_), _38438_tokens);;
				if ((_38921_d == nullptr)) {
					return nullptr;
				};
				{
					auto &_match_expr{ _38921_d };
					
					if (_match_expr.type_is<jule::Ptr<_1e43699b1_FnCallExpr>>()) {
						_case_begin_1cb824923:;
						{
							_38921_d.operator jule::Ptr<_1e43699b1_FnCallExpr>().get()._field_exception=jule::new_ptr<_1e43702ad_ScopeTree>(_1e43702ad_ScopeTree{._field_deferred=true, });
							return jule::Any(_38921_d);
						}
					}
					_match_end_1cb824c86:;
				};
			}
		}
		_match_end_1cb822ee8:;
	};
	_1c9ce648a_push_err(&(*_self_), _38517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1e43659e0_Expr> _1c9ce9290_build_between_parentheses(_1c9ce5b93_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _40548_tokens) {
	if ((_40548_tokens.len() == 2LL)) {
		_1c9ce648a_push_err(&(*_self_), _40548_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1c9ce67a9_push_suggestion(&(*_self_), jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>());
		return nullptr;
	};
	_40548_tokens=_40548_tokens.slice(1LL,(_40548_tokens.len() - 1LL));
	jule::Ptr<_1e43659e0_Expr> _41217_expr = _1c9d00571_build_from_tokens(&(*_self_), _40548_tokens);;
	_41217_expr.get()._field_range=true;
	return _41217_expr;
}



inline jule::Ptr<_1e4368608_CastExpr> _1c9ce95ae_try_build_cast(_1c9ce5b93_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _41738_tokens) {
	jule::I64 _41817_range_n = 0LL;;
	{
		auto &expr = _41738_tokens;
		auto it = expr.begin();
		_iter_begin_1cb829818:;
		if (it != expr.end()) {
			jule::I64 _41913_i = it - expr.begin();
			jule::Ptr<_20cd9e6ec_Token> _41916_token = *it;
			{
				if ((_41916_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _41916_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1cb82ab5a:;
							{
								(_41817_range_n)++;
								goto _iter_next_1cb829818;
							}
						}
						else {
							_case_begin_1cb82a84c:;
							{
								(_41817_range_n)--;
							}
						}
						_match_end_1cb82a792:;
					};
				};
				if ((_41817_range_n > 0LL)) {
					goto _iter_next_1cb829818;
				} else if (((_41913_i + 1LL) == _41738_tokens.len())) {
					return nullptr;
				};
				jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _43821_type_tokens = _41738_tokens.slice(0LL,(_41913_i + 1LL));;
				jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _43921_expr_tokens = _41738_tokens.slice((_41913_i + 1LL));;
				if ((_43921_expr_tokens.len() == 0LL)) {
					return nullptr;
				};
				jule::Ptr<_20cd9e6ec_Token> _44617_tok = _43921_expr_tokens[0LL];;
				if (((_44617_tok.get()._field_id != static_cast<jule::U64>(3LLU)) || (_44617_tok.get()._field_kind != jule::Str("(", 1)))) {
					return nullptr;
				};
				jule::Ptr<_1e4368608_CastExpr> _45121_cast = jule::new_ptr<_1e4368608_CastExpr>(_1e4368608_CastExpr{});;
				if ((_43921_expr_tokens.len() == 2LL)) {
					_1c9ce648a_push_err(&(*_self_), _43921_expr_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
					_1c9ce67a9_push_suggestion(&(*_self_), jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>());
				};
				if ((_43821_type_tokens.len() == 2LL)) {
					_1c9ce648a_push_err(&(*_self_), _43821_type_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
					_1c9ce67a9_push_suggestion(&(*_self_), jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>());
				} else {
					_43821_type_tokens=_43821_type_tokens.slice(1LL,(_43821_type_tokens.len() - 1LL));
					jule::I64 _46525_type_index = 0LL;;
					jule::Ptr<_1e436257a_TypeDecl> _46626_t;;
					jule::Bool _46629_ok;;
					std::tie(_46626_t,_46629_ok) = _1c9d06874_build_type((*_self_)._field_p, _43821_type_tokens,(&(_46525_type_index)),true);
					if ((_46629_ok && (_46525_type_index < _43821_type_tokens.len()))) {
						_1c9ce648a_push_err(&(*_self_), _43821_type_tokens[_46525_type_index],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					} else if ((!(_46629_ok))) {
						return _45121_cast;
					};
					_45121_cast.get()._field_kind=_46626_t;
					if ((_43921_expr_tokens.len() > 2LL)) {
						jule::I64 _47629_j = 0LL;;
						_1c9d02b17_range(_47629_j,jule::Str("(", 1),jule::Str(")", 1),_43921_expr_tokens);
						if ((_47629_j < _43921_expr_tokens.len())) {
							return nullptr;
						};
						_43921_expr_tokens=_43921_expr_tokens.slice(0LL,_47629_j);
						_45121_cast.get()._field_expr=_1c9d00571_build_from_tokens(&(*_self_), _43921_expr_tokens);
					};
				};
				return _45121_cast;
			}
			_iter_next_1cb829818:;
			++it;
			_41913_i++;
			goto _iter_begin_1cb829818;
		}
		_iter_end_1cb829818:;
	};
	return nullptr;
}



inline void _1c9ce9977_push_arg(_1c9ce5b93_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1e43659e0_Expr>>& _49132_args, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _49151_tokens, jule::Ptr<_20cd9e6ec_Token> _49169_err_token) {
	if ((_49151_tokens.len() == 0LL)) {
		_1c9ce648a_push_err(&(*_self_), _49169_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c9ce67a9_push_suggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_49132_args = jule::alloc_for_append(_49132_args,1);_49132_args.__push(_1c9d00571_build_from_tokens(&(*_self_), _49151_tokens));;
}



inline jule::Slice<jule::Ptr<_1e43659e0_Expr>> _1c9ce9c85_build_args(_1c9ce5b93_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _50033_tokens) {
	if ((_50033_tokens.len() < 2LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1e43659e0_Expr>> _50617_args = nullptr;;
	jule::I64 _50717_last = 0LL;;
	jule::I64 _50817_range_n = 0LL;;
	_50033_tokens=_50033_tokens.slice(1LL,(_50033_tokens.len() - 1LL));
	{
		auto &expr = _50033_tokens;
		auto it = expr.begin();
		_iter_begin_1cb839bbe:;
		if (it != expr.end()) {
			jule::I64 _51013_i = it - expr.begin();
			jule::Ptr<_20cd9e6ec_Token> _51016_token = *it;
			{
				if ((_51016_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _51016_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1cb83b363:;
							{
								(_50817_range_n)++;
							}
						}
						else {
							_case_begin_1cb83b055:;
							{
								(_50817_range_n)--;
							}
						}
						_match_end_1cb83ae9a:;
					};
				};
				if (((_50817_range_n > 0LL) || (_51016_token.get()._field_id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1cb839bbe;
				};
				_1c9ce9977_push_arg(&(*_self_), _50617_args,_50033_tokens.slice(_50717_last,_51013_i),_51016_token);
				_50717_last=static_cast<jule::I64>((_51013_i + 1LL));
			}
			_iter_next_1cb839bbe:;
			++it;
			_51013_i++;
			goto _iter_begin_1cb839bbe;
		}
		_iter_end_1cb839bbe:;
	};
	if ((_50717_last < _50033_tokens.len())) {
		if ((_50717_last == 0LL)) {
			if ((_50033_tokens.len() > 0LL)) {
				_1c9ce9977_push_arg(&(*_self_), _50617_args,_50033_tokens.slice(_50717_last),_50033_tokens[_50717_last]);
			};
		} else {
			_1c9ce9977_push_arg(&(*_self_), _50617_args,_50033_tokens.slice(_50717_last),_50033_tokens[(_50717_last - 1LL)]);
		};
	};
	return _50617_args;
}



inline jule::Slice<jule::Ptr<_1e436257a_TypeDecl>> _1c9cea093_build_call_generics(_1c9ce5b93_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _54242_tokens) {
	if ((_54242_tokens.len() == 0LL)) {
		return nullptr;
	};
	_54242_tokens=_54242_tokens.slice(1LL,(_54242_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>> _54818_parts;;
	jule::Slice<_20ca8ec5b_Log> _54825_errs;;
	std::tie(_54818_parts,_54825_errs) = _1c9d032dd_parts(_54242_tokens,static_cast<jule::U64>(8LLU),true);
	jule::Slice<jule::Ptr<_1e436257a_TypeDecl>> _54917_generics = jule::Slice<jule::Ptr<_1e436257a_TypeDecl>>::alloc(0LL,_54818_parts.len());;
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_54825_errs);
	{
		auto &expr = _54818_parts;
		auto it = expr.begin();
		_iter_begin_1cb8425bc:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _55121_part = *it;
			{
				if ((_55121_part.len() == 0LL)) {
					goto _iter_next_1cb8425bc;
				};
				jule::I64 _55521_j = 0LL;;
				jule::Ptr<_1e436257a_TypeDecl> _55622_generic;;
				std::tie(_55622_generic,std::ignore) = _1c9d06874_build_type((*_self_)._field_p, _55121_part,(&(_55521_j)),true);
				if ((_55521_j < _55121_part.len())) {
					_1c9ce648a_push_err(&(*_self_), _55121_part[_55521_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_54917_generics = jule::alloc_for_append(_54917_generics,1);_54917_generics.__push(_55622_generic);;
			}
			_iter_next_1cb8425bc:;
			++it;
			goto _iter_begin_1cb8425bc;
		}
		_iter_end_1cb8425bc:;
	};
	return _54917_generics;
}



inline jule::Ptr<_1e43699b1_FnCallExpr> _1c9cea44a_build_fn_call(_1c9ce5b93_ExprBuilder* _self_, jule::Ptr<_20cd9e6ec_Token>& _56637_token, jule::Ptr<_1c9ce4741_CallData>& _56657_data) {
	return jule::new_ptr<_1e43699b1_FnCallExpr>(_1e43699b1_FnCallExpr{._field_token=_56637_token, ._field_expr=_1c9d00571_build_from_tokens(&(*_self_), _56657_data.get()._field_expr_tokens), ._field_generics=_1c9cea093_build_call_generics(&(*_self_), _56657_data.get()._field_generics_tokens), ._field_args=_1c9ce9c85_build_args(&(*_self_), _56657_data.get()._field_args_tokens), });
}



inline jule::Any _1c9cea77a_build_parentheses_range(_1c9ce5b93_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _57547_tokens) {
	jule::Ptr<_20cd9e6ec_Token> _57617_token = _57547_tokens[0LL];;
	{
		auto &_match_expr{ _57617_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1cb847160:;
			{
				{
					auto &_match_expr{ _57617_token.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1cb848040:;
						{
							jule::Ptr<_1e4368608_CastExpr> _58125_expr = _1c9ce95ae_try_build_cast(&(*_self_), _57547_tokens);;
							if ((_58125_expr != nullptr)) {
								return jule::Any(_58125_expr);
							};
						}
					}
					_match_end_1cb847eb8:;
				};
			}
		}
		_match_end_1cb8476b0:;
	};
	jule::Ptr<_1c9ce4741_CallData> _58817_data = _1c9ce4aa4_get_call_data(_57547_tokens);;
	if ((_58817_data.get()._field_expr_tokens.len() == 0LL)) {
		return jule::Any(_1c9ce9290_build_between_parentheses(&(*_self_), _58817_data.get()._field_args_tokens));
	};
	return jule::Any(_1c9cea44a_build_fn_call(&(*_self_), _57617_token,_58817_data));
}



inline jule::Ptr<_1e4366d65_UnsafeExpr> _1c9ceaa99_build_unsafe_expr(_1c9ce5b93_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _59940_tokens) {
	jule::Ptr<_20cd9e6ec_Token> _60017_token = _59940_tokens[0LL];;
	_59940_tokens=_59940_tokens.slice(1LL);
	jule::I64 _60217_i = 0LL;;
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _60317_range_tokens = _1c9d02b17_range(_60217_i,jule::Str("{", 1),jule::Str("}", 1),_59940_tokens);;
	if ((_60317_range_tokens.len() == 0LL)) {
		_1c9ce648a_push_err(&(*_self_), _59940_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1e4366d65_UnsafeExpr>(_1e4366d65_UnsafeExpr{._field_token=_60017_token, ._field_expr=_1c9d00571_build_from_tokens(&(*_self_), _60317_range_tokens)});
}



inline jule::Ptr<_1e4371ca4_FnDecl> _1c9ceada7_build_anon_fn(_1c9ce5b93_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _61437_tokens) {
	jule::Ptr<_1e4371ca4_FnDecl> _61517_f = _1c9d0aa98_build_fn((*_self_)._field_p, _61437_tokens,false,false);;
	if ((!(_1e4372106_is_anon(_61517_f.ptr())))) {
		_1c9ce648a_push_err(&(*_self_), _61517_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c9ce67a9_push_suggestion(&(*_self_), jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>());
	};
	return _61517_f;
}



inline jule::Any _1c9ceb1b5_build_unsafe(_1c9ce5b93_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _62336_tokens) {
	{
		auto &_match_expr{ _62336_tokens[1LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1cc729618:;
			{
				return jule::Any(_1c9ceada7_build_anon_fn(&(*_self_), _62336_tokens));
			}
		}
		else {
			_case_begin_1cc7286b1:;
			{
				return jule::Any(_1c9ceaa99_build_unsafe_expr(&(*_self_), _62336_tokens));
			}
		}
		_match_end_1cc728abd:;
	};
}



inline void _1c9ceb57d_push_range_lit_part(_1c9ce5b93_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _63342_part, jule::Ptr<_20cd9e6ec_Token> _6349_error_token, jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>>& _63435_parts) {
	if ((_63342_part.len() == 0LL)) {
		_1c9ce648a_push_err(&(*_self_), _6349_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c9ce67a9_push_suggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_63435_parts = jule::alloc_for_append(_63435_parts,1);_63435_parts.__push(_63342_part);;
}



inline jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>> _1c9ceb8ad_get_brace_range_lit_expr_parts(_1c9ce5b93_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _64453_tokens) {
	if ((_64453_tokens.len() < 2LL)) {
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>> _65017_parts = nullptr;;
	jule::I64 _65217_last = 0LL;;
	jule::I64 _65317_range_n = 0LL;;
	_64453_tokens=_64453_tokens.slice(1LL,(_64453_tokens.len() - 1LL));
	{
		auto &expr = _64453_tokens;
		auto it = expr.begin();
		_iter_begin_1cc72e09b:;
		if (it != expr.end()) {
			jule::I64 _65513_i = it - expr.begin();
			jule::Ptr<_20cd9e6ec_Token> _65516_token = *it;
			{
				if ((_65516_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _65516_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1cc730740:;
							{
								(_65317_range_n)++;
							}
						}
						else {
							_case_begin_1cc730432:;
							{
								(_65317_range_n)--;
							}
						}
						_match_end_1cc730377:;
					};
				};
				if (((_65317_range_n > 0LL) || (_65516_token.get()._field_id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1cc72e09b;
				};
				_1c9ceb57d_push_range_lit_part(&(*_self_), _64453_tokens.slice(_65217_last,_65513_i),_65516_token,_65017_parts);
				_65217_last=static_cast<jule::I64>((_65513_i + 1LL));
			}
			_iter_next_1cc72e09b:;
			++it;
			_65513_i++;
			goto _iter_begin_1cc72e09b;
		}
		_iter_end_1cc72e09b:;
	};
	if ((_65217_last < _64453_tokens.len())) {
		if ((_65217_last == 0LL)) {
			if ((_64453_tokens.len() > 0LL)) {
				_1c9ceb57d_push_range_lit_part(&(*_self_), _64453_tokens.slice(_65217_last),_64453_tokens[_65217_last],_65017_parts);
			};
		} else {
			_1c9ceb57d_push_range_lit_part(&(*_self_), _64453_tokens.slice(_65217_last),_64453_tokens[(_65217_last - 1LL)],_65017_parts);
		};
	};
	return _65017_parts;
}



inline jule::Ptr<_1e436a4c8_FieldExprPair> _1c9cebbcc_build_field_expr_pair(_1c9ce5b93_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _68644_tokens) {
	if (((_68644_tokens.len() - 2LL) == 0LL)) {
		_1c9ce648a_push_err(&(*_self_), _68644_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e436a4c8_FieldExprPair> _69117_pair = jule::new_ptr<_1e436a4c8_FieldExprPair>(_1e436a4c8_FieldExprPair{._field_field=_68644_tokens[0LL], });;
	_68644_tokens=_68644_tokens.slice(2LL);
	_69117_pair.get()._field_expr=_1c9d00571_build_from_tokens(&(*_self_), _68644_tokens);
	return _69117_pair;
}



inline jule::Ptr<_1e43659e0_Expr> _1c9cebeda_build_struct_lit_expr(_1c9ce5b93_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _69945_tokens) {
	jule::Ptr<_20cd9e6ec_Token> _70017_token = _69945_tokens[0LL];;
	if (((_70017_token.get()._field_id == static_cast<jule::U64>(2LLU)) && (_69945_tokens.len() > 1LL))) {
		_70017_token=_69945_tokens[1LL];
		if ((_70017_token.get()._field_id == static_cast<jule::U64>(11LLU))) {
			return jule::new_ptr<_1e43659e0_Expr>(_1e43659e0_Expr{._field_token=_70017_token, ._field_end=_69945_tokens[(_69945_tokens.len() - 1LL)], ._field_kind=jule::Any(_1c9cebbcc_build_field_expr_pair(&(*_self_), _69945_tokens))});
		};
	};
	return _1c9d00571_build_from_tokens(&(*_self_), _69945_tokens);
}



inline jule::Slice<jule::Ptr<_1e43659e0_Expr>> _1c9cec2e8_build_struct_lit_exprs(_1c9ce5b93_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _71446_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>> _71517_parts = _1c9ceb8ad_get_brace_range_lit_expr_parts(&(*_self_), _71446_tokens);;
	if ((_71517_parts.len() == 0LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1e43659e0_Expr>> _72017_pairs = jule::Slice<jule::Ptr<_1e43659e0_Expr>>::alloc(0LL,_71517_parts.len());;
	{
		auto &expr = _71517_parts;
		auto it = expr.begin();
		_iter_begin_1cc73b21d:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _72121_part = *it;
			{
				_72017_pairs = jule::alloc_for_append(_72017_pairs,1);_72017_pairs.__push(_1c9cebeda_build_struct_lit_expr(&(*_self_), _72121_part));;
			}
			_iter_next_1cc73b21d:;
			++it;
			goto _iter_begin_1cc73b21d;
		}
		_iter_end_1cc73b21d:;
	};
	return _72017_pairs;
}



inline jule::Ptr<_1e436ac9d_StructLit> _1c9cec628_build_typed_struct_literal(_1c9ce5b93_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _72749_tokens) {
	jule::I64 _72817_i = 0LL;;
	jule::Ptr<_1e436257a_TypeDecl> _72918_t;;
	jule::Bool _72921_ok;;
	std::tie(_72918_t,_72921_ok) = _1c9d06874_build_type((*_self_)._field_p, _72749_tokens,(&(_72817_i)),true);
	if ((!(_72921_ok))) {
		return nullptr;
	} else if ((_72817_i >= _72749_tokens.len())) {
		_1c9ce648a_push_err(&(*_self_), _72749_tokens[_72817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_72749_tokens=_72749_tokens.slice(_72817_i);
	jule::Ptr<_20cd9e6ec_Token> _73813_token = _72749_tokens[0LL];;
	if (((_73813_token.get()._field_id != static_cast<jule::U64>(3LLU)) || (_73813_token.get()._field_kind != jule::Str("{", 1)))) {
		_1c9ce648a_push_err(&(*_self_), _73813_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1e436ac9d_StructLit>(_1e436ac9d_StructLit{._field_end=_72749_tokens[(_72749_tokens.len() - 1LL)], ._field_kind=_72918_t, ._field_exprs=_1c9cec2e8_build_struct_lit_exprs(&(*_self_), _72749_tokens)});
}



inline jule::Ptr<_1e43659e0_Expr> _1c9cec947_build_brace_lit_part(_1c9ce5b93_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _75144_tokens) {
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _75218_l;;
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _75225_r;;
	std::tie(_75218_l,_75225_r) = _1c9ce5137_split_colon(_75144_tokens);
	if ((_75218_l != nullptr)) {
		return jule::new_ptr<_1e43659e0_Expr>(_1e43659e0_Expr{._field_token=_75144_tokens[0LL], ._field_kind=jule::Any(jule::new_ptr<_1e436b9e6_KeyValPair>(_1e436b9e6_KeyValPair{._field_key=_1c9d00571_build_from_tokens(&(*_self_), _75218_l), ._field_val=_1c9d00571_build_from_tokens(&(*_self_), _75225_r), ._field_colon=_75144_tokens[_75218_l.len()]}))});
	};
	return _1c9d00571_build_from_tokens(&(*_self_), _75144_tokens);
}



inline jule::Ptr<_1e436b221_BraceLit> _1c9cecc55_build_brace_lit(_1c9ce5b93_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _76739_tokens) {
	jule::Ptr<_1e436b221_BraceLit> _76817_lit = jule::new_ptr<_1e436b221_BraceLit>(_1e436b221_BraceLit{._field_token=_76739_tokens[0LL], ._field_end=_76739_tokens[(_76739_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>> _77317_parts = _1c9ceb8ad_get_brace_range_lit_expr_parts(&(*_self_), _76739_tokens);;
	if ((_77317_parts == nullptr)) {
		return _76817_lit;
	};
	_76817_lit.get()._field_exprs=jule::Slice<jule::Ptr<_1e43659e0_Expr>>::alloc(0LL,_77317_parts.len());
	{
		auto &expr = _77317_parts;
		auto it = expr.begin();
		_iter_begin_1cc74628e:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _77921_part = *it;
			{
				_76817_lit.get()._field_exprs = jule::alloc_for_append(_76817_lit.get()._field_exprs,1);_76817_lit.get()._field_exprs.__push(_1c9cec947_build_brace_lit_part(&(*_self_), _77921_part));;
			}
			_iter_next_1cc74628e:;
			++it;
			goto _iter_begin_1cc74628e;
		}
		_iter_end_1cc74628e:;
	};
	return _76817_lit;
}



inline jule::Any _1c9ced063_build_brace_range(_1c9ce5b93_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _78641_tokens) {
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _78718_expr_tokens;;
	jule::I64 _78731_range_n;;
	std::tie(_78718_expr_tokens,_78731_range_n) = _1c9ce5962_get_range_expr_tokens(_78641_tokens);
	{
		
		if ((_78718_expr_tokens.len() == 0LL)) {
			_case_begin_1cc7485c1:;
			{
				return jule::Any(_1c9cecc55_build_brace_lit(&(*_self_), _78641_tokens));
			}
		}
		else if ((_78731_range_n > 0LL)) {
			_case_begin_1cc748648:;
			{
				_1c9ce648a_push_err(&(*_self_), _78641_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1cc748516:;
	};
	jule::Ptr<_20cd9e6ec_Token> _79813_else_token = _78718_expr_tokens[(_78718_expr_tokens.len() - 1LL)];;
	if ((_78718_expr_tokens[(_78718_expr_tokens.len() - 1LL)].get()._field_id == static_cast<jule::U64>(17LLU))) {
		_78718_expr_tokens=_78718_expr_tokens.slice(0LL,(_78718_expr_tokens.len() - 1LL));
		jule::Any _80121_d = _1c9ceee55_build(&(*_self_), _78718_expr_tokens);;
		if ((_80121_d == nullptr)) {
			return nullptr;
		};
		{
			auto &_match_expr{ _80121_d };
			
			if (_match_expr.type_is<jule::Ptr<_1e43699b1_FnCallExpr>>()) {
				_case_begin_1cc74c5d6:;
				{
					_78641_tokens=_78641_tokens.slice((_78718_expr_tokens.len() + 1LL));
					jule::I64 _80825_i = 0LL;;
					jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _80925_range_tokens = _1c9d02b17_range(_80825_i,jule::Str("{", 1),jule::Str("}", 1),_78641_tokens);;
					jule::Ptr<_1e43699b1_FnCallExpr> _81025_model = _80121_d.operator jule::Ptr<_1e43699b1_FnCallExpr>();;
					if (_1e436a198_ignored(_81025_model.ptr())) {
						_1c9ce648a_push_err(&(*_self_), _79813_else_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1c9ce67a9_push_suggestion(&(*_self_), jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72),jule::Slice<jule::Any>());
					};
					_81025_model.get()._field_exception=_1c9d05ec2_build_scope((*_self_)._field_p, _80925_range_tokens,_78641_tokens[(_80825_i - 1LL)]);
					return jule::Any(_80121_d);
				}
			}
			else {
				_case_begin_1cc74b86b:;
				{
					_1c9ce648a_push_err(&(*_self_), _78718_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;
				}
			}
			_match_end_1cc74b816:;
		};
	};
	{
		auto &_match_expr{ _78718_expr_tokens[0LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1cc752531:;
			{
				return jule::Any(_1c9ceb1b5_build_unsafe(&(*_self_), _78641_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1cc752432:;
			{
				return jule::Any(_1c9ceada7_build_anon_fn(&(*_self_), _78641_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1cc752498:;
			{
				return jule::Any(_1c9cec628_build_typed_struct_literal(&(*_self_), _78641_tokens));
			}
		}
		else {
			_case_begin_1cc74844a:;
			{
				_1c9ce648a_push_err(&(*_self_), _78718_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1cc74a6a0:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>> _1c9ced371_get_enumerable_parts(_1c9ce5b93_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _83843_tokens) {
	_83843_tokens=_83843_tokens.slice(1LL,(_83843_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>> _84018_parts;;
	jule::Slice<_20ca8ec5b_Log> _84025_errors;;
	std::tie(_84018_parts,_84025_errors) = _1c9d032dd_parts(_83843_tokens,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_84025_errors);
	return _84018_parts;
}



inline jule::Ptr<_1e436be69_SliceExpr> _1c9ced67e_build_slice(_1c9ce5b93_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _84534_tokens) {
	jule::Ptr<_1e436be69_SliceExpr> _84617_slc = jule::new_ptr<_1e436be69_SliceExpr>(_1e436be69_SliceExpr{._field_token=_84534_tokens[0LL], ._field_end=_84534_tokens[(_84534_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>> _85117_parts = _1c9ced371_get_enumerable_parts(&(*_self_), _84534_tokens);;
	if ((_85117_parts.len() == 0LL)) {
		return _84617_slc;
	};
	_84617_slc.get()._field_exprs=jule::Slice<jule::Ptr<_1e43659e0_Expr>>::alloc(0LL,_85117_parts.len());
	{
		auto &expr = _85117_parts;
		auto it = expr.begin();
		_iter_begin_1cc757e93:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _85721_p = *it;
			{
				if ((_85721_p.len() == 0LL)) {
					goto _iter_next_1cc757e93;
				};
				_84617_slc.get()._field_exprs = jule::alloc_for_append(_84617_slc.get()._field_exprs,1);_84617_slc.get()._field_exprs.__push(_1c9d00571_build_from_tokens(&(*_self_), _85721_p));;
			}
			_iter_next_1cc757e93:;
			++it;
			goto _iter_begin_1cc757e93;
		}
		_iter_end_1cc757e93:;
	};
	return _84617_slc;
}



inline jule::Ptr<_1e436ca4c_IndexingExpr> _1c9cedad0_build_indexing(_1c9ce5b93_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _86737_expr_tokens, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _86813_tokens, jule::Ptr<_20cd9e6ec_Token> _86835_error_token) {
	jule::Ptr<_20cd9e6ec_Token> _86917_end = _86813_tokens[(_86813_tokens.len() - 1LL)];;
	_86813_tokens=_86813_tokens.slice(1LL,(_86813_tokens.len() - 1LL));
	if ((_86813_tokens.len() == 0LL)) {
		_1c9ce648a_push_err(&(*_self_), _86835_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e43659e0_Expr> _87517_expr = _1c9d00571_build_from_tokens(&(*_self_), _86737_expr_tokens);;
	if ((_87517_expr == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1e43659e0_Expr> _87917_index = _1c9d00571_build_from_tokens(&(*_self_), _86813_tokens);;
	if ((_87917_index == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1e436ca4c_IndexingExpr>(_1e436ca4c_IndexingExpr{._field_token=_86835_error_token, ._field_end=_86917_end, ._field_expr=_87517_expr, ._field_index=_87917_index});
}



inline jule::Ptr<_1e436d157_SlicingExpr> _1c9cee174_build_slicing(_1c9ce5b93_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _89137_expr_tokens, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _89165_slicing_tokens, jule::I64& _89210_colon, jule::Ptr<_20cd9e6ec_Token>& _89227_error_token, jule::Ptr<_20cd9e6ec_Token> _89252_end) {
	jule::Ptr<_1e436d157_SlicingExpr> _89317_slc = jule::new_ptr<_1e436d157_SlicingExpr>(_1e436d157_SlicingExpr{._field_token=_89227_error_token, ._field_end=_89252_end, ._field_expr=_1c9d00571_build_from_tokens(&(*_self_), _89137_expr_tokens), });;
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _89917_start_expr_tokens = _89165_slicing_tokens.slice(0LL,_89210_colon);;
	if ((_89917_start_expr_tokens.len() > 0LL)) {
		_89317_slc.get()._field_start=_1c9d00571_build_from_tokens(&(*_self_), _89917_start_expr_tokens);
	};
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _90417_to_expr_tokens = _89165_slicing_tokens.slice((_89210_colon + 1LL));;
	if ((_90417_to_expr_tokens.len() > 0LL)) {
		_89317_slc.get()._field_to=_1c9d00571_build_from_tokens(&(*_self_), _90417_to_expr_tokens);
	};
	return _89317_slc;
}



inline jule::Any _1c9cee482_build_bracket_range(_1c9ce5b93_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _91242_tokens) {
	jule::Ptr<_20cd9e6ec_Token> _91317_error_token = _91242_tokens[0LL];;
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _91418_expr_tokens;;
	jule::I64 _91431_range_n;;
	std::tie(_91418_expr_tokens,_91431_range_n) = _1c9ce5962_get_range_expr_tokens(_91242_tokens);
	{
		
		if ((_91418_expr_tokens.len() == 0LL)) {
			_case_begin_1cc763e6b:;
			{
				return jule::Any(_1c9ced67e_build_slice(&(*_self_), _91242_tokens));
			}
		}
		else if (((_91418_expr_tokens.len() == 0LL) || (_91431_range_n > 0LL))) {
			_case_begin_1cc763ee3:;
			{
				_1c9ce648a_push_err(&(*_self_), _91317_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1cc763db1:;
	};
	_91242_tokens=_91242_tokens.slice(_91418_expr_tokens.len());
	jule::I64 _93217_i = 0LL;;
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _93318_slicing_tokens;;
	jule::I64 _93334_colon;;
	std::tie(_93318_slicing_tokens,_93334_colon) = _1c9d1481b_split_map_range(_91242_tokens,_93217_i);
	if ((_93334_colon != -1LL)) {
		return jule::Any(_1c9cee174_build_slicing(&(*_self_), _91418_expr_tokens,_93318_slicing_tokens,_93334_colon,_91317_error_token,_91242_tokens[(_91242_tokens.len() - 1LL)]));
	};
	return jule::Any(_1c9cedad0_build_indexing(&(*_self_), _91418_expr_tokens,_91242_tokens,_91317_error_token));
}



inline jule::Any _1c9cee790_build_data(_1c9ce5b93_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _94034_tokens) {
	{
		auto _match_expr{ _94034_tokens.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1cc768745:;
			{
				return nullptr;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1cc7687ab:;
			{
				return jule::Any(_1c9ce74e1_build_single(&(*_self_), _94034_tokens[0LL]));
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1cc768822:;
			{
				if ((_94034_tokens[0LL].get()._field_id == static_cast<jule::U64>(31LLU))) {
					return jule::Any(_1c9ce77ee_build_cpp_linked_ident(&(*_self_), _94034_tokens));
				};
			}
		}
		_match_end_1cc768536:;
	};
	jule::Ptr<_20cd9e6ec_Token> _95217_token = _94034_tokens[(_94034_tokens.len() - 1LL)];;
	if (((_95217_token.get()._field_id == static_cast<jule::U64>(7LLU)) && (_95217_token.get()._field_kind == jule::Str("...", 3)))) {
		return jule::Any(_1c9ce8b52_build_variadic(&(*_self_), _94034_tokens));
	};
	_95217_token=_94034_tokens[0LL];
	{
		auto &_match_expr{ _95217_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1cc76bb44:;
			{
				if (((_94034_tokens.len() > 1LL) && (_95217_token.get()._field_kind == jule::Str("*", 1)))) {
					_95217_token=_94034_tokens[1LL];
					if (((_95217_token.get()._field_id == static_cast<jule::U64>(1LLU)) || (_95217_token.get()._field_id == static_cast<jule::U64>(35LLU)))) {
						return jule::Any(_1c9ce8536_build_type(&(*_self_), _94034_tokens));
					};
				};
				return jule::Any(_1c9ce7b0c_build_unary(&(*_self_), _94034_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1cc76bbee:;
			{
				if ((_94034_tokens.len() < 3LL)) {
					goto _match_end_1cc76bade;
				};
				if ((_94034_tokens.len() > 3LL)) {
					jule::Ptr<_20cd9e6ec_Token> _97521_t = _94034_tokens[(_94034_tokens.len() - 1LL)];;
					if (((_97521_t.get()._field_id == static_cast<jule::U64>(3LLU)) && (_97521_t.get()._field_kind == jule::Str(")", 1)))) {
						goto _match_end_1cc76bade;
					};
				};
				jule::Ptr<_20cd9e6ec_Token> _98117_next = _94034_tokens[1LL];;
				if (((_98117_next.get()._field_id != static_cast<jule::U64>(3LLU)) || (_98117_next.get()._field_kind != jule::Str("]", 1)))) {
					goto _match_end_1cc76bade;
				};
				return jule::Any(_1c9ce8536_build_type(&(*_self_), _94034_tokens));
			}
		}
		_match_end_1cc76bade:;
	};
	_95217_token=_94034_tokens[(_94034_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _95217_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1cc76bc65:;
			{
				return jule::Any(_1c9ce8844_build_sub_ident(&(*_self_), _94034_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1cc76c21b:;
			{
				return jule::Any(_1c9ce8536_build_type(&(*_self_), _94034_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1cc7726c7:;
			{
				return jule::Any(_1c9ce8e60_build_op_right(&(*_self_), _94034_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1cc77273d:;
			{
				{
					auto &_match_expr{ _95217_token.get()._field_kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1cc774234:;
						{
							return jule::Any(_1c9cea77a_build_parentheses_range(&(*_self_), _94034_tokens));
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1cc77429a:;
						{
							return jule::Any(_1c9ced063_build_brace_range(&(*_self_), _94034_tokens));
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1cc774399:;
						{
							return jule::Any(_1c9cee482_build_bracket_range(&(*_self_), _94034_tokens));
						}
					}
					_match_end_1cc773bd4:;
				};
			}
		}
		_match_end_1cc76c1b6:;
	};
	_1c9ce648a_push_err(&(*_self_), _95217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1e43693a6_BinopExpr> _1c9ceeb47_build_binop(_1c9ce5b93_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _101235_tokens, jule::I64 _101253_i) {
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _101317_left_tokens = _101235_tokens.slice(0LL,_101253_i);;
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _101417_right_tokens = _101235_tokens.slice((_101253_i + 1LL));;
	if ((_101317_left_tokens.len() == 0LL)) {
		_1c9ce648a_push_err(&(*_self_), _101235_tokens[_101253_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c9ce67a9_push_suggestion(&(*_self_), jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_101417_right_tokens.len() == 0LL)) {
		_1c9ce648a_push_err(&(*_self_), _101235_tokens[_101253_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c9ce67a9_push_suggestion(&(*_self_), jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1e43693a6_BinopExpr>(_1e43693a6_BinopExpr{._field_left=_1c9d00571_build_from_tokens(&(*_self_), _101317_left_tokens), ._field_right=_1c9d00571_build_from_tokens(&(*_self_), _101417_right_tokens), ._field_op=_101235_tokens[_101253_i]});
}



inline jule::Any _1c9ceee55_build(_1c9ce5b93_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _103229_tokens) {
	jule::I64 _103313_i = _1c9ce5423_find_lowest_prec_op(_103229_tokens);;
	if ((_103313_i == -1LL)) {
		return jule::Any(_1c9cee790_build_data(&(*_self_), _103229_tokens));
	};
	return jule::Any(_1c9ceeb47_build_binop(&(*_self_), _103229_tokens,_103313_i));
}



inline jule::Any _1c9d00263_build_kind(_1c9ce5b93_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _104034_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>> _104118_parts;;
	jule::Slice<_20ca8ec5b_Log> _104125_errors;;
	std::tie(_104118_parts,_104125_errors) = _1c9d032dd_parts(_104034_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_104125_errors != nullptr)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_104125_errors);
		return nullptr;
	} else if ((_104118_parts.len() > 1LL)) {
		return jule::Any(_1c9ce6ab7_build_tuple(&(*_self_), _104118_parts));
	};
	return jule::Any(_1c9ceee55_build(&(*_self_), _104034_tokens));
}



inline jule::Ptr<_1e43659e0_Expr> _1c9d00571_build_from_tokens(_1c9ce5b93_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _105140_tokens) {
	if ((_105140_tokens.len() == 0LL)) {
		return nullptr;
	};
	return jule::new_ptr<_1e43659e0_Expr>(_1e43659e0_Expr{._field_token=_105140_tokens[0LL], ._field_end=_105140_tokens[(_105140_tokens.len() - 1LL)], ._field_kind=jule::Any(_1c9d00263_build_kind(&(*_self_), _105140_tokens))});
}







std::ostream &operator<<(std::ostream &_Stream, _1c9ce5b93_ExprBuilder _Src) {
	_Stream << "ExprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c9d00ebc_AssignInfo _Src) {
	_Stream << "AssignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1c9d0482d_stop(_1c9d044ed_Parser* _self_) {
	(*_self_)._field_ast=nullptr;
}



inline jule::Bool _1c9d04a92_stopped(_1c9d044ed_Parser* _self_) {
	return ((*_self_)._field_ast == nullptr);
}



inline void _1c9d04e5a_push_err(_1c9d044ed_Parser* _self_, jule::Ptr<_20cd9e6ec_Token> _23327_token, jule::Str _23342_fmt, jule::Slice<jule::Any> _23355_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1c9d039a3_compiler_err(_23327_token,_23342_fmt,jule::Any(_23355_args)));;
}



inline void _1c9d05279_push_suggestion(_1c9d044ed_Parser* _self_, jule::Str _23834_fmt, jule::Slice<jule::Any> _23847_args) {
	{
		_1c9d03d05_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_23834_fmt,jule::Any(_23847_args));
	};
}



inline jule::Ptr<_1e43659e0_Expr> _1c9d05587_build_expr(jule::Ptr<_1c9d044ed_Parser> _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _24235_tokens) {
	jule::Ptr<_1c9ce5b93_ExprBuilder> _24317_ep = jule::new_ptr<_1c9ce5b93_ExprBuilder>(_1c9ce5b93_ExprBuilder{._field_p=_self_});;
	jule::Ptr<_1e43659e0_Expr> _24617_expr = _1c9d00571_build_from_tokens(_24317_ep.ptr(), _24235_tokens);;
	return _24617_expr;
}



inline jule::Ptr<_1e43620c4_Directive> _1c9d05895_build_directive(_1c9d044ed_Parser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _25038_tokens) {
	if ((_25038_tokens.len() == 1LL)) {
		_1c9d04e5a_push_err(&(*_self_), _25038_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_25038_tokens[1LL].get()._field_column != (_25038_tokens[0LL].get()._field_column + 1LL))) {
		_1c9d04e5a_push_err(&(*_self_), _25038_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1e43620c4_Directive>(_1e43620c4_Directive{._field_tag=_25038_tokens[1LL], ._field_args=_25038_tokens.slice(2LL)});
}



inline void _1c9d05b1a_push_directive(_1c9d044ed_Parser* _self_, jule::Ptr<_1e43620c4_Directive> _26737_d) {
	if ((_26737_d == nullptr)) {
		return;;
	};
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_1cc788d4d:;
		if (it != expr.end()) {
			jule::Ptr<_1e43620c4_Directive> _27316_pd = *it;
			{
				if ((_26737_d.get()._field_tag.get()._field_kind == _27316_pd.get()._field_tag.get()._field_kind)) {
					return;;
				};
			}
			_iter_next_1cc788d4d:;
			++it;
			goto _iter_begin_1cc788d4d;
		}
		_iter_end_1cc788d4d:;
	};
	(*_self_)._field_directives = jule::alloc_for_append((*_self_)._field_directives,1);(*_self_)._field_directives.__push(_26737_d);;
}



inline jule::Ptr<_1e43702ad_ScopeTree> _1c9d05ec2_build_scope(jule::Ptr<_1c9d044ed_Parser> _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _28136_tokens, jule::Ptr<_20cd9e6ec_Token> _28158_end) {
	jule::Ptr<_1e43702ad_ScopeTree> _28217_s = _1c9cd6425_new_scope();;
	_28217_s.get()._field_end=_28158_end;
	_1c9cd7d72_ScopeParser _28417_sp = _1c9cd7d72_ScopeParser{._field_p=_self_, };;
	_1c9ce3894_build(&_28417_sp, _28136_tokens,_28217_s);
	return _28217_s;
}



inline std::tuple<jule::Ptr<_1e436257a_TypeDecl>,jule::Bool> _1c9d06423___build_type(jule::Ptr<_1c9d044ed_Parser> _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _29144_tokens, jule::I64* _29213_i, jule::Bool _29222_err) {
	_1c9d14ce4_TypeBuilder _29317_tb = _1c9d14ce4_TypeBuilder{._field_p=_self_, ._field_tokens=_29144_tokens, ._field_i=_29213_i, ._field_err=_29222_err};;
	jule::Ptr<_1e436257a_TypeDecl> _29918_decl;;
	jule::Bool _29924_ok;;
	std::tie(_29918_decl,_29924_ok) = _1c9d181d2_build(&_29317_tb);
	return std::make_tuple(_29918_decl,_29924_ok);
}



inline std::tuple<jule::Ptr<_1e436257a_TypeDecl>,jule::Bool> _1c9d06874_build_type(jule::Ptr<_1c9d044ed_Parser> _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _30442_tokens, jule::I64* _30513_i, jule::Bool _30522_err) {
	jule::Ptr<_20cd9e6ec_Token> _30613_token = _30442_tokens[(*(_30513_i))];;
	jule::Ptr<_1e436257a_TypeDecl> _30718_t;;
	jule::Bool _30721_ok;;
	std::tie(_30718_t,_30721_ok) = _1c9d06423___build_type(_self_, _30442_tokens,_30513_i,_30522_err);
	if ((_30522_err && (!(_30721_ok)))) {
		_1c9d04e5a_push_err(_self_.ptr(), _30613_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	};
	return std::make_tuple(_30718_t,_30721_ok);
}



inline jule::Ptr<_1e4376506_TypeAliasDecl> _1c9d06b82_build_type_alias_decl(jule::Ptr<_1c9d044ed_Parser> _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _31446_tokens) {
	jule::I64 _31517_i = 1LL;;
	if ((_31517_i >= _31446_tokens.len())) {
		_1c9d04e5a_push_err(_self_.ptr(), _31446_tokens[(_31517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e4376506_TypeAliasDecl> _32017_tad = jule::new_ptr<_1e4376506_TypeAliasDecl>(_1e4376506_TypeAliasDecl{._field_token=_31446_tokens[1LL], ._field_ident=_31446_tokens[1LL].get()._field_kind, });;
	jule::Ptr<_20cd9e6ec_Token> _32417_token = _31446_tokens[_31517_i];;
	if ((_32417_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1c9d04e5a_push_err(_self_.ptr(), _32417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c9d05279_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_31517_i)++;
	if ((_31517_i >= _31446_tokens.len())) {
		_1c9d04e5a_push_err(_self_.ptr(), _31446_tokens[(_31517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _32017_tad;
	};
	_32417_token=_31446_tokens[_31517_i];
	if ((_32417_token.get()._field_id != static_cast<jule::U64>(11LLU))) {
		_1c9d04e5a_push_err(_self_.ptr(), _31446_tokens[(_31517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c9d05279_push_suggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>());
		return _32017_tad;
	};
	(_31517_i)++;
	if ((_31517_i >= _31446_tokens.len())) {
		_1c9d04e5a_push_err(_self_.ptr(), _31446_tokens[(_31517_i - 1LL)],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return _32017_tad;
	};
	jule::Ptr<_1e436257a_TypeDecl> _34518_t;;
	jule::Bool _34521_ok;;
	std::tie(_34518_t,_34521_ok) = _1c9d06874_build_type(_self_, _31446_tokens,(&(_31517_i)),true);
	_32017_tad.get()._field_kind=_34518_t;
	if ((_34521_ok && (_31517_i < _31446_tokens.len()))) {
		_1c9d04e5a_push_err(_self_.ptr(), _31446_tokens[_31517_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _32017_tad;
}



inline void _1c9d06ec3_build_var_type_and_expr(jule::Ptr<_1c9d044ed_Parser> _self_, jule::Ptr<_1e4372c83_VarDecl>& _35348_v, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _35366_tokens) {
	jule::I64 _35417_i = 0LL;;
	jule::Ptr<_20cd9e6ec_Token> _35517_tok = _35366_tokens[_35417_i];;
	if ((_35517_tok.get()._field_id == static_cast<jule::U64>(11LLU))) {
		(_35417_i)++;
		if (((_35417_i >= _35366_tokens.len()) || ((_35366_tokens[_35417_i].get()._field_id == static_cast<jule::U64>(7LLU)) && (_35366_tokens[_35417_i].get()._field_kind == jule::Str("=", 1))))) {
			_1c9d04e5a_push_err(_self_.ptr(), _35517_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1e436257a_TypeDecl> _36322_t;;
		jule::Bool _36325_ok;;
		std::tie(_36322_t,_36325_ok) = _1c9d06874_build_type(_self_, _35366_tokens,(&(_35417_i)),true);
		if (_36325_ok) {
			_35348_v.get()._field_kind=_36322_t;
			if ((_35417_i >= _35366_tokens.len())) {
				return;;
			};
			_35517_tok=_35366_tokens[_35417_i];
		};
	};
	if ((_35517_tok.get()._field_id == static_cast<jule::U64>(7LLU))) {
		if ((_35517_tok.get()._field_kind != jule::Str("=", 1))) {
			_1c9d04e5a_push_err(_self_.ptr(), _35517_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;;
		};
		jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _37821_expr_tokens = _35366_tokens.slice((_35417_i + 1LL));;
		if ((_37821_expr_tokens.len() == 0LL)) {
			_1c9d04e5a_push_err(_self_.ptr(), _35517_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return;;
		};
		_35348_v.get()._field_expr=_1c9d05587_build_expr(_self_, _37821_expr_tokens);
	} else {
		_1c9d04e5a_push_err(_self_.ptr(), _35517_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1c9d07303_build_var_common(jule::Ptr<_1c9d044ed_Parser> _self_, jule::Ptr<_1e4372c83_VarDecl>& _38941_v, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _38958_tokens) {
	_38941_v.get()._field_token=_38958_tokens[0LL];
	if ((_38941_v.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1c9d04e5a_push_err(_self_.ptr(), _38941_v.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c9d05279_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	_38941_v.get()._field_ident=_38941_v.get()._field_token.get()._field_kind;
	_38941_v.get()._field_kind=nullptr;
	if ((_38958_tokens.len() > 1LL)) {
		_38958_tokens=_38958_tokens.slice(1LL);
		_1c9d06ec3_build_var_type_and_expr(_self_, _38941_v,_38958_tokens);
	};
}



inline void _1c9d076bb_build_var_begin(_1c9d044ed_Parser* _self_, jule::Ptr<_1e4372c83_VarDecl>& _40439_v, jule::Ptr<jule::I64> _40456_i, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _40466_tokens) {
	jule::Ptr<_20cd9e6ec_Token> _40513_tok = _40466_tokens[(*(_40456_i))];;
	{
		auto &_match_expr{ _40513_tok.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1cc7a7c4b:;
			{
				_40439_v.get()._field_statically=true;
				goto _case_begin_1cc7a7cb2;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1cc7a7cb2:;
			{
				((*(_40456_i)))++;
				if (((*(_40456_i)) >= _40466_tokens.len())) {
					_1c9d04e5a_push_err(&(*_self_), _40513_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				if ((_40466_tokens[(*(_40456_i))].get()._field_id == static_cast<jule::U64>(36LLU))) {
					_40439_v.get()._field_mutable=true;
					((*(_40456_i)))++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1cc7a7355:;
			{
				((*(_40456_i)))++;
				_40439_v.get()._field_constant=true;
			}
		}
		else {
			_case_begin_1cc7a6c17:;
			{
				_1c9d04e5a_push_err(&(*_self_), _40513_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1cc7a7201:;
	};
	if (((*(_40456_i)) >= _40466_tokens.len())) {
		_1c9d04e5a_push_err(&(*_self_), _40513_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1e4372c83_VarDecl> _1c9d079c9_build_var(jule::Ptr<_1c9d044ed_Parser> _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _43533_tokens) {
	jule::Ptr<jule::I64> _43617_i = jule::new_ptr<jule::I64>(0LL);;
	jule::Ptr<_1e4372c83_VarDecl> _43717_v = jule::new_ptr<_1e4372c83_VarDecl>(_1e4372c83_VarDecl{._field_token=_43533_tokens[(*(_43617_i))], });;
	_1c9d076bb_build_var_begin(_self_.ptr(), _43717_v,_43617_i,_43533_tokens);
	if (((*(_43617_i)) >= _43533_tokens.len())) {
		return nullptr;
	};
	_43533_tokens=_43533_tokens.slice((*(_43617_i)));
	if (((_43533_tokens[0LL].get()._field_id == static_cast<jule::U64>(7LLU)) && (_43533_tokens[0LL].get()._field_kind == jule::Str("&", 1)))) {
		_43717_v.get()._field_reference=true;
		if ((_43533_tokens.len() == 1LL)) {
			return nullptr;
		};
		_43533_tokens=_43533_tokens.slice(1LL);
	};
	_1c9d07303_build_var_common(_self_, _43717_v,_43533_tokens);
	return _43717_v;
}



inline jule::Ptr<_1e436d50e_GenericDecl> _1c9d07cd7_build_generic(_1c9d044ed_Parser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _45737_tokens) {
	if ((_45737_tokens.len() > 1LL)) {
		_1c9d04e5a_push_err(&(*_self_), _45737_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e436d50e_GenericDecl> _46117_g = jule::new_ptr<_1e436d50e_GenericDecl>(_1e436d50e_GenericDecl{._field_token=_45737_tokens[0LL], });;
	if ((_46117_g.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1c9d04e5a_push_err(&(*_self_), _46117_g.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c9d05279_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_46117_g.get()._field_ident=_46117_g.get()._field_token.get()._field_kind;
	return _46117_g;
}



inline jule::Slice<jule::Ptr<_1e436d50e_GenericDecl>> _1c9d0818e_build_generics(_1c9d044ed_Parser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _47238_tokens, jule::Ptr<_20cd9e6ec_Token>& _47257_error_token) {
	if ((_47238_tokens.len() == 0LL)) {
		_1c9d04e5a_push_err(&(*_self_), _47257_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>> _47818_parts;;
	jule::Slice<_20ca8ec5b_Log> _47825_errors;;
	std::tie(_47818_parts,_47825_errors) = _1c9d032dd_parts(_47238_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_47825_errors.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_47825_errors);
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1e436d50e_GenericDecl>> _48417_generics = jule::Slice<jule::Ptr<_1e436d50e_GenericDecl>>::alloc(0LL,_47818_parts.len());;
	{
		auto &expr = _47818_parts;
		auto it = expr.begin();
		_iter_begin_1cc7b65b7:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _48521_part = *it;
			{
				_48417_generics = jule::alloc_for_append(_48417_generics,1);_48417_generics.__push(_1c9d07cd7_build_generic(&(*_self_), _48521_part));;
			}
			_iter_next_1cc7b65b7:;
			++it;
			goto _iter_begin_1cc7b65b7;
		}
		_iter_end_1cc7b65b7:;
	};
	return _48417_generics;
}



inline jule::Ptr<_1e4370984_ParamDecl> _1c9d0849c_build_self_param(_1c9d044ed_Parser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _49239_tokens) {
	if ((_49239_tokens.len() == 0LL)) {
		return nullptr;
	};
	jule::Ptr<_1e4370984_ParamDecl> _49717_param = jule::new_ptr<_1e4370984_ParamDecl>();;
	jule::I64 _50017_i = 0LL;;
	if ((_49239_tokens[_50017_i].get()._field_id == static_cast<jule::U64>(36LLU))) {
		_49717_param.get()._field_mutable=true;
		(_50017_i)++;
		if ((_50017_i >= _49239_tokens.len())) {
			_1c9d04e5a_push_err(&(*_self_), _49239_tokens[(_50017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	if ((_49239_tokens[_50017_i].get()._field_kind == jule::Str("&", 1))) {
		_49717_param.get()._field_ident=jule::Str("&", 1);
		(_50017_i)++;
		if ((_50017_i >= _49239_tokens.len())) {
			_1c9d04e5a_push_err(&(*_self_), _49239_tokens[(_50017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	if ((_49239_tokens[_50017_i].get()._field_id == static_cast<jule::U64>(28LLU))) {
		_49717_param.get()._field_ident+=jule::Str("self", 4);
		_49717_param.get()._field_token=_49239_tokens[_50017_i];
		(_50017_i)++;
		if ((_50017_i < _49239_tokens.len())) {
			_1c9d04e5a_push_err(&(*_self_), _49239_tokens[_50017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	};
	return _49717_param;
}



inline void _1c9d08865_param_type_begin(_1c9d044ed_Parser* _self_, jule::Ptr<_1e4370984_ParamDecl>& _53140_param, jule::I64& _53164_i, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _53173_tokens) {
	for (; (_53164_i < _53173_tokens.len()); (_53164_i)++) {
		{
			jule::Ptr<_20cd9e6ec_Token> _53317_token = _53173_tokens[_53164_i];;
			if ((_53317_token.get()._field_id != static_cast<jule::U64>(7LLU))) {
				return;;
			} else if ((_53317_token.get()._field_kind != jule::Str("...", 3))) {
				return;;
			};
			if (_53140_param.get()._field_variadic) {
				_1c9d04e5a_push_err(&(*_self_), _53317_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>());
				goto _iter_next_1cc7bd7cd;
			};
			_53140_param.get()._field_variadic=true;
		}
	_iter_next_1cc7bd7cd:;
	}
	_iter_end_1cc7bd7cd:;;
}



inline void _1c9d08b84_build_param_type(jule::Ptr<_1c9d044ed_Parser> _self_, jule::Ptr<_1e4370984_ParamDecl>& _54841_param, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _54865_tokens) {
	jule::I64 _54917_i = 0LL;;
	_1c9d08865_param_type_begin(_self_.ptr(), _54841_param,_54917_i,_54865_tokens);
	if ((_54917_i >= _54865_tokens.len())) {
		return;;
	};
	std::tie(_54841_param.get()._field_kind,std::ignore) = _1c9d06874_build_type(_self_, _54865_tokens,(&(_54917_i)),true);
	if ((_54917_i < _54865_tokens.len())) {
		_1c9d04e5a_push_err(_self_.ptr(), _54865_tokens[_54917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1c9d0904c_build_param_body(jule::Ptr<_1c9d044ed_Parser> _self_, jule::Ptr<_1e4370984_ParamDecl>& _56141_param, jule::Ptr<jule::I64> _56164_i, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _56177_tokens) {
	jule::Ptr<_20cd9e6ec_Token> _56217_tok = _56177_tokens[(*(_56164_i))];;
	_56141_param.get()._field_ident=_56217_tok.get()._field_kind;
	if ((((*(_56164_i)) + 1LL) >= _56177_tokens.len())) {
		return;;
	} else if ((((_56177_tokens.len() - (*(_56164_i))) - 1LL) < 2LL)) {
		_1c9d04e5a_push_err(_self_.ptr(), _56217_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return;;
	};
	_56217_tok=_56177_tokens[((*(_56164_i)) + 1LL)];
	if ((_56217_tok.get()._field_id != static_cast<jule::U64>(11LLU))) {
		_1c9d08b84_build_param_type(_self_, _56141_param,_56177_tokens);
		return;;
	};
	_56177_tokens=_56177_tokens.slice(((*(_56164_i)) + 2LL));
	_1c9d08b84_build_param_type(_self_, _56141_param,_56177_tokens);
}



inline jule::Ptr<_1e4370984_ParamDecl> _1c9d0935a_build_param(jule::Ptr<_1c9d044ed_Parser> _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _58235_tokens) {
	jule::Ptr<_1e4370984_ParamDecl> _58317_param = jule::new_ptr<_1e4370984_ParamDecl>(_1e4370984_ParamDecl{._field_token=_58235_tokens[0LL], });;
	if ((_58317_param.get()._field_token.get()._field_id == static_cast<jule::U64>(36LLU))) {
		_58317_param.get()._field_mutable=true;
		if ((_58235_tokens.len() == 1LL)) {
			_1c9d04e5a_push_err(_self_.ptr(), _58235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_58235_tokens=_58235_tokens.slice(1LL);
		_58317_param.get()._field_token=_58235_tokens[0LL];
	};
	if ((_58235_tokens.len() >= 3LL)) {
		if (((_58317_param.get()._field_token.get()._field_id == static_cast<jule::U64>(7LLU)) && (_58317_param.get()._field_token.get()._field_kind == jule::Str("&", 1)))) {
			if ((_58235_tokens.len() == 1LL)) {
				_1c9d04e5a_push_err(_self_.ptr(), _58235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			};
			if (((_58235_tokens[1LL].get()._field_id == static_cast<jule::U64>(2LLU)) && (_58235_tokens[2LL].get()._field_id == static_cast<jule::U64>(11LLU)))) {
				_58317_param.get()._field_reference=true;
				_58235_tokens=_58235_tokens.slice(1LL);
				_58317_param.get()._field_token=_58235_tokens[0LL];
			};
		};
	};
	if ((_58317_param.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_58317_param.get()._field_ident=jule::Str("<anonymous>", 11);
		_1c9d08b84_build_param_type(_self_, _58317_param,_58235_tokens);
	} else {
		jule::Ptr<jule::I64> _61921_i = jule::new_ptr<jule::I64>(0LL);;
		_1c9d0904c_build_param_body(_self_, _58317_param,_61921_i,_58235_tokens);
	};
	return _58317_param;
}



inline void _1c9d095d0_check_params(_1c9d044ed_Parser* _self_, jule::Slice<jule::Ptr<_1e4370984_ParamDecl>>& _62636_params) {
	{
		auto &expr = _62636_params;
		auto it = expr.begin();
		_iter_begin_1cc7d1989:;
		if (it != expr.end()) {
			jule::Ptr<_1e4370984_ParamDecl> _62721_param = *it;
			{
				if ((_1e4370ce7_is_self(_62721_param.ptr()) || (_62721_param.get()._field_kind != nullptr))) {
					goto _iter_next_1cc7d1989;
				};
				if ((_62721_param.get()._field_token == nullptr)) {
					_1c9d04e5a_push_err(&(*_self_), _62721_param.get()._field_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
				} else {
					_62721_param.get()._field_kind=jule::new_ptr<_1e436257a_TypeDecl>(_1e436257a_TypeDecl{._field_token=_62721_param.get()._field_token, ._field_kind=jule::Any(jule::new_ptr<_1e4362b0d_IdentTypeDecl>(_1e4362b0d_IdentTypeDecl{._field_token=_62721_param.get()._field_token, ._field_ident=_62721_param.get()._field_token.get()._field_kind, }))});
					_62721_param.get()._field_ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_1cc7d1989:;
			++it;
			goto _iter_begin_1cc7d1989;
		}
		_iter_end_1cc7d1989:;
	};
}



inline jule::Slice<jule::Ptr<_1e4370984_ParamDecl>> _1c9d09987_build_params(jule::Ptr<_1c9d044ed_Parser> _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _64637_tokens, jule::Bool _64655_method) {
	jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>> _64718_parts;;
	jule::Slice<_20ca8ec5b_Log> _64725_errs;;
	std::tie(_64718_parts,_64725_errs) = _1c9d032dd_parts(_64637_tokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_64725_errs);
	if ((_64718_parts.len() == 0LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1e4370984_ParamDecl>> _65317_params = nullptr;;
	if ((_64655_method && (_64718_parts.len() > 0LL))) {
		jule::Ptr<_1e4370984_ParamDecl> _65521_param = _1c9d0849c_build_self_param(_self_.ptr(), _64718_parts[0LL]);;
		if (((_65521_param != nullptr) && _1e4370ce7_is_self(_65521_param.ptr()))) {
			_65317_params = jule::alloc_for_append(_65317_params,1);_65317_params.__push(_65521_param);;
			_64718_parts=_64718_parts.slice(1LL);
		};
	};
	{
		auto &expr = _64718_parts;
		auto it = expr.begin();
		_iter_begin_1cc7d7ac2:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _66221_part = *it;
			{
				jule::Ptr<_1e4370984_ParamDecl> _66321_param = _1c9d0935a_build_param(_self_, _66221_part);;
				if ((_66321_param != nullptr)) {
					_65317_params = jule::alloc_for_append(_65317_params,1);_65317_params.__push(_66321_param);;
				};
			}
			_iter_next_1cc7d7ac2:;
			++it;
			goto _iter_begin_1cc7d7ac2;
		}
		_iter_end_1cc7d7ac2:;
	};
	_1c9d095d0_check_params(_self_.ptr(), _65317_params);
	return _65317_params;
}



inline std::tuple<jule::Ptr<_1e436535d_RetTypeDecl>,jule::Bool> _1c9d09d3e_build_multi_ret_type(jule::Ptr<_1c9d044ed_Parser> _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _67345_tokens, jule::I64& _67368_i) {
	jule::Ptr<_1e436535d_RetTypeDecl> _67378_t = jule::Ptr<_1e436535d_RetTypeDecl>();
	jule::Bool _67395_ok = jule::Bool();
	_67378_t=jule::new_ptr<_1e436535d_RetTypeDecl>();
	(_67368_i)++;
	if ((_67368_i >= _67345_tokens.len())) {
		(_67368_i)--;
		std::tie(_67378_t.get()._field_kind,_67395_ok) = _1c9d06874_build_type(_self_, _67345_tokens,(&(_67368_i)),false);
		return std::make_tuple(_67378_t,_67395_ok);
	};
	(_67368_i)--;
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _68317_range_tokens = _1c9d02b17_range(_67368_i,jule::Str("(", 1),jule::Str(")", 1),_67345_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>> _68518_parts;;
	jule::Slice<_20ca8ec5b_Log> _68525_errs;;
	std::tie(_68518_parts,_68525_errs) = _1c9d032dd_parts(_68317_range_tokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_68525_errs);
	if ((_68518_parts.len() == 0LL)) {
		return std::make_tuple(_67378_t,_67395_ok);
	};
	jule::Slice<jule::Ptr<_1e436257a_TypeDecl>> _69117_types = jule::Slice<jule::Ptr<_1e436257a_TypeDecl>>::alloc(0LL,_68518_parts.len());;
	_67378_t.get()._field_idents=jule::Slice<jule::Ptr<_20cd9e6ec_Token>>::alloc(0LL,_68518_parts.len());
	{
		auto &expr = _68518_parts;
		auto it = expr.begin();
		_iter_begin_1cc7deba6:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _69321_part = *it;
			{
				jule::Ptr<_20cd9e6ec_Token> _69421_token = _69321_part[0LL];;
				jule::I64 _69521_offset = 0LL;;
				if ((_69321_part.len() > 1LL)) {
					_69421_token=_69321_part[1LL];
					if ((_69421_token.get()._field_id == static_cast<jule::U64>(11LLU))) {
						_69521_offset=2LL;
						if ((_69321_part.len() < 3LL)) {
							_1c9d04e5a_push_err(_self_.ptr(), _69421_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
							goto _iter_next_1cc7deba6;
						};
					};
				};
				_69421_token=_69321_part[0LL];
				if ((_69521_offset != 2LL)) {
					jule::Ptr<_20cd9e6ec_Token> _71125_new_token = jule::new_ptr<_20cd9e6ec_Token>((*(_69421_token)));;
					_71125_new_token.get()._field_kind=jule::Str("<anonymous>", 11);
					_67378_t.get()._field_idents = jule::alloc_for_append(_67378_t.get()._field_idents,1);_67378_t.get()._field_idents.__push(_71125_new_token);;
				} else {
					_67378_t.get()._field_idents = jule::alloc_for_append(_67378_t.get()._field_idents,1);_67378_t.get()._field_idents.__push(_69421_token);;
				};
				jule::Ptr<_1e436257a_TypeDecl> _71822_tk;;
				std::tie(_71822_tk,std::ignore) = _1c9d06874_build_type(_self_, _69321_part,(&(_69521_offset)),true);
				if ((_69521_offset < _69321_part.len())) {
					_1c9d04e5a_push_err(_self_.ptr(), _69321_part[_69521_offset],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_69117_types = jule::alloc_for_append(_69117_types,1);_69117_types.__push(_71822_tk);;
			}
			_iter_next_1cc7deba6:;
			++it;
			goto _iter_begin_1cc7deba6;
		}
		_iter_end_1cc7deba6:;
	};
	if ((_69117_types.len() > 1LL)) {
		_67378_t.get()._field_kind=jule::new_ptr<_1e436257a_TypeDecl>(_1e436257a_TypeDecl{._field_token=_67345_tokens[0LL], ._field_kind=jule::Any(jule::new_ptr<_1e4363c63_TupleTypeDecl>(_1e4363c63_TupleTypeDecl{._field_types=_69117_types}))});
	} else {
		_67378_t.get()._field_kind=_69117_types[0LL];
	};
	_67395_ok=true;
	return std::make_tuple(_67378_t,_67395_ok);
}



inline std::tuple<jule::Ptr<_1e436535d_RetTypeDecl>,jule::Bool> _1c9d0a1e6_build_ret_type(jule::Ptr<_1c9d044ed_Parser> _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _74139_tokens, jule::I64& _74162_i) {
	jule::Ptr<_1e436535d_RetTypeDecl> _74172_t = jule::Ptr<_1e436535d_RetTypeDecl>();
	jule::Bool _74189_ok = jule::Bool();
	_74172_t=jule::new_ptr<_1e436535d_RetTypeDecl>();
	if ((_74162_i >= _74139_tokens.len())) {
		return std::make_tuple(_74172_t,_74189_ok);
	};
	jule::Ptr<_20cd9e6ec_Token> _74717_token = _74139_tokens[_74162_i];;
	{
		auto &_match_expr{ _74717_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1cc7e8929:;
			{
				if ((_74717_token.get()._field_kind == jule::Str("{", 1))) {
					return std::make_tuple(_74172_t,_74189_ok);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1cc7e89d4:;
			{
				if ((_74717_token.get()._field_kind == jule::Str("=", 1))) {
					return std::make_tuple(_74172_t,_74189_ok);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1cc7e8a4a:;
			{
				if (((_74162_i + 1LL) >= _74139_tokens.len())) {
					_1c9d04e5a_push_err(_self_.ptr(), _74717_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					return std::make_tuple(_74172_t,_74189_ok);
				};
				(_74162_i)++;
				_74717_token=_74139_tokens[_74162_i];
				if ((_74717_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _74717_token.get()._field_kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_1cc6227ca:;
							{
								std::tie(_74172_t,_74189_ok) = _1c9d09d3e_build_multi_ret_type(_self_, _74139_tokens,_74162_i);
								return std::make_tuple(_74172_t,_74189_ok);
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_1cc622214:;
							{
								_1c9d04e5a_push_err(_self_.ptr(), _74717_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
								return std::make_tuple(_74172_t,_74189_ok);
							}
						}
						_match_end_1cc622742:;
					};
				};
				std::tie(_74172_t.get()._field_kind,_74189_ok) = _1c9d06874_build_type(_self_, _74139_tokens,(&(_74162_i)),true);
				return std::make_tuple(_74172_t,_74189_ok);
			}
		}
		_match_end_1cc7e88c4:;
	};
	(_74162_i)++;
	_1c9d04e5a_push_err(_self_.ptr(), _74717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return std::make_tuple(_74172_t,_74189_ok);
}



inline jule::Ptr<_1e4371ca4_FnDecl> _1c9d0a647_build_fn_prototype(jule::Ptr<_1c9d044ed_Parser> _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _78643_tokens, jule::I64& _78666_i, jule::Bool _78674_method) {
	jule::Ptr<_1e4371ca4_FnDecl> _78717_f = jule::new_ptr<_1e4371ca4_FnDecl>(_1e4371ca4_FnDecl{._field_token=_78643_tokens[_78666_i], });;
	if ((_78717_f.get()._field_token.get()._field_id == static_cast<jule::U64>(38LLU))) {
		_78717_f.get()._field_statically=true;
		(_78666_i)++;
		if ((_78666_i >= _78643_tokens.len())) {
			_1c9d04e5a_push_err(_self_.ptr(), _78717_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_78717_f.get()._field_token=_78643_tokens[_78666_i];
	};
	if ((_78717_f.get()._field_token.get()._field_id == static_cast<jule::U64>(35LLU))) {
		_78717_f.get()._field_unsafety=true;
		(_78666_i)++;
		if ((_78666_i >= _78643_tokens.len())) {
			_1c9d04e5a_push_err(_self_.ptr(), _78717_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_78717_f.get()._field_token=_78643_tokens[_78666_i];
	};
	(_78666_i)++;
	if ((_78666_i >= _78643_tokens.len())) {
		_1c9d04e5a_push_err(_self_.ptr(), _78717_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_20cd9e6ec_Token> _82013_tok = _78643_tokens[_78666_i];;
	if ((_82013_tok.get()._field_id == static_cast<jule::U64>(2LLU))) {
		(_78666_i)++;
		if ((_78666_i >= _78643_tokens.len())) {
			_1c9d04e5a_push_err(_self_.ptr(), _78717_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_78717_f.get()._field_ident=_82013_tok.get()._field_kind;
	} else {
		_78717_f.get()._field_ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_20cd9e6ec_Token> _83213_error_token = _78643_tokens[_78666_i];;
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _83317_generics_tokens = _1c9d02b17_range(_78666_i,jule::Str("[", 1),jule::Str("]", 1),_78643_tokens);;
	if ((_83317_generics_tokens != nullptr)) {
		_78717_f.get()._field_generics=_1c9d0818e_build_generics(_self_.ptr(), _83317_generics_tokens,_83213_error_token);
	};
	if ((_78643_tokens[_78666_i].get()._field_kind != jule::Str("(", 1))) {
		_1c9d04e5a_push_err(_self_.ptr(), _78643_tokens[_78666_i],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _84317_params_toks = _1c9d02b17_range(_78666_i,jule::Str("(", 1),jule::Str(")", 1),_78643_tokens);;
	if ((_84317_params_toks.len() > 0LL)) {
		_78717_f.get()._field_params=_1c9d09987_build_params(_self_, _84317_params_toks,_78674_method);
	};
	if ((_78666_i < _78643_tokens.len())) {
		jule::Ptr<_20cd9e6ec_Token> _84917_token = _78643_tokens[_78666_i];;
		if (((_84917_token.get()._field_id == static_cast<jule::U64>(7LLU)) && (_84917_token.get()._field_kind == jule::Str("!", 1)))) {
			_78717_f.get()._field_exceptional=true;
			(_78666_i)++;
		};
	};
	std::tie(_78717_f.get()._field_result,std::ignore) = _1c9d0a1e6_build_ret_type(_self_, _78643_tokens,_78666_i);
	return _78717_f;
}



inline jule::Ptr<_1e4371ca4_FnDecl> _1c9d0aa98_build_fn(jule::Ptr<_1c9d044ed_Parser> _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _86233_tokens, jule::Bool _86251_method, jule::Bool _86265_prototype) {
	jule::I64 _86317_i = 0LL;;
	jule::Ptr<_1e4371ca4_FnDecl> _86417_f = _1c9d0a647_build_fn_prototype(_self_, _86233_tokens,_86317_i,_86251_method);;
	if (_86265_prototype) {
		if ((_86317_i < _86233_tokens.len())) {
			_1c9d04e5a_push_err(_self_.ptr(), _86233_tokens[(_86317_i + 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		return _86417_f;
	} else if ((_86417_f == nullptr)) {
		return _86417_f;
	};
	if ((_86317_i >= _86233_tokens.len())) {
		_1c9d0482d_stop(_self_.ptr());
		_1c9d04e5a_push_err(_self_.ptr(), _86417_f.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c9d05279_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _88017_block_tokens = _1c9d02b17_range(_86317_i,jule::Str("{", 1),jule::Str("}", 1),_86233_tokens);;
	if ((_88017_block_tokens != nullptr)) {
		_86417_f.get()._field_scope=_1c9d05ec2_build_scope(_self_, _88017_block_tokens,_86233_tokens[(_86317_i - 1LL)]);
		_86417_f.get()._field_scope.get()._field_unsafety=_86417_f.get()._field_unsafety;
		if ((_86317_i < _86233_tokens.len())) {
			_1c9d04e5a_push_err(_self_.ptr(), _86233_tokens[_86317_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	} else {
		_1c9d0482d_stop(_self_.ptr());
		_1c9d04e5a_push_err(_self_.ptr(), _86417_f.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c9d05279_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _86417_f;
}



inline jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _1c9d0ada6_get_use_decl_selectors(_1c9d044ed_Parser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _89645_tokens) {
	jule::I64 _89717_i = 0LL;;
	_89645_tokens=_1c9d02b17_range(_89717_i,jule::Str("{", 1),jule::Str("}", 1),_89645_tokens);
	jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>> _89918_parts;;
	jule::Slice<_20ca8ec5b_Log> _89925_errs;;
	std::tie(_89918_parts,_89925_errs) = _1c9d032dd_parts(_89645_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_89925_errs.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_89925_errs);
		return nullptr;
	};
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _90517_selectors = jule::Slice<jule::Ptr<_20cd9e6ec_Token>>::alloc(0LL,_89918_parts.len());;
	{
		auto &expr = _89918_parts;
		auto it = expr.begin();
		_iter_begin_1cc63b959:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _90621_part = *it;
			{
				if ((_90621_part.len() > 1LL)) {
					_1c9d04e5a_push_err(&(*_self_), _90621_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				jule::Ptr<_20cd9e6ec_Token> _91021_tok = _90621_part[0LL];;
				if (((_91021_tok.get()._field_id != static_cast<jule::U64>(2LLU)) && (_91021_tok.get()._field_id != static_cast<jule::U64>(28LLU)))) {
					_1c9d04e5a_push_err(&(*_self_), _91021_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1c9d05279_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					goto _iter_next_1cc63b959;
				};
				_90517_selectors = jule::alloc_for_append(_90517_selectors,1);_90517_selectors.__push(_91021_tok);;
			}
			_iter_next_1cc63b959:;
			++it;
			goto _iter_begin_1cc63b959;
		}
		_iter_end_1cc63b959:;
	};
	return _90517_selectors;
}



inline void _1c9d0b1c5_build_cpp_use_decl(_1c9d044ed_Parser* _self_, jule::Ptr<_1e43778e2_UseDecl>& _92142_decl, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _92159_tokens) {
	if ((_92159_tokens.len() > 1LL)) {
		_1c9d04e5a_push_err(&(*_self_), _92159_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20cd9e6ec_Token> _92513_token = _92159_tokens[0LL];;
	if (((_92513_token.get()._field_id != static_cast<jule::U64>(6LLU)) || ((_92513_token.get()._field_kind[0LL] != '`') && (_92513_token.get()._field_kind[0LL] != '\"')))) {
		_1c9d04e5a_push_err(&(*_self_), _92513_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return;;
	};
	_92142_decl.get()._field_cpp_linked=true;
	_92142_decl.get()._field_link_path=_92513_token.get()._field_kind.slice(1LL,(_92513_token.get()._field_kind.len() - 1LL));
}



inline void _1c9d0b4e4_build_std_use_decl(_1c9d044ed_Parser* _self_, jule::Ptr<_1e43778e2_UseDecl>& _93442_decl, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _93462_tokens) {
	_93442_decl.get()._field_std=true;
	jule::Ptr<_20cd9e6ec_Token> _93717_token = _93462_tokens[0LL];;
	if ((_93462_tokens.len() < 3LL)) {
		_1c9d04e5a_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_93462_tokens=_93462_tokens.slice(2LL);
	_93717_token=_93462_tokens[(_93462_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _93717_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1cc646da4:;
			{
				_1c9d04e5a_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1cc646e5e:;
			{
				if ((_93717_token.get()._field_kind != jule::Str("}", 1))) {
					_1c9d04e5a_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _95421_selectors = nullptr;;
				std::tie(_93462_tokens,_95421_selectors) = _1c9d02dae_range_last(_93462_tokens);
				_93442_decl.get()._field_selected=_1c9d0ada6_get_use_decl_selectors(&(*_self_), _95421_selectors);
				if ((_93462_tokens.len() == 0LL)) {
					_1c9d04e5a_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93717_token=_93462_tokens[(_93462_tokens.len() - 1LL)];
				if ((_93717_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_1c9d04e5a_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93462_tokens=_93462_tokens.slice(0LL,(_93462_tokens.len() - 1LL));
				if ((_93462_tokens.len() == 0LL)) {
					_1c9d04e5a_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1cc646ec5:;
			{
				if ((_93717_token.get()._field_kind != jule::Str("*", 1))) {
					_1c9d04e5a_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93462_tokens=_93462_tokens.slice(0LL,(_93462_tokens.len() - 1LL));
				if ((_93462_tokens.len() == 0LL)) {
					_1c9d04e5a_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93717_token=_93462_tokens[(_93462_tokens.len() - 1LL)];
				if ((_93717_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_1c9d04e5a_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93462_tokens=_93462_tokens.slice(0LL,(_93462_tokens.len() - 1LL));
				if ((_93462_tokens.len() == 0LL)) {
					_1c9d04e5a_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93442_decl.get()._field_full=true;
			}
		}
		_match_end_1cc646d4e:;
	};
	_93442_decl.get()._field_link_path=(jule::Str("std::", 5) + _1c9d04135_tokstoa(_93462_tokens));
}



inline void _1c9d0b813_build_ident_use_decl(_1c9d044ed_Parser* _self_, jule::Ptr<_1e43778e2_UseDecl>& _99644_decl, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _99664_tokens) {
	_99644_decl.get()._field_std=false;
	jule::Ptr<_20cd9e6ec_Token> _99917_token = _99664_tokens[(_99664_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _99917_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1cc6521de:;
			{
				_1c9d04e5a_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1cc653014:;
			{
				if ((_99917_token.get()._field_kind != jule::Str("}", 1))) {
					_1c9d04e5a_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _101021_selectors = nullptr;;
				std::tie(_99664_tokens,_101021_selectors) = _1c9d02dae_range_last(_99664_tokens);
				_99644_decl.get()._field_selected=_1c9d0ada6_get_use_decl_selectors(&(*_self_), _101021_selectors);
				if ((_99664_tokens.len() == 0LL)) {
					_1c9d04e5a_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99917_token=_99664_tokens[(_99664_tokens.len() - 1LL)];
				if ((_99917_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_1c9d04e5a_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99664_tokens=_99664_tokens.slice(0LL,(_99664_tokens.len() - 1LL));
				if ((_99664_tokens.len() == 0LL)) {
					_1c9d04e5a_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1cc65307a:;
			{
				if ((_99917_token.get()._field_kind != jule::Str("*", 1))) {
					_1c9d04e5a_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99664_tokens=_99664_tokens.slice(0LL,(_99664_tokens.len() - 1LL));
				if ((_99664_tokens.len() == 0LL)) {
					_1c9d04e5a_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99917_token=_99664_tokens[(_99664_tokens.len() - 1LL)];
				if ((_99917_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_1c9d04e5a_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99664_tokens=_99664_tokens.slice(0LL,(_99664_tokens.len() - 1LL));
				if ((_99664_tokens.len() == 0LL)) {
					_1c9d04e5a_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99644_decl.get()._field_full=true;
			}
		}
		_match_end_1cc652dc1:;
	};
	_99644_decl.get()._field_link_path=_1c9d04135_tokstoa(_99664_tokens);
}



inline void _1c9d0bb32_parse_use_decl(_1c9d044ed_Parser* _self_, jule::Ptr<_1e43778e2_UseDecl>& _105938_decl, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _105958_tokens) {
	if (_105938_decl.get()._field_cpp_linked) {
		_1c9d0b1c5_build_cpp_use_decl(&(*_self_), _105938_decl,_105958_tokens);
		return;;
	};
	jule::Ptr<_20cd9e6ec_Token> _106517_token = _105958_tokens[0LL];;
	if ((_106517_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1c9d04e5a_push_err(&(*_self_), _106517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c9d05279_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	if (((_105958_tokens.len() > 2LL) && (_105958_tokens[1LL].get()._field_id == static_cast<jule::U64>(12LLU)))) {
		_105938_decl.get()._field_alias=_106517_token.get()._field_kind;
		if ((_105958_tokens[2LL].get()._field_id != static_cast<jule::U64>(2LLU))) {
			_1c9d04e5a_push_err(&(*_self_), _106517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			_1c9d05279_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			return;;
		};
		_105958_tokens=_105958_tokens.slice(2LL);
		_106517_token=_105958_tokens[0LL];
	};
	;
	{
		
		if ((_106517_token.get()._field_kind == jule::Str("std", 3))) {
			_case_begin_1cc662d9d:;
			{
				_1c9d0b4e4_build_std_use_decl(&(*_self_), _105938_decl,_105958_tokens);
			}
		}
		else {
			_case_begin_1cc662a29:;
			{
				_1c9d0b813_build_ident_use_decl(&(*_self_), _105938_decl,_105958_tokens);
			}
		}
		_match_end_1cc6629a2:;
	};
}



inline jule::Ptr<_1e43778e2_UseDecl> _1c9d0bed9_build_use_decl(_1c9d044ed_Parser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _109337_tokens, jule::Bool _109355_cpp_linked) {
	jule::Ptr<_1e43778e2_UseDecl> _109417_decl = jule::new_ptr<_1e43778e2_UseDecl>(_1e43778e2_UseDecl{._field_token=_109337_tokens[0LL], ._field_cpp_linked=_109355_cpp_linked, });;
	if ((_109337_tokens.len() < 2LL)) {
		_1c9d04e5a_push_err(&(*_self_), _109417_decl.get()._field_token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>());
		return nullptr;
	};
	_109337_tokens=_109337_tokens.slice(1LL);
	_1c9d0bb32_parse_use_decl(&(*_self_), _109417_decl,_109337_tokens);
	return _109417_decl;
}



inline jule::Ptr<_1e43659e0_Expr> _1c9d0c391_build_enum_item_expr(jule::Ptr<_1c9d044ed_Parser> _self_, jule::Ptr<jule::I64> _110744_i, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _110758_tokens) {
	jule::I64 _110817_brace_n = 0LL;;
	jule::I64 _110913_expr_start = (*(_110744_i));;
	for (; ((*(_110744_i)) < _110758_tokens.len()); ((*(_110744_i)))++) {
		{
			jule::Ptr<_20cd9e6ec_Token> _111117_t = _110758_tokens[(*(_110744_i))];;
			if ((_111117_t.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _111117_t.get()._field_kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1cc6691a1:;
						{
							(_110817_brace_n)++;
							goto _iter_next_1cc667b72;
						}
					}
					else {
						_case_begin_1cc668d93:;
						{
							(_110817_brace_n)--;
						}
					}
					_match_end_1cc668cd8:;
				};
			};
			if ((_110817_brace_n > 0LL)) {
				goto _iter_next_1cc667b72;
			};
			if (((_111117_t.get()._field_id == static_cast<jule::U64>(8LLU)) || (((*(_110744_i)) + 1LL) >= _110758_tokens.len()))) {
				jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _112925_expr_tokens = nullptr;;
				if ((_111117_t.get()._field_id == static_cast<jule::U64>(8LLU))) {
					_112925_expr_tokens=_110758_tokens.slice(_110913_expr_start,(*(_110744_i)));
				} else {
					_112925_expr_tokens=_110758_tokens.slice(_110913_expr_start);
				};
				return _1c9d05587_build_expr(_self_, _112925_expr_tokens);
			};
		}
	_iter_next_1cc667b72:;
	}
	_iter_end_1cc667b72:;;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_1e4377d65_EnumItemDecl>> _1c9d0c69e_build_enum_items(jule::Ptr<_1c9d044ed_Parser> _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _114141_tokens) {
	jule::Slice<jule::Ptr<_1e4377d65_EnumItemDecl>> _114217_items = jule::Slice<jule::Ptr<_1e4377d65_EnumItemDecl>>::alloc(0LL,1LL);;
	jule::Ptr<jule::I64> _114317_i = jule::new_ptr<jule::I64>(0LL);;
	for (; ((*(_114317_i)) < _114141_tokens.len()); ((*(_114317_i)))++) {
		{
			jule::Ptr<_20cd9e6ec_Token> _114521_t = _114141_tokens[(*(_114317_i))];;
			jule::Ptr<_1e4377d65_EnumItemDecl> _114621_item = jule::new_ptr<_1e4377d65_EnumItemDecl>(_1e4377d65_EnumItemDecl{});;
			_114621_item.get()._field_token=_114521_t;
			if ((_114621_item.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
				_1c9d04e5a_push_err(_self_.ptr(), _114621_item.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1c9d05279_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			};
			_114621_item.get()._field_ident=_114621_item.get()._field_token.get()._field_kind;
			if (((((*(_114317_i)) + 1LL) >= _114141_tokens.len()) || (_114141_tokens[((*(_114317_i)) + 1LL)].get()._field_id == static_cast<jule::U64>(8LLU)))) {
				if ((((*(_114317_i)) + 1LL) < _114141_tokens.len())) {
					((*(_114317_i)))++;
				};
				_114217_items = jule::alloc_for_append(_114217_items,1);_114217_items.__push(_114621_item);;
				goto _iter_next_1cc66d2d7;
			};
			((*(_114317_i)))++;
			_114521_t=_114141_tokens[(*(_114317_i))];
			((*(_114317_i)))++;
			if (((_114521_t.get()._field_id != static_cast<jule::U64>(7LLU)) || (_114521_t.get()._field_kind != jule::Str("=", 1)))) {
				_1c9d04e5a_push_err(_self_.ptr(), _114521_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1c9d05279_push_suggestion(_self_.ptr(), jule::Str("expected equals \"=\" for assignment", 34),jule::Slice<jule::Any>());
				goto _iter_next_1cc66d2d7;
			};
			if ((((*(_114317_i)) >= _114141_tokens.len()) || (_114141_tokens[(*(_114317_i))].get()._field_id == static_cast<jule::U64>(8LLU)))) {
				_1c9d04e5a_push_err(_self_.ptr(), _114521_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
				goto _iter_next_1cc66d2d7;
			};
			_114621_item.get()._field_expr=_1c9d0c391_build_enum_item_expr(_self_, _114317_i,_114141_tokens);
			_114217_items = jule::alloc_for_append(_114217_items,1);_114217_items.__push(_114621_item);;
		}
	_iter_next_1cc66d2d7:;
	}
	_iter_end_1cc66d2d7:;;
	return _114217_items;
}



inline jule::Ptr<_1e43789ae_EnumDecl> _1c9d0c9ac_build_enum_decl(jule::Ptr<_1c9d044ed_Parser> _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _117840_tokens) {
	if (((_117840_tokens.len() < 2LL) || (_117840_tokens.len() < 3LL))) {
		_1c9d04e5a_push_err(_self_.ptr(), _117840_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e43789ae_EnumDecl> _118317_e = jule::new_ptr<_1e43789ae_EnumDecl>(_1e43789ae_EnumDecl{._field_token=_117840_tokens[1LL], });;
	if ((_118317_e.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1c9d04e5a_push_err(_self_.ptr(), _118317_e.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c9d05279_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_118317_e.get()._field_ident=_118317_e.get()._field_token.get()._field_kind;
	jule::I64 _119117_i = 2LL;;
	if ((_117840_tokens[_119117_i].get()._field_id == static_cast<jule::U64>(11LLU))) {
		(_119117_i)++;
		if ((_119117_i >= _117840_tokens.len())) {
			_1c9d04e5a_push_err(_self_.ptr(), _117840_tokens[(_119117_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return _118317_e;
		};
		std::tie(_118317_e.get()._field_kind,std::ignore) = _1c9d06874_build_type(_self_, _117840_tokens,(&(_119117_i)),true);
		if ((_119117_i >= _117840_tokens.len())) {
			_1c9d0482d_stop(_self_.ptr());
			_1c9d04e5a_push_err(_self_.ptr(), _118317_e.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
			_1c9d05279_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
			return _118317_e;
		};
	} else {
		_118317_e.get()._field_kind=nullptr;
	};
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _120817_item_tokens = _1c9d02b17_range(_119117_i,jule::Str("{", 1),jule::Str("}", 1),_117840_tokens);;
	if ((_120817_item_tokens == nullptr)) {
		_1c9d0482d_stop(_self_.ptr());
		_1c9d04e5a_push_err(_self_.ptr(), _118317_e.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c9d05279_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _118317_e;
	} else if ((_119117_i < _117840_tokens.len())) {
		_1c9d04e5a_push_err(_self_.ptr(), _117840_tokens[_119117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_118317_e.get()._field_end=_117840_tokens[(_119117_i - 1LL)];
	_118317_e.get()._field_items=_1c9d0c69e_build_enum_items(_self_, _120817_item_tokens);
	return _118317_e;
}



inline jule::Ptr<_1e43794d7_FieldDecl> _1c9d0ccba_build_field(jule::Ptr<_1c9d044ed_Parser> _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _122235_tokens) {
	jule::Ptr<_1e43794d7_FieldDecl> _122317_f = jule::new_ptr<_1e43794d7_FieldDecl>(_1e43794d7_FieldDecl{});;
	_122317_f.get()._field_public=(_122235_tokens[0LL].get()._field_id == static_cast<jule::U64>(21LLU));
	if (_122317_f.get()._field_public) {
		if ((_122235_tokens.len() == 1LL)) {
			_1c9d04e5a_push_err(_self_.ptr(), _122235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_122235_tokens=_122235_tokens.slice(1LL);
	};
	_122317_f.get()._field_mutable=(_122235_tokens[0LL].get()._field_id == static_cast<jule::U64>(36LLU));
	if (_122317_f.get()._field_mutable) {
		if ((_122235_tokens.len() == 1LL)) {
			_1c9d04e5a_push_err(_self_.ptr(), _122235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_122235_tokens=_122235_tokens.slice(1LL);
	};
	_122317_f.get()._field_token=_122235_tokens[0LL];
	if ((_122317_f.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1c9d04e5a_push_err(_self_.ptr(), _122317_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c9d05279_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	_122317_f.get()._field_ident=_122317_f.get()._field_token.get()._field_kind;
	if ((_122235_tokens.len() == 1LL)) {
		_1c9d04e5a_push_err(_self_.ptr(), _122235_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((_122235_tokens[1LL].get()._field_id != static_cast<jule::U64>(11LLU))) {
		_1c9d04e5a_push_err(_self_.ptr(), _122235_tokens[1LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	_122235_tokens=_122235_tokens.slice(2LL);
	jule::I64 _126017_i = 0LL;;
	std::tie(_122317_f.get()._field_kind,std::ignore) = _1c9d06874_build_type(_self_, _122235_tokens,(&(_126017_i)),true);
	if ((_126017_i < _122235_tokens.len())) {
		jule::Ptr<_20cd9e6ec_Token> _126317_token = _122235_tokens[_126017_i];;
		if (((_126317_token.get()._field_id != static_cast<jule::U64>(7LLU)) || (_126317_token.get()._field_kind != jule::Str("=", 1)))) {
			_1c9d04e5a_push_err(_self_.ptr(), _122235_tokens[_126017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_126017_i)++;
		if ((_126017_i >= _122235_tokens.len())) {
			_1c9d04e5a_push_err(_self_.ptr(), _126317_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;
		};
		_122235_tokens=_122235_tokens.slice(_126017_i);
		_122317_f.get()._field_default=_1c9d05587_build_expr(_self_, _122235_tokens);
	};
	return _122317_f;
}



inline jule::Slice<jule::Ptr<_1e43794d7_FieldDecl>> _1c9d0d0ea_build_struct_decl_fields(jule::Ptr<_1c9d044ed_Parser> _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _128048_tokens) {
	jule::Slice<jule::Ptr<_1e43794d7_FieldDecl>> _128117_fields = nullptr;;
	jule::Slice<jule::Ptr<_1c9cd7547_Stmt>> _128217_stmts = _1c9cd78dd_split_stmts(_128048_tokens);;
	{
		auto &expr = _128217_stmts;
		auto it = expr.begin();
		_iter_begin_1cc68d835:;
		if (it != expr.end()) {
			jule::Ptr<_1c9cd7547_Stmt> _128321_stmt = *it;
			{
				_128048_tokens=_128321_stmt.get()._field_tokens;
				jule::Ptr<_1e43794d7_FieldDecl> _128521_f = _1c9d0ccba_build_field(_self_, _128048_tokens);;
				_128117_fields = jule::alloc_for_append(_128117_fields,1);_128117_fields.__push(_128521_f);;
			}
			_iter_next_1cc68d835:;
			++it;
			goto _iter_begin_1cc68d835;
		}
		_iter_end_1cc68d835:;
	};
	return _128117_fields;
}



inline jule::Ptr<_1e4379d45_StructDecl> _1c9d0d419_build_struct_decl(jule::Ptr<_1c9d044ed_Parser> _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _129142_tokens) {
	if ((_129142_tokens.len() < 3LL)) {
		_1c9d04e5a_push_err(_self_.ptr(), _129142_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::I64 _129717_i = 1LL;;
	jule::Ptr<_1e4379d45_StructDecl> _129817_s = jule::new_ptr<_1e4379d45_StructDecl>(_1e4379d45_StructDecl{._field_token=_129142_tokens[_129717_i], });;
	if ((_129817_s.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1c9d04e5a_push_err(_self_.ptr(), _129817_s.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c9d05279_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_129717_i)++;
	if ((_129717_i >= _129142_tokens.len())) {
		_1c9d04e5a_push_err(_self_.ptr(), _129142_tokens[_129717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _129817_s;
	};
	_129817_s.get()._field_ident=_129817_s.get()._field_token.get()._field_kind;
	jule::Ptr<_20cd9e6ec_Token> _131213_error_token = _129142_tokens[_129717_i];;
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _131317_generics_tokens = _1c9d02b17_range(_129717_i,jule::Str("[", 1),jule::Str("]", 1),_129142_tokens);;
	if ((_131317_generics_tokens != nullptr)) {
		_129817_s.get()._field_generics=_1c9d0818e_build_generics(_self_.ptr(), _131317_generics_tokens,_131213_error_token);
	};
	if ((_129717_i >= _129142_tokens.len())) {
		_1c9d04e5a_push_err(_self_.ptr(), _129142_tokens[(_129717_i - 1LL)],jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c9d05279_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _129817_s;
	};
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _132317_body_tokens = _1c9d02b17_range(_129717_i,jule::Str("{", 1),jule::Str("}", 1),_129142_tokens);;
	if ((_132317_body_tokens == nullptr)) {
		_1c9d0482d_stop(_self_.ptr());
		_1c9d04e5a_push_err(_self_.ptr(), _129817_s.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c9d05279_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _129817_s;
	};
	if ((_129717_i < _129142_tokens.len())) {
		_1c9d04e5a_push_err(_self_.ptr(), _129142_tokens[_129717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_129817_s.get()._field_fields=_1c9d0d0ea_build_struct_decl_fields(_self_, _132317_body_tokens);
	_129817_s.get()._field_end=_129142_tokens[(_129717_i - 1LL)];
	return _129817_s;
}



inline void _1c9d0d68e_check_method_receiver(_1c9d044ed_Parser* _self_, jule::Ptr<_1e4371ca4_FnDecl>& _133841_f) {
	if (_133841_f.get()._field_statically) {
		if (((_133841_f.get()._field_params.len() > 0LL) && _1e4370ce7_is_self(_133841_f.get()._field_params[0LL].ptr()))) {
			_1c9d04e5a_push_err(&(*_self_), _133841_f.get()._field_token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_133841_f.get()._field_params.len() == 0LL)) {
		_1c9d04e5a_push_err(&(*_self_), _133841_f.get()._field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e4370984_ParamDecl> _135113_param = _133841_f.get()._field_params[0LL];;
	if ((!(_1e4370ce7_is_self(_135113_param.ptr())))) {
		_1c9d04e5a_push_err(&(*_self_), _133841_f.get()._field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
}



inline jule::Slice<jule::Ptr<_1e4371ca4_FnDecl>> _1c9d0d99c_build_trait_methods(jule::Ptr<_1c9d044ed_Parser> _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _135843_tokens) {
	jule::Slice<jule::Ptr<_1e4371ca4_FnDecl>> _135917_methods = nullptr;;
	jule::Slice<jule::Ptr<_1c9cd7547_Stmt>> _136017_stmts = _1c9cd78dd_split_stmts(_135843_tokens);;
	{
		auto &expr = _136017_stmts;
		auto it = expr.begin();
		_iter_begin_1cc6a0407:;
		if (it != expr.end()) {
			jule::Ptr<_1c9cd7547_Stmt> _136121_stmt = *it;
			{
				_135843_tokens=_136121_stmt.get()._field_tokens;
				if ((_135843_tokens.len() == 0LL)) {
					goto _iter_next_1cc6a0407;
				};
				jule::Bool _136721_is_pub = false;;
				if ((_135843_tokens[0LL].get()._field_id == static_cast<jule::U64>(21LLU))) {
					_136721_is_pub=true;
					if ((_135843_tokens.len() == 1LL)) {
						_1c9d04e5a_push_err(_self_.ptr(), _135843_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						goto _iter_next_1cc6a0407;
					};
					_135843_tokens=_135843_tokens.slice(1LL);
				};
				jule::Ptr<_1e4371ca4_FnDecl> _137721_f = _1c9d0aa98_build_fn(_self_, _135843_tokens,true,true);;
				if ((_137721_f != nullptr)) {
					if (_1e4372106_is_anon(_137721_f.ptr())) {
						_1c9d04e5a_push_err(_self_.ptr(), _137721_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
					_1c9d0d68e_check_method_receiver(_self_.ptr(), _137721_f);
					if ((_137721_f.get()._field_generics.len() > 0LL)) {
						_1c9d04e5a_push_err(_self_.ptr(), _137721_f.get()._field_token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>());
					};
					_137721_f.get()._field_public=_136721_is_pub;
					_135917_methods = jule::alloc_for_append(_135917_methods,1);_135917_methods.__push(_137721_f);;
				};
			}
			_iter_next_1cc6a0407:;
			++it;
			goto _iter_begin_1cc6a0407;
		}
		_iter_end_1cc6a0407:;
	};
	return _135917_methods;
}



inline jule::Ptr<_1e437a450_TraitDecl> _1c9d0dcaa_build_trait_decl(jule::Ptr<_1c9d044ed_Parser> _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _139341_tokens) {
	if ((_139341_tokens.len() < 3LL)) {
		_1c9d04e5a_push_err(_self_.ptr(), _139341_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e437a450_TraitDecl> _139817_t = jule::new_ptr<_1e437a450_TraitDecl>(_1e437a450_TraitDecl{._field_token=_139341_tokens[1LL], });;
	if ((_139817_t.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1c9d04e5a_push_err(_self_.ptr(), _139817_t.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c9d05279_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_139817_t.get()._field_ident=_139817_t.get()._field_token.get()._field_kind;
	jule::I64 _140617_i = 2LL;;
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _140717_body_tokens = _1c9d02b17_range(_140617_i,jule::Str("{", 1),jule::Str("}", 1),_139341_tokens);;
	if ((_140717_body_tokens == nullptr)) {
		_1c9d0482d_stop(_self_.ptr());
		_1c9d04e5a_push_err(_self_.ptr(), _139817_t.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c9d05279_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_140617_i < _139341_tokens.len())) {
		_1c9d04e5a_push_err(_self_.ptr(), _139341_tokens[_140617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_139817_t.get()._field_methods=_1c9d0d99c_build_trait_methods(_self_, _140717_body_tokens);
	_139817_t.get()._field_end=_139341_tokens[(_140617_i - 1LL)];
	return _139817_t;
}



inline jule::Ptr<_1e4371ca4_FnDecl> _1c9d0e0b8_build_cpp_link_fn(jule::Ptr<_1c9d044ed_Parser> _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _142241_tokens) {
	_142241_tokens=_142241_tokens.slice(1LL);
	jule::Ptr<_1e4371ca4_FnDecl> _142417_f = _1c9d0aa98_build_fn(_self_, _142241_tokens,false,true);;
	if ((_142417_f != nullptr)) {
		if (_1e4372106_is_anon(_142417_f.ptr())) {
			_1c9d04e5a_push_err(_self_.ptr(), _142417_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		_142417_f.get()._field_cpp_linked=true;
	};
	return _142417_f;
}



inline jule::Ptr<_1e4372c83_VarDecl> _1c9d0e3c6_build_cpp_link_var(jule::Ptr<_1c9d044ed_Parser> _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _143442_tokens) {
	_143442_tokens=_143442_tokens.slice(1LL);
	jule::Ptr<_1e4372c83_VarDecl> _143617_v = _1c9d079c9_build_var(_self_, _143442_tokens);;
	if ((_143617_v != nullptr)) {
		_143617_v.get()._field_cpp_linked=true;
		if ((_143617_v.get()._field_expr != nullptr)) {
			_1c9d04e5a_push_err(_self_.ptr(), _143617_v.get()._field_token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>());
		};
	};
	return _143617_v;
}



inline jule::Ptr<_1e4379d45_StructDecl> _1c9d0e6d4_build_cpp_link_struct(jule::Ptr<_1c9d044ed_Parser> _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _144645_tokens) {
	_144645_tokens=_144645_tokens.slice(1LL);
	jule::Ptr<_1e4379d45_StructDecl> _144817_s = _1c9d0d419_build_struct_decl(_self_, _144645_tokens);;
	if ((_144817_s != nullptr)) {
		_144817_s.get()._field_cpp_linked=true;
	};
	return _144817_s;
}



inline jule::Ptr<_1e4376506_TypeAliasDecl> _1c9d0ea14_build_cpp_link_type_alias(jule::Ptr<_1c9d044ed_Parser> _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _145549_tokens) {
	_145549_tokens=_145549_tokens.slice(1LL);
	jule::Ptr<_1e4376506_TypeAliasDecl> _145717_t = _1c9d06b82_build_type_alias_decl(_self_, _145549_tokens);;
	if ((_145717_t != nullptr)) {
		_145717_t.get()._field_cpp_linked=true;
	};
	return _145717_t;
}



inline jule::Ptr<_1e43778e2_UseDecl> _1c9d0ed33_build_cpp_link_use(jule::Ptr<_1c9d044ed_Parser> _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _146442_tokens) {
	if ((_146442_tokens.len() == 1LL)) {
		_1c9d04e5a_push_err(_self_.ptr(), _146442_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_146442_tokens=_146442_tokens.slice(1LL);
	;
	return _1c9d0bed9_build_use_decl(_self_.ptr(), _146442_tokens,true);
}



inline jule::Any _1c9d10141_build_cpp_link(jule::Ptr<_1c9d044ed_Parser> _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _147539_tokens) {
	jule::Ptr<_20cd9e6ec_Token> _147617_token = _147539_tokens[0LL];;
	if ((_147539_tokens.len() == 1LL)) {
		_1c9d04e5a_push_err(_self_.ptr(), _147617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_147617_token=_147539_tokens[1LL];
	{
		auto &_match_expr{ _147617_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1cc6ba488:;
			{
				return jule::Any(_1c9d0ed33_build_cpp_link_use(_self_, _147539_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1cc6ba4ee:;
			{
				return jule::Any(_1c9d0e0b8_build_cpp_link_fn(_self_, _147539_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1cc6ba565:;
			{
				return jule::Any(_1c9d0e3c6_build_cpp_link_var(_self_, _147539_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1cc6ba5cb:;
			{
				return jule::Any(_1c9d0e6d4_build_cpp_link_struct(_self_, _147539_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1cc6bada1:;
			{
				return jule::Any(_1c9d0ea14_build_cpp_link_type_alias(_self_, _147539_tokens));
			}
		}
		else {
			_case_begin_1cc6b9e49:;
			{
				_1c9d04e5a_push_err(_self_.ptr(), _147617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1cc6ba378:;
	};
	return nullptr;
}



inline jule::Ptr<_1e4371ca4_FnDecl> _1c9d1044e_get_method(jule::Ptr<_1c9d044ed_Parser> _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _150135_tokens) {
	jule::I64 _150217_i = 0LL;;
	jule::Ptr<_20cd9e6ec_Token> _150317_token = _150135_tokens[_150217_i];;
	if ((_150317_token.get()._field_id == static_cast<jule::U64>(38LLU))) {
		if (((_150217_i + 1LL) >= _150135_tokens.len())) {
			_1c9d04e5a_push_err(_self_.ptr(), _150317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_150217_i)++;
		_150317_token=_150135_tokens[_150217_i];
	};
	if ((_150317_token.get()._field_id == static_cast<jule::U64>(35LLU))) {
		if (((_150217_i + 1LL) >= _150135_tokens.len())) {
			_1c9d04e5a_push_err(_self_.ptr(), _150317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_150217_i)++;
		_150317_token=_150135_tokens[_150217_i];
	};
	if ((_150317_token.get()._field_id != static_cast<jule::U64>(33LLU))) {
		_1c9d04e5a_push_err(_self_.ptr(), _150317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e4371ca4_FnDecl> _152717_f = _1c9d0aa98_build_fn(_self_, _150135_tokens,true,false);;
	if (((_152717_f != nullptr) && _1e4372106_is_anon(_152717_f.ptr()))) {
		_1c9d04e5a_push_err(_self_.ptr(), _152717_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _152717_f;
}



inline void _1c9d1076d_parse_impl_body(jule::Ptr<_1c9d044ed_Parser> _self_, jule::Ptr<_1e437aa5a_Impl>& _153440_ipl, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _153457_tokens) {
	jule::Slice<jule::Ptr<_1c9cd7547_Stmt>> _153517_stmts = _1c9cd78dd_split_stmts(_153457_tokens);;
	{
		auto &expr = _153517_stmts;
		auto it = expr.begin();
		_iter_begin_1cc6c554d:;
		if (it != expr.end()) {
			jule::Ptr<_1c9cd7547_Stmt> _153621_stmt = *it;
			{
				_153457_tokens=_153621_stmt.get()._field_tokens;
				jule::Ptr<_20cd9e6ec_Token> _153821_token = _153457_tokens[0LL];;
				jule::Bool _153921_is_pub = false;;
				{
					auto &_match_expr{ _153821_token.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(39LLU)) {
						_case_begin_1cc6c6ab0:;
						{
							_1c9d05b1a_push_directive(_self_.ptr(), _1c9d05895_build_directive(_self_.ptr(), _153457_tokens));
							goto _iter_next_1cc6c554d;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(21LLU)) {
						_case_begin_1cc6c6b6a:;
						{
							_153921_is_pub=true;
							if ((_153457_tokens.len() == 1LL)) {
								_1c9d04e5a_push_err(_self_.ptr(), _153457_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
								goto _iter_next_1cc6c554d;
							};
							_153457_tokens=_153457_tokens.slice(1LL);
							if ((_153457_tokens.len() > 0LL)) {
								_153821_token=_153457_tokens[0LL];
							};
						}
					}
					_match_end_1cc6c6a5a:;
				};
				{
					auto &_match_expr{ _153821_token.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(9LLU)) {
						_case_begin_1cc6c973e:;
						{
							jule::Ptr<_1e4372c83_VarDecl> _155825_v = _1c9d079c9_build_var(_self_, _153457_tokens);;
							if ((_155825_v != nullptr)) {
								_155825_v.get()._field_public=_153921_is_pub;
								_153440_ipl.get()._field_statics = jule::alloc_for_append(_153440_ipl.get()._field_statics,1);_153440_ipl.get()._field_statics.__push(_155825_v);;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(38LLU) || _match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1cc6c797e:;
						{
							jule::Ptr<_1e4371ca4_FnDecl> _156625_f = _1c9d1044e_get_method(_self_, _153457_tokens);;
							if ((_156625_f != nullptr)) {
								_1c9d0d68e_check_method_receiver(_self_.ptr(), _156625_f);
								_1c9d1142d_apply_fn_meta(_self_.ptr(), _156625_f,_153921_is_pub);
								_153440_ipl.get()._field_methods = jule::alloc_for_append(_153440_ipl.get()._field_methods,1);_153440_ipl.get()._field_methods.__push(_156625_f);;
							};
						}
					}
					else {
						_case_begin_1cc6c6bd1:;
						{
							_1c9d04e5a_push_err(_self_.ptr(), _153821_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							goto _iter_next_1cc6c554d;
						}
					}
					_match_end_1cc6c8d9d:;
				};
			}
			_iter_next_1cc6c554d:;
			++it;
			goto _iter_begin_1cc6c554d;
		}
		_iter_end_1cc6c554d:;
	};
}



inline jule::Ptr<_1e437aa5a_Impl> _1c9d10a7b_build_impl(jule::Ptr<_1c9d044ed_Parser> _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _157934_tokens) {
	jule::Ptr<_20cd9e6ec_Token> _158017_token = _157934_tokens[0LL];;
	if ((_157934_tokens.len() < 2LL)) {
		_1c9d04e5a_push_err(_self_.ptr(), _158017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::I64 _158617_i = 1LL;;
	jule::Ptr<_1e436257a_TypeDecl> _158818_base;;
	jule::Bool _158828_ok;;
	std::tie(_158818_base,_158828_ok) = _1c9d06874_build_type(_self_, _157934_tokens,(&(_158617_i)),true);
	if ((!(_158828_ok))) {
		return nullptr;
	};
	if ((_158617_i >= _157934_tokens.len())) {
		_1c9d04e5a_push_err(_self_.ptr(), _158017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e437aa5a_Impl> _159717_ipl = jule::new_ptr<_1e437aa5a_Impl>(_1e437aa5a_Impl{._field_base=_158818_base, });;
	_158017_token=_157934_tokens[_158617_i];
	if ((_158017_token.get()._field_id != static_cast<jule::U64>(12LLU))) {
		if (((_158017_token.get()._field_id == static_cast<jule::U64>(3LLU)) && (_158017_token.get()._field_kind == jule::Str("{", 1)))) {
			std::tie(_159717_ipl.get()._field_base,_159717_ipl.get()._field_dest) = std::make_tuple(_159717_ipl.get()._field_dest,_159717_ipl.get()._field_base);
			goto _julec_label_body;
		};
		_1c9d0482d_stop(_self_.ptr());
		_1c9d04e5a_push_err(_self_.ptr(), _158017_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c9d05279_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	(_158617_i)++;
	if ((_158617_i >= _157934_tokens.len())) {
		_1c9d0482d_stop(_self_.ptr());
		_1c9d04e5a_push_err(_self_.ptr(), _158017_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c9d05279_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	std::tie(_159717_ipl.get()._field_dest,_158828_ok) = _1c9d06874_build_type(_self_, _157934_tokens,(&(_158617_i)),true);
	if ((!(_158828_ok))) {
		return nullptr;
	};
	if ((_158617_i >= _157934_tokens.len())) {
		_1c9d0482d_stop(_self_.ptr());
		_1c9d04e5a_push_err(_self_.ptr(), _158017_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c9d05279_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	_julec_label_body:;
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _163717_body_tokens = _1c9d02b17_range(_158617_i,jule::Str("{", 1),jule::Str("}", 1),_157934_tokens);;
	if ((_163717_body_tokens == nullptr)) {
		_1c9d0482d_stop(_self_.ptr());
		_1c9d04e5a_push_err(_self_.ptr(), _158017_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c9d05279_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_158617_i < _157934_tokens.len())) {
		_1c9d04e5a_push_err(_self_.ptr(), _157934_tokens[_158617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_159717_ipl.get()._field_end=_157934_tokens[(_158617_i - 1LL)];
	_1c9d1076d_parse_impl_body(_self_, _159717_ipl,_163717_body_tokens);
	return _159717_ipl;
}



inline jule::Any _1c9d10d89_build_node_data(jule::Ptr<_1c9d044ed_Parser> _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _165240_tokens) {
	jule::Ptr<_20cd9e6ec_Token> _165317_token = _165240_tokens[0LL];;
	{
		auto &_match_expr{ _165317_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1cbbd591b:;
			{
				;
				return jule::Any(_1c9d0bed9_build_use_decl(_self_.ptr(), _165240_tokens,false));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1cbbd608c:;
			{
				jule::Ptr<_1e4371ca4_FnDecl> _166021_f = _1c9d0aa98_build_fn(_self_, _165240_tokens,false,false);;
				if ((_166021_f != nullptr)) {
					_166021_f.get()._field_global=true;
					if (_1e4372106_is_anon(_166021_f.ptr())) {
						_1c9d04e5a_push_err(_self_.ptr(), _166021_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				};
				return jule::Any(_166021_f);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(36LLU) || _match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1cbbd6103:;
			{
				return jule::Any(_1c9d079c9_build_var(_self_, _165240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1cbbd6279:;
			{
				return jule::Any(_1c9d06b82_build_type_alias_decl(_self_, _165240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_1cbbd62e0:;
			{
				return jule::Any(_1c9d0c9ac_build_enum_decl(_self_, _165240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1cbbd5674:;
			{
				return jule::Any(_1c9d0d419_build_struct_decl(_self_, _165240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1cbbd56eb:;
			{
				return jule::Any(_1c9d0dcaa_build_trait_decl(_self_, _165240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1cbbd5773:;
			{
				return jule::Any(_1c9d10a7b_build_impl(_self_, _165240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1cbbd6367:;
			{
				return jule::Any(_1c9d10141_build_cpp_link(_self_, _165240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1cbbd63cd:;
			{
				return jule::Any(_1c9d05895_build_directive(_self_.ptr(), _165240_tokens));
			}
		}
		else {
			_case_begin_1cbbd4ee2:;
			{
				_1c9d04e5a_push_err(_self_.ptr(), _165317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1cbbd5564:;
	};
}



inline void _1c9d1110e_check_directive(_1c9d044ed_Parser* _self_, _1e43314d3_Node& _169335_node) {
	if (((*_self_)._field_directives == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _169335_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1e43620c4_Directive>>()) {
			_case_begin_1cbbde925:;
			{
				goto _match_end_1cbbdd627;
			}
		}
		else {
			_case_begin_1cbbdd67c:;
			{
				if (((*_self_)._field_directives.len() != 0LL)) {
					_1c9d04e5a_push_err(&(*_self_), (*_self_)._field_directives[0LL].get()._field_tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
				};
				(*_self_)._field_directives=nullptr;
			}
		}
		_match_end_1cbbdd627:;
	};
}



inline void _1c9d1142d_apply_fn_meta(_1c9d044ed_Parser* _self_, jule::Ptr<_1e4371ca4_FnDecl>& _171037_f, jule::Bool _171049_is_pub) {
	_171037_f.get()._field_public=_171049_is_pub;
	_171037_f.get()._field_directives=(*_self_)._field_directives;
	(*_self_)._field_directives=nullptr;
}



inline void _1c9d1174c_apply_meta(_1c9d044ed_Parser* _self_, _1e43314d3_Node& _171634_node, jule::Bool _171646_is_pub) {
	{
		auto &_match_expr{ _171634_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1e4372c83_VarDecl>>()) {
			_case_begin_1cbbe1a37:;
			{
				jule::Ptr<_1e4372c83_VarDecl> _171921_v = _171634_node._field_data.operator jule::Ptr<_1e4372c83_VarDecl>();;
				if ((_171921_v == nullptr)) {
					return;;
				};
				_171921_v.get()._field_public=_171646_is_pub;
				_171921_v.get()._field_directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4371ca4_FnDecl>>()) {
			_case_begin_1cbbe1a9d:;
			{
				jule::Ptr<_1e4371ca4_FnDecl> _172721_f = _171634_node._field_data.operator jule::Ptr<_1e4371ca4_FnDecl>();;
				if ((_172721_f == nullptr)) {
					return;;
				};
				_1c9d1142d_apply_fn_meta(&(*_self_), _172721_f,_171646_is_pub);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4376506_TypeAliasDecl>>()) {
			_case_begin_1cbbe1b14:;
			{
				jule::Ptr<_1e4376506_TypeAliasDecl> _173321_tad = _171634_node._field_data.operator jule::Ptr<_1e4376506_TypeAliasDecl>();;
				if ((_173321_tad == nullptr)) {
					return;;
				};
				_173321_tad.get()._field_public=_171646_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e43789ae_EnumDecl>>()) {
			_case_begin_1cbbe1b7a:;
			{
				jule::Ptr<_1e43789ae_EnumDecl> _173921_ed = _171634_node._field_data.operator jule::Ptr<_1e43789ae_EnumDecl>();;
				if ((_173921_ed == nullptr)) {
					return;;
				};
				_173921_ed.get()._field_public=_171646_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4379d45_StructDecl>>()) {
			_case_begin_1cbbe1d78:;
			{
				jule::Ptr<_1e4379d45_StructDecl> _174521_sd = _171634_node._field_data.operator jule::Ptr<_1e4379d45_StructDecl>();;
				if ((_174521_sd == nullptr)) {
					return;;
				};
				_174521_sd.get()._field_directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
				_174521_sd.get()._field_public=_171646_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437a450_TraitDecl>>()) {
			_case_begin_1cbbe1dde:;
			{
				jule::Ptr<_1e437a450_TraitDecl> _175321_td = _171634_node._field_data.operator jule::Ptr<_1e437a450_TraitDecl>();;
				if ((_175321_td == nullptr)) {
					return;;
				};
				_175321_td.get()._field_public=_171646_is_pub;
			}
		}
		else {
			_case_begin_1cbbe1949:;
			{
				if (_171646_is_pub) {
					_1c9d04e5a_push_err(&(*_self_), _171634_node._field_token,jule::Str("define is not supports pub modifier", 35),jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1cbbe18e4:;
	};
}



inline void _1c9d119c2_check_use_decl(_1c9d044ed_Parser* _self_, _1e43314d3_Node& _176534_node) {
	{
		auto &_match_expr{ _176534_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1e43778e2_UseDecl>>()) {
			_case_begin_1cbbe937a:;
			{
				goto _match_end_1cbbe9578;
			}
		}
		else {
			_case_begin_1cbbe95cd:;
			{
				return;;
			}
		}
		_match_end_1cbbe9578:;
	};
	if (((*_self_)._field_ast.get()._field_nodes.len() > 0LL)) {
		_1c9d04e5a_push_err(&(*_self_), _176534_node._field_token,jule::Str("use declarations must declared top of source code", 49),jule::Slice<jule::Any>());
		_1c9d05279_push_suggestion(&(*_self_), jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>());
	};
}



inline std::tuple<jule::Bool,jule::Any> _1c9d11d02_build_general_scope_node_data(jule::Ptr<_1c9d044ed_Parser> _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _178053_st) {
	jule::Bool _178069_is_pub = jule::Bool();
	jule::Any _178083_data = jule::Any();
	if ((_178053_st[0LL].get()._field_id == static_cast<jule::U64>(21LLU))) {
		_178069_is_pub=true;
		_178053_st=_178053_st.slice(1LL);
		if ((_178053_st.len() == 0LL)) {
			_1c9d04e5a_push_err(_self_.ptr(), _178053_st[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return std::make_tuple(_178069_is_pub,_178083_data);
		};
	};
	_178083_data=jule::Any(_1c9d10d89_build_node_data(_self_, _178053_st));
	_178083_data = jule::Any(_178083_data);
	return std::make_tuple(_178069_is_pub,_178083_data);
}



inline _1e43314d3_Node _1c9d12121_parse_node(jule::Ptr<_1c9d044ed_Parser> _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _179535_st) {
	_1e43314d3_Node _179617_node = _1e43314d3_Node{._field_token=_179535_st[0LL], };;
	jule::Bool _180014_is_pub;;
	jule::Any _180026_data;;
	std::tie(_180014_is_pub,_180026_data) = _1c9d11d02_build_general_scope_node_data(_self_, _179535_st);
	if ((_180026_data == nullptr)) {
		return _179617_node;
	};
	_179617_node._field_data=jule::Any(_180026_data);
	_1c9d1174c_apply_meta(_self_.ptr(), _179617_node,_180014_is_pub);
	_1c9d1110e_check_directive(_self_.ptr(), _179617_node);
	_1c9d119c2_check_use_decl(_self_.ptr(), _179617_node);
	return _179617_node;
}



inline void _1c9d12396_append_node(jule::Ptr<_1c9d044ed_Parser> _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _181336_st) {
	if ((_181336_st.len() == 0LL)) {
		return;;
	};
	_1e43314d3_Node _181817_node = _1c9d12121_parse_node(_self_, _181336_st);;
	if (((_181817_node._field_data == nullptr) || _1c9d04a92_stopped(_self_.ptr()))) {
		return;;
	};
	{
		
		if (_1e43617dd_is_directive(&_181817_node)) {
			_case_begin_1cbc04473:;
			{
				_1c9d05b1a_push_directive(_self_.ptr(), _181817_node._field_data.operator jule::Ptr<_1e43620c4_Directive>());
			}
		}
		else if (_1e4361c1c_is_use_decl(&_181817_node)) {
			_case_begin_1cbc04198:;
			{
				_self_.get()._field_ast.get()._field_use_decls = jule::alloc_for_append(_self_.get()._field_ast.get()._field_use_decls,1);_self_.get()._field_ast.get()._field_use_decls.__push(_181817_node._field_data.operator jule::Ptr<_1e43778e2_UseDecl>());;
			}
		}
		else if ((_1e4331901_is_decl(&_181817_node) || _1e43619a8_is_impl(&_181817_node))) {
			_case_begin_1cbc0420e:;
			{
				_self_.get()._field_ast.get()._field_nodes = jule::alloc_for_append(_self_.get()._field_ast.get()._field_nodes,1);_self_.get()._field_ast.get()._field_nodes.__push(_181817_node);;
			}
		}
		else {
			_case_begin_1cbc04132:;
			{
				_1c9d04e5a_push_err(_self_.ptr(), _181817_node._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1cbc040cc:;
	};
}



inline void _1c9d12808_remove_range(_1c9d044ed_Parser* _self_, jule::I64 _183631_i, jule::Str _183639_kind, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _183651_tokens, jule::Slice<jule::I64>& _183674_ranges) {
	jule::Str _183713_close = _1c9d035a7_get_close_kind_of_brace(_183639_kind);;
	for (; (_183631_i >= 0LL); (_183631_i)--) {
		{
			jule::Ptr<_20cd9e6ec_Token> _183917_tok = _183651_tokens[_183674_ranges[_183631_i]];;
			if ((_183917_tok.get()._field_kind != _183713_close)) {
				goto _iter_next_1cbc08378;
			};
			_183674_ranges=jule::append(_183674_ranges.slice(0LL,_183631_i),_183674_ranges.slice((_183631_i + 1LL)));
			goto _iter_end_1cbc08378;
		}
	_iter_next_1cbc08378:;
	}
	_iter_end_1cbc08378:;;
}



inline void _1c9d12be3_push_wrong_order_close_err(_1c9d044ed_Parser* _self_, jule::Ptr<_20cd9e6ec_Token>& _184846_t, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _184858_tokens, jule::Slice<jule::I64>& _184877_ranges) {
	{
		auto &_match_expr{ _184858_tokens[_184877_ranges[(_184877_ranges.len() - 1LL)]].get()._field_kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_1cbc0b106:;
			{
				_1c9d04e5a_push_err(&(*_self_), _184846_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_1cbc0b16c:;
			{
				_1c9d04e5a_push_err(&(*_self_), _184846_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_1cbc0b1d3:;
			{
				_1c9d04e5a_push_err(&(*_self_), _184846_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>());
			}
		}
		_match_end_1cbc0b05c:;
	};
}



inline void _1c9d13166_push_range_close(_1c9d044ed_Parser* _self_, jule::Ptr<_20cd9e6ec_Token> _185935_t, jule::Str _185946_left, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _185958_tokens, jule::Slice<jule::I64>& _185981_ranges) {
	jule::I64 _186013_n = _185981_ranges.len();;
	if ((_186013_n == 0LL)) {
		{
			auto &_match_expr{ _185935_t.get()._field_kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_1cbc0e758:;
				{
					_1c9d04e5a_push_err(&(*_self_), _185935_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_1cbc0ea88:;
				{
					_1c9d04e5a_push_err(&(*_self_), _185935_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_1cbc0eaee:;
				{
					_1c9d04e5a_push_err(&(*_self_), _185935_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>());
				}
			}
			_match_end_1cbc0e956:;
		};
		return;;
	} else if ((_185958_tokens[_185981_ranges[(_186013_n - 1LL)]].get()._field_kind != _185946_left)) {
		_1c9d12be3_push_wrong_order_close_err(&(*_self_), _185935_t,_185958_tokens,_185981_ranges);
	};
	_1c9d12808_remove_range(&(*_self_), static_cast<jule::I64>((_186013_n - 1LL)),_185935_t.get()._field_kind,_185958_tokens,_185981_ranges);
}



inline void _1c9d133db_check_ranges(_1c9d044ed_Parser* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _187732_tokens) {
	jule::Slice<jule::I64> _187817_ranges = nullptr;;
	{
		auto &expr = _187732_tokens;
		auto it = expr.begin();
		_iter_begin_1cbc1398d:;
		if (it != expr.end()) {
			jule::I64 _188013_i = it - expr.begin();
			jule::Ptr<_20cd9e6ec_Token> &_188016_token = *it;
			{
				if ((_188016_token.get()._field_id != static_cast<jule::U64>(3LLU))) {
					goto _iter_next_1cbc1398d;
				};
				{
					auto &_match_expr{ _188016_token.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_1cbc143ea:;
						{
							_187817_ranges = jule::alloc_for_append(_187817_ranges,1);_187817_ranges.__push(_188013_i);;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1cbc14593:;
						{
							_1c9d13166_push_range_close(&(*_self_), _188016_token,jule::Str("(", 1),_187732_tokens,_187817_ranges);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1cbc14b8c:;
						{
							_1c9d13166_push_range_close(&(*_self_), _188016_token,jule::Str("{", 1),_187732_tokens,_187817_ranges);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1cbc14c03:;
						{
							_1c9d13166_push_range_close(&(*_self_), _188016_token,jule::Str("[", 1),_187732_tokens,_187817_ranges);
						}
					}
					_match_end_1cbc14a49:;
				};
			}
			_iter_next_1cbc1398d:;
			++it;
			_188013_i++;
			goto _iter_begin_1cbc1398d;
		}
		_iter_end_1cbc1398d:;
	};
	{
		auto &expr = _187817_ranges;
		auto it = expr.begin();
		_iter_begin_1cbc17178:;
		if (it != expr.end()) {
			jule::I64 _189816_i = *it;
			{
				jule::Ptr<_20cd9e6ec_Token> _189917_token = _187732_tokens[_189816_i];;
				{
					auto &_match_expr{ _189917_token.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1cbc1791a:;
						{
							_1c9d04e5a_push_err(&(*_self_), _189917_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_1cbc17981:;
						{
							_1c9d04e5a_push_err(&(*_self_), _189917_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1cbc179e7:;
						{
							_1c9d04e5a_push_err(&(*_self_), _189917_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					_match_end_1cbc178a4:;
				};
			}
			_iter_next_1cbc17178:;
			++it;
			goto _iter_begin_1cbc17178;
		}
		_iter_end_1cbc17178:;
	};
}



inline void _1c9d13661_parse(jule::Ptr<_1c9d044ed_Parser> _self_, jule::Ptr<_20cda4adc_File>& _191130_f) {
	_self_.get()._field_ast=jule::new_ptr<_1e433079b_Ast>(_1e433079b_Ast{._field_file=_191130_f, });
	_1c9d133db_check_ranges(_self_.ptr(), _191130_f.get()._field_tokens);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1c9cd7547_Stmt>> _192117_stmts = _1c9cd78dd_split_stmts(_191130_f.get()._field_tokens);;
	jule::I64 _192417_i = 0LL;;
	_julec_label_iter:;
	for (; (_192417_i < _192117_stmts.len()); (_192417_i)++) {
		{
			jule::Ptr<_1c9cd7547_Stmt> _192721_stmt = _192117_stmts[_192417_i];;
			if ((_192721_stmt.get()._field_tokens.len() == 0LL)) {
				return;;
			};
			jule::Any _193225_data;;
			std::tie(std::ignore,_193225_data) = _1c9d11d02_build_general_scope_node_data(_self_, _192721_stmt.get()._field_tokens);
			if ((_193225_data == nullptr)) {
				goto _iter_end_1cbc1b578;
			};
			if (_1c9d04a92_stopped(_self_.ptr())) {
				return;;
			};
			{
				auto &_match_expr{ _193225_data };
				
				if (_match_expr.type_is<jule::Ptr<_1e43620c4_Directive>>()) {
					_case_begin_1cbc1d624:;
					{
						jule::Ptr<_1e43620c4_Directive> _194325_d = _193225_data.operator jule::Ptr<_1e43620c4_Directive>();;
						if (((_194325_d != nullptr) && _20ca91aa4_is_top_directive(_194325_d.get()._field_tag.get()._field_kind))) {
							_self_.get()._field_ast.get()._field_top_directives = jule::alloc_for_append(_self_.get()._field_ast.get()._field_top_directives,1);_self_.get()._field_ast.get()._field_top_directives.__push(_194325_d);;
						} else {
							goto _iter_end_1cbc1b578;
						};
					}
				}
				else {
					_case_begin_1cbc1d5ad:;
					{
						goto _iter_end_1cbc1b578;
					}
				}
				_match_end_1cbc1d415:;
			};
		}
	_iter_next_1cbc1b578:;
	}
	_iter_end_1cbc1b578:;;
	_self_.get()._field_errors=nullptr;
	for (; (_192417_i < _192117_stmts.len()); (_192417_i)++) {
		{
			jule::Ptr<_1c9cd7547_Stmt> _195821_stmt = _192117_stmts[_192417_i];;
			_1c9d12396_append_node(_self_, _195821_stmt.get()._field_tokens);
			if (_1c9d04a92_stopped(_self_.ptr())) {
				goto _iter_end_1cbc1cc1c;
			};
		}
	_iter_next_1cbc1cc1c:;
	}
	_iter_end_1cbc1cc1c:;;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1c9d04e5a_push_err(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c9d044ed_Parser _Src) {
	_Stream << "Parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _1c9d153bb_push_err(_1c9d14ce4_TypeBuilder* _self_, jule::Ptr<_20cd9e6ec_Token> _7727_token, jule::Str _7742_fmt) {
	if ((*_self_)._field_err) {
		_1c9d04e5a_push_err((*_self_)._field_p.ptr(), _7727_token,_7742_fmt,jule::Slice<jule::Any>());
	};
}



inline void _1c9d156da_push_suggestion(_1c9d14ce4_TypeBuilder* _self_, jule::Str _8434_fmt, jule::Slice<jule::Any> _8447_args) {
	if ((*_self_)._field_err) {
		_1c9d05279_push_suggestion((*_self_)._field_p.ptr(), _8434_fmt,jule::Any(_8447_args));
	};
}



inline jule::Ptr<_1e436257a_TypeDecl> _1c9d1594e_build_prim(_1c9d14ce4_TypeBuilder* _self_) {
	jule::Ptr<_1e436257a_TypeDecl> _9117_t = _1c9d144ca_build_prim_type((*_self_)._field_tokens[(*((*_self_)._field_i))]);;
	((*((*_self_)._field_i)))++;
	return _9117_t;
}



inline jule::Ptr<_1e436257a_TypeDecl> _1c9d15bb3_build_namespace(_1c9d14ce4_TypeBuilder* _self_) {
	jule::Ptr<_1e436257a_TypeDecl> _9717_t = jule::new_ptr<_1e436257a_TypeDecl>(_1e436257a_TypeDecl{._field_token=(*_self_)._field_tokens[(*((*_self_)._field_i))], });;
	jule::Ptr<_1e4363317_NamespaceTypeDecl> _10117_nst = jule::new_ptr<_1e4363317_NamespaceTypeDecl>();;
	jule::I64 _10217_n = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_20cd9e6ec_Token> _10421_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if (((_10217_n & 1LL) == 0LL)) {
				if ((_10421_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
					_1c9d153bb_push_err(&(*_self_), _10421_token,jule::Str("invalid syntax", 14));
					_1c9d156da_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
				};
				_10117_nst.get()._field_idents = jule::alloc_for_append(_10117_nst.get()._field_idents,1);_10117_nst.get()._field_idents.__push(_10421_token);;
			} else if ((_10421_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
				goto _iter_end_1cbc274eb;
			};
			(_10217_n)++;
		}
	_iter_next_1cbc274eb:;
	}
	_iter_end_1cbc274eb:;;
	_10117_nst.get()._field_idents=_10117_nst.get()._field_idents.slice(0LL,(_10117_nst.get()._field_idents.len() - 1LL));
	((*((*_self_)._field_i)))--;
	_10117_nst.get()._field_kind=_1c9d16400_build_ident(&(*_self_)).get()._field_kind.operator jule::Ptr<_1e4362b0d_IdentTypeDecl>();
	_9717_t.get()._field_kind=jule::Any(_10117_nst);
	return _9717_t;
}



inline jule::Slice<jule::Ptr<_1e436257a_TypeDecl>> _1c9d15e27_build_generics(_1c9d14ce4_TypeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		return nullptr;
	};
	jule::Ptr<_20cd9e6ec_Token> _13013_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if (((_13013_token.get()._field_id != static_cast<jule::U64>(3LLU)) || (_13013_token.get()._field_kind != jule::Str("[", 1)))) {
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>> _13517_parts = _1c9d1618b_ident_generics(&(*_self_));;
	if ((_13517_parts.len() == 0LL)) {
		_1c9d153bb_push_err(&(*_self_), _13013_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1e436257a_TypeDecl>> _14117_types = jule::Slice<jule::Ptr<_1e436257a_TypeDecl>>::alloc(0LL,_13517_parts.len());;
	{
		auto &expr = _13517_parts;
		auto it = expr.begin();
		_iter_begin_1cbc3134b:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _14221_part = *it;
			{
				jule::I64 _14321_j = 0LL;;
				jule::Ptr<_1e436257a_TypeDecl> _14422_t;;
				std::tie(_14422_t,std::ignore) = _1c9d06874_build_type((*_self_)._field_p, _14221_part,(&(_14321_j)),true);
				if ((_14321_j < _14221_part.len())) {
					_1c9d153bb_push_err(&(*_self_), _14221_part[_14321_j],jule::Str("invalid syntax", 14));
				};
				_14117_types = jule::alloc_for_append(_14117_types,1);_14117_types.__push(_14422_t);;
			}
			_iter_next_1cbc3134b:;
			++it;
			goto _iter_begin_1cbc3134b;
		}
		_iter_end_1cbc3134b:;
	};
	return _14117_types;
}



inline jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>> _1c9d1618b_ident_generics(_1c9d14ce4_TypeBuilder* _self_) {
	jule::I64 _15413_first = (*((*_self_)._field_i));;
	jule::I64 _15517_range_n = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_20cd9e6ec_Token> _15717_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if ((_15717_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _15717_token.get()._field_kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1cbc34d33:;
						{
							(_15517_range_n)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1cbc35163:;
						{
							(_15517_range_n)--;
						}
					}
					_match_end_1cbc35031:;
				};
			};
			if ((_15517_range_n == 0LL)) {
				((*((*_self_)._field_i)))++;
				goto _iter_end_1cbc338ae;
			};
		}
	_iter_next_1cbc338ae:;
	}
	_iter_end_1cbc338ae:;;
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _17117_tokens = (*_self_)._field_tokens.slice((_15413_first + 1LL),((*((*_self_)._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>> _17218_parts;;
	jule::Slice<_20ca8ec5b_Log> _17225_errors;;
	std::tie(_17218_parts,_17225_errors) = _1c9d032dd_parts(_17117_tokens,static_cast<jule::U64>(8LLU),true);
	if ((*_self_)._field_err) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_17225_errors);
	};
	return _17218_parts;
}



inline jule::Ptr<_1e436257a_TypeDecl> _1c9d16400_build_ident(_1c9d14ce4_TypeBuilder* _self_) {
	if (((((*((*_self_)._field_i)) + 1LL) < (*_self_)._field_tokens.len()) && ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_id == static_cast<jule::U64>(23LLU)))) {
		return _1c9d15bb3_build_namespace(&(*_self_));
	};
	jule::Ptr<_20cd9e6ec_Token> _18317_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_1e4362b0d_IdentTypeDecl> _18417_it = jule::new_ptr<_1e4362b0d_IdentTypeDecl>(_1e4362b0d_IdentTypeDecl{._field_token=_18317_token, ._field_ident=_18317_token.get()._field_kind, ._field_cpp_linked=false, });;
	((*((*_self_)._field_i)))++;
	_18417_it.get()._field_generics=_1c9d15e27_build_generics(&(*_self_));
	return jule::new_ptr<_1e436257a_TypeDecl>(_1e436257a_TypeDecl{._field_token=_18317_token, ._field_kind=jule::Any(_18417_it)});
}



inline jule::Ptr<_1e436257a_TypeDecl> _1c9d16664_build_cpp_link(_1c9d14ce4_TypeBuilder* _self_) {
	if (((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len()) || ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_id != static_cast<jule::U64>(20LLU)))) {
		_1c9d153bb_push_err(&(*_self_), (*_self_)._field_tokens[(*((*_self_)._field_i))],jule::Str("invalid syntax", 14));
		return nullptr;
	};
	(*((*_self_)._field_i))+=2LL;
	jule::Ptr<_1e436257a_TypeDecl> _20317_t = _1c9d16400_build_ident(&(*_self_));;
	_20317_t.get()._field_kind.operator jule::Ptr<_1e4362b0d_IdentTypeDecl>().get()._field_cpp_linked=true;
	return _20317_t;
}



inline jule::Ptr<_1e436257a_TypeDecl> _1c9d168c8_build_fn(_1c9d14ce4_TypeBuilder* _self_) {
	jule::Ptr<_20cd9e6ec_Token> _20917_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_1e4371ca4_FnDecl> _21017_f = _1c9d0a647_build_fn_prototype((*_self_)._field_p, (*_self_)._field_tokens,(*((*_self_)._field_i)),false);;
	if ((_21017_f == nullptr)) {
		return nullptr;
	};
	if ((!(_1e4372106_is_anon(_21017_f.ptr())))) {
		_1c9d153bb_push_err(&(*_self_), _21017_f.get()._field_token,jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_1e436257a_TypeDecl>(_1e436257a_TypeDecl{._field_token=_20917_token, ._field_kind=jule::Any(_21017_f)});
}



inline jule::Ptr<_1e436257a_TypeDecl> _1c9d16b3c_build_ptr(_1c9d14ce4_TypeBuilder* _self_) {
	jule::Ptr<_20cd9e6ec_Token> _22417_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_1c9d153bb_push_err(&(*_self_), _22417_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_id == static_cast<jule::U64>(35LLU))) {
		((*((*_self_)._field_i)))++;
		return jule::new_ptr<_1e436257a_TypeDecl>(_1e436257a_TypeDecl{._field_token=_22417_token, ._field_kind=jule::Any(jule::new_ptr<_1e436404e_PtrTypeDecl>(_1e436404e_PtrTypeDecl{._field_elem=nullptr}))});
	};
	jule::Ptr<_1e436257a_TypeDecl> _24117_elem = _1c9d17e6d_step(&(*_self_));;
	if ((_24117_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1e436257a_TypeDecl>(_1e436257a_TypeDecl{._field_token=_22417_token, ._field_kind=jule::Any(jule::new_ptr<_1e436404e_PtrTypeDecl>(_1e436404e_PtrTypeDecl{._field_elem=_24117_elem}))});
}



inline jule::Ptr<_1e436257a_TypeDecl> _1c9d16da1_build_sptr(_1c9d14ce4_TypeBuilder* _self_) {
	jule::Ptr<_20cd9e6ec_Token> _25517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_1c9d153bb_push_err(&(*_self_), _25517_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1e436257a_TypeDecl> _26217_elem = _1c9d17e6d_step(&(*_self_));;
	if ((_26217_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1e436257a_TypeDecl>(_1e436257a_TypeDecl{._field_token=_25517_token, ._field_kind=jule::Any(jule::new_ptr<_1e4363603_SptrTypeDecl>(_1e4363603_SptrTypeDecl{._field_elem=_26217_elem}))});
}



inline jule::Ptr<_1e436257a_TypeDecl> _1c9d17115_build_op(_1c9d14ce4_TypeBuilder* _self_) {
	jule::Ptr<_20cd9e6ec_Token> _27617_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _27617_token.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1cbc4a6c8:;
			{
				return _1c9d16b3c_build_ptr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1cbc4a73e:;
			{
				return _1c9d16da1_build_sptr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1cbc4a50d:;
			{
				return jule::new_ptr<_1e436257a_TypeDecl>(_1e436257a_TypeDecl{._field_kind=jule::Any(jule::new_ptr<_1e4363603_SptrTypeDecl>(_1e4363603_SptrTypeDecl{._field_elem=_1c9d16da1_build_sptr(&(*_self_))}))});
			}
		}
		else {
			_case_begin_1cbc493ca:;
			{
				_1c9d153bb_push_err(&(*_self_), _27617_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1cbc49a5c:;
	};
}



inline jule::Ptr<_1e436257a_TypeDecl> _1c9d17379_build_slc(_1c9d14ce4_TypeBuilder* _self_) {
	jule::Ptr<_20cd9e6ec_Token> _29517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1e436257a_TypeDecl> _29717_elem = _1c9d17e6d_step(&(*_self_));;
	if ((_29717_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1e436257a_TypeDecl>(_1e436257a_TypeDecl{._field_token=_29517_token, ._field_kind=jule::Any(jule::new_ptr<_1e43638de_SlcTypeDecl>(_1e43638de_SlcTypeDecl{._field_elem=_29717_elem}))});
}



inline jule::Ptr<_1e436257a_TypeDecl> _1c9d175dd_build_arr(_1c9d14ce4_TypeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_1c9d153bb_push_err(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("type missing", 12));
		return nullptr;
	};
	jule::I64 _31813_expr_delta = (*((*_self_)._field_i));;
	jule::Ptr<_1e436257a_TypeDecl> _32017_elem = _1c9d17e6d_step(&(*_self_));;
	if ((_32017_elem == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1e436479c_ArrTypeDecl> _32517_arrt = jule::new_ptr<_1e436479c_ArrTypeDecl>(_1e436479c_ArrTypeDecl{._field_elem=_32017_elem, });;
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _32917_expr_tokens = (*_self_)._field_tokens.slice(0LL,_31813_expr_delta);;
	std::tie(std::ignore,_32917_expr_tokens) = _1c9d02dae_range_last(_32917_expr_tokens);
	_32917_expr_tokens=_32917_expr_tokens.slice(1LL,(_32917_expr_tokens.len() - 1LL));
	jule::Ptr<_20cd9e6ec_Token> _33217_token = _32917_expr_tokens[0LL];;
	if ((((_32917_expr_tokens.len() == 1LL) && (_33217_token.get()._field_id == static_cast<jule::U64>(7LLU))) && (_33217_token.get()._field_kind == jule::Str("...", 3)))) {
	} else {
		_32517_arrt.get()._field_size=_1c9d05587_build_expr((*_self_)._field_p, _32917_expr_tokens);
	};
	return jule::new_ptr<_1e436257a_TypeDecl>(_1e436257a_TypeDecl{._field_token=_33217_token, ._field_kind=jule::Any(_32517_arrt)});
}



inline jule::Ptr<_1e436257a_TypeDecl> _1c9d17995_build_map(_1c9d14ce4_TypeBuilder* _self_, jule::I64 _34528_colon, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _34545_tokens) {
	jule::Ptr<_20cd9e6ec_Token> _34617_colon_token = (*_self_)._field_tokens[_34528_colon];;
	if (((_34528_colon == 0LL) || ((_34528_colon + 1LL) >= _34545_tokens.len()))) {
		_1c9d153bb_push_err(&(*_self_), _34617_colon_token,jule::Str("type missing", 12));
		return nullptr;
	};
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _35117_key_tokens = _34545_tokens.slice(0LL,_34528_colon);;
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _35217_val_tokens = _34545_tokens.slice((_34528_colon + 1LL));;
	jule::Ptr<_1e4364ea6_MapTypeDecl> _35317_mapt = jule::new_ptr<_1e4364ea6_MapTypeDecl>(_1e4364ea6_MapTypeDecl{});;
	jule::I64 _35517_j = 0LL;;
	jule::Ptr<_1e436257a_TypeDecl> _35618_keyt;;
	jule::Bool _35628_ok;;
	std::tie(_35618_keyt,_35628_ok) = _1c9d06874_build_type((*_self_)._field_p, _35117_key_tokens,(&(_35517_j)),(*_self_)._field_err);
	if ((!(_35628_ok))) {
		return nullptr;
	} else if ((_35517_j < _35117_key_tokens.len())) {
		_1c9d153bb_push_err(&(*_self_), _35117_key_tokens[_35517_j],jule::Str("invalid syntax", 14));
	};
	_35317_mapt.get()._field_key=_35618_keyt;
	_35517_j=0LL;
	jule::Ptr<_1e436257a_TypeDecl> _36518_valt;;
	std::tie(_36518_valt,_35628_ok) = _1c9d06874_build_type((*_self_)._field_p, _35217_val_tokens,(&(_35517_j)),(*_self_)._field_err);
	if ((!(_35628_ok))) {
		return nullptr;
	} else if ((_35517_j < _35217_val_tokens.len())) {
		_1c9d153bb_push_err(&(*_self_), _35217_val_tokens[_35517_j],jule::Str("invalid syntax", 14));
	};
	_35317_mapt.get()._field_val=_36518_valt;
	return jule::new_ptr<_1e436257a_TypeDecl>(_1e436257a_TypeDecl{._field_token=_34617_colon_token, ._field_kind=jule::Any(_35317_mapt)});
}



inline jule::Ptr<_1e436257a_TypeDecl> _1c9d17c09_build_enumerable(_1c9d14ce4_TypeBuilder* _self_) {
	jule::Ptr<_20cd9e6ec_Token> _38017_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((((*((*_self_)._field_i)) + 2LL) >= (*_self_)._field_tokens.len()) || (_38017_token.get()._field_id != static_cast<jule::U64>(3LLU))) || (_38017_token.get()._field_kind != jule::Str("[", 1)))) {
		_1c9d153bb_push_err(&(*_self_), _38017_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	_38017_token=(*_self_)._field_tokens[(*((*_self_)._field_i))];
	if (((_38017_token.get()._field_id == static_cast<jule::U64>(3LLU)) && (_38017_token.get()._field_kind == jule::Str("]", 1)))) {
		return _1c9d17379_build_slc(&(*_self_));
	};
	((*((*_self_)._field_i)))--;
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _39418_map_tokens;;
	jule::I64 _39430_colon;;
	std::tie(_39418_map_tokens,_39430_colon) = _1c9d1481b_split_map_range((*_self_)._field_tokens,(*((*_self_)._field_i)));
	((*((*_self_)._field_i)))++;
	if ((_39430_colon == -1LL)) {
		return _1c9d175dd_build_arr(&(*_self_));
	};
	return _1c9d17995_build_map(&(*_self_), _39430_colon,_39418_map_tokens);
}



inline jule::Ptr<_1e436257a_TypeDecl> _1c9d17e6d_step(_1c9d14ce4_TypeBuilder* _self_) {
	jule::Ptr<_20cd9e6ec_Token> _40313_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _40313_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1cbc62811:;
			{
				return _1c9d1594e_build_prim(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1cbc625be:;
			{
				return _1c9d16400_build_ident(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1cbc62635:;
			{
				return _1c9d16664_build_cpp_link(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1cbc6269b:;
			{
				return _1c9d168c8_build_fn(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1cbc61a41:;
			{
				return _1c9d17115_build_op(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1cbc61aa7:;
			{
				return _1c9d17c09_build_enumerable(&(*_self_));
			}
		}
		else {
			_case_begin_1cbc605de:;
			{
				((*((*_self_)._field_i)))++;
				_1c9d153bb_push_err(&(*_self_), _40313_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1cbc618dc:;
	};
}



inline std::tuple<jule::Ptr<_1e436257a_TypeDecl>,jule::Bool> _1c9d181d2_build(_1c9d14ce4_TypeBuilder* _self_) {
	jule::Bool _42644_ok = jule::Bool();
	jule::Ptr<_1e436257a_TypeDecl> _42717_root = _1c9d17e6d_step(&(*_self_));;
	if ((_42717_root == nullptr)) {
		_42644_ok = false;
		return std::make_tuple(_1c9d14288_build_void_type(),_42644_ok);
	};
	_42644_ok = true;
	return std::make_tuple(_42717_root,_42644_ok);
}







std::ostream &operator<<(std::ostream &_Stream, _1c9d14ce4_TypeBuilder _Src) {
	_Stream << "TypeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c98b8a52_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "prod:" << _Src._field_prod << ", ";
	_Stream << "test:" << _Src._field_test << ", ";
	_Stream << "compiler:" << _Src._field_compiler << ", ";
	_Stream << "cpp_std:" << _Src._field_cpp_std;
	_Stream << "}";
	return _Stream;
}



inline void _1c98ba548_push_err(_1c98b9ee8_DirectiveEval* _self_, jule::Ptr<_20cd9e6ec_Token> _2127_t, jule::Str _2138_fmt, jule::Slice<jule::Any> _2151_args) {
	(*_self_)._field_logs = jule::alloc_for_append((*_self_)._field_logs,1);(*_self_)._field_logs.__push(_20ca8ec5b_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_row=_2127_t.get()._field_row, ._field_column=_2127_t.get()._field_column, ._field_path=_2127_t.get()._field_file.get()._field_path, ._field_text=_20ca9019b_logf(_2138_fmt,jule::Any(_2151_args)), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>> _1c98ba900_split_operans(_1c98b9ee8_DirectiveEval* _self_, jule::Str _3332_op, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _3352_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>>::alloc(0LL,10LL);;
	jule::I64 _3617_i = 0LL;;
	jule::I64 _3717_range_n = 0LL;;
	jule::I64 _3817_last = 0LL;;
	for (; (_3617_i < (_3352_tokens.len() - 1LL)); (_3617_i)++) {
		{
			jule::Ptr<_20cd9e6ec_Token> _4017_b = _3352_tokens[_3617_i];;
			if ((_4017_b.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4017_b.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1cd4d8a69:;
						{
							(_3717_range_n)++;
							goto _iter_next_1cd4d7b67;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1cd4d8be0:;
						{
							(_3717_range_n)--;
						}
					}
					_match_end_1cd4d89ae:;
				};
			};
			if (((_3717_range_n > 0LL) || (_4017_b.get()._field_id != static_cast<jule::U64>(7LLU)))) {
				goto _iter_next_1cd4d7b67;
			};
			if ((_4017_b.get()._field_kind == _3332_op)) {
				_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3352_tokens.slice(_3817_last,_3617_i));;
				_3817_last=static_cast<jule::I64>((_3617_i + 1LL));
			};
		}
	_iter_next_1cd4d7b67:;
	}
	_iter_end_1cd4d7b67:;;
	if ((_3817_last < _3352_tokens.len())) {
		_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3352_tokens.slice(_3817_last));;
	} else {
		_1c98ba548_push_err(&(*_self_), _3352_tokens[(_3817_last - 1LL)],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _3417_parts;
}



inline jule::Bool _1c98bac0d_eval_directive_ident(_1c98b9ee8_DirectiveEval* _self_, jule::Str _7335_ident) {
	if (_7335_ident.empty()) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1cd4dca4b:;
		if (it != expr.end()) {
			jule::Str &_7716_var = *it;
			{
				if ((_7716_var == _7335_ident)) {
					return true;
				};
			}
			_iter_next_1cd4dca4b:;
			++it;
			goto _iter_begin_1cd4dca4b;
		}
		_iter_end_1cd4dca4b:;
	};
	return false;
}



inline jule::Bool _1c98bb01b_eval_directive_part(_1c98b9ee8_DirectiveEval* _self_, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _8742_part) {
	jule::Bool _8813_logical_not = ((_8742_part[0LL].get()._field_id == static_cast<jule::U64>(7LLU)) && (_8742_part[0LL].get()._field_kind == jule::Str("!", 1)));;
	if (_8813_logical_not) {
		_8742_part=_8742_part.slice(1LL);
	};
	if ((_8742_part.len() > 1LL)) {
		_1c98ba548_push_err(&(*_self_), _8742_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	};
	jule::Bool _9817_result = _1c98bac0d_eval_directive_ident(&(*_self_), _8742_part[0LL].get()._field_kind);;
	if (_8813_logical_not) {
		_9817_result=(!(_9817_result));
	};
	return _9817_result;
}



inline jule::Bool _1c98bb280_eval(_1c98b9ee8_DirectiveEval* _self_) {
	if (((*_self_)._field_d.get()._field_args.len() == 0LL)) {
		_1c98ba548_push_err(&(*_self_), (*_self_)._field_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return false;
	};
	jule::Bool _11117_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>> _11317_logical_or_parts = _1c98ba900_split_operans(&(*_self_), jule::Str("||", 2),(*_self_)._field_d.get()._field_args);;
	if ((_11317_logical_or_parts == nullptr)) {
		return false;
	};
	{
		auto &expr = _11317_logical_or_parts;
		auto it = expr.begin();
		_iter_begin_1cd4e449d:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _11821_part = *it;
			{
				jule::Bool _11921_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>> _12021_logical_and_parts = _1c98ba900_split_operans(&(*_self_), jule::Str("&&", 2),_11821_part);;
				if ((_12021_logical_and_parts == nullptr)) {
					return false;
				};
				{
					auto &expr = _12021_logical_and_parts;
					auto it = expr.begin();
					_iter_begin_1cd4e5b75:;
					if (it != expr.end()) {
						jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _12525_and_part = *it;
						{
							jule::Ptr<_20cd9e6ec_Token> _12621_first = _12525_and_part[0LL];;
							if (((_12621_first.get()._field_id == static_cast<jule::U64>(3LLU)) && (_12621_first.get()._field_kind == jule::Str("(", 1)))) {
								jule::Ptr<_20cd9e6ec_Token> _12825_end = _12525_and_part[(_12525_and_part.len() - 1LL)];;
								if (((_12825_end.get()._field_id != static_cast<jule::U64>(3LLU)) || (_12825_end.get()._field_kind != jule::Str(")", 1)))) {
									_1c98ba548_push_err(&(*_self_), _12621_first,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
									return false;
								};
								_12525_and_part=_12525_and_part.slice(1LL,(_12525_and_part.len() - 1LL));
							};
							_11921_and=(_11921_and && _1c98bb01b_eval_directive_part(&(*_self_), _12525_and_part));
						}
						_iter_next_1cd4e5b75:;
						++it;
						goto _iter_begin_1cd4e5b75;
					}
					_iter_end_1cd4e5b75:;
				};
				_11117_result=(_11117_result || _11921_and);
			}
			_iter_next_1cd4e449d:;
			++it;
			goto _iter_begin_1cd4e449d;
		}
		_iter_end_1cd4e449d:;
	};
	return _11117_result;
}







std::ostream &operator<<(std::ostream &_Stream, _1c98b9ee8_DirectiveEval _Src) {
	_Stream << "DirectiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c9e46563_JuleImporter> static__1e498b852_new(_1c98b8a52_CompileInfo _5823_info) {
	jule::Ptr<_1c9e46563_JuleImporter> _5917_imp = jule::new_ptr<_1c9e46563_JuleImporter>(_1c9e46563_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_20caa3654_PATH_STDLIB}), });;
	_1c98b936b_init_vars(_5917_imp.get()._field_vars,_5823_info);
	return _5917_imp;
}



inline jule::Slice<jule::Ptr<_1e46a4768_ImportInfo>> _1e49a52b6_all_packages(_1c9e46563_JuleImporter* _self_) {
	return (*_self_)._field_pkgs;
}



inline void _1e49b60eb_set_mod_path(_1c9e46563_JuleImporter* _self_, jule::Str _7535_path) {
	(*_self_)._field_mod=_7535_path;
}



inline jule::Str _1e49c4a22_get_mod_path(_1c9e46563_JuleImporter* _self_) {
	return (*_self_)._field_mod;
}



inline jule::Str _1e49c743c_mod_by_id(_1c9e46563_JuleImporter* _self_, jule::I64 _8328_id) {
	return (*_self_)._field_mods[_8328_id];
}



inline jule::Ptr<_1e46a4768_ImportInfo> _1c9d72505_get_import(_1c9e46563_JuleImporter* _self_, jule::Str _8733_path) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1cd4ed6a5:;
		if (it != expr.end()) {
			jule::Ptr<_1e46a4768_ImportInfo> _8821_p = *it;
			{
				if ((_8821_p.get()._field_path == _8733_path)) {
					return _8821_p;
				};
			}
			_iter_next_1cd4ed6a5:;
			++it;
			goto _iter_begin_1cd4ed6a5;
		}
		_iter_end_1cd4ed6a5:;
	};
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_1e433079b_Ast>>,jule::Slice<_20ca8ec5b_Log>> _1c9dadcb1_import_package(_1c9e46563_JuleImporter* _self_, jule::Str _9637_path, jule::Bool _9648_update_mod) {
	jule::Slice<jule::Ptr<_2252b727e_DirEntry>> _9717_dirents = ({
		auto except = static__2254a5769_read(_9637_path);
		(except.ok()) ? (except.result) : ({{
			return std::make_tuple(nullptr,jule::Slice<_20ca8ec5b_Log>::make({_1e4980428_flat_compiler_err((jule::Str("connot read package directory: ", 31) + _9637_path))}));
		} jule::Slice<jule::Ptr<_2252b727e_DirEntry>>();});
	});;
	if (_9648_update_mod) {
		jule::Str _10217_new_mod = _20cdd703c_find_module_file_deep(_9637_path);;
		if ((_10217_new_mod != (*_self_)._field_mod)) {
			(*_self_)._field_mod=_10217_new_mod;
			jule::Slice<_20ca8ec5b_Log> _10525_errs = _20cdd815e_check_module_file((*_self_)._field_mod);;
			if ((_10525_errs.len() != 0LL)) {
				return std::make_tuple(nullptr,_10525_errs);
			};
		};
	};
	jule::Slice<jule::Ptr<_1e433079b_Ast>> _11217_asts = jule::Slice<jule::Ptr<_1e433079b_Ast>>::alloc(0LL,_9717_dirents.len());;
	{
		auto &expr = _9717_dirents;
		auto it = expr.begin();
		_iter_begin_1cd503226:;
		if (it != expr.end()) {
			jule::Ptr<_2252b727e_DirEntry> _11316_dirent = *it;
			{
				if ((_2252e2012_is_dir(_11316_dirent.get()._field_stat.ptr()) || (!(_20c82bb3b_has_suffix(_11316_dirent.get()._field_name,jule::Str(".jule", 5)))))) {
					goto _iter_next_1cd503226;
				};
				jule::Str _11917__path = _20b961436_join(jule::Slice<jule::Str>::make({_9637_path,_11316_dirent.get()._field_name}));;
				jule::Ptr<_20cda4adc_File> _12021_file = _20cda611b_new_file_set(_11917__path);;
				_20cda526e_fill(_12021_file.ptr(), _1e497d448_read_buff(_12021_file.get()._field_path));
				jule::Slice<_20ca8ec5b_Log> _12221_errors = _20cdb1984_lex(_12021_file,static_cast<jule::I64>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12221_errors);
				};
				jule::Ptr<_1c9c90214_FileInfo> _12721_finfo = _1c9cd518d_parse_file(_12021_file);;
				if ((_12721_finfo.get()._field_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12721_finfo.get()._field_errors);
				};
				if ((!(_1c98b7b83_is_pass_file_annotation(_11316_dirent.get()._field_name)))) {
					goto _iter_next_1cd503226;
				};
				jule::Bool _13718_r;;
				jule::Slice<_20ca8ec5b_Log> _13725_logs;;
				std::tie(_13718_r,_13725_logs) = _1c9e5dcd9_is_pass_build_directives(&(*_self_), _12721_finfo.get()._field_ast);
				if ((_13725_logs.len() > 0LL)) {
					return std::make_tuple(nullptr,_13725_logs);
				};
				if ((!(_13718_r))) {
					goto _iter_next_1cd503226;
				};
				_11217_asts = jule::alloc_for_append(_11217_asts,1);_11217_asts.__push(_12721_finfo.get()._field_ast);;
			}
			_iter_next_1cd503226:;
			++it;
			goto _iter_begin_1cd503226;
		}
		_iter_end_1cd503226:;
	};
	return std::make_tuple(_11217_asts,nullptr);
}



inline void _1c9e5b9da_imported(_1c9e46563_JuleImporter* _self_, jule::Ptr<_1e46a4768_ImportInfo> _15335_imp) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1cd50a173:;
		if (it != expr.end()) {
			jule::Ptr<_1e46a4768_ImportInfo> _15516_p = *it;
			{
				if (((_15516_p.get()._field_cpp_linked == _15335_imp.get()._field_cpp_linked) && (_15516_p.get()._field_link_path == _15335_imp.get()._field_link_path))) {
					return;;
				};
			}
			_iter_next_1cd50a173:;
			++it;
			goto _iter_begin_1cd50a173;
		}
		_iter_end_1cd50a173:;
	};
	if (((*_self_)._field_mod.len() != 0LL)) {
		{
			auto &expr = (*_self_)._field_mods;
			auto it = expr.begin();
			_iter_begin_1cd50b3e9:;
			if (it != expr.end()) {
				jule::I64 _16217_i = it - expr.begin();
				jule::Str _16220_mod = *it;
				{
					if (((*_self_)._field_mod == _16220_mod)) {
						_15335_imp.get()._field_mod_id=_16217_i;
						goto _julec_label_setted;
					};
				}
				_iter_next_1cd50b3e9:;
				++it;
				_16217_i++;
				goto _iter_begin_1cd50b3e9;
			}
			_iter_end_1cd50b3e9:;
		};
		_15335_imp.get()._field_mod_id=static_cast<jule::I64>((*_self_)._field_mods.len());
		(*_self_)._field_mods = jule::alloc_for_append((*_self_)._field_mods,1);(*_self_)._field_mods.__push((*_self_)._field_mod);;
		_julec_label_setted:;
	};
	(*_self_)._field_pkgs = jule::alloc_for_append((*_self_)._field_pkgs,1);(*_self_)._field_pkgs.__push(_15335_imp);;
}



inline std::tuple<jule::Bool,jule::Slice<_20ca8ec5b_Log>> _1c9e5dcd9_is_pass_build_directives(_1c9e46563_JuleImporter* _self_, jule::Ptr<_1e433079b_Ast>& _17948_file) {
	{
		auto &expr = _17948_file.get()._field_top_directives;
		auto it = expr.begin();
		_iter_begin_1cd50e52e:;
		if (it != expr.end()) {
			jule::Ptr<_1e43620c4_Directive> _18021_td = *it;
			{
				if ((_18021_td.get()._field_tag.get()._field_kind != jule::Str("build", 5))) {
					goto _iter_next_1cd50e52e;
				};
				_1c98b9ee8_DirectiveEval _18421_de = _1c98b9ee8_DirectiveEval{._field_d=_18021_td, ._field_vars=(*_self_)._field_vars};;
				jule::Bool _18817_result = _1c98bb280_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					return std::make_tuple(false,_18421_de._field_logs);
				};
				if ((!(_18817_result))) {
					return std::make_tuple(false,nullptr);
				};
			}
			_iter_next_1cd50e52e:;
			++it;
			goto _iter_begin_1cd50e52e;
		}
		_iter_end_1cd50e52e:;
	};
	return std::make_tuple(true,nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1c9e46563_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c9e85e10_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "globals:" << _Src._field_globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1cc56383c_is_common_ordered(jule::Slice<jule::Ptr<_1e43360cb_Struct>>& _1837_s, jule::Ptr<_1e43360cb_Struct> _1846_t) {
	jule::Ptr<_1e43360cb_Struct>* _1917_p = (&(_1846_t.get()._field_depends[0LL]));;
	jule::Ptr<_1e43360cb_Struct>* _2013_end = (_1917_p + _1846_t.get()._field_depends.len());;
	{
		auto &expr = _1837_s;
		auto it = expr.begin();
		_iter_begin_1cc566763:;
		if (it != expr.end()) {
			jule::Ptr<_1e43360cb_Struct> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1846_t)) {
						goto _iter_end_1cc566763;
					};
					if ((((*(_1917_p)).get()._field_cpp_linked || ((*(_1917_p)).get()._field_depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;
						};
					};
				};
			}
			_iter_next_1cc566763:;
			++it;
			goto _iter_begin_1cc566763;
		}
		_iter_end_1cc566763:;
	};
	return false;
}

inline jule::Bool _1cc56b58c_is_common_ordered(jule::Slice<jule::Ptr<_1e46c6eb6_Var>>& _1837_s, jule::Ptr<_1e46c6eb6_Var> _1846_t) {
	jule::Ptr<_1e46c6eb6_Var>* _1917_p = (&(_1846_t.get()._field_depends[0LL]));;
	jule::Ptr<_1e46c6eb6_Var>* _2013_end = (_1917_p + _1846_t.get()._field_depends.len());;
	{
		auto &expr = _1837_s;
		auto it = expr.begin();
		_iter_begin_1cc56e46e:;
		if (it != expr.end()) {
			jule::Ptr<_1e46c6eb6_Var> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1846_t)) {
						goto _iter_end_1cc56e46e;
					};
					if ((((*(_1917_p)).get()._field_cpp_linked || ((*(_1917_p)).get()._field_depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;
						};
					};
				};
			}
			_iter_next_1cc56e46e:;
			++it;
			goto _iter_begin_1cc56e46e;
		}
		_iter_end_1cc56e46e:;
	};
	return false;
}



inline void _1cc55ec67_order_common(jule::Slice<jule::Ptr<_1e43360cb_Struct>>& _3940_s) {
	jule::I64 _4017_i = 0LL;;
	{
		auto &expr = _3940_s;
		auto it = expr.begin();
		_iter_begin_1cc560e99:;
		if (it != expr.end()) {
			jule::I64 _4114_j = it - expr.begin();
			jule::Ptr<_1e43360cb_Struct> _4121_t = *it;
			{
				if ((_4121_t.get()._field_cpp_linked || (_4121_t.get()._field_depends.len() == 0LL))) {
					_3940_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_1cc560e99:;
			++it;
			_4114_j++;
			goto _iter_begin_1cc560e99;
		}
		_iter_end_1cc560e99:;
	};
	jule::I64 _4817_j = _4017_i;;
	for (; (_4817_j < _3940_s.len()); (_4817_j)++) {
		{
			jule::I64 _5021_k = _4017_i;;
			for (; (_5021_k < (_3940_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(_1cc56383c_is_common_ordered(_3940_s,_3940_s[_5021_k])))) {
						_3940_s.swap(_5021_k,static_cast<jule::I64>((_5021_k + 1LL)));
					};
				}
			_iter_next_1cc563100:;
			}
			_iter_end_1cc563100:;;
		}
	_iter_next_1cc560828:;
	}
	_iter_end_1cc560828:;;
}

inline void _1cc5634b8_order_common(jule::Slice<jule::Ptr<_1e46c6eb6_Var>>& _3940_s) {
	jule::I64 _4017_i = 0LL;;
	{
		auto &expr = _3940_s;
		auto it = expr.begin();
		_iter_begin_1cc568be9:;
		if (it != expr.end()) {
			jule::I64 _4114_j = it - expr.begin();
			jule::Ptr<_1e46c6eb6_Var> _4121_t = *it;
			{
				if ((_4121_t.get()._field_cpp_linked || (_4121_t.get()._field_depends.len() == 0LL))) {
					_3940_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_1cc568be9:;
			++it;
			_4114_j++;
			goto _iter_begin_1cc568be9;
		}
		_iter_end_1cc568be9:;
	};
	jule::I64 _4817_j = _4017_i;;
	for (; (_4817_j < _3940_s.len()); (_4817_j)++) {
		{
			jule::I64 _5021_k = _4017_i;;
			for (; (_5021_k < (_3940_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(_1cc56b58c_is_common_ordered(_3940_s,_3940_s[_5021_k])))) {
						_3940_s.swap(_5021_k,static_cast<jule::I64>((_5021_k + 1LL)));
					};
				}
			_iter_next_1cc56ad50:;
			}
			_iter_end_1cc56ad50:;;
		}
	_iter_next_1cc567016:;
	}
	_iter_end_1cc567016:;;
}



inline void static__1c9de2157_order_structures(jule::Slice<jule::Ptr<_1e43360cb_Struct>>& _6141_structs) {
	_1cc55ec67_order_common(_6141_structs);
}



inline void static__1c9e68354_order_vars(jule::Slice<jule::Ptr<_1e46c6eb6_Var>>& _6735_vars) {
	_1cc5634b8_order_common(_6735_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _1e4966e7b_DefineOrderer _Src) {
	_Stream << "DefineOrderer{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ca028ea3_LiveTable _Src) {
	_Stream << "LiveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs;
	_Stream << "}";
	return _Stream;
}



inline void _1ca05d58c_optimize_child(jule::Ptr<_1ca05d1a2_ScopeDeadCode> _self_, jule::Ptr<_1e46862c7_Scope>& _3839_s) {
	jule::Ptr<_1ca05d1a2_ScopeDeadCode> _3917_sdc = jule::new_ptr<_1ca05d1a2_ScopeDeadCode>(_1ca05d1a2_ScopeDeadCode{._field_parent=_self_, ._field_s=_3839_s, ._field_stmts=(&(_3839_s.get()._field_stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos});;
	{
		_1ca060924_optimize_stmts(_3917_sdc);
	};
}



inline void _1ca05d812_optimize_body_child(jule::Ptr<_1ca05d1a2_ScopeDeadCode> _self_, jule::Ptr<_1e46862c7_Scope>& _4944_s) {
	jule::Ptr<_1ca05d1a2_ScopeDeadCode> _5017_sdc = jule::new_ptr<_1ca05d1a2_ScopeDeadCode>(_1ca05d1a2_ScopeDeadCode{._field_s=_4944_s, ._field_stmts=(&(_4944_s.get()._field_stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos});;
	{
		_1ca060924_optimize_stmts(_5017_sdc);
	};
}



inline void _1ca05da87_optimize_expr_model(jule::Ptr<_1ca05d1a2_ScopeDeadCode> _self_, jule::Any& _5944_model) {
	_1ca061c55_ExprDeadCode _6013_edc = static__1ca062805_new(_self_);;
	_1ca067ca0_optimize(&_6013_edc, _5944_model);
}



inline void _1ca05dc63_eliminate_followed(_1ca05d1a2_ScopeDeadCode* _self_) {
	if (((*_self_)._field_gotos.get().len() != 0LL)) {
		return;;
	};
	{
		(*((*_self_)._field_stmts))=(*((*_self_)._field_stmts)).slice(0LL,((*_self_)._field_i + 1LL));
	};
	jule::Ptr<_1ca05d1a2_ScopeDeadCode> _7117_parent = (*_self_)._field_parent;;
	while ((_7117_parent != nullptr)) {
		{
			{
				(*(_7117_parent.get()._field_stmts))=(*(_7117_parent.get()._field_stmts)).slice(0LL,(_7117_parent.get()._field_i + 1LL));
			};
			_7117_parent=_7117_parent.get()._field_parent;
		}
	_iter_next_1cd5e896a:;
	}
	_iter_end_1cd5e896a:;;
}



inline void _1ca05ded8_push_goto(jule::Ptr<_1ca05d1a2_ScopeDeadCode> _self_, jule::Ptr<_1e4688d02_GotoSt> _8033_gt) {
	jule::I64 _8117_i = 0LL;;
	for (; (_8117_i < _self_.get()._field_labels.get().len()); (_8117_i)++) {
		{
			if ((_8033_gt.get()._field_ident == (*(_self_.get()._field_labels))[_8117_i].get()._field_ident)) {
				return;;
			};
		}
	_iter_next_1cd5eb8c4:;
	}
	_iter_end_1cd5eb8c4:;;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1e4688d02_GotoSt>>::make({_8033_gt}));
}



inline void _1ca05e25d_push_label(jule::Ptr<_1ca05d1a2_ScopeDeadCode> _self_, jule::Ptr<_1e4688a16_Label> _9034_l) {
	jule::I64 _9117_i = 0LL;;
	while ((_9117_i < _self_.get()._field_gotos.get().len())) {
		{
			if ((_9034_l.get()._field_ident == (*(_self_.get()._field_gotos))[_9117_i].get()._field_ident)) {
				jule::copy(((*(_self_.get()._field_gotos)).slice(_9117_i)), ((*(_self_.get()._field_gotos)).slice((_9117_i + 1LL))));
				(*(_self_.get()._field_gotos))=(*(_self_.get()._field_gotos)).slice(0LL,(_self_.get()._field_gotos.get().len() - 1LL));
				goto _iter_next_1cd5edaa2;
			};
			(_9117_i)++;
		}
	_iter_next_1cd5edaa2:;
	}
	_iter_end_1cd5edaa2:;;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1e4688a16_Label>>::make({_9034_l}));
}



inline void _1ca05e4d3_optimize_range_iter(jule::Ptr<_1ca05d1a2_ScopeDeadCode> _self_, jule::Ptr<_1e4687eee_RangeIter> _10343_it) {
	_1ca05da87_optimize_expr_model(_self_, _10343_it.get()._field_expr.get()._field_model);
	_1ca05d812_optimize_body_child(_self_, _10343_it.get()._field_scope);
}



inline void _1ca05e758_optimize_while_iter(jule::Ptr<_1ca05d1a2_ScopeDeadCode> _self_, jule::Ptr<_1e4687619_WhileIter> _10843_it) {
	_1ca05da87_optimize_expr_model(_self_, _10843_it.get()._field_expr);
	if ((_10843_it.get()._field_next != nullptr)) {
		_1ca05da87_optimize_expr_model(_self_, _10843_it.get()._field_next);
	};
	_1ca05d812_optimize_body_child(_self_, _10843_it.get()._field_scope);
}



inline void _1ca05e9cd_optimize_inf_iter(jule::Ptr<_1ca05d1a2_ScopeDeadCode> _self_, jule::Ptr<_1e4687196_InfIter> _11641_it) {
	_1ca05d812_optimize_body_child(_self_, _11641_it.get()._field_scope);
}



inline void _1ca05ec53_optimize_conditional(jule::Ptr<_1ca05d1a2_ScopeDeadCode> _self_, jule::Ptr<_1e4686daa_Conditional> _12044_c) {
	{
		auto &expr = _12044_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1cd605e0b:;
		if (it != expr.end()) {
			jule::Ptr<_1e46866c3_If> _12121_case = *it;
			{
				if ((_12121_case != nullptr)) {
					_1ca05da87_optimize_expr_model(_self_, _12121_case.get()._field_expr);
					_1ca05d812_optimize_body_child(_self_, _12121_case.get()._field_scope);
				};
			}
			_iter_next_1cd605e0b:;
			++it;
			goto _iter_begin_1cd605e0b;
		}
		_iter_end_1cd605e0b:;
	};
	if ((_12044_c.get()._field_default != nullptr)) {
		if ((_12044_c.get()._field_elifs.len() == 0LL)) {
			_1ca05d58c_optimize_child(_self_, _12044_c.get()._field_default.get()._field_scope);
		} else {
			_1ca05d812_optimize_body_child(_self_, _12044_c.get()._field_default.get()._field_scope);
		};
	};
}



inline void _1ca05eec8_optimize_match(jule::Ptr<_1ca05d1a2_ScopeDeadCode> _self_, jule::Ptr<_1e468a023_Match> _13838_m) {
	{
		auto &expr = _13838_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1cd609195:;
		if (it != expr.end()) {
			jule::Ptr<_1e468a9d5_Case> _13921_case = *it;
			{
				{
					auto &expr = _13921_case.get()._field_exprs;
					auto it = expr.begin();
					_iter_begin_1cd60996a:;
					if (it != expr.end()) {
						jule::Ptr<_1c974abc0_Data> _14025_expr = *it;
						{
							_1ca05da87_optimize_expr_model(_self_, _14025_expr.get()._field_model);
						}
						_iter_next_1cd60996a:;
						++it;
						goto _iter_begin_1cd60996a;
					}
					_iter_end_1cd60996a:;
				};
				_1ca05d812_optimize_body_child(_self_, _13921_case.get()._field_scope);
			}
			_iter_next_1cd609195:;
			++it;
			goto _iter_begin_1cd609195;
		}
		_iter_end_1cd609195:;
	};
	if ((_13838_m.get()._field_default != nullptr)) {
		if ((_13838_m.get()._field_cases.len() == 0LL)) {
			_1ca05d58c_optimize_child(_self_, _13838_m.get()._field_default.get()._field_scope);
		} else {
			_1ca05d812_optimize_body_child(_self_, _13838_m.get()._field_default.get()._field_scope);
		};
	};
}



inline void _1ca06024d_optimize_assign(jule::Ptr<_1ca05d1a2_ScopeDeadCode> _self_, jule::Ptr<_1e468962c_Assign> _15639_assign) {
	_1ca05da87_optimize_expr_model(_self_, _15639_assign.get()._field_l.get()._field_model);
	_1ca05da87_optimize_expr_model(_self_, _15639_assign.get()._field_r.get()._field_model);
}



inline void _1ca0604c3_optimize_multi_assign(jule::Ptr<_1ca05d1a2_ScopeDeadCode> _self_, jule::Ptr<_1e46899d4_MultiAssign> _16145_assign) {
	{
		auto &expr = _16145_assign.get()._field_l;
		auto it = expr.begin();
		_iter_begin_1cd60dc05:;
		if (it != expr.end()) {
			jule::Any _16221_l = *it;
			{
				if ((_16221_l != nullptr)) {
					_1ca05da87_optimize_expr_model(_self_, _16221_l);
				};
			}
			_iter_next_1cd60dc05:;
			++it;
			goto _iter_begin_1cd60dc05;
		}
		_iter_end_1cd60dc05:;
	};
	_1ca05da87_optimize_expr_model(_self_, _16145_assign.get()._field_r);
}



inline void _1ca060748_optimize_stmt(jule::Ptr<_1ca05d1a2_ScopeDeadCode> _self_, jule::Any _17037_st) {
	{
		auto &_match_expr{ _17037_st };
		
		if (_match_expr.type_is<jule::Ptr<_1e46862c7_Scope>>()) {
			_case_begin_1cd61083e:;
			{
				jule::Ptr<_1e46862c7_Scope> _17321_scope = _17037_st.operator jule::Ptr<_1e46862c7_Scope>();;
				if (_17321_scope.get()._field_deferred) {
					_1ca060c10_eliminate_dead_code_of_scope(_17321_scope);
				} else {
					_1ca05d58c_optimize_child(_self_, _17321_scope);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4687eee_RangeIter>>()) {
			_case_begin_1cd6109a4:;
			{
				_1ca05e4d3_optimize_range_iter(_self_, _17037_st.operator jule::Ptr<_1e4687eee_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4687619_WhileIter>>()) {
			_case_begin_1cd610a1a:;
			{
				_1ca05e758_optimize_while_iter(_self_, _17037_st.operator jule::Ptr<_1e4687619_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4687196_InfIter>>()) {
			_case_begin_1cd610a81:;
			{
				_1ca05e9cd_optimize_inf_iter(_self_, _17037_st.operator jule::Ptr<_1e4687196_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4686daa_Conditional>>()) {
			_case_begin_1cd610ae7:;
			{
				_1ca05ec53_optimize_conditional(_self_, _17037_st.operator jule::Ptr<_1e4686daa_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e468a023_Match>>()) {
			_case_begin_1cd610b5d:;
			{
				_1ca05eec8_optimize_match(_self_, _17037_st.operator jule::Ptr<_1e468a023_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e468962c_Assign>>()) {
			_case_begin_1cd610bd5:;
			{
				_1ca06024d_optimize_assign(_self_, _17037_st.operator jule::Ptr<_1e468962c_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e46899d4_MultiAssign>>()) {
			_case_begin_1cd610c5c:;
			{
				_1ca0604c3_optimize_multi_assign(_self_, _17037_st.operator jule::Ptr<_1e46899d4_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c974abc0_Data>>()) {
			_case_begin_1cd610cd4:;
			{
				jule::Ptr<_1c974abc0_Data> _19421_d = _17037_st.operator jule::Ptr<_1c974abc0_Data>();;
				{
					auto &_match_expr{ _19421_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1e437e09c_BuiltinErrorCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e437d60c_BuiltinPanicCallExprModel>>()) {
						_case_begin_1cd61614c:;
						{
							_1ca05dc63_eliminate_followed(_self_.ptr());
						}
					}
					else {
						_case_begin_1cd61668b:;
						{
							_1ca05da87_optimize_expr_model(_self_, _19421_d.get()._field_model);
						}
					}
					_match_end_1cd616636:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e468b5da_RetSt>>()) {
			_case_begin_1cd610d5b:;
			{
				_1ca05dc63_eliminate_followed(_self_.ptr());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4688d02_GotoSt>>()) {
			_case_begin_1cd610dd3:;
			{
				_1ca05ded8_push_goto(_self_, _17037_st.operator jule::Ptr<_1e4688d02_GotoSt>());
				_1ca05dc63_eliminate_followed(_self_.ptr());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4688a16_Label>>()) {
			_case_begin_1cd610e5a:;
			{
				_1ca05e25d_push_label(_self_, _17037_st.operator jule::Ptr<_1e4688a16_Label>());
			}
		}
		_match_end_1cd6106eb:;
	};
}



inline void _1ca060924_optimize_stmts(jule::Ptr<_1ca05d1a2_ScopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < _self_.get()._field_stmts->len()); (_self_.get()._field_i)++) {
		{
			_1ca060748_optimize_stmt(_self_, jule::Any((*(_self_.get()._field_stmts))[_self_.get()._field_i]));
		}
	_iter_next_1cd618e52:;
	}
	_iter_end_1cd618e52:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ca05d1a2_ScopeDeadCode _Src) {
	_Stream << "ScopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos;
	_Stream << "}";
	return _Stream;
}



inline _1ca061c55_ExprDeadCode static__1ca062805_new(jule::Ptr<_1ca05d1a2_ScopeDeadCode>& _4724_s) {
	return _1ca061c55_ExprDeadCode{._field_s=_4724_s};
}



inline void _1ca062a7a_binary(_1ca061c55_ExprDeadCode* _self_, jule::Ptr<_1e435a8e7_BinopExprModel> _5325_m) {
	_1ca067ca0_optimize(&(*_self_), _5325_m.get()._field_left.get()._field_model);
	_1ca067ca0_optimize(&(*_self_), _5325_m.get()._field_right.get()._field_model);
}



inline void _1ca062d00_unary(_1ca061c55_ExprDeadCode* _self_, jule::Ptr<_1e435972b_UnaryExprModel> _5824_m) {
	_1ca067ca0_optimize(&(*_self_), _5824_m.get()._field_expr.get()._field_model);
}



inline void _1ca063075_structure_lit(_1ca061c55_ExprDeadCode* _self_, jule::Ptr<_1e433b004_StructLitExprModel> _6232_m) {
	{
		auto &expr = _6232_m.get()._field_args;
		auto it = expr.begin();
		_iter_begin_1cd61d1a9:;
		if (it != expr.end()) {
			jule::Ptr<_1e433773c_StructArgExprModel> _6321_arg = *it;
			{
				_1ca067ca0_optimize(&(*_self_), _6321_arg.get()._field_expr);
			}
			_iter_next_1cd61d1a9:;
			++it;
			goto _iter_begin_1cd61d1a9;
		}
		_iter_end_1cd61d1a9:;
	};
}



inline void _1ca0632ea_alloc_structure(_1ca061c55_ExprDeadCode* _self_, jule::Ptr<_1e4331d63_AllocStructLitExprModel> _6834_m) {
	_1ca063075_structure_lit(&(*_self_), _6834_m.get()._field_lit);
}



inline void _1ca063570_casting(_1ca061c55_ExprDeadCode* _self_, jule::Ptr<_1e434e7dc_CastingExprModel> _7226_m) {
	_1ca067ca0_optimize(&(*_self_), _7226_m.get()._field_expr);
}



inline void _1ca0637e5_args(_1ca061c55_ExprDeadCode* _self_, jule::Slice<jule::Any>& _7624_args) {
	{
		auto &expr = _7624_args;
		auto it = expr.begin();
		_iter_begin_1cd621531:;
		if (it != expr.end()) {
			jule::Any _7721_arg = *it;
			{
				_1ca067ca0_optimize(&(*_self_), _7721_arg);
			}
			_iter_next_1cd621531:;
			++it;
			goto _iter_begin_1cd621531;
		}
		_iter_end_1cd621531:;
	};
}



inline void _1ca063a6a_func_call(_1ca061c55_ExprDeadCode* _self_, jule::Ptr<_1e4354902_FnCallExprModel> _8228_m) {
	_1ca067ca0_optimize(&(*_self_), _8228_m.get()._field_expr);
	_1ca0637e5_args(&(*_self_), _8228_m.get()._field_args);
	if ((_8228_m.get()._field_except != nullptr)) {
		_1ca05d812_optimize_body_child((*_self_)._field_s, _8228_m.get()._field_except);
	};
}



inline void _1ca063ce0_slice(_1ca061c55_ExprDeadCode* _self_, jule::Ptr<_1e4354ade_SliceExprModel> _9024_m) {
	_1ca0637e5_args(&(*_self_), _9024_m.get()._field_elems);
}



inline void _1ca064065_array(_1ca061c55_ExprDeadCode* _self_, jule::Ptr<_1e437c5a6_ArrayExprModel> _9424_m) {
	if (((_9424_m.get()._field_elems.len() == 2LL) && (_9424_m.get()._field_elems[1LL] == nullptr))) {
		_1ca067ca0_optimize(&(*_self_), _9424_m.get()._field_elems[0LL]);
	};
	_1ca0637e5_args(&(*_self_), _9424_m.get()._field_elems);
}



inline void _1ca0642da_indexing(_1ca061c55_ExprDeadCode* _self_, jule::Ptr<_1e437b31e_IndexingExprModel> _10127_m) {
	_1ca067ca0_optimize(&(*_self_), _10127_m.get()._field_expr.get()._field_model);
	_1ca067ca0_optimize(&(*_self_), _10127_m.get()._field_index.get()._field_model);
}



inline void _1ca064560_anon_func(_1ca061c55_ExprDeadCode* _self_, jule::Ptr<_1e437b50b_AnonFnExprModel> _10628_m) {
	_1ca060c10_eliminate_dead_code_of_scope(_10628_m.get()._field_func.get()._field_scope);
}



inline void _1ca0647d5_map(_1ca061c55_ExprDeadCode* _self_, jule::Ptr<_1e437b8d5_MapExprModel> _11022_m) {
	{
		auto &expr = _11022_m.get()._field_entries;
		auto it = expr.begin();
		_iter_begin_1cd6297e2:;
		if (it != expr.end()) {
			jule::Ptr<_1e437b6e8_KeyValPairExprModel> _11121_pair = *it;
			{
				_1ca067ca0_optimize(&(*_self_), _11121_pair.get()._field_key);
				_1ca067ca0_optimize(&(*_self_), _11121_pair.get()._field_val);
			}
			_iter_next_1cd6297e2:;
			++it;
			goto _iter_begin_1cd6297e2;
		}
		_iter_end_1cd6297e2:;
	};
}



inline void _1ca064a5a_slicing(_1ca061c55_ExprDeadCode* _self_, jule::Ptr<_1e437bac2_SlicingExprModel> _11726_m) {
	_1ca067ca0_optimize(&(*_self_), _11726_m.get()._field_expr);
	_1ca067ca0_optimize(&(*_self_), _11726_m.get()._field_left);
	if ((_11726_m.get()._field_right != nullptr)) {
		_1ca067ca0_optimize(&(*_self_), _11726_m.get()._field_right);
	};
}



inline void _1ca064cd0_trait_sub(_1ca061c55_ExprDeadCode* _self_, jule::Ptr<_1e437bcae_TraitSubIdentExprModel> _12528_m) {
	_1ca067ca0_optimize(&(*_self_), _12528_m.get()._field_expr);
}



inline void _1ca065055_structure_sub(_1ca061c55_ExprDeadCode* _self_, jule::Ptr<_1e437c1cc_StructSubIdentExprModel> _12932_m) {
	_1ca067ca0_optimize(&(*_self_), _12932_m.get()._field_expr.get()._field_model);
}



inline void _1ca0652ca_common_sub(_1ca061c55_ExprDeadCode* _self_, jule::Ptr<_1e437c980_CommonSubIdentExprModel> _13329_m) {
	_1ca067ca0_optimize(&(*_self_), _13329_m.get()._field_expr);
}



inline void _1ca065550_tuple(_1ca061c55_ExprDeadCode* _self_, jule::Ptr<_1e437cb6c_TupleExprModel> _13724_m) {
	{
		auto &expr = _13724_m.get()._field_datas;
		auto it = expr.begin();
		_iter_begin_1cd630ab2:;
		if (it != expr.end()) {
			jule::Ptr<_1c974abc0_Data> _13821_d = *it;
			{
				_1ca067ca0_optimize(&(*_self_), _13821_d.get()._field_model);
			}
			_iter_next_1cd630ab2:;
			++it;
			goto _iter_begin_1cd630ab2;
		}
		_iter_end_1cd630ab2:;
	};
}



inline void _1ca0657c5_new_call(_1ca061c55_ExprDeadCode* _self_, jule::Ptr<_1e437d420_BuiltinNewCallExprModel> _14327_m) {
	if ((_14327_m.get()._field_init != nullptr)) {
		_1ca067ca0_optimize(&(*_self_), _14327_m.get()._field_init);
	};
}



inline void _1ca065a4a_out_call(_1ca061c55_ExprDeadCode* _self_, jule::Ptr<_1e437cd59_BuiltinOutCallExprModel> _14927_m) {
	_1ca067ca0_optimize(&(*_self_), _14927_m.get()._field_expr);
}



inline void _1ca065cc0_outln_call(_1ca061c55_ExprDeadCode* _self_, jule::Ptr<_1e437d046_BuiltinOutlnCallExprModel> _15329_m) {
	_1ca067ca0_optimize(&(*_self_), _15329_m.get()._field_expr);
}



inline void _1ca066045_panic_call(_1ca061c55_ExprDeadCode* _self_, jule::Ptr<_1e437d60c_BuiltinPanicCallExprModel> _15729_m) {
	_1ca067ca0_optimize(&(*_self_), _15729_m.get()._field_expr);
}



inline void _1ca0662ba_assert_call(_1ca061c55_ExprDeadCode* _self_, jule::Ptr<_1e437d7e9_BuiltinAssertCallExprModel> _16130_m) {
	_1ca067ca0_optimize(&(*_self_), _16130_m.get()._field_expr);
}



inline void _1ca066540_error_call(_1ca061c55_ExprDeadCode* _self_, jule::Ptr<_1e437e09c_BuiltinErrorCallExprModel> _16529_m) {
	_1ca067ca0_optimize(&(*_self_), _16529_m.get()._field_err);
}



inline void _1ca0667b5_make_call(_1ca061c55_ExprDeadCode* _self_, jule::Ptr<_1e437d9d6_BuiltinMakeCallExprModel> _16928_m) {
	if ((_16928_m.get()._field_len != nullptr)) {
		_1ca067ca0_optimize(&(*_self_), _16928_m.get()._field_len);
	};
	if ((_16928_m.get()._field_cap != nullptr)) {
		_1ca067ca0_optimize(&(*_self_), _16928_m.get()._field_cap);
	};
}



inline void _1ca066a3a_append_call(_1ca061c55_ExprDeadCode* _self_, jule::Ptr<_1e437dbc3_BuiltinAppendCallExprModel> _17830_m) {
	_1ca067ca0_optimize(&(*_self_), _17830_m.get()._field_dest);
	_1ca067ca0_optimize(&(*_self_), _17830_m.get()._field_elements);
}



inline void _1ca066cb0_clone_call(_1ca061c55_ExprDeadCode* _self_, jule::Ptr<_1e437d233_BuiltinCloneCallExprModel> _18329_m) {
	_1ca067ca0_optimize(&(*_self_), _18329_m.get()._field_expr);
}



inline void _1ca067035_sizeof(_1ca061c55_ExprDeadCode* _self_, jule::Ptr<_1e437be9b_SizeofExprModel> _18725_m) {
	_1ca067ca0_optimize(&(*_self_), _18725_m.get()._field_expr);
}



inline void _1ca0672aa_alignof(_1ca061c55_ExprDeadCode* _self_, jule::Ptr<_1e437e70c_AlignofExprModel> _19126_m) {
	_1ca067ca0_optimize(&(*_self_), _19126_m.get()._field_expr);
}



inline void _1ca067530_integrated_to_str(_1ca061c55_ExprDeadCode* _self_, jule::Ptr<_1e437ead6_IntegratedToStrExprModel> _19536_m) {
	_1ca067ca0_optimize(&(*_self_), _19536_m.get()._field_expr);
}



inline void _1ca0677a5_free(_1ca061c55_ExprDeadCode* _self_, jule::Ptr<_1e437eeb0_FreeExprModel> _19923_m) {
	_1ca067ca0_optimize(&(*_self_), _19923_m.get()._field_expr);
}



inline void _1ca067a2a_backend_emit(_1ca061c55_ExprDeadCode* _self_, jule::Ptr<_1e437ecc3_BackendEmitExprModel> _20331_m) {
	_1ca0637e5_args(&(*_self_), _20331_m.get()._field_exprs);
}



inline void _1ca067ca0_optimize(_1ca061c55_ExprDeadCode* _self_, jule::Any& _20728_model) {
	{
		auto &_match_expr{ _20728_model };
		
		if (_match_expr.type_is<jule::Ptr<_1c974abc0_Data>>()) {
			_case_begin_1cd641012:;
			{
				jule::Ptr<_1c974abc0_Data> _21021_d = _20728_model.operator jule::Ptr<_1c974abc0_Data>();;
				_1ca067ca0_optimize(&(*_self_), _21021_d.get()._field_model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e435a8e7_BinopExprModel>>()) {
			_case_begin_1cd641078:;
			{
				_1ca062a7a_binary(&(*_self_), _20728_model.operator jule::Ptr<_1e435a8e7_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e435972b_UnaryExprModel>>()) {
			_case_begin_1cd6410de:;
			{
				_1ca062d00_unary(&(*_self_), _20728_model.operator jule::Ptr<_1e435972b_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e433b004_StructLitExprModel>>()) {
			_case_begin_1cd6414a7:;
			{
				_1ca063075_structure_lit(&(*_self_), _20728_model.operator jule::Ptr<_1e433b004_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4331d63_AllocStructLitExprModel>>()) {
			_case_begin_1cd64151d:;
			{
				_1ca0632ea_alloc_structure(&(*_self_), _20728_model.operator jule::Ptr<_1e4331d63_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e434e7dc_CastingExprModel>>()) {
			_case_begin_1cd641584:;
			{
				_1ca063570_casting(&(*_self_), _20728_model.operator jule::Ptr<_1e434e7dc_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4354902_FnCallExprModel>>()) {
			_case_begin_1cd6415ea:;
			{
				_1ca063a6a_func_call(&(*_self_), _20728_model.operator jule::Ptr<_1e4354902_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4354ade_SliceExprModel>>()) {
			_case_begin_1cd641672:;
			{
				_1ca063ce0_slice(&(*_self_), _20728_model.operator jule::Ptr<_1e4354ade_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437c5a6_ArrayExprModel>>()) {
			_case_begin_1cd6416e9:;
			{
				_1ca064065_array(&(*_self_), _20728_model.operator jule::Ptr<_1e437c5a6_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437b31e_IndexingExprModel>>()) {
			_case_begin_1cd641771:;
			{
				_1ca0642da_indexing(&(*_self_), _20728_model.operator jule::Ptr<_1e437b31e_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437b50b_AnonFnExprModel>>()) {
			_case_begin_1cd6417e8:;
			{
				_1ca064560_anon_func(&(*_self_), _20728_model.operator jule::Ptr<_1e437b50b_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437b8d5_MapExprModel>>()) {
			_case_begin_1cd641870:;
			{
				_1ca0647d5_map(&(*_self_), _20728_model.operator jule::Ptr<_1e437b8d5_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437bac2_SlicingExprModel>>()) {
			_case_begin_1cd6418e7:;
			{
				_1ca064a5a_slicing(&(*_self_), _20728_model.operator jule::Ptr<_1e437bac2_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437bcae_TraitSubIdentExprModel>>()) {
			_case_begin_1cd64196e:;
			{
				_1ca064cd0_trait_sub(&(*_self_), _20728_model.operator jule::Ptr<_1e437bcae_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437c1cc_StructSubIdentExprModel>>()) {
			_case_begin_1cd6419e6:;
			{
				_1ca065055_structure_sub(&(*_self_), _20728_model.operator jule::Ptr<_1e437c1cc_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437c980_CommonSubIdentExprModel>>()) {
			_case_begin_1cd641a6d:;
			{
				_1ca0652ca_common_sub(&(*_self_), _20728_model.operator jule::Ptr<_1e437c980_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437cb6c_TupleExprModel>>()) {
			_case_begin_1cd641ae5:;
			{
				_1ca065550_tuple(&(*_self_), _20728_model.operator jule::Ptr<_1e437cb6c_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437cd59_BuiltinOutCallExprModel>>()) {
			_case_begin_1cd641b6c:;
			{
				_1ca065a4a_out_call(&(*_self_), _20728_model.operator jule::Ptr<_1e437cd59_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437d046_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1cd641be4:;
			{
				_1ca065cc0_outln_call(&(*_self_), _20728_model.operator jule::Ptr<_1e437d046_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437d420_BuiltinNewCallExprModel>>()) {
			_case_begin_1cd641c6b:;
			{
				_1ca0657c5_new_call(&(*_self_), _20728_model.operator jule::Ptr<_1e437d420_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437d60c_BuiltinPanicCallExprModel>>()) {
			_case_begin_1cd641ce3:;
			{
				_1ca066045_panic_call(&(*_self_), _20728_model.operator jule::Ptr<_1e437d60c_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437d7e9_BuiltinAssertCallExprModel>>()) {
			_case_begin_1cd641d6a:;
			{
				_1ca0662ba_assert_call(&(*_self_), _20728_model.operator jule::Ptr<_1e437d7e9_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437e09c_BuiltinErrorCallExprModel>>()) {
			_case_begin_1cd641de2:;
			{
				_1ca066540_error_call(&(*_self_), _20728_model.operator jule::Ptr<_1e437e09c_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437d9d6_BuiltinMakeCallExprModel>>()) {
			_case_begin_1cd641e69:;
			{
				_1ca0667b5_make_call(&(*_self_), _20728_model.operator jule::Ptr<_1e437d9d6_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437dbc3_BuiltinAppendCallExprModel>>()) {
			_case_begin_1cd641ee1:;
			{
				_1ca066a3a_append_call(&(*_self_), _20728_model.operator jule::Ptr<_1e437dbc3_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437d233_BuiltinCloneCallExprModel>>()) {
			_case_begin_1cd642068:;
			{
				_1ca066cb0_clone_call(&(*_self_), _20728_model.operator jule::Ptr<_1e437d233_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437be9b_SizeofExprModel>>()) {
			_case_begin_1cd6420e0:;
			{
				_1ca067035_sizeof(&(*_self_), _20728_model.operator jule::Ptr<_1e437be9b_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437e70c_AlignofExprModel>>()) {
			_case_begin_1cd642167:;
			{
				_1ca0672aa_alignof(&(*_self_), _20728_model.operator jule::Ptr<_1e437e70c_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437ead6_IntegratedToStrExprModel>>()) {
			_case_begin_1cd6421de:;
			{
				_1ca067530_integrated_to_str(&(*_self_), _20728_model.operator jule::Ptr<_1e437ead6_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437eeb0_FreeExprModel>>()) {
			_case_begin_1cd642266:;
			{
				_1ca0677a5_free(&(*_self_), _20728_model.operator jule::Ptr<_1e437eeb0_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437ecc3_BackendEmitExprModel>>()) {
			_case_begin_1cd6422dd:;
			{
				_1ca067a2a_backend_emit(&(*_self_), _20728_model.operator jule::Ptr<_1e437ecc3_BackendEmitExprModel>());
			}
		}
		_match_end_1cd640eac:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ca061c55_ExprDeadCode _Src) {
	_Stream << "ExprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e40d153b_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "node:" << _Src._field_node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20c91dcd8_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "node:" << _Src._field_node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3b31003_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20c90c6ab_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2254a3c1d_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e3b2c2b8_ScopeOptimizer> static__20c8ee02c_new(jule::Ptr<_1e46862c7_Scope> _4527_scope) {
	return jule::new_ptr<_1e3b2c2b8_ScopeOptimizer>(_1e3b2c2b8_ScopeOptimizer{._field_scope=_4527_scope});
}



inline void _20c9a1453_set_current_stmt(_1e3b2c2b8_ScopeOptimizer* _self_, jule::Any _5139_stmt) {
	(*_self_)._field_scope.get()._field_stmts[(*_self_)._field_i]=jule::Any(_5139_stmt);
}



inline void _20c9a7b41_optimize_data(_1e3b2c2b8_ScopeOptimizer* _self_, jule::Ptr<_1c974abc0_Data> _5536_d) {
	{
		auto &_match_expr{ _5536_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e4354902_FnCallExprModel>>()) {
			_case_begin_1cd6651ce:;
			{
				jule::Ptr<_1e4354902_FnCallExprModel> _5821_m = _5536_d.get()._field_model.operator jule::Ptr<_1e4354902_FnCallExprModel>();;
				if (_23db44461_PRODUCTION) {
					if (((!(_1e4383c94_is_builtin(_5821_m.get()._field_func.ptr()))) && _1e3ba82ab_is_std_package(_5821_m.get()._field_func.get()._field_decl.get()._field_token.get()._field_file.get()._field_path,jule::Str("debug", 5)))) {
						_20c9a1453_set_current_stmt(&(*_self_), nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1cd665146:;
	};
	static__1e3c1019d_optimize(_5536_d.get()._field_model);
}



inline void _20c9b2dd2_optimize_var(_1e3b2c2b8_ScopeOptimizer* _self_, jule::Ptr<_1e46c6eb6_Var> _7035_v) {
	if ((_7035_v.get()._field_value != nullptr)) {
		static__1e3c1019d_optimize(_7035_v.get()._field_value.get()._field_data.get()._field_model);
	};
}



inline void _20c9ba835_optimize_conditional(_1e3b2c2b8_ScopeOptimizer* _self_, jule::Ptr<_1e4686daa_Conditional> _7643_c) {
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1cd66949c:;
		if (it != expr.end()) {
			jule::Ptr<_1e46866c3_If> _7721_elif = *it;
			{
				static__1e3c1019d_optimize(_7721_elif.get()._field_expr);
				_1e3b81ce0_optimize_child(&(*_self_), _7721_elif.get()._field_scope);
			}
			_iter_next_1cd66949c:;
			++it;
			goto _iter_begin_1cd66949c;
		}
		_iter_end_1cd66949c:;
	};
	if ((_7643_c.get()._field_default != nullptr)) {
		_1e3b81ce0_optimize_child(&(*_self_), _7643_c.get()._field_default.get()._field_scope);
	};
	if ((!(_20c90893d_COND))) {
		return;;
	};
	jule::Bool _8917_const_case = false;;
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1cd66b9cc:;
		if (it != expr.end()) {
			jule::I64 _9214_i = it - expr.begin();
			jule::Ptr<_1e46866c3_If> _9221_elif = *it;
			{
				if ((!(_1e3bc8210_is_constant_valid_conditional_case(_9221_elif)))) {
					goto _iter_next_1cd66b9cc;
				};
				_8917_const_case=true;
				_7643_c.get()._field_elifs=_7643_c.get()._field_elifs.slice(0LL,_9214_i);
				_7643_c.get()._field_default=jule::new_ptr<_1e46869ae_Else>(_1e46869ae_Else{._field_scope=_9221_elif.get()._field_scope});
				goto _iter_end_1cd66b9cc;
			}
			_iter_next_1cd66b9cc:;
			++it;
			_9214_i++;
			goto _iter_begin_1cd66b9cc;
		}
		_iter_end_1cd66b9cc:;
	};
	if ((_7643_c.get()._field_elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1e46866c3_If>* _10917_i = (&(_7643_c.get()._field_elifs[0LL]));;
	jule::Ptr<_1e46866c3_If>* _11013_end = (&(_7643_c.get()._field_elifs[(_7643_c.get()._field_elifs.len() - 1LL)]));;
	for (; (_10917_i <= _11013_end); (_10917_i)++) {
		{
			{
				if (_1e3bd574a_is_unreachable_conditional_case((*(_10917_i)))) {
					(*(_10917_i))=nullptr;
				};
			};
		}
	_iter_next_1cd66e98b:;
	}
	_iter_end_1cd66e98b:;;
	if ((_7643_c.get()._field_elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_8917_const_case))) {
		return;;
	};
	jule::I64 _12817_only = -1LL;;
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1cd671262:;
		if (it != expr.end()) {
			jule::I64 _12913_j = it - expr.begin();
			jule::Ptr<_1e46866c3_If> _12916_elif = *it;
			{
				if ((_12916_elif != nullptr)) {
					if ((_12817_only != -1LL)) {
						return;;
					};
					_12817_only=_12913_j;
				};
			}
			_iter_next_1cd671262:;
			++it;
			_12913_j++;
			goto _iter_begin_1cd671262;
		}
		_iter_end_1cd671262:;
	};
	if ((_12817_only != -1LL)) {
		_20c9a1453_set_current_stmt(&(*_self_), jule::Any(_7643_c.get()._field_elifs[_12817_only].get()._field_scope));
	};
}



inline void _20c9c739c_build_default_constat_true_case(_1e3b2c2b8_ScopeOptimizer* _self_, jule::Ptr<_1e468a9d5_Case> _14554_case, jule::I64& _14572_i, jule::Ptr<_1e468a023_Match>& _14585_m) {
	_14554_case.get()._field_exprs=nullptr;
	jule::I64 _14713_start = _14572_i;;
	_julec_label_loop:;
	for (;;) {
		{
			if ((_14554_case.get()._field_scope.get()._field_stmts.len() == 0LL)) {
				goto _iter_end_1cd673e24;
			};
			jule::Any &_15322_stmt = _14554_case.get()._field_scope.get()._field_stmts[(_14554_case.get()._field_scope.get()._field_stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _15322_stmt };
				
				if (_match_expr.type_is<jule::Ptr<_1e468b167_FallSt>>()) {
					_case_begin_1cd675cb1:;
					{
						(_14572_i)++;
						if ((_14572_i >= _14585_m.get()._field_cases.len())) {
							_15322_stmt=jule::Any(_14585_m.get()._field_default.get()._field_scope);
							goto _iter_end_1cd673e24;
						};
						_14554_case=_14585_m.get()._field_cases[_14572_i];
						_15322_stmt=jule::Any(_14554_case.get()._field_scope);
					}
				}
				else {
					_case_begin_1cd675b5c:;
					{
						goto _iter_end_1cd673e24;
					}
				}
				_match_end_1cd675b07:;
			};
		}
	_iter_next_1cd673e24:;
	}
	_iter_end_1cd673e24:;;
	_14585_m.get()._field_default=_14585_m.get()._field_cases[_14713_start];
	_14585_m.get()._field_cases=_14585_m.get()._field_cases.slice(0LL,_14713_start);
}



inline void _20c9dba98_optimize_match(_1e3b2c2b8_ScopeOptimizer* _self_, jule::Ptr<_1e468a023_Match> _17137_m) {
	{
		auto &expr = _17137_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1cd6782be:;
		if (it != expr.end()) {
			jule::Ptr<_1e468a9d5_Case> _17221_case = *it;
			{
				{
					auto &expr = _17221_case.get()._field_exprs;
					auto it = expr.begin();
					_iter_begin_1cd678a94:;
					if (it != expr.end()) {
						jule::Ptr<_1c974abc0_Data> _17325_expr = *it;
						{
							static__1e3c1019d_optimize(_17325_expr.get()._field_model);
						}
						_iter_next_1cd678a94:;
						++it;
						goto _iter_begin_1cd678a94;
					}
					_iter_end_1cd678a94:;
				};
				_1e3b81ce0_optimize_child(&(*_self_), _17221_case.get()._field_scope);
			}
			_iter_next_1cd6782be:;
			++it;
			goto _iter_begin_1cd6782be;
		}
		_iter_end_1cd6782be:;
	};
	if ((_17137_m.get()._field_default != nullptr)) {
		_1e3b81ce0_optimize_child(&(*_self_), _17137_m.get()._field_default.get()._field_scope);
	};
	if ((!(_20c90893d_COND))) {
		return;;
	};
	jule::Bool _18617_const_case = false;;
	{
		auto &expr = _17137_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1cd67a788:;
		if (it != expr.end()) {
			jule::I64 _18918_i = it - expr.begin();
			jule::Ptr<_1e468a9d5_Case> _18925_case = *it;
			{
				if ((!(_1e3bcd963_is_constant_valid_match_case(_18925_case)))) {
					goto _iter_next_1cd67a788;
				};
				_18617_const_case=true;
				_20c9c739c_build_default_constat_true_case(&(*_self_), _18925_case,_18918_i,_17137_m);
				goto _iter_end_1cd67a788;
			}
			_iter_next_1cd67a788:;
			++it;
			_18918_i++;
			goto _iter_begin_1cd67a788;
		}
		_iter_end_1cd67a788:;
	};
	if ((_17137_m.get()._field_cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1e468a9d5_Case>* _20317_i = (&(_17137_m.get()._field_cases[0LL]));;
	jule::Ptr<_1e468a9d5_Case>* _20413_end = (&(_17137_m.get()._field_cases[(_17137_m.get()._field_cases.len() - 1LL)]));;
	for (; (_20317_i <= _20413_end); (_20317_i)++) {
		{
			{
				if (_1e3be0eb4_is_unreachable_match_case((*(_20317_i)))) {
					(*(_20317_i))=nullptr;
				};
			};
		}
	_iter_next_1cd67d3e5:;
	}
	_iter_end_1cd67d3e5:;;
	if ((!(_18617_const_case))) {
		return;;
	};
	jule::I64 _21817_only = -1LL;;
	{
		auto &expr = _17137_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1cd67e638:;
		if (it != expr.end()) {
			jule::I64 _21913_j = it - expr.begin();
			jule::Ptr<_1e468a9d5_Case> _21916_case = *it;
			{
				if ((_21916_case != nullptr)) {
					if ((_21817_only != -1LL)) {
						return;;
					};
					_21817_only=_21913_j;
				};
			}
			_iter_next_1cd67e638:;
			++it;
			_21913_j++;
			goto _iter_begin_1cd67e638;
		}
		_iter_end_1cd67e638:;
	};
	if ((_21817_only != -1LL)) {
		_20c9a1453_set_current_stmt(&(*_self_), jule::Any(_17137_m.get()._field_cases[_21817_only].get()._field_scope));
	};
}



inline void _20c9e31dc_optimize_range_iter(_1e3b2c2b8_ScopeOptimizer* _self_, jule::Ptr<_1e4687eee_RangeIter> _23542_it) {
	static__1e3c1019d_optimize(_23542_it.get()._field_expr.get()._field_model);
	_1e3b81ce0_optimize_child(&(*_self_), _23542_it.get()._field_scope);
}



inline void _20c9e55b8_optimize_while_iter(_1e3b2c2b8_ScopeOptimizer* _self_, jule::Ptr<_1e4687619_WhileIter> _24042_it) {
	static__1e3c1019d_optimize(_24042_it.get()._field_expr);
	_1e3b80096_optimize_stmt(&(*_self_), jule::Any(_24042_it.get()._field_next));
	_1e3b81ce0_optimize_child(&(*_self_), _24042_it.get()._field_scope);
}



inline jule::Bool _20c9e98ec_substr(_1e3b2c2b8_ScopeOptimizer* _self_, jule::Ptr<_1e468962c_Assign> _24629_a) {
	{
		auto &_match_expr{ _24629_a.get()._field_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e437bac2_SlicingExprModel>>()) {
			_case_begin_1cd684d36:;
			{
				jule::Ptr<_1e437bac2_SlicingExprModel> _24921_sem = _24629_a.get()._field_r.get()._field_model.operator jule::Ptr<_1e437bac2_SlicingExprModel>();;
				if ((_24921_sem.get()._field_expr == _24629_a.get()._field_l.get()._field_model)) {
					_20c9a1453_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_20c90c6ab_MutSlicingExprModel>(_20c90c6ab_MutSlicingExprModel{._field_token=_24921_sem.get()._field_token, ._field_expr=jule::Any(_24921_sem.get()._field_expr), ._field_left=jule::Any(_24921_sem.get()._field_left), ._field_right=jule::Any(_24921_sem.get()._field_right)})));
					return true;
				};
			}
		}
		_match_end_1cd684c9d:;
	};
	return false;
}



inline jule::Bool _20ce41c67_str_insert(_1e3b2c2b8_ScopeOptimizer* _self_, jule::Ptr<_1e468962c_Assign> _26333_a) {
	{
		auto &_match_expr{ _26333_a.get()._field_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e435a8e7_BinopExprModel>>()) {
			_case_begin_1cd6878c7:;
			{
				jule::Ptr<_1e435a8e7_BinopExprModel> _26621_m = _26333_a.get()._field_r.get()._field_model.operator jule::Ptr<_1e435a8e7_BinopExprModel>();;
				if ((_26621_m.get()._field_right.get()._field_model == _26333_a.get()._field_l.get()._field_model)) {
					_20c9a1453_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_2254a3c1d_StrInsertBeginExprModel>(_2254a3c1d_StrInsertBeginExprModel{._field_dest=jule::Any(_26333_a.get()._field_l.get()._field_model), ._field_expr=jule::Any(_26621_m.get()._field_left.get()._field_model)})));
					return true;
				};
			}
		}
		_match_end_1cd68783e:;
	};
	return false;
}



inline jule::Bool _1e3b30189_str_assign(_1e3b2c2b8_ScopeOptimizer* _self_, jule::Ptr<_1e468962c_Assign> _27833_a) {
	if ((_27833_a.get()._field_op.get()._field_kind != jule::Str("=", 1))) {
		return false;
	};
	jule::Ptr<_1c9778e51_Prim> _28213_lp = _1c97767ab_prim(_27833_a.get()._field_l.get()._field_kind.ptr());;
	if (((_28213_lp == nullptr) || (!(_1c977be10_is_str(_28213_lp.ptr()))))) {
		return false;
	};
	{
		
		if (_20c9e98ec_substr(&(*_self_), _27833_a) || _20ce41c67_str_insert(&(*_self_), _27833_a)) {
			_case_begin_1cd68b865:;
			{
				return true;
			}
		}
		_match_end_1cd68b7cc:;
	};
	return false;
}



inline void _1e3b372a1_optimize_assign(_1e3b2c2b8_ScopeOptimizer* _self_, jule::Ptr<_1e468962c_Assign> _29438_assign) {
	if ((_20c8e7e49_COPY && _1e3b30189_str_assign(&(*_self_), _29438_assign))) {
		return;;
	};
	static__1e3c1019d_optimize(_29438_assign.get()._field_l.get()._field_model);
	static__1e3c1019d_optimize(_29438_assign.get()._field_r.get()._field_model);
	{
		auto &_match_expr{ _29438_assign.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1cd68d108:;
			{
				if ((_20c8ec855_MATH && (_1c9777999_strct(_29438_assign.get()._field_l.get()._field_kind.ptr()) == nullptr))) {
					_29438_assign.get()._field_op.get()._field_kind=_29438_assign.get()._field_op.get()._field_kind.slice(0LL,(_29438_assign.get()._field_op.get()._field_kind.len() - 1LL));
					jule::Any _30725_model = jule::Any(jule::new_ptr<_1e435a8e7_BinopExprModel>(_1e435a8e7_BinopExprModel{._field_left=_29438_assign.get()._field_l, ._field_right=_29438_assign.get()._field_r, ._field_op=_29438_assign.get()._field_op}));;
					static__1e3c1019d_optimize(_30725_model);
					{
						auto &_match_expr{ _30725_model };
						
						if (_match_expr.type_is<jule::Ptr<_1e435a8e7_BinopExprModel>>()) {
							_case_begin_1cd69146e:;
							{
								_29438_assign.get()._field_r=jule::new_ptr<_1e4347a8d_OperandExprModel>((*(_29438_assign.get()._field_r)));
								_29438_assign.get()._field_op.get()._field_kind=jule::Str("=", 1);
								_29438_assign.get()._field_r.get()._field_model=jule::Any(_30725_model);
								return;;
							}
						}
						_match_end_1cd691293:;
					};
					_29438_assign.get()._field_op.get()._field_kind+=jule::Str("=", 1);
					return;;
				};
			}
		}
		_match_end_1cd68de83:;
	};
	if (_20c8ec14b_APPEND) {
		{
			auto &_match_expr{ _29438_assign.get()._field_r.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1e437dbc3_BuiltinAppendCallExprModel>>()) {
				_case_begin_1cd6930a8:;
				{
					jule::Ptr<_1e437dbc3_BuiltinAppendCallExprModel> _32825_m = _29438_assign.get()._field_r.get()._field_model.operator jule::Ptr<_1e437dbc3_BuiltinAppendCallExprModel>();;
					{
						auto &_match_expr{ _32825_m.get()._field_elements };
						
						if (_match_expr.type_is<jule::Ptr<_1e4354ade_SliceExprModel>>()) {
							_case_begin_1cd694153:;
							{
								{
									auto &_match_expr{ _32825_m.get()._field_dest };
									
									if (_match_expr.type_is<jule::Ptr<_1e46c6eb6_Var>>() || _match_expr.type_is<jule::Ptr<_1e437c1cc_StructSubIdentExprModel>>()) {
										_case_begin_1cd6948d4:;
										{
											_20c9a1453_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_1e3b31003_PushToSliceExprModel>(_1e3b31003_PushToSliceExprModel{._field_dest=jule::Any(_32825_m.get()._field_dest), ._field_elems=_32825_m.get()._field_elements.operator jule::Ptr<_1e4354ade_SliceExprModel>()})));
										}
									}
									_match_end_1cd69484b:;
								};
							}
						}
						_match_end_1cd68c1b2:;
					};
				}
			}
			_match_end_1cd692eed:;
		};
	};
}



inline void _1e3b67666_optimize_multi_assign(_1e3b2c2b8_ScopeOptimizer* _self_, jule::Ptr<_1e46899d4_MultiAssign> _34444_assign) {
	{
		auto &expr = _34444_assign.get()._field_l;
		auto it = expr.begin();
		_iter_begin_1cd694e9a:;
		if (it != expr.end()) {
			jule::I64 _34514_i = it - expr.begin();
			jule::Any _34521_l = *it;
			{
				if ((_34521_l != nullptr)) {
					static__1e3c1019d_optimize(_34521_l);
					_34444_assign.get()._field_l[_34514_i]=jule::Any(_34521_l);
				};
			}
			_iter_next_1cd694e9a:;
			++it;
			_34514_i++;
			goto _iter_begin_1cd694e9a;
		}
		_iter_end_1cd694e9a:;
	};
	static__1e3c1019d_optimize(_34444_assign.get()._field_r);
}



inline void _1e3b7bdb7_optimize_ret(_1e3b2c2b8_ScopeOptimizer* _self_, jule::Ptr<_1e468b5da_RetSt> _35435_r) {
	static__1e3c1019d_optimize(_35435_r.get()._field_expr);
}



inline void _1e3b80096_optimize_stmt(_1e3b2c2b8_ScopeOptimizer* _self_, jule::Any _35836_stmt) {
	{
		auto &_match_expr{ _35836_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1e46862c7_Scope>>()) {
			_case_begin_1cd697e8c:;
			{
				_1e3b81ce0_optimize_child(&(*_self_), _35836_stmt.operator jule::Ptr<_1e46862c7_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c974abc0_Data>>()) {
			_case_begin_1cd698014:;
			{
				_20c9a7b41_optimize_data(&(*_self_), _35836_stmt.operator jule::Ptr<_1c974abc0_Data>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e46c6eb6_Var>>()) {
			_case_begin_1cd69807a:;
			{
				_20c9b2dd2_optimize_var(&(*_self_), _35836_stmt.operator jule::Ptr<_1e46c6eb6_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4686daa_Conditional>>()) {
			_case_begin_1cd6980e1:;
			{
				_20c9ba835_optimize_conditional(&(*_self_), _35836_stmt.operator jule::Ptr<_1e4686daa_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4687eee_RangeIter>>()) {
			_case_begin_1cd698168:;
			{
				_20c9e31dc_optimize_range_iter(&(*_self_), _35836_stmt.operator jule::Ptr<_1e4687eee_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4687619_WhileIter>>()) {
			_case_begin_1cd6981e0:;
			{
				_20c9e55b8_optimize_while_iter(&(*_self_), _35836_stmt.operator jule::Ptr<_1e4687619_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4687196_InfIter>>()) {
			_case_begin_1cd698267:;
			{
				_1e3b81ce0_optimize_child(&(*_self_), _35836_stmt.operator jule::Ptr<_1e4687196_InfIter>().get()._field_scope);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e468962c_Assign>>()) {
			_case_begin_1cd6982de:;
			{
				_1e3b372a1_optimize_assign(&(*_self_), _35836_stmt.operator jule::Ptr<_1e468962c_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e46899d4_MultiAssign>>()) {
			_case_begin_1cd698366:;
			{
				_1e3b67666_optimize_multi_assign(&(*_self_), _35836_stmt.operator jule::Ptr<_1e46899d4_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e468a023_Match>>()) {
			_case_begin_1cd6983dd:;
			{
				_20c9dba98_optimize_match(&(*_self_), _35836_stmt.operator jule::Ptr<_1e468a023_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e468b5da_RetSt>>()) {
			_case_begin_1cd698465:;
			{
				_1e3b7bdb7_optimize_ret(&(*_self_), _35836_stmt.operator jule::Ptr<_1e468b5da_RetSt>());
			}
		}
		_match_end_1cd697d5a:;
	};
}



inline void _1e3b81ce0_optimize_child(_1e3b2c2b8_ScopeOptimizer* _self_, jule::Ptr<_1e46862c7_Scope> _38537_child) {
	jule::Ptr<_1e3b2c2b8_ScopeOptimizer> _38617_so = static__20c8ee02c_new(_38537_child);;
	_1e3b84166_optimize(_38617_so.ptr());
}



inline void _1e3b84166_optimize(_1e3b2c2b8_ScopeOptimizer* _self_) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1cd6a00c6:;
		if (it != expr.end()) {
			jule::I64 _39214_i = it - expr.begin();
			jule::Any _39221_stmt = *it;
			{
				(*_self_)._field_i=_39214_i;
				_1e3b80096_optimize_stmt(&(*_self_), jule::Any(_39221_stmt));
			}
			_iter_next_1cd6a00c6:;
			++it;
			_39214_i++;
			goto _iter_begin_1cd6a00c6;
		}
		_iter_end_1cd6a00c6:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e3b2c2b8_ScopeOptimizer _Src) {
	_Stream << "ScopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1e3c1019d_optimize(jule::Any& _5533_model) {
	if (_1c99dec44_expr_enabled) {
		jule::Ptr<_1e3b2cd8a_ExprOptimizer> _5821_exop = jule::new_ptr<_1e3b2cd8a_ExprOptimizer>(_1e3b2cd8a_ExprOptimizer{._field_model=((jule::Ptr<jule::Any>)((&(_5533_model))))});;
		_1e40cb17e_do(_5821_exop.ptr());
	};
}



inline jule::Bool _1e3c15e0c_str_cond(_1e3b2cd8a_ExprOptimizer* _self_, jule::Ptr<_1e435a8e7_BinopExprModel> _6527_m) {
	jule::Ptr<_1c9778e51_Prim> _6613_lp = _1c97767ab_prim(_6527_m.get()._field_left.get()._field_kind.ptr());;
	if (((_6613_lp == nullptr) || (!(_1c977be10_is_str(_6613_lp.ptr()))))) {
		return false;
	};
	if (((_6527_m.get()._field_op.get()._field_kind != jule::Str("==", 2)) && (_6527_m.get()._field_op.get()._field_kind != jule::Str("!=", 2)))) {
		return false;
	};
	{
		auto &_match_expr{ _6527_m.get()._field_left.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1c968bb88_Const>>()) {
			_case_begin_1cd6a4ae2:;
			{
				std::tie(_6527_m.get()._field_left,_6527_m.get()._field_right) = std::make_tuple(_6527_m.get()._field_right,_6527_m.get()._field_left);
				goto _julec_label_opt;
			}
		}
		_match_end_1cd6a4a37:;
	};
	{
		auto &_match_expr{ _6527_m.get()._field_right.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1c968bb88_Const>>()) {
			_case_begin_1cd6a4251:;
			{
				goto _match_end_1cd6a5a38;
			}
		}
		else {
			_case_begin_1cd6a5ac1:;
			{
				return true;
			}
		}
		_match_end_1cd6a5a38:;
	};
	_julec_label_opt:;
	jule::Ptr<_1c968bb88_Const> _8513_c = _6527_m.get()._field_right.get()._field_model.operator jule::Ptr<_1c968bb88_Const>();;
	if ((!(_1c968d64b_read_str(_8513_c.ptr()).empty()))) {
		return false;
	};
	{
		auto &_match_expr{ _6527_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1cd6a6dad:;
			{
				(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1e437c980_CommonSubIdentExprModel>(_1e437c980_CommonSubIdentExprModel{._field_expr_kind=_6527_m.get()._field_left.get()._field_kind, ._field_expr=jule::Any(_6527_m.get()._field_left.get()._field_model), ._field_ident=jule::Str("empty()", 7)}));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1cd6a7254:;
			{
				jule::Ptr<_20cd9e6ec_Token> _9721_op = _6527_m.get()._field_op;;
				_9721_op.get()._field_kind=jule::Str("!", 1);
				(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1e435972b_UnaryExprModel>(_1e435972b_UnaryExprModel{._field_expr=jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_model=jule::Any(jule::new_ptr<_1e437c980_CommonSubIdentExprModel>(_1e437c980_CommonSubIdentExprModel{._field_expr_kind=_6527_m.get()._field_left.get()._field_kind, ._field_expr=jule::Any(_6527_m.get()._field_left.get()._field_model), ._field_ident=jule::Str("empty()", 7)})), }), ._field_op=_9721_op}));
			}
		}
		_match_end_1cd6a71cc:;
	};
	return true;
}



inline void _1e3c28b9a_binary(_1e3b2cd8a_ExprOptimizer* _self_, jule::Ptr<_1e435a8e7_BinopExprModel> _11325_m) {
	static__1e3c1019d_optimize(_11325_m.get()._field_left.get()._field_model);
	static__1e3c1019d_optimize(_11325_m.get()._field_right.get()._field_model);
	{
		auto &_match_expr{ _11325_m.get()._field_right.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1c968bb88_Const>>()) {
			_case_begin_1cd6aa686:;
			{
				goto _match_end_1cd6ab401;
			}
		}
		else {
			_case_begin_1cd6ab4ab:;
			{
				return;;
			}
		}
		_match_end_1cd6ab401:;
	};
	if ((_20c90893d_COND && _1e3c15e0c_str_cond(&(*_self_), _11325_m))) {
		return;;
	};
	if ((!(_20c8ec855_MATH))) {
		return;;
	};
	{
		auto &_match_expr{ _11325_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1cd6ac2ae:;
			{
				jule::Bool _13318_ok;;
				jule::U64 _13322_x;;
				std::tie(_13318_ok,_13322_x) = _1e40d33a6_check_for_bit_shift_opt(_11325_m.get()._field_left,_11325_m.get()._field_right);
				if (_13318_ok) {
					_11325_m.get()._field_op.get()._field_kind=jule::Str("<<", 2);
					jule::Ptr<_1c968bb88_Const> _13625_c = _11325_m.get()._field_right.get()._field_model.operator jule::Ptr<_1c968bb88_Const>();;
					_1c968e5e7_set_u64(_13625_c.ptr(), _13322_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1cd6ac5cd:;
			{
				jule::Bool _14118_ok;;
				jule::U64 _14122_x;;
				std::tie(_14118_ok,_14122_x) = _1e40d33a6_check_for_bit_shift_opt(_11325_m.get()._field_left,_11325_m.get()._field_right);
				if (_14118_ok) {
					_11325_m.get()._field_op.get()._field_kind=jule::Str(">>", 2);
					jule::Ptr<_1c968bb88_Const> _14425_c = _11325_m.get()._field_right.get()._field_model.operator jule::Ptr<_1c968bb88_Const>();;
					_1c968e5e7_set_u64(_14425_c.ptr(), _14122_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1cd6ac644:;
			{
				jule::Ptr<_1c968bb88_Const> _14921_c = _11325_m.get()._field_right.get()._field_model.operator jule::Ptr<_1c968bb88_Const>();;
				jule::F64 _15017_d = _1c968e0ec_as_f64(_14921_c.ptr());;
				if ((_15017_d == 2LL)) {
					_11325_m.get()._field_op.get()._field_kind=jule::Str("&", 1);
					_1c968e372_set_i64(_14921_c.ptr(), 1LL);
				};
			}
		}
		_match_end_1cd6ac446:;
	};
	(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1e40d153b_UnsafeBinopExprModel>(_1e40d153b_UnsafeBinopExprModel{._field_node=_11325_m}));
}



inline void _1e3c2ca7d_unary(_1e3b2cd8a_ExprOptimizer* _self_, jule::Ptr<_1e435972b_UnaryExprModel> _16124_m) {
	static__1e3c1019d_optimize(_16124_m.get()._field_expr.get()._field_model);
	if ((_20c9048b2_PTR && (_16124_m.get()._field_op.get()._field_kind == jule::Str("*", 1)))) {
		{
			auto &_match_expr{ _16124_m.get()._field_expr.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1e435972b_UnaryExprModel>>()) {
				_case_begin_1cd6b466d:;
				{
					jule::Ptr<_1e435972b_UnaryExprModel> _16625_um = _16124_m.get()._field_expr.get()._field_model.operator jule::Ptr<_1e435972b_UnaryExprModel>();;
					if ((_16625_um.get()._field_op.get()._field_kind == jule::Str("&", 1))) {
						(*((*_self_)._field_model))=jule::Any(_16625_um.get()._field_expr.get()._field_model);
					};
				}
			}
			_match_end_1cd6b45d5:;
		};
	};
}



inline void _1e3c3447a_structure_lit(_1e3b2cd8a_ExprOptimizer* _self_, jule::Ptr<_1e433b004_StructLitExprModel> _17432_m) {
	{
		auto &expr = _17432_m.get()._field_args;
		auto it = expr.begin();
		_iter_begin_1cd6b6818:;
		if (it != expr.end()) {
			jule::Ptr<_1e433773c_StructArgExprModel> _17521_arg = *it;
			{
				static__1e3c1019d_optimize(_17521_arg.get()._field_expr);
			}
			_iter_next_1cd6b6818:;
			++it;
			goto _iter_begin_1cd6b6818;
		}
		_iter_end_1cd6b6818:;
	};
}



inline void _1e3c528e9_alloc_structure(_1e3b2cd8a_ExprOptimizer* _self_, jule::Ptr<_1e4331d63_AllocStructLitExprModel> _18034_m) {
	_1e3c3447a_structure_lit(&(*_self_), _18034_m.get()._field_lit);
}



inline void _1e3c545dd_casting(_1e3b2cd8a_ExprOptimizer* _self_, jule::Ptr<_1e434e7dc_CastingExprModel> _18426_m) {
	static__1e3c1019d_optimize(_18426_m.get()._field_expr);
}



inline void _1e3ba5bd2_args(_1e3b2cd8a_ExprOptimizer* _self_, jule::Slice<jule::Any>& _18824_args) {
	{
		auto &expr = _18824_args;
		auto it = expr.begin();
		_iter_begin_1cd6b9266:;
		if (it != expr.end()) {
			jule::I64 _18914_i = it - expr.begin();
			jule::Any _18921_arg = *it;
			{
				static__1e3c1019d_optimize(_18921_arg);
				_18824_args[_18914_i]=jule::Any(_18921_arg);
			}
			_iter_next_1cd6b9266:;
			++it;
			_18914_i++;
			goto _iter_begin_1cd6b9266;
		}
		_iter_end_1cd6b9266:;
	};
}



inline void _1e3b347cb_scope(_1e3b2cd8a_ExprOptimizer* _self_, jule::Ptr<_1e46862c7_Scope>& _19525_s) {
	jule::Ptr<_1e3b2c2b8_ScopeOptimizer> _19617_scopt = static__20c8ee02c_new(_19525_s);;
	_1e3b84166_optimize(_19617_scopt.ptr());
}



inline void _1e3b35634_func_call(_1e3b2cd8a_ExprOptimizer* _self_, jule::Ptr<_1e4354902_FnCallExprModel> _20028_m) {
	static__1e3c1019d_optimize(_20028_m.get()._field_expr);
	_1e3ba5bd2_args(&(*_self_), _20028_m.get()._field_args);
	if ((_20028_m.get()._field_except != nullptr)) {
		_1e3b347cb_scope(&(*_self_), _20028_m.get()._field_except);
	};
}



inline void _1e3c7b747_slice(_1e3b2cd8a_ExprOptimizer* _self_, jule::Ptr<_1e4354ade_SliceExprModel> _20824_m) {
	_1e3ba5bd2_args(&(*_self_), _20824_m.get()._field_elems);
}



inline void _1e3c8906d_array(_1e3b2cd8a_ExprOptimizer* _self_, jule::Ptr<_1e437c5a6_ArrayExprModel> _21224_m) {
	if (((_21224_m.get()._field_elems.len() == 2LL) && (_21224_m.get()._field_elems[1LL] == nullptr))) {
		jule::Any _21421_elem = _21224_m.get()._field_elems[0LL];;
		static__1e3c1019d_optimize(_21421_elem);
		_21224_m.get()._field_elems[0LL]=jule::Any(_21421_elem);
	};
	_1e3ba5bd2_args(&(*_self_), _21224_m.get()._field_elems);
}



inline void _1e3c8c1c5_indexing(_1e3b2cd8a_ExprOptimizer* _self_, jule::Ptr<_1e437b31e_IndexingExprModel> _22127_m) {
	static__1e3c1019d_optimize(_22127_m.get()._field_expr.get()._field_model);
	static__1e3c1019d_optimize(_22127_m.get()._field_index.get()._field_model);
	if ((!(_20c8ed724_ACCESS))) {
		return;;
	};
	jule::Bool _22713_array = (_1c977725c_arr(_22127_m.get()._field_expr.get()._field_kind.ptr()) != nullptr);;
	if ((_22713_array && _1c974b583_is_const(_22127_m.get()._field_index.ptr()))) {
		(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_20c91dcd8_UnsafeIndexingExprModel>(_20c91dcd8_UnsafeIndexingExprModel{._field_node=_22127_m}));
		return;;
	};
	{
		auto &_match_expr{ _22127_m.get()._field_index.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e46c6eb6_Var>>()) {
			_case_begin_1cd6c4183:;
			{
				jule::Ptr<_1e46c6eb6_Var> _23717_i = _22127_m.get()._field_index.get()._field_model.operator jule::Ptr<_1e46c6eb6_Var>();;
				if ((_23717_i.get()._field_mutable || (_23717_i.get()._field_iter_relation == nullptr))) {
					goto _match_end_1cd6c40d9;
				};
				{
					auto &_match_expr{ _22127_m.get()._field_expr.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1e46c6eb6_Var>>()) {
						_case_begin_1cd6c588d:;
						{
							jule::Ptr<_1e46c6eb6_Var> _24321_r = _22127_m.get()._field_expr.get()._field_model.operator jule::Ptr<_1e46c6eb6_Var>();;
							if ((_23717_i.get()._field_iter_relation.get()._field_range == _24321_r)) {
								(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_20c91dcd8_UnsafeIndexingExprModel>(_20c91dcd8_UnsafeIndexingExprModel{._field_node=_22127_m}));
							};
						}
					}
					_match_end_1cd6c57d3:;
				};
			}
		}
		_match_end_1cd6c40d9:;
	};
}



inline void _1e3c93a7d_anon_func(_1e3b2cd8a_ExprOptimizer* _self_, jule::Ptr<_1e437b50b_AnonFnExprModel> _25428_m) {
	_1e3b347cb_scope(&(*_self_), _25428_m.get()._field_func.get()._field_scope);
}



inline void _1e3cbee0b_map(_1e3b2cd8a_ExprOptimizer* _self_, jule::Ptr<_1e437b8d5_MapExprModel> _25822_m) {
	{
		auto &expr = _25822_m.get()._field_entries;
		auto it = expr.begin();
		_iter_begin_1cd6c83da:;
		if (it != expr.end()) {
			jule::Ptr<_1e437b6e8_KeyValPairExprModel> _25921_pair = *it;
			{
				static__1e3c1019d_optimize(_25921_pair.get()._field_key);
				static__1e3c1019d_optimize(_25921_pair.get()._field_val);
			}
			_iter_next_1cd6c83da:;
			++it;
			goto _iter_begin_1cd6c83da;
		}
		_iter_end_1cd6c83da:;
	};
}



inline void _1e3cd694a_slicing(_1e3b2cd8a_ExprOptimizer* _self_, jule::Ptr<_1e437bac2_SlicingExprModel> _26526_m) {
	static__1e3c1019d_optimize(_26526_m.get()._field_expr);
	static__1e3c1019d_optimize(_26526_m.get()._field_left);
	if ((_26526_m.get()._field_right != nullptr)) {
		static__1e3c1019d_optimize(_26526_m.get()._field_right);
	};
}



inline void _1e3cdd864_trait_sub(_1e3b2cd8a_ExprOptimizer* _self_, jule::Ptr<_1e437bcae_TraitSubIdentExprModel> _27328_m) {
	static__1e3c1019d_optimize(_27328_m.get()._field_expr);
}



inline void _1e3ced621_structure_sub(_1e3b2cd8a_ExprOptimizer* _self_, jule::Ptr<_1e437c1cc_StructSubIdentExprModel> _27732_m) {
	static__1e3c1019d_optimize(_27732_m.get()._field_expr.get()._field_model);
}



inline void _1e3d379e0_common_sub(_1e3b2cd8a_ExprOptimizer* _self_, jule::Ptr<_1e437c980_CommonSubIdentExprModel> _28129_m) {
	static__1e3c1019d_optimize(_28129_m.get()._field_expr);
}



inline void _1e3d43556_tuple(_1e3b2cd8a_ExprOptimizer* _self_, jule::Ptr<_1e437cb6c_TupleExprModel> _28524_m) {
	{
		auto &expr = _28524_m.get()._field_datas;
		auto it = expr.begin();
		_iter_begin_1cd6cd511:;
		if (it != expr.end()) {
			jule::Ptr<_1c974abc0_Data> _28621_d = *it;
			{
				static__1e3c1019d_optimize(_28621_d.get()._field_model);
			}
			_iter_next_1cd6cd511:;
			++it;
			goto _iter_begin_1cd6cd511;
		}
		_iter_end_1cd6cd511:;
	};
}



inline void _1e3d935d9_new_call(_1e3b2cd8a_ExprOptimizer* _self_, jule::Ptr<_1e437d420_BuiltinNewCallExprModel> _29127_m) {
	if ((_29127_m.get()._field_init != nullptr)) {
		static__1e3c1019d_optimize(_29127_m.get()._field_init);
	};
}



inline void _1e3d9a910_out_call(_1e3b2cd8a_ExprOptimizer* _self_, jule::Ptr<_1e437cd59_BuiltinOutCallExprModel> _29727_m) {
	static__1e3c1019d_optimize(_29727_m.get()._field_expr);
}



inline void _1e3da9688_outln_call(_1e3b2cd8a_ExprOptimizer* _self_, jule::Ptr<_1e437d046_BuiltinOutlnCallExprModel> _30129_m) {
	static__1e3c1019d_optimize(_30129_m.get()._field_expr);
}



inline void _1e3dc8201_panic_call(_1e3b2cd8a_ExprOptimizer* _self_, jule::Ptr<_1e437d60c_BuiltinPanicCallExprModel> _30529_m) {
	static__1e3c1019d_optimize(_30529_m.get()._field_expr);
}



inline void _1e3dbc8bb_assert_call(_1e3b2cd8a_ExprOptimizer* _self_, jule::Ptr<_1e437d7e9_BuiltinAssertCallExprModel> _30930_m) {
	static__1e3c1019d_optimize(_30930_m.get()._field_expr);
}



inline void _1e3de7c8c_error_call(_1e3b2cd8a_ExprOptimizer* _self_, jule::Ptr<_1e437e09c_BuiltinErrorCallExprModel> _31329_m) {
	static__1e3c1019d_optimize(_31329_m.get()._field_err);
}



inline void _1e3e2215c_make_call(_1e3b2cd8a_ExprOptimizer* _self_, jule::Ptr<_1e437d9d6_BuiltinMakeCallExprModel> _31728_m) {
	if ((_31728_m.get()._field_len != nullptr)) {
		static__1e3c1019d_optimize(_31728_m.get()._field_len);
	};
	if ((_31728_m.get()._field_cap != nullptr)) {
		static__1e3c1019d_optimize(_31728_m.get()._field_cap);
	};
}



inline void _1e3e22c40_append_call(_1e3b2cd8a_ExprOptimizer* _self_, jule::Ptr<_1e437dbc3_BuiltinAppendCallExprModel> _32630_m) {
	static__1e3c1019d_optimize(_32630_m.get()._field_dest);
	static__1e3c1019d_optimize(_32630_m.get()._field_elements);
}



inline void _1e3e72740_clone_call(_1e3b2cd8a_ExprOptimizer* _self_, jule::Ptr<_1e437d233_BuiltinCloneCallExprModel> _33129_m) {
	static__1e3c1019d_optimize(_33129_m.get()._field_expr);
}



inline void _1e3e8b418_sizeof(_1e3b2cd8a_ExprOptimizer* _self_, jule::Ptr<_1e437be9b_SizeofExprModel> _33525_m) {
	static__1e3c1019d_optimize(_33525_m.get()._field_expr);
}



inline void _1e408804d_alignof(_1e3b2cd8a_ExprOptimizer* _self_, jule::Ptr<_1e437e70c_AlignofExprModel> _33926_m) {
	static__1e3c1019d_optimize(_33926_m.get()._field_expr);
}



inline void _1e4090b38_integrated_to_str(_1e3b2cd8a_ExprOptimizer* _self_, jule::Ptr<_1e437ead6_IntegratedToStrExprModel> _34336_m) {
	static__1e3c1019d_optimize(_34336_m.get()._field_expr);
}



inline void _1e40b260a_free(_1e3b2cd8a_ExprOptimizer* _self_, jule::Ptr<_1e437eeb0_FreeExprModel> _34723_m) {
	static__1e3c1019d_optimize(_34723_m.get()._field_expr);
}



inline void _1e40bda78_backend_emit(_1e3b2cd8a_ExprOptimizer* _self_, jule::Ptr<_1e437ecc3_BackendEmitExprModel> _35131_m) {
	_1e3ba5bd2_args(&(*_self_), _35131_m.get()._field_exprs);
}



inline void _1e40cb17e_do(_1e3b2cd8a_ExprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*_self_)._field_model)) };
		
		if (_match_expr.type_is<jule::Ptr<_1c974abc0_Data>>()) {
			_case_begin_1cd6dab4a:;
			{
				(*((*_self_)._field_model))=jule::Any((*((*_self_)._field_model)).operator jule::Ptr<_1c974abc0_Data>().get()._field_model);
				_1e40cb17e_do(&(*_self_));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e435a8e7_BinopExprModel>>()) {
			_case_begin_1cd6dae25:;
			{
				_1e3c28b9a_binary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e435a8e7_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e435972b_UnaryExprModel>>()) {
			_case_begin_1cd6dae8b:;
			{
				_1e3c2ca7d_unary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e435972b_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e433b004_StructLitExprModel>>()) {
			_case_begin_1cd6db013:;
			{
				_1e3c3447a_structure_lit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e433b004_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4331d63_AllocStructLitExprModel>>()) {
			_case_begin_1cd6db08a:;
			{
				_1e3c528e9_alloc_structure(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e4331d63_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e434e7dc_CastingExprModel>>()) {
			_case_begin_1cd6db112:;
			{
				_1e3c545dd_casting(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e434e7dc_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4354902_FnCallExprModel>>()) {
			_case_begin_1cd6db189:;
			{
				_1e3b35634_func_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e4354902_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4354ade_SliceExprModel>>()) {
			_case_begin_1cd6db211:;
			{
				_1e3c7b747_slice(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e4354ade_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437c5a6_ArrayExprModel>>()) {
			_case_begin_1cd6db288:;
			{
				_1e3c8906d_array(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e437c5a6_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437b31e_IndexingExprModel>>()) {
			_case_begin_1cd6db310:;
			{
				_1e3c8c1c5_indexing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e437b31e_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437b50b_AnonFnExprModel>>()) {
			_case_begin_1cd6db387:;
			{
				_1e3c93a7d_anon_func(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e437b50b_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437b8d5_MapExprModel>>()) {
			_case_begin_1cd6db40e:;
			{
				_1e3cbee0b_map(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e437b8d5_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437bac2_SlicingExprModel>>()) {
			_case_begin_1cd6db486:;
			{
				_1e3cd694a_slicing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e437bac2_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437bcae_TraitSubIdentExprModel>>()) {
			_case_begin_1cd6db50d:;
			{
				_1e3cdd864_trait_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e437bcae_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437c1cc_StructSubIdentExprModel>>()) {
			_case_begin_1cd6db585:;
			{
				_1e3ced621_structure_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e437c1cc_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437c980_CommonSubIdentExprModel>>()) {
			_case_begin_1cd6db60c:;
			{
				_1e3d379e0_common_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e437c980_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437cb6c_TupleExprModel>>()) {
			_case_begin_1cd6db684:;
			{
				_1e3d43556_tuple(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e437cb6c_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437cd59_BuiltinOutCallExprModel>>()) {
			_case_begin_1cd6db70b:;
			{
				_1e3d9a910_out_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e437cd59_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437d046_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1cd6db783:;
			{
				_1e3da9688_outln_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e437d046_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437d420_BuiltinNewCallExprModel>>()) {
			_case_begin_1cd6db80a:;
			{
				_1e3d935d9_new_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e437d420_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437d60c_BuiltinPanicCallExprModel>>()) {
			_case_begin_1cd6db882:;
			{
				_1e3dc8201_panic_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e437d60c_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437d7e9_BuiltinAssertCallExprModel>>()) {
			_case_begin_1cd6db909:;
			{
				_1e3dbc8bb_assert_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e437d7e9_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437e09c_BuiltinErrorCallExprModel>>()) {
			_case_begin_1cd6db981:;
			{
				_1e3de7c8c_error_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e437e09c_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437d9d6_BuiltinMakeCallExprModel>>()) {
			_case_begin_1cd6dba08:;
			{
				_1e3e2215c_make_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e437d9d6_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437dbc3_BuiltinAppendCallExprModel>>()) {
			_case_begin_1cd6dba80:;
			{
				_1e3e22c40_append_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e437dbc3_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437d233_BuiltinCloneCallExprModel>>()) {
			_case_begin_1cd6dbb07:;
			{
				_1e3e72740_clone_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e437d233_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437be9b_SizeofExprModel>>()) {
			_case_begin_1cd6dbb7e:;
			{
				_1e3e8b418_sizeof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e437be9b_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437e70c_AlignofExprModel>>()) {
			_case_begin_1cd6dbc06:;
			{
				_1e408804d_alignof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e437e70c_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437ead6_IntegratedToStrExprModel>>()) {
			_case_begin_1cd6dbc7d:;
			{
				_1e4090b38_integrated_to_str(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e437ead6_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437eeb0_FreeExprModel>>()) {
			_case_begin_1cd6dbd05:;
			{
				_1e40b260a_free(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e437eeb0_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437ecc3_BackendEmitExprModel>>()) {
			_case_begin_1cd6dbd7c:;
			{
				_1e40bda78_backend_emit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e437ecc3_BackendEmitExprModel>());
			}
		}
		_match_end_1cd6daae5:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e3b2cd8a_ExprOptimizer _Src) {
	_Stream << "ExprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ca001d16_Optimizer> static__1c9d3c16d_new(jule::Ptr<_1e498133b_IR>& _2528_ir) {
	return jule::new_ptr<_1ca001d16_Optimizer>(_1ca001d16_Optimizer{._field_ir=_2528_ir});
}



inline void _1c9d65927_optimize_global(_1ca001d16_Optimizer* _self_, jule::Ptr<_1e46c6eb6_Var>& _3139_v) {
	if ((!(_3139_v.get()._field_cpp_linked))) {
		static__1e3c1019d_optimize(_3139_v.get()._field_value.get()._field_data.get()._field_model);
	};
}



inline void _1c9ed35cd_optimize_function(_1ca001d16_Optimizer* _self_, jule::Ptr<_1e4380576_Fn>& _3741_func) {
	if (_3741_func.get()._field_cpp_linked) {
		return;;
	};
	{
		auto &expr = _3741_func.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1cd7034ae:;
		if (it != expr.end()) {
			jule::Ptr<_1e4383018_FnIns> _4121_ins = *it;
			{
				jule::Ptr<_1e3b2c2b8_ScopeOptimizer> _4221_so = static__20c8ee02c_new(_4121_ins.get()._field_scope);;
				_1e3b84166_optimize(_4221_so.ptr());
			}
			_iter_next_1cd7034ae:;
			++it;
			goto _iter_begin_1cd7034ae;
		}
		_iter_end_1cd7034ae:;
	};
}



inline void _1c9ed5c40_optimize_struct(_1ca001d16_Optimizer* _self_, jule::Ptr<_1e43360cb_Struct>& _4739_s) {
	if (_4739_s.get()._field_cpp_linked) {
		return;;
	};
	{
		auto &expr = _4739_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1cd704d2e:;
		if (it != expr.end()) {
			jule::Ptr<_1e43462ea_StructIns> _5121_ins = *it;
			{
				{
					auto &expr = _5121_ins.get()._field_fields;
					auto it = expr.begin();
					_iter_begin_1cd7054d3:;
					if (it != expr.end()) {
						jule::Ptr<_1e434014b_FieldIns> _5225_f = *it;
						{
							if ((_5225_f.get()._field_default != nullptr)) {
								static__1e3c1019d_optimize(_5225_f.get()._field_default.get()._field_model);
							};
						}
						_iter_next_1cd7054d3:;
						++it;
						goto _iter_begin_1cd7054d3;
					}
					_iter_end_1cd7054d3:;
				};
				{
					auto &expr = _5121_ins.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1cd705d74:;
					if (it != expr.end()) {
						jule::Ptr<_1e4380576_Fn> _5725_m = *it;
						{
							_1c9ed35cd_optimize_function(&(*_self_), _5725_m);
						}
						_iter_next_1cd705d74:;
						++it;
						goto _iter_begin_1cd705d74;
					}
					_iter_end_1cd705d74:;
				};
			}
			_iter_next_1cd704d2e:;
			++it;
			goto _iter_begin_1cd704d2e;
		}
		_iter_end_1cd704d2e:;
	};
}



inline void _1c9ed5dc7_optimize_globals(_1ca001d16_Optimizer* _self_, jule::Ptr<_1e46a742a_Package>& _6340_p) {
	{
		auto &expr = _6340_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1cd707309:;
		if (it != expr.end()) {
			jule::Ptr<_1c9745c42_SymbolTable> _6421_f = *it;
			{
				{
					auto &expr = _6421_f.get()._field_vars;
					auto it = expr.begin();
					_iter_begin_1cd707ace:;
					if (it != expr.end()) {
						jule::Ptr<_1e46c6eb6_Var> _6525_v = *it;
						{
							_1c9d65927_optimize_global(&(*_self_), _6525_v);
						}
						_iter_next_1cd707ace:;
						++it;
						goto _iter_begin_1cd707ace;
					}
					_iter_end_1cd707ace:;
				};
			}
			_iter_next_1cd707309:;
			++it;
			goto _iter_begin_1cd707309;
		}
		_iter_end_1cd707309:;
	};
}



inline void _1c9ed91a5_optimize_functions(_1ca001d16_Optimizer* _self_, jule::Ptr<_1e46a742a_Package>& _7142_p) {
	{
		auto &expr = _7142_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1cd708aad:;
		if (it != expr.end()) {
			jule::Ptr<_1c9745c42_SymbolTable> _7221_f = *it;
			{
				{
					auto &expr = _7221_f.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1cd709383:;
					if (it != expr.end()) {
						jule::Ptr<_1e4380576_Fn> _7325_func = *it;
						{
							_1c9ed35cd_optimize_function(&(*_self_), _7325_func);
						}
						_iter_next_1cd709383:;
						++it;
						goto _iter_begin_1cd709383;
					}
					_iter_end_1cd709383:;
				};
			}
			_iter_next_1cd708aad:;
			++it;
			goto _iter_begin_1cd708aad;
		}
		_iter_end_1cd708aad:;
	};
}



inline void _1c9edbe44_optimize_structs(_1ca001d16_Optimizer* _self_, jule::Ptr<_1e46a742a_Package>& _7940_p) {
	{
		auto &expr = _7940_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1cd70a340:;
		if (it != expr.end()) {
			jule::Ptr<_1c9745c42_SymbolTable> _8021_f = *it;
			{
				{
					auto &expr = _8021_f.get()._field_structs;
					auto it = expr.begin();
					_iter_begin_1cd70ab15:;
					if (it != expr.end()) {
						jule::Ptr<_1e43360cb_Struct> _8125_s = *it;
						{
							_1c9ed5c40_optimize_struct(&(*_self_), _8125_s);
						}
						_iter_next_1cd70ab15:;
						++it;
						goto _iter_begin_1cd70ab15;
					}
					_iter_end_1cd70ab15:;
				};
			}
			_iter_next_1cd70a340:;
			++it;
			goto _iter_begin_1cd70a340;
		}
		_iter_end_1cd70a340:;
	};
}



inline void _1c9ee845b_optimize_package(_1ca001d16_Optimizer* _self_, jule::Ptr<_1e46a742a_Package>& _8740_p) {
	_1c9ed5dc7_optimize_globals(&(*_self_), _8740_p);
	_1c9ed91a5_optimize_functions(&(*_self_), _8740_p);
	_1c9edbe44_optimize_structs(&(*_self_), _8740_p);
}



inline void _1c9eec6d5_optimize(_1ca001d16_Optimizer* _self_) {
	_1ca037ca3_detect_enabled();
	if (_20c8e8a0a_DEADCODE) {
		_1ca05c1d4_eliminate_defines((*_self_)._field_ir);
	};
	if ((_1c9d18424_scope_enabled || _1c99dec44_expr_enabled)) {
		{
			auto &expr = (*_self_)._field_ir.get()._field_used;
			auto it = expr.begin();
			_iter_begin_1cd70db5c:;
			if (it != expr.end()) {
				jule::Ptr<_1e46a4768_ImportInfo> _10325_u = *it;
				{
					if ((!(_10325_u.get()._field_cpp_linked))) {
						_1c9ee845b_optimize_package(&(*_self_), _10325_u.get()._field_package);
					};
				}
				_iter_next_1cd70db5c:;
				++it;
				goto _iter_begin_1cd70db5c;
			}
			_iter_end_1cd70db5c:;
		};
		_1c9ee845b_optimize_package(&(*_self_), (*_self_)._field_ir.get()._field_main);
	};
	if (_20c8e8a0a_DEADCODE) {
		_1ca06168e_eliminate_scopes((*_self_)._field_ir);
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ca001d16_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1c9e9854e_reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__1c9e98681_print(jule::Str _1925_escape, jule::Str _1938_text) {
	jule::out(_1925_escape);
	jule::out(_1938_text);
	static__1c9e9854e_reset();
}







std::ostream &operator<<(std::ostream &_Stream, _1c9e98362_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1c9e999c3_log_flat(_20ca8ec5b_Log& _1429_l) {
	jule::outln(_1429_l._field_text);
}



inline void static__1c9e99bd2_log_error(_20ca8ec5b_Log& _1930_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_1930_l._field_text);
	static__1c9e9854e_reset();
	if ((_1930_l._field_path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out(_1930_l._field_path);
	};
	if (((_1930_l._field_row != 0LL) && (_1930_l._field_column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_1e5c30b6c_itoa(_1930_l._field_row));
		jule::out(jule::Str(":", 1));
		jule::out(_1e5c30b6c_itoa(_1930_l._field_column));
	};
	if ((_1930_l._field_line.len() != 0LL)) {
		jule::Str _3621_line = _20c8ad0b8_trim_left(_1930_l._field_line,jule::Str("\r\n\v\b ", 5));;
		jule::I64 _3721_offset = ((_1930_l._field_line.len() - _3621_line.len()) + 1LL);;
		jule::I64 _3821_old_len = _3621_line.len();;
		_3621_line=_20c8ad0b8_trim_left(_3621_line,jule::Str("\t", 1));
		if ((_3821_old_len != _3621_line.len())) {
			_3721_offset+=((_3821_old_len - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _1e5c30b6c_itoa(_1930_l._field_row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_20b9a0233_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_20b9a0233_repeat(jule::Str(" ", 1),static_cast<jule::I64>((_1930_l._field_column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if ((_1930_l._field_suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_20b9a0233_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__1c9e98681_print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_1930_l._field_suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__1c9e99de1_log(_20ca8ec5b_Log& _6524_l) {
	{
		auto &_match_expr{ _6524_l._field_kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1cd72bc57:;
			{
				static__1c9e999c3_log_flat(_6524_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1cd72c241:;
			{
				static__1c9e99bd2_log_error(_6524_l);
			}
		}
		_match_end_1cd72c131:;
	};
}



inline void static__1c9e9a100_print_logs(jule::Slice<_20ca8ec5b_Log>& _7531_logs) {
	{
		auto &expr = _7531_logs;
		auto it = expr.begin();
		_iter_begin_1cd72be99:;
		if (it != expr.end()) {
			_20ca8ec5b_Log &_7616_l = *it;
			{
				static__1c9e99de1_log(_7616_l);
			}
			_iter_next_1cd72be99:;
			++it;
			goto _iter_begin_1cd72be99;
		}
		_iter_end_1cd72be99:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_1e5c30b6c_itoa(static_cast<jule::I64>(_7531_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _1c9e9972b_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _1ca51a87e_unix(_1ca51a494_AbsTime* _self_) {
	jule::Bool _5617_leap = false;;
	jule::U64 _5717_y = ((*_self_)._field_year - 1900LLU);;
	jule::U64 _5817_m = ((*_self_)._field_month - 1LLU);;
	if (((_5817_m >= 12LLU) || (_5817_m < 0LLU))) {
		jule::U64 _6021_adj = (_5817_m / 12LLU);;
		_5817_m%=12LL;
		if ((_5817_m < 0LLU)) {
			(_6021_adj)--;
			_5817_m+=12LLU;
		};
		_5717_y+=_6021_adj;
	};
	jule::U64 _6817_t = _1ca520554_unix_year_to_seconds(_5717_y,_5617_leap);;
	_6817_t+=_1ca5208d9_unix_month_to_seconds(_5817_m,_5617_leap);
	_6817_t+=(86400LLU * ((*_self_)._field_day - 1LLU));
	_6817_t+=(3600LLU * (*_self_)._field_hour);
	_6817_t+=(60LLU * (*_self_)._field_minute);
	_6817_t+=(*_self_)._field_second;
	return _6817_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1ca51a494_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "day:" << _Src._field_day << ", ";
	_Stream << "week_day:" << _Src._field_week_day << ", ";
	_Stream << "year_day:" << _Src._field_year_day << ", ";
	_Stream << "month:" << _Src._field_month << ", ";
	_Stream << "year:" << _Src._field_year << ", ";
	_Stream << "second:" << _Src._field_second << ", ";
	_Stream << "minute:" << _Src._field_minute << ", ";
	_Stream << "hour:" << _Src._field_hour;
	_Stream << "}";
	return _Stream;
}



inline _1ca51ab6a_Time static__1ca51b011_unix(jule::U64 _9124_sec) {
	return _1ca51ab6a_Time{._field_sec=_9124_sec};
}



inline _1ca51ab6a_Time static__1ca51b20e_now(void) {
	return static__1ca51b011_unix(static_cast<jule::U64>(_1ca520213_unix()));
}



inline jule::U64 _1ca51b660_unix(_1ca51ab6a_Time* _self_) {
	return (*_self_)._field_sec;
}



inline jule::U64 _1ca51b8c4_day(_1ca51ab6a_Time* _self_) {
	return _1ca51c84d_abs(&(*_self_))._field_day;
}



inline jule::U64 _1ca51bb38_month(_1ca51ab6a_Time* _self_) {
	return _1ca51c84d_abs(&(*_self_))._field_month;
}



inline jule::U64 _1ca51bd9c_year(_1ca51ab6a_Time* _self_) {
	return _1ca51c84d_abs(&(*_self_))._field_year;
}



inline jule::U64 _1ca51c111_second(_1ca51ab6a_Time* _self_) {
	return _1ca51c84d_abs(&(*_self_))._field_second;
}



inline jule::U64 _1ca51c375_minute(_1ca51ab6a_Time* _self_) {
	return _1ca51c84d_abs(&(*_self_))._field_minute;
}



inline jule::U64 _1ca51c5d9_hour(_1ca51ab6a_Time* _self_) {
	return _1ca51c84d_abs(&(*_self_))._field_hour;
}



inline _1ca51a494_AbsTime _1ca51c84d_abs(_1ca51ab6a_Time* _self_) {
	jule::U64 _12713_secs = ((*_self_)._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_rem_secs = (_12713_secs % 86400LL);;
	if ((_12917_rem_secs < 0LLU)) {
		_12917_rem_secs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qc_cycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_rem_days = (_12817_days % 146097LL);;
	if ((_13617_rem_days < 0LLU)) {
		_13617_rem_days+=146097LLU;
		(_13517_qc_cycles)--;
	};
	jule::U64 _14217_c_cycles = (_13617_rem_days / 36524LLU);;
	if ((_14217_c_cycles == 4LLU)) {
		(_14217_c_cycles)--;
	};
	_13617_rem_days-=(_14217_c_cycles * 36524LLU);
	jule::U64 _14817_q_cycles = (_13617_rem_days / 1461LLU);;
	if ((_14817_q_cycles == 25LLU)) {
		(_14817_q_cycles)--;
	};
	_13617_rem_days-=(_14817_q_cycles * 1461LLU);
	jule::U64 _15417_rem_years = (_13617_rem_days / 365LLU);;
	if ((_15417_rem_years == 4LLU)) {
		(_15417_rem_years)--;
	};
	_13617_rem_days-=(_15417_rem_years * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_rem_years == 0LLU) && ((_14817_q_cycles > 0LLU) || (_14217_c_cycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_y_day = (((_13617_rem_days + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_y_day >= (365LLU + _16017_leap))) {
		_16417_y_day-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_1ca5199e3_MDAYS[static_cast<jule::I64>(_16917_months)] <= _13617_rem_days); (_16917_months)++) {
		{
			_13617_rem_days-=_1ca5199e3_MDAYS[static_cast<jule::I64>(_16917_months)];
		}
	_iter_next_1cd746953:;
	}
	_iter_end_1cd746953:;;
	_1ca51a494_AbsTime _17417_t = _1ca51a494_AbsTime{};;
	_17417_t._field_year=static_cast<jule::U64>(((((_15417_rem_years + (4LLU * _14817_q_cycles)) + (100LLU * _14217_c_cycles)) + (400LLU * _13517_qc_cycles)) + 100LLU));
	_17417_t._field_month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_month >= 12LLU)) {
		_17417_t._field_month-=12LLU;
		(_17417_t._field_year)++;
	};
	_17417_t._field_month+=1LLU;
	_17417_t._field_year+=1900LLU;
	_17417_t._field_day=static_cast<jule::U64>((_13617_rem_days + 1LLU));
	_17417_t._field_week_day=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_week_day < 0LLU)) {
		_17417_t._field_week_day+=7LLU;
	};
	_17417_t._field_year_day=_16417_y_day;
	_17417_t._field_hour=static_cast<jule::U64>((_12917_rem_secs / 3600LLU));
	_17417_t._field_minute=static_cast<jule::U64>(((_12917_rem_secs / 60LLU) % 60LL));
	_17417_t._field_second=static_cast<jule::U64>((_12917_rem_secs % 60LL));
	return _17417_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1ca51ab6a_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ca49177d_ScopeCoder> static__1ca491d99_new(jule::Ptr<_1ca4d7c36_ObjectCoder>& _4724_oc) {
	return jule::new_ptr<_1ca49177d_ScopeCoder>(_1ca49177d_ScopeCoder{._field_oc=_4724_oc});
}



inline void _1ca49211e_range_index_iter(jule::Ptr<_1ca49177d_ScopeCoder> _self_, jule::Ptr<_1e4687eee_RangeIter>& _5341_it) {
	jule::Str _5413_begin = static__1ca4ad69b_iter_begin(static_cast<jule::U64>(static_cast<jule::U64>(_5341_it)));;
	jule::Str _5513_next = static__1ca4adbda_iter_next(static_cast<jule::U64>(static_cast<jule::U64>(_5341_it)));;
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1ca4e2a98_add_indent(_self_.get()._field_oc);
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_20c8e7e49_COPY && _1ca496cd3_is_copy_optimizable(_5341_it.get()._field_expr))) {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_1ca4a4b04_model(_self_.get()._field_oc.get()._field_ec, jule::Any(_5341_it.get()._field_expr.get()._field_model));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, _5413_begin);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_1ca4e2a98_add_indent(_self_.get()._field_oc);
	_1ca4e39cd_indent(_self_.get()._field_oc);
	if ((_5341_it.get()._field_key_a != nullptr)) {
		_1ca522a95_var_init_expr(_self_.get()._field_oc, _5341_it.get()._field_key_a,jule::Fn<void(void)>([=](void) mutable -> void {
			_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("it - expr.begin()", 17));
		}));
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1ca4e39cd_indent(_self_.get()._field_oc);
	};
	if ((_5341_it.get()._field_key_b != nullptr)) {
		if (_20c8e7e49_COPY) {
			_5341_it.get()._field_key_b.get()._field_reference=_1ca49718a_is_iter_copy_optimizable(_5341_it.get()._field_expr,_5341_it.get()._field_key_b);
		};
		_1ca522a95_var_init_expr(_self_.get()._field_oc, _5341_it.get()._field_key_b,jule::Fn<void(void)>([=](void) mutable -> void {
			_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("*it", 3));
		}));
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1ca4e39cd_indent(_self_.get()._field_oc);
	};
	_1ca49670b_scope(_self_, _5341_it.get()._field_scope);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, _5513_next);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1ca4e39cd_indent(_self_.get()._field_oc);
	if ((_5341_it.get()._field_key_a != nullptr)) {
		_1ca4e23b1_write(_self_.get()._field_oc, static__1ca4ad404_var(_5341_it.get()._field_key_a));
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("++;\n", 4));
		_1ca4e39cd_indent(_self_.get()._field_oc);
	};
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1ca4e23b1_write(_self_.get()._field_oc, _5413_begin);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1ca4e32b3_done_indent(_self_.get()._field_oc);
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, static__1ca4ad943_iter_end(static_cast<jule::U64>(static_cast<jule::U64>(_5341_it))));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1ca4e32b3_done_indent(_self_.get()._field_oc);
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1ca492394_range_hashmap_iter(jule::Ptr<_1ca49177d_ScopeCoder> _self_, jule::Ptr<_1e4687eee_RangeIter>& _12143_it) {
	jule::Str _12213_begin = static__1ca4ad69b_iter_begin(static_cast<jule::U64>(static_cast<jule::U64>(_12143_it)));;
	jule::Str _12313_next = static__1ca4adbda_iter_next(static_cast<jule::U64>(static_cast<jule::U64>(_12143_it)));;
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1ca4e2a98_add_indent(_self_.get()._field_oc);
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_20c8e7e49_COPY && _1ca496cd3_is_copy_optimizable(_12143_it.get()._field_expr))) {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_1ca4a4b04_model(_self_.get()._field_oc.get()._field_ec, jule::Any(_12143_it.get()._field_expr.get()._field_model));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, _12213_begin);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_1ca4e2a98_add_indent(_self_.get()._field_oc);
	_1ca4e39cd_indent(_self_.get()._field_oc);
	if ((_12143_it.get()._field_key_a != nullptr)) {
		if (_20c8e7e49_COPY) {
			_12143_it.get()._field_key_a.get()._field_reference=_1ca49718a_is_iter_copy_optimizable(_12143_it.get()._field_expr,_12143_it.get()._field_key_a);
		};
		_1ca522a95_var_init_expr(_self_.get()._field_oc, _12143_it.get()._field_key_a,jule::Fn<void(void)>([=](void) mutable -> void {
			_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("it->first", 9));
		}));
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1ca4e39cd_indent(_self_.get()._field_oc);
	};
	if ((_12143_it.get()._field_key_b != nullptr)) {
		if (_20c8e7e49_COPY) {
			_12143_it.get()._field_key_b.get()._field_reference=_1ca49718a_is_iter_copy_optimizable(_12143_it.get()._field_expr,_12143_it.get()._field_key_b);
		};
		_1ca522a95_var_init_expr(_self_.get()._field_oc, _12143_it.get()._field_key_b,jule::Fn<void(void)>([=](void) mutable -> void {
			_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("it->second", 10));
		}));
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1ca4e39cd_indent(_self_.get()._field_oc);
	};
	_1ca49670b_scope(_self_, _12143_it.get()._field_scope);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, _12313_next);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1ca4e23b1_write(_self_.get()._field_oc, _12213_begin);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1ca4e32b3_done_indent(_self_.get()._field_oc);
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, static__1ca4ad943_iter_end(static_cast<jule::U64>(static_cast<jule::U64>(_12143_it))));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1ca4e32b3_done_indent(_self_.get()._field_oc);
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1ca492619_if_case(jule::Ptr<_1ca49177d_ScopeCoder> _self_, jule::Ptr<_1e46866c3_If> _18731_i) {
	if ((_18731_i.get()._field_expr != nullptr)) {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("if (", 4));
		_1ca4a4d79_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_18731_i.get()._field_expr));
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(") ", 2));
	};
	_1ca49670b_scope(_self_, _18731_i.get()._field_scope);
}



inline void _1ca49288e_conditional(jule::Ptr<_1ca49177d_ScopeCoder> _self_, jule::Ptr<_1e4686daa_Conditional> _19635_c) {
	jule::Bool _19717_writed = false;;
	{
		auto &expr = _19635_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1cd8c709a:;
		if (it != expr.end()) {
			jule::Ptr<_1e46866c3_If> _19821_elif = *it;
			{
				if ((_19821_elif == nullptr)) {
					goto _iter_next_1cd8c709a;
				};
				if (_19717_writed) {
					_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(" else ", 6));
				};
				_19717_writed=true;
				_1ca492619_if_case(_self_, _19821_elif);
			}
			_iter_next_1cd8c709a:;
			++it;
			goto _iter_begin_1cd8c709a;
		}
		_iter_end_1cd8c709a:;
	};
	if ((_19635_c.get()._field_default != nullptr)) {
		if (_19717_writed) {
			_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(" else ", 6));
		};
		_1ca49670b_scope(_self_, _19635_c.get()._field_default.get()._field_scope);
	};
}



inline void _1ca492b14_inf_iter(jule::Ptr<_1ca49177d_ScopeCoder> _self_, jule::Ptr<_1e4687196_InfIter> _21632_it) {
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("for (;;) {\n", 11));
	_1ca4e2a98_add_indent(_self_.get()._field_oc);
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca49670b_scope(_self_, _21632_it.get()._field_scope);
	_1ca4e32b3_done_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, static__1ca4adbda_iter_next(static_cast<jule::U64>(static_cast<jule::U64>(_21632_it))));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, static__1ca4ad943_iter_end(static_cast<jule::U64>(static_cast<jule::U64>(_21632_it))));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1ca492d89_while_iter(jule::Ptr<_1ca49177d_ScopeCoder> _self_, jule::Ptr<_1e4687619_WhileIter> _23334_it) {
	if (((_23334_it.get()._field_expr != nullptr) && (_23334_it.get()._field_next == nullptr))) {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("while (", 7));
		_1ca4a4d79_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_23334_it.get()._field_expr));
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	} else {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("for (; ", 7));
		if ((_23334_it.get()._field_expr != nullptr)) {
			_1ca4a4d79_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_23334_it.get()._field_expr));
		};
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("; ", 2));
		if ((_23334_it.get()._field_next != nullptr)) {
			_1ca496211_st(_self_, jule::Any(_23334_it.get()._field_next));
		};
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	};
	_1ca4e2a98_add_indent(_self_.get()._field_oc);
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca49670b_scope(_self_, _23334_it.get()._field_scope);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1ca4e32b3_done_indent(_self_.get()._field_oc);
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, static__1ca4adbda_iter_next(static_cast<jule::U64>(static_cast<jule::U64>(_23334_it))));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, static__1ca4ad943_iter_end(static_cast<jule::U64>(static_cast<jule::U64>(_23334_it))));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1ca49310e_range_iter(jule::Ptr<_1ca49177d_ScopeCoder> _self_, jule::Ptr<_1e4687eee_RangeIter> _26634_it) {
	{
		
		if ((_1c97774c1_slc(_26634_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cd8da1ac:;
			{
				_1ca49211e_range_index_iter(_self_, _26634_it);
			}
		}
		else if ((_1c977725c_arr(_26634_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cd8d9d9e:;
			{
				_1ca49211e_range_index_iter(_self_, _26634_it);
			}
		}
		else if ((_1c9777e72_map(_26634_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cd8d9e15:;
			{
				_1ca492394_range_hashmap_iter(_self_, _26634_it);
			}
		}
		else {
			_case_begin_1cd8d9d38:;
			{
				_1ca49211e_range_index_iter(_self_, _26634_it);
			}
		}
		_match_end_1cd8d9c6c:;
	};
}



inline void _1ca493384_cont(jule::Ptr<_1ca49177d_ScopeCoder> _self_, jule::Ptr<_1e4688373_ContSt> _27924_c) {
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1ca4e23b1_write(_self_.get()._field_oc, static__1ca4adbda_iter_next(_27924_c.get()._field_it));
}



inline void _1ca493609_label(jule::Ptr<_1ca49177d_ScopeCoder> _self_, jule::Ptr<_1e4688a16_Label> _28425_l) {
	_1ca4e23b1_write(_self_.get()._field_oc, static__1ca4ade82_label(_28425_l.get()._field_ident));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(":", 1));
}



inline void _1ca49387e_goto_st(jule::Ptr<_1ca49177d_ScopeCoder> _self_, jule::Ptr<_1e4688d02_GotoSt> _28927_gt) {
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1ca4e23b1_write(_self_.get()._field_oc, static__1ca4ade82_label(_28927_gt.get()._field_ident));
}



inline void _1ca493b04_postfix(jule::Ptr<_1ca49177d_ScopeCoder> _self_, jule::Ptr<_1e46891a9_Postfix> _29431_p) {
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1ca4a4d79_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_29431_p.get()._field_expr));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")", 1));
	_1ca4e23b1_write(_self_.get()._field_oc, _29431_p.get()._field_op);
}



inline void _1ca493d79_assign(jule::Ptr<_1ca49177d_ScopeCoder> _self_, jule::Ptr<_1e468962c_Assign> _30130_a) {
	_1ca4a4d79_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_30130_a.get()._field_l.get()._field_model));
	_1ca4e23b1_write(_self_.get()._field_oc, _30130_a.get()._field_op.get()._field_kind);
	_1ca4a4d79_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_30130_a.get()._field_r.get()._field_model));
}



inline void _1ca4940ee_multi_assign(jule::Ptr<_1ca49177d_ScopeCoder> _self_, jule::Ptr<_1e46899d4_MultiAssign> _30736_a) {
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("std::tie(", 9));
	{
		auto &expr = _30736_a.get()._field_l;
		auto it = expr.begin();
		_iter_begin_1cd8e7d02:;
		if (it != expr.end()) {
			jule::I64 _30914_i = it - expr.begin();
			jule::Any _30921_l = *it;
			{
				if ((_30921_l == nullptr)) {
					_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("std::ignore", 11));
				} else {
					_1ca4a4d79_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_30921_l));
				};
				if (((_30736_a.get()._field_l.len() - _30914_i) > 1LL)) {
					_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1cd8e7d02:;
			++it;
			_30914_i++;
			goto _iter_begin_1cd8e7d02;
		}
		_iter_end_1cd8e7d02:;
	};
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(") = ", 4));
	_1ca4a4d79_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_30736_a.get()._field_r));
}



inline jule::Fn<void(void)> _1ca49440c_match_expr(jule::Ptr<_1ca49177d_ScopeCoder> _self_, jule::Ptr<_1e468a023_Match> _32334_m) {
	if ((!(_1c974b583_is_const(_32334_m.get()._field_expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
		});
	};
	if (((!(_1c9690780_is_bool(_32334_m.get()._field_expr.get()._field_constant.ptr()))) || (!(_1c968d3d7_read_bool(_32334_m.get()._field_expr.get()._field_constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1ca4a4b04_model(_self_.get()._field_oc.get()._field_ec, jule::Any(_32334_m.get()._field_expr.get()._field_model));
		});
	};
	return nullptr;
}



inline void _1ca49472b_case(jule::Ptr<_1ca49177d_ScopeCoder> _self_, jule::Ptr<_1e468a023_Match> _33328_m, jule::Ptr<_1e468a9d5_Case> _33343_c) {
	if (((_33343_c.get()._field_exprs.len() != 0LL) && (!(_1e468a496_is_generic_type_match(_33328_m.ptr()))))) {
		if (((_33328_m.get()._field_cases.len() > 0LL) && (_33328_m.get()._field_cases[0LL] == _33343_c))) {
			_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("if (", 4));
		} else {
			_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("else if (", 9));
		};
		{
			auto &expr = _33343_c.get()._field_exprs;
			auto it = expr.begin();
			_iter_begin_1cd901c1d:;
			if (it != expr.end()) {
				jule::I64 _34018_i = it - expr.begin();
				jule::Ptr<_1c974abc0_Data> _34025_expr = *it;
				{
					{
						
						if ((!(_33328_m.get()._field_type_match))) {
							_case_begin_1cd903181:;
							{
								jule::Fn<void(void)> _34325_case_expr = _1ca49440c_match_expr(_self_, _33328_m);;
								if (_1c974b891_good_operand(_33328_m.get()._field_expr.ptr(), _34025_expr)) {
									if ((_34325_case_expr != nullptr)) {
										_34325_case_expr();
										_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(" == ", 4));
									};
									_1ca4a4d79_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_34025_expr.get()._field_model));
								} else {
									_1ca4a4d79_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_34025_expr.get()._field_model));
									if ((_34325_case_expr != nullptr)) {
										_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(" == ", 4));
										_34325_case_expr();
									};
								};
							}
						}
						else {
							_case_begin_1cd902d0c:;
							{
								_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
								_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(".type_is<", 9));
								_1ca4a4d79_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_34025_expr.get()._field_model));
								_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(">()", 3));
							}
						}
						_match_end_1cd902c41:;
					};
					if (((_33343_c.get()._field_exprs.len() - _34018_i) > 1LL)) {
						_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_1cd901c1d:;
				++it;
				_34018_i++;
				goto _iter_begin_1cd901c1d;
			}
			_iter_end_1cd901c1d:;
		};
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(") ", 2));
	} else if (((_33328_m.get()._field_default == _33343_c) && (_33328_m.get()._field_cases.len() != 0LL))) {
		_1ca4e39cd_indent(_self_.get()._field_oc);
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("else ", 5));
	};
	_1ca4e2a98_add_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, static__1ca4ae4c1_case_begin(static_cast<jule::U64>(static_cast<jule::U64>(_33343_c))));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	if ((_33343_c.get()._field_scope.get()._field_stmts.len() > 0LL)) {
		_1ca4e39cd_indent(_self_.get()._field_oc);
		_1ca49670b_scope(_self_, _33343_c.get()._field_scope);
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("\n", 1));
	};
	_1ca4e32b3_done_indent(_self_.get()._field_oc);
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1ca4949a1_match_st(jule::Ptr<_1ca49177d_ScopeCoder> _self_, jule::Ptr<_1e468a023_Match> _39232_m) {
	if (((_39232_m.get()._field_cases.len() == 0LL) && (_39232_m.get()._field_default == nullptr))) {
		return;;
	};
	jule::Bool _39713_generic_type_match = _1e468a496_is_generic_type_match(_39232_m.ptr());;
	if ((_39713_generic_type_match && ((_39232_m.get()._field_default == nullptr) || (_39232_m.get()._field_default.get()._field_scope.get()._field_stmts.len() == 0LL)))) {
		return;;
	};
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1ca4e2a98_add_indent(_self_.get()._field_oc);
	_1ca4e39cd_indent(_self_.get()._field_oc);
	if (((!(_39713_generic_type_match)) && (!(_1c974b583_is_const(_39232_m.get()._field_expr.ptr()))))) {
		if ((_20c8e7e49_COPY && _1ca496cd3_is_copy_optimizable(_39232_m.get()._field_expr))) {
			_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_1ca4a4d79_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_39232_m.get()._field_expr.get()._field_model));
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(" };\n", 4));
		_1ca4e39cd_indent(_self_.get()._field_oc);
	};
	if ((_39232_m.get()._field_cases.len() > 0LL)) {
		{
			auto &expr = _39232_m.get()._field_cases;
			auto it = expr.begin();
			_iter_begin_1cd915a78:;
			if (it != expr.end()) {
				jule::Ptr<_1e468a9d5_Case> _42125_c = *it;
				{
					if ((_42125_c == nullptr)) {
						goto _iter_next_1cd915a78;
					};
					_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1ca4e39cd_indent(_self_.get()._field_oc);
					_1ca49472b_case(_self_, _39232_m,_42125_c);
				}
				_iter_next_1cd915a78:;
				++it;
				goto _iter_begin_1cd915a78;
			}
			_iter_end_1cd915a78:;
		};
	};
	if ((_39232_m.get()._field_default != nullptr)) {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1ca49472b_case(_self_, _39232_m,_39232_m.get()._field_default);
	};
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, static__1ca4ae229_match_end(static_cast<jule::U64>(static_cast<jule::U64>(_39232_m))));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(":;", 2));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1ca4e32b3_done_indent(_self_.get()._field_oc);
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1ca494c26_fall_st(jule::Ptr<_1ca49177d_ScopeCoder> _self_, jule::Ptr<_1e468b167_FallSt> _44827_f) {
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1ca4e23b1_write(_self_.get()._field_oc, static__1ca4ae4c1_case_begin(_44827_f.get()._field_dest_case));
}



inline void _1ca494e9b_break_st(jule::Ptr<_1ca49177d_ScopeCoder> _self_, jule::Ptr<_1e468872a_BreakSt> _45328_b) {
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	if ((_45328_b.get()._field_it != 0LLU)) {
		_1ca4e23b1_write(_self_.get()._field_oc, static__1ca4ad943_iter_end(_45328_b.get()._field_it));
	} else {
		_1ca4e23b1_write(_self_.get()._field_oc, static__1ca4ae229_match_end(_45328_b.get()._field_mtch));
	};
}



inline void _1ca495221_ret_with_vars(jule::Ptr<_1ca49177d_ScopeCoder> _self_, jule::Ptr<_1e468b5da_RetSt> _46237_r) {
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_46237_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1ca4e23b1_write(_self_.get()._field_oc, static__1ca52b131_kind(_46237_r.get()._field_func.get()._field_result));
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), ", 15));
	};
	if ((_46237_r.get()._field_vars.len() > 1LL)) {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	};
	{
		auto &expr = _46237_r.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1cd9239ba:;
		if (it != expr.end()) {
			jule::I64 _47214_i = it - expr.begin();
			jule::Ptr<_1e46c6eb6_Var> _47221_v = *it;
			{
				if (_20cda1e4c_is_ignore_ident(_47221_v.get()._field_ident)) {
					_1ca4a5374_init_expr(_self_.get()._field_oc.get()._field_ec, _47221_v.get()._field_kind.get()._field_kind);
				} else {
					_1ca4e23b1_write(_self_.get()._field_oc, static__1ca4ad404_var(_47221_v));
				};
				if (((_46237_r.get()._field_vars.len() - _47214_i) > 1LL)) {
					_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1cd9239ba:;
			++it;
			_47214_i++;
			goto _iter_begin_1cd9239ba;
		}
		_iter_end_1cd9239ba:;
	};
	if ((_46237_r.get()._field_vars.len() > 1LL)) {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	if (_46237_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1ca495496_ret_tuple(jule::Ptr<_1ca49177d_ScopeCoder> _self_, jule::Ptr<_1e468b5da_RetSt> _49233_r) {
	jule::Slice<jule::Ptr<_1c974abc0_Data>> _49317_datas = _49233_r.get()._field_expr.operator jule::Ptr<_1e437cb6c_TupleExprModel>().get()._field_datas;;
	{
		auto &expr = _49233_r.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1cd928d66:;
		if (it != expr.end()) {
			jule::I64 _49414_i = it - expr.begin();
			jule::Ptr<_1e46c6eb6_Var> _49421_v = *it;
			{
				if (_20cda1e4c_is_ignore_ident(_49421_v.get()._field_ident)) {
					goto _iter_next_1cd928d66;
				};
				jule::Any _49821_model = _49317_datas[_49414_i].get()._field_model;;
				if ((_49821_model == _49421_v)) {
					goto _iter_next_1cd928d66;
				};
				_1ca4e23b1_write(_self_.get()._field_oc, static__1ca4ad404_var(_49421_v));
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1ca4a4d79_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_49821_model));
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				_1ca4e39cd_indent(_self_.get()._field_oc);
			}
			_iter_next_1cd928d66:;
			++it;
			_49414_i++;
			goto _iter_begin_1cd928d66;
		}
		_iter_end_1cd928d66:;
	};
	if (_49233_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1ca4e23b1_write(_self_.get()._field_oc, static__1ca52b131_kind(_49233_r.get()._field_func.get()._field_result));
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
	} else {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("return ", 7));
	};
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	{
		auto &expr = _49317_datas;
		auto it = expr.begin();
		_iter_begin_1cd92e2bc:;
		if (it != expr.end()) {
			jule::I64 _51914_i = it - expr.begin();
			jule::Ptr<_1c974abc0_Data> _51921_d = *it;
			{
				jule::Ptr<_1e46c6eb6_Var> _52021_v = _49233_r.get()._field_vars[_51914_i];;
				if (_20cda1e4c_is_ignore_ident(_52021_v.get()._field_ident)) {
					_1ca4a4d79_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_51921_d.get()._field_model));
				} else {
					_1ca4e23b1_write(_self_.get()._field_oc, static__1ca4ad404_var(_52021_v));
				};
				if (((_49317_datas.len() - _51914_i) > 1LL)) {
					_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1cd92e2bc:;
			++it;
			_51914_i++;
			goto _iter_begin_1cd92e2bc;
		}
		_iter_end_1cd92e2bc:;
	};
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_49233_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1ca49571b_ret_with_exprs(jule::Ptr<_1ca49177d_ScopeCoder> _self_, jule::Ptr<_1e468b5da_RetSt> _53738_r) {
	if ((_53738_r.get()._field_vars.len() > 1LL)) {
		_1ca495496_ret_tuple(_self_, _53738_r);
		return;;
	};
	if ((_53738_r.get()._field_vars.len() > 0LL)) {
		jule::Ptr<_1e46c6eb6_Var> _54521_v = _53738_r.get()._field_vars[0LL];;
		if (((!(_20cda1e4c_is_ignore_ident(_54521_v.get()._field_ident))) && (_53738_r.get()._field_expr != _54521_v))) {
			jule::Str _54721_ident = static__1ca4ad404_var(_54521_v);;
			_1ca4e23b1_write(_self_.get()._field_oc, _54721_ident);
			_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(" = ", 3));
			_1ca4a4d79_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_53738_r.get()._field_expr));
			_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			_1ca4e39cd_indent(_self_.get()._field_oc);
			if (_53738_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
				_1ca4e23b1_write(_self_.get()._field_oc, static__1ca52b131_kind(_53738_r.get()._field_func.get()._field_result));
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
				_1ca4e23b1_write(_self_.get()._field_oc, _54721_ident);
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")", 1));
			} else {
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("return ", 7));
				_1ca4e23b1_write(_self_.get()._field_oc, _54721_ident);
			};
			return;;
		};
	};
	if (_53738_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1ca4e23b1_write(_self_.get()._field_oc, static__1ca52b131_kind(_53738_r.get()._field_func.get()._field_result));
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
		_1ca4a4d79_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_53738_r.get()._field_expr));
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("return ", 7));
	_1ca4a4d79_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_53738_r.get()._field_expr));
	return;;
}



inline void _1ca495991_ret_st(jule::Ptr<_1ca49177d_ScopeCoder> _self_, jule::Ptr<_1e468b5da_RetSt> _58130_r) {
	if (((_58130_r.get()._field_expr == nullptr) && (_58130_r.get()._field_vars.len() == 0LL))) {
		if (_58130_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
			_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("return;", 7));
		return;;
	};
	if ((_58130_r.get()._field_expr == nullptr)) {
		_1ca495221_ret_with_vars(_self_, _58130_r);
		return;;
	};
	_1ca49571b_ret_with_exprs(_self_, _58130_r);
}



inline void _1ca495e8b_var(jule::Ptr<_1ca49177d_ScopeCoder> _self_, jule::Ptr<_1e46c6eb6_Var> _61627_v) {
	if ((!(_61627_v.get()._field_constant))) {
		_1ca522bc7_var(_self_.get()._field_oc, _61627_v);
	};
}



inline void _1ca496211_st(jule::Ptr<_1ca49177d_ScopeCoder> _self_, jule::Any _62326_st) {
	if ((_62326_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _62326_st };
		
		if (_match_expr.type_is<jule::Ptr<_1e46862c7_Scope>>()) {
			_case_begin_1cd948627:;
			{
				_1ca49670b_scope(_self_, _62326_st.operator jule::Ptr<_1e46862c7_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e46c6eb6_Var>>()) {
			_case_begin_1cd949150:;
			{
				_1ca495e8b_var(_self_, _62326_st.operator jule::Ptr<_1e46c6eb6_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c974abc0_Data>>()) {
			_case_begin_1cd9491b6:;
			{
				_1ca4a4d79_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_62326_st.operator jule::Ptr<_1c974abc0_Data>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4686daa_Conditional>>()) {
			_case_begin_1cd94922c:;
			{
				_1ca49288e_conditional(_self_, _62326_st.operator jule::Ptr<_1e4686daa_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4687196_InfIter>>()) {
			_case_begin_1cd949293:;
			{
				_1ca492b14_inf_iter(_self_, _62326_st.operator jule::Ptr<_1e4687196_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4687619_WhileIter>>()) {
			_case_begin_1cd949309:;
			{
				_1ca492d89_while_iter(_self_, _62326_st.operator jule::Ptr<_1e4687619_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4687eee_RangeIter>>()) {
			_case_begin_1cd949370:;
			{
				_1ca49310e_range_iter(_self_, _62326_st.operator jule::Ptr<_1e4687eee_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4688373_ContSt>>()) {
			_case_begin_1cd9493d6:;
			{
				_1ca493384_cont(_self_, _62326_st.operator jule::Ptr<_1e4688373_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4688a16_Label>>()) {
			_case_begin_1cd94944c:;
			{
				_1ca493609_label(_self_, _62326_st.operator jule::Ptr<_1e4688a16_Label>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4688d02_GotoSt>>()) {
			_case_begin_1cd9494b3:;
			{
				_1ca49387e_goto_st(_self_, _62326_st.operator jule::Ptr<_1e4688d02_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e46891a9_Postfix>>()) {
			_case_begin_1cd949529:;
			{
				_1ca493b04_postfix(_self_, _62326_st.operator jule::Ptr<_1e46891a9_Postfix>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e468962c_Assign>>()) {
			_case_begin_1cd949590:;
			{
				_1ca493d79_assign(_self_, _62326_st.operator jule::Ptr<_1e468962c_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e46899d4_MultiAssign>>()) {
			_case_begin_1cd949606:;
			{
				_1ca4940ee_multi_assign(_self_, _62326_st.operator jule::Ptr<_1e46899d4_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e468a023_Match>>()) {
			_case_begin_1cd94966c:;
			{
				_1ca4949a1_match_st(_self_, _62326_st.operator jule::Ptr<_1e468a023_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e468b167_FallSt>>()) {
			_case_begin_1cd9496e4:;
			{
				_1ca494c26_fall_st(_self_, _62326_st.operator jule::Ptr<_1e468b167_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e468872a_BreakSt>>()) {
			_case_begin_1cd94976b:;
			{
				_1ca494e9b_break_st(_self_, _62326_st.operator jule::Ptr<_1e468872a_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e468b5da_RetSt>>()) {
			_case_begin_1cd9497e3:;
			{
				_1ca495991_ret_st(_self_, _62326_st.operator jule::Ptr<_1e468b5da_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3b31003_PushToSliceExprModel>>()) {
			_case_begin_1cd94986a:;
			{
				_1ca4a2a8b_push_to_slice(_self_.get()._field_oc.get()._field_ec, _62326_st.operator jule::Ptr<_1e3b31003_PushToSliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20c90c6ab_MutSlicingExprModel>>()) {
			_case_begin_1cd9498e2:;
			{
				_1ca4a4609_mut_slicing(_self_.get()._field_oc.get()._field_ec, _62326_st.operator jule::Ptr<_20c90c6ab_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2254a3c1d_StrInsertBeginExprModel>>()) {
			_case_begin_1cd949969:;
			{
				_1ca4a487e_str_insert_begin(_self_.get()._field_oc.get()._field_ec, _62326_st.operator jule::Ptr<_2254a3c1d_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1cd948407:;
			{
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1cd9483a2:;
	};
}



inline void _1ca496486_scope_stmts(jule::Ptr<_1ca49177d_ScopeCoder> _self_, jule::Ptr<_1e46862c7_Scope>& _67336_s) {
	{
		auto &expr = _67336_s.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1cd957108:;
		if (it != expr.end()) {
			jule::Any _67421_st = *it;
			{
				_1ca4e39cd_indent(_self_.get()._field_oc);
				_1ca496211_st(_self_, jule::Any(_67421_st));
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1cd957108:;
			++it;
			goto _iter_begin_1cd957108;
		}
		_iter_end_1cd957108:;
	};
}



inline void _1ca49670b_scope(jule::Ptr<_1ca49177d_ScopeCoder> _self_, jule::Ptr<_1e46862c7_Scope> _68229_s) {
	_1ca4e2a98_add_indent(_self_.get()._field_oc);
	if (_68229_s.get()._field_deferred) {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1ca496486_scope_stmts(_self_, _68229_s);
	_1ca4e32b3_done_indent(_self_.get()._field_oc);
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("}", 1));
	if (_68229_s.get()._field_deferred) {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(");", 2));
	};
}



inline void _1ca496981_func_scope(jule::Ptr<_1ca49177d_ScopeCoder> _self_, jule::Ptr<_1e4383018_FnIns> _69834_f) {
	if ((_69834_f.get()._field_scope == nullptr)) {
		return;;
	};
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1ca4e2a98_add_indent(_self_.get()._field_oc);
	if ((!(_1e43807c9_is_void(_69834_f.get()._field_decl.ptr())))) {
		jule::Slice<jule::Ptr<_1c97746ee_TypeKind>> _70521_types = _1e4383a30_types(_69834_f.ptr());;
		{
			auto &expr = _69834_f.get()._field_decl.get()._field_result.get()._field_idents;
			auto it = expr.begin();
			_iter_begin_1cd95db04:;
			if (it != expr.end()) {
				jule::I64 _70617_i = it - expr.begin();
				jule::Ptr<_20cd9e6ec_Token> _70620_ident = *it;
				{
					if ((_20cda1e4c_is_ignore_ident(_70620_ident.get()._field_kind) || _20cda21e4_is_anon_ident(_70620_ident.get()._field_kind))) {
						goto _iter_next_1cd95db04;
					};
					_1ca4e39cd_indent(_self_.get()._field_oc);
					_1ca4e23b1_write(_self_.get()._field_oc, static__1ca52b131_kind(_70521_types[_70617_i]));
					_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(" ", 1));
					_1ca4e23b1_write(_self_.get()._field_oc, static__1ca4abce8_to_local(_70620_ident.get()._field_row,_70620_ident.get()._field_column,_70620_ident.get()._field_kind));
					_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(" = ", 3));
					_1ca4a5374_init_expr(_self_.get()._field_oc.get()._field_ec, _70521_types[_70617_i]);
					_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				}
				_iter_next_1cd95db04:;
				++it;
				_70617_i++;
				goto _iter_begin_1cd95db04;
			}
			_iter_end_1cd95db04:;
		};
	};
	_1ca496486_scope_stmts(_self_, _69834_f.get()._field_scope);
	if ((_69834_f.get()._field_decl.get()._field_exceptional && _1e43807c9_is_void(_69834_f.get()._field_decl.ptr()))) {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(" return jule::VoidExceptional();\n", 33));
	};
	_1ca4e32b3_done_indent(_self_.get()._field_oc);
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _1ca49177d_ScopeCoder _Src) {
	_Stream << "ScopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ca4994ab_ExprCoder> static__1ca4998a7_new(jule::Ptr<_1ca4d7c36_ObjectCoder>& _9024_oc) {
	return jule::new_ptr<_1ca4994ab_ExprCoder>(_1ca4994ab_ExprCoder{._field_oc=_9024_oc});
}



inline void _1ca499b2c_string(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1c968bb88_Const>& _9627_c) {
	jule::Str _9713_content = _1c968d64b_read_str(_9627_c.ptr());;
	if ((_9713_content.len() == 0LL)) {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Slice<jule::U8> _10213_bytes = static_cast<jule::Slice<jule::U8>>(_9713_content);;
	jule::Str _10313_len = _1e5c30a3a_fmt_int(static_cast<jule::I64>(static_cast<jule::I64>(_10213_bytes.len())),10LL);;
	jule::Str _10413_lit = _1ca4a6045_cstr_lit(_10213_bytes);;
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1ca4e23b1_write(_self_.get()._field_oc, _10413_lit);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1ca4e23b1_write(_self_.get()._field_oc, _10313_len);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ca499da2_boolean(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1c968bb88_Const>& _11328_c) {
	if (_1c968d3d7_read_bool(_11328_c.ptr())) {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("true", 4));
		return;;
	};
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("false", 5));
}



inline void _1ca49a07d_nil_lit(jule::Ptr<_1ca4994ab_ExprCoder> _self_) {
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _1ca49a38b_ftoa_special_cases(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::F64& _12539_x) {
	{
		
		if (_1e5bedc4a_is_nan(_12539_x)) {
			_case_begin_1cd96e4a5:;
			{
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_1e5bee377_is_inf(_12539_x,1LL)) {
			_case_begin_1cd96e582:;
			{
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_1e5bee377_is_inf(_12539_x,-1LL)) {
			_case_begin_1cd96e5e8:;
			{
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1cd96dd89:;
			{
				return false;
			}
		}
		_match_end_1cd96dcbd:;
	};
	return true;
}



inline void _1ca49a611_float32(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1c968bb88_Const>& _13928_c) {
	jule::F64 _14013_x = _1c968e0ec_as_f64(_13928_c.ptr());;
	if (_1ca49a38b_ftoa_special_cases(_self_, _14013_x)) {
		return;;
	};
	{
		
		if ((_14013_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1cd972ad5:;
			{
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_14013_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1cd97280a:;
			{
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1cd972794:;
			{
				_1ca4e23b1_write(_self_.get()._field_oc, _1ca4a6386_ftoa(_14013_x,32LL));
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_1cd972662:;
	};
}



inline void _1ca49a886_float64(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1c968bb88_Const>& _15828_c) {
	jule::F64 _15913_x = _1c968e0ec_as_f64(_15828_c.ptr());;
	if (_1ca49a38b_ftoa_special_cases(_self_, _15913_x)) {
		return;;
	};
	{
		
		if ((_15913_x == jule::MAX_F64)) {
			_case_begin_1cd976534:;
			{
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_15913_x == jule::MIN_F64)) {
			_case_begin_1cd976259:;
			{
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1cd9761e3:;
			{
				_1ca4e23b1_write(_self_.get()._field_oc, _1ca4a6386_ftoa(_15913_x,64LL));
			}
		}
		_match_end_1cd9760d3:;
	};
}



inline void _1ca49aba5_constant(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1c968bb88_Const> _17732_c, jule::Bool _17743_fx32) {
	{
		
		if (_1c96909e4_is_str(_17732_c.ptr())) {
			_case_begin_1cd978e0a:;
			{
				_1ca499b2c_string(_self_, _17732_c);
			}
		}
		else if (_1c9690780_is_bool(_17732_c.ptr())) {
			_case_begin_1cd978e71:;
			{
				_1ca499da2_boolean(_self_, _17732_c);
			}
		}
		else if (_1c9690c58_is_f64(_17732_c.ptr())) {
			_case_begin_1cd978ed7:;
			{
				{
					
					if (_17743_fx32) {
						_case_begin_1cd97b3c4:;
						{
							_1ca49a611_float32(_self_, _17732_c);
						}
					}
					else {
						_case_begin_1cd97b050:;
						{
							_1ca49a886_float64(_self_, _17732_c);
						}
					}
					_match_end_1cd97ae84:;
				};
			}
		}
		else if (_1c96902a7_is_i64(_17732_c.ptr())) {
			_case_begin_1cd97904d:;
			{
				_1ca4e23b1_write(_self_.get()._field_oc, _1ca4a662d_itoa(static_cast<jule::I64>(_1c968ce0e_read_i64(_17732_c.ptr()))));
			}
		}
		else if (_1c969051b_is_u64(_17732_c.ptr())) {
			_case_begin_1cd979922:;
			{
				_1ca4e23b1_write(_self_.get()._field_oc, _1ca4a68c5_utoa(static_cast<jule::U64>(_1c968d173_read_u64(_17732_c.ptr()))));
			}
		}
		else if (_1c9690ebc_is_nil(_17732_c.ptr())) {
			_case_begin_1cd979988:;
			{
				_1ca49a07d_nil_lit(_self_);
			}
		}
		else {
			_case_begin_1cd978d94:;
			{
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1cd978cd9:;
	};
}



inline void _1ca49b06d_div_by_zero_binary(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_20cd9e6ec_Token>& _20139_op, jule::Ptr<_1e4347a8d_OperandExprModel>& _20156_l, jule::Ptr<_1e4347a8d_OperandExprModel>& _20183_r) {
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ _20139_op.get()._field_kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_1cd9800ed:;
			{
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1cd980164:;
			{
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_1cd980087:;
	};
	if ((!(_23db44461_PRODUCTION))) {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1ca4e4d53_loc_info(_self_.get()._field_oc, _20139_op);
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1ca4a4d79_expr(_self_, jule::Any(_20156_l.get()._field_model));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1ca4a4d79_expr(_self_, jule::Any(_20183_r.get()._field_model));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ca49b2e3_unsafe_binary(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e435a8e7_BinopExprModel> _22337_m) {
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1ca4a4b04_model(_self_, jule::Any(_22337_m.get()._field_left.get()._field_model));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1ca4e23b1_write(_self_.get()._field_oc, _22337_m.get()._field_op.get()._field_kind);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1ca4a4b04_model(_self_, jule::Any(_22337_m.get()._field_right.get()._field_model));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ca49b568_binary(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e435a8e7_BinopExprModel> _23330_m) {
	{
		auto &_match_expr{ _23330_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_1cd988678:;
			{
				if ((_1c9777999_strct(_23330_m.get()._field_left.get()._field_kind.ptr()) == nullptr)) {
					_1ca49b06d_div_by_zero_binary(_self_, _23330_m.get()._field_op,_23330_m.get()._field_left,_23330_m.get()._field_right);
					return;;
				};
			}
		}
		_match_end_1cd9885bd:;
	};
	_1ca49b2e3_unsafe_binary(_self_, _23330_m);
}



inline void _1ca49b7dd_var(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e46c6eb6_Var> _24527_m) {
	if (_24527_m.get()._field_cpp_linked) {
		jule::Ptr<_1e43620c4_Directive> _24717_d = _1ca52ce57_find_directive(_24527_m.get()._field_directives,jule::Str("namespace", 9));;
		if ((_24717_d != nullptr)) {
			_1ca4e23b1_write(_self_.get()._field_oc, _1ca5255ae_concat_all_parts(_24717_d.get()._field_args));
			_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1ca4e23b1_write(_self_.get()._field_oc, static__1ca4ad404_var(_24527_m));
}



inline void _1ca49ba63_structure(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e43360cb_Struct> _25629_m) {
	_1ca4e23b1_write(_self_.get()._field_oc, static__1ca52977d_structure(_25629_m));
}



inline void _1ca49bcd8_structure_ins(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e43462ea_StructIns> _26037_m) {
	_1ca4e23b1_write(_self_.get()._field_oc, static__1ca529a25_structure_ins(_26037_m));
}



inline void _1ca49c05d_unary(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e435972b_UnaryExprModel> _26429_m) {
	{
		auto &_match_expr{ _26429_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1cd9917a2:;
			{
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("(~(", 3));
				_1ca4a4d79_expr(_self_, jule::Any(_26429_m.get()._field_expr.get()._field_model));
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1cd991818:;
			{
				if ((_23db44461_PRODUCTION || (_1c9776a20_sptr(_26429_m.get()._field_expr.get()._field_kind.ptr()) == nullptr))) {
					goto _match_end_1cd9916e7;
				};
				_1ca4a4d79_expr(_self_, jule::Any(_26429_m.get()._field_expr.get()._field_model));
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(".get(\"", 6));
				_1ca4e4d53_loc_info(_self_.get()._field_oc, _26429_m.get()._field_op);
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_1cd9916e7:;
	};
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1ca4e23b1_write(_self_.get()._field_oc, _26429_m.get()._field_op.get()._field_kind);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1ca4a4d79_expr(_self_, jule::Any(_26429_m.get()._field_expr.get()._field_model));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1ca49c2d3_structure_lit(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e433b004_StructLitExprModel> _28837_m) {
	if (_28837_m.get()._field_strct.get()._field_decl.get()._field_cpp_linked) {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("(", 1));
	};
	_1ca4e23b1_write(_self_.get()._field_oc, static__1ca4acdb5_structure_ins(_28837_m.get()._field_strct));
	if (_28837_m.get()._field_strct.get()._field_decl.get()._field_cpp_linked) {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("{", 1));
	if ((_28837_m.get()._field_args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto &expr = _28837_m.get()._field_strct.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1cd99a789:;
			if (it != expr.end()) {
				jule::I64 _30117_i = it - expr.begin();
				jule::Ptr<_1e434014b_FieldIns> _30120_f = *it;
				{
					{
						auto &expr = _28837_m.get()._field_args;
						auto it = expr.begin();
						_iter_begin_1cd99b306:;
						if (it != expr.end()) {
							jule::Ptr<_1e433773c_StructArgExprModel> _30229_arg = *it;
							{
								if ((_30229_arg.get()._field_field == _30120_f)) {
									_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(".", 1));
									_1ca4e23b1_write(_self_.get()._field_oc, static__1ca4ad15c_field(_30229_arg.get()._field_field.get()._field_decl));
									_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("=", 1));
									_1ca4a4d79_expr(_self_, jule::Any(_30229_arg.get()._field_expr));
									if (((_28837_m.get()._field_strct.get()._field_fields.len() - _30117_i) > 1LL)) {
										_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(", ", 2));
									};
									goto _iter_next_1cd99a789;
								};
							}
							_iter_next_1cd99b306:;
							++it;
							goto _iter_begin_1cd99b306;
						}
						_iter_end_1cd99b306:;
					};
				}
				_iter_next_1cd99a789:;
				++it;
				_30117_i++;
				goto _iter_begin_1cd99a789;
			}
			_iter_end_1cd99a789:;
		};
	};
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1ca49c558_alloc_structure(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e4331d63_AllocStructLitExprModel> _31939_m) {
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1ca4e23b1_write(_self_.get()._field_oc, static__1ca4acdb5_structure_ins(_31939_m.get()._field_lit.get()._field_strct));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1ca49c2d3_structure_lit(_self_, _31939_m.get()._field_lit);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ca49c7cd_casting(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e434e7dc_CastingExprModel> _32731_m) {
	{
		
		if (((_1c97767ab_prim(_32731_m.get()._field_kind.ptr()) != nullptr) && _1c977c174_is_any(_1c97767ab_prim(_32731_m.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1cd9a3990:;
			{
				_1ca4e23b1_write(_self_.get()._field_oc, static__1ca52b131_kind(_32731_m.get()._field_kind));
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1ca4a4b04_model(_self_, jule::Any(_32731_m.get()._field_expr));
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_1c9776c84_ptr(_32731_m.get()._field_expr_kind.ptr()) != nullptr) || (_1c9776c84_ptr(_32731_m.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cd9a3682:;
			{
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("((", 2));
				_1ca4e23b1_write(_self_.get()._field_oc, static__1ca52b131_kind(_32731_m.get()._field_kind));
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")(", 2));
				_1ca4a4d79_expr(_self_, jule::Any(_32731_m.get()._field_expr));
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("))", 2));
			}
		}
		else if ((_1c9777c0d_trt(_32731_m.get()._field_expr_kind.ptr()) != nullptr) || ((_1c97767ab_prim(_32731_m.get()._field_expr_kind.ptr()) != nullptr) && _1c977c174_is_any(_1c97767ab_prim(_32731_m.get()._field_expr_kind.ptr()).ptr()))) {
			_case_begin_1cd9a36e8:;
			{
				_1ca4a4b04_model(_self_, jule::Any(_32731_m.get()._field_expr));
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(".", 1));
				if (_23db44461_PRODUCTION) {
					_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("operator ", 9));
					_1ca4e23b1_write(_self_.get()._field_oc, static__1ca52b131_kind(_32731_m.get()._field_kind));
					_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("()", 2));
				} else {
					if (((_1c9777c0d_trt(_32731_m.get()._field_expr_kind.ptr()) != nullptr) && (_1c9776a20_sptr(_32731_m.get()._field_kind.ptr()) != nullptr))) {
						_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
						_1ca4e23b1_write(_self_.get()._field_oc, static__1ca52b131_kind(_1c9776a20_sptr(_32731_m.get()._field_kind.ptr()).get()._field_elem));
					} else {
						_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("cast<", 5));
						_1ca4e23b1_write(_self_.get()._field_oc, static__1ca52b131_kind(_32731_m.get()._field_kind));
					};
					_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(">(\"", 3));
					_1ca4e4d53_loc_info(_self_.get()._field_oc, _32731_m.get()._field_token);
					_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("\")", 2));
				};
			}
		}
		else if ((_1c9777c0d_trt(_32731_m.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cd9a375e:;
			{
				_1ca4e23b1_write(_self_.get()._field_oc, static__1ca52b131_kind(_32731_m.get()._field_kind));
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1ca4a4d79_expr(_self_, jule::Any(_32731_m.get()._field_expr));
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1ca4e23b1_write(_self_.get()._field_oc, _1e5c30b6c_itoa(static_cast<jule::I64>(_1ca503ec7_find_type_offset(_self_.get()._field_oc.ptr(), _1c9777c0d_trt(_32731_m.get()._field_kind.ptr()),_32731_m.get()._field_expr_kind))));
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else {
			_case_begin_1cd9a361b:;
			{
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
				_1ca4e23b1_write(_self_.get()._field_oc, static__1ca52b131_kind(_32731_m.get()._field_kind));
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(">(", 2));
				_1ca4a4d79_expr(_self_, jule::Any(_32731_m.get()._field_expr));
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1cd9a3550:;
	};
}



inline void _1ca49ca53_args(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Slice<jule::Any> _37728_args) {
	if ((_37728_args.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _37728_args;
		auto it = expr.begin();
		_iter_begin_1cd9b6ca0:;
		if (it != expr.end()) {
			jule::I64 _38114_i = it - expr.begin();
			jule::Any _38121_a = *it;
			{
				_1ca4a4d79_expr(_self_, jule::Any(_38121_a));
				if (((_37728_args.len() - _38114_i) > 1LL)) {
					_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1cd9b6ca0:;
			++it;
			_38114_i++;
			goto _iter_begin_1cd9b6ca0;
		}
		_iter_end_1cd9b6ca0:;
	};
}



inline void _1ca49ccc8_model_for_call(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Any _38938_expr) {
	{
		auto &_match_expr{ _38938_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1e4383018_FnIns>>()) {
			_case_begin_1cd9b8db2:;
			{
				_1ca4a0aab_func_ins(_self_, _38938_expr.operator jule::Ptr<_1e4383018_FnIns>());
				return;;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437c1cc_StructSubIdentExprModel>>()) {
			_case_begin_1cd9b8e39:;
			{
				jule::Ptr<_1e437c1cc_StructSubIdentExprModel> _39521_ssie = _38938_expr.operator jule::Ptr<_1e437c1cc_StructSubIdentExprModel>();;
				if ((_39521_ssie.get()._field_method != nullptr)) {
					_1ca4a0aab_func_ins(_self_, _39521_ssie.get()._field_method);
					return;;
				};
			}
		}
		_match_end_1cd9b8d4b:;
	};
	_1ca4a4b04_model(_self_, jule::Any(_38938_expr));
}



inline void _1ca49d04d_push_call_inf(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e4354902_FnCallExprModel>& _40434_m) {
	if ((_23db44461_PRODUCTION || ((!(_40434_m.get()._field_func.get()._field_anon)) && (!(_1ca4a6ebe_is_builtin_call_has_debuginf(_40434_m)))))) {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("(", 1));
		return;;
	};
	if (_40434_m.get()._field_func.get()._field_anon) {
		{
			auto &_match_expr{ _40434_m.get()._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_1e437c1cc_StructSubIdentExprModel>>()) {
				_case_begin_1cd9bd13b:;
				{
					if (_40434_m.get()._field_expr.operator jule::Ptr<_1e437c1cc_StructSubIdentExprModel>().get()._field_field.get()._field_decl.get()._field_owner.get()._field_cpp_linked) {
						_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("(", 1));
						return;;
					};
					goto _case_begin_1cd9bd36c;
				}
			}
			else {
				_case_begin_1cd9bd36c:;
				{
					_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(".call", 5));
				}
			}
			_match_end_1cd9bd317:;
		};
	};
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("(\"", 2));
	_1ca4e4d53_loc_info(_self_.get()._field_oc, _40434_m.get()._field_token);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("\"", 1));
	if ((_40434_m.get()._field_args.len() != 0LL)) {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(",", 1));
	};
}



inline jule::Bool _1ca49d35b_is_wrapped(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e4354902_FnCallExprModel>& _42935_m) {
	if ((((!(_1e4383c94_is_builtin(_42935_m.get()._field_func.ptr()))) && (_42935_m.get()._field_func.get()._field_decl.get()._field_params.len() > 0LL)) && _1e435279b_is_self(_42935_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr()))) {
		{
			auto &_match_expr{ _42935_m.get()._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_1e437c1cc_StructSubIdentExprModel>>()) {
				_case_begin_1cd9c289e:;
				{
					jule::Ptr<_1e437c1cc_StructSubIdentExprModel> _43325_ssie = _42935_m.get()._field_expr.operator jule::Ptr<_1e437c1cc_StructSubIdentExprModel>();;
					{
						
						if (_1e4355edb_is_ref(_42935_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr()) || (_1c9776a20_sptr(_43325_ssie.get()._field_expr_kind.ptr()) != nullptr)) {
							_case_begin_1cd9c5792:;
							{
								goto _match_end_1cd9c363b;
							}
						}
						else {
							_case_begin_1cd9c36a2:;
							{
								if ((_1c9777999_strct(_43325_ssie.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
									if ((!(_43325_ssie.get()._field_expr.get()._field_lvalue))) {
										_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_1ca4a4b04_model(_self_, jule::Any(_43325_ssie.get()._field_expr));
										_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("; ", 2));
										return true;
									};
								};
							}
						}
						_match_end_1cd9c363b:;
					};
				}
			}
			_match_end_1cd9c2816:;
		};
	};
	return false;
}



inline void _1ca49d5d1_pure_func_call(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e4354902_FnCallExprModel>& _45339_m) {
	jule::Bool _45413_wrapped = _1ca49d35b_is_wrapped(_self_, _45339_m);;
	if (_45339_m.get()._field_is_co) {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("__JULE_CO(", 10));
	};
	_1ca49ccc8_model_for_call(_self_, jule::Any(_45339_m.get()._field_expr));
	if ((!(_1e4383c94_is_builtin(_45339_m.get()._field_func.ptr())))) {
		if ((_45339_m.get()._field_func.get()._field_decl.get()._field_cpp_linked && (_45339_m.get()._field_func.get()._field_generics.len() > 0LL))) {
			if ((!(_1ca52d2dc_has_directive(_45339_m.get()._field_func.get()._field_decl.get()._field_directives,jule::Str("cdef", 4))))) {
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("<", 1));
				{
					auto &expr = _45339_m.get()._field_func.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1cd9ca5bb:;
					if (it != expr.end()) {
						jule::I64 _46326_i = it - expr.begin();
						jule::Ptr<_1c97746ee_TypeKind> _46333_g = *it;
						{
							_1ca4e23b1_write(_self_.get()._field_oc, static__1ca52b131_kind(_46333_g));
							if (((_45339_m.get()._field_func.get()._field_generics.len() - _46326_i) > 1LL)) {
								_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(",", 1));
							};
						}
						_iter_next_1cd9ca5bb:;
						++it;
						_46326_i++;
						goto _iter_begin_1cd9ca5bb;
					}
					_iter_end_1cd9ca5bb:;
				};
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(">", 1));
			};
		};
	};
	_1ca49d04d_push_call_inf(_self_, _45339_m);
	jule::Bool _47417_locinfo = false;;
	if ((((!(_1e4383c94_is_builtin(_45339_m.get()._field_func.ptr()))) && (_45339_m.get()._field_func.get()._field_decl.get()._field_params.len() > 0LL)) && _1e435279b_is_self(_45339_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr()))) {
		{
			auto &_match_expr{ _45339_m.get()._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_1e437c1cc_StructSubIdentExprModel>>()) {
				_case_begin_1cd9ce02b:;
				{
					jule::Ptr<_1e437c1cc_StructSubIdentExprModel> _47825_ssie = _45339_m.get()._field_expr.operator jule::Ptr<_1e437c1cc_StructSubIdentExprModel>();;
					{
						
						if (_1e4355edb_is_ref(_45339_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr())) {
							_case_begin_1cd9d0ed9:;
							{
								_1ca4a4b04_model(_self_, jule::Any(_47825_ssie.get()._field_expr));
							}
						}
						else if ((_1c9776a20_sptr(_47825_ssie.get()._field_expr_kind.ptr()) != nullptr)) {
							_case_begin_1cd9d198a:;
							{
								_1ca4a4b04_model(_self_, jule::Any(_47825_ssie.get()._field_expr));
								_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(".ptr(", 5));
								if ((!(_23db44461_PRODUCTION))) {
									_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("\"", 1));
									_1ca4e4d53_loc_info(_self_.get()._field_oc, _45339_m.get()._field_token);
									_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("\"", 1));
								};
								_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_1cd9ceda6:;
							{
								if ((_1c9777999_strct(_47825_ssie.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
									_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("&", 1));
								};
								if (_45413_wrapped) {
									_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("_wrap_copy", 10));
								} else {
									_1ca4a4b04_model(_self_, jule::Any(_47825_ssie.get()._field_expr));
								};
							}
						}
						_match_end_1cd9ced40:;
					};
					if ((_45339_m.get()._field_args.len() > 0LL)) {
						_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1e437bcae_TraitSubIdentExprModel>>()) {
				_case_begin_1cd9ce0c5:;
				{
					_1ca4a4b04_model(_self_, jule::Any(_45339_m.get()._field_expr.operator jule::Ptr<_1e437bcae_TraitSubIdentExprModel>().get()._field_expr));
					if ((!(_23db44461_PRODUCTION))) {
						_47417_locinfo=true;
					};
					if ((_45339_m.get()._field_args.len() > 0LL)) {
						_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_1cd9cde82:;
		};
	};
	_1ca49ca53_args(_self_, _45339_m.get()._field_args);
	if (_47417_locinfo) {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(", \"", 3));
		_1ca4e4d53_loc_info(_self_.get()._field_oc, _45339_m.get()._field_token);
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("\"", 1));
	};
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_45413_wrapped) {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("; })", 4));
	};
	if (_45339_m.get()._field_is_co) {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1ca49d856_func_call(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e4354902_FnCallExprModel> _53233_m) {
	if (((_1e4383c94_is_builtin(_53233_m.get()._field_func.ptr()) || (!(_53233_m.get()._field_func.get()._field_decl.get()._field_exceptional))) || ((_53233_m.get()._field_except != nullptr) && (_53233_m.get()._field_except.get()._field_stmts.len() == 0LL)))) {
		_1ca49d5d1_pure_func_call(_self_, _53233_m);
		return;;
	};
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1ca4e2a98_add_indent(_self_.get()._field_oc);
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("auto except = ", 14));
	_1ca49d5d1_pure_func_call(_self_, _53233_m);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1ca4e39cd_indent(_self_.get()._field_oc);
	if ((_53233_m.get()._field_except != nullptr)) {
		if (((_53233_m.get()._field_func.get()._field_result == nullptr) || (!(_53233_m.get()._field_assigned)))) {
			_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) ", 18));
			_1ca49670b_scope(_self_.get()._field_oc.get()._field_sc, _53233_m.get()._field_except);
			_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _55421_forwarded = _1ca4a6c05_is_forwarded(_53233_m.get()._field_except);;
			_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_55421_forwarded) {
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("{", 1));
			};
			_1ca49670b_scope(_self_.get()._field_oc.get()._field_sc, _53233_m.get()._field_except);
			if (_55421_forwarded) {
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(" ", 1));
				_1ca4a5374_init_expr(_self_, _53233_m.get()._field_func.get()._field_result);
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(";}", 2));
			};
			_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(");\n", 3));
		};
		_1ca4e32b3_done_indent(_self_.get()._field_oc);
	} else {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1ca4e4d53_loc_info(_self_.get()._field_oc, _53233_m.get()._field_token);
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("\"));\n", 5));
		if ((!(_1e43807c9_is_void(_53233_m.get()._field_func.get()._field_decl.ptr())))) {
			_1ca4e39cd_indent(_self_.get()._field_oc);
			_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("(except.result);\n", 17));
		};
		_1ca4e32b3_done_indent(_self_.get()._field_oc);
	};
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1ca49dacb_slice(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e4354ade_SliceExprModel> _58329_m) {
	if ((_58329_m.get()._field_elems.len() == 0LL)) {
		_1ca4e23b1_write(_self_.get()._field_oc, static__1ca528958_as_slice(_58329_m.get()._field_elem_kind));
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	_1ca4e23b1_write(_self_.get()._field_oc, static__1ca528958_as_slice(_58329_m.get()._field_elem_kind));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("::make({", 8));
	_1ca49ca53_args(_self_, _58329_m.get()._field_elems);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1ca49dd51_indexing(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e437b31e_IndexingExprModel> _59532_m) {
	_1ca4a4b04_model(_self_, jule::Any(_59532_m.get()._field_expr.get()._field_model));
	{
		
		if (_23db44461_PRODUCTION || (_1c9776c84_ptr(_59532_m.get()._field_expr.get()._field_kind.ptr()) != nullptr) || (_1c9777e72_map(_59532_m.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cd9edcc6:;
			{
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1ca4a4d79_expr(_self_, jule::Any(_59532_m.get()._field_index.get()._field_model));
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1cd9ed952:;
			{
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(".at(\"", 5));
				_1ca4e4d53_loc_info(_self_.get()._field_oc, _59532_m.get()._field_token);
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("\",", 2));
				_1ca4a4d79_expr(_self_, jule::Any(_59532_m.get()._field_index.get()._field_model));
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1cd9ed8ca:;
	};
}



inline void _1ca49e0c6_unsafe_indexing(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_20c91dcd8_UnsafeIndexingExprModel> _61439_m) {
	_1ca4a4b04_model(_self_, jule::Any(_61439_m.get()._field_node.get()._field_expr.get()._field_model));
	{
		
		if (_23db44461_PRODUCTION || (_1c9776c84_ptr(_61439_m.get()._field_node.get()._field_expr.get()._field_kind.ptr()) != nullptr) || (_1c9777e72_map(_61439_m.get()._field_node.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cda04062:;
			{
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1ca4a4d79_expr(_self_, jule::Any(_61439_m.get()._field_node.get()._field_index.get()._field_model));
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1cda03bdd:;
			{
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(".__at(", 6));
				_1ca4a4d79_expr(_self_, jule::Any(_61439_m.get()._field_node.get()._field_index.get()._field_model));
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1cda03b66:;
	};
}



inline void _1ca49e34b_anon_func(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e437b50b_AnonFnExprModel> _63133_m) {
	_1ca4e23b1_write(_self_.get()._field_oc, static__1ca52ad89_func(_63133_m.get()._field_func));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("([=]", 4));
	_1ca522963_params_ins(_self_.get()._field_oc, _63133_m.get()._field_func.get()._field_params);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(" mutable -> ", 12));
	_1ca4e23b1_write(_self_.get()._field_oc, static__1ca52a84a_func_ins_result(_63133_m.get()._field_func));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1ca496981_func_scope(_self_.get()._field_oc.get()._field_sc, _63133_m.get()._field_func);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ca49e5c1_map(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e437b8d5_MapExprModel> _64227_m) {
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("jule::Map<", 10));
	_1ca4e23b1_write(_self_.get()._field_oc, static__1ca52b131_kind(_64227_m.get()._field_key_kind));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1ca4e23b1_write(_self_.get()._field_oc, static__1ca52b131_kind(_64227_m.get()._field_val_kind));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(">({", 3));
	if ((_64227_m.get()._field_entries.len() > 0LL)) {
		{
			auto &expr = _64227_m.get()._field_entries;
			auto it = expr.begin();
			_iter_begin_1cda15370:;
			if (it != expr.end()) {
				jule::I64 _64918_i = it - expr.begin();
				jule::Ptr<_1e437b6e8_KeyValPairExprModel> _64925_pair = *it;
				{
					_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("{", 1));
					_1ca4a4d79_expr(_self_, jule::Any(_64925_pair.get()._field_key));
					_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(",", 1));
					_1ca4a4d79_expr(_self_, jule::Any(_64925_pair.get()._field_val));
					_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("}", 1));
					if (((_64227_m.get()._field_entries.len() - _64918_i) > 1LL)) {
						_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_1cda15370:;
				++it;
				_64918_i++;
				goto _iter_begin_1cda15370;
			}
			_iter_end_1cda15370:;
		};
	};
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1ca49e846_slicing(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e437bac2_SlicingExprModel> _66331_m) {
	_1ca4a4b04_model(_self_, jule::Any(_66331_m.get()._field_expr));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(".slice(", 7));
	if ((!(_23db44461_PRODUCTION))) {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1ca4e4d53_loc_info(_self_.get()._field_oc, _66331_m.get()._field_token);
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1ca4a4d79_expr(_self_, jule::Any(_66331_m.get()._field_left));
	if ((_66331_m.get()._field_right != nullptr)) {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1ca4a4d79_expr(_self_, jule::Any(_66331_m.get()._field_right));
	};
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ca49eabb_trait_sub(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e437bcae_TraitSubIdentExprModel> _67933_m) {
	_1ca4e23b1_write(_self_.get()._field_oc, static__1ca4ac5ce_trait_decl(_67933_m.get()._field_trt));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("_mptr_data", 10));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("[(", 2));
	_1ca4a4b04_model(_self_, jule::Any(_67933_m.get()._field_expr));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(").type_offset].", 15));
	_1ca4e23b1_write(_self_.get()._field_oc, static__1ca4ac090_func(_67933_m.get()._field_method));
}



inline void _1ca49ed41_structure_sub(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e437c1cc_StructSubIdentExprModel> _68837_m) {
	_1ca4a4b04_model(_self_, jule::Any(_68837_m.get()._field_expr));
	if ((_68837_m.get()._field_field != nullptr)) {
		if ((_1c9776c84_ptr(_68837_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("->", 2));
		} else if ((_1c9776a20_sptr(_68837_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(".get(", 5));
			if ((!(_23db44461_PRODUCTION))) {
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("\"", 1));
				_1ca4e4d53_loc_info(_self_.get()._field_oc, _68837_m.get()._field_token);
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("\"", 1));
			};
			_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(").", 2));
		} else {
			_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(".", 1));
		};
		_1ca4e23b1_write(_self_.get()._field_oc, static__1ca4ad15c_field(_68837_m.get()._field_field.get()._field_decl));
	};
}



inline void _1ca4a00b6_common_ident(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e437c793_CommonIdentExprModel> _70832_m) {
	_1ca4e23b1_write(_self_.get()._field_oc, _70832_m.get()._field_ident);
}



inline void _1ca4a033b_common_sub(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e437c980_CommonSubIdentExprModel> _71234_m) {
	_1ca4a4b04_model(_self_, jule::Any(_71234_m.get()._field_expr));
	{
		
		if ((_1c9776c84_ptr(_71234_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_case_begin_1cda291ca:;
			{
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("->", 2));
			}
		}
		else if ((_1c9776a20_sptr(_71234_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_case_begin_1cda28dbc:;
			{
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(".get(", 5));
				if ((!(_23db44461_PRODUCTION))) {
					_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1ca4e4d53_loc_info(_self_.get()._field_oc, _71234_m.get()._field_token);
					_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("\"", 1));
				};
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(").", 2));
			}
		}
		else {
			_case_begin_1cda28d56:;
			{
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(".", 1));
			}
		}
		_match_end_1cda28cce:;
	};
	_1ca4e23b1_write(_self_.get()._field_oc, _71234_m.get()._field_ident);
}



inline void _1ca4a05b1_array(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e437c5a6_ArrayExprModel> _73129_m) {
	_1ca4e23b1_write(_self_.get()._field_oc, static__1ca529cbc_array(_73129_m.get()._field_kind));
	if ((_73129_m.get()._field_elems.len() == 0LL)) {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	if (((_73129_m.get()._field_elems.len() == 2LL) && (_73129_m.get()._field_elems[1LL] == nullptr))) {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1ca4a4d79_expr(_self_, jule::Any(_73129_m.get()._field_elems[0LL]));
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("({", 2));
	_1ca49ca53_args(_self_, _73129_m.get()._field_elems);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("})", 2));
	return;;
}



inline void _1ca4a0836_func_ins_common(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e4383018_FnIns> _75439_m) {
	_1ca4e23b1_write(_self_.get()._field_oc, static__1ca52ad89_func(_75439_m));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1ca4a0aab_func_ins(_self_, _75439_m);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ca4a0aab_func_ins(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e4383018_FnIns> _76132_m) {
	if (((_76132_m.get()._field_decl != nullptr) && _76132_m.get()._field_decl.get()._field_cpp_linked)) {
		jule::Ptr<_1e43620c4_Directive> _76317_d = _1ca52ce57_find_directive(_76132_m.get()._field_decl.get()._field_directives,jule::Str("namespace", 9));;
		if ((_76317_d != nullptr)) {
			_1ca4e23b1_write(_self_.get()._field_oc, _1ca5255ae_concat_all_parts(_76317_d.get()._field_args));
			_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1ca4e23b1_write(_self_.get()._field_oc, static__1ca4ac337_func_ins(_76132_m));
}



inline void _1ca4a0d31_tuple(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e437cb6c_TupleExprModel> _77229_m) {
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	{
		auto &expr = _77229_m.get()._field_datas;
		auto it = expr.begin();
		_iter_begin_1cda397e5:;
		if (it != expr.end()) {
			jule::I64 _77414_i = it - expr.begin();
			jule::Ptr<_1c974abc0_Data> _77421_d = *it;
			{
				_1ca4a4d79_expr(_self_, jule::Any(_77421_d.get()._field_model));
				if (((_77229_m.get()._field_datas.len() - _77414_i) > 1LL)) {
					_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1cda397e5:;
			++it;
			_77414_i++;
			goto _iter_begin_1cda397e5;
		}
		_iter_end_1cda397e5:;
	};
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ca4a10a6_new_call(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e437d420_BuiltinNewCallExprModel> _78332_m) {
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1ca4e23b1_write(_self_.get()._field_oc, static__1ca52b131_kind(_78332_m.get()._field_kind));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(">(", 2));
	if ((_78332_m.get()._field_init != nullptr)) {
		_1ca4a4d79_expr(_self_, jule::Any(_78332_m.get()._field_init));
	};
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ca4a132b_out_call(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e437cd59_BuiltinOutCallExprModel> _79332_m) {
	if ((_79332_m.get()._field_debug && _23db44461_PRODUCTION)) {
		return;;
	};
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("jule::out(", 10));
	_1ca4a4d79_expr(_self_, jule::Any(_79332_m.get()._field_expr));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ca4a15a1_outln_call(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e437d046_BuiltinOutlnCallExprModel> _80234_m) {
	if ((_80234_m.get()._field_debug && _23db44461_PRODUCTION)) {
		return;;
	};
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1ca4a4d79_expr(_self_, jule::Any(_80234_m.get()._field_expr));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ca4a1826_panic_call(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e437d60c_BuiltinPanicCallExprModel> _81134_m) {
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("jule::panic(", 12));
	_1ca4a4d79_expr(_self_, jule::Any(_81134_m.get()._field_expr));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_1ca4e4d53_loc_info(_self_.get()._field_oc, _81134_m.get()._field_token);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1ca4a1a9b_assert_call(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e437d7e9_BuiltinAssertCallExprModel> _81935_m) {
	if (_23db44461_PRODUCTION) {
		return;;
	};
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("if (!(", 6));
	_1ca4a4d79_expr(_self_, jule::Any(_81935_m.get()._field_expr));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_1ca4e23b1_write(_self_.get()._field_oc, _1ca4a6045_cstr_lit(static_cast<jule::Slice<jule::U8>>(_81935_m.get()._field_log)));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_1ca4e4d53_loc_info(_self_.get()._field_oc, _81935_m.get()._field_token);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1ca4a1d21_error_call(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e437e09c_BuiltinErrorCallExprModel> _83234_m) {
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_1e43807c9_is_void(_83234_m.get()._field_func.get()._field_decl.ptr())) {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(", 22));
	} else {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1ca4e23b1_write(_self_.get()._field_oc, static__1ca52b131_kind(_83234_m.get()._field_func.get()._field_result));
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(">(", 2));
	};
	_1ca4a4d79_expr(_self_, jule::Any(_83234_m.get()._field_err));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ca4a2096_copy_call(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e437ddb0_BuiltinCopyCallExprModel> _84533_m) {
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("jule::copy((", 12));
	_1ca4a4b04_model(_self_, jule::Any(_84533_m.get()._field_dest.get()._field_model));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1c97767ab_prim(_84533_m.get()._field_dest.get()._field_kind.ptr()) != nullptr)) {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(", (", 3));
	_1ca4a4b04_model(_self_, jule::Any(_84533_m.get()._field_src.get()._field_model));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1c97767ab_prim(_84533_m.get()._field_src.get()._field_kind.ptr()) != nullptr)) {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ca4a231b_make_call_slice(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e437d9d6_BuiltinMakeCallExprModel>& _86140_m) {
	jule::Ptr<_1c977cdbc_Slc> _86217_slice = _1c97774c1_slc(_86140_m.get()._field_kind.ptr());;
	_1ca4e23b1_write(_self_.get()._field_oc, static__1ca52b131_kind(_86140_m.get()._field_kind));
	if ((_1c9776ee8_enm(_86217_slice.get()._field_elem.ptr()) != nullptr)) {
		if ((_86140_m.get()._field_cap != nullptr)) {
			_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
		} else {
			_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("::alloc_def(", 12));
		};
	} else {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	};
	_1ca4a4d79_expr(_self_, jule::Any(_86140_m.get()._field_len));
	if ((_86140_m.get()._field_cap != nullptr)) {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1ca4a4d79_expr(_self_, jule::Any(_86140_m.get()._field_cap));
	};
	if ((_1c9776ee8_enm(_86217_slice.get()._field_elem.ptr()) != nullptr)) {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1ca4a5374_init_expr(_self_, _86217_slice.get()._field_elem);
	};
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ca4a2591_make_call_str(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e437d9d6_BuiltinMakeCallExprModel>& _88738_m) {
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1ca4a4d79_expr(_self_, jule::Any(_88738_m.get()._field_len));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ca4a2816_make_call(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e437d9d6_BuiltinMakeCallExprModel> _89433_m) {
	if ((_1c97774c1_slc(_89433_m.get()._field_kind.ptr()) != nullptr)) {
		_1ca4a231b_make_call_slice(_self_, _89433_m);
		return;;
	};
	_1ca4a2591_make_call_str(_self_, _89433_m);
}



inline void _1ca4a2a8b_push_to_slice(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e3b31003_PushToSliceExprModel> _90237_m) {
	jule::I64 _90313_n = _self_.get()._field_oc.get()._field_obj.len();;
	_1ca4a4b04_model(_self_, jule::Any(_90237_m.get()._field_dest));
	jule::Str _90513_dest = _self_.get()._field_oc.get()._field_obj.slice(_90313_n);;
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(" = jule::alloc_for_append(", 26));
	_1ca4e23b1_write(_self_.get()._field_oc, _90513_dest);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1ca4e23b1_write(_self_.get()._field_oc, _1e5c30b6c_itoa(static_cast<jule::I64>(_90237_m.get()._field_elems.get()._field_elems.len())));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(");", 2));
	{
		auto &expr = _90237_m.get()._field_elems.get()._field_elems;
		auto it = expr.begin();
		_iter_begin_1cda611ac:;
		if (it != expr.end()) {
			jule::Any _91221_e = *it;
			{
				_1ca4e23b1_write(_self_.get()._field_oc, _90513_dest);
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(".__push(", 8));
				_1ca4a4b04_model(_self_, jule::Any(_91221_e));
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(");", 2));
			}
			_iter_next_1cda611ac:;
			++it;
			goto _iter_begin_1cda611ac;
		}
		_iter_end_1cda611ac:;
	};
}



inline void _1ca4a2d11_append_call(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e437dbc3_BuiltinAppendCallExprModel> _92135_m) {
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("jule::append(", 13));
	_1ca4a4b04_model(_self_, jule::Any(_92135_m.get()._field_dest));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1ca4a4b04_model(_self_, jule::Any(_92135_m.get()._field_elements));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ca4a3086_clone_call(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e437d233_BuiltinCloneCallExprModel> _92934_m) {
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("jule::clone(", 12));
	_1ca4a4b04_model(_self_, jule::Any(_92934_m.get()._field_expr));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ca4a330b_sizeof(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e437be9b_SizeofExprModel> _93530_m) {
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("sizeof(", 7));
	_1ca4a4b04_model(_self_, jule::Any(_93530_m.get()._field_expr));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ca4a3581_alignof(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e437e70c_AlignofExprModel> _94131_m) {
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("alignof(", 8));
	_1ca4a4b04_model(_self_, jule::Any(_94131_m.get()._field_expr));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline jule::Str _1ca4a388e_rune_lit(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e437e8e9_RuneExprModel> _94728_m) {
	if ((_94728_m.get()._field_code <= 127LL)) {
		jule::Str _94921_b = _1ca4a59b2_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_94728_m.get()._field_code)));;
		if ((_94921_b == jule::Str("'", 1))) {
			_94921_b=jule::Str("\\'", 2);
		};
		return ((jule::Str("'", 1) + _94921_b) + jule::Str("'", 1));
	};
	return _1ca4a662d_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_94728_m.get()._field_code)));
}



inline void _1ca4a3b14_structure_static(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e437c3b9_StructStaticIdentExprModel> _95840_m) {
	_1ca4e23b1_write(_self_.get()._field_oc, static__1ca4ac337_func_ins(_95840_m.get()._field_method));
}



inline void _1ca4a3d89_integrated_to_str(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e437ead6_IntegratedToStrExprModel> _96241_m) {
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("jule::to_str(", 13));
	_1ca4a4b04_model(_self_, jule::Any(_96241_m.get()._field_expr));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ca4a410e_backend_emit(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e437ecc3_BackendEmitExprModel> _96836_m) {
	if ((_96836_m.get()._field_exprs.len() == 0LL)) {
		_1ca4e23b1_write(_self_.get()._field_oc, _96836_m.get()._field_code);
		return;;
	};
	jule::I64 _97313_n = _self_.get()._field_oc.get()._field_obj.len();;
	{
		auto &expr = _96836_m.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1cda72663:;
		if (it != expr.end()) {
			jule::I64 _97414_i = it - expr.begin();
			jule::Any _97421_expr = *it;
			{
				_1ca4a4d79_expr(_self_, jule::Any(_97421_expr));
				jule::Str _97617_obj = _self_.get()._field_oc.get()._field_obj.slice(_97313_n);;
				_96836_m.get()._field_exprs[_97414_i]=jule::Any(_97617_obj);
				_self_.get()._field_oc.get()._field_obj=_self_.get()._field_oc.get()._field_obj.slice(0LL,_97313_n);
			}
			_iter_next_1cda72663:;
			++it;
			_97414_i++;
			goto _iter_begin_1cda72663;
		}
		_iter_end_1cda72663:;
	};
	_1ca4e23b1_write(_self_.get()._field_oc, _1c9802529_format(_96836_m.get()._field_code,jule::Any(_96836_m.get()._field_exprs)));
}



inline void _1ca4a4384_free(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1e437eeb0_FreeExprModel> _98328_m) {
	_1ca4a4d79_expr(_self_, jule::Any(_98328_m.get()._field_expr));
	if (_23db43e22_RC) {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(".__free()", 9));
}



inline void _1ca4a4609_mut_slicing(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_20c90c6ab_MutSlicingExprModel> _99235_m) {
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1ca4a4b04_model(_self_, jule::Any(_99235_m.get()._field_expr));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_23db44461_PRODUCTION))) {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1ca4e4d53_loc_info(_self_.get()._field_oc, _99235_m.get()._field_token);
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1ca4a4d79_expr(_self_, jule::Any(_99235_m.get()._field_left));
	if ((_99235_m.get()._field_right != nullptr)) {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1ca4a4d79_expr(_self_, jule::Any(_99235_m.get()._field_right));
	};
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _1ca4a487e_str_insert_begin(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_2254a3c1d_StrInsertBeginExprModel> _100940_m) {
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1ca4a4b04_model(_self_, jule::Any(_100940_m.get()._field_dest));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(").buffer.insert(0, (", 20));
	_1ca4a4b04_model(_self_, jule::Any(_100940_m.get()._field_expr));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("));", 3));
}



inline void _1ca4a4b04_model(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Any _101729_m) {
	{
		auto &_match_expr{ _101729_m };
		
		if (_match_expr.type_is<jule::Ptr<_1c974abc0_Data>>()) {
			_case_begin_1cda7d1eb:;
			{
				_1ca4a4b04_model(_self_, jule::Any(_101729_m.operator jule::Ptr<_1c974abc0_Data>().get()._field_model));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c97746ee_TypeKind>>()) {
			_case_begin_1cda7d509:;
			{
				_1ca4e23b1_write(_self_.get()._field_oc, static__1ca52b131_kind(_101729_m.operator jule::Ptr<_1c97746ee_TypeKind>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c968bb88_Const>>()) {
			_case_begin_1cda7d570:;
			{
				_1ca49aba5_constant(_self_, _101729_m.operator jule::Ptr<_1c968bb88_Const>(),false);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e46c6eb6_Var>>()) {
			_case_begin_1cda7d5d6:;
			{
				_1ca49b7dd_var(_self_, _101729_m.operator jule::Ptr<_1e46c6eb6_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e43d8d0a_Trait>>()) {
			_case_begin_1cda7d64c:;
			{
				static__1ca4ac5ce_trait_decl(_101729_m.operator jule::Ptr<_1e43d8d0a_Trait>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e43360cb_Struct>>()) {
			_case_begin_1cda7e1b9:;
			{
				_1ca49ba63_structure(_self_, _101729_m.operator jule::Ptr<_1e43360cb_Struct>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e43462ea_StructIns>>()) {
			_case_begin_1cda7e230:;
			{
				_1ca49bcd8_structure_ins(_self_, _101729_m.operator jule::Ptr<_1e43462ea_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4383018_FnIns>>()) {
			_case_begin_1cda7e296:;
			{
				_1ca4a0836_func_ins_common(_self_, _101729_m.operator jule::Ptr<_1e4383018_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e40d153b_UnsafeBinopExprModel>>()) {
			_case_begin_1cda7e30c:;
			{
				_1ca49b2e3_unsafe_binary(_self_, _101729_m.operator jule::Ptr<_1e40d153b_UnsafeBinopExprModel>().get()._field_node);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e435a8e7_BinopExprModel>>()) {
			_case_begin_1cda7e373:;
			{
				_1ca49b568_binary(_self_, _101729_m.operator jule::Ptr<_1e435a8e7_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e435972b_UnaryExprModel>>()) {
			_case_begin_1cda7e3d9:;
			{
				_1ca49c05d_unary(_self_, _101729_m.operator jule::Ptr<_1e435972b_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e433b004_StructLitExprModel>>()) {
			_case_begin_1cda7e461:;
			{
				_1ca49c2d3_structure_lit(_self_, _101729_m.operator jule::Ptr<_1e433b004_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4331d63_AllocStructLitExprModel>>()) {
			_case_begin_1cda7e4d8:;
			{
				_1ca49c558_alloc_structure(_self_, _101729_m.operator jule::Ptr<_1e4331d63_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e434e7dc_CastingExprModel>>()) {
			_case_begin_1cda7e560:;
			{
				_1ca49c7cd_casting(_self_, _101729_m.operator jule::Ptr<_1e434e7dc_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4354902_FnCallExprModel>>()) {
			_case_begin_1cda7e5d7:;
			{
				_1ca49d856_func_call(_self_, _101729_m.operator jule::Ptr<_1e4354902_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4354ade_SliceExprModel>>()) {
			_case_begin_1cda7e65e:;
			{
				_1ca49dacb_slice(_self_, _101729_m.operator jule::Ptr<_1e4354ade_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437c5a6_ArrayExprModel>>()) {
			_case_begin_1cda7e6d6:;
			{
				_1ca4a05b1_array(_self_, _101729_m.operator jule::Ptr<_1e437c5a6_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20c91dcd8_UnsafeIndexingExprModel>>()) {
			_case_begin_1cda7e75d:;
			{
				_1ca49e0c6_unsafe_indexing(_self_, _101729_m.operator jule::Ptr<_20c91dcd8_UnsafeIndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437b31e_IndexingExprModel>>()) {
			_case_begin_1cda7e7d5:;
			{
				_1ca49dd51_indexing(_self_, _101729_m.operator jule::Ptr<_1e437b31e_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437b50b_AnonFnExprModel>>()) {
			_case_begin_1cda7e85c:;
			{
				_1ca49e34b_anon_func(_self_, _101729_m.operator jule::Ptr<_1e437b50b_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437b8d5_MapExprModel>>()) {
			_case_begin_1cda7e8d4:;
			{
				_1ca49e5c1_map(_self_, _101729_m.operator jule::Ptr<_1e437b8d5_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437bac2_SlicingExprModel>>()) {
			_case_begin_1cda7e95b:;
			{
				_1ca49e846_slicing(_self_, _101729_m.operator jule::Ptr<_1e437bac2_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437bcae_TraitSubIdentExprModel>>()) {
			_case_begin_1cda7e9d3:;
			{
				_1ca49eabb_trait_sub(_self_, _101729_m.operator jule::Ptr<_1e437bcae_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437c1cc_StructSubIdentExprModel>>()) {
			_case_begin_1cda7ea5a:;
			{
				_1ca49ed41_structure_sub(_self_, _101729_m.operator jule::Ptr<_1e437c1cc_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437c793_CommonIdentExprModel>>()) {
			_case_begin_1cda7ead2:;
			{
				_1ca4a00b6_common_ident(_self_, _101729_m.operator jule::Ptr<_1e437c793_CommonIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437c980_CommonSubIdentExprModel>>()) {
			_case_begin_1cda7eb59:;
			{
				_1ca4a033b_common_sub(_self_, _101729_m.operator jule::Ptr<_1e437c980_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437cb6c_TupleExprModel>>()) {
			_case_begin_1cda7ebd1:;
			{
				_1ca4a0d31_tuple(_self_, _101729_m.operator jule::Ptr<_1e437cb6c_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437cd59_BuiltinOutCallExprModel>>()) {
			_case_begin_1cda7ec58:;
			{
				_1ca4a132b_out_call(_self_, _101729_m.operator jule::Ptr<_1e437cd59_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437d046_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1cda7ecd0:;
			{
				_1ca4a15a1_outln_call(_self_, _101729_m.operator jule::Ptr<_1e437d046_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437d420_BuiltinNewCallExprModel>>()) {
			_case_begin_1cda7ed57:;
			{
				_1ca4a10a6_new_call(_self_, _101729_m.operator jule::Ptr<_1e437d420_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437d60c_BuiltinPanicCallExprModel>>()) {
			_case_begin_1cda7edce:;
			{
				_1ca4a1826_panic_call(_self_, _101729_m.operator jule::Ptr<_1e437d60c_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437d7e9_BuiltinAssertCallExprModel>>()) {
			_case_begin_1cda7ee56:;
			{
				_1ca4a1a9b_assert_call(_self_, _101729_m.operator jule::Ptr<_1e437d7e9_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437e09c_BuiltinErrorCallExprModel>>()) {
			_case_begin_1cda7eecd:;
			{
				_1ca4a1d21_error_call(_self_, _101729_m.operator jule::Ptr<_1e437e09c_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437d9d6_BuiltinMakeCallExprModel>>()) {
			_case_begin_1cda80055:;
			{
				_1ca4a2816_make_call(_self_, _101729_m.operator jule::Ptr<_1e437d9d6_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437dbc3_BuiltinAppendCallExprModel>>()) {
			_case_begin_1cda800cc:;
			{
				_1ca4a2d11_append_call(_self_, _101729_m.operator jule::Ptr<_1e437dbc3_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437d233_BuiltinCloneCallExprModel>>()) {
			_case_begin_1cda80154:;
			{
				_1ca4a3086_clone_call(_self_, _101729_m.operator jule::Ptr<_1e437d233_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437ddb0_BuiltinCopyCallExprModel>>()) {
			_case_begin_1cda801cb:;
			{
				_1ca4a2096_copy_call(_self_, _101729_m.operator jule::Ptr<_1e437ddb0_BuiltinCopyCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437be9b_SizeofExprModel>>()) {
			_case_begin_1cda80253:;
			{
				_1ca4a330b_sizeof(_self_, _101729_m.operator jule::Ptr<_1e437be9b_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437e70c_AlignofExprModel>>()) {
			_case_begin_1cda802ca:;
			{
				_1ca4a3581_alignof(_self_, _101729_m.operator jule::Ptr<_1e437e70c_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437e8e9_RuneExprModel>>()) {
			_case_begin_1cda80352:;
			{
				_1ca4e23b1_write(_self_.get()._field_oc, _1ca4a388e_rune_lit(_self_, _101729_m.operator jule::Ptr<_1e437e8e9_RuneExprModel>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437c3b9_StructStaticIdentExprModel>>()) {
			_case_begin_1cda803c9:;
			{
				_1ca4a3b14_structure_static(_self_, _101729_m.operator jule::Ptr<_1e437c3b9_StructStaticIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437ead6_IntegratedToStrExprModel>>()) {
			_case_begin_1cda80451:;
			{
				_1ca4a3d89_integrated_to_str(_self_, _101729_m.operator jule::Ptr<_1e437ead6_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437ecc3_BackendEmitExprModel>>()) {
			_case_begin_1cda804c8:;
			{
				_1ca4a410e_backend_emit(_self_, _101729_m.operator jule::Ptr<_1e437ecc3_BackendEmitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437eeb0_FreeExprModel>>()) {
			_case_begin_1cda80550:;
			{
				_1ca4a4384_free(_self_, _101729_m.operator jule::Ptr<_1e437eeb0_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20c90c6ab_MutSlicingExprModel>>()) {
			_case_begin_1cda805c7:;
			{
				_1ca4a4609_mut_slicing(_self_, _101729_m.operator jule::Ptr<_20c90c6ab_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2254a3c1d_StrInsertBeginExprModel>>()) {
			_case_begin_1cda8064e:;
			{
				_1ca4a487e_str_insert_begin(_self_, _101729_m.operator jule::Ptr<_2254a3c1d_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1cda7d3a5:;
			{
				_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1cda7d350:;
	};
}



inline void _1ca4a4d79_expr(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Any _111628_e) {
	_1ca4a4b04_model(_self_, jule::Any(_111628_e));
}



inline void _1ca4a50ee_val(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1c974bc48_Value> _112027_v) {
	if (_1c974b583_is_const(_112027_v.get()._field_data.ptr())) {
		_1ca49aba5_constant(_self_, _112027_v.get()._field_data.get()._field_constant,((_112027_v.get()._field_data.get()._field_kind != nullptr) && _1c977ae86_is_f32(_1c97767ab_prim(_112027_v.get()._field_data.get()._field_kind.ptr()).ptr())));
		return;;
	};
	_1ca4a4d79_expr(_self_, jule::Any(_112027_v.get()._field_data.get()._field_model));
}



inline void _1ca4a5374_init_expr(jule::Ptr<_1ca4994ab_ExprCoder> _self_, jule::Ptr<_1c97746ee_TypeKind> _112833_t) {
	if ((_1c9776c84_ptr(_112833_t.ptr()) != nullptr)) {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
		return;;
	};
	jule::Ptr<_1e4456b58_Enum> _113317_enm = _1c9776ee8_enm(_112833_t.ptr());;
	if ((_113317_enm != nullptr)) {
		_1ca4a50ee_val(_self_, _113317_enm.get()._field_items[0LL].get()._field_value);
		return;;
	};
	_1ca4e23b1_write(_self_.get()._field_oc, static__1ca52b131_kind(_112833_t));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1ca4994ab_ExprCoder _Src) {
	_Stream << "ExprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1ca4a7909_clone_func_decl(jule::Ptr<_1e43360cb_Struct>& _1032_s) {
	jule::Str _1117_obj = static__1ca52977d_structure(_1032_s);;
	_1117_obj+=jule::Str(" clone(void) const ", 19);
	return _1117_obj;
}



inline jule::Str static__1ca4a7ba1_clone_func_def(jule::Ptr<_1e43360cb_Struct>& _1631_s) {
	jule::Str _1717_obj = static__1ca52977d_structure(_1631_s);;
	_1717_obj+=(jule::Str(" ", 1) + _1717_obj);
	_1717_obj+=jule::Str("::clone(void) const ", 20);
	return _1717_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1ca4a75a7_DeriveCoder _Src) {
	_Stream << "DeriveCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ca4a8b80_TestCoder> static__1ca4a9103_new(jule::Ptr<_1ca4d7c36_ObjectCoder>& _2828_oc) {
	return jule::new_ptr<_1ca4a8b80_TestCoder>(_1ca4a8b80_TestCoder{._field_oc=_2828_oc});
}



inline jule::Ptr<_1e46a4768_ImportInfo> _1ca4a9367_find_testing_package(jule::Ptr<_1ca4a8b80_TestCoder> _self_) {
	{
		auto &expr = _self_.get()._field_oc.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1cdaa2e9b:;
		if (it != expr.end()) {
			jule::Ptr<_1e46a4768_ImportInfo> _3521_imp = *it;
			{
				if ((_3521_imp.get()._field_link_path == jule::Str("std::testing", 12))) {
					return _3521_imp;
				};
			}
			_iter_next_1cdaa2e9b:;
			++it;
			goto _iter_begin_1cdaa2e9b;
		}
		_iter_end_1cdaa2e9b:;
	};
	return nullptr;
}



inline void _1ca4a95dc_append_test(jule::Ptr<_1ca4a8b80_TestCoder> _self_, jule::Ptr<_1e4383018_FnIns> _4335_f) {
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4a9ca2_call_tm_reset(_self_);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \";\n", 35));
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1ca4e23b1_write(_self_.get()._field_oc, _1ca4a6045_cstr_lit(static_cast<jule::Slice<jule::U8>>(_4335_f.get()._field_decl.get()._field_ident)));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(");\n", 3));
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, static__1ca4ac337_func_ins(_4335_f));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("(_t);\n", 6));
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("post_test();\n", 13));
}



inline void _1ca4a9862_append_package_tests(jule::Ptr<_1ca4a8b80_TestCoder> _self_, jule::Ptr<_1e46a742a_Package>& _6045_p) {
	{
		auto &expr = _6045_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1cdaa9de8:;
		if (it != expr.end()) {
			jule::Ptr<_1c9745c42_SymbolTable> _6121_file = *it;
			{
				{
					auto &expr = _6121_file.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1cdaaa6bd:;
					if (it != expr.end()) {
						jule::Ptr<_1e4380576_Fn> _6225_f = *it;
						{
							if (_1ca52d2dc_has_directive(_6225_f.get()._field_directives,jule::Str("test", 4))) {
								_1ca4a95dc_append_test(_self_, _6225_f.get()._field_instances[0LL]);
							};
						}
						_iter_next_1cdaaa6bd:;
						++it;
						goto _iter_begin_1cdaaa6bd;
					}
					_iter_end_1cdaaa6bd:;
				};
			}
			_iter_next_1cdaa9de8:;
			++it;
			goto _iter_begin_1cdaa9de8;
		}
		_iter_end_1cdaa9de8:;
	};
}



inline jule::Bool _1ca4a9ac6_ready_testing_package(jule::Ptr<_1ca4a8b80_TestCoder> _self_) {
	jule::Ptr<_1e46a4768_ImportInfo> _7117_p = _1ca4a9367_find_testing_package(_self_);;
	if ((_7117_p == nullptr)) {
		return false;
	};
	_self_.get()._field_t=_1e46a5b98_find_struct(_7117_p.ptr(), jule::Str("T", 1),false).get()._field_instances[0LL];
	_self_.get()._field_tm_reset=_1e4342758_find_method(_self_.get()._field_t.ptr(), jule::Str("reset", 5),false);
	_self_.get()._field_tm_failed=_1e4342758_find_method(_self_.get()._field_t.ptr(), jule::Str("failed", 6),false);
	_self_.get()._field_tm_skipped=_1e4342758_find_method(_self_.get()._field_t.ptr(), jule::Str("skipped", 7),false);
	return true;
}



inline void _1ca4a9ca2_call_tm_reset(jule::Ptr<_1ca4a8b80_TestCoder> _self_) {
	_1ca4e23b1_write(_self_.get()._field_oc, static__1ca4ac090_func(_self_.get()._field_tm_reset));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1ca4a9e7d_call_tm_failed(jule::Ptr<_1ca4a8b80_TestCoder> _self_) {
	_1ca4e23b1_write(_self_.get()._field_oc, static__1ca4ac090_func(_self_.get()._field_tm_failed));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1ca4aa159_call_tm_skipped(jule::Ptr<_1ca4a8b80_TestCoder> _self_) {
	_1ca4e23b1_write(_self_.get()._field_oc, static__1ca4ac090_func(_self_.get()._field_tm_skipped));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1ca4aa335_serialize(jule::Ptr<_1ca4a8b80_TestCoder> _self_) {
	_1ca524a75_serialize_head(_self_.get()._field_oc);
	__JULE_DEFER({
		_1ca524899_end(_self_.get()._field_oc);
	});;
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_1ca4e2a98_add_indent(_self_.get()._field_oc);
	_1ca4e39cd_indent(_self_.get()._field_oc);
	if ((!(_1ca4a9ac6_ready_testing_package(_self_)))) {
		_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("}", 1));
		_1ca4e32b3_done_indent(_self_.get()._field_oc);
		return;;
	};
	_1ca4e23b1_write(_self_.get()._field_oc, static__1ca527b33_as_sptr(static__1ca529a25_structure_ins(_self_.get()._field_t)));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_1ca4e23b1_write(_self_.get()._field_oc, static__1ca529a25_structure_ins(_self_.get()._field_t));
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_1ca4e2a98_add_indent(_self_.get()._field_oc);
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("++total;\n", 9));
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("if (", 4));
	_1ca4a9e7d_call_tm_failed(_self_);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("else if (", 9));
	_1ca4aa159_call_tm_skipped(_self_);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1ca4e32b3_done_indent(_self_.get()._field_oc);
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("};\n", 3));
	_1ca4a9862_append_package_tests(_self_, _self_.get()._field_oc.get()._field_ir.get()._field_main);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("\n\n", 2));
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_1ca4e32b3_done_indent(_self_.get()._field_oc);
	_1ca4e39cd_indent(_self_.get()._field_oc);
	_1ca4e23b1_write(_self_.get()._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1ca4a8b80_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tm_reset:" << _Src._field_tm_reset << ", ";
	_Stream << "tm_failed:" << _Src._field_tm_failed << ", ";
	_Stream << "tm_skipped:" << _Src._field_tm_skipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1ca4ab90d_to_out(jule::Str& _3323_ident, jule::U64 _3335_addr) {
	if ((_3335_addr != 0LLU)) {
		jule::Str _3521_obj = jule::Str::alloc(40LL);;
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_1e5c30908_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_3335_addr)),15LL);
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_3323_ident;
		return _3521_obj;
	};
	jule::Str _4217_obj = jule::Str::alloc((_3323_ident.len() + 1LL));;
	_4217_obj+=jule::Str("_", 1);
	_4217_obj+=_3323_ident;
	return _4217_obj;
}



inline jule::Str static__1ca4abce8_to_local(jule::I64 _5424_row, jule::I64 _5434_col, jule::Str& _5445_ident) {
	jule::Str _5517_obj = jule::Str::alloc(40LL);;
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_1e5c30b6c_itoa(_5424_row);
	_5517_obj+=_1e5c30b6c_itoa(_5434_col);
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_5445_ident;
	return _5517_obj;
}



inline jule::Str static__1ca4ac090_func(jule::Ptr<_1e4380576_Fn>& _6521_f) {
	{
		
		if (_6521_f.get()._field_cpp_linked) {
			_case_begin_1cdac7a2b:;
			{
				return _6521_f.get()._field_ident;
			}
		}
		else if ((_6521_f.get()._field_ident == jule::Str("main", 4))) {
			_case_begin_1cdac6d8d:;
			{
				return jule::Str("entry_point", 11);
			}
		}
		else if (_1e4380a3d_is_method(_6521_f.ptr())) {
			_case_begin_1cdac6e04:;
			{
				jule::Str _7221_obj = static__1ca4ab90d_to_out(_6521_f.get()._field_ident,static_cast<jule::U64>(static_cast<jule::U64>(_6521_f)));;
				if (_6521_f.get()._field_statically) {
					(_7221_obj).buffer.insert(0, (jule::Str("static_", 7)));;
					return _7221_obj;
				};
				return _7221_obj;
			}
		}
		else {
			_case_begin_1cdac6c39:;
			{
				return static__1ca4ab90d_to_out(_6521_f.get()._field_ident,static_cast<jule::U64>(static_cast<jule::U64>(_6521_f)));
			}
		}
		_match_end_1cdac6b6d:;
	};
}



inline jule::Str static__1ca4ac337_func_ins(jule::Ptr<_1e4383018_FnIns>& _8425_f) {
	if (_1e4383c94_is_builtin(_8425_f.ptr())) {
		return (jule::Str("jule::", 6) + _8425_f.get()._field_decl.get()._field_ident);
	};
	if ((_8425_f.get()._field_decl.get()._field_cpp_linked || (_8425_f.get()._field_generics.len() == 0LL))) {
		return static__1ca4ac090_func(_8425_f.get()._field_decl);
	};
	return static__1ca4ab90d_to_out(_8425_f.get()._field_decl.get()._field_ident,static_cast<jule::U64>(static_cast<jule::U64>(_8425_f)));
}



inline jule::Str static__1ca4ac5ce_trait_decl(jule::Ptr<_1e43d8d0a_Trait> _9526_t) {
	if (_1e4415ae5_is_builtin(_9526_t.ptr())) {
		return (jule::Str("jule::", 6) + _9526_t.get()._field_ident);
	};
	return static__1ca4ab90d_to_out(_9526_t.get()._field_ident,static_cast<jule::U64>(static_cast<jule::U64>(_9526_t)));
}



inline jule::Str static__1ca4ac876_param(jule::Ptr<_1e4380389_Param>& _10322_p) {
	if ((_20cda21e4_is_anon_ident(_10322_p.get()._field_ident) || _20cda1e4c_is_ignore_ident(_10322_p.get()._field_ident))) {
		return jule::Str();
	};
	if (_1e435279b_is_self(_10322_p.ptr())) {
		return jule::Str("_self_", 6);
	};
	if ((_10322_p.get()._field_token == nullptr)) {
		return static__1ca4abce8_to_local(0LL,0LL,_10322_p.get()._field_ident);
	};
	return static__1ca4abce8_to_local(_10322_p.get()._field_token.get()._field_row,_10322_p.get()._field_token.get()._field_column,_10322_p.get()._field_ident);
}



inline jule::Str static__1ca4acb1d_structure(jule::Ptr<_1e43360cb_Struct>& _11726_s) {
	if (_11726_s.get()._field_cpp_linked) {
		if (_1ca52d2dc_has_directive(_11726_s.get()._field_directives,jule::Str("typedef", 7))) {
			return _11726_s.get()._field_ident;
		};
		return (jule::Str("struct ", 7) + _11726_s.get()._field_ident);
	};
	return static__1ca4ab90d_to_out(_11726_s.get()._field_ident,static_cast<jule::U64>(static_cast<jule::U64>(_11726_s)));
}



inline jule::Str static__1ca4acdb5_structure_ins(jule::Ptr<_1e43462ea_StructIns>& _12830_s) {
	if ((_12830_s.get()._field_decl.get()._field_cpp_linked || (_12830_s.get()._field_generics.len() == 0LL))) {
		return static__1ca4acb1d_structure(_12830_s.get()._field_decl);
	};
	return static__1ca4ab90d_to_out(_12830_s.get()._field_decl.get()._field_ident,static_cast<jule::U64>(static_cast<jule::U64>(_12830_s)));
}



inline jule::Str static__1ca4ad15c_field(jule::Ptr<_1e43542c5_Field>& _13622_f) {
	if (_13622_f.get()._field_owner.get()._field_cpp_linked) {
		return _13622_f.get()._field_ident;
	};
	return (jule::Str("_field_", 7) + _13622_f.get()._field_ident);
}



inline jule::Str static__1ca4ad404_var(jule::Ptr<_1e46c6eb6_Var> _14423_v) {
	{
		
		if (_14423_v.get()._field_cpp_linked) {
			_case_begin_1cdad410e:;
			{
				return _14423_v.get()._field_ident;
			}
		}
		else if ((_14423_v.get()._field_ident == jule::Str("error", 5))) {
			_case_begin_1cdad33a5:;
			{
				return jule::Str("except.error", 12);
			}
		}
		else if ((_14423_v.get()._field_ident == jule::Str("self", 4))) {
			_case_begin_1cdad341b:;
			{
				if ((_1c9776a20_sptr(_14423_v.get()._field_kind.get()._field_kind.ptr()) == nullptr)) {
					return jule::Str("(*_self_)", 9);
				};
				return jule::Str("_self_", 6);
			}
		}
		else if ((_14423_v.get()._field_scope != nullptr)) {
			_case_begin_1cdad3482:;
			{
				return static__1ca4abce8_to_local(_14423_v.get()._field_token.get()._field_row,_14423_v.get()._field_token.get()._field_column,_14423_v.get()._field_ident);
			}
		}
		else {
			_case_begin_1cdad333e:;
			{
				return static__1ca4ab90d_to_out(_14423_v.get()._field_ident,static_cast<jule::U64>(static_cast<jule::U64>(_14423_v)));
			}
		}
		_match_end_1cdad29e2:;
	};
}



inline jule::Str static__1ca4ad69b_iter_begin(jule::U64 _16326_it) {
	jule::Str _16417_obj = jule::Str::alloc(30LL);;
	_16417_obj+=jule::Str("_iter_begin_", 12);
	_16417_obj+=_1e5c30908_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_16326_it)),15LL);
	return _16417_obj;
}



inline jule::Str static__1ca4ad943_iter_end(jule::U64 _17124_it) {
	jule::Str _17217_obj = jule::Str::alloc(30LL);;
	_17217_obj+=jule::Str("_iter_end_", 10);
	_17217_obj+=_1e5c30908_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_17124_it)),15LL);
	return _17217_obj;
}



inline jule::Str static__1ca4adbda_iter_next(jule::U64 _17925_it) {
	jule::Str _18017_obj = jule::Str::alloc(30LL);;
	_18017_obj+=jule::Str("_iter_next_", 11);
	_18017_obj+=_1e5c30908_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_17925_it)),15LL);
	return _18017_obj;
}



inline jule::Str static__1ca4ade82_label(jule::Str& _18722_ident) {
	jule::Str _18817_obj = jule::Str::alloc(30LL);;
	_18817_obj+=jule::Str("_julec_label_", 13);
	_18817_obj+=_18722_ident;
	return _18817_obj;
}



inline jule::Str static__1ca4ae229_match_end(jule::U64 _19525_m) {
	jule::Str _19617_obj = jule::Str::alloc(30LL);;
	_19617_obj+=jule::Str("_match_end_", 11);
	_19617_obj+=_1e5c30908_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_19525_m)),15LL);
	return _19617_obj;
}



inline jule::Str static__1ca4ae4c1_case_begin(jule::U64 _20326_c) {
	jule::Str _20417_obj = jule::Str::alloc(30LL);;
	_20417_obj+=jule::Str("_case_begin_", 12);
	_20417_obj+=_1e5c30908_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_20326_c)),15LL);
	return _20417_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1ca4ab402_IdentCoder _Src) {
	_Stream << "IdentCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ca4e41e8_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "compiler:" << _Src._field_compiler << ", ";
	_Stream << "compiler_command:" << _Src._field_compiler_command;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ca4d7a49_TraitHash _Src) {
	_Stream << "TraitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ca526802_to_str(_1ca526516_CustomType* _self_) {
	return (*_self_)._field_kind;
}



inline jule::Bool _1ca526b10_equals(jule::Ptr<_1ca526516_CustomType> _self_, jule::Ptr<_1c97746ee_TypeKind> _3826_k) {
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1ca526516_CustomType _Src) {
	_Stream << _1ca526802_to_str(&_Src);
	return _Stream;
}



inline jule::Str static__1ca52734c_to_type(jule::Str _5827_id) {
	_5827_id=_1e4677eab_real_kind_of(_5827_id);
	if (((97LL <= _5827_id[0LL]) && (_5827_id[0LL] <= 122LLU))) {
		_5827_id[0LL]-=32LLU;
	};
	return (jule::Str("jule::", 6) + _5827_id);
}



inline jule::Str static__1ca5275e4_prim(jule::Ptr<_1c9778e51_Prim> _6720_p) {
	return static__1ca52734c_to_type(_1c97792b4_to_str(_6720_p.ptr()));
}



inline jule::Str static__1ca52788b_tuple(jule::Ptr<_1c977d8b2_Tuple> _7225_t) {
	jule::Str _7317_obj = jule::Str("std::tuple<", 11);;
	{
		auto &expr = _7225_t.get()._field_types;
		auto it = expr.begin();
		_iter_begin_1cdbcd329:;
		if (it != expr.end()) {
			jule::Ptr<_1c97746ee_TypeKind> _7421_tk = *it;
			{
				_7317_obj+=static__1ca52b131_kind(_7421_tk);
				_7317_obj+=jule::Str(",", 1);
			}
			_iter_next_1cdbcd329:;
			++it;
			goto _iter_begin_1cdbcd329;
		}
		_iter_end_1cdbcd329:;
	};
	(_7317_obj).mut_slice(0LL,(_7317_obj.len() - 1LL));;
	_7317_obj+=jule::Str(">", 1);
	return _7317_obj;
}



inline jule::Str static__1ca527b33_as_sptr(jule::Str _8423_elem) {
	jule::Str _8517_obj = jule::Str("jule::Ptr<", 10);;
	_8517_obj+=_8423_elem;
	_8517_obj+=jule::Str(">", 1);
	return _8517_obj;
}



inline jule::Str static__1ca527dca_as_ptr(jule::Str _9222_elem) {
	return (_9222_elem + jule::Str("*", 1));
}



inline jule::Str static__1ca528172_sptr(jule::Ptr<_1c977c460_Sptr> _9724_sptr) {
	return static__1ca527b33_as_sptr(static__1ca52b131_kind(_9724_sptr.get()._field_elem));
}



inline jule::Str static__1ca528419_ptr(jule::Ptr<_1c97809c4_Ptr> _10223_p) {
	;
	if (_1c9781497_is_unsafe(_10223_p.ptr())) {
		return jule::Str("void*", 5);
	};
	jule::Str _10717_elem = static__1ca52b131_kind(_10223_p.get()._field_elem);;
	_10717_elem+=jule::Str("*", 1);
	return _10717_elem;
}



inline jule::Str static__1ca5286b1_enum_decl(jule::Ptr<_1e4456b58_Enum> _11329_e) {
	return static__1ca52b131_kind(_11329_e.get()._field_kind.get()._field_kind);
}



inline jule::Str static__1ca528958_as_slice(jule::Ptr<_1c97746ee_TypeKind> _11728_elem) {
	jule::Str _11817_obj = jule::Str("jule::Slice<", 12);;
	_11817_obj+=static__1ca52b131_kind(_11728_elem);
	_11817_obj+=jule::Str(">", 1);
	return _11817_obj;
}



inline jule::Str static__1ca528c00_slice(jule::Ptr<_1c977cdbc_Slc> _12525_s) {
	return static__1ca528958_as_slice(_12525_s.get()._field_elem);
}



inline jule::Str static__1ca528e97_map(jule::Ptr<_1c977e473_Map> _13023_m) {
	jule::Str _13117_obj = jule::Str("jule::Map<", 10);;
	_13117_obj+=static__1ca52b131_kind(_13023_m.get()._field_key);
	_13117_obj+=jule::Str(",", 1);
	_13117_obj+=static__1ca52b131_kind(_13023_m.get()._field_val);
	_13117_obj+=jule::Str(">", 1);
	return _13117_obj;
}



inline jule::Str static__1ca52923e_trait_ident(jule::Str _13927_ident) {
	jule::Str _14017_obj = jule::Str("jule::Trait<", 12);;
	_14017_obj+=_13927_ident;
	_14017_obj+=jule::Str(">", 1);
	return _14017_obj;
}



inline jule::Str static__1ca5294d6_trait_decl(jule::Ptr<_1e43d8d0a_Trait> _14726_t) {
	return static__1ca52923e_trait_ident(static__1ca4ac5ce_trait_decl(_14726_t));
}



inline jule::Str static__1ca52977d_structure(jule::Ptr<_1e43360cb_Struct> _15225_s) {
	jule::Str _15317_rep = jule::Str();;
	if ((_15225_s.get()._field_cpp_linked && (!(_1ca52d2dc_has_directive(_15225_s.get()._field_directives,jule::Str("typedef", 7)))))) {
		_15317_rep+=jule::Str("struct ", 7);
	};
	_15317_rep+=static__1ca4acb1d_structure(_15225_s);
	return _15317_rep;
}



inline jule::Str static__1ca529a25_structure_ins(jule::Ptr<_1e43462ea_StructIns> _16233_s) {
	if (_16233_s.get()._field_decl.get()._field_cpp_linked) {
		jule::Str _16421_ident = static__1ca4acdb5_structure_ins(_16233_s);;
		if ((_16233_s.get()._field_generics.len() > 0LL)) {
			_16421_ident+=jule::Str("<", 1);
			{
				auto &expr = _16233_s.get()._field_generics;
				auto it = expr.begin();
				_iter_begin_1cdbdaaea:;
				if (it != expr.end()) {
					jule::Ptr<_1c97746ee_TypeKind> _16729_g = *it;
					{
						_16421_ident+=static__1ca52b131_kind(_16729_g);
						_16421_ident+=jule::Str(",", 1);
					}
					_iter_next_1cdbdaaea:;
					++it;
					goto _iter_begin_1cdbdaaea;
				}
				_iter_end_1cdbdaaea:;
			};
			(_16421_ident).mut_slice(0LL,(_16421_ident.len() - 1LL));;
			_16421_ident+=jule::Str(">", 1);
		};
		jule::Ptr<_1e43620c4_Directive> _17417_d = _1ca52ce57_find_directive(_16233_s.get()._field_decl.get()._field_directives,jule::Str("namespace", 9));;
		if ((_17417_d != nullptr)) {
			(_16421_ident).buffer.insert(0, ((_1ca5255ae_concat_all_parts(_17417_d.get()._field_args) + jule::Str("::", 2))));;
		};
		return _16421_ident;
	};
	return static__1ca4acdb5_structure_ins(_16233_s);
}



inline jule::Str static__1ca529cbc_array(jule::Ptr<_1c9780067_Arr> _18425_a) {
	jule::Str _18517_obj = jule::Str("jule::Array<", 12);;
	_18517_obj+=static__1ca52b131_kind(_18425_a.get()._field_elem);
	_18517_obj+=jule::Str(",", 1);
	_18517_obj+=_1e5c30b6c_itoa(_18425_a.get()._field_n);
	_18517_obj+=jule::Str(">", 1);
	return _18517_obj;
}



inline jule::Str static__1ca52a30b_param_ins(jule::Ptr<_1e438217c_ParamIns>& _21030_p) {
	jule::Str _21117_obj = jule::Str();;
	if (_21030_p.get()._field_decl.get()._field_variadic) {
		_21117_obj+=jule::Str("jule::Slice<", 12);
		_21117_obj+=static__1ca52b131_kind(_21030_p.get()._field_kind);
		_21117_obj+=jule::Str(">", 1);
	} else {
		_21117_obj+=static__1ca52b131_kind(_21030_p.get()._field_kind);
	};
	if (_21030_p.get()._field_decl.get()._field_reference) {
		_21117_obj+=jule::Str("&", 1);
	};
	return _21117_obj;
}



inline jule::Str static__1ca52a84a_func_ins_result(jule::Ptr<_1e4383018_FnIns>& _24036_f) {
	if (_1e43807c9_is_void(_24036_f.get()._field_decl.ptr())) {
		if (_24036_f.get()._field_decl.get()._field_exceptional) {
			return jule::Str("jule::VoidExceptional", 21);
		};
		return jule::Str("void", 4);
	};
	if (_24036_f.get()._field_decl.get()._field_exceptional) {
		return ((jule::Str("jule::Exceptional<", 18) + static__1ca52b131_kind(_24036_f.get()._field_result)) + jule::Str(">", 1));
	};
	return static__1ca52b131_kind(_24036_f.get()._field_result);
}



inline jule::Str static__1ca52aae2_anon_func(jule::Ptr<_1e4383018_FnIns> _25329_f) {
	jule::Str _25417_decl = static__1ca52a84a_func_ins_result(_25329_f);;
	_25417_decl+=jule::Str("(", 1);
	if ((_25329_f.get()._field_params.len() > 0LL)) {
		{
			auto &expr = _25329_f.get()._field_params;
			auto it = expr.begin();
			_iter_begin_1cdbe80be:;
			if (it != expr.end()) {
				jule::Ptr<_1e438217c_ParamIns> _25725_param = *it;
				{
					if (_1e435279b_is_self(_25725_param.get()._field_decl.ptr())) {
						goto _iter_next_1cdbe80be;
					};
					_25417_decl+=static__1ca52a30b_param_ins(_25725_param);
					_25417_decl+=jule::Str(",", 1);
				}
				_iter_next_1cdbe80be:;
				++it;
				goto _iter_begin_1cdbe80be;
			}
			_iter_end_1cdbe80be:;
		};
		(_25417_decl).mut_slice(0LL,(_25417_decl.len() - 1LL));;
	} else {
		_25417_decl+=jule::Str("void", 4);
	};
	_25417_decl+=jule::Str(")", 1);
	return _25417_decl;
}



inline jule::Str static__1ca52ad89_func(jule::Ptr<_1e4383018_FnIns> _27324_f) {
	jule::Str _27417_obj = jule::Str("jule::Fn<", 9);;
	_27417_obj+=static__1ca52aae2_anon_func(_27324_f);
	_27417_obj+=jule::Str(">", 1);
	return _27417_obj;
}



inline jule::Str static__1ca52b131_kind(jule::Ptr<_1c97746ee_TypeKind> _28124_k) {
	{
		
		if (_1c9775359_cpp_linked(_28124_k.ptr())) {
			_case_begin_1cdbea984:;
			{
				return _28124_k.get()._field_cpp_ident;
			}
		}
		else if ((_1c97767ab_prim(_28124_k.ptr()) != nullptr)) {
			_case_begin_1cdbeaa0b:;
			{
				return static__1ca5275e4_prim(_1c97767ab_prim(_28124_k.ptr()));
			}
		}
		else if ((_1c97781d6_tup(_28124_k.ptr()) != nullptr)) {
			_case_begin_1cdbeaa83:;
			{
				return static__1ca52788b_tuple(_1c97781d6_tup(_28124_k.ptr()));
			}
		}
		else if ((_1c9776a20_sptr(_28124_k.ptr()) != nullptr)) {
			_case_begin_1cdbeab0a:;
			{
				return static__1ca528172_sptr(_1c9776a20_sptr(_28124_k.ptr()));
			}
		}
		else if ((_1c9776c84_ptr(_28124_k.ptr()) != nullptr)) {
			_case_begin_1cdbeab82:;
			{
				return static__1ca528419_ptr(_1c9776c84_ptr(_28124_k.ptr()));
			}
		}
		else if ((_1c9776ee8_enm(_28124_k.ptr()) != nullptr)) {
			_case_begin_1cdbeac09:;
			{
				return static__1ca5286b1_enum_decl(_1c9776ee8_enm(_28124_k.ptr()));
			}
		}
		else if ((_1c97774c1_slc(_28124_k.ptr()) != nullptr)) {
			_case_begin_1cdbeac81:;
			{
				return static__1ca528c00_slice(_1c97774c1_slc(_28124_k.ptr()));
			}
		}
		else if ((_1c9777e72_map(_28124_k.ptr()) != nullptr)) {
			_case_begin_1cdbead08:;
			{
				return static__1ca528e97_map(_1c9777e72_map(_28124_k.ptr()));
			}
		}
		else if ((_1c9777c0d_trt(_28124_k.ptr()) != nullptr)) {
			_case_begin_1cdbead80:;
			{
				return static__1ca5294d6_trait_decl(_1c9777c0d_trt(_28124_k.ptr()));
			}
		}
		else if ((_1c9777999_strct(_28124_k.ptr()) != nullptr)) {
			_case_begin_1cdbeae07:;
			{
				return static__1ca529a25_structure_ins(_1c9777999_strct(_28124_k.ptr()));
			}
		}
		else if ((_1c977725c_arr(_28124_k.ptr()) != nullptr)) {
			_case_begin_1cdbeae7e:;
			{
				return static__1ca529cbc_array(_1c977725c_arr(_28124_k.ptr()));
			}
		}
		else if ((_1c9777735_fnc(_28124_k.ptr()) != nullptr)) {
			_case_begin_1cdbeb006:;
			{
				return static__1ca52ad89_func(_1c9777735_fnc(_28124_k.ptr()));
			}
		}
		_match_end_1cdbea7b9:;
	};
	{
		auto &_match_expr{ _28124_k.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ca526516_CustomType>>()) {
			_case_begin_1cdc03bbd:;
			{
				return _28124_k.get()._field_kind.operator jule::Ptr<_1ca526516_CustomType>().get()._field_kind;
			}
		}
		else {
			_case_begin_1cdc026d3:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);
			}
		}
		_match_end_1cdc03173:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ca526d30_TypeCoder _Src) {
	_Stream << "TypeCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1cdc1e502_name(_1cdc1e216_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1cdc1e645_what(_1cdc1e216_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1cdc1e788_reset(_1cdc1e216_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1cdc1e8cb_short(_1cdc1e216_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1cdc1e216_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1cdc22307_name(_1cdc22c75_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1cdc22901_what(_1cdc22c75_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1cdc2303e_reset(_1cdc22c75_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1cdc23171_short(_1cdc22c75_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1cdc22c75_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1cdc258b0_name(_1cdc2632d_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1cdc25ea9_what(_1cdc2632d_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1cdc265e7_reset(_1cdc2632d_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1cdc26729_short(_1cdc2632d_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1cdc2632d_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1cdc28eac_name(_1cdc2992a_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1cdc295a6_what(_1cdc2992a_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1cdc29be4_reset(_1cdc2992a_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1cdc29d26_short(_1cdc2992a_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1cdc2992a_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1cdc2c565_name(_1cdc2ced3_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1cdc2cb5e_what(_1cdc2ced3_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1cdc2d29c_reset(_1cdc2ced3_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1cdc2d3ce_short(_1cdc2ced3_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1cdc2ced3_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ca6ca81e_FlagSet> static__1ca6cab0a_new(void) {
	return jule::new_ptr<_1ca6ca81e_FlagSet>(_1ca6ca81e_FlagSet{._field__flags=jule::Slice<jule::Trait<_1ca6c8dd3_CommonFlag>>::alloc(0LL,20LL)});
}



inline jule::Trait<_1ca6c8dd3_CommonFlag> _1ca6cb0c2_find_flag(_1ca6ca81e_FlagSet* _self_, jule::Str _7132_name) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1cdc34737:;
		if (it != expr.end()) {
			jule::Trait<_1ca6c8dd3_CommonFlag> _7221_flag = *it;
			{
				if ((_1ca6c8dd3_CommonFlag_mptr_data[(_7221_flag).type_offset]._1ca536867_name(_7221_flag) == _7132_name)) {
					return _7221_flag;
				};
			}
			_iter_next_1cdc34737:;
			++it;
			goto _iter_begin_1cdc34737;
		}
		_iter_end_1cdc34737:;
	};
	return nullptr;
}



inline jule::Trait<_1ca6c8dd3_CommonFlag> _1ca6cb3d0_find_flag_short(_1ca6ca81e_FlagSet* _self_, jule::I32 _8138_name) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1cdc35b34:;
		if (it != expr.end()) {
			jule::Trait<_1ca6c8dd3_CommonFlag> _8221_flag = *it;
			{
				if ((_1ca6c8dd3_CommonFlag_mptr_data[(_8221_flag).type_offset]._1ca536999_short(_8221_flag) == _8138_name)) {
					return _8221_flag;
				};
			}
			_iter_next_1cdc35b34:;
			++it;
			goto _iter_begin_1cdc35b34;
		}
		_iter_end_1cdc35b34:;
	};
	return nullptr;
}



inline jule::Slice<jule::Trait<_1ca6c8dd3_CommonFlag>> _1ca6cb644_flags(_1ca6ca81e_FlagSet* _self_) {
	return (*_self_)._field__flags;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1ca6cb952_parse(_1ca6ca81e_FlagSet* _self_, jule::Slice<jule::Str> _11528_args) {
	_1ca6cd02a_ArgParser _11617_ap = _1ca6cd02a_ArgParser{._field_set=(*_self_), ._field_args=_11528_args, };;
	({
		auto except = _1ca6ce416_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(),_11617_ap._field_content);
}



inline void _1ca6cbb2d_reset(_1ca6ca81e_FlagSet* _self_) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1cdc39671:;
		if (it != expr.end()) {
			jule::Trait<_1ca6c8dd3_CommonFlag> _12616_f = *it;
			{
				_1ca6c8dd3_CommonFlag_mptr_data[(_12616_f).type_offset]._1ca6c8ca1_reset(_12616_f);
			}
			_iter_next_1cdc39671:;
			++it;
			goto _iter_begin_1cdc39671;
		}
		_iter_end_1cdc39671:;
	};
}



inline jule::Ptr<_1cdc2ced3_Flag> _1cdca2981_add_flag_common(_1ca6ca81e_FlagSet* _self_, jule::Str _13141_name, jule::I32 _13152_short, jule::Str _13165_what) {
	{
		
{
			_case_begin_1cdca43de:;
			{
				goto _match_end_1cdca4389;
			}
		}
		_match_end_1cdca4389:;
	};
	if ((_1ca6cb0c2_find_flag(&(*_self_), _13141_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _13141_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13152_short != 0LL) && (_1ca6cb3d0_find_flag_short(&(*_self_), _13152_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13152_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1cdc2ced3_Flag> _14817_flag = jule::new_ptr<_1cdc2ced3_Flag>(_1cdc2ced3_Flag{._field__name=_13141_name, ._field__short=_13152_short, ._field__what=_13165_what, });;
	(*_self_)._field__flags = jule::alloc_for_append((*_self_)._field__flags,1);(*_self_)._field__flags.__push(jule::Trait<_1ca6c8dd3_CommonFlag>(_14817_flag, 4));;
	return _14817_flag;
}

inline jule::Ptr<_1cdc2992a_Flag> _1cdcabb44_add_flag_common(_1ca6ca81e_FlagSet* _self_, jule::Str _13141_name, jule::I32 _13152_short, jule::Str _13165_what) {
	{
		
{
			_case_begin_1cdcad55d:;
			{
				goto _match_end_1cdcad508;
			}
		}
		_match_end_1cdcad508:;
	};
	if ((_1ca6cb0c2_find_flag(&(*_self_), _13141_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _13141_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13152_short != 0LL) && (_1ca6cb3d0_find_flag_short(&(*_self_), _13152_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13152_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1cdc2992a_Flag> _14817_flag = jule::new_ptr<_1cdc2992a_Flag>(_1cdc2992a_Flag{._field__name=_13141_name, ._field__short=_13152_short, ._field__what=_13165_what, });;
	(*_self_)._field__flags = jule::alloc_for_append((*_self_)._field__flags,1);(*_self_)._field__flags.__push(jule::Trait<_1ca6c8dd3_CommonFlag>(_14817_flag, 3));;
	return _14817_flag;
}



inline void _1cdca02db_add_var(_1ca6ca81e_FlagSet* _self_, jule::Ptr<jule::Str> _17537_var, jule::Str _17546_name, jule::I32 _17557_short, jule::Str _17570_what) {
	jule::Ptr<_1cdc2ced3_Flag> _17617_flag = _1cdca2981_add_flag_common(&(*_self_), _17546_name,_17557_short,_17570_what);;
	_17617_flag.get()._field__default=(*(_17537_var));
	_17617_flag.get()._field__data=_17537_var;
}

inline void _1cdca94d2_add_var(_1ca6ca81e_FlagSet* _self_, jule::Ptr<jule::Bool> _17537_var, jule::Str _17546_name, jule::I32 _17557_short, jule::Str _17570_what) {
	jule::Ptr<_1cdc2992a_Flag> _17617_flag = _1cdcabb44_add_flag_common(&(*_self_), _17546_name,_17557_short,_17570_what);;
	_17617_flag.get()._field__default=(*(_17537_var));
	_17617_flag.get()._field__data=_17537_var;
}







std::ostream &operator<<(std::ostream &_Stream, _1ca6ca81e_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "_flags:" << _Src._field__flags;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Ptr<_1e498133b_IR>,jule::Slice<_20ca8ec5b_Log>> static__1c9e5ee83_build(jule::Str _2825_path, jule::I64 _2836_flags) {
	jule::Ptr<_1c9e46563_JuleImporter> _2917_importer = static__1e498b852_new(_1e4991aee_build_compile_info());;
	jule::Slice<jule::Ptr<_1e433079b_Ast>> _3018_files;;
	jule::Slice<_20ca8ec5b_Log> _3029_logs;;
	std::tie(_3018_files,_3029_logs) = _1c9dadcb1_import_package(_2917_importer.ptr(), _2825_path,true);
	if ((_3029_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_3029_logs);
	};
	jule::Str _3413_root = _2825_path;;
	if ((_3018_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Ptr<_1e46a742a_Package> _4018_pkg;;
	std::tie(_4018_pkg,_3029_logs) = _1c9790121_analyze_package(_3018_files,jule::Trait<_1e46a2403_Importer>(_2917_importer, 0),_2836_flags);
	if ((_3029_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_3029_logs);
	};
	jule::Ptr<_1e498133b_IR> _4517_ir = jule::new_ptr<_1e498133b_IR>(_1e498133b_IR{._field_root=_3413_root, ._field_main=_4018_pkg, ._field_used=_1e49a52b6_all_packages(_2917_importer.ptr()), });;
	_4517_ir.get()._field_passes=_1e4987485_get_all_unique_passes(_4517_ir.get()._field_main,_4517_ir.get()._field_used);
	return std::make_tuple(_4517_ir,nullptr);
}



inline void _1c9e754b5_append_structs(_1e498133b_IR* _self_, jule::Ptr<_1e46a742a_Package>& _5734_p, jule::Slice<jule::Ptr<_1e43360cb_Struct>>& _5758_buffer) {
	{
		auto &expr = _5734_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1cc555103:;
		if (it != expr.end()) {
			jule::Ptr<_1c9745c42_SymbolTable> _5821_f = *it;
			{
				{
					auto &expr = _5821_f.get()._field_structs;
					auto it = expr.begin();
					_iter_begin_1cc5558a6:;
					if (it != expr.end()) {
						jule::Ptr<_1e43360cb_Struct> _5925_s = *it;
						{
							if ((!(_5925_s.get()._field_cpp_linked))) {
								_5758_buffer = jule::alloc_for_append(_5758_buffer,1);_5758_buffer.__push(_5925_s);;
							};
						}
						_iter_next_1cc5558a6:;
						++it;
						goto _iter_begin_1cc5558a6;
					}
					_iter_end_1cc5558a6:;
				};
			}
			_iter_next_1cc555103:;
			++it;
			goto _iter_begin_1cc555103;
		}
		_iter_end_1cc555103:;
	};
}



inline jule::Slice<jule::Ptr<_1e43360cb_Struct>> _1c9d8da93_get_all_structures(_1e498133b_IR* _self_) {
	jule::Slice<jule::Ptr<_1e43360cb_Struct>> _7017_buffer = nullptr;;
	_1c9e754b5_append_structs(&(*_self_), (*_self_)._field_main,_7017_buffer);
	{
		auto &expr = (*_self_)._field_used;
		auto it = expr.begin();
		_iter_begin_1cc557237:;
		if (it != expr.end()) {
			jule::Ptr<_1e46a4768_ImportInfo> _7221_u = *it;
			{
				if ((!(_7221_u.get()._field_cpp_linked))) {
					_1c9e754b5_append_structs(&(*_self_), _7221_u.get()._field_package,_7017_buffer);
				};
			}
			_iter_next_1cc557237:;
			++it;
			goto _iter_begin_1cc557237;
		}
		_iter_end_1cc557237:;
	};
	return _7017_buffer;
}



inline void _1c9e0a390_append_globals(_1e498133b_IR* _self_, jule::Ptr<_1e46a742a_Package>& _8034_p, jule::Slice<jule::Ptr<_1e46c6eb6_Var>>& _8058_buffer) {
	{
		auto &expr = _8034_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1cc558da4:;
		if (it != expr.end()) {
			jule::Ptr<_1c9745c42_SymbolTable> _8121_f = *it;
			{
				{
					auto &expr = _8121_f.get()._field_vars;
					auto it = expr.begin();
					_iter_begin_1cc559657:;
					if (it != expr.end()) {
						jule::Ptr<_1e46c6eb6_Var> _8225_v = *it;
						{
							if ((((_8225_v.get()._field_token != nullptr) && (!(_8225_v.get()._field_cpp_linked))) && (!(_8225_v.get()._field_constant)))) {
								_8058_buffer = jule::alloc_for_append(_8058_buffer,1);_8058_buffer.__push(_8225_v);;
							};
						}
						_iter_next_1cc559657:;
						++it;
						goto _iter_begin_1cc559657;
					}
					_iter_end_1cc559657:;
				};
			}
			_iter_next_1cc558da4:;
			++it;
			goto _iter_begin_1cc558da4;
		}
		_iter_end_1cc558da4:;
	};
}



inline jule::Slice<jule::Ptr<_1e46c6eb6_Var>> _1c9e21a9e_get_all_globals(_1e498133b_IR* _self_) {
	jule::Slice<jule::Ptr<_1e46c6eb6_Var>> _9317_buffer = nullptr;;
	_1c9e0a390_append_globals(&(*_self_), (*_self_)._field_main,_9317_buffer);
	{
		auto &expr = (*_self_)._field_used;
		auto it = expr.begin();
		_iter_begin_1cc55b604:;
		if (it != expr.end()) {
			jule::Ptr<_1e46a4768_ImportInfo> _9521_u = *it;
			{
				if ((!(_9521_u.get()._field_cpp_linked))) {
					_1c9e0a390_append_globals(&(*_self_), _9521_u.get()._field_package,_9317_buffer);
				};
			}
			_iter_next_1cc55b604:;
			++it;
			goto _iter_begin_1cc55b604;
		}
		_iter_end_1cc55b604:;
	};
	return _9317_buffer;
}



inline void _1e49740cb_order(_1e498133b_IR* _self_) {
	(*_self_)._field_ordered._field_structs=_1c9d8da93_get_all_structures(&(*_self_));
	(*_self_)._field_ordered._field_globals=_1c9e21a9e_get_all_globals(&(*_self_));
	static__1c9de2157_order_structures((*_self_)._field_ordered._field_structs);
	static__1c9e68354_order_vars((*_self_)._field_ordered._field_globals);
}







std::ostream &operator<<(std::ostream &_Stream, _1e498133b_IR _Src) {
	_Stream << "IR{";
	_Stream << "root:" << _Src._field_root << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "main:" << _Src._field_main << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "ordered:" << _Src._field_ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e4339de3_to_str(_1e43462ea_StructIns* _self_) {
	jule::Str _24317_kind = jule::Str();;
	_24317_kind+=(*_self_)._field_decl.get()._field_ident;
	if (((*_self_)._field_generics.len() > 0LL)) {
		_24317_kind+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_generics;
			auto it = expr.begin();
			_iter_begin_1cb72357a:;
			if (it != expr.end()) {
				jule::Ptr<_1c97746ee_TypeKind> &_24720_g = *it;
				{
					_24317_kind+=_1c9774aa6_to_str(_24720_g.ptr());
					_24317_kind+=jule::Str(",", 1);
				}
				_iter_next_1cb72357a:;
				++it;
				goto _iter_begin_1cb72357a;
			}
			_iter_end_1cb72357a:;
		};
		(_24317_kind).mut_slice(0LL,(_24317_kind.len() - 1LL));;
		_24317_kind+=jule::Str("]", 1);
	};
	return _24317_kind;
}



inline jule::Bool _1e4355260_equals(jule::Ptr<_1e43462ea_StructIns> _self_, jule::Ptr<_1c97746ee_TypeKind> _25826_other) {
	jule::Ptr<_1e43462ea_StructIns> _25913_s = _1c9777999_strct(_25826_other.ptr());;
	if ((_25913_s == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_decl != _25913_s.get()._field_decl)) {
		return false;
	};
	if ((_self_.get()._field_generics.len() != _25913_s.get()._field_generics.len())) {
		return false;
	};
	jule::I64 _27217_i = 0LL;;
	for (; (_27217_i < _self_.get()._field_generics.len()); (_27217_i)++) {
		{
			if ((!(_1c9774db4_equals(_self_.get()._field_generics[_27217_i], _25913_s.get()._field_generics[_27217_i])))) {
				return false;
			};
		}
	_iter_next_1cb7278ae:;
	}
	_iter_end_1cb7278ae:;;
	return true;
}



inline jule::Bool _1e4356470_same(_1e43462ea_StructIns* _self_, jule::Ptr<_1e43462ea_StructIns> _28623_s) {
	if ((((*_self_)._field_decl != _28623_s.get()._field_decl) || (_28623_s.get()._field_generics.len() != (*_self_)._field_generics.len()))) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_generics;
		auto it = expr.begin();
		_iter_begin_1cb72a241:;
		if (it != expr.end()) {
			jule::I64 _29113_i = it - expr.begin();
			jule::Ptr<_1c97746ee_TypeKind> &_29116_g = *it;
			{
				if ((!(_1c9774db4_equals(_29116_g, _28623_s.get()._field_generics[_29113_i])))) {
					return false;
				};
			}
			_iter_next_1cb72a241:;
			++it;
			_29113_i++;
			goto _iter_begin_1cb72a241;
		}
		_iter_end_1cb72a241:;
	};
	return true;
}



inline jule::Ptr<_1e4380576_Fn> _1e4342758_find_method(_1e43462ea_StructIns* _self_, jule::Str _30134_ident, jule::Bool _30146_statically) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1cb72c1bb:;
		if (it != expr.end()) {
			jule::Ptr<_1e4380576_Fn> _30221_f = *it;
			{
				if (((_30221_f.get()._field_statically == _30146_statically) && (_30221_f.get()._field_ident == _30134_ident))) {
					return _30221_f;
				};
			}
			_iter_next_1cb72c1bb:;
			++it;
			goto _iter_begin_1cb72c1bb;
		}
		_iter_end_1cb72c1bb:;
	};
	return nullptr;
}



inline jule::Ptr<_1e434014b_FieldIns> _1e4356b35_find_field(_1e43462ea_StructIns* _self_, jule::Str _31233_ident) {
	{
		auto &expr = (*_self_)._field_fields;
		auto it = expr.begin();
		_iter_begin_1cb72d909:;
		if (it != expr.end()) {
			jule::Ptr<_1e434014b_FieldIns> _31321_f = *it;
			{
				if ((_31321_f.get()._field_decl.get()._field_ident == _31233_ident)) {
					return _31321_f;
				};
			}
			_iter_next_1cb72d909:;
			++it;
			goto _iter_begin_1cb72d909;
		}
		_iter_end_1cb72d909:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1e43462ea_StructIns _Src) {
	_Stream << _1e4339de3_to_str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1ca02928e_ObjectDeadCode> static__1ca05a18d_new(jule::Ptr<_1e498133b_IR>& _3124_ir) {
	return jule::new_ptr<_1ca02928e_ObjectDeadCode>(_1ca02928e_ObjectDeadCode{._field_ir=_3124_ir});
}



inline jule::Bool _1cc580309_is_live(jule::Ptr<_1ca02928e_ObjectDeadCode> _self_, jule::Ptr<_1e4383018_FnIns>& _3731_t) {
	jule::Slice<jule::Ptr<_1e4383018_FnIns>> _3817_live = nullptr;;
	{
		
{
			_case_begin_1cc581a7a:;
			{
				_3817_live=_self_.get()._field_live._field_fns;
			}
		}
		_match_end_1cc581a25:;
	};
	{
		auto &expr = _3817_live;
		auto it = expr.begin();
		_iter_begin_1cc582828:;
		if (it != expr.end()) {
			jule::I64 _4713_i = it - expr.begin();
			{
				if ((_3817_live[_4713_i] == _3731_t)) {
					return true;
				};
			}
			_iter_next_1cc582828:;
			++it;
			_4713_i++;
			goto _iter_begin_1cc582828;
		}
		_iter_end_1cc582828:;
	};
	return false;
}

inline jule::Bool _1cc584d58_is_live(jule::Ptr<_1ca02928e_ObjectDeadCode> _self_, jule::Ptr<_1e43462ea_StructIns>& _3731_t) {
	jule::Slice<jule::Ptr<_1e43462ea_StructIns>> _3817_live = nullptr;;
	{
		
{
			_case_begin_1cc5872bc:;
			{
				_3817_live=_self_.get()._field_live._field_structs;
			}
		}
		_match_end_1cc587047:;
	};
	{
		auto &expr = _3817_live;
		auto it = expr.begin();
		_iter_begin_1cc587dd3:;
		if (it != expr.end()) {
			jule::I64 _4713_i = it - expr.begin();
			{
				if ((_3817_live[_4713_i] == _3731_t)) {
					return true;
				};
			}
			_iter_next_1cc587dd3:;
			++it;
			_4713_i++;
			goto _iter_begin_1cc587dd3;
		}
		_iter_end_1cc587dd3:;
	};
	return false;
}

inline jule::Bool _1cc58c1c3_is_live(jule::Ptr<_1ca02928e_ObjectDeadCode> _self_, jule::Ptr<_1e46c6eb6_Var>& _3731_t) {
	jule::Slice<jule::Ptr<_1e46c6eb6_Var>> _3817_live = nullptr;;
	{
		
{
			_case_begin_1cc58d9dd:;
			{
				_3817_live=_self_.get()._field_live._field_vars;
			}
		}
		_match_end_1cc58d922:;
	};
	{
		auto &expr = _3817_live;
		auto it = expr.begin();
		_iter_begin_1cc58d977:;
		if (it != expr.end()) {
			jule::I64 _4713_i = it - expr.begin();
			{
				if ((_3817_live[_4713_i] == _3731_t)) {
					return true;
				};
			}
			_iter_next_1cc58d977:;
			++it;
			_4713_i++;
			goto _iter_begin_1cc58d977;
		}
		_iter_end_1cc58d977:;
	};
	return false;
}



inline void _1cc583087_push_live(jule::Ptr<_1ca02928e_ObjectDeadCode> _self_, jule::Ptr<_1e43462ea_StructIns> _5536_t) {
	if ((!(_1cc584d58_is_live(_self_, _5536_t)))) {
		{
			
{
				_case_begin_1cc5850ab:;
				{
					_self_.get()._field_live._field_structs = jule::alloc_for_append(_self_.get()._field_live._field_structs,1);_self_.get()._field_live._field_structs.__push(_5536_t);;
				}
			}
			_match_end_1cc584d03:;
		};
	};
}

inline void _1cc5889e9_push_live(jule::Ptr<_1ca02928e_ObjectDeadCode> _self_, jule::Ptr<_1e4383018_FnIns> _5536_t) {
	if ((!(_1cc580309_is_live(_self_, _5536_t)))) {
		{
			
{
				_case_begin_1cc58a3ad:;
				{
					_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_5536_t);;
				}
			}
			_match_end_1cc58a29d:;
		};
	};
}

inline void _1cc58d1a2_push_live(jule::Ptr<_1ca02928e_ObjectDeadCode> _self_, jule::Ptr<_1e46c6eb6_Var> _5536_t) {
	if ((!(_1cc58c1c3_is_live(_self_, _5536_t)))) {
		{
			
{
				_case_begin_1cc591183:;
				{
					_self_.get()._field_live._field_vars = jule::alloc_for_append(_self_.get()._field_live._field_vars,1);_self_.get()._field_live._field_vars.__push(_5536_t);;
				}
			}
			_match_end_1cc5910d9:;
		};
	};
}



inline void _1ca05a897_set_references_as_live(jule::Ptr<_1ca02928e_ObjectDeadCode> _self_, jule::Ptr<_1e4385c0d_ReferenceStack>& _6847_rs) {
	if ((_6847_rs == nullptr)) {
		return;;
	};
	jule::I64 _7217_i = 0LL;;
	for (; (_7217_i < _1e43863a1_len(_6847_rs.ptr())); (_7217_i)++) {
		{
			jule::Any _7421_ref = _1e43866ae_at(_6847_rs.ptr(), _7217_i);;
			{
				auto &_match_expr{ _7421_ref };
				
				if (_match_expr.type_is<jule::Ptr<_1e4383018_FnIns>>()) {
					_case_begin_1cc57e10a:;
					{
						jule::Ptr<_1e4383018_FnIns> _7725_f = _7421_ref.operator jule::Ptr<_1e4383018_FnIns>();;
						if (_1cc580309_is_live(_self_, _7725_f)) {
							goto _match_end_1cc57e061;
						};
						if (((_7725_f.get()._field_owner != nullptr) && (!(_7725_f.get()._field_decl.get()._field_statically)))) {
							if ((!(_1cc584d58_is_live(_self_, _7725_f.get()._field_owner)))) {
								_1cc583087_push_live(_self_, _7725_f.get()._field_owner);
								_1ca05a897_set_references_as_live(_self_, _7725_f.get()._field_owner.get()._field_refers);
							};
						};
						_1cc5889e9_push_live(_self_, _7725_f);
						_1ca05a897_set_references_as_live(_self_, _7725_f.get()._field_refers);
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1e46c6eb6_Var>>()) {
					_case_begin_1cc57e171:;
					{
						jule::Ptr<_1e46c6eb6_Var> _9025_v = _7421_ref.operator jule::Ptr<_1e46c6eb6_Var>();;
						if (_1cc58c1c3_is_live(_self_, _9025_v)) {
							goto _match_end_1cc57e061;
						};
						_1cc58d1a2_push_live(_self_, _9025_v);
						_1ca05a897_set_references_as_live(_self_, _9025_v.get()._field_refers);
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1e43462ea_StructIns>>()) {
					_case_begin_1cc57e281:;
					{
						jule::Ptr<_1e43462ea_StructIns> _9725_s = _7421_ref.operator jule::Ptr<_1e43462ea_StructIns>();;
						if (_1cc584d58_is_live(_self_, _9725_s)) {
							goto _match_end_1cc57e061;
						};
						_1cc583087_push_live(_self_, _9725_s);
						_1ca05a897_set_references_as_live(_self_, _9725_s.get()._field_refers);
						{
							auto &expr = _9725_s.get()._field_methods;
							auto it = expr.begin();
							_iter_begin_1cc594a49:;
							if (it != expr.end()) {
								jule::Ptr<_1e4380576_Fn> _10329_ins = *it;
								{
									{
										auto &expr = _10329_ins.get()._field_instances;
										auto it = expr.begin();
										_iter_begin_1cc5950cc:;
										if (it != expr.end()) {
											jule::Ptr<_1e4383018_FnIns> _10433_mins = *it;
											{
												if (_1cc580309_is_live(_self_, _10433_mins)) {
													goto _iter_next_1cc5950cc;
												};
												_1cc5889e9_push_live(_self_, _10433_mins);
												_1ca05a897_set_references_as_live(_self_, _10433_mins.get()._field_refers);
											}
											_iter_next_1cc5950cc:;
											++it;
											goto _iter_begin_1cc5950cc;
										}
										_iter_end_1cc5950cc:;
									};
								}
								_iter_next_1cc594a49:;
								++it;
								goto _iter_begin_1cc594a49;
							}
							_iter_end_1cc594a49:;
						};
					}
				}
				_match_end_1cc57e061:;
			};
		}
	_iter_next_1cc57c922:;
	}
	_iter_end_1cc57c922:;;
}



inline void _1ca05ab1c_inits(jule::Ptr<_1ca02928e_ObjectDeadCode> _self_, jule::Ptr<_1e46a742a_Package>& _11630_pkg) {
	{
		auto &expr = _11630_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1cc57d6ae:;
		if (it != expr.end()) {
			jule::Ptr<_1c9745c42_SymbolTable> _11721_file = *it;
			{
				{
					auto &expr = _11721_file.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1cc597d9e:;
					if (it != expr.end()) {
						jule::Ptr<_1e4380576_Fn> _11825_f = *it;
						{
							if ((_11825_f.get()._field_ident == jule::Str("init", 4))) {
								jule::Ptr<_1e4383018_FnIns> _12029_ins = _11825_f.get()._field_instances[0LL];;
								_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_12029_ins);;
								_1ca05a897_set_references_as_live(_self_, _12029_ins.get()._field_refers);
							};
						}
						_iter_next_1cc597d9e:;
						++it;
						goto _iter_begin_1cc597d9e;
					}
					_iter_end_1cc597d9e:;
				};
			}
			_iter_next_1cc57d6ae:;
			++it;
			goto _iter_begin_1cc57d6ae;
		}
		_iter_end_1cc57d6ae:;
	};
}



inline void _1ca05ace8_collect_live(jule::Ptr<_1ca02928e_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1cc5983aa:;
		if (it != expr.end()) {
			jule::Ptr<_1e46a4768_ImportInfo> _12921_used = *it;
			{
				if ((!(_12921_used.get()._field_cpp_linked))) {
					_1ca05ab1c_inits(_self_, _12921_used.get()._field_package);
				};
			}
			_iter_next_1cc5983aa:;
			++it;
			goto _iter_begin_1cc5983aa;
		}
		_iter_end_1cc5983aa:;
	};
	_1ca05ab1c_inits(_self_, _self_.get()._field_ir.get()._field_main);
	jule::Ptr<_1e4380576_Fn> _13517_main = _1e46a8bbd_find_fn(_self_.get()._field_ir.get()._field_main.ptr(), jule::Str("main", 4),false);;
	jule::Ptr<_1e4383018_FnIns> _13617_ins = _13517_main.get()._field_instances[0LL];;
	_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_13617_ins);;
	_1ca05a897_set_references_as_live(_self_, _13617_ins.get()._field_refers);
}



inline void _1ca05b06d_remove_dead_globals(jule::Ptr<_1ca02928e_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1e46c6eb6_Var>>& _14144_vars) {
	jule::I64 _14217_i = 0LL;;
	while ((_14217_i < _14144_vars.len())) {
		{
			jule::Ptr<_1e46c6eb6_Var> _14417_v = _14144_vars[_14217_i];;
			if (_1cc58c1c3_is_live(_self_, _14417_v)) {
				(_14217_i)++;
				goto _iter_next_1cc59db63;
			};
			_14144_vars=jule::append(_14144_vars.slice(0LL,_14217_i),_14144_vars.slice((_14217_i + 1LL)));
		}
	_iter_next_1cc59db63:;
	}
	_iter_end_1cc59db63:;;
}



inline void _1ca05b2e3_remove_dead_fns(jule::Ptr<_1ca02928e_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1e4380576_Fn>>& _15340_funcs) {
	jule::I64 _15417_i = 0LL;;
	while ((_15417_i < _15340_funcs.len())) {
		{
			jule::Ptr<_1e4380576_Fn> _15621_f = _15340_funcs[_15417_i];;
			jule::I64 _15721_j = 0LL;;
			while ((_15721_j < _15621_f.get()._field_instances.len())) {
				{
					jule::Ptr<_1e4383018_FnIns> _15921_ins = _15621_f.get()._field_instances[_15721_j];;
					if (_1cc580309_is_live(_self_, _15921_ins)) {
						(_15721_j)++;
						goto _iter_next_1cc5a2370;
					};
					_15621_f.get()._field_instances=jule::append(_15621_f.get()._field_instances.slice(0LL,_15721_j),_15621_f.get()._field_instances.slice((_15721_j + 1LL)));
				}
			_iter_next_1cc5a2370:;
			}
			_iter_end_1cc5a2370:;;
			if ((_15621_f.get()._field_instances.len() == 0LL)) {
				_15340_funcs=jule::append(_15340_funcs.slice(0LL,_15417_i),_15340_funcs.slice((_15417_i + 1LL)));
				goto _iter_next_1cc5a15a0;
			};
			(_15417_i)++;
		}
	_iter_next_1cc5a15a0:;
	}
	_iter_end_1cc5a15a0:;;
}



inline void _1ca05b568_remove_dead_structs(jule::Ptr<_1ca02928e_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1e43360cb_Struct>>& _17444_structs) {
	jule::I64 _17517_i = 0LL;;
	while ((_17517_i < _17444_structs.len())) {
		{
			jule::Ptr<_1e43360cb_Struct> _17721_s = _17444_structs[_17517_i];;
			jule::I64 _17821_j = 0LL;;
			while ((_17821_j < _17721_s.get()._field_instances.len())) {
				{
					jule::Ptr<_1e43462ea_StructIns> _18025_ins = _17721_s.get()._field_instances[_17821_j];;
					_1ca05b2e3_remove_dead_fns(_self_, _18025_ins.get()._field_methods);
					if (((_18025_ins.get()._field_methods.len() != 0LL) || _1cc584d58_is_live(_self_, _18025_ins))) {
						(_17821_j)++;
						goto _iter_next_1cc5a6990;
					};
					_17721_s.get()._field_instances=jule::append(_17721_s.get()._field_instances.slice(0LL,_17821_j),_17721_s.get()._field_instances.slice((_17821_j + 1LL)));
				}
			_iter_next_1cc5a6990:;
			}
			_iter_end_1cc5a6990:;;
			if ((_17721_s.get()._field_instances.len() == 0LL)) {
				_17444_structs=jule::append(_17444_structs.slice(0LL,_17517_i),_17444_structs.slice((_17517_i + 1LL)));
				goto _iter_next_1cc5a5bc0;
			};
			(_17517_i)++;
		}
	_iter_next_1cc5a5bc0:;
	}
	_iter_end_1cc5a5bc0:;;
}



inline void _1ca05b7dd_remove_deads_file(jule::Ptr<_1ca02928e_ObjectDeadCode> _self_, jule::Ptr<_1c9745c42_SymbolTable>& _19642_file) {
	_1ca05b2e3_remove_dead_fns(_self_, _19642_file.get()._field_funcs);
	_1ca05b568_remove_dead_structs(_self_, _19642_file.get()._field_structs);
	_1ca05b06d_remove_dead_globals(_self_, _19642_file.get()._field_vars);
}



inline void _1ca05ba63_remove_deads_package(jule::Ptr<_1ca02928e_ObjectDeadCode> _self_, jule::Ptr<_1e46a742a_Package>& _20245_pkg) {
	{
		auto &expr = _20245_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1cc5ac314:;
		if (it != expr.end()) {
			jule::Ptr<_1c9745c42_SymbolTable> _20321_file = *it;
			{
				_1ca05b7dd_remove_deads_file(_self_, _20321_file);
			}
			_iter_next_1cc5ac314:;
			++it;
			goto _iter_begin_1cc5ac314;
		}
		_iter_end_1cc5ac314:;
	};
}



inline void _1ca05bc3e_remove_deads(jule::Ptr<_1ca02928e_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1cc5ad48b:;
		if (it != expr.end()) {
			jule::Ptr<_1e46a4768_ImportInfo> _20921_used = *it;
			{
				if ((!(_20921_used.get()._field_cpp_linked))) {
					_1ca05ba63_remove_deads_package(_self_, _20921_used.get()._field_package);
				};
			}
			_iter_next_1cc5ad48b:;
			++it;
			goto _iter_begin_1cc5ad48b;
		}
		_iter_end_1cc5ad48b:;
	};
	_1ca05ba63_remove_deads_package(_self_, _self_.get()._field_ir.get()._field_main);
}



inline void _1ca05be1a_elimanate(jule::Ptr<_1ca02928e_ObjectDeadCode> _self_) {
	_1ca05ace8_collect_live(_self_);
	_1ca05bc3e_remove_deads(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1ca02928e_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ca4d7c36_ObjectCoder> static__1ca4e1b1e_new(jule::Ptr<_1e498133b_IR>& _7228_ir, _1ca4e41e8_SerializationInfo _7237_info) {
	jule::Ptr<_1ca4d7c36_ObjectCoder> _7317_oc = jule::new_ptr<_1ca4d7c36_ObjectCoder>(_1ca4d7c36_ObjectCoder{._field_ir=_7228_ir, ._field_info=_7237_info, });;
	_7317_oc.get()._field_ec=static__1ca4998a7_new(_7317_oc);
	_7317_oc.get()._field_sc=static__1ca491d99_new(_7317_oc);
	return _7317_oc;
}



inline void _1ca4e23b1_write(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_, jule::Str _8225_s) {
	_self_.get()._field_obj+=_8225_s;
}



inline void _1ca4e2a98_add_indent(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_) {
	;
	_self_.get()._field_indent_buffer+=jule::Str("\t", 1);
}



inline void _1ca4e32b3_done_indent(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_) {
	_self_.get()._field_indent_buffer=_self_.get()._field_indent_buffer.slice(0LL,(_self_.get()._field_indent_buffer.len() - 1LL));
}



inline void _1ca4e39cd_indent(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_) {
	_self_.get()._field_obj+=_self_.get()._field_indent_buffer;
}



inline jule::I64 _1ca503ec7_find_type_offset(_1ca4d7c36_ObjectCoder* _self_, jule::Ptr<_1e43d8d0a_Trait> _10231_t, jule::Ptr<_1c97746ee_TypeKind> _10246_k) {
	if ((_10231_t.get()._field_implemented.len() == 0LL)) {
		return 0LL;
	};
	jule::Ptr<_1e43462ea_StructIns> _10617_s = nullptr;;
	if ((_1c9776a20_sptr(_10246_k.ptr()) != nullptr)) {
		_10246_k=_1c9776a20_sptr(_10246_k.ptr()).get()._field_elem;
	};
	if ((_1c9777999_strct(_10246_k.ptr()) == nullptr)) {
		return -1LL;
	};
	_10617_s=_1c9777999_strct(_10246_k.ptr());
	{
		auto &expr = (*_self_)._field_tmap;
		auto it = expr.begin();
		_iter_begin_1cdae298b:;
		if (it != expr.end()) {
			jule::Ptr<_1ca4d7a49_TraitHash> &_11416_hash = *it;
			{
				if (((_11416_hash.get()._field_t == _10231_t) && (_11416_hash.get()._field_s == _10617_s))) {
					return _11416_hash.get()._field_i;
				};
			}
			_iter_next_1cdae298b:;
			++it;
			goto _iter_begin_1cdae298b;
		}
		_iter_end_1cdae298b:;
	};
	return -1LL;
}



inline void _1ca4e4d53_loc_info(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_, jule::Ptr<_20cd9e6ec_Token>& _12329_t) {
	jule::Str &_12414_loc = _12329_t.get()._field_file.get()._field_path;;
	if (_23db44461_PRODUCTION) {
		{
			
			if (_20c83c443_has_prefix(_12414_loc,_20caa3654_PATH_STDLIB)) {
				_case_begin_1cdae5274:;
				{
					_1ca4e23b1_write(_self_, _1ca4a5c59_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12414_loc.slice((_20b981357_dir(_20caa3654_PATH_STDLIB).len() + 1LL)))));
				}
			}
			else if (_20c83c443_has_prefix(_12414_loc,_self_.get()._field_ir.get()._field_root)) {
				_case_begin_1cdae49c1:;
				{
					_1ca4e23b1_write(_self_, _1ca4a5c59_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12414_loc.slice((_20b981357_dir(_self_.get()._field_ir.get()._field_root).len() + 1LL)))));
				}
			}
			else {
				_case_begin_1cdae464c:;
				{
					_1ca4e23b1_write(_self_, _1ca4a5c59_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12414_loc)));
				}
			}
			_match_end_1cdae4581:;
		};
	} else {
		_1ca4e23b1_write(_self_, _1ca4a5c59_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12414_loc)));
	};
	_1ca4e23b1_write(_self_, jule::Str(":", 1));
	_1ca4e23b1_write(_self_, _1e5c30b6c_itoa(_12329_t.get()._field_row));
	_1ca4e23b1_write(_self_, jule::Str(":", 1));
	_1ca4e23b1_write(_self_, _1e5c30b6c_itoa(_12329_t.get()._field_column));
}



inline void _1ca4e500c_head(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_) {
	_1ca51ab6a_Time _15013_time = static__1ca51b20e_now();;
	_1ca51a494_AbsTime _15113_abs = _1ca51c84d_abs(&_15013_time);;
	_1ca4e23b1_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_1ca4e23b1_write(_self_, jule::Str("// JuleC version: ", 18));
	_1ca4e23b1_write(_self_, jule::Str("jule0.0.11 @master", 18));
	_1ca4e23b1_write(_self_, jule::Str("\n", 1));
	_1ca4e23b1_write(_self_, jule::Str("// Date: ", 9));
	_1ca4e23b1_write(_self_, _1e5c30908_fmt_uint(_15113_abs._field_day,10LL));
	_1ca4e23b1_write(_self_, jule::Str("/", 1));
	_1ca4e23b1_write(_self_, _1e5c30908_fmt_uint(_15113_abs._field_month,10LL));
	_1ca4e23b1_write(_self_, jule::Str("/", 1));
	_1ca4e23b1_write(_self_, _1e5c30908_fmt_uint(_15113_abs._field_year,10LL));
	_1ca4e23b1_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1ca4e23b1_write(_self_, _self_.get()._field_info._field_compiler);
	_1ca4e23b1_write(_self_, jule::Str(" ", 1));
	_1ca4e23b1_write(_self_, _self_.get()._field_info._field_compiler_command);
	_1ca4e23b1_write(_self_, jule::Str("\n\n", 2));
	if (_23db44461_PRODUCTION) {
		_1ca4e23b1_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_23db43e22_RC))) {
		_1ca4e23b1_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_23db4420d_SAFETY))) {
		_1ca4e23b1_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1ca4e23b1_write(_self_, jule::Str("\n\n#include \"", 12));
	_1ca4e23b1_write(_self_, _20cab3048_PATH_API);
	_1ca4e23b1_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _1ca4d99e6_links(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1cdb03062:;
		if (it != expr.end()) {
			jule::Ptr<_1e46a4768_ImportInfo> _18316_used = *it;
			{
				{
					
					if ((!(_18316_used.get()._field_cpp_linked))) {
						_case_begin_1cdb03ccc:;
						{
							goto _iter_next_1cdb03062;
						}
					}
					else if (_20ca83337_is_std_header_path(_18316_used.get()._field_path)) {
						_case_begin_1cdb039be:;
						{
							_1ca4e23b1_write(_self_, jule::Str("#include ", 9));
							_1ca4e23b1_write(_self_, _18316_used.get()._field_path);
							_1ca4e23b1_write(_self_, jule::Str("\n", 1));
						}
					}
					else {
						_case_begin_1cdb03958:;
						{
							_1ca4e23b1_write(_self_, jule::Str("#include \"", 10));
							_1ca4e23b1_write(_self_, _18316_used.get()._field_path);
							_1ca4e23b1_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_1cdb0388c:;
				};
			}
			_iter_next_1cdb03062:;
			++it;
			goto _iter_begin_1cdb03062;
		}
		_iter_end_1cdb03062:;
	};
}



inline void _1ca50579d_prepare_structures(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1cdb0673b:;
		if (it != expr.end()) {
			jule::Ptr<_1e43360cb_Struct> _20021_s = *it;
			{
				if ((_20021_s.get()._field_token != nullptr)) {
					_1ca525317_prepare_structure(_20021_s);
				};
			}
			_iter_next_1cdb0673b:;
			++it;
			goto _iter_begin_1cdb0673b;
		}
		_iter_end_1cdb0673b:;
	};
}



inline void _1ca520e06_iter_packages(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_1e46a742a_Package>&)> _20733_f) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1cdb08584:;
		if (it != expr.end()) {
			jule::Ptr<_1e46a4768_ImportInfo> _20821_used = *it;
			{
				if ((!(_20821_used.get()._field_cpp_linked))) {
					_20733_f(_20821_used.get()._field_package);
				};
			}
			_iter_next_1cdb08584:;
			++it;
			goto _iter_begin_1cdb08584;
		}
		_iter_end_1cdb08584:;
	};
	_20733_f(_self_.get()._field_ir.get()._field_main);
}



inline void _1ca521038_build_trait_map(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_) {
	_1ca520e06_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1e46a742a_Package>&)>([=](jule::Ptr<_1e46a742a_Package>& _21736_pkg) mutable -> void {
		_1ca5250b4_iter_files(_21736_pkg,jule::Fn<void(jule::Ptr<_1c9745c42_SymbolTable>&)>([=](jule::Ptr<_1c9745c42_SymbolTable>& _21837_file) mutable -> void {
			{
				auto &expr = _21837_file.get()._field_traits;
				auto it = expr.begin();
				_iter_begin_1cdb0bcb3:;
				if (it != expr.end()) {
					jule::Ptr<_1e43d8d0a_Trait> _21929_t = *it;
					{
						if ((_21929_t.get()._field_token == nullptr)) {
							return;;
						};
						if ((_21929_t.get()._field_implemented.len() == 0LL)) {
							_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1ca4d7a49_TraitHash>(_1ca4d7a49_TraitHash{._field_t=_21929_t, ._field_s=nullptr, ._field_i=0LL}));;
							goto _iter_next_1cdb0bcb3;
						};
						jule::I64 _23129_i = 0LL;;
						{
							auto &expr = _21929_t.get()._field_implemented;
							auto it = expr.begin();
							_iter_begin_1cdb0dd2b:;
							if (it != expr.end()) {
								jule::Ptr<_1e43360cb_Struct> _23233_s = *it;
								{
									{
										auto &expr = _23233_s.get()._field_instances;
										auto it = expr.begin();
										_iter_begin_1cdb0e3ae:;
										if (it != expr.end()) {
											jule::Ptr<_1e43462ea_StructIns> _23337_ins = *it;
											{
												_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1ca4d7a49_TraitHash>(_1ca4d7a49_TraitHash{._field_t=_21929_t, ._field_s=_23337_ins, ._field_i=_23129_i}));;
												(_23129_i)++;
											}
											_iter_next_1cdb0e3ae:;
											++it;
											goto _iter_begin_1cdb0e3ae;
										}
										_iter_end_1cdb0e3ae:;
									};
								}
								_iter_next_1cdb0dd2b:;
								++it;
								goto _iter_begin_1cdb0dd2b;
							}
							_iter_end_1cdb0dd2b:;
						};
					}
					_iter_next_1cdb0bcb3:;
					++it;
					goto _iter_begin_1cdb0bcb3;
				}
				_iter_end_1cdb0bcb3:;
			};
		}));
	}));
}



inline void _1ca52116a_trait_decls(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_) {
	_1ca520e06_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1e46a742a_Package>&)>([=](jule::Ptr<_1e46a742a_Package>& _24836_pkg) mutable -> void {
		_1ca5250b4_iter_files(_24836_pkg,jule::Fn<void(jule::Ptr<_1c9745c42_SymbolTable>&)>([=](jule::Ptr<_1c9745c42_SymbolTable>& _24937_file) mutable -> void {
			{
				auto &expr = _24937_file.get()._field_traits;
				auto it = expr.begin();
				_iter_begin_1cdb11b86:;
				if (it != expr.end()) {
					jule::Ptr<_1e43d8d0a_Trait> _25029_t = *it;
					{
						if ((_25029_t.get()._field_token == nullptr)) {
							return;;
						};
						_1ca4e39cd_indent(_self_);
						_1ca4e23b1_write(_self_, jule::Str("struct ", 7));
						_1ca4e23b1_write(_self_, static__1ca4ac5ce_trait_decl(_25029_t));
						_1ca4e23b1_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_1cdb11b86:;
					++it;
					goto _iter_begin_1cdb11b86;
				}
				_iter_end_1cdb11b86:;
			};
		}));
	}));
}



inline void _1ca52129c_structure_plain_decl(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_, jule::Ptr<_1e43360cb_Struct>& _26345_s) {
	{
		auto &expr = _26345_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1cdb13eb8:;
		if (it != expr.end()) {
			jule::Ptr<_1e43462ea_StructIns> _26421_ins = *it;
			{
				_1ca4e23b1_write(_self_, jule::Str("struct ", 7));
				_1ca4e23b1_write(_self_, static__1ca4acdb5_structure_ins(_26421_ins));
				_1ca4e23b1_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1cdb13eb8:;
			++it;
			goto _iter_begin_1cdb13eb8;
		}
		_iter_end_1cdb13eb8:;
	};
}



inline void _1ca5213ce_structure_plain_decls(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1cdb15cde:;
		if (it != expr.end()) {
			jule::Ptr<_1e43360cb_Struct> _27221_s = *it;
			{
				if ((_27221_s.get()._field_token != nullptr)) {
					_1ca52129c_structure_plain_decl(_self_, _27221_s);
				};
			}
			_iter_next_1cdb15cde:;
			++it;
			goto _iter_begin_1cdb15cde;
		}
		_iter_end_1cdb15cde:;
	};
}



inline void _1ca521511_field_decl(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_, jule::Ptr<_1e434014b_FieldIns>& _27935_f) {
	_1ca4e23b1_write(_self_, static__1ca52b131_kind(_27935_f.get()._field_kind));
	_1ca4e23b1_write(_self_, jule::Str(" ", 1));
	_1ca4e23b1_write(_self_, static__1ca4ad15c_field(_27935_f.get()._field_decl));
	_1ca4e23b1_write(_self_, jule::Str(" = ", 3));
	if ((_27935_f.get()._field_default == nullptr)) {
		_1ca4a5374_init_expr(_self_.get()._field_ec, _27935_f.get()._field_kind);
	} else {
		_1ca4a4d79_expr(_self_.get()._field_ec, jule::Any(_27935_f.get()._field_default.get()._field_model));
	};
	_1ca4e23b1_write(_self_, jule::Str(";", 1));
}



inline void _1ca521643_structure_destructor(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_, jule::Ptr<_1e43462ea_StructIns>& _29445_s) {
	;
	jule::Ptr<_1e4380576_Fn> _29613_dispose_method = _1e4342758_find_method(_29445_s.ptr(), jule::Str("dispose", 7),false);;
	jule::Bool _29717_disposed = static__1e46c813d_dispose(_29613_dispose_method);;
	if ((!(_29717_disposed))) {
		return;;
	};
	_1ca4e23b1_write(_self_, jule::Str("~", 1));
	_1ca4e23b1_write(_self_, static__1ca4acdb5_structure_ins(_29445_s));
	_1ca4e23b1_write(_self_, jule::Str("(void) { ", 9));
	_1ca4e23b1_write(_self_, static__1ca4ac090_func(_29613_dispose_method));
	_1ca4e23b1_write(_self_, jule::Str("(this); }", 9));
}



inline void _1ca521775_structure_derive_defs_decls(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_, jule::Ptr<_1e43462ea_StructIns>& _30948_s) {
	if (_1e433ab2a_is_derives(_30948_s.get()._field_decl.ptr(), jule::Str("Clone", 5))) {
		_1ca4e39cd_indent(_self_);
		_1ca4e23b1_write(_self_, static__1ca4a7909_clone_func_decl(_30948_s.get()._field_decl));
		_1ca4e23b1_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _1ca5218a7_structure_operator_eq(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_, jule::Str& _31742_ident, jule::Ptr<_1e43462ea_StructIns>& _31759_s) {
	if ((_31759_s.get()._field_operators._field_eq != nullptr)) {
		_1ca521b1b_structure_operator(_self_, _31742_ident,_31759_s.get()._field_operators._field_eq,jule::Str("==", 2));
		return;;
	};
	_1ca4e39cd_indent(_self_);
	if (_20c8eeb54_INLINE) {
		_1ca4e23b1_write(_self_, jule::Str("inline ", 7));
	};
	_1ca4e23b1_write(_self_, jule::Str("bool operator==(", 16));
	_1ca4e23b1_write(_self_, _31742_ident);
	_1ca4e23b1_write(_self_, jule::Str(" _other) {", 10));
	if ((_31759_s.get()._field_fields.len() > 0LL)) {
		_1ca4e2a98_add_indent(_self_);
		_1ca4e23b1_write(_self_, jule::Str("\n", 1));
		_1ca4e39cd_indent(_self_);
		_1ca4e23b1_write(_self_, jule::Str("return ", 7));
		_1ca4e2a98_add_indent(_self_);
		jule::Bool _33721_writed = false;;
		{
			auto &expr = _31759_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1cdb267c2:;
			if (it != expr.end()) {
				jule::Ptr<_1e434014b_FieldIns> _33825_f = *it;
				{
					jule::Ptr<_1e43462ea_StructIns> _34021_strct = _1c9777999_strct(_33825_f.get()._field_kind.ptr());;
					if ((((_34021_strct != nullptr) && (_34021_strct.get()._field_decl != nullptr)) && _34021_strct.get()._field_decl.get()._field_cpp_linked)) {
						goto _iter_next_1cdb267c2;
					};
					if (_33721_writed) {
						_1ca4e23b1_write(_self_, jule::Str(" &&", 3));
					};
					_33721_writed=true;
					_1ca4e23b1_write(_self_, jule::Str("\n", 1));
					_1ca4e39cd_indent(_self_);
					_1ca4e23b1_write(_self_, jule::Str("this->", 6));
					jule::Str _35221_f_ident = static__1ca4ad15c_field(_33825_f.get()._field_decl);;
					_1ca4e23b1_write(_self_, _35221_f_ident);
					_1ca4e23b1_write(_self_, jule::Str(" == _other.", 11));
					_1ca4e23b1_write(_self_, _35221_f_ident);
				}
				_iter_next_1cdb267c2:;
				++it;
				goto _iter_begin_1cdb267c2;
			}
			_iter_end_1cdb267c2:;
		};
		_1ca4e32b3_done_indent(_self_);
		if ((!(_33721_writed))) {
			_1ca4e23b1_write(_self_, jule::Str("true", 4));
		};
		_1ca4e23b1_write(_self_, jule::Str(";\n", 2));
		_1ca4e32b3_done_indent(_self_);
		_1ca4e39cd_indent(_self_);
		_1ca4e23b1_write(_self_, jule::Str("}", 1));
	} else {
		_1ca4e23b1_write(_self_, jule::Str(" return true; }", 15));
	};
	_1ca4e23b1_write(_self_, jule::Str("\n\n", 2));
}



inline void _1ca5219d9_structure_operator_not_eq(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_, jule::Str& _37146_ident, jule::Ptr<_1e43462ea_StructIns>& _37163_s) {
	_1ca4e39cd_indent(_self_);
	if (_20c8eeb54_INLINE) {
		_1ca4e23b1_write(_self_, jule::Str("inline ", 7));
	};
	_1ca4e23b1_write(_self_, jule::Str("bool operator!=(", 16));
	_1ca4e23b1_write(_self_, _37146_ident);
	_1ca4e23b1_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1ca521b1b_structure_operator(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_, jule::Str& _38239_ident, jule::Ptr<_1e4383018_FnIns>& _38256_f, jule::Str _38267_op) {
	if ((_38256_f == nullptr)) {
		return;;
	};
	jule::Bool _38713_unary = (_38256_f.get()._field_params.len() == 1LL);;
	jule::Bool _38813_assignment = _1e43807c9_is_void(_38256_f.get()._field_decl.ptr());;
	_1ca4e39cd_indent(_self_);
	if (_20c8eeb54_INLINE) {
		_1ca4e23b1_write(_self_, jule::Str("inline ", 7));
	};
	if (_38813_assignment) {
		_1ca4e23b1_write(_self_, _38239_ident);
		_1ca4e23b1_write(_self_, jule::Str("&", 1));
	} else {
		if ((_1c97767ab_prim(_38256_f.get()._field_result.ptr()) == nullptr)) {
			_1ca4e23b1_write(_self_, _38239_ident);
		} else {
			_1ca4e23b1_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_1ca4e23b1_write(_self_, jule::Str(" operator", 9));
	_1ca4e23b1_write(_self_, _38267_op);
	_1ca4e23b1_write(_self_, jule::Str("(", 1));
	if ((!(_38713_unary))) {
		jule::Ptr<_1e438217c_ParamIns> _41021_p = _38256_f.get()._field_params[1LL];;
		_1ca4e23b1_write(_self_, static__1ca52a30b_param_ins(_41021_p));
		_1ca4e23b1_write(_self_, jule::Str(" _other", 7));
	};
	_1ca4e23b1_write(_self_, jule::Str(") { ", 4));
	if ((!(_38813_assignment))) {
		_1ca4e23b1_write(_self_, jule::Str("return ", 7));
	};
	_1ca4e23b1_write(_self_, static__1ca4ac337_func_ins(_38256_f));
	if ((!(_38713_unary))) {
		_1ca4e23b1_write(_self_, jule::Str("(this, _other); ", 16));
		if (_38813_assignment) {
			_1ca4e23b1_write(_self_, jule::Str("return *this; ", 14));
		};
		_1ca4e23b1_write(_self_, jule::Str("}", 1));
	} else {
		_1ca4e23b1_write(_self_, jule::Str("(this); }", 9));
	};
	_1ca4e23b1_write(_self_, jule::Str("\n\n", 2));
}



inline void _1ca521c4d_structure_operators(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_, jule::Ptr<_1e43462ea_StructIns>& _43144_s) {
	jule::Str _43213_ident = static__1ca4acdb5_structure_ins(_43144_s);;
	_1ca5218a7_structure_operator_eq(_self_, _43213_ident,_43144_s);
	_1ca5219d9_structure_operator_not_eq(_self_, _43213_ident,_43144_s);
	_1ca521b1b_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_gt,jule::Str(">", 1));
	_1ca521b1b_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_gt_eq,jule::Str(">=", 2));
	_1ca521b1b_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_lt,jule::Str("<", 1));
	_1ca521b1b_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_lt_eq,jule::Str("<=", 2));
	_1ca521b1b_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_shl,jule::Str("<<", 2));
	_1ca521b1b_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_shr,jule::Str(">>", 2));
	_1ca521b1b_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_add,jule::Str("+", 1));
	_1ca521b1b_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_sub,jule::Str("-", 1));
	_1ca521b1b_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_div,jule::Str("/", 1));
	_1ca521b1b_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_mul,jule::Str("*", 1));
	_1ca521b1b_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_mod,jule::Str("%", 1));
	_1ca521b1b_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_and,jule::Str("&", 1));
	_1ca521b1b_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_or,jule::Str("|", 1));
	_1ca521b1b_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_xor,jule::Str("^", 1));
	_1ca521b1b_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_neg,jule::Str("-", 1));
	_1ca521b1b_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_pos,jule::Str("+", 1));
	_1ca521b1b_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_not,jule::Str("~", 1));
	_1ca521b1b_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_add_assign,jule::Str("+=", 2));
	_1ca521b1b_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_sub_assign,jule::Str("-=", 2));
	_1ca521b1b_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_div_assign,jule::Str("/=", 2));
	_1ca521b1b_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_mul_assign,jule::Str("*=", 2));
	_1ca521b1b_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_mod_assign,jule::Str("%=", 2));
	_1ca521b1b_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_shl_assign,jule::Str("<<=", 3));
	_1ca521b1b_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_shr_assign,jule::Str(">>=", 3));
	_1ca521b1b_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_or_assign,jule::Str("|=", 2));
	_1ca521b1b_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_and_assign,jule::Str("&=", 2));
	_1ca521b1b_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_xor_assign,jule::Str("^=", 2));
}



inline void _1ca521d80_structure_ins_decl(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_, jule::Ptr<_1e43462ea_StructIns>& _47043_s) {
	if ((_47043_s.get()._field_methods.len() > 0LL)) {
		{
			auto &expr = _47043_s.get()._field_methods;
			auto it = expr.begin();
			_iter_begin_1cdb4a186:;
			if (it != expr.end()) {
				jule::Ptr<_1e4380576_Fn> _47225_m = *it;
				{
					_1ca52248a_func_decl(_self_, _47225_m,false);
				}
				_iter_next_1cdb4a186:;
				++it;
				goto _iter_begin_1cdb4a186;
			}
			_iter_end_1cdb4a186:;
		};
	};
	_1ca4e23b1_write(_self_, jule::Str("struct ", 7));
	jule::Str _47813_out_ident = static__1ca4acdb5_structure_ins(_47043_s);;
	_1ca4e23b1_write(_self_, _47813_out_ident);
	_1ca4e23b1_write(_self_, jule::Str(" {\n", 3));
	_1ca4e2a98_add_indent(_self_);
	{
		auto &expr = _47043_s.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1cdb4ca18:;
		if (it != expr.end()) {
			jule::Ptr<_1e434014b_FieldIns> _48421_f = *it;
			{
				_1ca4e39cd_indent(_self_);
				_1ca521511_field_decl(_self_, _48421_f);
				_1ca4e23b1_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_1cdb4ca18:;
			++it;
			goto _iter_begin_1cdb4ca18;
		}
		_iter_end_1cdb4ca18:;
	};
	_1ca4e39cd_indent(_self_);
	_1ca521643_structure_destructor(_self_, _47043_s);
	_1ca4e23b1_write(_self_, jule::Str("\n\n", 2));
	_1ca4e39cd_indent(_self_);
	_1ca4e23b1_write(_self_, _47813_out_ident);
	_1ca4e23b1_write(_self_, jule::Str("(void) = default;\n\n", 19));
	_1ca521775_structure_derive_defs_decls(_self_, _47043_s);
	_1ca521c4d_structure_operators(_self_, _47043_s);
	_1ca4e23b1_write(_self_, jule::Str("\n", 1));
	_1ca4e32b3_done_indent(_self_);
	_1ca4e39cd_indent(_self_);
	_1ca4e23b1_write(_self_, jule::Str("};", 2));
}



inline void _1ca521eb2_structure_decl(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_, jule::Ptr<_1e43360cb_Struct>& _50939_s) {
	{
		auto &expr = _50939_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1cdb52677:;
		if (it != expr.end()) {
			jule::Ptr<_1e43462ea_StructIns> _51021_ins = *it;
			{
				_1ca521d80_structure_ins_decl(_self_, _51021_ins);
			}
			_iter_next_1cdb52677:;
			++it;
			goto _iter_begin_1cdb52677;
		}
		_iter_end_1cdb52677:;
	};
}



inline void _1ca5220e4_structure_decls(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1cdb538cb:;
		if (it != expr.end()) {
			jule::Ptr<_1e43360cb_Struct> _51621_s = *it;
			{
				if ((_51621_s.get()._field_token != nullptr)) {
					_1ca521eb2_structure_decl(_self_, _51621_s);
					_1ca4e23b1_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_1cdb538cb:;
			++it;
			goto _iter_begin_1cdb538cb;
		}
		_iter_end_1cdb538cb:;
	};
}



inline void _1ca522226_params_decls(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1e438217c_ParamIns>>& _52437_params) {
	if ((_52437_params.len() == 0LL)) {
		_1ca4e23b1_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1ca4e23b1_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _52437_params;
		auto it = expr.begin();
		_iter_begin_1cdb5611a:;
		if (it != expr.end()) {
			jule::I64 _53114_i = it - expr.begin();
			jule::Ptr<_1e438217c_ParamIns> _53121_p = *it;
			{
				_1ca4e23b1_write(_self_, static__1ca52a30b_param_ins(_53121_p));
				if (((_52437_params.len() - _53114_i) > 1LL)) {
					_1ca4e23b1_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1cdb5611a:;
			++it;
			_53114_i++;
			goto _iter_begin_1cdb5611a;
		}
		_iter_end_1cdb5611a:;
	};
	_1ca4e23b1_write(_self_, jule::Str(")", 1));
}



inline void _1ca522358_func_head(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_, jule::Ptr<_1e4383018_FnIns>& _54134_f, jule::Bool _54145_ptr) {
	if ((((!(_54145_ptr)) && _20c8eeb54_INLINE) && (!(_1e4380ca2_is_entry_point(_54134_f.get()._field_decl.ptr()))))) {
		_1ca4e23b1_write(_self_, jule::Str("inline ", 7));
	};
	_1ca4e23b1_write(_self_, static__1ca52a84a_func_ins_result(_54134_f));
	if (_54145_ptr) {
		_1ca4e23b1_write(_self_, jule::Str("(*", 2));
		_1ca4e23b1_write(_self_, static__1ca4ac337_func_ins(_54134_f));
		_1ca4e23b1_write(_self_, jule::Str(")", 1));
	} else {
		_1ca4e23b1_write(_self_, jule::Str(" ", 1));
		_1ca4e23b1_write(_self_, static__1ca4ac337_func_ins(_54134_f));
	};
}



inline void _1ca52248a_func_decl(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_, jule::Ptr<_1e4380576_Fn>& _55634_f, jule::Bool _55642_ptr) {
	{
		auto &expr = _55634_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1cdb5c6a4:;
		if (it != expr.end()) {
			jule::Ptr<_1e4383018_FnIns> _55721_c = *it;
			{
				_1ca4e39cd_indent(_self_);
				_1ca522358_func_head(_self_, _55721_c,_55642_ptr);
				_1ca522226_params_decls(_self_, _55721_c.get()._field_params);
				_1ca4e23b1_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1cdb5c6a4:;
			++it;
			goto _iter_begin_1cdb5c6a4;
		}
		_iter_end_1cdb5c6a4:;
	};
}



inline void _1ca5225bc_func_decls(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_) {
	_1ca520e06_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1e46a742a_Package>&)>([=](jule::Ptr<_1e46a742a_Package>& _56636_pkg) mutable -> void {
		_1ca5250b4_iter_files(_56636_pkg,jule::Fn<void(jule::Ptr<_1c9745c42_SymbolTable>&)>([=](jule::Ptr<_1c9745c42_SymbolTable>& _56737_file) mutable -> void {
			{
				auto &expr = _56737_file.get()._field_funcs;
				auto it = expr.begin();
				_iter_begin_1cdb61224:;
				if (it != expr.end()) {
					jule::Ptr<_1e4380576_Fn> _56829_f = *it;
					{
						if (((!(_56829_f.get()._field_cpp_linked)) && (_56829_f.get()._field_token != nullptr))) {
							_1ca52248a_func_decl(_self_, _56829_f,false);
						};
					}
					_iter_next_1cdb61224:;
					++it;
					goto _iter_begin_1cdb61224;
				}
				_iter_end_1cdb61224:;
			};
		}));
	}));
}



inline void _1ca5226ee_trait_data_types(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_) {
	_1ca520e06_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1e46a742a_Package>&)>([=](jule::Ptr<_1e46a742a_Package>& _57836_pkg) mutable -> void {
		_1ca5250b4_iter_files(_57836_pkg,jule::Fn<void(jule::Ptr<_1c9745c42_SymbolTable>&)>([=](jule::Ptr<_1c9745c42_SymbolTable>& _57937_file) mutable -> void {
			{
				auto &expr = _57937_file.get()._field_traits;
				auto it = expr.begin();
				_iter_begin_1cdb64568:;
				if (it != expr.end()) {
					jule::Ptr<_1e43d8d0a_Trait> _58029_t = *it;
					{
						if ((_58029_t.get()._field_token == nullptr)) {
							return;;
						};
						_1ca4e23b1_write(_self_, jule::Str("struct ", 7));
						_1ca4e23b1_write(_self_, static__1ca4ac5ce_trait_decl(_58029_t));
						_1ca4e23b1_write(_self_, jule::Str("MptrData", 8));
						_1ca4e23b1_write(_self_, jule::Str(" {\n", 3));
						_1ca4e2a98_add_indent(_self_);
						{
							auto &expr = _58029_t.get()._field_methods;
							auto it = expr.begin();
							_iter_begin_1cdb669aa:;
							if (it != expr.end()) {
								jule::Ptr<_1e4380576_Fn> _58933_m = *it;
								{
									jule::Ptr<_1e4383018_FnIns> _59033_ins = _58933_m.get()._field_instances[0LL];;
									jule::Ptr<_1e438217c_ParamIns> _59133_p = _59033_ins.get()._field_params[0LL];;
									_59133_p.get()._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_58029_t, 2)});
									{
										auto expr = _59033_ins.get()._field_params.slice(1LL);
										auto it = expr.begin();
										_iter_begin_1cdb68605:;
										if (it != expr.end()) {
											jule::I64 _59530_i = it - expr.begin();
											jule::Ptr<_1e438217c_ParamIns> _59537_ip = *it;
											{
												if (_20cda21e4_is_anon_ident(_59537_ip.get()._field_decl.get()._field_ident)) {
													_59537_ip.get()._field_decl.get()._field_ident=(jule::Str("_", 1) + _1e5c30b6c_itoa(_59530_i));
												};
											}
											_iter_next_1cdb68605:;
											++it;
											_59530_i++;
											goto _iter_begin_1cdb68605;
										}
										_iter_end_1cdb68605:;
									};
									if ((!(_23db44461_PRODUCTION))) {
										_59033_ins.get()._field_params = jule::alloc_for_append(_59033_ins.get()._field_params,1);_59033_ins.get()._field_params.__push(jule::new_ptr<_1e438217c_ParamIns>(_1e438217c_ParamIns{._field_decl=jule::new_ptr<_1e4380389_Param>(_1e4380389_Param{._field_ident=jule::Str("__file", 6)}), ._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(jule::new_ptr<_1ca526516_CustomType>(_1ca526516_CustomType{._field_kind=jule::Str("const char*", 11)}), 12)})}));;
									};
									_1ca52248a_func_decl(_self_, _58933_m,true);
								}
								_iter_next_1cdb669aa:;
								++it;
								goto _iter_begin_1cdb669aa;
							}
							_iter_end_1cdb669aa:;
						};
						_1ca4e32b3_done_indent(_self_);
						_1ca4e39cd_indent(_self_);
						_1ca4e23b1_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_1cdb64568:;
					++it;
					goto _iter_begin_1cdb64568;
				}
				_iter_end_1cdb64568:;
			};
		}));
	}));
}



inline void _1ca522831_param_ins(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_, jule::Ptr<_1e438217c_ParamIns>& _62234_p) {
	_1ca4e23b1_write(_self_, static__1ca52a30b_param_ins(_62234_p));
	_1ca4e23b1_write(_self_, jule::Str(" ", 1));
	_1ca4e23b1_write(_self_, static__1ca4ac876_param(_62234_p.get()._field_decl));
}



inline void _1ca522963_params_ins(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1e438217c_ParamIns>>& _62835_params) {
	if ((_62835_params.len() == 0LL)) {
		_1ca4e23b1_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1ca4e23b1_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _62835_params;
		auto it = expr.begin();
		_iter_begin_1cdb738da:;
		if (it != expr.end()) {
			jule::I64 _63414_i = it - expr.begin();
			jule::Ptr<_1e438217c_ParamIns> _63421_p = *it;
			{
				_1ca522831_param_ins(_self_, _63421_p);
				if (((_62835_params.len() - _63414_i) > 1LL)) {
					_1ca4e23b1_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1cdb738da:;
			++it;
			_63414_i++;
			goto _iter_begin_1cdb738da;
		}
		_iter_end_1cdb738da:;
	};
	_1ca4e23b1_write(_self_, jule::Str(")", 1));
}



inline void _1ca522a95_var_init_expr(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_, jule::Ptr<_1e46c6eb6_Var>& _64338_v, jule::Fn<void(void)> _64347_init) {
	if (_64338_v.get()._field_statically) {
		_1ca4e23b1_write(_self_, jule::Str("static ", 7));
	};
	_1ca4e23b1_write(_self_, static__1ca52b131_kind(_64338_v.get()._field_kind.get()._field_kind));
	_1ca4e23b1_write(_self_, jule::Str(" ", 1));
	if (_64338_v.get()._field_reference) {
		_1ca4e23b1_write(_self_, jule::Str("&", 1));
	};
	_1ca4e23b1_write(_self_, static__1ca4ad404_var(_64338_v));
	if ((_64347_init != nullptr)) {
		_1ca4e23b1_write(_self_, jule::Str(" = ", 3));
		_64347_init();
	};
	_1ca4e23b1_write(_self_, jule::Str(";", 1));
}



inline void _1ca522bc7_var(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_, jule::Ptr<_1e46c6eb6_Var> _66127_v) {
	if (_20cda1e4c_is_ignore_ident(_66127_v.get()._field_ident)) {
		return;;
	};
	if (((_66127_v.get()._field_value != nullptr) && (_66127_v.get()._field_value.get()._field_expr != nullptr))) {
		if ((_66127_v.get()._field_value.get()._field_data.get()._field_model != nullptr)) {
			_1ca522a95_var_init_expr(_self_, _66127_v,jule::Fn<void(void)>([=](void) mutable -> void {
				_1ca4a50ee_val(_self_.get()._field_ec, _66127_v.get()._field_value);
			}));
			return;;
		};
		_1ca522a95_var_init_expr(_self_, _66127_v,nullptr);
		return;;
	};
	_1ca522a95_var_init_expr(_self_, _66127_v,jule::Fn<void(void)>([=](void) mutable -> void {
		_1ca4a5374_init_expr(_self_.get()._field_ec, _66127_v.get()._field_kind.get()._field_kind);
	}));
}



inline void _1ca522d09_func(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_, jule::Ptr<_1e4380576_Fn>& _67629_f) {
	{
		auto &expr = _67629_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1cdb7da49:;
		if (it != expr.end()) {
			jule::Ptr<_1e4383018_FnIns> _67721_ins = *it;
			{
				_1ca522358_func_head(_self_, _67721_ins,false);
				_1ca522963_params_ins(_self_, _67721_ins.get()._field_params);
				_1ca4e23b1_write(_self_, jule::Str(" ", 1));
				_1ca496981_func_scope(_self_.get()._field_sc, _67721_ins);
				if ((_67721_ins.get()._field_scope != nullptr)) {
					_1ca4e23b1_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1cdb7da49:;
			++it;
			goto _iter_begin_1cdb7da49;
		}
		_iter_end_1cdb7da49:;
	};
}



inline void _1ca522e3b_trait_wrappers(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_1cdb8140e:;
		if (it != expr.end()) {
			jule::Ptr<_1ca4d7a49_TraitHash> _68921_hash = *it;
			{
				{
					auto &expr = _68921_hash.get()._field_t.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1cdb81ca0:;
					if (it != expr.end()) {
						jule::Ptr<_1e4380576_Fn> _69025_m = *it;
						{
							jule::Str _69121_ident = _69025_m.get()._field_ident;;
							_69025_m.get()._field_instances[0LL].get()._field_scope=nullptr;
							_69025_m.get()._field_ident=((_69121_ident + jule::Str("_", 1)) + _1e5c30b6c_itoa(_68921_hash.get()._field_i));
							_1ca522d09_func(_self_, _69025_m);
							_69025_m.get()._field_ident=_69121_ident;
							if ((_68921_hash.get()._field_s == nullptr)) {
								if (_23db44461_PRODUCTION) {
									_1ca4e23b1_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
								} else {
									_1ca4e23b1_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
								};
								goto _iter_next_1cdb81ca0;
							};
							jule::Bool _70721_ptr = (!(_1e4355edb_is_ref(_69025_m.get()._field_params[0LL].ptr())));;
							jule::Ptr<_1e4380576_Fn> _70925_sm = _1e4342758_find_method(_68921_hash.get()._field_s.ptr(), _69025_m.get()._field_ident,false);;
							if (((_70925_sm == nullptr) || (_70925_sm.get()._field_instances.len() == 0LL))) {
								goto _iter_next_1cdb81ca0;
							};
							_1ca4e2a98_add_indent(_self_);
							_1ca4e23b1_write(_self_, jule::Str("{\n", 2));
							_1ca4e39cd_indent(_self_);
							if ((!(_1e43807c9_is_void(_70925_sm.ptr())))) {
								_1ca4e23b1_write(_self_, jule::Str("return ", 7));
							};
							_1ca4e23b1_write(_self_, static__1ca4ac090_func(_70925_sm));
							_1ca4e23b1_write(_self_, jule::Str("(", 1));
							if (_70721_ptr) {
								_1ca4e23b1_write(_self_, jule::Str("_self_.safe_ptr<", 16));
								_1ca4e23b1_write(_self_, static__1ca529a25_structure_ins(_68921_hash.get()._field_s));
								_1ca4e23b1_write(_self_, jule::Str(">(", 2));
								if ((!(_23db44461_PRODUCTION))) {
									_1ca4e23b1_write(_self_, jule::Str("_00___file", 10));
								};
								_1ca4e23b1_write(_self_, jule::Str(")", 1));
							} else {
								_1ca4e23b1_write(_self_, jule::Str("_self_.data.as<", 15));
								_1ca4e23b1_write(_self_, static__1ca52977d_structure(_70925_sm.get()._field_owner));
								_1ca4e23b1_write(_self_, jule::Str(">()", 3));
							};
							{
								auto expr = _69025_m.get()._field_params.slice(1LL);
								auto it = expr.begin();
								_iter_begin_1cdb857ba:;
								if (it != expr.end()) {
									jule::Ptr<_1e4380389_Param> _73524_mp = *it;
									{
										_1ca4e23b1_write(_self_, jule::Str(", ", 2));
										_1ca4e23b1_write(_self_, static__1ca4ac876_param(_73524_mp));
									}
									_iter_next_1cdb857ba:;
									++it;
									goto _iter_begin_1cdb857ba;
								}
								_iter_end_1cdb857ba:;
							};
							_1ca4e23b1_write(_self_, jule::Str(");\n}\n", 5));
							_1ca4e32b3_done_indent(_self_);
						}
						_iter_next_1cdb81ca0:;
						++it;
						goto _iter_begin_1cdb81ca0;
					}
					_iter_end_1cdb81ca0:;
				};
			}
			_iter_next_1cdb8140e:;
			++it;
			goto _iter_begin_1cdb8140e;
		}
		_iter_end_1cdb8140e:;
	};
}



inline void _1ca52306d_trait_datas(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_) {
	jule::Ptr<_1e43d8d0a_Trait> _74617_old = nullptr;;
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_1cdb8d73a:;
		if (it != expr.end()) {
			jule::Ptr<_1ca4d7a49_TraitHash> _74721_hash = *it;
			{
				jule::Str _74817_ident = static__1ca4ac5ce_trait_decl(_74721_hash.get()._field_t);;
				if ((_74721_hash.get()._field_t != _74617_old)) {
					if ((_74617_old != nullptr)) {
						_1ca4e32b3_done_indent(_self_);
						_1ca4e39cd_indent(_self_);
						_1ca4e23b1_write(_self_, jule::Str("};\n", 3));
					};
					_1ca4e23b1_write(_self_, jule::Str("static ", 7));
					_1ca4e23b1_write(_self_, _74817_ident);
					_1ca4e23b1_write(_self_, jule::Str("MptrData ", 9));
					_1ca4e23b1_write(_self_, _74817_ident);
					_1ca4e23b1_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
					_74617_old=_74721_hash.get()._field_t;
					_1ca4e2a98_add_indent(_self_);
				};
				_1ca4e39cd_indent(_self_);
				_1ca4e23b1_write(_self_, jule::Str("{\n", 2));
				_1ca4e2a98_add_indent(_self_);
				{
					auto &expr = _74721_hash.get()._field_t.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1cdb92dd2:;
					if (it != expr.end()) {
						jule::Ptr<_1e4380576_Fn> _76625_m = *it;
						{
							jule::Str _76721_m_ident = static__1ca4ac090_func(_76625_m);;
							_1ca4e39cd_indent(_self_);
							_1ca4e23b1_write(_self_, jule::Str(".", 1));
							_1ca4e23b1_write(_self_, _76721_m_ident);
							_1ca4e23b1_write(_self_, jule::Str("=", 1));
							_1ca4e23b1_write(_self_, _76721_m_ident);
							_1ca4e23b1_write(_self_, jule::Str("_", 1));
							_1ca4e23b1_write(_self_, _1e5c30b6c_itoa(_74721_hash.get()._field_i));
							_1ca4e23b1_write(_self_, jule::Str(",\n", 2));
						}
						_iter_next_1cdb92dd2:;
						++it;
						goto _iter_begin_1cdb92dd2;
					}
					_iter_end_1cdb92dd2:;
				};
				_1ca4e32b3_done_indent(_self_);
				_1ca4e39cd_indent(_self_);
				_1ca4e23b1_write(_self_, jule::Str("},\n", 3));
			}
			_iter_next_1cdb8d73a:;
			++it;
			goto _iter_begin_1cdb8d73a;
		}
		_iter_end_1cdb8d73a:;
	};
	if ((_74617_old != nullptr)) {
		_1ca4e32b3_done_indent(_self_);
		_1ca4e39cd_indent(_self_);
		_1ca4e23b1_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _1ca5231a0_globals(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_globals;
		auto it = expr.begin();
		_iter_begin_1cdb97d2c:;
		if (it != expr.end()) {
			jule::Ptr<_1e46c6eb6_Var> _78921_v = *it;
			{
				_1ca4e23b1_write(_self_, static__1ca52b131_kind(_78921_v.get()._field_kind.get()._field_kind));
				_1ca4e23b1_write(_self_, jule::Str(" ", 1));
				if (_78921_v.get()._field_reference) {
					_1ca4e23b1_write(_self_, jule::Str("&", 1));
				};
				_1ca4e23b1_write(_self_, static__1ca4ad404_var(_78921_v));
				_1ca4e23b1_write(_self_, jule::Str(" = ", 3));
				_1ca4a50ee_val(_self_.get()._field_ec, _78921_v.get()._field_value);
				_1ca4e23b1_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1cdb97d2c:;
			++it;
			goto _iter_begin_1cdb97d2c;
		}
		_iter_end_1cdb97d2c:;
	};
}



inline void _1ca5232d2_decls(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_) {
	_1ca52116a_trait_decls(_self_);
	_1ca5213ce_structure_plain_decls(_self_);
	_1ca5220e4_structure_decls(_self_);
	_1ca5225bc_func_decls(_self_);
	_1ca4e23b1_write(_self_, jule::Str("\n\n", 2));
	_1ca5226ee_trait_data_types(_self_);
	_1ca4e23b1_write(_self_, jule::Str("\n\n", 2));
	_1ca522e3b_trait_wrappers(_self_);
	_1ca4e23b1_write(_self_, jule::Str("\n\n", 2));
	_1ca52306d_trait_datas(_self_);
	_1ca4e23b1_write(_self_, jule::Str("\n\n", 2));
	_1ca5231a0_globals(_self_);
}



inline void _1ca523414_structure_methods(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_, jule::Ptr<_1e43462ea_StructIns>& _81742_s) {
	{
		auto &expr = _81742_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1cdb9eb9c:;
		if (it != expr.end()) {
			jule::Ptr<_1e4380576_Fn> _81821_f = *it;
			{
				_1ca522d09_func(_self_, _81821_f);
				_1ca4e23b1_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1cdb9eb9c:;
			++it;
			goto _iter_begin_1cdb9eb9c;
		}
		_iter_end_1cdb9eb9c:;
	};
}



inline void _1ca523645_structure_derive_defs(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_, jule::Ptr<_1e43462ea_StructIns>& _82446_s) {
	if (_1e433ab2a_is_derives(_82446_s.get()._field_decl.ptr(), jule::Str("Clone", 5))) {
		_1ca4e23b1_write(_self_, static__1ca4a7ba1_clone_func_def(_82446_s.get()._field_decl));
		_1ca4e23b1_write(_self_, jule::Str("{\n", 2));
		_1ca4e2a98_add_indent(_self_);
		_1ca4e39cd_indent(_self_);
		_1ca4e23b1_write(_self_, static__1ca529a25_structure_ins(_82446_s));
		_1ca4e23b1_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto &expr = _82446_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1cdba35eb:;
			if (it != expr.end()) {
				jule::Ptr<_1e434014b_FieldIns> _83220_f = *it;
				{
					jule::Str _83321_ident = static__1ca4ad15c_field(_83220_f.get()._field_decl);;
					_1ca4e39cd_indent(_self_);
					_1ca4e23b1_write(_self_, jule::Str("clone.", 6));
					_1ca4e23b1_write(_self_, _83321_ident);
					_1ca4e23b1_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_1ca4e23b1_write(_self_, _83321_ident);
					_1ca4e23b1_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_1cdba35eb:;
				++it;
				goto _iter_begin_1cdba35eb;
			}
			_iter_end_1cdba35eb:;
		};
		_1ca4e39cd_indent(_self_);
		_1ca4e23b1_write(_self_, jule::Str("return clone;\n", 14));
		_1ca4e32b3_done_indent(_self_);
		_1ca4e23b1_write(_self_, jule::Str("}", 1));
	};
}



inline void _1ca5238ba_structure_ostream(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_, jule::Ptr<_1e43462ea_StructIns>& _84842_s) {
	_1ca4e39cd_indent(_self_);
	_1ca4e23b1_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_1ca4e23b1_write(_self_, static__1ca4acdb5_structure_ins(_84842_s));
	_1ca4e23b1_write(_self_, jule::Str(" _Src) {\n", 9));
	_1ca4e2a98_add_indent(_self_);
	_1ca4e39cd_indent(_self_);
	jule::Ptr<_1e4380576_Fn> _85617_fts = _1e4342758_find_method(_84842_s.ptr(), jule::Str("to_str", 6),false);;
	if (static__1e46c83d5_to_str(_85617_fts)) {
		_1ca4e23b1_write(_self_, jule::Str("_Stream << ", 11));
		_1ca4e23b1_write(_self_, static__1ca4ac090_func(_85617_fts));
		_1ca4e23b1_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_1ca4e23b1_write(_self_, jule::Str("_Stream << \"", 12));
		_1ca4e23b1_write(_self_, _84842_s.get()._field_decl.get()._field_ident);
		_1ca4e23b1_write(_self_, jule::Str("{\";\n", 4));
		{
			auto &expr = _84842_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1cdbac33b:;
			if (it != expr.end()) {
				jule::I64 _86618_i = it - expr.begin();
				jule::Ptr<_1e434014b_FieldIns> _86625_f = *it;
				{
					_1ca4e39cd_indent(_self_);
					_1ca4e23b1_write(_self_, jule::Str("_Stream << \"", 12));
					_1ca4e23b1_write(_self_, _86625_f.get()._field_decl.get()._field_ident);
					_1ca4e23b1_write(_self_, jule::Str(":", 1));
					jule::Ptr<_1e43462ea_StructIns> _87321_strct = _1c9777999_strct(_86625_f.get()._field_kind.ptr());;
					if ((((_87321_strct != nullptr) && (_87321_strct.get()._field_decl != nullptr)) && _87321_strct.get()._field_decl.get()._field_cpp_linked)) {
						_1ca4e23b1_write(_self_, jule::Str(" cpp.", 5));
						_1ca4e23b1_write(_self_, static__1ca4ad15c_field(_86625_f.get()._field_decl));
						_1ca4e23b1_write(_self_, jule::Str("\"", 1));
					} else {
						_1ca4e23b1_write(_self_, jule::Str("\" << _Src.", 10));
						_1ca4e23b1_write(_self_, static__1ca4ad15c_field(_86625_f.get()._field_decl));
					};
					if (((_86618_i + 1LL) < _84842_s.get()._field_fields.len())) {
						_1ca4e23b1_write(_self_, jule::Str(" << \", \"", 8));
					};
					_1ca4e23b1_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_1cdbac33b:;
				++it;
				_86618_i++;
				goto _iter_begin_1cdbac33b;
			}
			_iter_end_1cdbac33b:;
		};
		_1ca4e39cd_indent(_self_);
		_1ca4e23b1_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_1ca4e39cd_indent(_self_);
	_1ca4e23b1_write(_self_, jule::Str("return _Stream;\n", 16));
	_1ca4e32b3_done_indent(_self_);
	_1ca4e23b1_write(_self_, jule::Str("}", 1));
}



inline void _1ca523b40_structure_ins(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_, jule::Ptr<_1e43462ea_StructIns>& _89938_s) {
	_1ca523414_structure_methods(_self_, _89938_s);
	_1ca4e23b1_write(_self_, jule::Str("\n\n", 2));
	_1ca523645_structure_derive_defs(_self_, _89938_s);
	_1ca4e23b1_write(_self_, jule::Str("\n\n", 2));
	_1ca5238ba_structure_ostream(_self_, _89938_s);
}



inline void _1ca523db5_structure(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_, jule::Ptr<_1e43360cb_Struct>& _90734_s) {
	{
		auto &expr = _90734_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1cdbb681d:;
		if (it != expr.end()) {
			jule::Ptr<_1e43462ea_StructIns> _90821_ins = *it;
			{
				_1ca523b40_structure_ins(_self_, _90821_ins);
				_1ca4e23b1_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1cdbb681d:;
			++it;
			goto _iter_begin_1cdbb681d;
		}
		_iter_end_1cdbb681d:;
	};
}



inline void _1ca524091_structures(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1cdbb7ee5:;
		if (it != expr.end()) {
			jule::Ptr<_1e43360cb_Struct> _91521_s = *it;
			{
				if ((_91521_s.get()._field_token != nullptr)) {
					_1ca523db5_structure(_self_, _91521_s);
					_1ca4e23b1_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1cdbb7ee5:;
			++it;
			goto _iter_begin_1cdbb7ee5;
		}
		_iter_end_1cdbb7ee5:;
	};
}



inline void _1ca52426c_funcs(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_) {
	_1ca520e06_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1e46a742a_Package>&)>([=](jule::Ptr<_1e46a742a_Package>& _92436_pkg) mutable -> void {
		_1ca5250b4_iter_files(_92436_pkg,jule::Fn<void(jule::Ptr<_1c9745c42_SymbolTable>&)>([=](jule::Ptr<_1c9745c42_SymbolTable>& _92537_file) mutable -> void {
			{
				auto &expr = _92537_file.get()._field_funcs;
				auto it = expr.begin();
				_iter_begin_1cdbbb779:;
				if (it != expr.end()) {
					jule::Ptr<_1e4380576_Fn> _92629_f = *it;
					{
						if (((!(_23db43bbe_TEST)) && _1ca52d2dc_has_directive(_92629_f.get()._field_directives,jule::Str("test", 4)))) {
							goto _iter_next_1cdbbb779;
						};
						if (((!(_92629_f.get()._field_cpp_linked)) && (_92629_f.get()._field_token != nullptr))) {
							_1ca522d09_func(_self_, _92629_f);
							_1ca4e23b1_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_1cdbbb779:;
					++it;
					goto _iter_begin_1cdbbb779;
				}
				_iter_end_1cdbbb779:;
			};
		}));
	}));
}



inline void _1ca5244e2_push_init(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_, jule::Ptr<_1e46a742a_Package>& _93934_pkg) {
	_1ca5250b4_iter_files(_93934_pkg,jule::Fn<void(jule::Ptr<_1c9745c42_SymbolTable>&)>([=](jule::Ptr<_1c9745c42_SymbolTable>& _94033_file) mutable -> void {
		{
			auto &expr = _94033_file.get()._field_funcs;
			auto it = expr.begin();
			_iter_begin_1cdbbe9e1:;
			if (it != expr.end()) {
				jule::Ptr<_1e4380576_Fn> _94120_f = *it;
				{
					if ((_94120_f.get()._field_ident == jule::Str("init", 4))) {
						_1ca4e39cd_indent(_self_);
						_1ca4e23b1_write(_self_, static__1ca4ac090_func(_94120_f));
						_1ca4e23b1_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_1cdbbe9e1:;
				++it;
				goto _iter_begin_1cdbbe9e1;
			}
			_iter_end_1cdbbe9e1:;
		};
	}));
}



inline void _1ca5246bd_init_caller(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_) {
	_1ca4e23b1_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_1ca4e2a98_add_indent(_self_);
	_1ca520e06_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1e46a742a_Package>&)>([=](jule::Ptr<_1e46a742a_Package>& _95436_pkg) mutable -> void {
		_1ca5244e2_push_init(_self_, _95436_pkg);
	}));
	_1ca4e32b3_done_indent(_self_);
	_1ca4e23b1_write(_self_, jule::Str("\n}", 2));
}



inline void _1ca524899_end(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_) {
	_1ca4e23b1_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_23db43bbe_TEST) {
		_1ca4e23b1_write(_self_, jule::Str("test_point();", 13));
	} else {
		_1ca4e23b1_write(_self_, jule::Str("entry_point();", 14));
	};
	_1ca4e23b1_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1ca524a75_serialize_head(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_) {
	_1ca50579d_prepare_structures(_self_);
	_1ca521038_build_trait_map(_self_);
	_1ca4e500c_head(_self_);
	_1ca4d99e6_links(_self_);
	_1ca4e23b1_write(_self_, jule::Str("\n", 1));
	_1ca5232d2_decls(_self_);
	_1ca4e23b1_write(_self_, jule::Str("\n", 1));
	_1ca524091_structures(_self_);
	_1ca52426c_funcs(_self_);
	_1ca5246bd_init_caller(_self_);
	_1ca4e23b1_write(_self_, jule::Str("\n\n", 2));
}



inline void _1ca524c51_serialize(jule::Ptr<_1ca4d7c36_ObjectCoder> _self_) {
	_1ca524a75_serialize_head(_self_);
	_1ca524899_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1ca4d7c36_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "obj:" << _Src._field_obj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indent_buffer:" << _Src._field_indent_buffer << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::I64,jule::Bool> _1cdc3e9a6_parse_integer(_1ca6cd02a_ArgParser* _self_, jule::Str& _19032_s, jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)> _19040_parser) {
	jule::I64 _19084_x = jule::I64();
	jule::Bool _19090_ok = jule::Bool();
	{
		
		if (_19032_s.empty()) {
			_case_begin_1cdc44824:;
			{
				_19084_x = 0LL;
				_19090_ok = false;
				return std::make_tuple(_19084_x,_19090_ok);
			}
		}
		else if (_20c83c443_has_prefix(_19032_s,jule::Str("0x", 2))) {
			_case_begin_1cdc4488a:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),16LL);
			}
		}
		else if (_20c83c443_has_prefix(_19032_s,jule::Str("0b", 2))) {
			_case_begin_1cdc44604:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),2LL);
			}
		}
		else if (_20c83c443_has_prefix(_19032_s,jule::Str("0o", 2))) {
			_case_begin_1cdc4466a:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),8LL);
			}
		}
		else if ((_19032_s[0LL] == '0')) {
			_case_begin_1cdc43c30:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1cdc43bb9:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s,10LL);
			}
		}
		_match_end_1cdc43aed:;
	};
	return std::make_tuple(_19084_x,_19090_ok);
}

inline std::tuple<jule::U64,jule::Bool> _1cdc482d9_parse_integer(_1ca6cd02a_ArgParser* _self_, jule::Str& _19032_s, jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)> _19040_parser) {
	jule::U64 _19084_x = jule::U64();
	jule::Bool _19090_ok = jule::Bool();
	{
		
		if (_19032_s.empty()) {
			_case_begin_1cdc4d025:;
			{
				_19084_x = 0LLU;
				_19090_ok = false;
				return std::make_tuple(_19084_x,_19090_ok);
			}
		}
		else if (_20c83c443_has_prefix(_19032_s,jule::Str("0x", 2))) {
			_case_begin_1cdc4d08b:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),16LL);
			}
		}
		else if (_20c83c443_has_prefix(_19032_s,jule::Str("0b", 2))) {
			_case_begin_1cdc4cd05:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),2LL);
			}
		}
		else if (_20c83c443_has_prefix(_19032_s,jule::Str("0o", 2))) {
			_case_begin_1cdc4cd6b:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),8LL);
			}
		}
		else if ((_19032_s[0LL] == '0')) {
			_case_begin_1cdc4c431:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1cdc4c3ba:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s,10LL);
			}
		}
		_match_end_1cdc4c2ee:;
	};
	return std::make_tuple(_19084_x,_19090_ok);
}



inline jule::Str _1ca6cd7de_get_data(_1ca6cd02a_ArgParser* _self_) {
	if ((((*_self_)._field_i + 1LL) >= (*_self_)._field_args.len())) {
		return jule::Str();
	};
	((*_self_)._field_i)++;
	return (*_self_)._field_args[(*_self_)._field_i];
}



inline jule::VoidExceptional _1ca6cda64_process_flag(_1ca6cd02a_ArgParser* _self_, jule::Trait<_1ca6c8dd3_CommonFlag>& _21736_flag) {
	{
		auto &_match_expr{ _21736_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1cdc2992a_Flag>>()) {
			_case_begin_1cdc3bc6c:;
			{
				jule::Ptr<_1cdc2992a_Flag> _22021_bf = _21736_flag.operator jule::Ptr<_1cdc2992a_Flag>();;
				(*(_22021_bf.get()._field__data))=(!(_22021_bf.get()._field__default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_1cdc3bbd4:;
	};
	jule::Str _22513_data = _1ca6cd7de_get_data(&(*_self_));;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(((jule::Str("--", 2) + _1ca6c8dd3_CommonFlag_mptr_data[(_21736_flag).type_offset]._1ca536867_name(_21736_flag)) + jule::Str(": expression missing", 20)));
	};
	{
		auto &_match_expr{ _21736_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1cdc1e216_Flag>>()) {
			_case_begin_1cdc3db70:;
			{
				jule::Ptr<_1cdc1e216_Flag> _23221_intf = _21736_flag.operator jule::Ptr<_1cdc1e216_Flag>();;
				jule::Bool _23333_ok;;
				std::tie((*(_23221_intf.get()._field__data)),_23333_ok) = _1cdc3e9a6_parse_integer(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _23372_s, jule::I64 _23380_base) mutable -> std::tuple<jule::I64,jule::Bool> {
					return std::make_tuple(static_cast<jule::I64>(({
						auto except = _1e569a61a_parse_int(_23372_s,_23380_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LL,false);
						} jule::I64();});
					})),true);
				}));
				if ((!(_23333_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _1ca6c8dd3_CommonFlag_mptr_data[(_21736_flag).type_offset]._1ca536867_name(_21736_flag)) + jule::Str(": expression must be valid signed integer", 41)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1cdc22c75_Flag>>()) {
			_case_begin_1cdc3dbd6:;
			{
				jule::Ptr<_1cdc22c75_Flag> _24021_uintf = _21736_flag.operator jule::Ptr<_1cdc22c75_Flag>();;
				jule::Bool _24134_ok;;
				std::tie((*(_24021_uintf.get()._field__data)),_24134_ok) = _1cdc482d9_parse_integer(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _24173_s, jule::I64 _24181_base) mutable -> std::tuple<jule::U64,jule::Bool> {
					return std::make_tuple(static_cast<jule::U64>(({
						auto except = _1e47dca05_parse_uint(_24173_s,_24181_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LLU,false);
						} jule::U64();});
					})),true);
				}));
				if ((!(_24134_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _1ca6c8dd3_CommonFlag_mptr_data[(_21736_flag).type_offset]._1ca536867_name(_21736_flag)) + jule::Str(": expression must be valid unsigned integer", 43)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1cdc2632d_Flag>>()) {
			_case_begin_1cdc3dc4c:;
			{
				jule::Ptr<_1cdc2632d_Flag> _24821_ff = _21736_flag.operator jule::Ptr<_1cdc2632d_Flag>();;
				(*(_24821_ff.get()._field__data))=static_cast<jule::F64>(({
					auto except = _1e5c2cc8a_parse_float(_22513_data,64LL);
					(except.ok()) ? (except.result) : ({{
						return jule::VoidExceptional(((jule::Str("--", 2) + _1ca6c8dd3_CommonFlag_mptr_data[(_21736_flag).type_offset]._1ca536867_name(_21736_flag)) + jule::Str(": expression must be valid floating-point", 41)));
					} jule::F64();});
				}));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1cdc2ced3_Flag>>()) {
			_case_begin_1cdc3dcb3:;
			{
				(*(_21736_flag.operator jule::Ptr<_1cdc2ced3_Flag>().get()._field__data))=_22513_data;
			}
		}
		_match_end_1cdc3d1ad:;
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1ca6cdcd9_single_dash(_1ca6cd02a_ArgParser* _self_, jule::Str& _25731_arg) {
	if ((_25731_arg.len() == 1LL)) {
		return jule::VoidExceptional((_25731_arg + jule::Str(": missing argument", 18)));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>(_25731_arg).slice(1LL);;
	{
		auto &expr = _26113_rarg;
		auto it = expr.begin();
		_iter_begin_1cdc540b4:;
		if (it != expr.end()) {
			jule::I32 &_26216_r = *it;
			{
				jule::Trait<_1ca6c8dd3_CommonFlag> _26321_flag = _1ca6cb3d0_find_flag_short(&(*_self_)._field_set, _26216_r);;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(((_25731_arg + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>(_26216_r)));
				};
				({
					auto except = _1ca6cda64_process_flag(&(*_self_), _26321_flag);
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1cdc540b4:;
			++it;
			goto _iter_begin_1cdc540b4;
		}
		_iter_end_1cdc540b4:;
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1ca6ce05e_double_dash(_1ca6cd02a_ArgParser* _self_, jule::Str& _27231_arg) {
	if ((_27231_arg.len() == 2LL)) {
		return jule::VoidExceptional((_27231_arg + jule::Str(": missing argument", 18)));
	};
	jule::Trait<_1ca6c8dd3_CommonFlag> _27617_flag = _1ca6cb0c2_find_flag(&(*_self_)._field_set, _27231_arg.slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional((_27231_arg + jule::Str(": flag is not exist", 19)));
	};
	({
		auto except = _1ca6cda64_process_flag(&(*_self_), _27617_flag);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1ca6ce23a_try_arg(_1ca6cd02a_ArgParser* _self_) {
	jule::Str _28513_arg = (*_self_)._field_args[(*_self_)._field_i];;
	if (((*_self_)._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28513_arg[0LL] == '-')) {
		if (((_28513_arg.len() > 1LL) && (_28513_arg[1LL] == '-'))) {
			({
				auto except = _1ca6ce05e_double_dash(&(*_self_), _28513_arg);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _1ca6cdcd9_single_dash(&(*_self_), _28513_arg);
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	(*_self_)._field_content = jule::alloc_for_append((*_self_)._field_content,1);(*_self_)._field_content.__push(_28513_arg);;
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1ca6ce416_parse(_1ca6cd02a_ArgParser* _self_) {
	for (; ((*_self_)._field_i < (*_self_)._field_args.len()); ((*_self_)._field_i)++) {
		{
			({
				auto except = _1ca6ce23a_try_arg(&(*_self_));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1cdc5bb49:;
	}
	_iter_end_1cdc5bb49:;;
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1ca6cd02a_ArgParser _Src) {
	_Stream << "ArgParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::I32 _2253a4107_decode_rune(jule::I32 _6820_r1, jule::I32 _6830_r2) {
	if (((((55296LL <= _6820_r1) && (_6820_r1 < 56320LL)) && (56320LL <= _6830_r2)) && (_6830_r2 < 57344LL))) {
		return static_cast<jule::I32>(((((_6820_r1 - 55296LL) << 10LL) | (_6830_r2 - 56320LL)) + 65536LL));
	};
	return 65533LL;
}



inline std::tuple<jule::I32,jule::I32> _2253a439e_encode_rune(jule::I32 _7824_r) {
	jule::I32 _7835_r1 = jule::I32();
	jule::I32 _7845_r2 = jule::I32();
	if (((_7824_r < 65536LL) || (_7824_r > 1114111LL))) {
		_7835_r1 = 65533LL;
		_7845_r2 = 65533LL;
		return std::make_tuple(_7835_r1,_7845_r2);
	};
	_7824_r-=65536LL;
	_7835_r1 = static_cast<jule::I32>((55296LL + ((_7824_r >> 10LL) & 1023LL)));
	_7845_r2 = static_cast<jule::I32>((56320LL + (_7824_r & 1023LL)));
	return std::make_tuple(_7835_r1,_7845_r2);
}



inline jule::Slice<jule::I32> _2253a4932_decode(jule::Slice<jule::U16> _11915_s) {
	jule::Slice<jule::I32> _12013_a = jule::Slice<jule::I32>::alloc(_11915_s.len());;
	jule::I64 _12113_n = 0LL;;
	jule::I64 _12213_i = 0LL;;
	for (; (_12213_i < _11915_s.len()); (_12213_i)++) {
		{
			jule::U16 _12413_r = _11915_s[_12213_i];;
			{
				
				if ((_12413_r < 55296LLU) || (57344LL <= _12413_r)) {
					_case_begin_1ca6ddc94:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(static_cast<jule::I32>(_12413_r));
					}
				}
				else if (((((_12413_r < 56320LLU) && ((_12213_i + 1LL) < _11915_s.len())) && (56320LL <= _11915_s[(_12213_i + 1LL)])) && (_11915_s[(_12213_i + 1LL)] < 57344LLU))) {
					_case_begin_1ca6dd986:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(_2253a4107_decode_rune(static_cast<jule::I32>(static_cast<jule::I32>(_12413_r)),static_cast<jule::I32>(static_cast<jule::I32>(_11915_s[(_12213_i + 1LL)]))));
						(_12213_i)++;
					}
				}
				else {
					_case_begin_1ca6dd920:;
					{
						_12013_a[_12113_n]=65533LL;
					}
				}
				_match_end_1ca6dd898:;
			};
			(_12113_n)++;
		}
	_iter_next_1ca6dc6bb:;
	}
	_iter_end_1ca6dc6bb:;;
	return _12013_a.slice(0LL,_12113_n);
}



inline jule::Slice<jule::U16> _2253a4c73_append_rune(jule::Slice<jule::U16> _14924_a, jule::I32 _14934_r) {
	{
		
		if (((0LL <= _14934_r) && (_14934_r < 55296LL)) || ((57344LL <= _14934_r) && (_14934_r < 65536LL))) {
			_case_begin_1ca6dd018:;
			{
				return jule::append(_14924_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(static_cast<jule::U16>(_14934_r))}));
			}
		}
		else if (((65536LL <= _14934_r) && (_14934_r <= 1114111LL))) {
			_case_begin_1ca6dd07e:;
			{
				jule::I32 _15614_r1;;
				jule::I32 _15618_r2;;
				std::tie(_15614_r1,_15618_r2) = _2253a439e_encode_rune(_14934_r);
				return jule::append(_14924_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(static_cast<jule::U16>(_15614_r1)),static_cast<jule::U16>(static_cast<jule::U16>(_15618_r2))}));
			}
		}
		_match_end_1ca6e0e0b:;
	};
	return jule::append(_14924_a,jule::Slice<jule::U16>::make({65533LLU}));
}



inline jule::Slice<jule::U16> _22539180e_utf16_from_str(jule::Str _1423_s) {
	;
	jule::Slice<jule::I32> _209_runes = static_cast<jule::Slice<jule::I32>>(_1423_s);;
	jule::Slice<jule::U16> _2113_buff = jule::Slice<jule::U16>::alloc(0LL,_209_runes.len());;
	{
		auto &expr = _209_runes;
		auto it = expr.begin();
		_iter_begin_1ca5a31ca:;
		if (it != expr.end()) {
			jule::I32 &_2212_r = *it;
			{
				if ((_2212_r == 0LL)) {
					goto _iter_end_1ca5a31ca;
				};
				_2113_buff=_2253a4c73_append_rune(_2113_buff,_2212_r);
			}
			_iter_next_1ca5a31ca:;
			++it;
			goto _iter_begin_1ca5a31ca;
		}
		_iter_end_1ca5a31ca:;
	};
	return _2253a4c73_append_rune(_2113_buff,0LL);
}



inline jule::Str _22538d894_utf16_to_str(jule::Slice<jule::U16> _3421_s) {
	if ((_3421_s == nullptr)) {
		return jule::Str();
	};
	jule::Slice<jule::U16> _3813_code_page = _3421_s;;
	{
		auto &expr = _3421_s;
		auto it = expr.begin();
		_iter_begin_1ca61c61d:;
		if (it != expr.end()) {
			jule::I64 _399_i = it - expr.begin();
			jule::U16 &_3912_v = *it;
			{
				if ((_3912_v == 0LLU)) {
					_3813_code_page=_3813_code_page.slice(0LL,_399_i);
					goto _iter_end_1ca61c61d;
				};
			}
			_iter_next_1ca61c61d:;
			++it;
			_399_i++;
			goto _iter_begin_1ca61c61d;
		}
		_iter_end_1ca61c61d:;
	};
	return static_cast<jule::Str>(_2253a4932_decode(_3813_code_page));
}



inline jule::Str _22539358b_u16_ptr_to_str(jule::U16* _5030_s) {
	if ((_5030_s == nullptr)) {
		return jule::Str();
	};
	jule::Slice<jule::U16> _5513_code_page = nullptr;;
	jule::I64 _5613_i = 0LL;;
	for (; ; (_5613_i)++) {
		{
			jule::U16 _5813_r = _5030_s[_5613_i];;
			if ((_5813_r == 0LLU)) {
				return static_cast<jule::Str>(_2253a4932_decode(_5513_code_page));
			};
			_5513_code_page = jule::alloc_for_append(_5513_code_page,1);_5513_code_page.__push(_5813_r);;
		}
	_iter_next_1ca5a0c55:;
	}
	_iter_end_1ca5a0c55:;;
	return jule::Str();
}



inline jule::I64 _22520c6d0_get_last_errno(void) {
	return errno;
}



inline jule::U64 _2253a5bec_get_std_handle(jule::U64 _5423_stdh) {
	return static_cast<jule::U64>(((jule::U64)(GetStdHandle(_5423_stdh))));
}



inline jule::I64 _2253a62d5_wstat(jule::U16* _5821_path, struct stat* _5837_stat) {
	return static_cast<jule::I64>(wstat(((wchar_t*)(_5821_path)),_5837_stat));
}



inline jule::I64 _2253a66c0__wopen(jule::U16* _6322_path, jule::I64 _6334_flag, jule::I64 _6345_mode) {
	return static_cast<jule::I64>(_wopen(((wchar_t*)((&(_6322_path[0LL])))),_6334_flag,_6345_mode));
}



inline jule::U32 _2253a68bd_get_last_error(void) {
	return static_cast<jule::U32>(GetLastError());
}



inline jule::U32 _2253a6c0e_get_current_directory(jule::U32 _7237_bufflen, jule::U16* _7255_buff) {
	return static_cast<jule::U32>(GetCurrentDirectoryW(_7237_bufflen,((wchar_t*)(_7255_buff))));
}



inline jule::Bool _2253a724d_delete_file(jule::U16* _8327_path) {
	return DeleteFileW(((wchar_t*)(_8327_path)));
}



inline jule::Bool _2253a74e5_create_directory(jule::U16* _8832_path) {
	return CreateDirectoryW(((wchar_t*)(_8832_path)),nullptr);
}



inline jule::Bool _2253a778c_remove_directory(jule::U16* _9332_path) {
	return RemoveDirectoryW(((wchar_t*)(_9332_path)));
}



inline _WDIR* _2253a7a34__wopendir(jule::U16* _9825_path) {
	return _wopendir(((wchar_t*)(_9825_path)));
}



inline struct _wdirent* _2253a7ccb__wreaddir(_WDIR* _10129_dir) {
	return _wreaddir(_10129_dir);
}



inline jule::I64 _2253a8073__wclosedir(_WDIR* _10430_dir) {
	return static_cast<jule::I64>(_wclosedir(_10430_dir));
}



inline jule::U32 _2253a8749_get_full_path_name(jule::U16* _10734_path, jule::U32 _10746_bufflen, jule::U16* _1085_buff, jule::U16** _10817_fname) {
	return static_cast<jule::U32>(GetFullPathNameW(((wchar_t*)(_10734_path)),_10746_bufflen,((wchar_t*)(_1085_buff)),((wchar_t**)(_10817_fname))));
}



inline jule::Bool _2253a8a8a_get_console_mode(jule::U64 _11325_handle, jule::I64& _11346_mode) {
	return GetConsoleMode(((HANDLE)(_11325_handle)),((DWORD*)((&(_11346_mode)))));
}



inline jule::Bool _2253a8dcb_set_console_mode(jule::U64 _11825_handle, jule::I64 _11841_mode) {
	return SetConsoleMode(((HANDLE)(_11825_handle)),static_cast<DWORD>(_11841_mode));
}



inline jule::Bool _2253a9409_write_console(jule::U64 _12329_handle, jule::U16* _12345_buffer, jule::I64 _12359_to_write, jule::I64& _12410_written, void* _12424_reserved) {
	return WriteConsoleW(((HANDLE)(_12329_handle)),((void*)(_12345_buffer)),static_cast<DWORD>(_12359_to_write),((DWORD*)(_12410_written)),_12424_reserved);
}



inline jule::Bool _2253a9937_read_console(jule::U64 _13028_handle, jule::U16* _13048_buffer, jule::I64 _13062_to_read, jule::I64& _13110_readed, void* _13123_input_control) {
	return ReadConsoleW(((HANDLE)(_13028_handle)),((void*)(_13048_buffer)),static_cast<DWORD>(_13062_to_read),((DWORD*)((&(_13110_readed)))),_13123_input_control);
}



inline jule::I64 _2253abc69_seek(jule::I64 _2613_handle, jule::I64 _2626_offset, jule::I64 _2639_origin) {
	return static_cast<jule::I64>(lseek(_2613_handle,_2626_offset,_2639_origin));
}



inline jule::I64 _2253ac154_read(jule::I64 _3120_handle, void* _3137_buff, jule::U64 _3152_n) {
	return static_cast<jule::I64>(read(_3120_handle,_3137_buff,_3152_n));
}



inline jule::I64 _2253ac484_close(jule::I64 _3614_handle) {
	return static_cast<jule::I64>(close(_3614_handle));
}



inline jule::I64 _2253ac86e_write(jule::I64 _3921_handle, void* _3934_buff, jule::U64 _3949_n) {
	return static_cast<jule::I64>(write(_3921_handle,_3934_buff,_3949_n));
}



inline void _2253aca7d_exit(jule::I64 _4413_code) {
	exit(_4413_code);
}



inline std::tuple<jule::I32,jule::I64> _225490666_decode_rune(jule::Slice<jule::U8> _18220_p) {
	jule::I32 _18233_r = jule::I32();
	jule::I64 _18242_size = jule::I64();
	if ((_18220_p.len() < 1LL)) {
		_18233_r = 65533LL;
		_18242_size = 0LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::U8 _1869_p0 = _18220_p[0LL];;
	jule::U8 _1879_x = _22548e4ab_FIRST[static_cast<jule::I64>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		_18233_r = static_cast<jule::I32>(((static_cast<jule::I32>(_18220_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::I64 _1959_sz = static_cast<jule::I64>((_1879_x & 7LLU));;
	_22548ea2d_accept_range _1969_accept = _22548ed80_ACCEPT_RANGES[static_cast<jule::I64>((_1879_x >> 4LLU))];;
	if ((_18220_p.len() < _1959_sz)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::U8 _2009_b1 = _18220_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	if ((_1959_sz <= 2LL)) {
		_18233_r = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		_18242_size = 2LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::U8 _2079_b2 = _18220_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	if ((_1959_sz <= 3LL)) {
		_18233_r = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		_18242_size = 3LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::U8 _2149_b3 = _18220_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	_18233_r = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	_18242_size = 4LL;
	return std::make_tuple(_18233_r,_18242_size);
}



inline std::tuple<jule::I32,jule::I64> _225490be9_decode_last_rune(jule::Slice<jule::U8> _27625_p) {
	jule::I32 _27638_r = jule::I32();
	jule::I64 _27647_size = jule::I64();
	if ((_27625_p.len() == 0LL)) {
		_27638_r = 65533LL;
		_27647_size = 0LL;
		return std::make_tuple(_27638_r,_27647_size);
	};
	jule::I64 _2809_end = _27625_p.len();;
	jule::I64 _28113_start = (_2809_end - 1LL);;
	_27638_r=static_cast<jule::I32>(static_cast<jule::I32>(_27625_p[_28113_start]));
	if ((_27638_r < 128LL)) {
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	};
	jule::I64 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_22549257a_rune_start(_27625_p[_28113_start])) {
				goto _iter_end_1ca8515dd;
			};
		}
	_iter_next_1ca8515dd:;
	}
	_iter_end_1ca8515dd:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	std::tie(_27638_r,_27647_size) = _225490666_decode_rune(_27625_p.slice(_28113_start,_2809_end));
	if (((_28113_start + _27647_size) != _2809_end)) {
		_27638_r = 65533LL;
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	};
	return std::make_tuple(_27638_r,_27647_size);
}



inline jule::I64 _225491238_rune_len(jule::I32 _35217_r) {
	{
		
		if ((_35217_r < 0LL)) {
			_case_begin_1ca858804:;
			{
				return -1LL;
			}
		}
		else if ((_35217_r <= 127LL)) {
			_case_begin_1ca8585e5:;
			{
				return 1LL;
			}
		}
		else if ((_35217_r <= 2047LL)) {
			_case_begin_1ca85865b:;
			{
				return 2LL;
			}
		}
		else if (((55296LL <= _35217_r) && (_35217_r <= 57343LL))) {
			_case_begin_1ca8586d3:;
			{
				return -1LL;
			}
		}
		else if ((_35217_r <= 65535LL)) {
			_case_begin_1ca858480:;
			{
				return 3LL;
			}
		}
		else if ((_35217_r <= 1114111LL)) {
			_case_begin_1ca858507:;
			{
				return 4LL;
			}
		}
		else {
			_case_begin_1ca85800c:;
			{
				return -1LL;
			}
		}
		_match_end_1ca8573d5:;
	};
}



inline jule::I64 _225491612_encode_rune(jule::Slice<jule::U8> _37424_p, jule::I32 _37439_r) {
	jule::U32 _3769_i = static_cast<jule::U32>(_37439_r);;
	{
		
		if ((_3769_i <= 127LLU)) {
			_case_begin_1ca85d71b:;
			{
				_37424_p[0LL]=static_cast<jule::U8>(static_cast<jule::U8>(_37439_r));
				return 1LL;
			}
		}
		else if ((_3769_i <= 2047LLU)) {
			_case_begin_1ca85d4eb:;
			{
				_37424_p[0LL]=static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_37439_r >> 6LL))));
				_37424_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37439_r) & 63LLU)));
				return 2LL;
			}
		}
		else if ((_3769_i > 1114111LLU) || ((55296LL <= _3769_i) && (_3769_i <= 57343LLU))) {
			_case_begin_1ca85d562:;
			{
				_37439_r=65533LL;
				goto _case_begin_1ca85d5c8;
			}
		}
		else if ((_3769_i <= 65535LLU)) {
			_case_begin_1ca85d5c8:;
			{
				_37424_p[0LL]=static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_37439_r >> 12LL))));
				_37424_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37439_r >> 6LL)) & 63LLU)));
				_37424_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37439_r) & 63LLU)));
				return 3LL;
			}
		}
		else {
			_case_begin_1ca85ae00:;
			{
				_37424_p[0LL]=static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_37439_r >> 18LL))));
				_37424_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37439_r >> 12LL)) & 63LLU)));
				_37424_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37439_r >> 6LL)) & 63LLU)));
				_37424_p[3LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37439_r) & 63LLU)));
				return 4LL;
			}
		}
		_match_end_1ca85ad56:;
	};
}



inline jule::Slice<jule::U8> _225491953_append_rune(jule::Slice<jule::U8> _40524_p, jule::I32 _40535_r) {
	if ((_40535_r <= 127LL)) {
		return jule::append(_40524_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40535_r))}));
	};
	return _225491c94_append_rune_non_ascii(_40524_p,_40535_r);
}



inline jule::Slice<jule::U8> _225491c94_append_rune_non_ascii(jule::Slice<jule::U8> _41230_p, jule::I32 _41245_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41245_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_1ca8663a0:;
			{
				return jule::append(_41230_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41245_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41245_r) & 63LLU)))}));
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_1ca8641e4:;
			{
				_41245_r=65533LL;
				goto _case_begin_1ca86425a;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_1ca86425a:;
			{
				return jule::append(_41230_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41245_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41245_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41245_r) & 63LLU)))}));
			}
		}
		else {
			_case_begin_1ca86417d:;
			{
				return jule::append(_41230_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41245_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41245_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41245_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41245_r) & 63LLU)))}));
			}
		}
		_match_end_1ca8640d4:;
	};
}



inline jule::I64 _2254922d3_rune_count_str(jule::Str _47323_s) {
	jule::I64 _47333_n = jule::I64();
	jule::I64 _47413_i = 0LL;;
	for (; (_47413_i < _47323_s.len()); (_47333_n)++) {
		{
			jule::U8 _47617_c = _47323_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_1ca870376;
			};
			jule::U8 _48213_x = _22548e4ab_FIRST[static_cast<jule::I64>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_1ca870376;
			};
			jule::I64 _48717_size = static_cast<jule::I64>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47323_s.len())) {
				(_47413_i)++;
				goto _iter_next_1ca870376;
			};
			_22548ea2d_accept_range _49213_accept = _22548ed80_ACCEPT_RANGES[static_cast<jule::I64>((_48213_x >> 4LLU))];;
			_47617_c=_47323_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47323_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47323_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_1ca870376:;
	}
	_iter_end_1ca870376:;;
	return _47333_n;
}



inline jule::Bool _22549257a_rune_start(jule::U8 _51719_b) {
	return ((_51719_b & 192LLU) != 128LLU);
}



inline jule::I64 _20b9067e9_get_last_os_error_windows(void) {
	jule::U32 _169_err = _2253a68bd_get_last_error();;
	{
		auto &_match_expr{ _169_err };
		
		if (_match_expr == 5LL) {
			_case_begin_1ca893d39:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1ca893795:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1ca89380b:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 123LL) {
			_case_begin_1ca893872:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else {
			_case_begin_1ca891c6b:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		_match_end_1ca8908b3:;
	};
}



inline jule::Slice<jule::Str> _20b90a633_args(void) {
	return jule::args();
}



inline jule::Exceptional<jule::Str> _20b90aa73_working_dir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(),({
		auto except = _20b90b920___getwd();
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));
}



inline jule::Exceptional<jule::Str> _20b90b920___getwd(void) {
	jule::Array<jule::U16,261> _1513_buff = jule::Array<jule::U16,261>();;
	jule::U32 _169_n = _2253a6c0e_get_current_directory(261LLU,(&(_1513_buff[0LL])));;
	if ((_169_n == 0LLU)) {
		return jule::Exceptional<jule::Str>(_20b9067e9_get_last_os_error_windows());
	};
	return jule::Exceptional<jule::Str>(jule::Any(),_22539358b_u16_ptr_to_str((&(_1513_buff[0LL]))));
}



inline jule::Slice<jule::U8> _20b99524a_stobs(jule::Str& _1315_s) {
	return _1315_s.fake_slice();
}



inline jule::Bool _20c85315c_is_letter(jule::I32 _7618_r) {
	if ((static_cast<jule::U32>(_7618_r) <= 255LLU)) {
		return ((_20c8a4895__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7618_r))] & 96LLU) != 0LLU);
	};
	return _20c8ac12d_is_excluding_latin(_20c85aede_LETTER,_7618_r);
}



inline jule::Bool _20c8ab5c2_is16(jule::Slice<_20c8a9988_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto &expr = _1919_ranges;
			auto it = expr.begin();
			_iter_begin_1e5a12c90:;
			if (it != expr.end()) {
				jule::I64 _19313_i = it - expr.begin();
				{
					_20c8a9988_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < _19417_range->_field_lo)) {
							return false;
						};
						if ((_19128_r <= _19417_range->_field_hi)) {
							return ((_19417_range->_field_stride == 1LLU) || (jule::mod((_19128_r - _19417_range->_field_lo),_19417_range->_field_stride) == 0LLU));
						};
					};
				}
				_iter_next_1e5a12c90:;
				++it;
				_19313_i++;
				goto _iter_begin_1e5a12c90;
			}
			_iter_end_1e5a12c90:;
		};
		return false;
	};
	jule::I64 _20813_lo = 0LL;;
	jule::I64 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I64 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_20c8a9988_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if (((_21213_range->_field_lo <= _19128_r) && (_19128_r <= _21213_range->_field_hi))) {
					return ((_21213_range->_field_stride == 1LLU) || (jule::mod((_19128_r - _21213_range->_field_lo),_21213_range->_field_stride) == 0LLU));
				};
				if ((_19128_r < _21213_range->_field_lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I64>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_1e5a126da:;
	}
	_iter_end_1e5a126da:;;
	return false;
}



inline jule::Bool _20c8ab913_is32(jule::Slice<_20c8a9e50_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto &expr = _2289_ranges;
			auto it = expr.begin();
			_iter_begin_1cada35ce:;
			if (it != expr.end()) {
				jule::I64 _23013_i = it - expr.begin();
				{
					_20c8a9e50_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < _23117_range->_field_lo)) {
							return false;
						};
						if ((_22828_r <= _23117_range->_field_hi)) {
							return ((_23117_range->_field_stride == 1LLU) || (jule::mod((_22828_r - _23117_range->_field_lo),_23117_range->_field_stride) == 0LLU));
						};
					};
				}
				_iter_next_1cada35ce:;
				++it;
				_23013_i++;
				goto _iter_begin_1cada35ce;
			}
			_iter_end_1cada35ce:;
		};
		return false;
	};
	jule::I64 _24513_lo = 0LL;;
	jule::I64 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I64 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_20c8a9e50_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if (((_24913_range->_field_lo <= _22828_r) && (_22828_r <= _24913_range->_field_hi))) {
					return ((_24913_range->_field_stride == 1LLU) || (jule::mod((_22828_r - _24913_range->_field_lo),_24913_range->_field_stride) == 0LLU));
				};
				if ((_22828_r < _24913_range->_field_lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I64>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_1cada2d1a:;
	}
	_iter_end_1cada2d1a:;;
	return false;
}



inline jule::Bool _20c8ac12d_is_excluding_latin(jule::Ptr<_20c8aa3c3_RangeTable> _27823_range_tab, jule::I32 _27847_r) {
	{
		jule::Slice<_20c8a9988_Range16> &_28014_r16 = _27823_range_tab.get()._field_r16;;
		jule::I64 _28213_off = _27823_range_tab.get()._field_latin_offset;;
		if (((_28014_r16.len() > _28213_off) && (static_cast<jule::U32>(_27847_r) <= static_cast<jule::U32>(_28014_r16[(_28014_r16.len() - 1LL)]._field_hi)))) {
			return _20c8ab5c2_is16(_28014_r16.slice(_28213_off),static_cast<jule::U16>(static_cast<jule::U16>(_27847_r)));
		};
	};
	jule::Slice<_20c8a9e50_Range32> &_28710_r32 = _27823_range_tab.get()._field_r32;;
	if (((_28710_r32.len() > 0LL) && (_27847_r >= static_cast<jule::I32>(_28710_r32[0LL]._field_lo)))) {
		return _20c8ab913_is32(_28710_r32,static_cast<jule::U32>(static_cast<jule::U32>(_27847_r)));
	};
	return false;
}



inline jule::Str _20b9a0233_repeat(jule::Str _1415_s, jule::I64 _1427_n) {
	if ((_1427_n <= 0LL)) {
		return jule::Str();
	};
	if ((_1415_s.len() > jule::div(jule::MAX_I64,_1427_n))) {
		jule::panic(jule::Str("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:19:9"));;
	};
	jule::Str _2213_ss = jule::Str::alloc((_1415_s.len() * _1427_n));;
	for (; (_1427_n > 0LL); (_1427_n)--) {
		{
			_2213_ss+=_1415_s;
		}
	_iter_next_1cadc3775:;
	}
	_iter_end_1cadc3775:;;
	return _2213_ss;
}



inline jule::Bool _20c84a011__has_prefix(jule::Str& _2917_s, jule::Str& _2926_sub, jule::I64 _2940_start) {
	if (((_2926_sub.len() == 0LL) || ((_2917_s.len() - _2940_start) < _2926_sub.len()))) {
		return false;
	};
	jule::I64 _3413_i = 0LL;;
	for (; (_3413_i < _2926_sub.len()); std::tie(_3413_i,_2940_start) = std::make_tuple(static_cast<jule::I64>((_3413_i + 1LL)),static_cast<jule::I64>((_2940_start + 1LL)))) {
		{
			if ((_2917_s[_2940_start] != _2926_sub[_3413_i])) {
				return false;
			};
		}
	_iter_next_1cadc6800:;
	}
	_iter_end_1cadc6800:;;
	return true;
}



inline jule::Bool _20c83c443_has_prefix(jule::Str _4419_s, jule::Str _4427_sub) {
	return _20c84a011__has_prefix(_4419_s,_4427_sub,0LL);
}



inline jule::Bool _20c843515__has_suffix(jule::Str& _4817_s, jule::Str& _4826_sub, jule::I64 _4840_start) {
	if (((_4826_sub.len() == 0LL) || ((_4817_s.len() - _4840_start) < _4826_sub.len()))) {
		return false;
	};
	_4840_start=static_cast<jule::I64>((_4817_s.len() - _4840_start));
	jule::I64 _5413_i = 0LL;;
	for (; (_5413_i < _4826_sub.len()); (_5413_i)++) {
		{
			if ((_4817_s[((_4840_start - _5413_i) - 1LL)] != _4826_sub[((_4826_sub.len() - _5413_i) - 1LL)])) {
				return false;
			};
		}
	_iter_next_1cadc8390:;
	}
	_iter_end_1cadc8390:;;
	return true;
}



inline jule::Bool _20c82bb3b_has_suffix(jule::Str _6419_s, jule::Str _6427_sub) {
	return _20c843515__has_suffix(_6419_s,_6427_sub,0LL);
}



inline jule::I64 _20c82c1ad_find_at(jule::Str _7216_s, jule::Str _7224_sub, jule::I64 _7238_i) {
	if ((((_7238_i < 0LL) || (_7216_s.len() < _7224_sub.len())) || (_7224_sub.len() == 0LL))) {
		return -1LL;
	};
	for (; (_7238_i < _7216_s.len()); (_7238_i)++) {
		{
			if (_20c84a011__has_prefix(_7216_s,_7224_sub,_7238_i)) {
				return _7238_i;
			};
		}
	_iter_next_1cadcc141:;
	}
	_iter_end_1cadcc141:;;
	return -1LL;
}



inline jule::I64 _20c82d566_find_last_at(jule::Str _9521_s, jule::Str _9529_sub, jule::I64 _9539_i) {
	jule::I64 _9613_j = ((_9539_i - _9529_sub.len()) + 1LL);;
	if (((((_9529_sub.len() == 0LL) || (_9539_i < 0LL)) || (_9539_i >= _9521_s.len())) || (_9613_j < 0LL))) {
		return -1LL;
	};
	_julec_label_loop:;
	for (; (_9613_j >= 0LL); (_9613_j)--) {
		{
			jule::I64 _10217_k = _9613_j;;
			jule::I64 _10317_z = 0LL;;
			for (; (_10317_z < _9529_sub.len()); std::tie(_10217_k,_10317_z) = std::make_tuple(static_cast<jule::I64>((_10217_k + 1LL)),static_cast<jule::I64>((_10317_z + 1LL)))) {
				{
					if ((_9521_s[_10217_k] != _9529_sub[_10317_z])) {
						goto _iter_next_1cadd0bc2;
					};
				}
			_iter_next_1cadd180a:;
			}
			_iter_end_1cadd180a:;;
			return _9613_j;
		}
	_iter_next_1cadd0bc2:;
	}
	_iter_end_1cadd0bc2:;;
	return -1LL;
}



inline jule::I64 _20b9a4b2d_find_last(jule::Str _11718_s, jule::Str _11726_sub) {
	return static_cast<jule::I64>(_20c82d566_find_last_at(_11718_s,_11726_sub,static_cast<jule::I64>((_11718_s.len() - 1LL))));
}



inline jule::I64 _20c5c4ecd__find_rune(jule::Slice<jule::U8>& _17316_s, jule::I32 _17327_r) {
	jule::I64 _17413_i = 0LL;;
	while ((_17413_i < _17316_s.len())) {
		{
			jule::I32 _17614_br;;
			jule::I64 _17618_n;;
			std::tie(_17614_br,_17618_n) = _225490666_decode_rune(_17316_s.slice(_17413_i));
			if ((_17327_r == _17614_br)) {
				return _17413_i;
			};
			_17413_i+=_17618_n;
		}
	_iter_next_1cadd9b21:;
	}
	_iter_end_1cadd9b21:;;
	return -1LL;
}



inline jule::I64 _20c5c5473_find_last_byte(jule::Str _20023_s, jule::U8 _20031_b) {
	jule::I64 _20113_i = (_20023_s.len() - 1LL);;
	for (; (_20113_i >= 0LL); (_20113_i)--) {
		{
			if ((_20023_s[_20113_i] == _20031_b)) {
				return _20113_i;
			};
		}
	_iter_next_1caddc706:;
	}
	_iter_end_1caddc706:;;
	return -1LL;
}



inline jule::I64 _20c5c594b_find_any(jule::Str _24117_s, jule::Str _24125_runes) {
	jule::Slice<jule::U8> _2429_sb = _20b99524a_stobs(_24117_s);;
	jule::Slice<jule::U8> _24313_rb = _20b99524a_stobs(_24125_runes);;
	jule::I64 _24413_i = 0LL;;
	while ((_24413_i < _2429_sb.len())) {
		{
			jule::I32 _24614_r;;
			jule::I64 _24617_n;;
			std::tie(_24614_r,_24617_n) = _225490666_decode_rune(_2429_sb.slice(_24413_i));
			if ((_20c5c4ecd__find_rune(_24313_rb,_24614_r) != -1LL)) {
				return _24413_i;
			};
			_24413_i+=_24617_n;
		}
	_iter_next_1cade2772:;
	}
	_iter_end_1cade2772:;;
	return -1LL;
}



inline jule::Slice<jule::Str> _20c5c5bb0_split(jule::Str _27514_s, jule::Str _27522_sub, jule::I64 _27536_n) {
	jule::I64 _27613_cap = _27536_n;;
	if ((_27536_n < 0LL)) {
		_27613_cap=16LL;
	};
	jule::Slice<jule::Str> _28013_parts = jule::Slice<jule::Str>::alloc(0LL,_27613_cap);;
	if ((_27536_n == 0LL)) {
		return _28013_parts;
	};
	if ((_27536_n < 0LL)) {
		_27536_n=static_cast<jule::I64>(_27514_s.len());
	};
	jule::I64 _28713_i = 0LL;;
	for (; (_27536_n > 0LL); (_27536_n)--) {
		{
			jule::I64 _28913_j = _20c82c1ad_find_at(_27514_s,_27522_sub,_28713_i);;
			if ((_28913_j == -1LL)) {
				goto _iter_end_1cade8646;
			};
			_28013_parts = jule::alloc_for_append(_28013_parts,1);_28013_parts.__push(_27514_s.slice(_28713_i,_28913_j));;
			_28713_i=static_cast<jule::I64>((_28913_j + _27522_sub.len()));
		}
	_iter_next_1cade8646:;
	}
	_iter_end_1cade8646:;;
	if (((_27536_n > 0LL) && (_28713_i < _27514_s.len()))) {
		_28013_parts = jule::alloc_for_append(_28013_parts,1);_28013_parts.__push(_27514_s.slice(_28713_i));;
	};
	return _28013_parts;
}



inline jule::Bool _20c5c5ce2_contains(jule::Str _30317_s, jule::Str _30325_sub) {
	return (_20c82c1ad_find_at(_30317_s,_30325_sub,0LL) != -1LL);
}



inline jule::Bool _20c82cd4b_contains_any(jule::Str _31921_s, jule::Str _31929_runes) {
	return (_20c5c594b_find_any(_31921_s,_31929_runes) != -1LL);
}



inline jule::Str _20c82d0b0_replace(jule::Str _34516_s, jule::Str _34524_sub, jule::Str _34534_new, jule::I64 _34548_n) {
	if (((_34548_n == 0LL) || (_34524_sub == _34534_new))) {
		return _34516_s;
	};
	if ((_34548_n < 0LL)) {
		_34548_n=static_cast<jule::I64>(_34516_s.len());
	};
	jule::Str _35413_ss = jule::Str::alloc(_34516_s.len());;
	jule::I64 _35513_i = 0LL;;
	for (; (_34548_n > 0LL); (_34548_n)--) {
		{
			jule::I64 _35713_j = _20c82c1ad_find_at(_34516_s,_34524_sub,_35513_i);;
			if ((_35713_j == -1LL)) {
				goto _iter_end_1cac85b76;
			};
			_35413_ss+=_34516_s.slice(_35513_i,_35713_j);
			_35413_ss+=_34534_new;
			_35513_i=static_cast<jule::I64>((_35713_j + _34524_sub.len()));
		}
	_iter_next_1cac85b76:;
	}
	_iter_end_1cac85b76:;;
	_35413_ss+=_34516_s.slice(_35513_i);
	return _35413_ss;
}



inline void _20c5c5242__trim_left(jule::Slice<jule::U8>& _39720_s, jule::Slice<jule::U8>& _39732_cutset) {
	jule::I64 _39813_i = 0LL;;
	while ((_39813_i < _39720_s.len())) {
		{
			jule::I32 _40014_r;;
			jule::I64 _40017_n;;
			std::tie(_40014_r,_40017_n) = _225490666_decode_rune(_39720_s.slice(_39813_i));
			if ((_20c5c4ecd__find_rune(_39732_cutset,_40014_r) == -1LL)) {
				_39720_s=_39720_s.slice(_39813_i);
				return;;
			};
			_39813_i+=_40017_n;
		}
	_iter_next_1cac8ad24:;
	}
	_iter_end_1cac8ad24:;;
	_39720_s=nullptr;
}



inline jule::Str _20c8ad0b8_trim_left(jule::Str _41218_s, jule::Str _41226_cutset) {
	jule::Slice<jule::U8> _41313_bytes = _20b99524a_stobs(_41218_s);;
	jule::Slice<jule::U8> _4149_bcutset = _20b99524a_stobs(_41226_cutset);;
	_20c5c5242__trim_left(_41313_bytes,_4149_bcutset);
	return static_cast<jule::Str>(_41313_bytes);
}



inline void _20c8b30ac__trim_right(jule::Slice<jule::U8>& _41921_s, jule::Slice<jule::U8>& _41933_cutset) {
	jule::I64 _42013_i = _41921_s.len();;
	while ((_42013_i > 0LL)) {
		{
			jule::I32 _42214_r;;
			jule::I64 _42217_n;;
			std::tie(_42214_r,_42217_n) = _225490be9_decode_last_rune(_41921_s.slice(0LL,_42013_i));
			if ((_20c5c4ecd__find_rune(_41933_cutset,_42214_r) == -1LL)) {
				_41921_s=_41921_s.slice(0LL,_42013_i);
				return;;
			};
			_42013_i-=_42217_n;
		}
	_iter_next_1cac8e003:;
	}
	_iter_end_1cac8e003:;;
	_41921_s=nullptr;
}



inline jule::Str _20c8b3321_trim(jule::Str _44313_s, jule::Str _44321_cutset) {
	jule::Slice<jule::U8> _44413_bytes = _20b99524a_stobs(_44313_s);;
	jule::Slice<jule::U8> _4459_bcutset = _20b99524a_stobs(_44321_cutset);;
	_20c5c5242__trim_left(_44413_bytes,_4459_bcutset);
	_20c8b30ac__trim_right(_44413_bytes,_4459_bcutset);
	return static_cast<jule::Str>(_44413_bytes);
}



inline jule::Bool _20b8d3166_is_path_sep(jule::U8 _4820_c) {
	return ((_4820_c == 92LLU) || (_4820_c == '/'));
}



inline jule::Bool _20b8d3298_is_slash(jule::U8 _5213_c) {
	return ((_5213_c == '\\') || (_5213_c == '/'));
}



inline jule::U8 _20b8d0e44_to_upper(jule::U8 _5413_c) {
	if ((('a' <= _5413_c) && (_5413_c <= 'z'))) {
		return static_cast<jule::U8>((_5413_c - ('a' - 'A')));
	};
	return _5413_c;
}



inline jule::I64 _20b8d1461_volume_name_len(jule::Str _8220_path) {
	if ((_8220_path.len() < 2LL)) {
		return 0LL;
	};
	jule::U8 _879_c = _8220_path[0LL];;
	if (((_8220_path[1LL] == ':') && ((('a' <= _879_c) && (_879_c <= 'z')) || (('A' <= _879_c) && (_879_c <= 'Z'))))) {
		return 2LL;
	};
	if (((!(_20b8d3298_is_slash(_8220_path[0LL]))) || (!(_20b8d3298_is_slash(_8220_path[1LL]))))) {
		return 0LL;
	};
	jule::Str _9510_p1;;
	jule::Str _9518_rest;;
	std::tie(_9510_p1,_9518_rest,std::ignore) = _20b8d1708_cut_path(_8220_path.slice(2LL));
	jule::Str _9613_p2 = jule::Str();;
	jule::Bool _9713_ok = false;;
	std::tie(_9613_p2,_9518_rest,_9713_ok) = _20b8d1708_cut_path(_9518_rest);
	if ((!(_9713_ok))) {
		return static_cast<jule::I64>(_8220_path.len());
	};
	if (((_9510_p1 != jule::Str(".", 1)) && (_9510_p1 != jule::Str("?", 1)))) {
		return static_cast<jule::I64>(((_8220_path.len() - _9518_rest.len()) - 1LL));
	};
	if (((((_9613_p2.len() == 3LL) && (_20b8d0e44_to_upper(_9613_p2[0LL]) == 'U')) && (_20b8d0e44_to_upper(_9613_p2[1LL]) == 'N')) && (_20b8d0e44_to_upper(_9613_p2[2LL]) == 'C'))) {
		std::tie(std::ignore,_9518_rest,std::ignore) = _20b8d1708_cut_path(_9518_rest);
		std::tie(std::ignore,_9518_rest,_9713_ok) = _20b8d1708_cut_path(_9518_rest);
		if ((!(_9713_ok))) {
			return static_cast<jule::I64>(_8220_path.len());
		};
	};
	return static_cast<jule::I64>(((_8220_path.len() - _9518_rest.len()) - 1LL));
}



inline std::tuple<jule::Str,jule::Str,jule::Bool> _20b8d1708_cut_path(jule::Str _11913_path) {
	jule::Str _11926_before = jule::Str();
	jule::Str _11939_after = jule::Str();
	jule::Bool _11951_found = jule::Bool();
	{
		auto &expr = _11913_path;
		auto it = expr.begin();
		_iter_begin_1cacaedc0:;
		if (it != expr.end()) {
			jule::I64 _1209_i = it - expr.begin();
			{
				if (_20b8d3298_is_slash(_11913_path[_1209_i])) {
					_11926_before = _11913_path.slice(0LL,_1209_i);
					_11939_after = _11913_path.slice((_1209_i + 1LL));
					_11951_found = true;
					return std::make_tuple(_11926_before,_11939_after,_11951_found);
				};
			}
			_iter_next_1cacaedc0:;
			++it;
			_1209_i++;
			goto _iter_begin_1cacaedc0;
		}
		_iter_end_1cacaedc0:;
	};
	_11926_before = _11913_path;
	_11939_after = jule::Str();
	_11951_found = false;
	return std::make_tuple(_11926_before,_11939_after,_11951_found);
}



inline std::tuple<jule::Str,jule::Bool> _20b8d19a0_full_path(jule::Str _12814_name) {
	jule::Str _12827_path = jule::Str();
	jule::Bool _12838_ok = jule::Bool();
	jule::Slice<jule::U16> _1299_utf16_name = _22539180e_utf16_from_str(_12814_name);;
	jule::U16* _1309_p = (&(_1299_utf16_name[0LL]));;
	jule::U32 _13113_n = 100LLU;;
	for (;;) {
		{
			jule::Slice<jule::U16> _13317_buff = jule::Slice<jule::U16>::alloc(static_cast<jule::I64>(_13113_n));;
			_13113_n=static_cast<jule::U32>(_2253a8749_get_full_path_name(_1309_p,static_cast<jule::U32>(static_cast<jule::U32>(_13317_buff.len())),(&(_13317_buff[0LL])),nullptr));
			if ((_13113_n == 0LLU)) {
				_12827_path = jule::Str();
				_12838_ok = false;
				return std::make_tuple(_12827_path,_12838_ok);
			};
			if ((_13113_n <= static_cast<jule::U32>(_13317_buff.len()))) {
				_12827_path = _22538d894_utf16_to_str(_13317_buff.slice(0LL,static_cast<jule::I64>(_13113_n)));
				_12838_ok = true;
				return std::make_tuple(_12827_path,_12838_ok);
			};
		}
	_iter_next_1cacb1ba2:;
	}
	_iter_end_1cacb1ba2:;;
	_12827_path = jule::Str();
	_12838_ok = false;
	return std::make_tuple(_12827_path,_12838_ok);
}



inline std::tuple<jule::Str,jule::Bool> _20b8d1cd0___abs(jule::Str _14514_path) {
	jule::Bool _14532_ok = jule::Bool();
	if (_14514_path.empty()) {
		_14514_path=jule::Str(".", 1);
	};
	std::tie(_14514_path,_14532_ok) = _20b8d19a0_full_path(_14514_path);
	if ((!(_14532_ok))) {
		_14532_ok = false;
		return std::make_tuple(jule::Str(),_14532_ok);
	};
	_14532_ok = true;
	return std::make_tuple(_20b950953_clean(_14514_path),_14532_ok);
}



inline jule::Str _20b8d2088___join(jule::Slice<jule::Str> _15915_elem) {
	jule::Str _16013_s = jule::Str();;
	jule::U8 _16113_last_char = 0LLU;;
	{
		auto &expr = _15915_elem;
		auto it = expr.begin();
		_iter_begin_1cacb7dd9:;
		if (it != expr.end()) {
			jule::Str _16217_e = *it;
			{
				{
					
					if ((_16013_s.len() == 0LL)) {
						_case_begin_1cacb8a77:;
					}
					else if (_20b8d3298_is_slash(_16113_last_char)) {
						_case_begin_1cacb8769:;
						{
							while (((_16217_e.len() > 0LL) && _20b8d3298_is_slash(_16217_e[0LL]))) {
								{
									(_16217_e).mut_slice(1LL);;
								}
							_iter_next_1cacb95b1:;
							}
							_iter_end_1cacb95b1:;;
						}
					}
					else if ((_16113_last_char == ':')) {
						_case_begin_1cacb87d0:;
					}
					else {
						_case_begin_1cacb8703:;
						{
							_16013_s+=jule::Str("\\", 1);
							_16113_last_char='\\';
						}
					}
					_match_end_1cacb8637:;
				};
				if ((_16217_e.len() > 0LL)) {
					_16013_s+=_16217_e;
					_16113_last_char=_16217_e[(_16217_e.len() - 1LL)];
				};
			}
			_iter_next_1cacb7dd9:;
			++it;
			goto _iter_begin_1cacb7dd9;
		}
		_iter_end_1cacb7dd9:;
	};
	if ((_16013_s.len() == 0LL)) {
		return jule::Str();
	};
	return _20b950953_clean(_16013_s);
}



inline jule::Str _20b950953_clean(jule::Str _10818_path) {
	jule::Str _1099_original_path = _10818_path;;
	jule::I64 _1109_vol_len = _20b8d1461_volume_name_len(_10818_path);;
	(_10818_path).mut_slice(_1109_vol_len);;
	if (_10818_path.empty()) {
		if ((((_1109_vol_len > 1LL) && _20b8d3166_is_path_sep(_1099_original_path[0LL])) && _20b8d3166_is_path_sep(_1099_original_path[1LL]))) {
			return _20b958e9a_from_slash(_1099_original_path);
		};
		return (_1099_original_path + jule::Str(".", 1));
	};
	jule::Bool _1199_rooted = _20b8d3166_is_path_sep(_10818_path[0LL]);;
	jule::I64 _1269_n = _10818_path.len();;
	_20b949155_LazyBuff _12713_out = _20b949155_LazyBuff{._field_path=_10818_path, ._field_vol_and_path=_1099_original_path, ._field_vol_len=_1109_vol_len};;
	jule::I64 _13214_r = 0LL;;
	jule::I64 _13221_dotdot = 0LL;;
	std::tie(_13214_r,_13221_dotdot) = std::make_tuple(0LL,0LL);
	if (_1199_rooted) {
		_20b948b7c_append(&_12713_out, 92LLU);
		std::tie(_13214_r,_13221_dotdot) = std::make_tuple(1LL,1LL);
	};
	while ((_13214_r < _1269_n)) {
		{
			{
				
				if (_20b8d3166_is_path_sep(_10818_path[_13214_r])) {
					_case_begin_1cacc55de:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10818_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _20b8d3166_is_path_sep(_10818_path[(_13214_r + 1LL)])))) {
					_case_begin_1cacc6139:;
					{
						(_13214_r)++;
					}
				}
				else if ((((_10818_path[_13214_r] == '.') && (_10818_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _20b8d3166_is_path_sep(_10818_path[(_13214_r + 2LL)])))) {
					_case_begin_1cacc61a0:;
					{
						_13214_r+=2LL;
						{
							
							if ((_12713_out._field_w > _13221_dotdot)) {
								_case_begin_1cacc92a2:;
								{
									(_12713_out._field_w)--;
									while (((_12713_out._field_w > _13221_dotdot) && (!(_20b8d3166_is_path_sep(static_cast<jule::U8>(_20b943094_index(&_12713_out, _12713_out._field_w))))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_1cacc9add:;
									}
									_iter_end_1cacc9add:;;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_1cacc9329:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_20b948b7c_append(&_12713_out, 92LLU);
									};
									_20b948b7c_append(&_12713_out, '.');
									_20b948b7c_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_1cacc9219:;
						};
					}
				}
				else {
					_case_begin_1cacc1475:;
					{
						if (((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL)))) {
							_20b948b7c_append(&_12713_out, 92LLU);
						};
						if ((((true && (_12713_out._field_w == 0LL)) && (_12713_out._field_vol_len == 0LL)) && (_13214_r != 0LL))) {
							jule::I64 _17525_i = _13214_r;;
							for (; ((_17525_i < _1269_n) && (!(_20b8d3166_is_path_sep(_10818_path[_17525_i])))); (_17525_i)++) {
								{
									if ((_10818_path[_17525_i] == ':')) {
										_20b948b7c_append(&_12713_out, '.');
										_20b948b7c_append(&_12713_out, 92LLU);
										goto _iter_end_1cacc2e5a;
									};
								}
							_iter_next_1cacc2e5a:;
							}
							_iter_end_1cacc2e5a:;;
						};
						for (; ((_13214_r < _1269_n) && (!(_20b8d3166_is_path_sep(_10818_path[_13214_r])))); (_13214_r)++) {
							{
								_20b948b7c_append(&_12713_out, _10818_path[_13214_r]);
							}
						_iter_next_1cacc2ae7:;
						}
						_iter_end_1cacc2ae7:;;
					}
				}
				_match_end_1cacc13cb:;
			};
		}
	_iter_next_1cacc0e03:;
	}
	_iter_end_1cacc0e03:;;
	if ((_12713_out._field_w == 0LL)) {
		_20b948b7c_append(&_12713_out, '.');
	};
	return _20b958e9a_from_slash(_20b94c840_string(&_12713_out));
}



inline jule::Str _20b958e9a_from_slash(jule::Str _21119_path) {
	if ((92LL == '/')) {
		return _21119_path;
	};
	return _20c82d0b0_replace(_21119_path,jule::Str("/", 1),static_cast<jule::Str>(92LL),-1LL);
}



inline jule::Str _20b961436_join(jule::Slice<jule::Str> _22513_elem) {
	return _20b8d2088___join(_22513_elem);
}



inline jule::Str _20b972bd9_ext(jule::Str _23012_path) {
	jule::I64 _23113_i = (_23012_path.len() - 1LL);;
	for (; ((_23113_i >= 0LL) && (!(_20b8d3166_is_path_sep(_23012_path[_23113_i])))); (_23113_i)--) {
		{
			if ((_23012_path[_23113_i] == '.')) {
				return _23012_path.slice(_23113_i);
			};
		}
	_iter_next_1cacce84b:;
	}
	_iter_end_1cacce84b:;;
	return jule::Str();
}



inline std::tuple<jule::Str,jule::Bool> _20b9737ab_abs(jule::Str _24512_path) {
	jule::Str _24610_abs_path;;
	jule::Bool _24620_ok;;
	std::tie(_24610_abs_path,_24620_ok) = _20b8d1cd0___abs(_24512_path);
	return std::make_tuple(_24610_abs_path,_24620_ok);
}



inline jule::Str _20b97533a_base(jule::Str _25417_path) {
	if (_25417_path.empty()) {
		return jule::Str(".", 1);
	};
	while (((_25417_path.len() > 0LL) && _20b8d3166_is_path_sep(_25417_path[(_25417_path.len() - 1LL)]))) {
		{
			(_25417_path).mut_slice(0LL,(_25417_path.len() - 1LL));;
		}
	_iter_next_1cacd22bb:;
	}
	_iter_end_1cacd22bb:;;
	(_25417_path).mut_slice(_20b9850d6_volume_name(_25417_path).len());;
	jule::I64 _26513_i = (_25417_path.len() - 1LL);;
	while (((_26513_i >= 0LL) && (!(_20b8d3166_is_path_sep(_25417_path[_26513_i]))))) {
		{
			(_26513_i)--;
		}
	_iter_next_1cacd381c:;
	}
	_iter_end_1cacd381c:;;
	if ((_26513_i >= 0LL)) {
		(_25417_path).mut_slice((_26513_i + 1LL));;
	};
	if (_25417_path.empty()) {
		return static_cast<jule::Str>(92LL);
	};
	return _25417_path;
}



inline jule::Str _20b981357_dir(jule::Str _28512_path) {
	jule::Str _2869_vol = _20b9850d6_volume_name(_28512_path);;
	jule::I64 _28713_i = (_28512_path.len() - 1LL);;
	while (((_28713_i >= _2869_vol.len()) && (!(_20b8d3166_is_path_sep(_28512_path[_28713_i]))))) {
		{
			(_28713_i)--;
		}
	_iter_next_1cacd5456:;
	}
	_iter_end_1cacd5456:;;
	jule::Str _2919_dir = _20b950953_clean(_28512_path.slice(_2869_vol.len(),(_28713_i + 1LL)));;
	if (((_2919_dir == jule::Str(".", 1)) && (_2869_vol.len() > 2LL))) {
		return _2869_vol;
	};
	return (_2869_vol + _2919_dir);
}



inline jule::Str _20b9850d6_volume_name(jule::Str _30320_path) {
	return _20b958e9a_from_slash(_30320_path.slice(0LL,_20b8d1461_volume_name_len(_30320_path)));
}



inline jule::I64 _22520e490_get_last_fs_error(void) {
	jule::I64 _729_err = _22520c6d0_get_last_errno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1cad15d16:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1cad157c7:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1cad1583d:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1cad158a4:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1cad1591a:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1cad16036:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 132LL) {
			_case_begin_1cad1609c:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1cad16113:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1cad16179:;
			{
				return static_cast<jule::I64>(8LL);
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1cad161e0:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1cad16256:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1cad162bc:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1cad16333:;
			{
				return static_cast<jule::I64>(12LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1cad16399:;
			{
				return static_cast<jule::I64>(13LL);
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1cad16410:;
			{
				return static_cast<jule::I64>(14LL);
			}
		}
		else if (_match_expr == 124LL) {
			_case_begin_1cad16476:;
			{
				return static_cast<jule::I64>(15LL);
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1cad164dc:;
			{
				return static_cast<jule::I64>(16LL);
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1cad16553:;
			{
				return static_cast<jule::I64>(17LL);
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1cad165ca:;
			{
				return static_cast<jule::I64>(18LL);
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1cad16652:;
			{
				return static_cast<jule::I64>(19LL);
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1cad166c9:;
			{
				return static_cast<jule::I64>(20LL);
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1cad16751:;
			{
				return static_cast<jule::I64>(21LL);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1cad167c8:;
			{
				return static_cast<jule::I64>(22LL);
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1cad16850:;
			{
				return static_cast<jule::I64>(23LL);
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1cad168c7:;
			{
				return static_cast<jule::I64>(24LL);
			}
		}
		else if (_match_expr == 119LL) {
			_case_begin_1cad1694e:;
			{
				return static_cast<jule::I64>(25LL);
			}
		}
		else if (_match_expr == 104LL) {
			_case_begin_1cad169c6:;
			{
				return static_cast<jule::I64>(26LL);
			}
		}
		else if (_match_expr == 41LL) {
			_case_begin_1cad16a4d:;
			{
				return static_cast<jule::I64>(27LL);
			}
		}
		else {
			_case_begin_1cad15332:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		_match_end_1cad155a7:;
	};
}



inline jule::Bool _225493229_is_console_handle(jule::U64 _11622_handle) {
	return (((_11622_handle == _225353815_STDIN) || (_11622_handle == _2253a5702_STDOUT)) || (_11622_handle == _2253a5999_STDERR));
}



inline jule::I64 _20cad0241_get_last_process_error(void) {
	jule::I64 _429_err = _22520c6d0_get_last_errno();;
	{
		auto &_match_expr{ _429_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1cad28b4d:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1cad2860e:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1cad28675:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1cad286db:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1cad28752:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1cad288b7:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1cad2892d:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1cad28994:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1cad28a0a:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 121LL) {
			_case_begin_1cad28a71:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1cad28d6d:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else {
			_case_begin_1cad26e48:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		_match_end_1cad28422:;
	};
}



inline jule::Slice<wchar_t*> _20cadeedc_ustr_slice_to_wcstr_slice(jule::Slice<jule::Slice<jule::U16>> _1730_us) {
	jule::Slice<wchar_t*> _1813_wcs = jule::Slice<wchar_t*>::alloc(0LL,(_1730_us.len() + 1LL));;
	{
		auto &expr = _1730_us;
		auto it = expr.begin();
		_iter_begin_1cad2c13a:;
		if (it != expr.end()) {
			jule::I64 _199_i = it - expr.begin();
			{
				_1813_wcs = jule::alloc_for_append(_1813_wcs,1);_1813_wcs.__push(((wchar_t*)((&(_1730_us[_199_i][0LL])))));;
			}
			_iter_next_1cad2c13a:;
			++it;
			_199_i++;
			goto _iter_begin_1cad2c13a;
		}
		_iter_end_1cad2c13a:;
	};
	_1813_wcs = jule::alloc_for_append(_1813_wcs,1);_1813_wcs.__push(nullptr);;
	return _1813_wcs;
}



inline jule::Slice<jule::Slice<jule::U16>> _20cae02b7_str_slice_to_ustr_slice(jule::Slice<jule::Str> _2628_s) {
	jule::Slice<jule::Slice<jule::U16>> _2713_us = jule::Slice<jule::Slice<jule::U16>>::alloc(0LL,_2628_s.len());;
	{
		auto &expr = _2628_s;
		auto it = expr.begin();
		_iter_begin_1cad2dadc:;
		if (it != expr.end()) {
			jule::Str &_2812_p = *it;
			{
				_2713_us = jule::alloc_for_append(_2713_us,1);_2713_us.__push(_22539180e_utf16_from_str(_2812_p));;
			}
			_iter_next_1cad2dadc:;
			++it;
			goto _iter_begin_1cad2dadc;
		}
		_iter_end_1cad2dadc:;
	};
	return _2713_us;
}



inline jule::I64 _20cae0619_execvp(jule::Str _3411_file, jule::Slice<jule::Str> _3422_argv) {
	jule::Slice<jule::U16> _359_utf16_file = _22539180e_utf16_from_str(_3411_file);;
	jule::Slice<jule::Slice<jule::U16>> _369_ucargv = _20cae02b7_str_slice_to_ustr_slice(_3422_argv);;
	jule::Slice<wchar_t*> _379_cargv = _20cadeedc_ustr_slice_to_wcstr_slice(_369_ucargv);;
	return static_cast<jule::I64>(_wspawnvp(P_NOWAIT,((wchar_t*)((&(_359_utf16_file[0LL])))),(&(_379_cargv[0LL]))));
}



inline jule::I64 _20cae0a04_execve(jule::Str _4111_file, jule::Slice<jule::Str> _4122_argv, jule::Slice<jule::Str> _4135_env) {
	jule::Slice<jule::Slice<jule::U16>> _429_ucargv = _20cae02b7_str_slice_to_ustr_slice(_4122_argv);;
	jule::Slice<wchar_t*> _439_cargv = _20cadeedc_ustr_slice_to_wcstr_slice(_429_ucargv);;
	jule::Slice<jule::Slice<jule::U16>> _449_ucenv = _20cae02b7_str_slice_to_ustr_slice(_4135_env);;
	jule::Slice<wchar_t*> _459_cenv = _20cadeedc_ustr_slice_to_wcstr_slice(_449_ucenv);;
	jule::Slice<jule::U16> _469_utf16_file = _22539180e_utf16_from_str(_4111_file);;
	return static_cast<jule::I64>(_wspawnvpe(P_NOWAIT,((wchar_t*)((&(_469_utf16_file[0LL])))),(&(_439_cargv[0LL])),(&(_459_cenv[0LL]))));
}



inline void _20cae1708_exit(jule::I64 _1213_code) {
	_2253aca7d_exit(_1213_code);
}



inline jule::Str _20cae1906_executable(void) {
	return jule::executable();
}



inline jule::Bool _20ca83337_is_std_header_path(jule::Str _2627_p) {
	return ((_2627_p[0LL] == '<') && (_2627_p[(_2627_p.len() - 1LL)] == '>'));
}



inline jule::Bool _20ca834be_is_valid_header_ext(jule::Str _3128_ext) {
	{
		auto &expr = _20ca81797_CPP_HEADER_EXTS;
		auto it = expr.begin();
		_iter_begin_1cad5ebea:;
		if (it != expr.end()) {
			jule::Str &_3212_valid_ext = *it;
			{
				if ((_3128_ext == _3212_valid_ext)) {
					return true;
				};
			}
			_iter_next_1cad5ebea:;
			++it;
			goto _iter_begin_1cad5ebea;
		}
		_iter_end_1cad5ebea:;
	};
	return false;
}



inline jule::Bool _20ca83766_is_valid_cpp_ext(jule::Str _4225_ext) {
	if ((_4225_ext == jule::Str(".c", 2))) {
		return true;
	};
	{
		auto &expr = _23db4462b_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_1cad62923:;
		if (it != expr.end()) {
			jule::Str &_4712_e = *it;
			{
				if ((_4225_ext == _4712_e)) {
					return true;
				};
			}
			_iter_next_1cad62923:;
			++it;
			goto _iter_begin_1cad62923;
		}
		_iter_end_1cad62923:;
	};
	{
		auto &expr = _20ca831c2_OBJECTIVE_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_1cad6345c:;
		if (it != expr.end()) {
			jule::Str &_5312_e = *it;
			{
				if ((_4225_ext == _5312_e)) {
					return true;
				};
			}
			_iter_next_1cad6345c:;
			++it;
			goto _iter_begin_1cad6345c;
		}
		_iter_end_1cad6345c:;
	};
	return false;
}



inline jule::Str _20ca9019b_logf(jule::Str _29113_fmt, jule::Slice<jule::Any> _29126_args) {
	return _20ca90ab4_apply_fmt(_29113_fmt,jule::Any(_29126_args));
}



inline jule::Str _20ca90487_arg_to_str(jule::Any _29515_arg) {
	{
		auto &_match_expr{ _29515_arg };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1cad648c0:;
			{
				return _29515_arg.operator jule::Str();
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1cad647d2:;
			{
				return static_cast<jule::Str>(_29515_arg.operator jule::U8());
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1cad64848:;
			{
				return static_cast<jule::Str>(_29515_arg.operator jule::I32());
			}
		}
		else {
			_case_begin_1cad63737:;
			{
				return jule::Str("<fmt?>", 6);
			}
		}
		_match_end_1cad644c4:;
	};
}



inline jule::I64 _20ca9072e_find_next_fmt(jule::Str _30818_fmt) {
	{
		auto &expr = _30818_fmt;
		auto it = expr.begin();
		_iter_begin_1cad64e53:;
		if (it != expr.end()) {
			jule::I64 _3099_i = it - expr.begin();
			jule::U8 &_30912_b = *it;
			{
				if ((_30912_b == '@')) {
					return _3099_i;
				};
			}
			_iter_next_1cad64e53:;
			++it;
			_3099_i++;
			goto _iter_begin_1cad64e53;
		}
		_iter_end_1cad64e53:;
	};
	return -1LL;
}



inline jule::Str _20ca90ab4_apply_fmt(jule::Str _31718_fmt, jule::Slice<jule::Any> _31728_args) {
	jule::Str _31813_s = jule::Str();;
	{
		auto &expr = _31728_args;
		auto it = expr.begin();
		_iter_begin_1cad66dde:;
		if (it != expr.end()) {
			jule::Any &_32012_arg = *it;
			{
				jule::I64 _32113_i = _20ca9072e_find_next_fmt(_31718_fmt);;
				if ((_32113_i == -1LL)) {
					goto _iter_end_1cad66dde;
				};
				_31813_s+=_31718_fmt.slice(0LL,_32113_i);
				_31813_s+=_20ca90487_arg_to_str(jule::Any(_32012_arg));
				(_31718_fmt).mut_slice((_32113_i + 1LL));;
			}
			_iter_next_1cad66dde:;
			++it;
			goto _iter_begin_1cad66dde;
		}
		_iter_end_1cad66dde:;
	};
	_31813_s+=_31718_fmt;
	return _31813_s;
}



inline jule::Bool _20ca91aa4_is_top_directive(jule::Str _2825_directive) {
	return ((_2825_directive == jule::Str("pass", 4)) || (_2825_directive == jule::Str("build", 5)));
}



inline jule::Bool _20ca934e0_is_windows(jule::Str _5119_os) {
	return (_5119_os == jule::Str("windows", 7));
}



inline jule::Bool _20ca937cb_is_darwin(jule::Str _5418_os) {
	return (_5418_os == jule::Str("darwin", 6));
}



inline jule::Bool _20ca93a73_is_linux(jule::Str _5717_os) {
	return (_5717_os == jule::Str("linux", 5));
}



inline jule::Bool _20ca93d5e_is_i386(jule::Str _6016_arch) {
	return (_6016_arch == jule::Str("i386", 4));
}



inline jule::Bool _20ca94106_is_amd64(jule::Str _6317_arch) {
	return (_6317_arch == jule::Str("amd64", 5));
}



inline jule::Bool _20ca9439d_is_arm64(jule::Str _6617_arch) {
	return (_6617_arch == jule::Str("arm64", 5));
}



inline jule::Bool _20ca94645_is_unix(jule::Str _6916_os) {
	return (_20ca937cb_is_darwin(_6916_os) || _20ca93a73_is_linux(_6916_os));
}



inline jule::Bool _20ca94975_is_32bit(jule::Str _7217_arch) {
	return _20ca93d5e_is_i386(_7217_arch);
}



inline jule::Bool _20ca94c1c_is_64bit(jule::Str _7517_arch) {
	return (_20ca94106_is_amd64(_7517_arch) || _20ca9439d_is_arm64(_7517_arch));
}



inline void _20cacdc78_init(void) {
	jule::Str _2513_path = _20cae1906_executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	jule::Str _309_pwd = ({
		auto except = _20b90aa73_working_dir();
		(except.ok()) ? (except.result) : ({{
			jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:31:9"));;
			return;;
		} jule::Str();});
	});;
	jule::Str _359_path_exec = _20b981357_dir(_2513_path);;
	_2513_path=_20b961436_join(jule::Slice<jule::Str>::make({_359_path_exec,jule::Str("..", 2)}));
	{
		_20cab1981_PATH_WD=_309_pwd;
		_20caa29e9_PATH_EXEC=_359_path_exec;
		_20caa3654_PATH_STDLIB=_20b961436_join(jule::Slice<jule::Str>::make({_2513_path,jule::Str("std", 3)}));
		_20cab3048_PATH_API=_20b961436_join(jule::Slice<jule::Str>::make({_20caa29e9_PATH_EXEC,jule::Str("..", 2)}));
		_20cab3048_PATH_API=_20b961436_join(jule::Slice<jule::Str>::make({_20cab3048_PATH_API,jule::Str("api", 3)}));
		_20cab3048_PATH_API=_20b961436_join(jule::Slice<jule::Str>::make({_20cab3048_PATH_API,jule::Str("jule.hpp", 8)}));
	};
}



inline jule::Bool _20cd9ee39_is_unary_op(jule::Str _31320_kind) {
	{
		auto &expr = _20cceb319_UNARY_OPS;
		auto it = expr.begin();
		_iter_begin_1cb058dd3:;
		if (it != expr.end()) {
			jule::Str &_31412_op = *it;
			{
				if ((_31320_kind == _31412_op)) {
					return true;
				};
			}
			_iter_next_1cb058dd3:;
			++it;
			goto _iter_begin_1cb058dd3;
		}
		_iter_end_1cb058dd3:;
	};
	return false;
}



inline jule::Bool _20cda0225_is_bin_op(jule::Str _32418_kind) {
	{
		auto &expr = _20cceb5e4_BIN_OPS;
		auto it = expr.begin();
		_iter_begin_1cb066e02:;
		if (it != expr.end()) {
			jule::Str &_32512_op = *it;
			{
				if ((_32418_kind == _32512_op)) {
					return true;
				};
			}
			_iter_next_1cb066e02:;
			++it;
			goto _iter_begin_1cb066e02;
		}
		_iter_end_1cb066e02:;
	};
	return false;
}



inline jule::Bool _20cda07a8_is_str(jule::Str _34615_k) {
	return ((!(_34615_k.empty())) && ((_34615_k[0LL] == '\"') || _20cda0a50_is_raw_str(_34615_k)));
}



inline jule::Bool _20cda0a50_is_raw_str(jule::Str _34919_k) {
	return ((!(_34919_k.empty())) && (_34919_k[0LL] == '`'));
}



inline jule::Bool _20cda0ce7_is_rune(jule::Str _35316_k) {
	return ((!(_35316_k.empty())) && (_35316_k[0LL] == '\''));
}



inline jule::Bool _20cda13be_is_bool(jule::Str _35916_k) {
	return ((_35916_k == jule::Str("true", 4)) || (_35916_k == jule::Str("false", 5)));
}



inline jule::Bool _20cda1666_is_float(jule::Str _36217_k) {
	if (_20c83c443_has_prefix(_36217_k,jule::Str("0x", 2))) {
		return _20c82cd4b_contains_any(_36217_k,jule::Str(".pP", 3));
	};
	return _20c82cd4b_contains_any(_36217_k,jule::Str(".eE", 3));
}



inline jule::Bool _20cda190d_is_num(jule::Str _37015_k) {
	if (_37015_k.empty()) {
		return false;
	};
	jule::U8 _3759_b = _37015_k[0LL];;
	return ((_3759_b == '.') || (('0' <= _3759_b) && (_3759_b <= '9')));
}



inline jule::Bool _20cda1e4c_is_ignore_ident(jule::Str _38524_ident) {
	return (_38524_ident == jule::Str("_", 1));
}



inline jule::Bool _20cda21e4_is_anon_ident(jule::Str _38822_ident) {
	return (_38822_ident == jule::Str("<anonymous>", 11));
}



inline jule::Bool _20cda2733_is_space(jule::I32 _40217_r) {
	{
		auto &expr = _20cceb083_SPACES;
		auto it = expr.begin();
		_iter_begin_1cb0709aa:;
		if (it != expr.end()) {
			jule::I32 &_40312_cr = *it;
			{
				if ((_40217_r == _40312_cr)) {
					return true;
				};
			}
			_iter_next_1cb0709aa:;
			++it;
			goto _iter_begin_1cb0709aa;
		}
		_iter_end_1cb0709aa:;
	};
	return false;
}



inline jule::Bool _20cda2aeb_is_letter(jule::I32 _41318_r) {
	return _20c85315c_is_letter(_41318_r);
}



inline jule::Bool _20cda313a_is_decimal(jule::U8 _43519_b) {
	return (('0' <= _43519_b) && (_43519_b <= '9'));
}



inline jule::Bool _20cda33d2_is_binary(jule::U8 _43818_b) {
	return ((_43818_b == '0') || (_43818_b == '1'));
}



inline jule::Bool _20cda3679_is_octal(jule::U8 _44117_b) {
	return (('0' <= _44117_b) && (_44117_b <= '7'));
}



inline jule::Bool _20cda3921_is_hex(jule::U8 _44415_b) {
	{
		
		if ((('0' <= _44415_b) && (_44415_b <= '9'))) {
			_case_begin_1cb0754d7:;
			{
				return true;
			}
		}
		else if ((('a' <= _44415_b) && (_44415_b <= 'f'))) {
			_case_begin_1cb0755b4:;
			{
				return true;
			}
		}
		else if ((('A' <= _44415_b) && (_44415_b <= 'F'))) {
			_case_begin_1cb07562a:;
			{
				return true;
			}
		}
		else {
			_case_begin_1cb074dbb:;
			{
				return false;
			}
		}
		_match_end_1cb074629:;
	};
}



inline jule::Bool _20cda3bb8_is_assign(jule::U64 _45918_id) {
	return (((((((_45918_id == static_cast<jule::U64>(2LLU)) || (_45918_id == static_cast<jule::U64>(31LLU))) || (_45918_id == static_cast<jule::U64>(34LLU))) || (_45918_id == static_cast<jule::U64>(20LLU))) || (_45918_id == static_cast<jule::U64>(28LLU))) || (_45918_id == static_cast<jule::U64>(3LLU))) || (_45918_id == static_cast<jule::U64>(7LLU)));
}



inline jule::Bool _20cda3e60_is_postfix_op(jule::Str _47022_kind) {
	{
		auto &expr = _20cd98cac_POSTFIX_OPS;
		auto it = expr.begin();
		_iter_begin_1cb076e23:;
		if (it != expr.end()) {
			jule::Str &_47112_op = *it;
			{
				if ((_47022_kind == _47112_op)) {
					return true;
				};
			}
			_iter_next_1cb076e23:;
			++it;
			goto _iter_begin_1cb076e23;
		}
		_iter_end_1cb076e23:;
	};
	return false;
}



inline jule::Bool _20cda4207_is_assign_op(jule::Str _48121_kind) {
	if (_20cda3e60_is_postfix_op(_48121_kind)) {
		return true;
	};
	{
		auto &expr = _20cd99043_ASSING_OPS;
		auto it = expr.begin();
		_iter_begin_1cb078b8e:;
		if (it != expr.end()) {
			jule::Str &_48612_op = *it;
			{
				if ((_48121_kind == _48612_op)) {
					return true;
				};
			}
			_iter_next_1cb078b8e:;
			++it;
			goto _iter_begin_1cb078b8e;
		}
		_iter_end_1cb078b8e:;
	};
	return false;
}



inline jule::Ptr<_20cda4adc_File> _20cda611b_new_file_set(jule::Str _6321_path) {
	return jule::new_ptr<_20cda4adc_File>(_20cda4adc_File{._field_path=_6321_path, });
}



inline _20ca8ec5b_Log _20cda7848_make_err(jule::I64 _11113_row, jule::I64 _11123_col, jule::Ptr<_20cda4adc_File>& _11134_f, jule::Str _11144_fmt, jule::Slice<jule::Any> _11157_args) {
	return _20ca8ec5b_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_row=_11113_row, ._field_column=_11123_col, ._field_path=_11134_f.get()._field_path, ._field_text=_20ca9019b_logf(_11144_fmt,jule::Any(_11157_args)), };
}



inline jule::Bool _20cda7bcd_bytes_has_prefix(jule::Slice<jule::U8>& _12122_bytes, jule::Str _12137_prefix) {
	if ((_12122_bytes.len() < _12137_prefix.len())) {
		return false;
	};
	{
		auto &expr = _12137_prefix;
		auto it = expr.begin();
		_iter_begin_1cb07c478:;
		if (it != expr.end()) {
			jule::I64 _1259_i = it - expr.begin();
			{
				if ((_12122_bytes[_1259_i] != _12137_prefix[_1259_i])) {
					return false;
				};
			}
			_iter_next_1cb07c478:;
			++it;
			_1259_i++;
			goto _iter_begin_1cb07c478;
		}
		_iter_end_1cb07c478:;
	};
	return true;
}



inline jule::Str _20cda801e_float_fmt_e(jule::Slice<jule::U8>& _13317_txt, jule::I64 _13334_i) {
	jule::Str _13344_lit = jule::Str();
	(_13334_i)++;
	if ((_13334_i >= _13317_txt.len())) {
		return _13344_lit;
	};
	jule::U8 _13913_b = _13317_txt[_13334_i];;
	if ((_13913_b == '_')) {
		return _13344_lit;
	};
	if (((_13913_b == '+') || (_13913_b == '-'))) {
		(_13334_i)++;
		if ((_13334_i >= _13317_txt.len())) {
			return _13344_lit;
		};
		if ((_13317_txt[_13334_i] == '_')) {
			return _13344_lit;
		};
	};
	jule::I64 _1539_first = _13334_i;;
	for (; (_13334_i < _13317_txt.len()); (_13334_i)++) {
		{
			_13913_b=_13317_txt[_13334_i];
			if (((_13913_b != '_') && (!(_20cda313a_is_decimal(_13913_b))))) {
				goto _iter_end_1cb080877;
			};
		}
	_iter_next_1cb080877:;
	}
	_iter_end_1cb080877:;;
	if ((_13334_i == _1539_first)) {
		_13344_lit = jule::Str();
		return _13344_lit;
	};
	_13344_lit = static_cast<jule::Str>(_13317_txt.slice(0LL,_13334_i));
	return _13344_lit;
}



inline jule::Str _20cda83a4_float_fmt_p(jule::Slice<jule::U8>& _16717_txt, jule::I64 _16730_i) {
	return _20cda801e_float_fmt_e(_16717_txt,_16730_i);
}



inline jule::Str _20cda86e5_float_fmt_dotnp(jule::Slice<jule::U8>& _17121_txt, jule::I64 _17138_i) {
	if ((_17121_txt[_17138_i] != '.')) {
		return jule::Str();
	};
	(_17138_i)++;
	_julec_label_loop:;
	for (; (_17138_i < _17121_txt.len()); (_17138_i)++) {
		{
			jule::U8 _17913_b = _17121_txt[_17138_i];;
			{
				
				if ((_17913_b == '_') || _20cda313a_is_decimal(_17913_b)) {
					_case_begin_1cb083a67:;
					{
						goto _iter_next_1cb08300b;
					}
				}
				else if (_20cda9e22_is_float_fmt_p(_17913_b,_17138_i)) {
					_case_begin_1cb083ade:;
					{
						return _20cda83a4_float_fmt_p(_17121_txt,_17138_i);
					}
				}
				else {
					_case_begin_1cb0839bd:;
					{
						goto _iter_end_1cb08300b;
					}
				}
				_match_end_1cb083946:;
			};
		}
	_iter_next_1cb08300b:;
	}
	_iter_end_1cb08300b:;;
	return jule::Str();
}



inline jule::Str _20cda8a36_float_fmt_dotfp(jule::Slice<jule::U8>& _19221_txt, jule::I64 _19238_i) {
	_19238_i+=2LL;
	return _20cda801e_float_fmt_e(_19221_txt,_19238_i);
}



inline jule::Str _20cda8d77_float_fmt_dotp(jule::Slice<jule::U8>& _19720_txt, jule::I64 _19737_i) {
	(_19737_i)++;
	return _20cda801e_float_fmt_e(_19720_txt,_19737_i);
}



inline jule::Str _20cda9251_float_num(jule::Slice<jule::U8>& _20215_txt, jule::I64 _20232_i) {
	jule::Str _20242_lit = jule::Str();
	(_20232_i)++;
	if ((_20232_i >= _20215_txt.len())) {
		_20242_lit = static_cast<jule::Str>(_20215_txt);
		return _20242_lit;
	};
	if ((_20215_txt[_20232_i] == '_')) {
		(_20232_i)--;
		_20242_lit = static_cast<jule::Str>(_20215_txt.slice(0LL,_20232_i));
		return _20242_lit;
	};
	for (; (_20232_i < _20215_txt.len()); (_20232_i)++) {
		{
			jule::U8 _21213_b = _20215_txt[_20232_i];;
			if (((_20232_i > 1LL) && ((_21213_b == 'e') || (_21213_b == 'E')))) {
				_20242_lit = _20cda801e_float_fmt_e(_20215_txt,_20232_i);
				return _20242_lit;
			};
			if (((_21213_b != '_') && (!(_20cda313a_is_decimal(_21213_b))))) {
				goto _iter_end_1cb087142;
			};
		}
	_iter_next_1cb087142:;
	}
	_iter_end_1cb087142:;;
	if ((_20232_i == 1LL)) {
		return _20242_lit;
	};
	_20242_lit = static_cast<jule::Str>(_20215_txt.slice(0LL,_20232_i));
	return _20242_lit;
}



inline jule::Str _20cda94e8_common_num(jule::Slice<jule::U8>& _22716_txt) {
	jule::Str _22731_lit = jule::Str();
	jule::I64 _22813_i = 0LL;;
	_julec_label_loop:;
	for (; (_22813_i < _22716_txt.len()); (_22813_i)++) {
		{
			jule::U8 _23113_b = _22716_txt[_22813_i];;
			{
				
				if ((_23113_b == '.')) {
					_case_begin_1cb08ac17:;
					{
						_22731_lit = _20cda9251_float_num(_22716_txt,_22813_i);
						return _22731_lit;
					}
				}
				else if ((_23113_b == '_')) {
					_case_begin_1cb08ac8e:;
					{
						goto _iter_next_1cb08a156;
					}
				}
				else if (_20cda9ad1_is_float_fmt_e(_23113_b,_22813_i)) {
					_case_begin_1cb08ad16:;
					{
						_22731_lit = _20cda801e_float_fmt_e(_22716_txt,_22813_i);
						return _22731_lit;
					}
				}
				else if ((!(_20cda313a_is_decimal(_23113_b)))) {
					_case_begin_1cb08ad8d:;
					{
						goto _iter_end_1cb08a156;
					}
				}
				_match_end_1cb08ab3a:;
			};
		}
	_iter_next_1cb08a156:;
	}
	_iter_end_1cb08a156:;;
	if ((_22813_i == 0LL)) {
		return _22731_lit;
	};
	_22731_lit = static_cast<jule::Str>(_22716_txt.slice(0LL,_22813_i));
	return _22731_lit;
}



inline jule::Str _20cda9790_binary_num(jule::Slice<jule::U8>& _25016_txt) {
	jule::Str _25031_lit = jule::Str();
	if ((!(_20cda7bcd_bytes_has_prefix(_25016_txt,jule::Str("0b", 2))))) {
		_25031_lit = jule::Str();
		return _25031_lit;
	};
	if ((_25016_txt.len() < 2LL)) {
		return _25031_lit;
	};
	;
	jule::I64 _25913_i = 2LL;;
	for (; (_25913_i < _25016_txt.len()); (_25913_i)++) {
		{
			if (((_25016_txt[_25913_i] != '_') && (!(_20cda33d2_is_binary(_25016_txt[_25913_i]))))) {
				goto _iter_end_1cb08e5de;
			};
		}
	_iter_next_1cb08e5de:;
	}
	_iter_end_1cb08e5de:;;
	if ((_25913_i == 2LL)) {
		return _25031_lit;
	};
	_25031_lit = static_cast<jule::Str>(_25016_txt.slice(0LL,_25913_i));
	return _25031_lit;
}



inline jule::Bool _20cda9ad1_is_float_fmt_e(jule::U8 _27219_b, jule::I64 _27228_i) {
	return ((_27228_i > 0LL) && ((_27219_b == 'e') || (_27219_b == 'E')));
}



inline jule::Bool _20cda9e22_is_float_fmt_p(jule::U8 _27619_b, jule::I64 _27628_i) {
	return ((_27628_i > 0LL) && ((_27619_b == 'p') || (_27619_b == 'P')));
}



inline jule::Bool _20cdaa263_is_float_fmt_dotnp(jule::Slice<jule::U8>& _28024_txt, jule::I64 _28041_i) {
	if ((_28024_txt[_28041_i] != '.')) {
		return false;
	};
	(_28041_i)++;
	_julec_label_loop:;
	for (; (_28041_i < _28024_txt.len()); (_28041_i)++) {
		{
			jule::U8 _28713_b = _28024_txt[_28041_i];;
			{
				
				if ((_28713_b == '_') || _20cda313a_is_decimal(_28713_b)) {
					_case_begin_1cb093dc9:;
					{
						goto _iter_next_1cb090821;
					}
				}
				else if (_20cda9e22_is_float_fmt_p(_28713_b,_28041_i)) {
					_case_begin_1cb093e51:;
					{
						return true;
					}
				}
				else {
					_case_begin_1cb093d30:;
					{
						goto _iter_end_1cb090821;
					}
				}
				_match_end_1cb093ca8:;
			};
		}
	_iter_next_1cb090821:;
	}
	_iter_end_1cb090821:;;
	return false;
}



inline jule::Bool _20cdaa5a4_is_float_fmt_dotp(jule::Slice<jule::U8>& _30123_txt, jule::I64 _30136_i) {
	{
		
		if ((_30123_txt.len() < 3LL)) {
			_case_begin_1cb095b56:;
			{
				goto _case_begin_1cb095c33;
			}
		}
		else if ((_30123_txt[_30136_i] != '.')) {
			_case_begin_1cb095c33:;
			{
				goto _case_begin_1cb095c99;
			}
		}
		else if (((_30123_txt[(_30136_i + 1LL)] != 'p') && (_30123_txt[(_30136_i + 1LL)] != 'P'))) {
			_case_begin_1cb095c99:;
			{
				return false;
			}
		}
		else {
			_case_begin_1cb09553a:;
			{
				return true;
			}
		}
		_match_end_1cb09546e:;
	};
}



inline jule::Bool _20cdaa8e5_is_float_fmt_dotfp(jule::Slice<jule::U8>& _31424_txt, jule::I64 _31437_i) {
	{
		
		if ((_31424_txt.len() < 4LL)) {
			_case_begin_1cb097d56:;
			{
				goto _case_begin_1cb097e22;
			}
		}
		else if ((_31424_txt[_31437_i] != '.')) {
			_case_begin_1cb097e22:;
			{
				goto _case_begin_1cb097e88;
			}
		}
		else if (((_31424_txt[(_31437_i + 1LL)] != 'f') && (_31424_txt[(_31437_i + 1LL)] != 'F'))) {
			_case_begin_1cb097e88:;
			{
				goto _case_begin_1cb097b8b;
			}
		}
		else if (((_31424_txt[(_31437_i + 2LL)] != 'p') && (_31424_txt[(_31437_i + 1LL)] != 'P'))) {
			_case_begin_1cb097b8b:;
			{
				return false;
			}
		}
		else {
			_case_begin_1cb09732d:;
			{
				return true;
			}
		}
		_match_end_1cb097262:;
	};
}



inline jule::Str _20cdaacad_octal_num(jule::Slice<jule::U8>& _32915_txt) {
	jule::Str _32930_lit = jule::Str();
	if ((_32915_txt[0LL] != '0')) {
		_32930_lit = jule::Str();
		return _32930_lit;
	};
	if ((_32915_txt.len() < 2LL)) {
		return _32930_lit;
	};
	jule::I64 _33713_octal_start = 1LL;;
	jule::Bool _33913_o = false;;
	if ((_32915_txt[1LL] == 'o')) {
		if ((_32915_txt.len() < 3LL)) {
			return _32930_lit;
		};
		(_33713_octal_start)++;
		_33913_o=true;
	};
	jule::I64 _34813_i = _33713_octal_start;;
	for (; (_34813_i < _32915_txt.len()); (_34813_i)++) {
		{
			jule::U8 _35013_b = _32915_txt[_34813_i];;
			if ((_35013_b == '.')) {
				if (_33913_o) {
					_32930_lit = jule::Str();
					return _32930_lit;
				};
				_32930_lit = _20cda9251_float_num(_32915_txt,_34813_i);
				return _32930_lit;
			};
			if (_20cda9ad1_is_float_fmt_e(_35013_b,_34813_i)) {
				_32930_lit = _20cda801e_float_fmt_e(_32915_txt,_34813_i);
				return _32930_lit;
			};
			if (((_35013_b != '_') && (!(_20cda3679_is_octal(_35013_b))))) {
				goto _iter_end_1cb09c344;
			};
		}
	_iter_next_1cb09c344:;
	}
	_iter_end_1cb09c344:;;
	if ((_34813_i == _33713_octal_start)) {
		return _32930_lit;
	};
	_32930_lit = static_cast<jule::Str>(_32915_txt.slice(0LL,_34813_i));
	return _32930_lit;
}



inline jule::Str _20cdab055_hex_num(jule::Slice<jule::U8>& _37113_txt) {
	jule::Str _37128_lit = jule::Str();
	if ((_37113_txt.len() < 3LL)) {
		return _37128_lit;
	};
	if (((_37113_txt[0LL] != '0') || ((_37113_txt[1LL] != 'x') && (_37113_txt[1LL] != 'X')))) {
		return _37128_lit;
	};
	;
	jule::I64 _38013_i = 2LL;;
	_julec_label_loop:;
	for (; (_38013_i < _37113_txt.len()); (_38013_i)++) {
		{
			jule::U8 _38313_b = _37113_txt[_38013_i];;
			{
				
				if (_20cdaa5a4_is_float_fmt_dotp(_37113_txt,_38013_i)) {
					_case_begin_1cb0a31e6:;
					{
						_37128_lit = _20cda8d77_float_fmt_dotp(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (_20cdaa8e5_is_float_fmt_dotfp(_37113_txt,_38013_i)) {
					_case_begin_1cb0a326d:;
					{
						_37128_lit = _20cda8a36_float_fmt_dotfp(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (_20cda9e22_is_float_fmt_p(_38313_b,_38013_i)) {
					_case_begin_1cb0a32e5:;
					{
						_37128_lit = _20cda83a4_float_fmt_p(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (_20cdaa263_is_float_fmt_dotnp(_37113_txt,_38013_i)) {
					_case_begin_1cb0a336c:;
					{
						_37128_lit = _20cda86e5_float_fmt_dotnp(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (((_38313_b != '_') && (!(_20cda3921_is_hex(_38313_b))))) {
					_case_begin_1cb0a33e4:;
					{
						goto _iter_end_1cb0a2679;
					}
				}
				_match_end_1cb0a30e7:;
			};
		}
	_iter_next_1cb0a2679:;
	}
	_iter_end_1cb0a2679:;;
	if ((_38013_i == 2LL)) {
		return _37128_lit;
	};
	_37128_lit = static_cast<jule::Str>(_37113_txt.slice(0LL,_38013_i));
	return _37128_lit;
}



inline jule::Str _20cdab396_hex_escape(jule::Slice<jule::U8>& _40416_txt, jule::I64 _40429_n) {
	jule::Str _40439_seq = jule::Str();
	if ((_40416_txt.len() < _40429_n)) {
		return _40439_seq;
	};
	;
	jule::I64 _41013_i = 2LL;;
	for (; (_41013_i < _40429_n); (_41013_i)++) {
		{
			if ((!(_20cda3921_is_hex(_40416_txt[_41013_i])))) {
				return _40439_seq;
			};
		}
	_iter_next_1cb0a6183:;
	}
	_iter_end_1cb0a6183:;;
	_40439_seq=static_cast<jule::Str>(_40416_txt.slice(0LL,_40429_n));
	return _40439_seq;
}



inline jule::Str _20cdab660_big_unicode_point_escape(jule::Slice<jule::U8>& _42230_txt) {
	return _20cdab396_hex_escape(_42230_txt,10LL);
}



inline jule::Str _20cdab93a_little_unicode_point_escape(jule::Slice<jule::U8>& _42733_txt) {
	return _20cdab396_hex_escape(_42733_txt,6LL);
}



inline jule::Str _20cdabbe3_hex_byte_escape(jule::Slice<jule::U8>& _43221_txt) {
	return _20cdab396_hex_escape(_43221_txt,4LL);
}



inline jule::Str _20cdabe8a_byte_escape(jule::Slice<jule::U8>& _43717_txt) {
	jule::Str _43732_seq = jule::Str();
	if ((_43717_txt.len() < 4LL)) {
		return _43732_seq;
	};
	if ((((!(_20cda3679_is_octal(_43717_txt[1LL]))) || (!(_20cda3679_is_octal(_43717_txt[2LL])))) || (!(_20cda3679_is_octal(_43717_txt[3LL]))))) {
		return _43732_seq;
	};
	_43732_seq = static_cast<jule::Str>(_43717_txt.slice(0LL,4LL));
	return _43732_seq;
}



inline jule::Slice<_20ca8ec5b_Log> _20cdb1984_lex(jule::Ptr<_20cda4adc_File> _83216_f, jule::I64 _83226_mode) {
	if ((_83216_f == nullptr)) {
		return nullptr;
	};
	_20cdac672_Lex _83713_lex = _20cdac672_Lex{._field_mode=_83226_mode, ._field_file=_83216_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_20cdb0213_new_line(&_83713_lex);
	_20cdad211_lex(&_83713_lex);
	if ((_83713_lex._field_errors.len() > 0LL)) {
		return _83713_lex._field_errors;
	};
	_83216_f.get()._field_tokens=_83713_lex._field_tokens;
	return nullptr;
}



inline jule::I64 _1e5bdd4ed_leading_zeros64(jule::U64 _6124_x) {
	return static_cast<jule::I64>((64LL - _1e5be55d2_len64(_6124_x)));
}



inline jule::I64 _1e5bde2ac_trailing_zeros(jule::U64 _8323_x) {
	;
	return static_cast<jule::I64>(_1e5bdedc3_trailing_zeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8323_x))));
}



inline jule::I64 _1e5bdeb2b_trailing_zeros32(jule::U32 _10525_x) {
	if ((_10525_x == 0LLU)) {
		return 32LL;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1e5bdda70_DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10525_x & (-(_10525_x))) * 125613361LLU) >> 27LLU))]));
}



inline jule::I64 _1e5bdedc3_trailing_zeros64(jule::U64 _11425_x) {
	if ((_11425_x == 0LLU)) {
		return 64LL;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1e5bde059_DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11425_x & (-(_11425_x))) * 285870213051353865LLU) >> 58LLU))]));
}



inline jule::I64 _1e5be533a_len32(jule::U32 _35218_x) {
	jule::I64 _35228_n = jule::I64();
	if ((_35218_x >= 65536LLU)) {
		_35218_x>>=16LLU;
		_35228_n=16LL;
	};
	if ((_35218_x >= 256LLU)) {
		_35218_x>>=8LLU;
		_35228_n+=8LL;
	};
	_35228_n = static_cast<jule::I64>((_35228_n + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35218_x)])));
	return _35228_n;
}



inline jule::I64 _1e5be55d2_len64(jule::U64 _36618_x) {
	jule::I64 _36628_n = jule::I64();
	if ((_36618_x >= 4294967296LLU)) {
		_36618_x>>=32LLU;
		_36628_n=32LL;
	};
	if ((_36618_x >= 65536LLU)) {
		_36618_x>>=16LLU;
		_36628_n+=16LL;
	};
	if ((_36618_x >= 256LLU)) {
		_36618_x>>=8LLU;
		_36628_n+=8LL;
	};
	_36628_n = static_cast<jule::I64>((_36628_n + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36618_x)])));
	return _36628_n;
}



inline std::tuple<jule::U64,jule::U64> _1e5be6292_add64(jule::U64 _41514_x, jule::U64 _41522_y, jule::U64 _41530_carry) {
	jule::U64 _41544_sum = jule::U64();
	jule::U64 _41554_carryout = jule::U64();
	_41544_sum=static_cast<jule::U64>(((_41514_x + _41522_y) + _41530_carry));
	_41554_carryout=static_cast<jule::U64>((((_41514_x & _41522_y) | ((_41514_x | _41522_y) & (~(_41544_sum)))) >> 63LLU));
	return std::make_tuple(_41544_sum,_41554_carryout);
}



inline std::tuple<jule::U64,jule::U64> _1e5be7925_mul64(jule::U64 _49914_x, jule::U64 _49922_y) {
	jule::U64 _49932_hi = jule::U64();
	jule::U64 _49941_lo = jule::U64();
	;
	jule::U64 _5019_x0 = (_49914_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49914_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49922_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49922_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	_49932_hi=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	_49941_lo=static_cast<jule::U64>((_49914_x * _49922_y));
	return std::make_tuple(_49932_hi,_49941_lo);
}



inline jule::U32 _1e48ccebe_f32_bits(jule::F32 _4117_f) {
	return (*(((jule::U32*)((&(_4117_f))))));
}



inline jule::F32 _1e48cd2aa_f32_from_bits(jule::U32 _4722_b) {
	return (*(((jule::F32*)((&(_4722_b))))));
}



inline jule::U64 _1e48cd552_f64_bits(jule::F64 _5217_f) {
	return (*(((jule::U64*)((&(_5217_f))))));
}



inline jule::F64 _1e48cd83d_f64_from_bits(jule::U64 _5822_b) {
	return (*(((jule::F64*)((&(_5822_b))))));
}



inline std::tuple<jule::F64,jule::I64> _1e48d0b1a_frexp(jule::F64 _4718_f) {
	jule::F64 _4728_frac = jule::F64();
	jule::I64 _4739_exp = jule::I64();
	{
		
		if ((_4718_f == 0LL)) {
			_case_begin_1cb1d6aaa:;
			{
				_4728_frac = _4718_f;
				_4739_exp = 0LL;
				return std::make_tuple(_4728_frac,_4739_exp);
			}
		}
		else if (_1e5bee377_is_inf(_4718_f,0LL) || _1e5bedc4a_is_nan(_4718_f)) {
			_case_begin_1cb1d6b32:;
			{
				_4728_frac = _4718_f;
				_4739_exp = 0LL;
				return std::make_tuple(_4728_frac,_4739_exp);
			}
		}
		_match_end_1cb1d69ab:;
	};
	std::tie(_4718_f,_4739_exp) = _1e5bee61e_normalize(_4718_f);
	jule::U64 _5613_x = _1e48cd552_f64_bits(_4718_f);;
	_4739_exp+=((static_cast<jule::I64>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	_4728_frac=static_cast<jule::F64>(_1e48cd83d_f64_from_bits(_5613_x));
	return std::make_tuple(_4728_frac,_4739_exp);
}



inline jule::F64 _1e5bed95e_nan(void) {
	return static_cast<jule::F64>(_1e48cd83d_f64_from_bits(9221120237041090561LLU));
}



inline jule::Bool _1e5bedc4a_is_nan(jule::F64 _5215_f) {
	return (_5215_f != _5215_f);
}



inline jule::F64 _1e5bedee2_inf(jule::I64 _6112_sign) {
	if ((_6112_sign >= 0LL)) {
		return static_cast<jule::F64>(_1e48cd83d_f64_from_bits(9218868437227405312LLU));
	};
	return static_cast<jule::F64>(_1e48cd83d_f64_from_bits(18442240474082181120LLU));
}



inline jule::Bool _1e5bee377_is_inf(jule::F64 _7215_f, jule::I64 _7223_sign) {
	return (((_7223_sign >= 0LL) && (_7215_f > jule::MAX_F64)) || ((_7223_sign <= 0LL) && (_7215_f < jule::MIN_F64)));
}



inline std::tuple<jule::F64,jule::I64> _1e5bee61e_normalize(jule::F64 _8214_x) {
	jule::F64 _8224_y = jule::F64();
	jule::I64 _8232_exp = jule::I64();
	;
	if ((_1e5c0190c_abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		_8224_y = static_cast<jule::F64>((_8214_x * 4503599627370496LL));
		_8232_exp = -52LL;
		return std::make_tuple(_8224_y,_8232_exp);
	};
	_8224_y = _8214_x;
	_8232_exp = 0LL;
	return std::make_tuple(_8224_y,_8232_exp);
}



inline jule::F64 _1e5c00ea0_log(jule::F64 _11112_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1e5bedc4a_is_nan(_11112_x) || _1e5bee377_is_inf(_11112_x,1LL)) {
			_case_begin_1cae2bdb6:;
			{
				return _11112_x;
			}
		}
		else if ((_11112_x < 0LL)) {
			_case_begin_1cae2be3d:;
			{
				return static_cast<jule::F64>(_1e5bed95e_nan());
			}
		}
		else if ((_11112_x == 0LL)) {
			_case_begin_1cae2beb5:;
			{
				return static_cast<jule::F64>(_1e5bedee2_inf(-1LL));
			}
		}
		_match_end_1cae2bcd9:;
	};
	jule::F64 _13314_f1;;
	jule::I64 _13322_ki;;
	std::tie(_13314_f1,_13322_ki) = _1e48d0b1a_frexp(_11112_x);
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));
}



inline jule::F64 _1e5c0190c_abs(jule::F64 _4312_x) {
	return static_cast<jule::F64>(_1e48cd83d_f64_from_bits(static_cast<jule::U64>((_1e48cd552_f64_bits(_4312_x) & 9223372036854775807LLU))));
}



inline std::tuple<jule::F64,jule::F64> _1e5c07b11_modf(jule::F64 _4413_f) {
	jule::F64 _4423_integer = jule::F64();
	jule::F64 _4437_frac = jule::F64();
	;
	jule::F64 _469_abs_f = _1e5c0190c_abs(_4413_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_abs_f > 4503599627370496LL)) {
		_4713_i=_4413_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_abs_f + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_abs_f)) {
			{
				(_4713_i)--;
			}
		_iter_next_1cae96b01:;
		}
		_iter_end_1cae96b01:;;
		if ((_4413_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	_4423_integer = _4713_i;
	_4437_frac = static_cast<jule::F64>((_4413_f - _4713_i));
	return std::make_tuple(_4423_integer,_4437_frac);
}



inline jule::F64 _1e5c083a3_log2(jule::F64 _4413_x) {
	jule::F64 _4510_frac;;
	jule::I64 _4516_exp;;
	std::tie(_4510_frac,_4516_exp) = _1e48d0b1a_frexp(_4413_x);
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));
	};
	return static_cast<jule::F64>(((_1e5c00ea0_log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));
}



inline jule::Str _1e4746de3_fmt_float(jule::F64 _7818_f, jule::U8 _7826_fmt, jule::I64 _7837_prec, jule::I64 _7848_bit_size) {
	return static_cast<jule::Str>(_1e4758124_generic_ftoa(jule::Slice<jule::U8>::alloc(0LL,_1e4796030_max(static_cast<jule::I64>((_7837_prec + 4LL)),24LL)),_7818_f,_7826_fmt,_7837_prec,_7848_bit_size));
}



inline jule::Slice<jule::U8> _1e4758124_generic_ftoa(jule::Slice<jule::U8> _8221_dst, jule::F64 _8234_val, jule::U8 _8244_fmt, jule::I64 _8259_prec, jule::I64 _8270_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_1e5aa9e25_FloatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8270_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1cb254573:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_1e48ccebe_f32_bits(static_cast<jule::F32>(static_cast<jule::F32>(_8234_val)))));
				_8413_flt=((jule::Ptr<_1e5aa9e25_FloatInfo>)((&(_1e4774085_F32_INFO))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1cb254320:;
			{
				_8313_bits=static_cast<jule::U64>(_1e48cd552_f64_bits(_8234_val));
				_8413_flt=((jule::Ptr<_1e5aa9e25_FloatInfo>)((&(_1e4780ea4_F64_INFO))));
			}
		}
		else {
			_case_begin_1cb252e01:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1cb253e68:;
	};
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)) != 0LLU);;
	jule::I64 _9713_exp = (static_cast<jule::I64>((_8313_bits >> _8413_flt.get()._field_mantbits)) & static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)))) {
			_case_begin_1cb25808d:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_1cb259ea2:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>::make({'n','a','n'}));
						}
					}
					else if (_969_neg) {
						_case_begin_1cb25a1b1:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));
						}
					}
					else {
						_case_begin_1cb258db3:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));
						}
					}
					_match_end_1cb258ce7:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1cb257da1:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_1cb2571be:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_1cb257972:;
	};
	_9713_exp+=_8413_flt.get()._field_bias;
	if ((_8244_fmt == 'b')) {
		return _1e56d1783_fmt_b(_8221_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	if (((_8244_fmt == 'x') || (_8244_fmt == 'X'))) {
		return _1e5aab8c7_fmt_x(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	;
	_1e5665e21_DecimalSlice _13213_digs = _1e5665e21_DecimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8259_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL);
		_1e5c2d41c_ryu_ftoa_shortest(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),(*(_8413_flt)));
		_13313_ok=true;
		{
			auto &_match_expr{ _8244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1cb25e616:;
				{
					_8259_prec=static_cast<jule::I64>(_1e4796030_max(static_cast<jule::I64>((_13213_digs._field_nd - 1LL)),0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1cb25e67c:;
				{
					_8259_prec=static_cast<jule::I64>(_1e4796030_max(static_cast<jule::I64>((_13213_digs._field_nd - _13213_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1cb25e737:;
				{
					_8259_prec=_13213_digs._field_nd;
				}
			}
			_match_end_1cb25e47e:;
		};
	} else if ((_8244_fmt != 'f')) {
		jule::I64 _15217_digits = _8259_prec;;
		{
			auto &_match_expr{ _8244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1cb261b8a:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1cb261c01:;
				{
					if ((_8259_prec == 0LL)) {
						_8259_prec=1LL;
					};
					_15217_digits=_8259_prec;
				}
			}
			else {
				_case_begin_1cb26152a:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_1cb2614c5:;
		};
		if (((_8270_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1e5c2d076_ryu_ftoa_fixed32(_13213_digs,static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)),static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1e5c2d1a8_ryu_ftoa_fixed64(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _1e47673b9_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	return _1e56215d5_fmt_digits(_8221_dst,_1359_shortest,_969_neg,_13213_digs,_8259_prec,_8244_fmt);
}



inline jule::Slice<jule::U8> _1e47673b9_big_ftoa(jule::Slice<jule::U8> _18217_dst, jule::I64 _18234_prec, jule::U8 _18245_fmt, jule::Bool _18256_neg, jule::U64 _1835_mant, jule::I64 _18316_exp, _1e5aa9e25_FloatInfo& _18327_flt) {
	_1e5c2e5d8_Decimal _18413_d = _1e5c2e5d8_Decimal{};;
	_1e5c2e7c5_assign(&_18413_d, _1835_mant);
	_1e5c2e907_shift(&_18413_d, static_cast<jule::I64>((_18316_exp - static_cast<jule::I64>(_18327_flt._field_mantbits))));
	_1e5665e21_DecimalSlice _18713_digs = _1e5665e21_DecimalSlice{};;
	jule::Bool _1889_shortest = (_18234_prec < 0LL);;
	if (_1889_shortest) {
		_1e565630c_round_shortest(_18413_d,_1835_mant,_18316_exp,_18327_flt);
		_18713_digs=_1e5665e21_DecimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
		{
			auto &_match_expr{ _18245_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1cb269ca3:;
				{
					_18234_prec=static_cast<jule::I64>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1cb268d29:;
				{
					_18234_prec=static_cast<jule::I64>(_1e4796030_max(static_cast<jule::I64>((_18713_digs._field_nd - _18713_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1cb269d2a:;
				{
					_18234_prec=_18713_digs._field_nd;
				}
			}
			_match_end_1cb269bc6:;
		};
	} else {
		{
			auto &_match_expr{ _18245_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1cb268ac6:;
				{
					_1e5c2ec9d_round(&_18413_d, static_cast<jule::I64>((_18234_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1cb268b3c:;
				{
					_1e5c2ec9d_round(&_18413_d, static_cast<jule::I64>((_18413_d._field_dp + _18234_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1cb268ba3:;
				{
					if ((_18234_prec == 0LL)) {
						_18234_prec=1LL;
					};
					_1e5c2ec9d_round(&_18413_d, _18234_prec);
				}
			}
			_match_end_1cb26b711:;
		};
		_18713_digs=_1e5665e21_DecimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
	};
	return _1e56215d5_fmt_digits(_18217_dst,_1889_shortest,_18256_neg,_18713_digs,_18234_prec,_18245_fmt);
}



inline jule::Slice<jule::U8> _1e56215d5_fmt_digits(jule::Slice<jule::U8> _21919_dst, jule::Bool _21932_shortest, jule::Bool _21948_neg, _1e5665e21_DecimalSlice _2205_digs, jule::I64 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1cb26eed9:;
			{
				return _1e56580bc_fmt_e(_21919_dst,_21948_neg,_2205_digs,_22029_prec,_22040_fmt);
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1cb270050:;
			{
				return _1e56886e6_fmt_f(_21919_dst,_21948_neg,_2205_digs,_22029_prec);
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1cb2700b6:;
			{
				jule::I64 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21932_shortest) {
					_22817_eprec=6LL;
				};
				jule::I64 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _1e56580bc_fmt_e(_21919_dst,_21948_neg,_2205_digs,static_cast<jule::I64>((_22029_prec - 1LL)),static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _1e56886e6_fmt_f(_21919_dst,_21948_neg,_2205_digs,static_cast<jule::I64>(_1e4796030_max(static_cast<jule::I64>((_22029_prec - _2205_digs._field_dp)),0LL)));
			}
		}
		_match_end_1cb26ee84:;
	};
	return jule::append(_21919_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));
}



inline void _1e565630c_round_shortest(_1e5c2e5d8_Decimal& _25724_d, jule::U64 _25736_mant, jule::I64 _25747_exp, _1e5aa9e25_FloatInfo& _25758_flt) {
	if ((_25736_mant == 0LLU)) {
		_25724_d._field_nd=0LL;
		return;;
	};
	jule::I64 _2789_minexp = (_25758_flt._field_bias + 1LL);;
	if (((_25747_exp > _2789_minexp) && ((332LL * (_25724_d._field_dp - _25724_d._field_nd)) >= (100LL * (_25747_exp - static_cast<jule::I64>(_25758_flt._field_mantbits)))))) {
		return;;
	};
	_1e5c2e5d8_Decimal _28713_upper = _1e5c2e5d8_Decimal{};;
	_1e5c2e7c5_assign(&_28713_upper, static_cast<jule::U64>(((_25736_mant << 1LLU) + 1LLU)));
	_1e5c2e907_shift(&_28713_upper, static_cast<jule::I64>(((_25747_exp - static_cast<jule::I64>(_25758_flt._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I64 _29813_explo = 0LL;;
	if (((_25736_mant > (1LLU << _25758_flt._field_mantbits)) || (_25747_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25736_mant - 1LLU));
		_29813_explo=_25747_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25736_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I64>((_25747_exp - 1LL));
	};
	_1e5c2e5d8_Decimal _30613_lower = _1e5c2e5d8_Decimal{};;
	_1e5c2e7c5_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_1e5c2e907_shift(&_30613_lower, static_cast<jule::I64>(((_29813_explo - static_cast<jule::I64>(_25758_flt._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25736_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I64 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I64 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + _25724_d._field_dp);;
			if ((_33513_mi >= _25724_d._field_nd)) {
				goto _iter_end_1cb2790d1;
			};
			jule::I64 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=_25724_d._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_1cb282d76:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_1cb282ded:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_1cb282e75:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_1cb282caa:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_1cb285dce:;
					{
						_1e5c2ec9d_round(&_25724_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_1cb285e56:;
					{
						_1e5c2ea39_round_down(&_25724_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_1cb285ecd:;
					{
						_1e5c2eb6b_round_up(&_25724_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_1cb285d35:;
			};
		}
	_iter_next_1cb2790d1:;
	}
	_iter_end_1cb2790d1:;;
}



inline jule::Slice<jule::U8> _1e56580bc_fmt_e(jule::Slice<jule::U8> _39614_dst, jule::Bool _39627_neg, _1e5665e21_DecimalSlice _39638_d, jule::I64 _39655_prec, jule::U8 _39666_fmt) {
	if (_39627_neg) {
		_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('-');;
	};
	jule::U8 _40313_ch = '0';;
	if ((_39638_d._field_nd != 0LL)) {
		_40313_ch=_39638_d._field_d[0LL];
	};
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_40313_ch);;
	if ((_39655_prec > 0LL)) {
		_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('.');;
		jule::I64 _41217_i = 1LL;;
		jule::I64 _41313_m = _1e5aebcd0_min(_39638_d._field_nd,static_cast<jule::I64>((_39655_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			_39614_dst=jule::append(_39614_dst,_39638_d._field_d.slice(_41217_i,_41313_m));
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39655_prec); (_41217_i)++) {
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('0');;
			}
		_iter_next_1cac0c317:;
		}
		_iter_end_1cac0c317:;;
	};
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_39666_fmt);;
	jule::I64 _42513_exp = (_39638_d._field_dp - 1LL);;
	if ((_39638_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I64>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_40313_ch);;
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_1cac0e6b0:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,2);_39614_dst.__push('0');_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0')));;
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_1cac0e726:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,2);_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0')));_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1cac0eb00:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,3);_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0')));_39614_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0')));_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1cac0edca:;
	};
	return _39614_dst;
}



inline jule::Slice<jule::U8> _1e56886e6_fmt_f(jule::Slice<jule::U8> _45114_dst, jule::Bool _45127_neg, _1e5665e21_DecimalSlice _45138_d, jule::I64 _45155_prec) {
	if (_45127_neg) {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('-');;
	};
	if ((_45138_d._field_dp > 0LL)) {
		jule::I64 _45917_m = _1e5aebcd0_min(_45138_d._field_nd,_45138_d._field_dp);;
		_45114_dst=jule::append(_45114_dst,_45138_d._field_d.slice(0LL,_45917_m));
		for (; (_45917_m < _45138_d._field_dp); (_45917_m)++) {
			{
				_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('0');;
			}
		_iter_next_1cac14d7a:;
		}
		_iter_end_1cac14d7a:;;
	} else {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('0');;
	};
	if ((_45155_prec > 0LL)) {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('.');;
		jule::I64 _47017_i = 0LL;;
		for (; (_47017_i < _45155_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47317_j = (_45138_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45138_d._field_nd))) {
					_47221_ch=_45138_d._field_d[_47317_j];
				};
				_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push(_47221_ch);;
			}
		_iter_next_1cac15d04:;
		}
		_iter_end_1cac15d04:;;
	};
	return _45114_dst;
}



inline jule::Slice<jule::U8> _1e56d1783_fmt_b(jule::Slice<jule::U8> _48414_dst, jule::Bool _48427_neg, jule::U64 _48438_mant, jule::I64 _48453_exp, _1e5aa9e25_FloatInfo& _48464_flt) {
	if (_48427_neg) {
		_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('-');;
	};
	std::tie(_48414_dst,std::ignore) = _1e5c31013_fmt_bits(_48414_dst,_48438_mant,10LL,false,true);
	_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('p');;
	_48453_exp-=static_cast<jule::I64>(_48464_flt._field_mantbits);
	if ((_48453_exp >= 0LL)) {
		_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('+');;
	};
	std::tie(_48414_dst,std::ignore) = _1e5c31013_fmt_bits(_48414_dst,static_cast<jule::U64>(static_cast<jule::U64>(_48453_exp)),10LL,(_48453_exp < 0LL),true);
	return _48414_dst;
}



inline jule::Slice<jule::U8> _1e5aab8c7_fmt_x(jule::Slice<jule::U8> _50614_dst, jule::I64 _50627_prec, jule::U8 _50638_fmt, jule::Bool _50649_neg, jule::U64 _5079_mant, jule::I64 _50724_exp, _1e5aa9e25_FloatInfo& _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - _50735_flt._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_1cac1b821:;
	}
	_iter_end_1cac1b821:;;
	if (((_50627_prec >= 0LL) && (_50627_prec < 15LL))) {
		jule::U64 _52113_shift = static_cast<jule::U64>((_50627_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50638_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50649_neg) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('-');;
	};
	_50614_dst = jule::alloc_for_append(_50614_dst,3);_50614_dst.__push('0');_50614_dst.__push(_50638_fmt);_50614_dst.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU)))));;
	_5079_mant<<=4LLU;
	if (((_50627_prec < 0LL) && (_5079_mant != 0LLU))) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('.');;
		while ((_5079_mant != 0LLU)) {
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1cac2264b:;
		}
		_iter_end_1cac2264b:;;
	} else if ((_50627_prec > 0LL)) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('.');;
		jule::I64 _55817_i = 0LL;;
		for (; (_55817_i < _50627_prec); (_55817_i)++) {
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1cac23ad1:;
		}
		_iter_end_1cac23ad1:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50638_fmt == _1e56a966d_lower(_50638_fmt))) {
		_56613_ch='p';
	};
	_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_56613_ch);;
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I64>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_56613_ch);;
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_1cac28762:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,2);_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_1cac209ce:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,3);_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1cac20968:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,4);_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1cac2552d:;
	};
	return _50614_dst;
}



inline jule::I64 _1e5aebcd0_min(jule::I64 _5918_a, jule::I64 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;
	};
	return _59116_b;
}



inline jule::I64 _1e4796030_max(jule::I64 _5988_a, jule::I64 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;
	};
	return _59816_b;
}



inline jule::U8 _1e56a966d_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | ('x' - 'X')));
}



inline std::tuple<jule::U64,jule::I64> _1e5aeb98e___parse_uint(jule::Str _5121_s, jule::I64 _5133_base, jule::I64 _5148_bit_size) {
	if (_5121_s.empty()) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
	};
	{
		
		if (((2LL <= _5133_base) && (_5133_base <= 36LL))) {
			_case_begin_1cac2d305:;
		}
		else if ((_5133_base == 0LL)) {
			_case_begin_1cac2d1c3:;
			{
				_5133_base=10LL;
				if ((_5121_s[0LL] == '0')) {
					{
						
						if (((_5121_s.len() >= 3LL) && (_1e56a966d_lower(_5121_s[1LL]) == 'b'))) {
							_case_begin_1cac2ec96:;
							{
								_5133_base=2LL;
								(_5121_s).mut_slice(2LL);;
							}
						}
						else if (((_5121_s.len() >= 3LL) && (_1e56a966d_lower(_5121_s[1LL]) == 'o'))) {
							_case_begin_1cac2ed0c:;
							{
								_5133_base=8LL;
								(_5121_s).mut_slice(2LL);;
							}
						}
						else if (((_5121_s.len() >= 3LL) && (_1e56a966d_lower(_5121_s[1LL]) == 'x'))) {
							_case_begin_1cac2e988:;
							{
								_5133_base=16LL;
								(_5121_s).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1cac2e922:;
							{
								_5133_base=8LL;
								(_5121_s).mut_slice(1LL);;
							}
						}
						_match_end_1cac2e856:;
					};
				};
			}
		}
		else {
			_case_begin_1cac2c469:;
			{
				return std::make_tuple(0LLU,static_cast<jule::I64>(3LL));
			}
		}
		_match_end_1cac2c414:;
	};
	if ((_5148_bit_size == 0LL)) {
		_5148_bit_size=64LL;
	} else if (((_5148_bit_size < 0LL) || (_5148_bit_size > 64LL))) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(4LL));
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5133_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1cac349c1:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1cac347c3:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1cac341da:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5133_base)) + 1LLU));
			}
		}
		_match_end_1cac3453c:;
	};
	jule::U64 _10013_max_val = 0LLU;;
	{
		auto &_match_expr{ _5148_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1cac3561a:;
			{
				_10013_max_val=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1cac35a5a:;
			{
				_10013_max_val=jule::MAX_U64;
			}
		}
		_match_end_1cac34ebb:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto &expr = _5121_s;
		auto it = expr.begin();
		_iter_begin_1cac369c3:;
		if (it != expr.end()) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1cac37c8d:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _1e56a966d_lower(_10912_c)) && (_1e56a966d_lower(_10912_c) <= 'z'))) {
						_case_begin_1cac37b5b:;
						{
							_11017_d=static_cast<jule::U8>(((_1e56a966d_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1cac37bc2:;
						{
							goto _iter_next_1cac369c3;
						}
					}
					else {
						_case_begin_1cac376e9:;
						{
							return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
						}
					}
					_match_end_1cac37672:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5133_base))) {
					return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
				};
				if ((_10813_n >= _9013_cutoff)) {
					return std::make_tuple(_10013_max_val,static_cast<jule::I64>(1LL));
				};
				_10813_n*=static_cast<jule::U64>(_5133_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_max_val))) {
					return std::make_tuple(_10013_max_val,static_cast<jule::I64>(1LL));
				};
				_10813_n=_13213_n1;
			}
			_iter_next_1cac369c3:;
			++it;
			goto _iter_begin_1cac369c3;
		}
		_iter_end_1cac369c3:;
	};
	return std::make_tuple(_10813_n,static_cast<jule::I64>(0LL));
}



inline jule::Exceptional<jule::U64> _1e47dca05_parse_uint(jule::Str _14623_s, jule::I64 _14635_base, jule::I64 _14650_bit_size) {
	jule::U64 _14710_un;;
	jule::I64 _14714_err;;
	std::tie(_14710_un,_14714_err) = _1e5aeb98e___parse_uint(_14623_s,_14635_base,_14650_bit_size);
	if ((_14714_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(_14714_err);
	};
	return jule::Exceptional<jule::U64>(jule::Any(),_14710_un);
}



inline jule::Exceptional<jule::I64> _1e569a61a_parse_int(jule::Str _17222_s, jule::I64 _17230_base, jule::I64 _17245_bit_size) {
	if (_17222_s.empty()) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(2LL));
	};
	jule::Bool _17813_neg = false;;
	if ((_17222_s[0LL] == '+')) {
		(_17222_s).mut_slice(1LL);;
	} else if ((_17222_s[0LL] == '-')) {
		_17813_neg=true;
		(_17222_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un;;
	jule::I64 _18718_err;;
	std::tie(_18714_un,_18718_err) = _1e5aeb98e___parse_uint(_17222_s,_17230_base,_17245_bit_size);
	if (((_18718_err != static_cast<jule::I64>(0LL)) && (_18718_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(_18718_err);
	};
	if ((_17245_bit_size == 0LL)) {
		_17245_bit_size=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17245_bit_size - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_20313_n);
}



inline std::tuple<jule::F64,jule::Bool> _1e565795c_eisel_lemire64(jule::U64 _4123_man, jule::I64 _4133_exp10, jule::Bool _4145_neg) {
	jule::F64 _4158_f = jule::F64();
	jule::Bool _4166_ok = jule::Bool();
	if ((_4123_man == 0LLU)) {
		if (_4145_neg) {
			_4158_f=static_cast<jule::F64>(_1e48cd83d_f64_from_bits(9223372036854775808LLU));
		};
		_4166_ok = true;
		return std::make_tuple(_4158_f,_4166_ok);
	};
	if (((_4133_exp10 < -348LL) || (347LL < _4133_exp10))) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	};
	jule::I64 _579_clz = _1e5bdd4ed_leading_zeros64(_4123_man);;
	_4123_man<<=static_cast<jule::U64>(_579_clz);
	;
	jule::U64 _6013_ret_exp2 = (static_cast<jule::U64>(((((217706LL * _4133_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_x_hi;;
	jule::U64 _6324_x_lo;;
	std::tie(_6314_x_hi,_6324_x_lo) = _1e5be7925_mul64(_4123_man,_1e5601010_DETAILED_POWS_OF_TEN[(_4133_exp10 - -348LL)][1LL]);
	if ((((_6314_x_hi & 511LLU) == 511LLU) && ((_6324_x_lo + _4123_man) < _4123_man))) {
		jule::U64 _6714_y_hi;;
		jule::U64 _6720_y_lo;;
		std::tie(_6714_y_hi,_6720_y_lo) = _1e5be7925_mul64(_4123_man,_1e5601010_DETAILED_POWS_OF_TEN[(_4133_exp10 - -348LL)][0LL]);
		jule::U64 _6818_merged_hi = _6314_x_hi;;
		jule::U64 _6829_merged_lo = (_6324_x_lo + _6714_y_hi);;
		std::tie(_6818_merged_hi,_6829_merged_lo) = std::make_tuple(_6314_x_hi,(_6324_x_lo + _6714_y_hi));
		if ((_6829_merged_lo < _6324_x_lo)) {
			(_6818_merged_hi)++;
		};
		if (((((_6818_merged_hi & 511LLU) == 511LLU) && ((_6829_merged_lo + 1LLU) == 0LLU)) && ((_6720_y_lo + _4123_man) < _4123_man))) {
			_4158_f = 0LL;
			_4166_ok = false;
			return std::make_tuple(_4158_f,_4166_ok);
		};
		std::tie(_6314_x_hi,_6324_x_lo) = std::make_tuple(_6818_merged_hi,_6829_merged_lo);
	};
	jule::U64 _799_msb = (_6314_x_hi >> 63LLU);;
	jule::U64 _8013_ret_mantissa = (_6314_x_hi >> (_799_msb + 9LLU));;
	_6013_ret_exp2-=(1LLU ^ _799_msb);
	if ((((_6324_x_lo == 0LLU) && ((_6314_x_hi & 511LLU) == 0LLU)) && ((_8013_ret_mantissa & 3LLU) == 1LLU))) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	};
	_8013_ret_mantissa+=(_8013_ret_mantissa & 1LLU);
	_8013_ret_mantissa>>=1LLU;
	if (((_8013_ret_mantissa >> 53LLU) > 0LLU)) {
		_8013_ret_mantissa>>=1LLU;
		_6013_ret_exp2+=1LLU;
	};
	if (((_6013_ret_exp2 - 1LLU) >= 2046LLU)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	};
	jule::U64 _10313_ret_bits = ((_6013_ret_exp2 << 52LLU) | (_8013_ret_mantissa & 4503599627370495LLU));;
	if (_4145_neg) {
		_10313_ret_bits|=9223372036854775808LLU;
	};
	_4158_f = static_cast<jule::F64>(_1e48cd83d_f64_from_bits(_10313_ret_bits));
	_4166_ok = true;
	return std::make_tuple(_4158_f,_4166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1e5ae888c_eisel_lemire32(jule::U64 _11023_man, jule::I64 _11033_exp10, jule::Bool _11045_neg) {
	jule::F32 _11058_f = jule::F32();
	jule::Bool _11066_ok = jule::Bool();
	if ((_11023_man == 0LLU)) {
		if (_11045_neg) {
			_11058_f=static_cast<jule::F32>(_1e48cd2aa_f32_from_bits(2147483648LLU));
		};
		_11066_ok = true;
		return std::make_tuple(_11058_f,_11066_ok);
	};
	if (((_11033_exp10 < -348LL) || (347LL < _11033_exp10))) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	};
	jule::I64 _1329_clz = _1e5bdd4ed_leading_zeros64(_11023_man);;
	_11023_man<<=static_cast<jule::U64>(_1329_clz);
	;
	jule::U64 _13513_ret_exp2 = (static_cast<jule::U64>(((((217706LL * _11033_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi;;
	jule::U64 _13824_x_lo;;
	std::tie(_13814_x_hi,_13824_x_lo) = _1e5be7925_mul64(_11023_man,_1e5601010_DETAILED_POWS_OF_TEN[(_11033_exp10 - -348LL)][1LL]);
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11023_man) < _11023_man))) {
		jule::U64 _14214_y_hi;;
		jule::U64 _14220_y_lo;;
		std::tie(_14214_y_hi,_14220_y_lo) = _1e5be7925_mul64(_11023_man,_1e5601010_DETAILED_POWS_OF_TEN[(_11033_exp10 - -348LL)][0LL]);
		jule::U64 _14318_merged_hi = _13814_x_hi;;
		jule::U64 _14329_merged_lo = (_13824_x_lo + _14214_y_hi);;
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,(_13824_x_lo + _14214_y_hi));
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11023_man) < _11023_man))) {
			_11058_f = 0LL;
			_11066_ok = false;
			return std::make_tuple(_11058_f,_11066_ok);
		};
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_ret_mantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_ret_exp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_ret_mantissa & 3LLU) == 1LLU))) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	};
	_15513_ret_mantissa+=(_15513_ret_mantissa & 1LLU);
	_15513_ret_mantissa>>=1LLU;
	if (((_15513_ret_mantissa >> 24LLU) > 0LLU)) {
		_15513_ret_mantissa>>=1LLU;
		_13513_ret_exp2+=1LLU;
	};
	if (((_13513_ret_exp2 - 1LLU) >= 254LLU)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	};
	jule::U64 _17813_ret_bits = ((_13513_ret_exp2 << 23LLU) | (_15513_ret_mantissa & 8388607LLU));;
	if (_11045_neg) {
		_17813_ret_bits|=2147483648LLU;
	};
	_11058_f = static_cast<jule::F32>(_1e48cd2aa_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_ret_bits))));
	_11066_ok = true;
	return std::make_tuple(_11058_f,_11066_ok);
}



inline jule::I64 _1e5c2bd11_common_prefix_len_ignore_case(jule::Str _4534_s, jule::Str _4542_prefix) {
	jule::I64 _4613_n = _4542_prefix.len();;
	if ((_4613_n > _4534_s.len())) {
		_4613_n=static_cast<jule::I64>(_4534_s.len());
	};
	jule::I64 _5013_i = 0LL;;
	for (; (_5013_i < _4613_n); (_5013_i)++) {
		{
			jule::U8 _5217_c = _4534_s[_5013_i];;
			if ((('A' <= _5217_c) && (_5217_c <= 'Z'))) {
				_5217_c+=('a' - 'A');
			};
			if ((_5217_c != _4542_prefix[_5013_i])) {
				return _5013_i;
			};
		}
	_iter_next_1cb44c2e8:;
	}
	_iter_end_1cb44c2e8:;;
	return _4613_n;
}



inline std::tuple<jule::F64,jule::I64,jule::Bool> _1e5c2be43_special(jule::Str _6816_s) {
	jule::F64 _6826_f = jule::F64();
	jule::I64 _6834_n = jule::I64();
	jule::Bool _6842_ok = jule::Bool();
	if (_6816_s.empty()) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	};
	jule::I64 _7213_sign = 1LL;;
	jule::I64 _7313_nsign = 0LL;;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1cb451e9b:;
			{
				if ((_6816_s[0LL] == '-')) {
					_7213_sign=-1LL;
				};
				_7313_nsign=1LL;
				(_6816_s).mut_slice(1LL);;
				goto _case_begin_1cb452012;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1cb452012:;
			{
				jule::I64 _8317_case_n = _1e5c2bd11_common_prefix_len_ignore_case(_6816_s,jule::Str("infinity", 8));;
				if (((3LL < _8317_case_n) && (_8317_case_n < 8LL))) {
					_8317_case_n=3LL;
				};
				if (((_8317_case_n == 3LL) || (_8317_case_n == 8LL))) {
					_6826_f = static_cast<jule::F64>(_1e5bedee2_inf(_7213_sign));
					_6834_n = static_cast<jule::I64>((_7313_nsign + _6834_n));
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1cb452078:;
			{
				if ((_1e5c2bd11_common_prefix_len_ignore_case(_6816_s,jule::Str("nan", 3)) == 3LL)) {
					_6826_f = static_cast<jule::F64>(_1e5bed95e_nan());
					_6834_n = 3LL;
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				};
			}
		}
		_match_end_1cb451e46:;
	};
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _1e5c2c075_read_float(jule::Str _10315_s) {
	jule::U64 _10325_mantissa = jule::U64();
	jule::I64 _10340_exp = jule::I64();
	jule::Bool _10350_neg = jule::Bool();
	jule::Bool _10361_trunc = jule::Bool();
	jule::Bool _10374_hex = jule::Bool();
	jule::I64 _10385_i = jule::I64();
	jule::Bool _10393_ok = jule::Bool();
	if ((_10385_i >= _10315_s.len())) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
	};
	{
		
		if ((_10315_s[_10385_i] == '+')) {
			_case_begin_1cb457dd6:;
			{
				(_10385_i)++;
			}
		}
		else if ((_10315_s[_10385_i] == '-')) {
			_case_begin_1cb45815b:;
			{
				_10350_neg=true;
				(_10385_i)++;
			}
		}
		_match_end_1cb457a40:;
	};
	jule::U64 _11713_base = 10LLU;;
	jule::I64 _11813_max_mant_digits = 19LL;;
	jule::U8 _11913_exp_char = 'e';;
	if (((((_10385_i + 2LL) < _10315_s.len()) && (_10315_s[_10385_i] == '0')) && (_1e56a966d_lower(_10315_s[(_10385_i + 1LL)]) == 'x'))) {
		_11713_base=16LLU;
		_11813_max_mant_digits=16LL;
		_10385_i+=2LL;
		_11913_exp_char='p';
		_10374_hex=true;
	};
	jule::Bool _12713_sawdot = false;;
	jule::Bool _12813_sawdigits = false;;
	jule::I64 _12913_nd = 0LL;;
	jule::I64 _13013_nd_mant = 0LL;;
	jule::I64 _13113_dp = 0LL;;
	for (; (_10385_i < _10315_s.len()); (_10385_i)++) {
		{
			jule::U8 _13313_c = _10315_s[_10385_i];;
			{
				
				if ((_13313_c == '_')) {
					_case_begin_1cb45dc44:;
					{
						goto _iter_next_1cb45d1b6;
					}
				}
				else if ((_13313_c == '.')) {
					_case_begin_1cb45dcbb:;
					{
						if (_12713_sawdot) {
							goto _julec_label_loop_end;
						};
						_12713_sawdot=true;
						_13113_dp=_12913_nd;
						goto _iter_next_1cb45d1b6;
					}
				}
				else if ((('0' <= _13313_c) && (_13313_c <= '9'))) {
					_case_begin_1cb45dd43:;
					{
						_12813_sawdigits=true;
						if (((_13313_c == '0') && (_12913_nd == 0LL))) {
							(_13113_dp)--;
							goto _iter_next_1cb45d1b6;
						};
						(_12913_nd)++;
						if ((_13013_nd_mant < _11813_max_mant_digits)) {
							_10325_mantissa*=_11713_base;
							_10325_mantissa+=static_cast<jule::U64>((_13313_c - '0'));
							(_13013_nd_mant)++;
						} else if ((_13313_c != '0')) {
							_10361_trunc=true;
						};
						goto _iter_next_1cb45d1b6;
					}
				}
				else if ((((_11713_base == 16LLU) && ('a' <= _1e56a966d_lower(_13313_c))) && (_1e56a966d_lower(_13313_c) <= 'f'))) {
					_case_begin_1cb45ddba:;
					{
						_12813_sawdigits=true;
						(_12913_nd)++;
						if ((_13013_nd_mant < _11813_max_mant_digits)) {
							_10325_mantissa*=16LLU;
							_10325_mantissa+=static_cast<jule::U64>(((_1e56a966d_lower(_13313_c) - 'a') + 10LLU));
							(_13013_nd_mant)++;
						} else {
							_10361_trunc=true;
						};
						goto _iter_next_1cb45d1b6;
					}
				}
				_match_end_1cb45db56:;
			};
			goto _iter_end_1cb45d1b6;
		}
	_iter_next_1cb45d1b6:;
	}
	_iter_end_1cb45d1b6:;;
	_julec_label_loop_end:;
	if ((!(_12813_sawdigits))) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
	};
	if ((!(_12713_sawdot))) {
		_13113_dp=_12913_nd;
	};
	if ((_11713_base == 16LLU)) {
		_13113_dp*=4LL;
		_13013_nd_mant*=4LL;
	};
	if (((_10385_i < _10315_s.len()) && (_1e56a966d_lower(_10315_s[_10385_i]) == _11913_exp_char))) {
		(_10385_i)++;
		if ((_10385_i >= _10315_s.len())) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
		};
		jule::I64 _19617_esign = 1LL;;
		if ((_10315_s[_10385_i] == '+')) {
			(_10385_i)++;
		} else if ((_10315_s[_10385_i] == '-')) {
			(_10385_i)++;
			_19617_esign=-1LL;
		};
		if ((((_10385_i >= _10315_s.len()) || (_10315_s[_10385_i] < '0')) || (_10315_s[_10385_i] > '9'))) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
		};
		jule::I64 _20617_e = 0LL;;
		for (; ((_10385_i < _10315_s.len()) && ((('0' <= _10315_s[_10385_i]) && (_10315_s[_10385_i] <= '9')) || (_10315_s[_10385_i] == '_'))); (_10385_i)++) {
			{
				if ((_10315_s[_10385_i] == '_')) {
					goto _iter_next_1cb4685de;
				};
				if ((_20617_e < 10000LL)) {
					_20617_e=static_cast<jule::I64>((((_20617_e * 10LL) + static_cast<jule::I64>(_10315_s[_10385_i])) - '0'));
				};
			}
		_iter_next_1cb4685de:;
		}
		_iter_end_1cb4685de:;;
		_13113_dp+=(_20617_e * _19617_esign);
	} else if ((_11713_base == 16LLU)) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
	};
	if ((_10325_mantissa != 0LLU)) {
		_10340_exp=static_cast<jule::I64>((_13113_dp - _13013_nd_mant));
	};
	_10393_ok=true;
	return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
}



inline std::tuple<jule::F64,jule::Bool> _1e5c2c54d_atof64exact(jule::U64 _48116_mantissa, jule::I64 _48135_exp, jule::Bool _48145_neg) {
	jule::F64 _48158_f = jule::F64();
	jule::Bool _48166_ok = jule::Bool();
	if (((_48116_mantissa >> _1e4780ea4_F64_INFO._field_mantbits) != 0LLU)) {
		return std::make_tuple(_48158_f,_48166_ok);
	};
	_48158_f=static_cast<jule::F64>(static_cast<jule::F64>(_48116_mantissa));
	if (_48145_neg) {
		_48158_f=static_cast<jule::F64>((-(_48158_f)));
	};
	{
		
		if ((_48135_exp == 0LL)) {
			_case_begin_1cb4736d7:;
			{
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if (((_48135_exp > 0LL) && (_48135_exp <= 37LL))) {
			_case_begin_1cb47374d:;
			{
				if ((_48135_exp > 22LL)) {
					_48158_f*=_1e56c3049_F64_POW10[(_48135_exp - 22LL)];
					_48135_exp=22LL;
				};
				if (((_48158_f > 1000000000000000LL) || (_48158_f < -1000000000000000LL))) {
					return std::make_tuple(_48158_f,_48166_ok);
				};
				_48158_f = static_cast<jule::F64>((_48158_f * _1e56c3049_F64_POW10[_48135_exp]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if (((_48135_exp < 0LL) && (_48135_exp >= -22LL))) {
			_case_begin_1cb4737b4:;
			{
				_48158_f = static_cast<jule::F64>(jule::div(_48158_f,_1e56c3049_F64_POW10[(-(_48135_exp))]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		_match_end_1cb4735a5:;
	};
	return std::make_tuple(_48158_f,_48166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1e5c2c680_atof32exact(jule::U64 _51516_mantissa, jule::I64 _51535_exp, jule::Bool _51549_neg) {
	jule::F32 _51562_f = jule::F32();
	jule::Bool _51570_ok = jule::Bool();
	if (((_51516_mantissa >> _1e4774085_F32_INFO._field_mantbits) != 0LLU)) {
		return std::make_tuple(_51562_f,_51570_ok);
	};
	_51562_f=static_cast<jule::F32>(static_cast<jule::F32>(_51516_mantissa));
	if (_51549_neg) {
		_51562_f=static_cast<jule::F32>((-(_51562_f)));
	};
	{
		
		if ((_51535_exp == 0LL)) {
			_case_begin_1cb478522:;
			{
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if (((_51535_exp > 0LL) && (_51535_exp <= 17LL))) {
			_case_begin_1cb478588:;
			{
				if ((_51535_exp > 10LL)) {
					_51562_f*=_1e56dd5c5_F32_POW10[(_51535_exp - 10LL)];
					_51535_exp=10LL;
				};
				if (((_51562_f > 10000000LL) || (_51562_f < -10000000LL))) {
					return std::make_tuple(_51562_f,_51570_ok);
				};
				_51562_f = static_cast<jule::F32>((_51562_f * _1e56dd5c5_F32_POW10[_51535_exp]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if (((_51535_exp < 0LL) && (_51535_exp >= -10LL))) {
			_case_begin_1cb4785ee:;
			{
				_51562_f = static_cast<jule::F32>(jule::div(_51562_f,_1e56dd5c5_F32_POW10[(-(_51535_exp))]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		_match_end_1cb4783e0:;
	};
	return std::make_tuple(_51562_f,_51570_ok);
}



inline std::tuple<jule::F64,jule::I64> _1e5c2c7b2_atof_hex(jule::Str _55113_s, _1e5aa9e25_FloatInfo& _55122_flt, jule::U64 _55142_mantissa, jule::I64 _55161_exp, jule::Bool _55171_neg, jule::Bool _55182_trunc) {
	jule::I64 _5529_max_exp = ((static_cast<jule::I64>((1LL << _55122_flt._field_expbits)) + _55122_flt._field_bias) - 2LL);;
	jule::I64 _5539_min_exp = (_55122_flt._field_bias + 1LL);;
	_55161_exp+=static_cast<jule::I64>(_55122_flt._field_mantbits);
	while (((_55142_mantissa != 0LLU) && ((_55142_mantissa >> (_55122_flt._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55142_mantissa<<=1LLU;
			(_55161_exp)--;
		}
	_iter_next_1cb47dc0e:;
	}
	_iter_end_1cb47dc0e:;;
	if (_55182_trunc) {
		_55142_mantissa|=1LLU;
	};
	while (((_55142_mantissa >> ((1LLU + _55122_flt._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55142_mantissa=static_cast<jule::U64>(((_55142_mantissa >> 1LLU) | (_55142_mantissa & 1LLU)));
			(_55161_exp)++;
		}
	_iter_next_1cb480161:;
	}
	_iter_end_1cb480161:;;
	while (((_55142_mantissa > 1LLU) && (_55161_exp < (_5539_min_exp - 2LL)))) {
		{
			_55142_mantissa=static_cast<jule::U64>(((_55142_mantissa >> 1LLU) | (_55142_mantissa & 1LLU)));
			(_55161_exp)++;
		}
	_iter_next_1cb480c77:;
	}
	_iter_end_1cb480c77:;;
	jule::U64 _58313_round = (_55142_mantissa & 3LLU);;
	_55142_mantissa>>=2LLU;
	_58313_round|=(_55142_mantissa & 1LLU);
	_55161_exp+=2LL;
	if ((_58313_round == 3LLU)) {
		(_55142_mantissa)++;
		if ((_55142_mantissa == (1LLU << (1LLU + _55122_flt._field_mantbits)))) {
			_55142_mantissa>>=1LLU;
			(_55161_exp)++;
		};
	};
	if (((_55142_mantissa >> _55122_flt._field_mantbits) == 0LLU)) {
		_55161_exp=_55122_flt._field_bias;
	};
	jule::I64 _59813_err = static_cast<jule::I64>(0LL);;
	if ((_55161_exp > _5529_max_exp)) {
		_55142_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << _55122_flt._field_mantbits)));
		_55161_exp=static_cast<jule::I64>((_5529_max_exp + 1LL));
		_59813_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _60513_bits = (_55142_mantissa & ((1LLU << _55122_flt._field_mantbits) - 1LLU));;
	_60513_bits|=(static_cast<jule::U64>(((_55161_exp - _55122_flt._field_bias) & static_cast<jule::I64>(((1LL << _55122_flt._field_expbits) - 1LL)))) << _55122_flt._field_mantbits);
	if (_55171_neg) {
		_60513_bits|=((1LLU << _55122_flt._field_mantbits) << _55122_flt._field_expbits);
	};
	if ((_55122_flt == _1e4774085_F32_INFO)) {
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_1e48cd2aa_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_60513_bits))))),_59813_err);
	};
	return std::make_tuple(static_cast<jule::F64>(_1e48cd83d_f64_from_bits(_60513_bits)),_59813_err);
}



inline std::tuple<jule::F32,jule::I64,jule::I64> _1e5c2c8e4_atof32(jule::Str _61611_s) {
	jule::F32 _61621_f = jule::F32();
	jule::I64 _61629_n = jule::I64();
	jule::I64 _61637_err = 0LL;
	{
		jule::F64 _61814_val;;
		jule::I64 _61819__n;;
		jule::Bool _61823_ok;;
		std::tie(_61814_val,_61819__n,_61823_ok) = _1e5c2be43_special(_61611_s);
		if (_61823_ok) {
			_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_61814_val));
			_61629_n = _61819__n;
			_61637_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_61621_f,_61629_n,_61637_err);
		};
	};
	jule::U64 _62410_mantissa;;
	jule::I64 _62420_exp;;
	jule::Bool _62425_neg;;
	jule::Bool _62430_trunc;;
	jule::Bool _62437_hex;;
	jule::I64 _62442__n;;
	jule::Bool _62450_ok;;
	std::tie(_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc,_62437_hex,_62442__n,_62450_ok) = _1e5c2c075_read_float(_61611_s);
	_61629_n=_62442__n;
	if ((!(_62450_ok))) {
		_61621_f = 0LL;
		_61637_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	if (_62437_hex) {
		jule::F64 _63117_ff = 0LL;;
		std::tie(_63117_ff,_61637_err) = _1e5c2c7b2_atof_hex(_61611_s.slice(0LL,_61629_n),_1e4774085_F32_INFO,_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc);
		_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_63117_ff));
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	{
		if ((!(_62430_trunc))) {
			std::tie(_61621_f,_62450_ok) = _1e5c2c680_atof32exact(_62410_mantissa,_62420_exp,_62425_neg);
			if (_62450_ok) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
		};
		std::tie(_61621_f,_62450_ok) = _1e5ae888c_eisel_lemire32(_62410_mantissa,_62420_exp,_62425_neg);
		if (_62450_ok) {
			if ((!(_62430_trunc))) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
			jule::F32 _65321_f_up = 0LL;;
			std::tie(_65321_f_up,_62450_ok) = _1e5ae888c_eisel_lemire32(static_cast<jule::U64>((_62410_mantissa + 1LLU)),_62420_exp,_62425_neg);
			if ((_62450_ok && (_61621_f == _65321_f_up))) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
		};
	};
	_1e5c2e5d8_Decimal _66213_d = _1e5c2e5d8_Decimal{};;
	if ((!(_1e5c2c1a7_set(&_66213_d, _61611_s.slice(0LL,_61629_n))))) {
		_61621_f = 0LL;
		_61637_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	jule::U64 _66610_b;;
	jule::Bool _66613_ovf;;
	std::tie(_66610_b,_66613_ovf) = _1e5c2c2d9_float_bits(&_66213_d, _1e4774085_F32_INFO);
	_61621_f=static_cast<jule::F32>(_1e48cd2aa_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_66610_b))));
	if (_66613_ovf) {
		_61637_err=static_cast<jule::I64>(1LL);
	};
	return std::make_tuple(_61621_f,_61629_n,_61637_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _1e5c2ca26_atof64(jule::Str _67411_s) {
	jule::F64 _67421_f = jule::F64();
	jule::I64 _67429_n = jule::I64();
	jule::I64 _67437_err = 0LL;
	{
		jule::F64 _67614_val;;
		jule::I64 _67619__n;;
		jule::Bool _67623_ok;;
		std::tie(_67614_val,_67619__n,_67623_ok) = _1e5c2be43_special(_67411_s);
		if (_67623_ok) {
			_67421_f = _67614_val;
			_67429_n = _67619__n;
			_67437_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_67421_f,_67429_n,_67437_err);
		};
	};
	jule::U64 _68210_mantissa;;
	jule::I64 _68220_exp;;
	jule::Bool _68225_neg;;
	jule::Bool _68230_trunc;;
	jule::Bool _68237_hex;;
	jule::I64 _68242__n;;
	jule::Bool _68250_ok;;
	std::tie(_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc,_68237_hex,_68242__n,_68250_ok) = _1e5c2c075_read_float(_67411_s);
	_67429_n=_68242__n;
	if ((!(_68250_ok))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	if (_68237_hex) {
		std::tie(_67421_f,_67437_err) = _1e5c2c7b2_atof_hex(_67411_s.slice(0LL,_67429_n),_1e4780ea4_F64_INFO,_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	{
		if ((!(_68230_trunc))) {
			std::tie(_67421_f,_68250_ok) = _1e5c2c54d_atof64exact(_68210_mantissa,_68220_exp,_68225_neg);
			if (_68250_ok) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
		};
		std::tie(_67421_f,_68250_ok) = _1e565795c_eisel_lemire64(_68210_mantissa,_68220_exp,_68225_neg);
		if (_68250_ok) {
			if ((!(_68230_trunc))) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
			jule::F64 _71021_f_up = 0LL;;
			std::tie(_71021_f_up,_68250_ok) = _1e565795c_eisel_lemire64(static_cast<jule::U64>((_68210_mantissa + 1LLU)),_68220_exp,_68225_neg);
			if ((_68250_ok && (_67421_f == _71021_f_up))) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
		};
	};
	_1e5c2e5d8_Decimal _71913_d = _1e5c2e5d8_Decimal{};;
	if ((!(_1e5c2c1a7_set(&_71913_d, _67411_s.slice(0LL,_67429_n))))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	jule::U64 _72310_b;;
	jule::Bool _72313_ovf;;
	std::tie(_72310_b,_72313_ovf) = _1e5c2c2d9_float_bits(&_71913_d, _1e4780ea4_F64_INFO);
	_67421_f=static_cast<jule::F64>(_1e48cd83d_f64_from_bits(_72310_b));
	if (_72313_ovf) {
		_67437_err=static_cast<jule::I64>(1LL);
	};
	return std::make_tuple(_67421_f,_67429_n,_67437_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _1e5c2cb58_parse_float_prefix(jule::Str _73123_s, jule::I64 _73131_bit_size) {
	if ((_73131_bit_size == 32LL)) {
		jule::F32 _73314_f;;
		jule::I64 _73317_n;;
		jule::I64 _73320_err;;
		std::tie(_73314_f,_73317_n,_73320_err) = _1e5c2c8e4_atof32(_73123_s);
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_73314_f)),_73317_n,_73320_err);
	};
	jule::F64 _73710_f;;
	jule::I64 _73713_n;;
	jule::I64 _73716_err;;
	std::tie(_73710_f,_73713_n,_73716_err) = _1e5c2ca26_atof64(_73123_s);
	return std::make_tuple(_73710_f,_73713_n,_73716_err);
}



inline jule::Exceptional<jule::F64> _1e5c2cc8a_parse_float(jule::Str _76520_s, jule::I64 _76528_bit_size) {
	jule::F64 _76610_f;;
	jule::I64 _76613_n;;
	jule::I64 _76616_err;;
	std::tie(_76610_f,_76613_n,_76616_err) = _1e5c2cb58_parse_float_prefix(_76520_s,_76528_bit_size);
	if (((_76613_n != _76520_s.len()) && ((_76616_err == static_cast<jule::I64>(0LL)) || (_76616_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(static_cast<jule::I64>(2LL));
	};
	if ((_76616_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(_76616_err);
	};
	return jule::Exceptional<jule::F64>(jule::Any(),_76610_f);
}



inline void _1e5c2d076_ryu_ftoa_fixed32(_1e5665e21_DecimalSlice& _4926_d, jule::U32 _4947_mant, jule::I64 _4958_exp, jule::I64 _4968_prec) {
	if ((_4968_prec < 0LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with negative prec", 42) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4968_prec > 9LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with prec > 9", 37) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4947_mant == 0LLU)) {
		std::tie(_4926_d._field_nd,_4926_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	jule::I64 _6213_e2 = _4958_exp;;
	jule::I64 _639_b = _1e5be533a_len32(_4947_mant);;
	if ((_639_b < 25LL)) {
		_4947_mant<<=static_cast<jule::U64>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I64>(_639_b) - 25LL);
	};
	jule::I64 _749_q = (((-(_1e5c2d54e_mul_by_log2_log10(static_cast<jule::I64>((_6213_e2 + 24LL))))) + _4968_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di;;
	jule::I64 _8118_dexp2;;
	jule::Bool _8129_d0;;
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _1e5c2dc69_mult64bit_pow10(_4947_mant,_6213_e2,_749_q);
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bit_pow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _1e5c2decd_divisible_by_pow5(static_cast<jule::U64>(static_cast<jule::U64>(_4947_mant)),static_cast<jule::I64>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U64 _949_extra = static_cast<jule::U64>((-(_8118_dexp2)));;
	jule::U32 _959_extra_mask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple(static_cast<jule::U32>((_8114_di >> _949_extra)),static_cast<jule::U32>((_8114_di & _959_extra_mask)));
	jule::Bool _9913_round_up = false;;
	if (_7913_exact) {
		_9913_round_up=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_round_up=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_1e5c2d2da_format_decimal(_4926_d,static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)),(!(_8129_d0)),_9913_round_up,_4968_prec);
	_4926_d._field_dp-=_749_q;
}



inline void _1e5c2d1a8_ryu_ftoa_fixed64(_1e5665e21_DecimalSlice& _12126_d, jule::U64 _12147_mant, jule::I64 _12158_exp, jule::I64 _12168_prec) {
	if ((_12168_prec > 18LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed64 called with prec > 18", 38) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12147_mant == 0LLU)) {
		std::tie(_12126_d._field_nd,_12126_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	jule::I64 _13113_e2 = _12158_exp;;
	jule::I64 _1329_b = _1e5be55d2_len64(_12147_mant);;
	if ((_1329_b < 55LL)) {
		_12147_mant=static_cast<jule::U64>((_12147_mant << static_cast<jule::U64>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I64>(_1329_b) - 55LL);
	};
	jule::I64 _1469_q = (((-(_1e5c2d54e_mul_by_log2_log10(static_cast<jule::I64>((_13113_e2 + 54LL))))) + _12168_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di;;
	jule::I64 _15318_dexp2;;
	jule::Bool _15329_d0;;
	std::tie(_15314_di,_15318_dexp2,_15329_d0) = _1e5c2dd9b_mult128bit_pow10(_12147_mant,_13113_e2,_1469_q);
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _1e5c2decd_divisible_by_pow5(_12147_mant,static_cast<jule::I64>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U64 _1669_extra = static_cast<jule::U64>((-(_15318_dexp2)));;
	jule::U64 _1679_extra_mask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	std::tie(_15314_di,_16913_dfrac) = std::make_tuple(static_cast<jule::U64>((_15314_di >> _1669_extra)),static_cast<jule::U64>((_15314_di & _1679_extra_mask)));
	jule::Bool _17113_round_up = false;;
	if (_15113_exact) {
		_17113_round_up=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_round_up=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_1e5c2d2da_format_decimal(_12126_d,_15314_di,(!(_15329_d0)),_17113_round_up,_12168_prec);
	_12126_d._field_dp-=_1469_q;
}



inline void _1e5c2d2da_format_decimal(_1e5665e21_DecimalSlice& _20024_d, jule::U64 _20045_m, jule::Bool _20057_trunc, jule::Bool _20074_round_up, jule::I64 _20090_prec) {
	jule::U64 _2019_max = _1e5a330ce_U64_POW10[_20090_prec];;
	jule::I64 _20213_trimmed = 0LL;;
	while ((_20045_m >= _2019_max)) {
		{
			jule::U64 _20414_a = (_20045_m / 10LLU);;
			jule::U64 _20417_b = (_20045_m % 10LL);;
			std::tie(_20414_a,_20417_b) = std::make_tuple((_20045_m / 10LLU),(_20045_m % 10LL));
			_20045_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20074_round_up=true;
			} else if ((_20417_b < 5LLU)) {
				_20074_round_up=false;
			} else {
				_20074_round_up=(_20057_trunc || ((_20045_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20057_trunc=true;
			};
		}
	_iter_next_1cb4b8809:;
	}
	_iter_end_1cb4b8809:;;
	if (_20074_round_up) {
		(_20045_m)++;
	};
	if ((_20045_m >= _2019_max)) {
		_20045_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U64 _22913_n = static_cast<jule::U64>(_20090_prec);;
	_20024_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20090_prec));
	jule::U64 _23113_v = _20045_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU))),static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL))));
			} else {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>((_23113_v / 100LLU)),static_cast<jule::U64>((_23113_v % 100LL)));
			};
			_22913_n-=2LLU;
			_20024_d._field_d[static_cast<jule::I64>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 1LLU))]);
			_20024_d._field_d[static_cast<jule::I64>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_1cb4bb213:;
	}
	_iter_end_1cb4bb213:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		_20024_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23113_v) + 1LLU))]);
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		_20024_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((2LL * _23113_v))]);
	};
	while ((_20024_d._field_d[(_20024_d._field_nd - 1LL)] == '0')) {
		{
			(_20024_d._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_1cb4c2703:;
	}
	_iter_end_1cb4c2703:;;
	_20024_d._field_dp=static_cast<jule::I64>((_20024_d._field_nd + _20213_trimmed));
}



inline void _1e5c2d41c_ryu_ftoa_shortest(_1e5665e21_DecimalSlice& _26127_d, jule::U64 _26148_mant, jule::I64 _26159_exp, _1e5aa9e25_FloatInfo& _26170_flt) {
	if ((_26148_mant == 0LLU)) {
		std::tie(_26127_d._field_nd,_26127_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	if (((_26159_exp <= 0LL) && (_1e5bdedc3_trailing_zeros64(_26148_mant) >= (-(_26159_exp))))) {
		_26148_mant>>=static_cast<jule::U64>((-(_26159_exp)));
		_1e5c2da05_ryu_digits(_26127_d,_26148_mant,_26148_mant,_26148_mant,true,false);
		return;;
	};
	jule::U64 _27310_ml;;
	jule::U64 _27314_mc;;
	jule::U64 _27318_mu;;
	jule::I64 _27326_e2;;
	std::tie(_27310_ml,_27314_mc,_27318_mu,_27326_e2) = _1e5c2d7b3_compute_bounds(_26148_mant,_26159_exp,_26170_flt);
	if ((_27326_e2 == 0LL)) {
		_1e5c2da05_ryu_digits(_26127_d,_27310_ml,_27314_mc,_27318_mu,true,false);
		return;;
	};
	jule::I64 _2799_q = (_1e5c2d54e_mul_by_log2_log10(static_cast<jule::I64>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if ((_26170_flt == _1e4774085_F32_INFO)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		std::tie(_29017_dl32,std::ignore,_28613_dl0) = _1e5c2dc69_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)),_27326_e2,_2799_q);
		std::tie(_29117_dc32,std::ignore,_28713_dc0) = _1e5c2dc69_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)),_27326_e2,_2799_q);
		std::tie(_29217_du32,_27326_e2,_28813_du0) = _1e5c2dc69_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)),_27326_e2,_2799_q);
		std::tie(_28313_dl,_28413_dc,_28513_du) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32)),static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32)),static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32)));
	} else {
		std::tie(_28313_dl,std::ignore,_28613_dl0) = _1e5c2dd9b_mult128bit_pow10(_27310_ml,_27326_e2,_2799_q);
		std::tie(_28413_dc,std::ignore,_28713_dc0) = _1e5c2dd9b_mult128bit_pow10(_27314_mc,_27326_e2,_2799_q);
		std::tie(_28513_du,_27326_e2,_28813_du0) = _1e5c2dd9b_mult128bit_pow10(_27318_mu,_27326_e2,_2799_q);
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		std::tie(_28613_dl0,_28713_dc0,_28813_du0) = std::make_tuple(false,false,false);
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_1e5c2decd_divisible_by_pow5(_27310_ml,static_cast<jule::I64>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_1e5c2decd_divisible_by_pow5(_27314_mc,static_cast<jule::I64>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_1e5c2decd_divisible_by_pow5(_27318_mu,static_cast<jule::I64>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U64 _3259_extra = static_cast<jule::U64>((-(_27326_e2)));;
	jule::U64 _3269_extra_mask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	std::tie(_28313_dl,_32813_fracl) = std::make_tuple(static_cast<jule::U64>((_28313_dl >> _3259_extra)),static_cast<jule::U64>((_28313_dl & _3269_extra_mask)));
	jule::U64 _33013_fracc = 0LLU;;
	std::tie(_28413_dc,_33013_fracc) = std::make_tuple(static_cast<jule::U64>((_28413_dc >> _3259_extra)),static_cast<jule::U64>((_28413_dc & _3269_extra_mask)));
	jule::U64 _33213_fracu = 0LLU;;
	std::tie(_28513_du,_33213_fracu) = std::make_tuple(static_cast<jule::U64>((_28513_du >> _3259_extra)),static_cast<jule::U64>((_28513_du & _3269_extra_mask)));
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26148_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26148_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_1e5c2da05_ryu_digits(_26127_d,_28313_dl,_28413_dc,_28513_du,_3669_c0,_34713_cup);
	_26127_d._field_dp-=_2799_q;
}



inline jule::I64 _1e5c2d54e_mul_by_log2_log10(jule::I64 _37722_x) {
	return static_cast<jule::I64>(((_37722_x * 78913LL) >> 18LL));
}



inline jule::I64 _1e5c2d681_mul_by_log10_log2(jule::I64 _38722_x) {
	return static_cast<jule::I64>(((_38722_x * 108853LL) >> 15LL));
}



inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _1e5c2d7b3_compute_bounds(jule::U64 _39519_mant, jule::I64 _39530_exp, _1e5aa9e25_FloatInfo& _3966_flt) {
	jule::U64 _39624_lower = jule::U64();
	jule::U64 _39636_central = jule::U64();
	jule::U64 _39650_upper = jule::U64();
	jule::I64 _39662_e2 = jule::I64();
	if (((_39519_mant != (1LLU << _3966_flt._field_mantbits)) || (_39530_exp == ((_3966_flt._field_bias + 1LL) - static_cast<jule::I64>(_3966_flt._field_mantbits))))) {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>(((2LLU * _39519_mant) - 1LLU)),static_cast<jule::U64>((2LLU * _39519_mant)),static_cast<jule::U64>(((2LLU * _39519_mant) + 1LLU)));
		_39662_e2=static_cast<jule::I64>((_39530_exp - 1LL));
	} else {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>(((4LLU * _39519_mant) - 1LLU)),static_cast<jule::U64>((4LLU * _39519_mant)),static_cast<jule::U64>(((4LLU * _39519_mant) + 2LLU)));
		_39662_e2=static_cast<jule::I64>((_39530_exp - 2LL));
	};
	return std::make_tuple(_39624_lower,_39636_central,_39650_upper,_39662_e2);
}



inline void _1e5c2da05_ryu_digits(_1e5665e21_DecimalSlice& _40920_d, jule::U64 _40937_lower, jule::U64 _40949_central, jule::U64 _40963_upper, jule::Bool _40979_c0, jule::Bool _40993_cup) {
	jule::U32 _41014_lhi;;
	jule::U32 _41019_llo;;
	std::tie(_41014_lhi,_41019_llo) = _1e5c2e110_divmod1e9(_40937_lower);
	jule::U32 _41110_chi;;
	jule::U32 _41115_clo;;
	std::tie(_41110_chi,_41115_clo) = _1e5c2e110_divmod1e9(_40949_central);
	jule::U32 _41210_uhi;;
	jule::U32 _41215_ulo;;
	std::tie(_41210_uhi,_41215_ulo) = _1e5c2e110_divmod1e9(_40963_upper);
	if ((_41210_uhi == 0LLU)) {
		_1e5c2db37_ryu_digits32(_40920_d,_41019_llo,_41115_clo,_41215_ulo,_40979_c0,_40993_cup,8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40979_c0=(_40979_c0 && (_41115_clo == 0LLU));
		_40993_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40993_cup));
		_1e5c2db37_ryu_digits32(_40920_d,_41014_lhi,_41110_chi,_41210_uhi,_40979_c0,_40993_cup,8LL);
		_40920_d._field_dp+=9LL;
	} else {
		_40920_d._field_nd=0LL;
		jule::U64 _42817_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = (_42917_v / 10LLU);;
				jule::U32 _43122_v2 = (_42917_v % 10LL);;
				std::tie(_43118_v1,_43122_v2) = std::make_tuple((_42917_v / 10LLU),(_42917_v % 10LL));
				_42917_v=_43118_v1;
				(_42817_n)--;
				_40920_d._field_d[static_cast<jule::I64>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_1cb4e3c1e:;
		}
		_iter_end_1cb4e3c1e:;;
		_40920_d._field_d=_40920_d._field_d.slice(static_cast<jule::I64>(_42817_n));
		_40920_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42817_n)));
		_1e5c2db37_ryu_digits32(_40920_d,_41019_llo,_41115_clo,_41215_ulo,_40979_c0,_40993_cup,static_cast<jule::I64>((_40920_d._field_nd + 8LL)));
	};
	while (((_40920_d._field_nd > 0LL) && (_40920_d._field_d[(_40920_d._field_nd - 1LL)] == '0'))) {
		{
			(_40920_d._field_nd)--;
		}
	_iter_next_1cb4e4527:;
	}
	_iter_end_1cb4e4527:;;
	while (((_40920_d._field_nd > 0LL) && (_40920_d._field_d[0LL] == '0'))) {
		{
			(_40920_d._field_nd)--;
			(_40920_d._field_dp)--;
			_40920_d._field_d=_40920_d._field_d.slice(1LL);
		}
	_iter_next_1cb4e7838:;
	}
	_iter_end_1cb4e7838:;;
}



inline void _1e5c2db37_ryu_digits32(_1e5665e21_DecimalSlice& _45422_d, jule::U32 _45443_lower, jule::U32 _45459_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		_45422_d._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _46013_trimmed = 0LL;;
	jule::I64 _46313_c_next_digit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45443_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = (_45459_central / 10LLU);;
			jule::U32 _47125_cdigit = (_45459_central % 10LL);;
			std::tie(_47118_c,_47125_cdigit) = std::make_tuple((_45459_central / 10LLU),(_45459_central % 10LL));
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_1cb4ea781;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_c_next_digit == 0LL));
			_46313_c_next_digit=static_cast<jule::I64>(static_cast<jule::I64>(_47125_cdigit));
			std::tie(_45443_lower,_45459_central,_4559_upper) = std::make_tuple(_47013_l,_47118_c,_47213_u);
		}
	_iter_next_1cb4ea781:;
	}
	_iter_end_1cb4ea781:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_c_next_digit > 5LL) || ((_46313_c_next_digit == 5LL) && (!(_45525_c0)))) || (((_46313_c_next_digit == 5LL) && _45525_c0) && ((_45459_central & 1LLU) == 1LLU)));
	};
	if (((_45459_central < _4559_upper) && _45539_cup)) {
		(_45459_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45459_central;;
	jule::I64 _51013_n = _45554_endindex;;
	while ((_51013_n > _45422_d._field_nd)) {
		{
			jule::U32 _51214_v1 = (_50913_v / 100LLU);;
			jule::U32 _51218_v2 = (_50913_v % 100LL);;
			std::tie(_51214_v1,_51218_v2) = std::make_tuple((_50913_v / 100LLU),(_50913_v % 100LL));
			_45422_d._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 1LLU))]);
			_45422_d._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_1cb500687:;
	}
	_iter_end_1cb500687:;;
	if ((_51013_n == _45422_d._field_nd)) {
		_45422_d._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	_45422_d._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	_45422_d._field_dp=static_cast<jule::I64>((_45422_d._field_nd + _46013_trimmed));
}



inline std::tuple<jule::U32,jule::I64,jule::Bool> _1e5c2dc69_mult64bit_pow10(jule::U32 _53420_m, jule::I64 _53432_e2, jule::I64 _53441_q) {
	jule::U32 _53451_resM = jule::U32();
	jule::I64 _53462_resE = jule::I64();
	jule::Bool _53473_exact = jule::Bool();
	if ((_53441_q == 0LL)) {
		_53451_resM = static_cast<jule::U32>((_53420_m << 6LLU));
		_53462_resE = static_cast<jule::I64>((_53432_e2 - 6LL));
		_53473_exact = true;
		return std::make_tuple(_53451_resM,_53462_resE,_53473_exact);
	};
	if (((_53441_q < -348LL) || (347LL < _53441_q))) {
		jule::panic(jule::Str("mult64bit_pow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _1e5601010_DETAILED_POWS_OF_TEN[(_53441_q - -348LL)][1LL];;
	if ((_53441_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi;;
	jule::U64 _54814_lo;;
	std::tie(_54810_hi,_54814_lo) = _1e5be7925_mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53420_m)),_54313_pow);
	_53432_e2+=((_1e5c2d681_mul_by_log10_log2(_53441_q) - 63LL) + 57LL);
	_53451_resM = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	_53462_resE = _53432_e2;
	_53473_exact = ((_54814_lo << 7LLU) == 0LLU);
	return std::make_tuple(_53451_resM,_53462_resE,_53473_exact);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool> _1e5c2dd9b_mult128bit_pow10(jule::U64 _56221_m, jule::I64 _56233_e2, jule::I64 _56242_q) {
	jule::U64 _56252_resM = jule::U64();
	jule::I64 _56263_resE = jule::I64();
	jule::Bool _56274_exact = jule::Bool();
	if ((_56242_q == 0LL)) {
		_56252_resM = static_cast<jule::U64>((_56221_m << 8LLU));
		_56263_resE = static_cast<jule::I64>((_56233_e2 - 8LL));
		_56274_exact = true;
		return std::make_tuple(_56252_resM,_56263_resE,_56274_exact);
	};
	if (((_56242_q < -348LL) || (347LL < _56242_q))) {
		jule::panic(jule::Str("mult128bit_pow10: power of 10 is out of range", 45) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _1e5601010_DETAILED_POWS_OF_TEN[(_56242_q - -348LL)];;
	if ((_56242_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56233_e2+=((_1e5c2d681_mul_by_log10_log2(_56242_q) - 127LL) + 119LL);
	jule::U64 _57910_l1;;
	jule::U64 _57914_l0;;
	std::tie(_57910_l1,_57914_l0) = _1e5be7925_mul64(_56221_m,_57113_pow[0LL]);
	jule::U64 _58014_h1;;
	jule::U64 _58018_h0;;
	std::tie(_58014_h1,_58018_h0) = _1e5be7925_mul64(_56221_m,_57113_pow[1LL]);
	jule::U64 _58110_mid;;
	jule::U64 _58115_carry;;
	std::tie(_58110_mid,_58115_carry) = _1e5be6292_add64(_57910_l1,_58018_h0,0LLU);
	_58014_h1+=_58115_carry;
	_56252_resM = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	_56263_resE = _56233_e2;
	_56274_exact = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return std::make_tuple(_56252_resM,_56263_resE,_56274_exact);
}



inline jule::Bool _1e5c2decd_divisible_by_pow5(jule::U64 _58626_m, jule::I64 _58634_k) {
	if ((_58626_m == 0LLU)) {
		return true;
	};
	jule::I64 _59013_i = 0LL;;
	for (; (_59013_i < _58634_k); (_59013_i)++) {
		{
			if (((_58626_m % 5LL) != 0LLU)) {
				return false;
			};
			_58626_m/=5LLU;
		}
	_iter_next_1cb50cdc0:;
	}
	_iter_end_1cb50cdc0:;;
	return true;
}



inline std::tuple<jule::U32,jule::U32> _1e5c2e110_divmod1e9(jule::U64 _60214_x) {
	{
		return std::make_tuple(static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL))),static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL))));
	};
}



inline void _1e5c30144_trim(_1e5c2e5d8_Decimal& _33314_a) {
	while (((_33314_a._field_nd > 0LL) && (_33314_a._field_d[(_33314_a._field_nd - 1LL)] == '0'))) {
		{
			(_33314_a._field_nd)--;
		}
	_iter_next_1cb5143b0:;
	}
	_iter_end_1cb5143b0:;;
	if ((_33314_a._field_nd == 0LL)) {
		_33314_a._field_dp=0LL;
	};
}



inline void _1e5c30276_right_shift(_1e5c2e5d8_Decimal& _34321_a, jule::U64 _34333_k) {
	jule::I64 _34413_r = 0LL;;
	jule::I64 _34513_w = 0LL;;
	jule::U64 _34813_n = 0LLU;;
	for (; ((_34813_n >> _34333_k) == 0LLU); (_34413_r)++) {
		{
			if ((_34413_r >= _34321_a._field_nd)) {
				if ((_34813_n == 0LLU)) {
					_34321_a._field_nd=0LL;
					return;;
				};
				while (((_34813_n >> _34333_k) == 0LLU)) {
					{
						_34813_n=static_cast<jule::U64>((_34813_n * 10LLU));
						(_34413_r)++;
					}
				_iter_next_1cb517ced:;
				}
				_iter_end_1cb517ced:;;
				goto _iter_end_1cb515aa9;
			};
			jule::U64 _36213_c = static_cast<jule::U64>(_34321_a._field_d[_34413_r]);;
			_34813_n=static_cast<jule::U64>((((_34813_n * 10LLU) + _36213_c) - '0'));
		}
	_iter_next_1cb515aa9:;
	}
	_iter_end_1cb515aa9:;;
	_34321_a._field_dp-=(_34413_r - 1LL);
	jule::U64 _3679_mask = static_cast<jule::U64>((static_cast<jule::U64>((1LL << _34333_k)) - 1LLU));;
	for (; (_34413_r < _34321_a._field_nd); (_34413_r)++) {
		{
			jule::U64 _37113_c = static_cast<jule::U64>(_34321_a._field_d[_34413_r]);;
			jule::U64 _37213_dig = (_34813_n >> _34333_k);;
			_34813_n&=_3679_mask;
			_34321_a._field_d[_34513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_37213_dig + '0')));
			(_34513_w)++;
			_34813_n=static_cast<jule::U64>((((_34813_n * 10LLU) + _37113_c) - '0'));
		}
	_iter_next_1cb519b57:;
	}
	_iter_end_1cb519b57:;;
	while ((_34813_n > 0LLU)) {
		{
			jule::U64 _38113_dig = (_34813_n >> _34333_k);;
			_34813_n&=_3679_mask;
			if ((_34513_w < 800LL)) {
				_34321_a._field_d[_34513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_38113_dig + '0')));
				(_34513_w)++;
			} else if ((_38113_dig > 0LLU)) {
				_34321_a._field_trunc=true;
			};
			_34813_n=static_cast<jule::U64>((_34813_n * 10LLU));
		}
	_iter_next_1cb51be12:;
	}
	_iter_end_1cb51be12:;;
	_34321_a._field_nd=_34513_w;
	_1e5c30144_trim(_34321_a);
}



inline jule::Bool _1e5c303a8_prefix_is_less_than(jule::Array<jule::U8,800> _39724_b, jule::I64 _39738_end, jule::Str _39748_s) {
	jule::I64 _39813_i = 0LL;;
	for (; (_39813_i < _39748_s.len()); (_39813_i)++) {
		{
			if ((_39813_i >= _39738_end)) {
				return true;
			};
			if ((_39724_b[_39813_i] != _39748_s[_39813_i])) {
				return (_39724_b[_39813_i] < _39748_s[_39813_i]);
			};
		}
	_iter_next_1cb51e5eb:;
	}
	_iter_end_1cb51e5eb:;;
	return false;
}



inline void _1e5c304da_left_shift(_1e5c2e5d8_Decimal& _41120_a, jule::U64 _41132_k) {
	jule::I64 _41213_delta = _1e5b35764_LEFTCHEATS[static_cast<jule::I64>(_41132_k)]._field_delta;;
	if (_1e5c303a8_prefix_is_less_than(_41120_a._field_d,_41120_a._field_nd,_1e5b35764_LEFTCHEATS[static_cast<jule::I64>(_41132_k)]._field_cutoff)) {
		(_41213_delta)--;
	};
	jule::I64 _41713_r = _41120_a._field_nd;;
	jule::I64 _41813_w = (_41120_a._field_nd + _41213_delta);;
	jule::U64 _42113_n = 0LLU;;
	(_41713_r)--;
	for (; (_41713_r >= 0LL); (_41713_r)--) {
		{
			_42113_n+=((static_cast<jule::U64>(_41120_a._field_d[_41713_r]) - '0') << _41132_k);
			jule::U64 _42513_quo = (_42113_n / 10LLU);;
			jule::U64 _42613_rem = (_42113_n - (10LLU * _42513_quo));;
			(_41813_w)--;
			if ((_41813_w < 800LL)) {
				_41120_a._field_d[_41813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_42613_rem + '0')));
			} else if ((_42613_rem != 0LLU)) {
				_41120_a._field_trunc=true;
			};
			_42113_n=_42513_quo;
		}
	_iter_next_1cb523006:;
	}
	_iter_end_1cb523006:;;
	while ((_42113_n > 0LLU)) {
		{
			jule::U64 _43813_quo = (_42113_n / 10LLU);;
			jule::U64 _43913_rem = (_42113_n - (10LLU * _43813_quo));;
			(_41813_w)--;
			if ((_41813_w < 800LL)) {
				_41120_a._field_d[_41813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_43913_rem + '0')));
			} else if ((_43913_rem != 0LLU)) {
				_41120_a._field_trunc=true;
			};
			_42113_n=_43813_quo;
		}
	_iter_next_1cb52319e:;
	}
	_iter_end_1cb52319e:;;
	_41120_a._field_nd+=_41213_delta;
	if ((_41120_a._field_nd >= 800LL)) {
		_41120_a._field_nd=800LL;
	};
	_41120_a._field_dp+=_41213_delta;
	_1e5c30144_trim(_41120_a);
}



inline jule::Bool _1e5c3061c_should_round_up(_1e5c2e5d8_Decimal& _45821_a, jule::I64 _45833_nd) {
	if (((_45833_nd < 0LL) || (_45833_nd >= _45821_a._field_nd))) {
		return false;
	};
	if (((_45821_a._field_d[_45833_nd] == '5') && ((_45833_nd + 1LL) == _45821_a._field_nd))) {
		if (_45821_a._field_trunc) {
			return true;
		};
		return ((_45833_nd > 0LL) && (((_45821_a._field_d[(_45833_nd - 1LL)] - '0') & 1LL) != 0LLU));
	};
	return (_45821_a._field_d[_45833_nd] >= '5');
}



inline jule::Str _1e5c30908_fmt_uint(jule::U64 _6017_i, jule::I64 _6025_base) {
	if (((true && (_6017_i < 100LLU)) && (_6025_base == 10LL))) {
		return _1e5c30c9e_small(static_cast<jule::I64>(static_cast<jule::I64>(_6017_i)));
	};
	jule::Str _6413_s;;
	std::tie(std::ignore,_6413_s) = _1e5c31013_fmt_bits(nullptr,_6017_i,_6025_base,false,false);
	return _6413_s;
}



inline jule::Str _1e5c30a3a_fmt_int(jule::I64 _7116_i, jule::I64 _7124_base) {
	if ((((true && (0LL <= _7116_i)) && (_7116_i < 100LL)) && (_7124_base == 10LL))) {
		return _1e5c30c9e_small(static_cast<jule::I64>(static_cast<jule::I64>(_7116_i)));
	};
	jule::Str _7513_s;;
	std::tie(std::ignore,_7513_s) = _1e5c31013_fmt_bits(nullptr,static_cast<jule::U64>(static_cast<jule::U64>(_7116_i)),_7124_base,(_7116_i < 0LL),false);
	return _7513_s;
}



inline jule::Str _1e5c30b6c_itoa(jule::I64 _8013_i) {
	return _1e5c30a3a_fmt_int(static_cast<jule::I64>(static_cast<jule::I64>(_8013_i)),10LL);
}



inline jule::Str _1e5c30c9e_small(jule::I64 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i,(_8510_i + 1LL));
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU),((_8510_i << 1LLU) + 2LL));
}



inline jule::Bool _1e5c30dd1_is_power_of_two(jule::I64 _9220_x) {
	return ((_9220_x & (_9220_x - 1LL)) == 0LL);
}



inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1e5c31013_fmt_bits(jule::Slice<jule::U8> _10117_dst, jule::U64 _10134_u, jule::I64 _10142_base, jule::Bool _10153_neg, jule::Bool _10164_append_) {
	jule::Slice<jule::U8> _10181_d = jule::Slice<jule::U8>();
	jule::Str _10192_s = jule::Str();
	if (((_10142_base < 2LL) || (_10142_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL);;
	jule::I64 _10813_i = _10713_a.len();;
	if (_10153_neg) {
		_10134_u=static_cast<jule::U64>((-(_10134_u)));
	};
	if ((_10142_base == 10LL)) {
		;
		jule::U64 _14917_us = static_cast<jule::U64>(_10134_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U64 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 0LLU))]);
			}
		_iter_next_1cb535865:;
		}
		_iter_end_1cb535865:;;
		jule::U64 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_15913_is)]);
		};
	} else if (_1e5c30dd1_is_power_of_two(_10142_base)) {
		jule::U64 _17413_shift = (static_cast<jule::U64>(_1e5bde2ac_trailing_zeros(static_cast<jule::U64>(static_cast<jule::U64>(_10142_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10142_base);;
		jule::U64 _17613_m = (static_cast<jule::U64>(_10142_base) - 1LLU);;
		while ((_10134_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>((static_cast<jule::U64>(_10134_u) & _17613_m))]);
				_10134_u>>=_17413_shift;
			}
		_iter_next_1cb53d285:;
		}
		_iter_end_1cb53d285:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10134_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10142_base);;
		while ((_10134_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10134_u,_18713_b);;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>((_10134_u - (_19317_q * _18713_b))))]);
				_10134_u=_19317_q;
			}
		_iter_next_1cb540584:;
		}
		_iter_end_1cb540584:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10134_u))]);
	};
	if (_10153_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10164_append_) {
		_10181_d=jule::append(_10117_dst,_10713_a.slice(_10813_i));
		return std::make_tuple(_10181_d,_10192_s);
	};
	_10192_s=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return std::make_tuple(_10181_d,_10192_s);
}



inline void _1c9694d39_lshift_unsig(_1c968bb88_Const& _58722_c, _1c968bb88_Const& _58733_x) {
	jule::U64 _5889_l = _1c968dd88_as_u64(&_58722_c);;
	jule::U64 _5899_r = _1c968dd88_as_u64(&_58733_x);;
	_1c968e5e7_set_u64(&_58722_c, static_cast<jule::U64>((_5889_l << _5899_r)));
}



inline void _1c9695136_rshift_unsig(_1c968bb88_Const& _59322_c, _1c968bb88_Const& _59333_x) {
	jule::U64 _5949_l = _1c968dd88_as_u64(&_59322_c);;
	jule::U64 _5959_r = _1c968dd88_as_u64(&_59333_x);;
	_1c968e5e7_set_u64(&_59322_c, static_cast<jule::U64>((_5949_l >> _5959_r)));
}



inline jule::Str _1e4677eab_real_kind_of(jule::Str _4521_kind) {
	{
		auto &_match_expr{ _4521_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1cb5bec62:;
			{
				return _1e4677582_SYS_INT;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1cb5becc8:;
			{
				return _1e46777d5_SYS_UINT;
			}
		}
		else {
			_case_begin_1cb5bebeb:;
			{
				return _4521_kind;
			}
		}
		_match_end_1cb5beb96:;
	};
}



inline jule::I64 _1e4678253_bitsize_of(jule::Str _5919_k) {
	{
		auto &_match_expr{ _5919_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1cb5c0d1d:;
			{
				return 8LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_1cb5c0b20:;
			{
				return 16LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_1cb5c0b86:;
			{
				return 32LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_1cb5c0bec:;
			{
				return 64LL;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3)) {
			_case_begin_1cb5c0999:;
			{
				return _1e46773c8_BIT_SIZE;
			}
		}
		else {
			_case_begin_1cb5b9d06:;
			{
				return -1LL;
			}
		}
		_match_end_1cb5b9e16:;
	};
}



inline jule::Str _1e467853e_int_from_bits(jule::I64 _8622_bits) {
	{
		auto &_match_expr{ _8622_bits };
		
		if (_match_expr == 8LL) {
			_case_begin_1cb5c2ccb:;
			{
				return jule::Str("i8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1cb5c1e73:;
			{
				return jule::Str("i16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1cb5c1ed9:;
			{
				return jule::Str("i32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1cb5c2050:;
			{
				return jule::Str("i64", 3);
			}
		}
		else {
			_case_begin_1cb5c24a1:;
			{
				return jule::Str();
			}
		}
		_match_end_1cb5c258e:;
	};
}



inline jule::Str _1e46787d6_uint_from_bits(jule::I64 _10423_bits) {
	{
		auto &_match_expr{ _10423_bits };
		
		if (_match_expr == 8LL) {
			_case_begin_1cb5c423e:;
			{
				return jule::Str("u8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1cb5c2dca:;
			{
				return jule::Str("u16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1cb5c2e41:;
			{
				return jule::Str("u32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1cb5c2ea7:;
			{
				return jule::Str("u64", 3);
			}
		}
		else {
			_case_begin_1cb5c3a57:;
			{
				return jule::Str();
			}
		}
		_match_end_1cb5c39be:;
	};
}



inline jule::Str _1e4678a7d_float_from_bits(jule::I64 _12224_bits) {
	{
		auto &_match_expr{ _12224_bits };
		
		if (_match_expr == 32LL) {
			_case_begin_1cb5c5680:;
			{
				return jule::Str("f32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1cb5c433d:;
			{
				return jule::Str("f64", 3);
			}
		}
		else {
			_case_begin_1cb5c4ae1:;
			{
				return jule::Str();
			}
		}
		_match_end_1cb5c4e32:;
	};
}



inline jule::Bool _1e46795d9_check_bit_float(jule::Str _15024_val, jule::I64 _15034_bit) {
	({
		auto except = _1e5c2cc8a_parse_float(_15024_val,_15034_bit);
		(except.ok()) ? (except.result) : ({{
			return false;
		} jule::F64();});
	});
	return true;
}



inline jule::I64 _1e4679881_bitsize_of_float(jule::F64 _16025_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16025_x) && (_16025_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1cb5ca9e8:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1cb5c9b5c:;
			{
				return 64LL;
			}
		}
		_match_end_1cb5ca6da:;
	};
}



inline jule::I64 _1e4679b28_bitsize_of_int(jule::I64 _17623_x) {
	{
		
		if (((-128LL <= _17623_x) && (_17623_x <= 127LL))) {
			_case_begin_1cb5cb884:;
			{
				return 8LL;
			}
		}
		else if (((-32768LL <= _17623_x) && (_17623_x <= 32767LL))) {
			_case_begin_1cb5cb8ea:;
			{
				return 16LL;
			}
		}
		else if (((-2147483648LL <= _17623_x) && (_17623_x <= 2147483647LL))) {
			_case_begin_1cb5cb9a5:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1cb5cb653:;
			{
				return 64LL;
			}
		}
		_match_end_1cb5cb3de:;
	};
}



inline jule::I64 _1e4679dc0_bitsize_of_uint(jule::U64 _19624_x) {
	{
		
		if ((_19624_x <= 255LLU)) {
			_case_begin_1cb5cd853:;
			{
				return 8LL;
			}
		}
		else if ((_19624_x <= 65535LLU)) {
			_case_begin_1cb5cd8b9:;
			{
				return 16LL;
			}
		}
		else if ((_19624_x <= 4294967295LLU)) {
			_case_begin_1cb5cd688:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1cb5cd545:;
			{
				return 64LL;
			}
		}
		_match_end_1cb5cd479:;
	};
}



inline void _1e467a035_update_target(void) {
	{
		{
			auto &_match_expr{ _20cab8449_ARCH };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_1cb5ce8a9:;
				{
					_1e46773c8_BIT_SIZE=64LL;
					_1e4677582_SYS_INT=jule::Str("i64", 3);
					_1e46777d5_SYS_UINT=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_1cb5ce920:;
				{
					_1e46773c8_BIT_SIZE=32LL;
					_1e4677582_SYS_INT=jule::Str("i32", 3);
					_1e46777d5_SYS_UINT=jule::Str("u32", 3);
				}
			}
			_match_end_1cb5ceba6:;
		};
	};
}



inline void _1e467a19a_init(void) {
	_1e467a035_update_target();
}



inline jule::F64 _1e467d5cc_min(jule::Str _6116_k) {
	_6116_k=_1e4677eab_real_kind_of(_6116_k);
	{
		auto &_match_expr{ _6116_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1cb5d2549:;
			{
				return -128LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1cb5d235c:;
			{
				return -32768LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1cb5d23c3:;
			{
				return -2147483648LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1cb5d21d6:;
			{
				return jule::MIN_I64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1cb5d224c:;
			{
				return -340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1cb5d22b3:;
			{
				return jule::MIN_F64;
			}
		}
		else {
			_case_begin_1cb5cecd8:;
			{
				return 0LL;
			}
		}
		_match_end_1cb5cee4d:;
	};
}



inline jule::F64 _1e467d8b8_max(jule::Str _8316_k) {
	_8316_k=_1e4677eab_real_kind_of(_8316_k);
	{
		auto &_match_expr{ _8316_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1cb5d4172:;
			{
				return 127LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1cb5d41d8:;
			{
				return 32767LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1cb5d3eeb:;
			{
				return 2147483647LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1cb5d4062:;
			{
				return jule::MAX_I64;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1cb5d40c8:;
			{
				return 255LL;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1cb5d3b88:;
			{
				return 65535LL;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1cb5d3bee:;
			{
				return 4294967295LL;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1cb5d3c65:;
			{
				return jule::MAX_U64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1cb5d3ccb:;
			{
				return 340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1cb5d43e7:;
			{
				return jule::MAX_F64;
			}
		}
		else {
			_case_begin_1cb5d1eb6:;
			{
				return 0LL;
			}
		}
		_match_end_1cb5d3b33:;
	};
}



inline jule::Bool _1e467dd2a_is_i8_compatible(jule::Str _629_k) {
	return (_629_k == jule::Str("i8", 2));
}



inline jule::Bool _1e467e116_is_i16_compatible(jule::Str _1130_k) {
	return ((_1130_k == jule::Str("i8", 2)) || (_1130_k == jule::Str("i16", 3)));
}



inline jule::Bool _1e467e3ad_is_i32_compatible(jule::Str _1730_k) {
	return ((((_1730_k == jule::Str("i8", 2)) || (_1730_k == jule::Str("i16", 3))) || (_1730_k == jule::Str("i32", 3))) || (_1730_k == jule::Str("u8", 2)));
}



inline jule::Bool _1e467e699_is_i64_compatible(jule::Str _2530_k) {
	return ((((_2530_k == jule::Str("i8", 2)) || (_2530_k == jule::Str("i16", 3))) || (_2530_k == jule::Str("i32", 3))) || (_2530_k == jule::Str("i64", 3)));
}



inline jule::Bool _1e467e941_is_u8_compatible(jule::Str _3329_k) {
	return (_3329_k == jule::Str("u8", 2));
}



inline jule::Bool _1e467ebd8_is_u16_compatible(jule::Str _3830_k) {
	return ((_3830_k == jule::Str("u8", 2)) || (_3830_k == jule::Str("u16", 3)));
}



inline jule::Bool _1e467ee80_is_u32_compatible(jule::Str _4330_k) {
	return (((_4330_k == jule::Str("u8", 2)) || (_4330_k == jule::Str("u16", 3))) || (_4330_k == jule::Str("u32", 3)));
}



inline jule::Bool _1e46802b0_is_u64_compatible(jule::Str _5030_k) {
	return ((((_5030_k == jule::Str("u8", 2)) || (_5030_k == jule::Str("u16", 3))) || (_5030_k == jule::Str("u32", 3))) || (_5030_k == jule::Str("u64", 3)));
}



inline jule::Bool _1e4680557_is_f32_compatible(jule::Str _5830_k) {
	return (_5830_k == jule::Str("f32", 3));
}



inline jule::Bool _1e46807ee_is_f64_compatible(jule::Str _6330_k) {
	return (_6330_k == jule::Str("f64", 3));
}



inline jule::Bool _1e4680b40_types_are_compatible(jule::Str _7033_k1, jule::Str _7042_k2) {
	{
		auto &_match_expr{ _7033_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1cb5dc983:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1cb5dc9e9:;
			{
				return (_7042_k2 == jule::Str("int", 3));
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1cb5dcaa4:;
			{
				return (_7042_k2 == jule::Str("uintptr", 7));
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1cb5dcb1a:;
			{
				return (_7042_k2 == jule::Str("uint", 4));
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1cb5dc576:;
			{
				return _1e467dd2a_is_i8_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1cb5dc5dc:;
			{
				return _1e467e116_is_i16_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1cb5dc653:;
			{
				return _1e467e3ad_is_i32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1cb5dc6b9:;
			{
				return _1e467e699_is_i64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1cb5dcbb4:;
			{
				return _1e467e941_is_u8_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1cb5dcc3b:;
			{
				return _1e467ebd8_is_u16_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1cb5dccb3:;
			{
				return _1e467ee80_is_u32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1cb5dcd3a:;
			{
				return _1e46802b0_is_u64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1cb5dcdb2:;
			{
				return _1e4680557_is_f32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1cb5dce39:;
			{
				return _1e46807ee_is_f64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1cb5dceb1:;
			{
				return (_7042_k2 == jule::Str("bool", 4));
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1cb5dd038:;
			{
				return (_7042_k2 == jule::Str("str", 3));
			}
		}
		else {
			_case_begin_1cb5d677e:;
			{
				return false;
			}
		}
		_match_end_1cb5b1649:;
	};
}



inline jule::Bool _1e4680dd7_is_i16_greater(jule::Str _11027_k) {
	return (_11027_k == jule::Str("i8", 2));
}



inline jule::Bool _1e468117e_is_i32_greater(jule::Str _11527_k) {
	return ((_11527_k == jule::Str("i8", 2)) || (_11527_k == jule::Str("i16", 3)));
}



inline jule::Bool _1e4681426_is_i64_greater(jule::Str _12027_k) {
	return (((_12027_k == jule::Str("i8", 2)) || (_12027_k == jule::Str("i16", 3))) || (_12027_k == jule::Str("i32", 3)));
}



inline jule::Bool _1e46816bd_is_u16_greater(jule::Str _12727_k) {
	return (_12727_k == jule::Str("u8", 2));
}



inline jule::Bool _1e4681a86_is_u32_greater(jule::Str _13227_k) {
	return ((_13227_k == jule::Str("u8", 2)) || (_13227_k == jule::Str("u16", 3)));
}



inline jule::Bool _1e4681d2d_is_u64_greater(jule::Str _13827_k) {
	return (((_13827_k == jule::Str("u8", 2)) || (_13827_k == jule::Str("u16", 3))) || (_13827_k == jule::Str("u32", 3)));
}



inline jule::Bool _1e46820c5_is_f32_greater(jule::Str _14523_k) {
	return (_14523_k != jule::Str("f64", 3));
}



inline jule::Bool _1e468236c_is_f64_greater(jule::Str _15023_k) {
	return true;
}



inline jule::Bool _1e46826ad_is_greater(jule::Str _15523_k1, jule::Str _15532_k2) {
	{
		auto &_match_expr{ _15523_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1cb5e6a7a:;
			{
				return _1e46837d0_is_sig_int(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1cb5e6ae1:;
			{
				return _1e4683abb_is_unsig_int(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1cb5e67e4:;
			{
				return _1e4683abb_is_unsig_int(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1cb5e685a:;
			{
				return _1e4680dd7_is_i16_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1cb5e68c1:;
			{
				return _1e468117e_is_i32_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1cb5e6580:;
			{
				return _1e4681426_is_i64_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1cb5e65e6:;
			{
				return _1e46816bd_is_u16_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1cb5e666d:;
			{
				return _1e4681a86_is_u32_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1cb5e6b8a:;
			{
				return _1e4681d2d_is_u64_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1cb5e6c01:;
			{
				return _1e46820c5_is_f32_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1cb5e6c67:;
			{
				return _1e468236c_is_f64_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1cb5e6ccd:;
			{
				return true;
			}
		}
		else {
			_case_begin_1cb5e61ea:;
			{
				return false;
			}
		}
		_match_end_1cb5dd423:;
	};
}



inline jule::Bool _1e46837d0_is_sig_int(jule::Str _2723_k) {
	return (((((_2723_k == jule::Str("i8", 2)) || (_2723_k == jule::Str("i16", 3))) || (_2723_k == jule::Str("i32", 3))) || (_2723_k == jule::Str("i64", 3))) || (_2723_k == jule::Str("int", 3)));
}



inline jule::Bool _1e4683abb_is_unsig_int(jule::Str _3625_k) {
	return ((((((_3625_k == jule::Str("u8", 2)) || (_3625_k == jule::Str("u16", 3))) || (_3625_k == jule::Str("u32", 3))) || (_3625_k == jule::Str("u64", 3))) || (_3625_k == jule::Str("uint", 4))) || (_3625_k == jule::Str("uintptr", 7)));
}



inline jule::Bool _1e4683d63_is_int(jule::Str _4615_k) {
	return (_1e46837d0_is_sig_int(_4615_k) || _1e4683abb_is_unsig_int(_4615_k));
}



inline jule::Bool _1e468414e_is_float(jule::Str _5117_k) {
	return ((_5117_k == jule::Str("f32", 3)) || (_5117_k == jule::Str("f64", 3)));
}



inline jule::Bool _1e46843e6_is_num(jule::Str _5615_k) {
	return (_1e4683d63_is_int(_5615_k) || _1e468414e_is_float(_5615_k));
}



inline jule::Bool _1c9733acb_is_ascii(jule::I32 _1017_r) {
	;
	return (_1017_r <= 127LL);
}



inline jule::I32 _1c973569e_to_rune(jule::Slice<jule::U8> _1816_bytes) {
	if ((_1816_bytes.len() == 0LL)) {
		return 0LL;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1816_bytes[0LL] == '\\') && (_1816_bytes.len() > 1LL))) {
		jule::I64 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_1c973631a_rune_from_esq_seq(_1816_bytes,_2517_i));
	} else {
		std::tie(_2313_r,std::ignore) = _225490666_decode_rune(_1816_bytes);
	};
	return _2313_r;
}



inline jule::Str _1c9735946_to_raw_str(jule::Slice<jule::U8> _3719_bytes) {
	return static_cast<jule::Str>(_3719_bytes);
}



inline jule::Str _1c9735c32_to_str(jule::Slice<jule::U8> _4215_bytes) {
	if ((_4215_bytes.len() == 0LL)) {
		return jule::Str();
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL,_4215_bytes.len());;
	jule::I64 _4813_i = 0LL;;
	while ((_4813_i < _4215_bytes.len())) {
		{
			jule::U8 _5013_b = _4215_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				_4713_s=jule::append(_4713_s,_1c973665b_str_esq_seq(_4215_bytes,_4813_i));
			} else {
				jule::I32 _5418_r;;
				jule::I64 _5421_size;;
				std::tie(_5418_r,_5421_size) = _225490666_decode_rune(_4215_bytes.slice(_4813_i));
				_4813_i+=_5421_size;
				_4713_s=_225491953_append_rune(_4713_s,_5418_r);
			};
		}
	_iter_next_1cb6053a2:;
	}
	_iter_end_1cb6053a2:;;
	return static_cast<jule::Str>(_4713_s);
}



inline std::tuple<jule::U8,jule::Bool> _1c9735ec9_try_btoa_common_esq(jule::Slice<jule::U8> _6224_bytes) {
	jule::U8 _6241_seq = jule::U8();
	jule::Bool _6252_ok = jule::Bool();
	if (((_6224_bytes.len() < 2LL) || (_6224_bytes[0LL] != '\\'))) {
		return std::make_tuple(_6241_seq,_6252_ok);
	};
	{
		auto &_match_expr{ _6224_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1cb608c02:;
			{
				_6241_seq='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1cb6097a2:;
			{
				_6241_seq='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1cb609818:;
			{
				_6241_seq='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1cb60987e:;
			{
				_6241_seq='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1cb609906:;
			{
				_6241_seq='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1cb60997d:;
			{
				_6241_seq='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1cb609a05:;
			{
				_6241_seq='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1cb609a7c:;
			{
				_6241_seq='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1cb609b04:;
			{
				_6241_seq='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1cb609b7b:;
			{
				_6241_seq='\v';
			}
		}
		_match_end_1cb60965e:;
	};
	_6252_ok=(_6241_seq != 0LLU);
	return std::make_tuple(_6241_seq,_6252_ok);
}



inline jule::I32 _1c973631a_rune_from_esq_seq(jule::Slice<jule::U8> _9422_bytes, jule::I64& _9442_i) {
	jule::U8 _9510_b;;
	jule::Bool _9513_ok;;
	std::tie(_9510_b,_9513_ok) = _1c9735ec9_try_btoa_common_esq(_9422_bytes.slice(_9442_i));
	(_9442_i)++;
	if (_9513_ok) {
		(_9442_i)++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9510_b));
	};
	{
		auto &_match_expr{ _9422_bytes[_9442_i] };
		
		if (_match_expr == 'u') {
			_case_begin_1cb610247:;
			{
				;
				jule::I32 _10513_r = static_cast<jule::I32>(({
					auto except = _1e47dca05_parse_uint(static_cast<jule::Str>(_9422_bytes.slice((_9442_i + 1LL),(_9442_i + 5LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:105:22"));
					(except.result);
				}));;
				_9442_i+=5LL;
				return _10513_r;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1cb60ee17:;
			{
				;
				jule::I32 _11013_r = static_cast<jule::I32>(({
					auto except = _1e47dca05_parse_uint(static_cast<jule::Str>(_9422_bytes.slice((_9442_i + 1LL),(_9442_i + 9LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:110:22"));
					(except.result);
				}));;
				_9442_i+=9LL;
				return _11013_r;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1cb60ee7d:;
			{
				;
				jule::Slice<jule::U8> _11513_seq = _9422_bytes.slice((_9442_i + 1LL),(_9442_i + 3LL));;
				_9442_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1e47dca05_parse_uint(static_cast<jule::Str>(_11513_seq),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:117:18"));
					(except.result);
				})));
			}
		}
		else {
			_case_begin_1cb60de9e:;
			{
				;
				jule::Slice<jule::U8> _12013_seq = _9422_bytes.slice(_9442_i,(_9442_i + 3LL));;
				_9442_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1e47dca05_parse_uint(static_cast<jule::Str>(_12013_seq.slice(1LL)),8LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:122:18"));
					(except.result);
				})));
			}
		}
		_match_end_1cb60dc90:;
	};
}



inline jule::Slice<jule::U8> _1c973665b_str_esq_seq(jule::Slice<jule::U8> _12616_bytes, jule::I64& _12636_i) {
	jule::I32 _1279_r = _1c973631a_rune_from_esq_seq(_12616_bytes,_12636_i);;
	if ((_1279_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1279_r))});
	};
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1279_r));
}



inline jule::I64 _1c98269d2_find_format_prefix(jule::Slice<jule::U8>& _924_bytes, jule::I64& _940_start) {
	jule::I64 _1013_i = _940_start;;
	while ((_1013_i < _924_bytes.len())) {
		{
			jule::I32 _1214_r;;
			jule::I64 _1217_size;;
			std::tie(_1214_r,_1217_size) = _225490666_decode_rune(_924_bytes.slice(_1013_i));
			if ((_1214_r == '{')) {
				return _1013_i;
			};
			_1013_i+=_1217_size;
		}
	_iter_next_1cb648318:;
	}
	_iter_end_1cb648318:;;
	return -1LL;
}



inline jule::Slice<jule::U8> _1c9823209_get_format_range(jule::I64& _2630_i, jule::Slice<jule::U8>& _2643_bytes) {
	jule::I64 _279_start = _2630_i;;
	jule::I64 _2813_braces = 0LL;;
	while ((_2630_i < _2643_bytes.len())) {
		{
			jule::I32 _3014_r;;
			jule::I64 _3017_size;;
			std::tie(_3014_r,_3017_size) = _225490666_decode_rune(_2643_bytes.slice(_2630_i));
			_2630_i+=_3017_size;
			{
				auto &_match_expr{ _3014_r };
				
				if (_match_expr == '{') {
					_case_begin_1cb64b9d1:;
					{
						(_2813_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1cb64ba47:;
					{
						(_2813_braces)--;
						if ((_2813_braces == 0LL)) {
							return _2643_bytes.slice(_279_start,_2630_i);
						};
					}
				}
				_match_end_1cb64b97b:;
			};
		}
	_iter_next_1cb64ab45:;
	}
	_iter_end_1cb64ab45:;;
	return nullptr;
}



inline jule::Slice<jule::U8> _1c97dca53_fmt_by_default(jule::Any& _4520_arg) {
	if ((_4520_arg == nullptr)) {
		return jule::Slice<jule::U8>::make({'<','n','i','l','>'});
	};
	{
		auto &_match_expr{ _4520_arg };
		
		if (_match_expr.type_is<jule::F32>()) {
			_case_begin_1cb64d9a0:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e4746de3_fmt_float(static_cast<jule::F64>(static_cast<jule::F64>(_4520_arg.operator jule::F32())),'g',-1LL,32LL));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1cb64d5e8:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e4746de3_fmt_float(static_cast<jule::F64>(_4520_arg.operator jule::F64()),'g',-1LL,64LL));
			}
		}
		else if (_match_expr.type_is<jule::I8>()) {
			_case_begin_1cb64bc9a:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e5c30a3a_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I16>()) {
			_case_begin_1cb64d2da:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e5c30a3a_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1cb64d351:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e5c30a3a_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1cb64d3c8:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e5c30a3a_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1cb64d43e:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e5c30908_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U16>()) {
			_case_begin_1cb64ab89:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e5c30908_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U32>()) {
			_case_begin_1cb64ac00:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e5c30908_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1cb64ac66:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e5c30908_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1cb64accc:;
			{
				return static_cast<jule::Slice<jule::U8>>(_4520_arg.operator jule::Str());
			}
		}
		else if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1cb64da49:;
			{
				if (_4520_arg.operator jule::Bool()) {
					return jule::Slice<jule::U8>::make({'t','r','u','e'});
				};
				return jule::Slice<jule::U8>::make({'f','a','l','s','e'});
			}
		}
		else {
			_case_begin_1cb64cc13:;
			{
				return static_cast<jule::Slice<jule::U8>>(jule::to_str(_4520_arg));
			}
		}
		_match_end_1cb64bd33:;
	};
}



inline jule::Slice<jule::U8> _1c980a642_apply_fmt_by_default(jule::I64& _8330_j, jule::Slice<jule::Any>& _8339_args) {
	jule::Any _849_arg = _8339_args[_8330_j];;
	(_8330_j)++;
	return _1c97dca53_fmt_by_default(_849_arg);
}



inline jule::Slice<jule::U8> _1c9802d10_apply_fmt(jule::Slice<jule::U8>& _9119_fmt, jule::I64& _9137_j, jule::Slice<jule::Any>& _9146_args) {
	if ((_9119_fmt.len() == 2LL)) {
		return _1c980a642_apply_fmt_by_default(_9137_j,_9146_args);
	};
	if (((_9119_fmt.len() == 4LL) && (_9119_fmt == jule::Slice<jule::U8>::make({'{','{','}','}'})))) {
		return jule::Slice<jule::U8>::make({'{','}'});
	};
	return _9119_fmt;
}



inline jule::Slice<jule::U8> _1c9802e42_format_bytes(jule::Str _10517_fmt, jule::Slice<jule::Any> _10527_args) {
	jule::Slice<jule::U8> _10613_fmt_bytes = static_cast<jule::Slice<jule::U8>>(_10517_fmt);;
	if ((_10527_args.len() == 0LL)) {
		return _10613_fmt_bytes;
	};
	jule::Slice<jule::U8> _11213_bytes = jule::Slice<jule::U8>::alloc(0LL,_10517_fmt.len());;
	jule::I64 _11413_j = 0LL;;
	jule::I64 _11513_last = 0LL;;
	jule::I64 _11613_i = _1c98269d2_find_format_prefix(_10613_fmt_bytes,_11513_last);;
	for (; (_11613_i != -1LL); _11613_i=static_cast<jule::I64>(_1c98269d2_find_format_prefix(_10613_fmt_bytes,_11613_i))) {
		{
			_11213_bytes=jule::append(_11213_bytes,_10613_fmt_bytes.slice(_11513_last,_11613_i));
			jule::Slice<jule::U8> _11917_format = _1c9823209_get_format_range(_11613_i,_10613_fmt_bytes);;
			if ((_11917_format == nullptr)) {
				goto _iter_next_1cb65a2b4;
			};
			_11213_bytes=jule::append(_11213_bytes,_1c9802d10_apply_fmt(_11917_format,_11413_j,_10527_args));
			if ((_11413_j >= _10527_args.len())) {
				_11213_bytes=jule::append(_11213_bytes,_10613_fmt_bytes.slice(_11613_i));
				_11513_last=static_cast<jule::I64>(_10613_fmt_bytes.len());
				goto _iter_end_1cb65a2b4;
			};
			_11513_last=_11613_i;
		}
	_iter_next_1cb65a2b4:;
	}
	_iter_end_1cb65a2b4:;;
	if ((_11513_last < _10613_fmt_bytes.len())) {
		_11213_bytes=jule::append(_11213_bytes,_10613_fmt_bytes.slice(_11513_last));
	};
	return _11213_bytes;
}



inline jule::Str _1c9802529_format(jule::Str _16515_fmt, jule::Slice<jule::Any> _16525_args) {
	return static_cast<jule::Str>(_1c9802e42_format_bytes(_16515_fmt,jule::Any(_16525_args)));
}



inline jule::Bool _1e4384a42_parameter_uses_generics(jule::Ptr<_1e4380389_Param>& _39329_p, jule::Slice<jule::Ptr<_1e436d50e_GenericDecl>>& _39341_generics) {
	if (_1e435279b_is_self(_39329_p.ptr())) {
		return false;
	};
	return _1c9789cca_kind_uses_generics(_39329_p.get()._field_kind.get()._field_decl.get()._field_kind,_39341_generics);
}



inline jule::Ptr<_1c977858d_TypeSymbol> _1e438744b_build_type(jule::Ptr<_1e436257a_TypeDecl> _8619_t) {
	if ((_8619_t == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1c977858d_TypeSymbol>(_1c977858d_TypeSymbol{._field_decl=_8619_t, });
}



inline jule::Ptr<_1c974bc48_Value> _1e4387737_build_expr(jule::Ptr<_1e43659e0_Expr> _9519_expr) {
	if ((_9519_expr == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1c974bc48_Value>(_1c974bc48_Value{._field_expr=_9519_expr, });
}



inline jule::Ptr<_1c97739b7_TypeAlias> _1e43879ce_build_type_alias(jule::Ptr<_1e4376506_TypeAliasDecl> _10425_decl) {
	return jule::new_ptr<_1c97739b7_TypeAlias>(_1c97739b7_TypeAlias{._field_scope=_10425_decl.get()._field_scope, ._field_public=_10425_decl.get()._field_public, ._field_cpp_linked=_10425_decl.get()._field_cpp_linked, ._field_token=_10425_decl.get()._field_token, ._field_ident=_10425_decl.get()._field_ident, ._field_kind=_1e438744b_build_type(_10425_decl.get()._field_kind), });
}



inline jule::Ptr<_1e43542c5_Field> _1e4387cba_build_field(jule::Ptr<_1e43794d7_FieldDecl> _11520_decl) {
	return jule::new_ptr<_1e43542c5_Field>(_1e43542c5_Field{._field_token=_11520_decl.get()._field_token, ._field_public=_11520_decl.get()._field_public, ._field_mutable=_11520_decl.get()._field_mutable, ._field_ident=_11520_decl.get()._field_ident, ._field_kind=_1e438744b_build_type(_11520_decl.get()._field_kind), ._field_default=_11520_decl.get()._field_default});
}



inline jule::Slice<jule::Ptr<_1e43542c5_Field>> _1e4388062_build_fields(jule::Slice<jule::Ptr<_1e43794d7_FieldDecl>>& _12622_decls) {
	jule::Slice<jule::Ptr<_1e43542c5_Field>> _12713_fields = jule::Slice<jule::Ptr<_1e43542c5_Field>>::alloc(0LL,_12622_decls.len());;
	{
		auto &expr = _12622_decls;
		auto it = expr.begin();
		_iter_begin_1cc53a902:;
		if (it != expr.end()) {
			jule::Ptr<_1e43794d7_FieldDecl> _12817_decl = *it;
			{
				_12713_fields = jule::alloc_for_append(_12713_fields,1);_12713_fields.__push(_1e4387cba_build_field(_12817_decl));;
			}
			_iter_next_1cc53a902:;
			++it;
			goto _iter_begin_1cc53a902;
		}
		_iter_end_1cc53a902:;
	};
	return _12713_fields;
}



inline jule::Ptr<_1e43360cb_Struct> _1e4388309_build_struct(jule::Ptr<_1e4379d45_StructDecl> _13421_decl) {
	return jule::new_ptr<_1e43360cb_Struct>(_1e43360cb_Struct{._field_token=_13421_decl.get()._field_token, ._field_ident=_13421_decl.get()._field_ident, ._field_fields=_1e4388062_build_fields(_13421_decl.get()._field_fields), ._field_public=_13421_decl.get()._field_public, ._field_cpp_linked=_13421_decl.get()._field_cpp_linked, ._field_directives=_13421_decl.get()._field_directives, ._field_generics=_13421_decl.get()._field_generics, });
}



inline jule::Ptr<_1e4380389_Param> _1e43885a1_build_param(jule::Ptr<_1e4370984_ParamDecl> _14620_decl) {
	return jule::new_ptr<_1e4380389_Param>(_1e4380389_Param{._field_token=_14620_decl.get()._field_token, ._field_mutable=_14620_decl.get()._field_mutable, ._field_variadic=_14620_decl.get()._field_variadic, ._field_reference=_14620_decl.get()._field_reference, ._field_kind=_1e438744b_build_type(_14620_decl.get()._field_kind), ._field_ident=_14620_decl.get()._field_ident});
}



inline jule::Slice<jule::Ptr<_1e4380389_Param>> _1e43888d1_build_params(jule::Slice<jule::Ptr<_1e4370984_ParamDecl>>& _15722_decls) {
	jule::Slice<jule::Ptr<_1e4380389_Param>> _15813_params = jule::Slice<jule::Ptr<_1e4380389_Param>>::alloc(0LL,_15722_decls.len());;
	{
		auto &expr = _15722_decls;
		auto it = expr.begin();
		_iter_begin_1cc53d592:;
		if (it != expr.end()) {
			jule::Ptr<_1e4370984_ParamDecl> _15917_decl = *it;
			{
				_15813_params = jule::alloc_for_append(_15813_params,1);_15813_params.__push(_1e43885a1_build_param(_15917_decl));;
			}
			_iter_next_1cc53d592:;
			++it;
			goto _iter_begin_1cc53d592;
		}
		_iter_end_1cc53d592:;
	};
	return _15813_params;
}



inline jule::Ptr<_1e438019c_RetType> _1e4388b78_build_ret_type(jule::Ptr<_1e436535d_RetTypeDecl> _16523_decl) {
	if (((_16523_decl.get()._field_idents == nullptr) && (_16523_decl.get()._field_kind == nullptr))) {
		return nullptr;
	};
	return jule::new_ptr<_1e438019c_RetType>(_1e438019c_RetType{._field_kind=_1e438744b_build_type(_16523_decl.get()._field_kind), ._field_idents=_16523_decl.get()._field_idents});
}



inline jule::Ptr<_1e4380576_Fn> _1e4388e20_build_fn(jule::Ptr<_1e4371ca4_FnDecl> _17517_decl) {
	return jule::new_ptr<_1e4380576_Fn>(_1e4380576_Fn{._field_token=_17517_decl.get()._field_token, ._field_global=_17517_decl.get()._field_global, ._field_unsafety=_17517_decl.get()._field_unsafety, ._field_public=_17517_decl.get()._field_public, ._field_cpp_linked=_17517_decl.get()._field_cpp_linked, ._field_statically=_17517_decl.get()._field_statically, ._field_exceptional=_17517_decl.get()._field_exceptional, ._field_ident=_17517_decl.get()._field_ident, ._field_directives=_17517_decl.get()._field_directives, ._field_scope=_17517_decl.get()._field_scope, ._field_generics=_17517_decl.get()._field_generics, ._field_result=_1e4388b78_build_ret_type(_17517_decl.get()._field_result), ._field_params=_1e43888d1_build_params(_17517_decl.get()._field_params), });
}



inline jule::Slice<jule::Ptr<_1e4380576_Fn>> _1e43891b7_build_methods(jule::Slice<jule::Ptr<_1e4371ca4_FnDecl>>& _19323_decls) {
	jule::Slice<jule::Ptr<_1e4380576_Fn>> _19413_methods = jule::Slice<jule::Ptr<_1e4380576_Fn>>::alloc(0LL,_19323_decls.len());;
	{
		auto &expr = _19323_decls;
		auto it = expr.begin();
		_iter_begin_1cc542189:;
		if (it != expr.end()) {
			jule::Ptr<_1e4371ca4_FnDecl> _19517_decl = *it;
			{
				_19413_methods = jule::alloc_for_append(_19413_methods,1);_19413_methods.__push(_1e4388e20_build_fn(_19517_decl));;
			}
			_iter_next_1cc542189:;
			++it;
			goto _iter_begin_1cc542189;
		}
		_iter_end_1cc542189:;
	};
	return _19413_methods;
}



inline jule::Ptr<_1e43d8d0a_Trait> _1e438945e_build_trait(jule::Ptr<_1e437a450_TraitDecl> _20120_decl) {
	return jule::new_ptr<_1e43d8d0a_Trait>(_1e43d8d0a_Trait{._field_token=_20120_decl.get()._field_token, ._field_ident=_20120_decl.get()._field_ident, ._field_public=_20120_decl.get()._field_public, ._field_methods=_1e43891b7_build_methods(_20120_decl.get()._field_methods), });
}



inline jule::Ptr<_1e4392797_EnumItem> _1e4389706_build_enum_item(jule::Ptr<_1e4377d65_EnumItemDecl> _21024_decl) {
	return jule::new_ptr<_1e4392797_EnumItem>(_1e4392797_EnumItem{._field_token=_21024_decl.get()._field_token, ._field_ident=_21024_decl.get()._field_ident, ._field_value=_1e4387737_build_expr(_21024_decl.get()._field_expr)});
}



inline jule::Slice<jule::Ptr<_1e4392797_EnumItem>> _1e438999d_build_enum_items(jule::Slice<jule::Ptr<_1e4377d65_EnumItemDecl>>& _21826_decls) {
	jule::Slice<jule::Ptr<_1e4392797_EnumItem>> _21913_items = jule::Slice<jule::Ptr<_1e4392797_EnumItem>>::alloc(0LL,_21826_decls.len());;
	{
		auto &expr = _21826_decls;
		auto it = expr.begin();
		_iter_begin_1cc5448c8:;
		if (it != expr.end()) {
			jule::Ptr<_1e4377d65_EnumItemDecl> _22017_decl = *it;
			{
				_21913_items = jule::alloc_for_append(_21913_items,1);_21913_items.__push(_1e4389706_build_enum_item(_22017_decl));;
			}
			_iter_next_1cc5448c8:;
			++it;
			goto _iter_begin_1cc5448c8;
		}
		_iter_end_1cc5448c8:;
	};
	return _21913_items;
}



inline jule::Ptr<_1e4456b58_Enum> _1e4389c45_build_enum(jule::Ptr<_1e43789ae_EnumDecl> _22619_decl) {
	return jule::new_ptr<_1e4456b58_Enum>(_1e4456b58_Enum{._field_token=_22619_decl.get()._field_token, ._field_public=_22619_decl.get()._field_public, ._field_ident=_22619_decl.get()._field_ident, ._field_kind=_1e438744b_build_type(_22619_decl.get()._field_kind), ._field_items=_1e438999d_build_enum_items(_22619_decl.get()._field_items)});
}



inline jule::Ptr<_1e46c6eb6_Var> _1e438a10d_build_var(jule::Ptr<_1e4372c83_VarDecl> _23618_decl) {
	return jule::new_ptr<_1e46c6eb6_Var>(_1e46c6eb6_Var{._field_token=_23618_decl.get()._field_token, ._field_ident=_23618_decl.get()._field_ident, ._field_cpp_linked=_23618_decl.get()._field_cpp_linked, ._field_constant=_23618_decl.get()._field_constant, ._field_mutable=_23618_decl.get()._field_mutable, ._field_public=_23618_decl.get()._field_public, ._field_statically=_23618_decl.get()._field_statically, ._field_reference=_23618_decl.get()._field_reference, ._field_kind=_1e438744b_build_type(_23618_decl.get()._field_kind), ._field_value=_1e4387737_build_expr(_23618_decl.get()._field_expr), ._field_refers=static__1e438601b_new(), ._field_directives=_23618_decl.get()._field_directives, });
}



inline jule::Slice<jule::Ptr<_1e46c6eb6_Var>> _1e438a3a5_build_vars(jule::Slice<jule::Ptr<_1e4372c83_VarDecl>> _25319_decls) {
	jule::Slice<jule::Ptr<_1e46c6eb6_Var>> _25413_vars = jule::Slice<jule::Ptr<_1e46c6eb6_Var>>::alloc(0LL,_25319_decls.len());;
	{
		auto &expr = _25319_decls;
		auto it = expr.begin();
		_iter_begin_1cc356d5b:;
		if (it != expr.end()) {
			jule::Ptr<_1e4372c83_VarDecl> _25517_decl = *it;
			{
				_25413_vars = jule::alloc_for_append(_25413_vars,1);_25413_vars.__push(_1e438a10d_build_var(_25517_decl));;
			}
			_iter_next_1cc356d5b:;
			++it;
			goto _iter_begin_1cc356d5b;
		}
		_iter_end_1cc356d5b:;
	};
	return _25413_vars;
}



inline jule::Ptr<_1e5c31431_Impl> _1e438a64c_build_impl(jule::Ptr<_1e437aa5a_Impl> _26119_decl) {
	return jule::new_ptr<_1e5c31431_Impl>(_1e5c31431_Impl{._field_base=_26119_decl.get()._field_base, ._field_dest=_26119_decl.get()._field_dest, ._field_methods=_1e43891b7_build_methods(_26119_decl.get()._field_methods), ._field_statics=_1e438a3a5_build_vars(_26119_decl.get()._field_statics)});
}



inline jule::Ptr<_1e468ce7c_ScopeChecker> _1e45d4bd7_new_scope_checker_base(jule::Ptr<_1e46ac452_Sema>& _4032_s, jule::Ptr<_1e4383018_FnIns> _4046_owner) {
	return jule::new_ptr<_1e468ce7c_ScopeChecker>(_1e468ce7c_ScopeChecker{._field_s=_4032_s, ._field_owner=_4046_owner, ._field_table=jule::new_ptr<_1c9745c42_SymbolTable>(), });
}



inline jule::Ptr<_1e468ce7c_ScopeChecker> _1e4675151_new_scope_checker(jule::Ptr<_1e46ac452_Sema>& _4827_s, jule::Ptr<_1e4383018_FnIns> _4841_owner) {
	jule::Ptr<_1e468ce7c_ScopeChecker> _4913_base = _1e45d4bd7_new_scope_checker_base(_4827_s,_4841_owner);;
	_4913_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1e468bbe5_ScopeLabel>>>(nullptr);
	_4913_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1e468c168_ScopeGoto>>>(nullptr);
	return _4913_base;
}



inline jule::Ptr<_1e468bbe5_ScopeLabel> _1e4635e14_find_label_parent(jule::Str _5822_ident, jule::Ptr<_1e468ce7c_ScopeChecker> _5838_scope) {
	jule::Ptr<_1e468bbe5_ScopeLabel> _5913_label = _1e4691634_find_label_scope(_5838_scope, _5822_ident);;
	while ((_5913_label == nullptr)) {
		{
			if (((_5838_scope.get()._field_parent == nullptr) || (_5838_scope.get()._field_owner != nullptr))) {
				return nullptr;
			};
			_5838_scope=_5838_scope.get()._field_parent;
			_5913_label=_1e4691634_find_label_scope(_5838_scope, _5822_ident);
		}
	_iter_next_1cc35a4d0:;
	}
	_iter_end_1cc35a4d0:;;
	return _5913_label;
}



inline jule::Bool _1e467688e_model_is_goto_scope(jule::Any& _7225_model, jule::Ptr<_1e46862c7_Scope>& _7238_sc) {
	{
		auto &_match_expr{ _7225_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e4354902_FnCallExprModel>>()) {
			_case_begin_1cc35be3d:;
			{
				jule::Ptr<_1e4354902_FnCallExprModel> _7513_fcem = _7225_model.operator jule::Ptr<_1e4354902_FnCallExprModel>();;
				if ((_7513_fcem.get()._field_except == _7238_sc)) {
					return true;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c974abc0_Data>>()) {
			_case_begin_1cc35beb5:;
			{
				jule::Ptr<_1c974abc0_Data> _8013_d = _7225_model.operator jule::Ptr<_1c974abc0_Data>();;
				return _1e467688e_model_is_goto_scope(_8013_d.get()._field_model,_7238_sc);
			}
		}
		_match_end_1cc35bdc7:;
	};
	return false;
}



inline jule::Bool _1e46847c0_stmt_is_goto_scope(jule::Any& _8624_stmt, jule::Ptr<_1e46862c7_Scope>& _8636_sc) {
	{
		auto &_match_expr{ _8624_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1e46862c7_Scope>>()) {
			_case_begin_1cc35e45c:;
			{
				return (_8624_stmt.operator jule::Ptr<_1e46862c7_Scope>() == _8636_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4687196_InfIter>>()) {
			_case_begin_1cc35d824:;
			{
				return (_8624_stmt.operator jule::Ptr<_1e4687196_InfIter>().get()._field_scope == _8636_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4687eee_RangeIter>>()) {
			_case_begin_1cc35de51:;
			{
				jule::Ptr<_1e4687eee_RangeIter> _9313_it = _8624_stmt.operator jule::Ptr<_1e4687eee_RangeIter>();;
				return ((_9313_it.get()._field_scope == _8636_sc) || _1e467688e_model_is_goto_scope(_9313_it.get()._field_expr.get()._field_model,_8636_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4687619_WhileIter>>()) {
			_case_begin_1cc35deb7:;
			{
				jule::Ptr<_1e4687619_WhileIter> _9613_it = _8624_stmt.operator jule::Ptr<_1e4687619_WhileIter>();;
				return (((_9613_it.get()._field_scope == _8636_sc) || _1e467688e_model_is_goto_scope(_9613_it.get()._field_expr,_8636_sc)) || _1e467688e_model_is_goto_scope(_9613_it.get()._field_next,_8636_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e468a023_Match>>()) {
			_case_begin_1cc35e02d:;
			{
				jule::Ptr<_1e468a023_Match> _10113_m = _8624_stmt.operator jule::Ptr<_1e468a023_Match>();;
				{
					auto &expr = _10113_m.get()._field_cases;
					auto it = expr.begin();
					_iter_begin_1cc362d89:;
					if (it != expr.end()) {
						jule::Ptr<_1e468a9d5_Case> &_10216_c = *it;
						{
							if ((_10216_c.get()._field_scope == _8636_sc)) {
								return true;
							};
							{
								auto &expr = _10216_c.get()._field_exprs;
								auto it = expr.begin();
								_iter_begin_1cc363ab0:;
								if (it != expr.end()) {
									jule::Ptr<_1c974abc0_Data> &_10620_expr = *it;
									{
										if (_1e467688e_model_is_goto_scope(_10620_expr.get()._field_model,_8636_sc)) {
											return true;
										};
									}
									_iter_next_1cc363ab0:;
									++it;
									goto _iter_begin_1cc363ab0;
								}
								_iter_end_1cc363ab0:;
							};
						}
						_iter_next_1cc362d89:;
						++it;
						goto _iter_begin_1cc362d89;
					}
					_iter_end_1cc362d89:;
				};
				return ((_10113_m.get()._field_default != nullptr) && (_10113_m.get()._field_default.get()._field_scope == _8636_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4686daa_Conditional>>()) {
			_case_begin_1cc35e1c6:;
			{
				jule::Ptr<_1e4686daa_Conditional> _11413_c = _8624_stmt.operator jule::Ptr<_1e4686daa_Conditional>();;
				{
					auto &expr = _11413_c.get()._field_elifs;
					auto it = expr.begin();
					_iter_begin_1cc365221:;
					if (it != expr.end()) {
						jule::Ptr<_1e46866c3_If> &_11516_elif = *it;
						{
							if (((_11516_elif.get()._field_scope == _8636_sc) || _1e467688e_model_is_goto_scope(_11516_elif.get()._field_expr,_8636_sc))) {
								return true;
							};
						}
						_iter_next_1cc365221:;
						++it;
						goto _iter_begin_1cc365221;
					}
					_iter_end_1cc365221:;
				};
				return ((_11413_c.get()._field_default != nullptr) && (_11413_c.get()._field_default.get()._field_scope == _8636_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c974abc0_Data>>()) {
			_case_begin_1cc35e23c:;
			{
				jule::Ptr<_1c974abc0_Data> _12213_d = _8624_stmt.operator jule::Ptr<_1c974abc0_Data>();;
				return _1e467688e_model_is_goto_scope(_12213_d.get()._field_model,_8636_sc);
			}
		}
		else {
			_case_begin_1cc35c317:;
			{
				return false;
			}
		}
		_match_end_1cc35c2b2:;
	};
}



inline jule::I64 _1e4684902_count_match_type(jule::Ptr<_1e468a023_Match>& _12922_m, jule::Ptr<_1c97746ee_TypeKind>& _12934_t) {
	jule::I64 _13013_n = 0LL;;
	jule::Str _1319_kind = _1c9774aa6_to_str(_12934_t.ptr());;
	_julec_label_loop:;
	{
		auto &expr = _12922_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1cc368103:;
		if (it != expr.end()) {
			jule::Ptr<_1e468a9d5_Case> &_13312_c = *it;
			{
				if ((_13312_c == nullptr)) {
					goto _iter_next_1cc368103;
				};
				{
					auto &expr = _13312_c.get()._field_exprs;
					auto it = expr.begin();
					_iter_begin_1cc368c6e:;
					if (it != expr.end()) {
						jule::Ptr<_1c974abc0_Data> &_13816_expr = *it;
						{
							if ((_13816_expr == nullptr)) {
								goto _iter_end_1cc368103;
							};
							if ((_1319_kind == _1c9774aa6_to_str(_13816_expr.get()._field_model.operator jule::Ptr<_1c97746ee_TypeKind>().ptr()))) {
								(_13013_n)++;
							};
						}
						_iter_next_1cc368c6e:;
						++it;
						goto _iter_begin_1cc368c6e;
					}
					_iter_end_1cc368c6e:;
				};
			}
			_iter_next_1cc368103:;
			++it;
			goto _iter_begin_1cc368103;
		}
		_iter_end_1cc368103:;
	};
	return _13013_n;
}



inline jule::Slice<jule::Ptr<_1c974abc0_Data>> _1e4684a34_get_datas_from_tuple_data(jule::Ptr<_1c974abc0_Data>& _15335_d) {
	if ((_1c97781d6_tup(_15335_d.get()._field_kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _15335_d.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1e437cb6c_TupleExprModel>>()) {
				_case_begin_1cc36be70:;
				{
					return _15335_d.get()._field_model.operator jule::Ptr<_1e437cb6c_TupleExprModel>().get()._field_datas;
				}
			}
			else {
				_case_begin_1cc36a446:;
				{
					jule::Ptr<_1c977d8b2_Tuple> _15921_t = _1c97781d6_tup(_15335_d.get()._field_kind.ptr());;
					jule::Slice<jule::Ptr<_1c974abc0_Data>> _16021_r = jule::Slice<jule::Ptr<_1c974abc0_Data>>::alloc(0LL,_15921_t.get()._field_types.len());;
					{
						auto &expr = _15921_t.get()._field_types;
						auto it = expr.begin();
						_iter_begin_1cc36b0d4:;
						if (it != expr.end()) {
							jule::Ptr<_1c97746ee_TypeKind> _16125_kind = *it;
							{
								_16021_r = jule::alloc_for_append(_16021_r,1);_16021_r.__push(jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=_16125_kind, ._field_mutable=true, }));;
							}
							_iter_next_1cc36b0d4:;
							++it;
							goto _iter_begin_1cc36b0d4;
						}
						_iter_end_1cc36b0d4:;
					};
					return _16021_r;
				}
			}
			_match_end_1cc36a3e1:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1c974abc0_Data>>::make({_15335_d});
	};
}



inline jule::Slice<jule::Any> _1e4684c76_get_expr_models(jule::Any& _17425_m) {
	{
		auto &_match_expr{ _17425_m };
		
		if (_match_expr.type_is<jule::Ptr<_1e4366183_TupleExpr>>()) {
			_case_begin_1cc36d25c:;
			{
				jule::Ptr<_1e4366183_TupleExpr> _17717_tup = _17425_m.operator jule::Ptr<_1e4366183_TupleExpr>();;
				jule::Slice<jule::Any> _17817_models = jule::Slice<jule::Any>::alloc(0LL,_17717_tup.get()._field_expr.len());;
				{
					auto &expr = _17717_tup.get()._field_expr;
					auto it = expr.begin();
					_iter_begin_1cc36db97:;
					if (it != expr.end()) {
						jule::Ptr<_1e43659e0_Expr> _17921_expr = *it;
						{
							_17817_models = jule::alloc_for_append(_17817_models,1);_17817_models.__push(jule::Any(_17921_expr.get()._field_kind));;
						}
						_iter_next_1cc36db97:;
						++it;
						goto _iter_begin_1cc36db97;
					}
					_iter_end_1cc36db97:;
				};
				return _17817_models;
			}
		}
		else {
			_case_begin_1cc36cda5:;
			{
				return jule::Slice<jule::Any>::make({jule::Any(_17425_m)});
			}
		}
		_match_end_1cc36cd50:;
	};
}



inline jule::Bool _1e4685062_check_mut(jule::Ptr<_1e46ac452_Sema>& _18819_s, jule::Ptr<_1c974abc0_Data>& _18830_left, jule::Ptr<_1c974abc0_Data> _18847_right, jule::Ptr<_20cd9e6ec_Token> _18861_op) {
	jule::Bool _18875_ok = jule::Bool();
	{
		
		if ((!(_18830_left.get()._field_mutable))) {
			_case_begin_1cc3708ad:;
			{
				_1e46aed6c_push_err(_18819_s.ptr(), _18861_op,jule::Str("cannot assign to immutable storage", 34),jule::Slice<jule::Any>());
				_18875_ok = false;
				return _18875_ok;
			}
		}
		else if ((((_18847_right != nullptr) && (!(_18847_right.get()._field_mutable))) && _1c9775a96_mutable(_18847_right.get()._field_kind.ptr()))) {
			_case_begin_1cc370979:;
			{
				if (((_18861_op.get()._field_kind != jule::Str("=", 1)) && (_1c9777999_strct(_18847_right.get()._field_kind.ptr()) != nullptr))) {
					_18875_ok = true;
					return _18875_ok;
				};
				_1e46aed6c_push_err(_18819_s.ptr(), _18861_op,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_18847_right.get()._field_kind.ptr()))}));
				_18875_ok = false;
				return _18875_ok;
			}
		}
		else {
			_case_begin_1cc370281:;
			{
				_18875_ok = true;
				return _18875_ok;
			}
		}
		_match_end_1cc36ec97:;
	};
}



inline jule::Bool _1e46854e6_check_assign(jule::Ptr<_1e46ac452_Sema>& _20722_s, jule::Ptr<_1c974abc0_Data>& _20737_left, jule::Ptr<_1c974abc0_Data> _20754_right, jule::Ptr<_20cd9e6ec_Token> _20768_op) {
	jule::Bool _20782_ok = jule::Bool();
	jule::Ptr<_1e4383018_FnIns> _2089_f = _1c9777735_fnc(_20737_left.get()._field_kind.ptr());;
	if ((((_2089_f != nullptr) && (_2089_f.get()._field_decl != nullptr)) && _2089_f.get()._field_decl.get()._field_global)) {
		_1e46aed6c_push_err(_20722_s.ptr(), _20768_op,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>());
		_20782_ok = false;
		return _20782_ok;
	};
	{
		
		if (_1c974b583_is_const(_20737_left.ptr())) {
			_case_begin_1cc375d8b:;
			{
				_1e46aed6c_push_err(_20722_s.ptr(), _20768_op,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>());
				_1e46b018b_push_suggestion(_20722_s.ptr(), jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>());
				_20782_ok = false;
				return _20782_ok;
			}
		}
		else if ((!(_20737_left.get()._field_lvalue))) {
			_case_begin_1cc375e46:;
			{
				_1e46aed6c_push_err(_20722_s.ptr(), _20768_op,jule::Str("invalid expression: expected lvalue for assignment", 50),jule::Slice<jule::Any>());
				_20782_ok = false;
				return _20782_ok;
			}
		}
		else if ((!(_1e4685062_check_mut(_20722_s,_20737_left,_20754_right,_20768_op)))) {
			_case_begin_1cc375eac:;
			{
				_20782_ok = false;
				return _20782_ok;
			}
		}
		else {
			_case_begin_1cc37575e:;
			{
				_20782_ok = true;
				return _20782_ok;
			}
		}
		_match_end_1cc375671:;
	};
}



inline jule::Bool _1e46857b0_is_valid_ast_st_for_next_st(jule::Any& _22937_n) {
	{
		auto &_match_expr{ _22937_n };
		
		if (_match_expr.type_is<jule::Ptr<_1e436eba3_AssignSt>>()) {
			_case_begin_1cc378850:;
			{
				return (!(_22937_n.operator jule::Ptr<_1e436eba3_AssignSt>().get()._field_declarative));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e43699b1_FnCallExpr>>() || _match_expr.type_is<jule::Ptr<_1e43659e0_Expr>>()) {
			_case_begin_1cc3788b6:;
			{
				return true;
			}
		}
		else {
			_case_begin_1cc376265:;
			{
				return false;
			}
		}
		_match_end_1cc376210:;
	};
}



inline jule::Bool _1e4685a8a_is_valid_st_for_next_st(jule::Any& _24129_st) {
	{
		auto &_match_expr{ _24129_st };
		
		if (_match_expr.type_is<jule::Ptr<_1e4354902_FnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e46891a9_Postfix>>() || _match_expr.type_is<jule::Ptr<_1e468962c_Assign>>() || _match_expr.type_is<jule::Ptr<_1e46899d4_MultiAssign>>()) {
			_case_begin_1cc3799d8:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c974abc0_Data>>()) {
			_case_begin_1cc379a4e:;
			{
				{
					auto &_match_expr{ _24129_st.operator jule::Ptr<_1c974abc0_Data>().get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1e4354902_FnCallExprModel>>()) {
						_case_begin_1cc37a236:;
						{
							return true;
						}
					}
					else {
						_case_begin_1cc37a830:;
						{
							return false;
						}
					}
					_match_end_1cc37a7ca:;
				};
			}
		}
		else {
			_case_begin_1cc378bb3:;
			{
				return false;
			}
		}
		_match_end_1cc378b5d:;
	};
}



inline jule::Bool _1e4685d43_st_is_def(jule::Any& _26015_st) {
	{
		auto &_match_expr{ _26015_st };
		
		if (_match_expr.type_is<jule::Ptr<_1e46c6eb6_Var>>()) {
			_case_begin_1cc37b545:;
			{
				return true;
			}
		}
		else {
			_case_begin_1cc37a9d9:;
			{
				return false;
			}
		}
		_match_end_1cc37a984:;
	};
}



inline jule::Ptr<_1e46c6eb6_Var> _1e46a2788_find_var_in_package(jule::Slice<jule::Ptr<_1c9745c42_SymbolTable>>& _4629_files, jule::Str _4652_ident, jule::Bool _4664_cpp_linked) {
	{
		auto &expr = _4629_files;
		auto it = expr.begin();
		_iter_begin_1cc37bb50:;
		if (it != expr.end()) {
			jule::Ptr<_1c9745c42_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1e46c6eb6_Var> _4817_v = _1c9746913_find_var(_4717_f.ptr(), _4652_ident,_4664_cpp_linked);;
				if ((_4817_v != nullptr)) {
					return _4817_v;
				};
			}
			_iter_next_1cc37bb50:;
			++it;
			goto _iter_begin_1cc37bb50;
		}
		_iter_end_1cc37bb50:;
	};
	return nullptr;
}



inline jule::Ptr<_1c97739b7_TypeAlias> _1e46a2bd9_find_type_alias_in_package(jule::Slice<jule::Ptr<_1c9745c42_SymbolTable>>& _5836_files, jule::Str _5859_ident, jule::Bool _5871_cpp_linked) {
	{
		auto &expr = _5836_files;
		auto it = expr.begin();
		_iter_begin_1cc37d327:;
		if (it != expr.end()) {
			jule::Ptr<_1c9745c42_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1c97739b7_TypeAlias> _6017_ta = _1c9746cba_find_type_alias(_5917_f.ptr(), _5859_ident,_5871_cpp_linked);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;
				};
			}
			_iter_next_1cc37d327:;
			++it;
			goto _iter_begin_1cc37d327;
		}
		_iter_end_1cc37d327:;
	};
	return nullptr;
}



inline jule::Ptr<_1e43360cb_Struct> _1e46a30d5_find_struct_in_package(jule::Slice<jule::Ptr<_1c9745c42_SymbolTable>>& _7032_files, jule::Str _7055_ident, jule::Bool _7067_cpp_linked) {
	{
		auto &expr = _7032_files;
		auto it = expr.begin();
		_iter_begin_1cc37e856:;
		if (it != expr.end()) {
			jule::Ptr<_1c9745c42_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1e43360cb_Struct> _7217_s = _1c9747172_find_struct(_7117_f.ptr(), _7055_ident,_7067_cpp_linked);;
				if ((_7217_s != nullptr)) {
					return _7217_s;
				};
			}
			_iter_next_1cc37e856:;
			++it;
			goto _iter_begin_1cc37e856;
		}
		_iter_end_1cc37e856:;
	};
	return nullptr;
}



inline jule::Ptr<_1e4380576_Fn> _1e46a3514_find_fn_in_package(jule::Slice<jule::Ptr<_1c9745c42_SymbolTable>>& _8228_files, jule::Str _8251_ident, jule::Bool _8263_cpp_linked) {
	{
		auto &expr = _8228_files;
		auto it = expr.begin();
		_iter_begin_1cc380d85:;
		if (it != expr.end()) {
			jule::Ptr<_1c9745c42_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1e4380576_Fn> _8417_f = _1c9747529_find_fn(_8317_file.ptr(), _8251_ident,_8263_cpp_linked);;
				if ((_8417_f != nullptr)) {
					return _8417_f;
				};
			}
			_iter_next_1cc380d85:;
			++it;
			goto _iter_begin_1cc380d85;
		}
		_iter_end_1cc380d85:;
	};
	return nullptr;
}



inline jule::Ptr<_1e43d8d0a_Trait> _1e46a3855_find_trait_in_package(jule::Slice<jule::Ptr<_1c9745c42_SymbolTable>>& _9431_files, jule::Str _9454_ident) {
	{
		auto &expr = _9431_files;
		auto it = expr.begin();
		_iter_begin_1cc3822d7:;
		if (it != expr.end()) {
			jule::Ptr<_1c9745c42_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1e43d8d0a_Trait> _9617_t = _1c9747837_find_trait(_9517_f.ptr(), _9454_ident);;
				if ((_9617_t != nullptr)) {
					return _9617_t;
				};
			}
			_iter_next_1cc3822d7:;
			++it;
			goto _iter_begin_1cc3822d7;
		}
		_iter_end_1cc3822d7:;
	};
	return nullptr;
}



inline jule::Ptr<_1e4456b58_Enum> _1e46a3b96_find_enum_in_package(jule::Slice<jule::Ptr<_1c9745c42_SymbolTable>>& _10630_files, jule::Str _10653_ident) {
	{
		auto &expr = _10630_files;
		auto it = expr.begin();
		_iter_begin_1cc381182:;
		if (it != expr.end()) {
			jule::Ptr<_1c9745c42_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1e4456b58_Enum> _10817_e = _1c9747b45_find_enum(_10717_f.ptr(), _10653_ident);;
				if ((_10817_e != nullptr)) {
					return _10817_e;
				};
			}
			_iter_next_1cc381182:;
			++it;
			goto _iter_begin_1cc381182;
		}
		_iter_end_1cc381182:;
	};
	return nullptr;
}



inline jule::Bool _1e46a96d5_is_std_package(jule::Str _32719_f, jule::Str _32727_p) {
	return _20c83c443_has_prefix(_32719_f,_20b961436_join(jule::Slice<jule::Str>::make({_20caa3654_PATH_STDLIB,_32727_p})));
}



inline jule::Bool _1e46aa61a_is_valid_model_for_ref(jule::Any& _1232_m) {
	{
		auto &_match_expr{ _1232_m };
		
		if (_match_expr.type_is<jule::Ptr<_1e46c6eb6_Var>>()) {
			_case_begin_1cc38543e:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437c1cc_StructSubIdentExprModel>>()) {
			_case_begin_1cc3854a5:;
			{
				jule::Ptr<_1e437c1cc_StructSubIdentExprModel> _1717_model = _1232_m.operator jule::Ptr<_1e437c1cc_StructSubIdentExprModel>();;
				return _1e46aa61a_is_valid_model_for_ref(_1717_model.get()._field_expr.get()._field_model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437bcae_TraitSubIdentExprModel>>()) {
			_case_begin_1cc384ecc:;
			{
				jule::Ptr<_1e437bcae_TraitSubIdentExprModel> _2017_model = _1232_m.operator jule::Ptr<_1e437bcae_TraitSubIdentExprModel>();;
				return _1e46aa61a_is_valid_model_for_ref(_2017_model.get()._field_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e435972b_UnaryExprModel>>()) {
			_case_begin_1cc385043:;
			{
				jule::Ptr<_1e435972b_UnaryExprModel> _2317_unary = _1232_m.operator jule::Ptr<_1e435972b_UnaryExprModel>();;
				if ((_2317_unary.get()._field_op.get()._field_kind != jule::Str("*", 1))) {
					return false;
				};
				if ((_1c9776c84_ptr(_2317_unary.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
					return true;
				};
				if ((_1c9776a20_sptr(_2317_unary.get()._field_expr.get()._field_kind.ptr()) == nullptr)) {
					return false;
				};
				return _1e46aa61a_is_valid_model_for_ref(_2317_unary.get()._field_expr.get()._field_model);
			}
		}
		else {
			_case_begin_1cc3836a1:;
			{
				return false;
			}
		}
		_match_end_1cc38364b:;
	};
}



inline _20ca8ec5b_Log _1e46aaab0_compiler_err(jule::Ptr<_20cd9e6ec_Token>& _4118_token, jule::Bool _4133_line, jule::Str _4145_fmt, jule::Slice<jule::Any> _4158_args) {
	_20ca8ec5b_Log _4213_log = _20ca8ec5b_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_row=_4118_token.get()._field_row, ._field_column=_4118_token.get()._field_column, ._field_path=_4118_token.get()._field_file.get()._field_path, ._field_text=_20ca9019b_logf(_4145_fmt,jule::Any(_4158_args)), };;
	if (_4133_line) {
		_4213_log._field_line=_20cda5cb9_get_row(_4118_token.get()._field_file.ptr(), _4118_token.get()._field_row);
	};
	return _4213_log;
}



inline jule::Bool _1e46aae01_imp_is_lookupable(jule::Ptr<_1e46a4768_ImportInfo>& _5523_i, jule::Str _5539_ident) {
	if (_5523_i.get()._field_cpp_linked) {
		return false;
	};
	if ((!(_5523_i.get()._field_import_all))) {
		if ((_5523_i.get()._field_selected.len() > 0LL)) {
			return _1e46a6d97_exist_ident(_5523_i.ptr(), _5539_ident);
		};
	};
	return _5523_i.get()._field_import_all;
}



inline void _1e46ab1ed_append_ret_vars(jule::Slice<jule::Ptr<_1e46c6eb6_Var>>& _6825_dest, jule::Ptr<_1e4383018_FnIns>& _6844_f) {
	if ((_1e43807c9_is_void(_6844_f.get()._field_decl.ptr()) || (_6844_f.get()._field_result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1c97746ee_TypeKind>> _7313_types = _1e4383a30_types(_6844_f.ptr());;
	{
		auto &expr = _6844_f.get()._field_decl.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_1cc38d8ba:;
		if (it != expr.end()) {
			jule::I64 _7410_i = it - expr.begin();
			jule::Ptr<_20cd9e6ec_Token> _7417_ident = *it;
			{
				if ((_20cda1e4c_is_ignore_ident(_7417_ident.get()._field_kind) || _20cda21e4_is_anon_ident(_7417_ident.get()._field_kind))) {
					goto _iter_next_1cc38d8ba;
				};
				_6825_dest = jule::alloc_for_append(_6825_dest,1);_6825_dest.__push(jule::new_ptr<_1e46c6eb6_Var>(_1e46c6eb6_Var{._field_scope=_6844_f.get()._field_scope, ._field_token=_7417_ident, ._field_ident=_7417_ident.get()._field_kind, ._field_mutable=true, ._field_used=true, ._field_kind=jule::new_ptr<_1c977858d_TypeSymbol>(_1c977858d_TypeSymbol{._field_kind=_7313_types[_7410_i]}), ._field_value=jule::new_ptr<_1c974bc48_Value>(_1c974bc48_Value{._field_data=jule::new_ptr<_1c974abc0_Data>()}), }));;
			}
			_iter_next_1cc38d8ba:;
			++it;
			_7410_i++;
			goto _iter_begin_1cc38d8ba;
		}
		_iter_end_1cc38d8ba:;
	};
}



inline void _1e46ab4a6_append_param_vars(jule::Slice<jule::Ptr<_1e46c6eb6_Var>>& _9427_dest, jule::Ptr<_1e4383018_FnIns>& _9446_f) {
	if ((_9446_f.get()._field_params.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _9446_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1cc39122a:;
		if (it != expr.end()) {
			jule::Ptr<_1e438217c_ParamIns> _9917_p = *it;
			{
				if ((_20cda1e4c_is_ignore_ident(_9917_p.get()._field_decl.get()._field_ident) || _20cda21e4_is_anon_ident(_9917_p.get()._field_decl.get()._field_ident))) {
					goto _iter_next_1cc39122a;
				};
				jule::Ptr<_1e46c6eb6_Var> _10417_v = jule::new_ptr<_1e46c6eb6_Var>(_1e46c6eb6_Var{._field_scope=_9446_f.get()._field_scope, ._field_token=_9917_p.get()._field_decl.get()._field_token, ._field_ident=_9917_p.get()._field_decl.get()._field_ident, ._field_mutable=_9917_p.get()._field_decl.get()._field_mutable, ._field_used=true, ._field_reference=_9917_p.get()._field_decl.get()._field_reference, ._field_kind=jule::new_ptr<_1c977858d_TypeSymbol>(), ._field_value=jule::new_ptr<_1c974bc48_Value>(_1c974bc48_Value{._field_data=jule::new_ptr<_1c974abc0_Data>()}), });;
				{
					
					if (_1e435279b_is_self(_9917_p.get()._field_decl.ptr())) {
						_case_begin_1cc393bde:;
						{
							_10417_v.get()._field_kind.get()._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_variadic=false, ._field_kind=jule::Trait<_1c97742c0_Kind>(_9446_f.get()._field_owner, 0)});
							_10417_v.get()._field_reference=(!(_1e4355edb_is_ref(_9917_p.get()._field_decl.ptr())));
							if (_1e4355edb_is_ref(_9917_p.get()._field_decl.ptr())) {
								_10417_v.get()._field_ident=_10417_v.get()._field_ident.slice(1LL);
								_10417_v.get()._field_kind.get()._field_kind.get()._field_kind=jule::Trait<_1c97742c0_Kind>(jule::new_ptr<_1c977c460_Sptr>(_1c977c460_Sptr{._field_elem=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_cpp_ident=_10417_v.get()._field_kind.get()._field_kind.get()._field_cpp_ident, ._field_kind=_10417_v.get()._field_kind.get()._field_kind.get()._field_kind})}), 6);
							};
						}
					}
					else if (_9917_p.get()._field_decl.get()._field_variadic) {
						_case_begin_1cc393914:;
						{
							_10417_v.get()._field_kind.get()._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_variadic=false, ._field_kind=jule::Trait<_1c97742c0_Kind>(jule::new_ptr<_1c977cdbc_Slc>(_1c977cdbc_Slc{._field_elem=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_cpp_ident=_9917_p.get()._field_kind.get()._field_cpp_ident, ._field_kind=_9917_p.get()._field_kind.get()._field_kind})}), 7)});
						}
					}
					else {
						_case_begin_1cc39389d:;
						{
							_10417_v.get()._field_kind.get()._field_kind=_9917_p.get()._field_kind;
						}
					}
					_match_end_1cc39378d:;
				};
				_9427_dest = jule::alloc_for_append(_9427_dest,1);_9427_dest.__push(_10417_v);;
			}
			_iter_next_1cc39122a:;
			++it;
			goto _iter_begin_1cc39122a;
		}
		_iter_end_1cc39122a:;
	};
}



inline void _1e46ab781_append_generic_type_aliases(jule::Slice<jule::Ptr<_1c97739b7_TypeAlias>>& _15437_dest, jule::Ptr<_1e4383018_FnIns>& _15462_f) {
	jule::I64 _15513_size = _15462_f.get()._field_generics.len();;
	if ((_15462_f.get()._field_decl.get()._field_owner != nullptr)) {
		_15513_size+=_15462_f.get()._field_decl.get()._field_owner.get()._field_generics.len();
	};
	if ((_15513_size == 0LL)) {
		return;;
	};
	{
		auto &expr = _15462_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1cc399057:;
		if (it != expr.end()) {
			jule::I64 _16410_i = it - expr.begin();
			jule::Ptr<_1c97746ee_TypeKind> _16417_g = *it;
			{
				jule::Ptr<_1e436d50e_GenericDecl> _16517_decl = _15462_f.get()._field_decl.get()._field_generics[_16410_i];;
				_15437_dest = jule::alloc_for_append(_15437_dest,1);_15437_dest.__push(jule::new_ptr<_1c97739b7_TypeAlias>(_1c97739b7_TypeAlias{._field_scope=_15462_f.get()._field_decl.get()._field_scope, ._field_used=true, ._field_generic=true, ._field_token=_16517_decl.get()._field_token, ._field_ident=_16517_decl.get()._field_ident, ._field_kind=jule::new_ptr<_1c977858d_TypeSymbol>(_1c977858d_TypeSymbol{._field_kind=_16417_g}), }));;
			}
			_iter_next_1cc399057:;
			++it;
			_16410_i++;
			goto _iter_begin_1cc399057;
		}
		_iter_end_1cc399057:;
	};
	if ((_15462_f.get()._field_decl.get()._field_owner != nullptr)) {
		jule::Ptr<_1e43462ea_StructIns> _17917_owner = _15462_f.get()._field_owner;;
		{
			auto &expr = _17917_owner.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1cc399970:;
			if (it != expr.end()) {
				jule::I64 _18014_i = it - expr.begin();
				jule::Ptr<_1c97746ee_TypeKind> _18021_g = *it;
				{
					jule::Ptr<_1e436d50e_GenericDecl> _18121_decl = _17917_owner.get()._field_decl.get()._field_generics[_18014_i];;
					_15437_dest = jule::alloc_for_append(_15437_dest,1);_15437_dest.__push(jule::new_ptr<_1c97739b7_TypeAlias>(_1c97739b7_TypeAlias{._field_scope=_15462_f.get()._field_decl.get()._field_scope, ._field_used=true, ._field_generic=true, ._field_token=_18121_decl.get()._field_token, ._field_ident=_18121_decl.get()._field_ident, ._field_kind=jule::new_ptr<_1c977858d_TypeSymbol>(_1c977858d_TypeSymbol{._field_kind=_18021_g}), }));;
				}
				_iter_next_1cc399970:;
				++it;
				_18014_i++;
				goto _iter_begin_1cc399970;
			}
			_iter_end_1cc399970:;
		};
	};
}



inline jule::Ptr<_1c9745c42_SymbolTable> _1e46abad3_find_file(jule::Slice<jule::Ptr<_1c9745c42_SymbolTable>>& _19619_files, jule::Ptr<_20cda4adc_File>& _19643_handler) {
	{
		auto &expr = _19619_files;
		auto it = expr.begin();
		_iter_begin_1cc39bec2:;
		if (it != expr.end()) {
			jule::Ptr<_1c9745c42_SymbolTable> _19717_fl = *it;
			{
				if ((_19717_fl.get()._field_file == _19643_handler)) {
					return _19717_fl;
				};
			}
			_iter_next_1cc39bec2:;
			++it;
			goto _iter_begin_1cc39bec2;
		}
		_iter_end_1cc39bec2:;
	};
	return nullptr;
}



inline void _1e46abebd_push_suggestion(_20ca8ec5b_Log* _20531_log, jule::Str _20542_fmt, jule::Slice<jule::Any> _20555_args) {
	_20531_log->_field_suggestion=_20ca9019b_logf(_20542_fmt,jule::Any(_20555_args));
}



inline jule::Bool _1c9735391_trait_has_reference_receiver(jule::Ptr<_1e43d8d0a_Trait>& _2634_t) {
	{
		auto &expr = _2634_t.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1cc39ea63:;
		if (it != expr.end()) {
			jule::Ptr<_1e4380576_Fn> &_2712_f = *it;
			{
				if (_2712_f.get()._field_statically) {
					goto _iter_next_1cc39ea63;
				};
				jule::Ptr<_1e4380389_Param> _3313_p = _2712_f.get()._field_params[0LL];;
				if ((_1e4355edb_is_ref(_3313_p.ptr()) && _1e435279b_is_self(_3313_p.ptr()))) {
					return true;
				};
			}
			_iter_next_1cc39ea63:;
			++it;
			goto _iter_begin_1cc39ea63;
		}
		_iter_end_1cc39ea63:;
	};
	return false;
}



inline jule::Bool _1c971c895_float_assignable(jule::Str _4121_kind, jule::Ptr<_1c974abc0_Data>& _4133_d) {
	jule::Str _429_value = _1e4746de3_fmt_float(static_cast<jule::F64>(_1c968e0ec_as_f64(_4133_d.get()._field_constant.ptr())),'g',-1LL,64LL);;
	return _1e46795d9_check_bit_float(_429_value,static_cast<jule::I64>(_1e4678253_bitsize_of(_4121_kind)));
}



inline jule::Bool _1c97368ae_sig_assignable(jule::Str _4619_kind, jule::Ptr<_1c974abc0_Data>& _4631_d) {
	jule::F64 _479_min = _1e467d5cc_min(_4619_kind);;
	jule::F64 _489_max = _1e467d8b8_max(_4619_kind);;
	{
		
		if (_1c9690c58_is_f64(_4631_d.get()._field_constant.ptr())) {
			_case_begin_1cc3a367c:;
			{
				jule::F64 _5113_x = _1c968d8b0_read_f64(_4631_d.get()._field_constant.ptr());;
				jule::F64 _5214_i;;
				jule::F64 _5217_frac;;
				std::tie(_5214_i,_5217_frac) = _1e5c07b11_modf(_5113_x);
				if ((_5217_frac != 0LL)) {
					return false;
				};
				return ((_5214_i >= _479_min) && (_5214_i <= _489_max));
			}
		}
		else if (_1c969051b_is_u64(_4631_d.get()._field_constant.ptr())) {
			_case_begin_1cc3a3704:;
			{
				jule::F64 _5813_x = _1c968e0ec_as_f64(_4631_d.get()._field_constant.ptr());;
				if ((_5813_x <= _489_max)) {
					return true;
				};
			}
		}
		else if (_1c96902a7_is_i64(_4631_d.get()._field_constant.ptr())) {
			_case_begin_1cc3a377b:;
			{
				jule::F64 _6313_x = _1c968e0ec_as_f64(_4631_d.get()._field_constant.ptr());;
				return ((_479_min <= _6313_x) && (_6313_x <= _489_max));
			}
		}
		_match_end_1cc3a355b:;
	};
	return false;
}



inline jule::Bool _1c97369e1_unsig_assignable(jule::Str _6921_kind, jule::Ptr<_1c974abc0_Data>& _6933_d) {
	jule::F64 _709_max = _1e467d8b8_max(_6921_kind);;
	if ((_6933_d.get()._field_is_rune && (_6921_kind == jule::Str("u8", 2)))) {
		return _1c9733acb_is_ascii(static_cast<jule::I32>(static_cast<jule::I32>(_1c968ce0e_read_i64(_6933_d.get()._field_constant.ptr()))));
	};
	{
		
		if (_1c9690c58_is_f64(_6933_d.get()._field_constant.ptr())) {
			_case_begin_1cc3a895c:;
			{
				jule::F64 _7713_x = _1c968d8b0_read_f64(_6933_d.get()._field_constant.ptr());;
				if ((_7713_x < 0LL)) {
					return false;
				};
				jule::F64 _8114_i;;
				jule::F64 _8117_frac;;
				std::tie(_8114_i,_8117_frac) = _1e5c07b11_modf(_7713_x);
				if ((_8117_frac != 0LL)) {
					return false;
				};
				return (_8114_i <= _709_max);
			}
		}
		else if (_1c969051b_is_u64(_6933_d.get()._field_constant.ptr())) {
			_case_begin_1cc3a89c3:;
			{
				jule::F64 _8713_x = _1c968e0ec_as_f64(_6933_d.get()._field_constant.ptr());;
				if ((_8713_x <= _709_max)) {
					return true;
				};
			}
		}
		else if (_1c96902a7_is_i64(_6933_d.get()._field_constant.ptr())) {
			_case_begin_1cc3a8a39:;
			{
				jule::F64 _9213_x = _1c968e0ec_as_f64(_6933_d.get()._field_constant.ptr());;
				return ((0LL <= _9213_x) && (_9213_x <= _709_max));
			}
		}
		_match_end_1cc3a8275:;
	};
	return false;
}



inline jule::Bool _1c9736b23_int_assignable(jule::Str _9819_kind, jule::Ptr<_1c974abc0_Data>& _9831_d) {
	{
		
		if (_1e46837d0_is_sig_int(_9819_kind)) {
			_case_begin_1cc3ad258:;
			{
				return _1c97368ae_sig_assignable(_9819_kind,_9831_d);
			}
		}
		else if (_1e4683abb_is_unsig_int(_9819_kind)) {
			_case_begin_1cc3ad346:;
			{
				return _1c97369e1_unsig_assignable(_9819_kind,_9831_d);
			}
		}
		else {
			_case_begin_1cc3a9100:;
			{
				return false;
			}
		}
		_match_end_1cc3a9034:;
	};
}



inline jule::Ptr<_1e43620c4_Directive> _1c976e3db_find_directive(jule::Slice<jule::Ptr<_1e43620c4_Directive>>& _409224_directives, jule::Str _409266_d) {
	{
		auto &expr = _409224_directives;
		auto it = expr.begin();
		_iter_begin_1cc3ad6ba:;
		if (it != expr.end()) {
			jule::Ptr<_1e43620c4_Directive> _409317_dr = *it;
			{
				if ((_409317_dr.get()._field_tag.get()._field_kind == _409266_d)) {
					return _409317_dr;
				};
			}
			_iter_next_1cc3ad6ba:;
			++it;
			goto _iter_begin_1cc3ad6ba;
		}
		_iter_end_1cc3ad6ba:;
	};
	return nullptr;
}



inline jule::Any _1c976e771_find_builtins_import(jule::Str _410125_ident, jule::Ptr<_1e46a4768_ImportInfo> _410137_imp) {
	return jule::Any(_1c980265b_find_package_builtin_def(_410137_imp.get()._field_link_path,_410125_ident));
}



inline void _1c976e980_fit_bitsize(jule::Ptr<_1c974abc0_Data>& _410821_d) {
	jule::Ptr<_1c9778e51_Prim> _410913_prim = _1c97767ab_prim(_410821_d.get()._field_kind.ptr());;
	jule::I64 _41109_z = _1e4678253_bitsize_of(_1c97792b4_to_str(_410913_prim.ptr()));;
	if ((_41109_z == 64LL)) {
		return;;
	};
	jule::I64 _411513_k = 0LL;;
	{
		
		if (_1c96902a7_is_i64(_410821_d.get()._field_constant.ptr())) {
			_case_begin_1cc3b1c0c:;
			{
				_411513_k=static_cast<jule::I64>(_1e4679b28_bitsize_of_int(static_cast<jule::I64>(_1c968ce0e_read_i64(_410821_d.get()._field_constant.ptr()))));
				if ((_411513_k > _41109_z)) {
					_410913_prim.get()._field_kind=_1e467853e_int_from_bits(_411513_k);
				};
			}
		}
		else if (_1c969051b_is_u64(_410821_d.get()._field_constant.ptr())) {
			_case_begin_1cc3b1c84:;
			{
				_411513_k=static_cast<jule::I64>(_1e4679dc0_bitsize_of_uint(static_cast<jule::U64>(_1c968d173_read_u64(_410821_d.get()._field_constant.ptr()))));
				if ((_411513_k > _41109_z)) {
					_410913_prim.get()._field_kind=_1e46787d6_uint_from_bits(_411513_k);
				};
			}
		}
		else if (_1c9690c58_is_f64(_410821_d.get()._field_constant.ptr())) {
			_case_begin_1cc3b1d0b:;
			{
				_411513_k=static_cast<jule::I64>(_1e4679881_bitsize_of_float(static_cast<jule::F64>(_1c968d8b0_read_f64(_410821_d.get()._field_constant.ptr()))));
				if ((_411513_k > _41109_z)) {
					_410913_prim.get()._field_kind=_1e4678a7d_float_from_bits(_411513_k);
				};
			}
		}
		_match_end_1cc3b1b30:;
	};
}



inline void _1c976ec7c_make_struct_lit_alloc(jule::Ptr<_1c974abc0_Data>& _413531_d, jule::Ptr<_1e433b004_StructLitExprModel>& _413546_lit) {
	_413531_d.get()._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(jule::new_ptr<_1c977c460_Sptr>(_1c977c460_Sptr{._field_elem=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_413546_lit.get()._field_strct, 0)})}), 6)});
	_413531_d.get()._field_model=jule::Any(jule::new_ptr<_1e4331d63_AllocStructLitExprModel>(_1e4331d63_AllocStructLitExprModel{._field_lit=_413546_lit}));
}



inline jule::Ptr<_1e46c6eb6_Var> _1c97700bd_build_error_var(jule::Ptr<_1e46862c7_Scope>& _414625_s, jule::Ptr<_1e43699b1_FnCallExpr>& _414641_fc) {
	return jule::new_ptr<_1e46c6eb6_Var>(_1e46c6eb6_Var{._field_scope=_414625_s, ._field_token=_414641_fc.get()._field_token, ._field_ident=jule::Str("error", 5), ._field_mutable=true, ._field_used=true, ._field_reference=false, ._field_kind=jule::new_ptr<_1c977858d_TypeSymbol>(_1c977858d_TypeSymbol{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("any", 3)), 5)})}), ._field_value=jule::new_ptr<_1c974bc48_Value>(_1c974bc48_Value{._field_data=jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{})}), });
}



inline jule::Any _1c977040e_find_builtins_sema(jule::Str _416523_ident, jule::Ptr<_1e46ac452_Sema> _416539_s) {
	{
		auto &expr = _416539_s.get()._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1cc3b7cce:;
		if (it != expr.end()) {
			jule::Ptr<_1e46a4768_ImportInfo> _416617_imp = *it;
			{
				if ((_416617_imp.get()._field_import_all || _1e46a6d97_exist_ident(_416617_imp.ptr(), _416523_ident))) {
					jule::Any _416821_def = _1c976e771_find_builtins_import(_416523_ident,_416617_imp);;
					if ((_416821_def != nullptr)) {
						return jule::Any(_416821_def);
					};
				};
			}
			_iter_next_1cc3b7cce:;
			++it;
			goto _iter_begin_1cc3b7cce;
		}
		_iter_end_1cc3b7cce:;
	};
	jule::Str _417613_ppath = _20cda54d3_dir(_416539_s.get()._field_file.get()._field_file.ptr());;
	if (_20c83c443_has_prefix(_417613_ppath,_20caa3654_PATH_STDLIB)) {
		(_417613_ppath).mut_slice(_20caa3654_PATH_STDLIB.len());;
		_417613_ppath=(jule::Str("std", 3) + _20c82d0b0_replace(_417613_ppath,static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL));
		return jule::Any(_1c980265b_find_package_builtin_def(_417613_ppath,_416523_ident));
	};
	return nullptr;
}



inline jule::Bool _1c97706a6_is_ok_for_shifting(jule::Ptr<_1c974abc0_Data>& _419028_d) {
	if (_1c974b583_is_const(_419028_d.ptr())) {
		{
			
			if (_1c96902a7_is_i64(_419028_d.get()._field_constant.ptr())) {
				_case_begin_1cc3bbc28:;
				{
					return (_1c968ce0e_read_i64(_419028_d.get()._field_constant.ptr()) >= 0LL);
				}
			}
			else if (_1c969051b_is_u64(_419028_d.get()._field_constant.ptr())) {
				_case_begin_1cc3bbd05:;
				{
					return true;
				}
			}
			else if (_1c9690c58_is_f64(_419028_d.get()._field_constant.ptr())) {
				_case_begin_1cc3bbd6b:;
				{
					return (_1c968d8b0_read_f64(_419028_d.get()._field_constant.ptr()) >= 0LL);
				}
			}
			else {
				_case_begin_1cc3bb60c:;
				{
					return false;
				}
			}
			_match_end_1cc3bb541:;
		};
	};
	jule::Ptr<_1c9778e51_Prim> _42039_prim = _1c97767ab_prim(_419028_d.get()._field_kind.ptr());;
	return ((_42039_prim != nullptr) && _1e4683d63_is_int(_1c97792b4_to_str(_42039_prim.ptr())));
}



inline jule::Bool _1c97709d6_is_instanced_struct(jule::Ptr<_1e43462ea_StructIns> _420724_s) {
	return (_420724_s.get()._field_decl.get()._field_generics.len() == _420724_s.get()._field_generics.len());
}



inline jule::Bool _1c9770cb1_is_ptr_arithmetic_compatible_int(jule::Ptr<_1c974abc0_Data>& _421142_d) {
	if (_1c974b583_is_const(_421142_d.ptr())) {
		return _1c9736b23_int_assignable(jule::Str("int", 3),_421142_d);
	};
	_1c9736c55_TypeCompatibilityChecker _421513_tcc = _1c9736c55_TypeCompatibilityChecker{._field_dest=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("int", 3)), 5)}), ._field_src=_421142_d.get()._field_kind, };;
	return _1c9737be0_check(&_421513_tcc);
}



inline void _1c9771069_apply_cast_kind_model(jule::Ptr<_1c974abc0_Data>& _422431_d, jule::Ptr<_1c97746ee_TypeKind>& _422446_t) {
	_422431_d.get()._field_model=jule::Any(jule::new_ptr<_1e434e7dc_CastingExprModel>(_1e434e7dc_CastingExprModel{._field_expr=jule::Any(_422431_d.get()._field_model), ._field_kind=_422446_t, ._field_expr_kind=_422431_d.get()._field_kind}));
}



inline void _1c9771322_apply_cast_kind(jule::Ptr<_1c974abc0_Data>& _423225_d, jule::Ptr<_1c97746ee_TypeKind>& _423240_t) {
	_1c9771069_apply_cast_kind_model(_423225_d,_423240_t);
	_423225_d.get()._field_kind=_423240_t;
}



inline jule::Ptr<_1c974abc0_Data> _1c9771520_build_void_data(void) {
	return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("void", 4)), 5)}), ._field_mutable=false, ._field_lvalue=false, ._field_decl=false, });
}



inline jule::Str _1c97717d9_check_data_for_integer_indexing(jule::Ptr<_1c974abc0_Data>& _424841_d) {
	jule::Str _424853_err_fmt = jule::Str();
	if ((_424841_d == nullptr)) {
		_424853_err_fmt = jule::Str();
		return _424853_err_fmt;
	};
	{
		
		if ((_1c97767ab_prim(_424841_d.get()._field_kind.ptr()) == nullptr)) {
			_case_begin_1cc3c3207:;
			{
				_424853_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _424853_err_fmt;
			}
		}
		else if ((!(_1e4683d63_is_int(_1c97792b4_to_str(_1c97767ab_prim(_424841_d.get()._field_kind.ptr()).ptr()))))) {
			_case_begin_1cc3c326d:;
			{
				_424853_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _424853_err_fmt;
			}
		}
		else if (_1c974b583_is_const(_424841_d.ptr())) {
			_case_begin_1cc3c32d4:;
			{
				if ((_1c968e0ec_as_f64(_424841_d.get()._field_constant.ptr()) < 0LL)) {
					_424853_err_fmt = jule::Str("overflow the limit of data-type", 31);
					return _424853_err_fmt;
				};
			}
		}
		else if ((_1c97767ab_prim(_424841_d.get()._field_kind.ptr()) == nullptr) || _1c974b583_is_const(_424841_d.ptr()) || (_1e4677eab_real_kind_of(_1c97792b4_to_str(_1c97767ab_prim(_424841_d.get()._field_kind.ptr()).ptr())) != _1e4677eab_real_kind_of(jule::Str("int", 3)))) {
			_case_begin_1cc3c334a:;
			{
				jule::Ptr<_1c97746ee_TypeKind> _426517_t = jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("int", 3)), 5)});;
				_1c9771322_apply_cast_kind(_424841_d,_426517_t);
			}
		}
		_match_end_1cc3c38cd:;
	};
	_424853_err_fmt = jule::Str();
	return _424853_err_fmt;
}



inline void _1c9771ac5_apply_cast_model_by_enum(jule::Ptr<_1c974abc0_Data>& _427434_d, jule::Ptr<_1e4456b58_Enum> _427448_e) {
	if ((_427448_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1c9778e51_Prim> _42789_p = _1c97767ab_prim(_427448_e.get()._field_kind.get()._field_kind.ptr());;
	if (_1c977be10_is_str(_42789_p.ptr())) {
		return;;
	};
	_1c9771069_apply_cast_kind_model(_427434_d,_427448_e.get()._field_kind.get()._field_kind);
}



inline void _1c9771d8e_cast_const_by_type(jule::Str& _428524_t, jule::Ptr<_1c974abc0_Data>& _428537_d) {
	{
		
		if (_1e46837d0_is_sig_int(_428524_t)) {
			_case_begin_1cc3c962b:;
			{
				{
					auto _match_expr{ _1e4678253_bitsize_of(_1e4677eab_real_kind_of(_428524_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1cc3ca3da:;
						{
							_1c968e372_set_i64(_428537_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1c968db24_as_i64(_428537_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1cc3ca451:;
						{
							_1c968e372_set_i64(_428537_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_1c968db24_as_i64(_428537_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 16LL) {
						_case_begin_1cc3ca4b7:;
						{
							_1c968e372_set_i64(_428537_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_1c968db24_as_i64(_428537_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 8LL) {
						_case_begin_1cc3ca52d:;
						{
							_1c968e372_set_i64(_428537_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_1c968db24_as_i64(_428537_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_1cc3ca000:;
				};
			}
		}
		else if (_1e4683abb_is_unsig_int(_428524_t)) {
			_case_begin_1cc3c96a3:;
			{
				{
					auto _match_expr{ _1e4678253_bitsize_of(_1e4677eab_real_kind_of(_428524_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1cc3cdc29:;
						{
							_1c968e5e7_set_u64(_428537_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1c968dd88_as_u64(_428537_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1cc3cdc90:;
						{
							_1c968e5e7_set_u64(_428537_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_1c968dd88_as_u64(_428537_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 16LL) {
						_case_begin_1cc3cdd06:;
						{
							_1c968e5e7_set_u64(_428537_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_1c968dd88_as_u64(_428537_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 8LL) {
						_case_begin_1cc3cdd6c:;
						{
							_1c968e5e7_set_u64(_428537_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_1c968dd88_as_u64(_428537_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_1cc3c9ce1:;
				};
			}
		}
		else if (_1e468414e_is_float(_428524_t)) {
			_case_begin_1cc3c972a:;
			{
				{
					auto _match_expr{ _1e4678253_bitsize_of(_1e4677eab_real_kind_of(_428524_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1cc3ce323:;
						{
							_1c968ed67_set_f64(_428537_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1c968e0ec_as_f64(_428537_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1cc3d2788:;
						{
							_1c968ed67_set_f64(_428537_d.get()._field_constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_1c968e0ec_as_f64(_428537_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_1cc3ce411:;
				};
			}
		}
		_match_end_1cc3c950a:;
	};
}



inline void _1c977228a_update_model_to_generic_ins(jule::Ptr<_1e4354902_FnCallExprModel>& _431937_m, jule::Ptr<_1e4383018_FnIns>& _431963_f) {
	{
		auto &_match_expr{ _431937_m.get()._field_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1e4383018_FnIns>>()) {
			_case_begin_1cc3caae4:;
			{
				_431937_m.get()._field_expr=jule::Any(_431963_f);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e437c1cc_StructSubIdentExprModel>>()) {
			_case_begin_1cc3d36ac:;
			{
				_431937_m.get()._field_expr.operator jule::Ptr<_1e437c1cc_StructSubIdentExprModel>().get()._field_method=_431963_f;
			}
		}
		_match_end_1cc3d2d71:;
	};
}



inline jule::Bool _1c9789cca_kind_uses_generics(jule::Any& _143824_k, jule::Slice<jule::Ptr<_1e436d50e_GenericDecl>>& _143842_generics) {
	{
		auto &expr = _143842_generics;
		auto it = expr.begin();
		_iter_begin_1cc3d4ceb:;
		if (it != expr.end()) {
			jule::Ptr<_1e436d50e_GenericDecl> &_143912_g = *it;
			{
				if (static__1c97898ce_exist(_143912_g.get()._field_ident,_143824_k)) {
					return true;
				};
			}
			_iter_next_1cc3d4ceb:;
			++it;
			goto _iter_begin_1cc3d4ceb;
		}
		_iter_end_1cc3d4ceb:;
	};
	return false;
}



inline jule::Bool _1c978a160_has_directive(jule::Slice<jule::Ptr<_1e43620c4_Directive>>& _144823_directives, jule::Str _144854_tag) {
	{
		auto &expr = _144823_directives;
		auto it = expr.begin();
		_iter_begin_1cc3d5824:;
		if (it != expr.end()) {
			jule::Ptr<_1e43620c4_Directive> _144917_dr = *it;
			{
				if ((_144917_dr.get()._field_tag.get()._field_kind == _144854_tag)) {
					return true;
				};
			}
			_iter_next_1cc3d5824:;
			++it;
			goto _iter_begin_1cc3d5824;
		}
		_iter_end_1cc3d5824:;
	};
	return false;
}



inline jule::Bool _1c978a407_can_get_ptr(jule::Ptr<_1c974abc0_Data>& _145721_d) {
	if (((!(_145721_d.get()._field_lvalue)) || _1c974b583_is_const(_145721_d.ptr()))) {
		return false;
	};
	{
		
		if (((_1c9777735_fnc(_145721_d.get()._field_kind.ptr()) != nullptr) || (_1c9776ee8_enm(_145721_d.get()._field_kind.ptr()) != nullptr))) {
			_case_begin_1cc3d7c77:;
			{
				return false;
			}
		}
		else {
			_case_begin_1cc3d767d:;
			{
				return true;
			}
		}
		_match_end_1cc3d745d:;
	};
}



inline jule::Bool _1c978a6e3_is_valid_for_sptr_type(jule::Ptr<_1c97746ee_TypeKind>& _147132_t) {
	jule::Ptr<_1e43462ea_StructIns> _147213_s = _1c9777999_strct(_147132_t.ptr());;
	if ((((_147213_s != nullptr) && (_147213_s.get()._field_decl != nullptr)) && _147213_s.get()._field_decl.get()._field_cpp_linked)) {
		return false;
	};
	return true;
}



inline jule::Bool _1c978a98a_is_valid_for_ref(jule::Ptr<_1c97746ee_TypeKind>& _148026_t) {
	return (_1c9777735_fnc(_148026_t.ptr()) == nullptr);
}



inline jule::Bool _1c978ac54_is_builtin_str_convertable(jule::Ptr<_1c97746ee_TypeKind>& _148336_t) {
	return (((!(_1c9775832_void(_148336_t.ptr()))) && (_1c9777735_fnc(_148336_t.ptr()) == nullptr)) && (_1c97781d6_tup(_148336_t.ptr()) == nullptr));
}



inline jule::Str _1c978b02e_build_link_path_by_tokens(jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _148731_tokens) {
	jule::Str _148813_s = _148731_tokens[0LL].get()._field_kind;;
	{
		auto expr = _148731_tokens.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1cc3db891:;
		if (it != expr.end()) {
			jule::Ptr<_20cd9e6ec_Token> &_148912_token = *it;
			{
				_148813_s+=jule::Str("::", 2);
				_148813_s+=_148912_token.get()._field_kind;
			}
			_iter_next_1cc3db891:;
			++it;
			goto _iter_begin_1cc3db891;
		}
		_iter_end_1cc3db891:;
	};
	return _148813_s;
}



inline jule::Ptr<_1c9778e51_Prim> _1c978b370_build_prim_type(jule::Str _149620_kind) {
	return jule::new_ptr<_1c9778e51_Prim>(_1c9778e51_Prim{._field_kind=_149620_kind});
}



inline jule::Ptr<_1e43360cb_Struct> _1c978b617_get_struct_from_kind(jule::Ptr<_1c97746ee_TypeKind> _150229_k) {
	{
		
		if ((_150229_k == nullptr)) {
			_case_begin_1cc3dd1bc:;
			{
				return nullptr;
			}
		}
		else if ((_1c9777999_strct(_150229_k.ptr()) != nullptr)) {
			_case_begin_1cc3dd233:;
			{
				return _1c9777999_strct(_150229_k.ptr()).get()._field_decl;
			}
		}
		else if ((_1c9776a20_sptr(_150229_k.ptr()) != nullptr)) {
			_case_begin_1cc3dce58:;
			{
				return _1c978b617_get_struct_from_kind(_1c9776a20_sptr(_150229_k.ptr()).get()._field_elem);
			}
		}
		else if ((_1c97774c1_slc(_150229_k.ptr()) != nullptr)) {
			_case_begin_1cc3dcebe:;
			{
				return _1c978b617_get_struct_from_kind(_1c97774c1_slc(_150229_k.ptr()).get()._field_elem);
			}
		}
		else if ((_1c977725c_arr(_150229_k.ptr()) != nullptr)) {
			_case_begin_1cc3dd035:;
			{
				return _1c978b617_get_struct_from_kind(_1c977725c_arr(_150229_k.ptr()).get()._field_elem);
			}
		}
		else if ((_1c9776c84_ptr(_150229_k.ptr()) != nullptr)) {
			_case_begin_1cc3dca7e:;
			{
				return nullptr;
			}
		}
		else {
			_case_begin_1cc3dc034:;
			{
				return nullptr;
			}
		}
		_match_end_1cc3dbe68:;
	};
}



inline jule::Bool _1c978b8ae_is_prim(jule::Str _152512_kind) {
	return ((((((((((((((((_152512_kind == jule::Str("i8", 2)) || (_152512_kind == jule::Str("i16", 3))) || (_152512_kind == jule::Str("i32", 3))) || (_152512_kind == jule::Str("i64", 3))) || (_152512_kind == jule::Str("u8", 2))) || (_152512_kind == jule::Str("u16", 3))) || (_152512_kind == jule::Str("u32", 3))) || (_152512_kind == jule::Str("u64", 3))) || (_152512_kind == jule::Str("f32", 3))) || (_152512_kind == jule::Str("f64", 3))) || (_152512_kind == jule::Str("int", 3))) || (_152512_kind == jule::Str("uint", 4))) || (_152512_kind == jule::Str("uintptr", 7))) || (_152512_kind == jule::Str("bool", 4))) || (_152512_kind == jule::Str("str", 3))) || (_152512_kind == jule::Str("any", 3)));
}



inline void _1c978bb67_apply_implicit_cast(jule::Ptr<_1c97746ee_TypeKind>& _154429_dest, jule::Ptr<_1c974abc0_Data>& _154451_d) {
	if (_1c97755bd_is_nil(_154451_d.get()._field_kind.ptr())) {
		return;;
	};
	jule::Ptr<_1c9778e51_Prim> _15499_dest_prim = _1c97767ab_prim(_154429_dest.ptr());;
	jule::Ptr<_1c9778e51_Prim> _15509_prim = _1c97767ab_prim(_154451_d.get()._field_kind.ptr());;
	if ((_15499_dest_prim != nullptr)) {
		if (_1c977c174_is_any(_15499_dest_prim.ptr())) {
			_1c9771322_apply_cast_kind(_154451_d,_154429_dest);
			return;;
		};
		if (((((((!(_1c9775359_cpp_linked(_154451_d.get()._field_kind.ptr()))) && (!(_154451_d.get()._field_kind.get()._field_variadic))) && (!(_154451_d.get()._field_lvalue))) && (!(_1c974b583_is_const(_154451_d.ptr())))) && (_15509_prim != nullptr)) && _1e46843e6_is_num(_15509_prim.get()._field_kind))) {
			_1c9771322_apply_cast_kind(_154451_d,_154429_dest);
		};
		return;;
	};
	if (((_1c9777c0d_trt(_154429_dest.ptr()) != nullptr) && (_1c9777c0d_trt(_154451_d.get()._field_kind.ptr()) == nullptr))) {
		_1c9771069_apply_cast_kind_model(_154451_d,_154429_dest);
	};
}



inline std::tuple<jule::Ptr<_1c9745c42_SymbolTable>,jule::Slice<_20ca8ec5b_Log>> _1c978e807_build_symbols(jule::Ptr<_1e433079b_Ast>& _1523_ast, jule::Trait<_1e46a2403_Importer>& _1539_importer, jule::Ptr<_1e438ab9c_SymbolBuilder> _1563_owner) {
	jule::Ptr<_1e438ab9c_SymbolBuilder> _1613_sb = jule::new_ptr<_1e438ab9c_SymbolBuilder>(_1e438ab9c_SymbolBuilder{._field_owner=_1563_owner, ._field_importer=_1539_importer, ._field_ast=_1523_ast, });;
	_1e4390d06_build(_1613_sb);
	if ((_1613_sb.get()._field_errors.len() == 0LL)) {
		return std::make_tuple(_1613_sb.get()._field_table,nullptr);
	};
	return std::make_tuple(nullptr,_1613_sb.get()._field_errors);
}



inline std::tuple<jule::Ptr<_1e46a742a_Package>,jule::Slice<_20ca8ec5b_Log>> _1c978ec36___analyze_package(jule::Slice<jule::Ptr<_1e433079b_Ast>>& _2927_files, jule::Trait<_1e46a2403_Importer>& _2947_importer, jule::I64& _2968_flags) {
	jule::Slice<jule::Ptr<_1c9745c42_SymbolTable>> _3113_tables = jule::Slice<jule::Ptr<_1c9745c42_SymbolTable>>::alloc(0LL,_2927_files.len());;
	{
		auto &expr = _2927_files;
		auto it = expr.begin();
		_iter_begin_1cc3ebb7b:;
		if (it != expr.end()) {
			jule::Ptr<_1e433079b_Ast> _3217_f = *it;
			{
				jule::Ptr<_1c9745c42_SymbolTable> _3318_table;;
				jule::Slice<_20ca8ec5b_Log> _3329_errors;;
				std::tie(_3318_table,_3329_errors) = _1c978e807_build_symbols(_3217_f,_2947_importer,nullptr);
				if ((_3329_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_3329_errors);
				};
				_3113_tables = jule::alloc_for_append(_3113_tables,1);_3113_tables.__push(_3318_table);;
			}
			_iter_next_1cc3ebb7b:;
			++it;
			goto _iter_begin_1cc3ebb7b;
		}
		_iter_end_1cc3ebb7b:;
	};
	jule::Ptr<_1e46ac452_Sema> _4013_sema = jule::new_ptr<_1e46ac452_Sema>(_1e46ac452_Sema{._field_flags=_2968_flags});;
	_1e46c3e6e_check(_4013_sema, _3113_tables);
	if ((_4013_sema.get()._field_errors.len() > 0LL)) {
		return std::make_tuple(nullptr,_4013_sema.get()._field_errors);
	};
	jule::Ptr<_1e46a742a_Package> _4813_pkg = jule::new_ptr<_1e46a742a_Package>(_1e46a742a_Package{._field_files=_4013_sema.get()._field_files});;
	return std::make_tuple(_4813_pkg,nullptr);
}



inline std::tuple<jule::Ptr<_1e46a742a_Package>,jule::Slice<_20ca8ec5b_Log>> _1c9790121_analyze_package(jule::Slice<jule::Ptr<_1e433079b_Ast>> _7228_files, jule::Trait<_1e46a2403_Importer> _7247_importer, jule::I64 _7267_flags) {
	if ((_7228_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Ptr<_1e46a742a_Package> _7714_package;;
	jule::Slice<_20ca8ec5b_Log> _7727_logs;;
	std::tie(_7714_package,_7727_logs) = _1c978ec36___analyze_package(_7228_files,_7247_importer,_7267_flags);
	return std::make_tuple(_7714_package,_7727_logs);
}



inline jule::Ptr<_1e4383018_FnIns> _1c9798d2d_find_builtin_fn(jule::Str _2120_ident) {
	{
		auto &_match_expr{ _2120_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1cc404b73:;
			{
				static jule::Ptr<_1e4383018_FnIns> _2420_f = jule::new_ptr<_1e4383018_FnIns>(_1e4383018_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c974abc0_Data>(jule::Ptr<_1c974c73d_Eval>&,jule::Ptr<_1e43699b1_FnCallExpr>&,jule::Ptr<_1c974abc0_Data>&)>(_1c9803629_builtin_caller_out), });;
				return _2420_f;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1cc404bd9:;
			{
				static jule::Ptr<_1e4383018_FnIns> _2720_f = jule::new_ptr<_1e4383018_FnIns>(_1e4383018_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c974abc0_Data>(jule::Ptr<_1c974c73d_Eval>&,jule::Ptr<_1e43699b1_FnCallExpr>&,jule::Ptr<_1c974abc0_Data>&)>(_1c980375b_builtin_caller_outln), });;
				return _2720_f;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_1cc40490e:;
			{
				static jule::Ptr<_1e4383018_FnIns> _3020_f = jule::new_ptr<_1e4383018_FnIns>(_1e4383018_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c974abc0_Data>(jule::Ptr<_1c974c73d_Eval>&,jule::Ptr<_1e43699b1_FnCallExpr>&,jule::Ptr<_1c974abc0_Data>&)>(_1c98337e1_builtin_caller_new), });;
				return _3020_f;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_1cc404975:;
			{
				static jule::Ptr<_1e4383018_FnIns> _3320_f = jule::new_ptr<_1e4383018_FnIns>(_1e4383018_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c974abc0_Data>(jule::Ptr<_1c974c73d_Eval>&,jule::Ptr<_1e43699b1_FnCallExpr>&,jule::Ptr<_1c974abc0_Data>&)>(_1c9833b54_builtin_caller_panic), });;
				return _3320_f;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_1cc4049ec:;
			{
				static jule::Ptr<_1e4383018_FnIns> _3620_f = jule::new_ptr<_1e4383018_FnIns>(_1e4383018_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c974abc0_Data>(jule::Ptr<_1c974c73d_Eval>&,jule::Ptr<_1e43699b1_FnCallExpr>&,jule::Ptr<_1c974abc0_Data>&)>(_1c9833c86_builtin_caller_make), });;
				return _3620_f;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_1cc404667:;
			{
				static jule::Ptr<_1e4383018_FnIns> _3920_f = jule::new_ptr<_1e4383018_FnIns>(_1e4383018_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c974abc0_Data>(jule::Ptr<_1c974c73d_Eval>&,jule::Ptr<_1e43699b1_FnCallExpr>&,jule::Ptr<_1c974abc0_Data>&)>(_1c9833db8_builtin_caller_append), });;
				return _3920_f;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_1cc4046de:;
			{
				static jule::Ptr<_1e4383018_FnIns> _4220_f = jule::new_ptr<_1e4383018_FnIns>(_1e4383018_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c974abc0_Data>(jule::Ptr<_1c974c73d_Eval>&,jule::Ptr<_1e43699b1_FnCallExpr>&,jule::Ptr<_1c974abc0_Data>&)>(_1c983425e_builtin_caller_copy), });;
				return _4220_f;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_1cc404766:;
			{
				static jule::Ptr<_1e4383018_FnIns> _4520_f = jule::new_ptr<_1e4383018_FnIns>(_1e4383018_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c974abc0_Data>(jule::Ptr<_1c974c73d_Eval>&,jule::Ptr<_1e43699b1_FnCallExpr>&,jule::Ptr<_1c974abc0_Data>&)>(_1c9834391_builtin_caller_clone), });;
				return _4520_f;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_1cc404c61:;
			{
				static jule::Ptr<_1e4383018_FnIns> _4820_f = jule::new_ptr<_1e4383018_FnIns>(_1e4383018_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c974abc0_Data>(jule::Ptr<_1c974c73d_Eval>&,jule::Ptr<_1e43699b1_FnCallExpr>&,jule::Ptr<_1c974abc0_Data>&)>(_1c98344c3_builtin_caller_assert), });;
				return _4820_f;
			}
		}
		else {
			_case_begin_1cc404007:;
			{
				return nullptr;
			}
		}
		_match_end_1cc4044ad:;
	};
}



inline jule::Ptr<_1c97739b7_TypeAlias> _1c9799bb9_find_builtin_type_alias(jule::Str _5528_ident) {
	{
		auto &_match_expr{ _5528_ident };
		
		if (_match_expr == jule::Str("byte", 4)) {
			_case_begin_1cc40a382:;
			{
				static jule::Ptr<_1c97739b7_TypeAlias> _5820_t = jule::new_ptr<_1c97739b7_TypeAlias>(_1c97739b7_TypeAlias{._field_public=true, ._field_kind=jule::new_ptr<_1c977858d_TypeSymbol>(_1c977858d_TypeSymbol{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("u8", 2)), 5)})}), });;
				return _5820_t;
			}
		}
		else if (_match_expr == jule::Str("rune", 4)) {
			_case_begin_1cc40a5b3:;
			{
				static jule::Ptr<_1c97739b7_TypeAlias> _6820_t = jule::new_ptr<_1c97739b7_TypeAlias>(_1c97739b7_TypeAlias{._field_public=true, ._field_kind=jule::new_ptr<_1c977858d_TypeSymbol>(_1c977858d_TypeSymbol{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("i32", 3)), 5)})}), });;
				return _6820_t;
			}
		}
		else {
			_case_begin_1cc40966c:;
			{
				return nullptr;
			}
		}
		_match_end_1cc409e75:;
	};
}



inline jule::Ptr<_1e43d8d0a_Trait> _1c979b00b_find_builtin_trait(jule::Str _8223_ident) {
	return nullptr;
}



inline jule::Any _1c97c7c2a_find_builtin_def(jule::Str _8621_ident) {
	jule::Ptr<_1e4383018_FnIns> _8713_f = _1c9798d2d_find_builtin_fn(_8621_ident);;
	if ((_8713_f != nullptr)) {
		return jule::Any(_8713_f);
	};
	jule::Ptr<_1c97739b7_TypeAlias> _9213_ta = _1c9799bb9_find_builtin_type_alias(_8621_ident);;
	if ((_9213_ta != nullptr)) {
		return jule::Any(_9213_ta);
	};
	jule::Ptr<_1e43d8d0a_Trait> _9713_t = _1c979b00b_find_builtin_trait(_8621_ident);;
	if ((_9713_t != nullptr)) {
		return jule::Any(_9713_t);
	};
	return nullptr;
}



inline jule::Any _1c97977bb_find_builtin_def_std_debug(jule::Str _10531_ident) {
	{
		auto &_match_expr{ _10531_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1cc40e908:;
			{
				static jule::Ptr<_1e4383018_FnIns> _10820_f = jule::new_ptr<_1e4383018_FnIns>(_1e4383018_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c974abc0_Data>(jule::Ptr<_1c974c73d_Eval>&,jule::Ptr<_1e43699b1_FnCallExpr>&,jule::Ptr<_1c974abc0_Data>&)>(_1c98351c7_builtin_caller_std_debug_out), });;
				return jule::Any(_10820_f);
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1cc40e9b3:;
			{
				static jule::Ptr<_1e4383018_FnIns> _11120_f = jule::new_ptr<_1e4383018_FnIns>(_1e4383018_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c974abc0_Data>(jule::Ptr<_1c974c73d_Eval>&,jule::Ptr<_1e43699b1_FnCallExpr>&,jule::Ptr<_1c974abc0_Data>&)>(_1c98355e5_builtin_caller_std_debug_outln), });;
				return jule::Any(_11120_f);
			}
		}
		else {
			_case_begin_1cc40c818:;
			{
				return nullptr;
			}
		}
		_match_end_1cc40e463:;
	};
}



inline jule::Any _1c979ee55_find_builtin_def_std_mem(jule::Str _11829_ident) {
	{
		auto &_match_expr{ _11829_ident };
		
		if (_match_expr == jule::Str("size_of", 7)) {
			_case_begin_1cc411201:;
			{
				static jule::Ptr<_1e4383018_FnIns> _12120_f = jule::new_ptr<_1e4383018_FnIns>(_1e4383018_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c974abc0_Data>(jule::Ptr<_1c974c73d_Eval>&,jule::Ptr<_1e43699b1_FnCallExpr>&,jule::Ptr<_1c974abc0_Data>&)>(_1c9834605_builtin_caller_std_mem_size_of), });;
				return jule::Any(_12120_f);
			}
		}
		else if (_match_expr == jule::Str("align_of", 8)) {
			_case_begin_1cc4112de:;
			{
				static jule::Ptr<_1e4383018_FnIns> _12420_f = jule::new_ptr<_1e4383018_FnIns>(_1e4383018_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c974abc0_Data>(jule::Ptr<_1c974c73d_Eval>&,jule::Ptr<_1e43699b1_FnCallExpr>&,jule::Ptr<_1c974abc0_Data>&)>(_1c9834737_builtin_caller_std_mem_align_of), });;
				return jule::Any(_12420_f);
			}
		}
		else if (_match_expr == jule::Str("free", 4)) {
			_case_begin_1cc411355:;
			{
				static jule::Ptr<_1e4383018_FnIns> _12720_f = jule::new_ptr<_1e4383018_FnIns>(_1e4383018_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c974abc0_Data>(jule::Ptr<_1c974c73d_Eval>&,jule::Ptr<_1e43699b1_FnCallExpr>&,jule::Ptr<_1c974abc0_Data>&)>(_1c9834869_builtin_caller_std_mem_free), });;
				return jule::Any(_12720_f);
			}
		}
		else {
			_case_begin_1cc40e74e:;
			{
				return nullptr;
			}
		}
		_match_end_1cc410794:;
	};
}



inline jule::Any _1c97d2185_find_builtin_def_std_jule_integrated(jule::Str _13441_ident) {
	{
		auto &_match_expr{ _13441_ident };
		
		if (_match_expr == jule::Str("to_str", 6)) {
			_case_begin_1cc413434:;
			{
				static jule::Ptr<_1e4383018_FnIns> _13720_f = jule::new_ptr<_1e4383018_FnIns>(_1e4383018_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c974abc0_Data>(jule::Ptr<_1c974c73d_Eval>&,jule::Ptr<_1e43699b1_FnCallExpr>&,jule::Ptr<_1c974abc0_Data>&)>(_1c983499b_builtin_caller_std_jule_integrated_to_str), });;
				return jule::Any(_13720_f);
			}
		}
		else if (_match_expr == jule::Str("emit", 4)) {
			_case_begin_1cc413522:;
			{
				static jule::Ptr<_1e4383018_FnIns> _14020_f = jule::new_ptr<_1e4383018_FnIns>(_1e4383018_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c974abc0_Data>(jule::Ptr<_1c974c73d_Eval>&,jule::Ptr<_1e43699b1_FnCallExpr>&,jule::Ptr<_1c974abc0_Data>&)>(_1c9834cba_builtin_caller_std_jule_integrated_emit), });;
				return jule::Any(_14020_f);
			}
		}
		else {
			_case_begin_1cc4110d0:;
			{
				return nullptr;
			}
		}
		_match_end_1cc4129c7:;
	};
}



inline jule::Any _1c980265b_find_package_builtin_def(jule::Str _14729_link_path, jule::Str _14745_ident) {
	{
		auto &_match_expr{ _14729_link_path };
		
		if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_1cc414e6e:;
			{
				return jule::Any(_1c97977bb_find_builtin_def_std_debug(_14745_ident));
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_1cc415018:;
			{
				return jule::Any(_1c979ee55_find_builtin_def_std_mem(_14745_ident));
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_1cc41507e:;
			{
				return jule::Any(_1c97d2185_find_builtin_def_std_jule_integrated(_14745_ident));
			}
		}
		else {
			_case_begin_1cc413313:;
			{
				return nullptr;
			}
		}
		_match_end_1cc414ad9:;
	};
}



inline jule::Ptr<_1c974abc0_Data> _1c980278d_builtin_caller_common_plain(jule::Ptr<_1c974c73d_Eval>& _16037_e, jule::Ptr<_1e43699b1_FnCallExpr>& _16052_fc, jule::Ptr<_1c974abc0_Data>& _16074_d) {
	jule::Ptr<_1e4383018_FnIns> _16113_f = _1c9777735_fnc(_16074_d.get()._field_kind.ptr());;
	_1c973c83d_FnCallArgChecker _16313_fcac = _1c973c83d_FnCallArgChecker{._field_e=_16037_e, ._field_args=_16052_fc.get()._field_args, ._field_error_token=_16052_fc.get()._field_token, ._field_f=_16113_f, ._field_dynamic_annotation=false, };;
	if ((!(_1c973ec08_check(&_16313_fcac)))) {
		return nullptr;
	};
	jule::Ptr<_1e4354902_FnCallExprModel> _17413_model = jule::new_ptr<_1e4354902_FnCallExprModel>(_1e4354902_FnCallExprModel{._field_token=_16052_fc.get()._field_token, ._field_func=_16113_f, ._field_expr=jule::Any(_16074_d.get()._field_model), ._field_args=_16313_fcac._field_arg_models, });;
	if ((_16113_f.get()._field_result == nullptr)) {
		_16074_d=_1c9771520_build_void_data();
	} else {
		_16074_d=jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=_16113_f.get()._field_result, });
	};
	_16074_d.get()._field_model=jule::Any(_17413_model);
	return _16074_d;
}



inline jule::Ptr<_1c974abc0_Data> _1c97b4365_builtin_caller_common(jule::Ptr<_1c974c73d_Eval>& _19331_e, jule::Ptr<_1e43699b1_FnCallExpr>& _19346_fc, jule::Ptr<_1c974abc0_Data>& _19368_d) {
	if ((_19346_fc.get()._field_generics.len() > 0LL)) {
		_1c974cc16_push_err(_19331_e.ptr(), _19346_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	return _1c980278d_builtin_caller_common_plain(_19331_e,_19346_fc,_19368_d);
}



inline jule::Ptr<_1c974abc0_Data> _1c97b4497_builtin_caller_common_mut(jule::Ptr<_1c974c73d_Eval>& _20135_e, jule::Ptr<_1e43699b1_FnCallExpr>& _20150_fc, jule::Ptr<_1c974abc0_Data>& _20172_d) {
	if ((!(_20172_d.get()._field_mutable))) {
		_1c974cc16_push_err(_20135_e.ptr(), _20150_fc.get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	return _1c97b4365_builtin_caller_common(_20135_e,_20150_fc,_20172_d);
}



inline jule::Ptr<_1c974abc0_Data> _1c98034e7_builtin_caller_error(jule::Ptr<_1c974c73d_Eval>& _20830_e, jule::Ptr<_1e43699b1_FnCallExpr>& _20845_fc) {
	if ((_20845_fc.get()._field_generics.len() > 0LL)) {
		_1c974cc16_push_err(_20830_e.ptr(), _20845_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_20845_fc.get()._field_args.len() < 1LL)) {
		_1c974cc16_push_err(_20830_e.ptr(), _20845_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3))}));
		return nullptr;
	};
	if ((_20845_fc.get()._field_args.len() > 1LL)) {
		_1c974cc16_push_err(_20830_e.ptr(), _20845_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c974abc0_Data> _21913_expr = _1c9766647_eval_expr(_20830_e, _20845_fc.get()._field_args[0LL]);;
	if ((_21913_expr == nullptr)) {
		return nullptr;
	};
	if (_1c974b0aa_is_nil(_21913_expr.ptr())) {
		_1c974cc16_push_err(_20830_e.ptr(), _20845_fc.get()._field_args[0LL].get()._field_token,jule::Str("you cannot call error function with nil", 39),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c974abc0_Data> _22813_d = _1c9771520_build_void_data();;
	_22813_d.get()._field_model=jule::Any(jule::new_ptr<_1e437e09c_BuiltinErrorCallExprModel>(_1e437e09c_BuiltinErrorCallExprModel{._field_err=jule::Any(_21913_expr.get()._field_model)}));
	return _22813_d;
}



inline jule::Ptr<_1c974abc0_Data> _1c9803629_builtin_caller_out(jule::Ptr<_1c974c73d_Eval>& _23628_e, jule::Ptr<_1e43699b1_FnCallExpr>& _23643_fc, jule::Ptr<_1c974abc0_Data>& ) {
	if ((_23643_fc.get()._field_generics.len() > 0LL)) {
		_1c974cc16_push_err(_23628_e.ptr(), _23643_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_23643_fc.get()._field_args.len() < 1LL)) {
		_1c974cc16_push_err(_23628_e.ptr(), _23643_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1))}));
		return nullptr;
	};
	if ((_23643_fc.get()._field_args.len() > 1LL)) {
		_1c974cc16_push_err(_23628_e.ptr(), _23643_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c974abc0_Data> _24813_expr = _1c9766647_eval_expr(_23628_e, _23643_fc.get()._field_args[0LL]);;
	if ((_24813_expr == nullptr)) {
		return nullptr;
	};
	if ((!(_1c978ac54_is_builtin_str_convertable(_24813_expr.get()._field_kind)))) {
		_1c974cc16_push_err(_23628_e.ptr(), _23643_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1c974abc0_Data> _25813_d = _1c9771520_build_void_data();;
	_25813_d.get()._field_model=jule::Any(jule::new_ptr<_1e437cd59_BuiltinOutCallExprModel>(_1e437cd59_BuiltinOutCallExprModel{._field_expr=jule::Any(_24813_expr.get()._field_model), }));
	return _25813_d;
}



inline jule::Ptr<_1c974abc0_Data> _1c980375b_builtin_caller_outln(jule::Ptr<_1c974c73d_Eval>& _26330_e, jule::Ptr<_1e43699b1_FnCallExpr>& _26345_fc, jule::Ptr<_1c974abc0_Data>& _26367_d) {
	_26367_d=_1c9803629_builtin_caller_out(_26330_e,_26345_fc,_26367_d);
	if ((_26367_d == nullptr)) {
		return nullptr;
	};
	_26367_d.get()._field_model=jule::Any(jule::new_ptr<_1e437d046_BuiltinOutlnCallExprModel>(_1e437d046_BuiltinOutlnCallExprModel{._field_expr=jule::Any(_26367_d.get()._field_model.operator jule::Ptr<_1e437cd59_BuiltinOutCallExprModel>().get()._field_expr), }));
	return _26367_d;
}



inline jule::Ptr<_1c974abc0_Data> _1c98337e1_builtin_caller_new(jule::Ptr<_1c974c73d_Eval>& _27528_e, jule::Ptr<_1e43699b1_FnCallExpr>& _27543_fc, jule::Ptr<_1c974abc0_Data>& _27565_d) {
	if ((_27543_fc.get()._field_generics.len() > 0LL)) {
		_1c974cc16_push_err(_27528_e.ptr(), _27543_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_27543_fc.get()._field_args.len() < 1LL)) {
		_1c974cc16_push_err(_27528_e.ptr(), _27543_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4))}));
		return nullptr;
	};
	if ((_27543_fc.get()._field_args.len() > 2LL)) {
		_1c974cc16_push_err(_27528_e.ptr(), _27543_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c974abc0_Data> _28713_t = _1c976602b_eval_expr_kind(_27528_e, jule::Any(_27543_fc.get()._field_args[0LL].get()._field_kind));;
	if ((_28713_t == nullptr)) {
		return nullptr;
	};
	if ((!(_28713_t.get()._field_decl))) {
		_1c974cc16_push_err(_27528_e.ptr(), _27543_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((!(_1c978a6e3_is_valid_for_sptr_type(_28713_t.get()._field_kind)))) {
		jule::Ptr<_1e43462ea_StructIns> _29817_s = _1c9777999_strct(_28713_t.get()._field_kind.ptr());;
		if ((((_29817_s != nullptr) && (_29817_s.get()._field_decl != nullptr)) && _29817_s.get()._field_decl.get()._field_cpp_linked)) {
			_1c974cc16_push_err(_27528_e.ptr(), _27543_fc.get()._field_args[0LL].get()._field_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
		};
		return nullptr;
	};
	_27565_d.get()._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(jule::new_ptr<_1c977c460_Sptr>(_1c977c460_Sptr{._field_elem=_28713_t.get()._field_kind}), 6)});
	if ((_27543_fc.get()._field_args.len() == 2LL)) {
		jule::Ptr<_1c97746ee_TypeKind> _31217_old = _27528_e.get()._field_prefix;;
		_27528_e.get()._field_prefix=_28713_t.get()._field_kind;
		jule::Ptr<_1c974abc0_Data> _31517_init = _1c9766647_eval_expr(_27528_e, _27543_fc.get()._field_args[1LL]);;
		_27528_e.get()._field_prefix=_31217_old;
		if ((_31517_init != nullptr)) {
			jule::Ptr<_20cd9e6ec_Token> _32021_token = _27543_fc.get()._field_args[1LL].get()._field_token;;
			;
			_1e46b6e73_check_validity_for_init_expr(_27528_e.get()._field_s, (!(_27528_e.get()._field_immutable)),false,_28713_t.get()._field_kind,_31517_init,_32021_token);
			_1e46b516e_check_assign_type(_27528_e.get()._field_s, false,_28713_t.get()._field_kind,_31517_init,_32021_token);
			_27565_d.get()._field_model=jule::Any(jule::new_ptr<_1e437d420_BuiltinNewCallExprModel>(_1e437d420_BuiltinNewCallExprModel{._field_kind=_28713_t.get()._field_kind, ._field_init=jule::Any(_31517_init.get()._field_model)}));
		};
	} else {
		_27565_d.get()._field_model=jule::Any(jule::new_ptr<_1e437d420_BuiltinNewCallExprModel>(_1e437d420_BuiltinNewCallExprModel{._field_kind=_28713_t.get()._field_kind, }));
	};
	return _27565_d;
}



inline jule::Ptr<_1c974abc0_Data> _1c9833b54_builtin_caller_panic(jule::Ptr<_1c974c73d_Eval>& _34030_e, jule::Ptr<_1e43699b1_FnCallExpr>& _34045_fc, jule::Ptr<_1c974abc0_Data>& ) {
	if ((_34045_fc.get()._field_generics.len() > 0LL)) {
		_1c974cc16_push_err(_34030_e.ptr(), _34045_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_34045_fc.get()._field_args.len() < 1LL)) {
		_1c974cc16_push_err(_34030_e.ptr(), _34045_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7))}));
		return nullptr;
	};
	if ((_34045_fc.get()._field_args.len() > 1LL)) {
		_1c974cc16_push_err(_34030_e.ptr(), _34045_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c974abc0_Data> _35213_expr = _1c9766647_eval_expr(_34030_e, _34045_fc.get()._field_args[0LL]);;
	if ((_35213_expr == nullptr)) {
		return nullptr;
	};
	if (((_1c97767ab_prim(_35213_expr.get()._field_kind.ptr()) == nullptr) || (!(_1c977be10_is_str(_1c97767ab_prim(_35213_expr.get()._field_kind.ptr()).ptr()))))) {
		_1c974cc16_push_err(_34030_e.ptr(), _34045_fc.get()._field_token,jule::Str("panic function only accepts strings", 35),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c974abc0_Data> _36113_d = _1c9771520_build_void_data();;
	_36113_d.get()._field_model=jule::Any(jule::new_ptr<_1e437d60c_BuiltinPanicCallExprModel>(_1e437d60c_BuiltinPanicCallExprModel{._field_token=_34045_fc.get()._field_token, ._field_expr=jule::Any(_35213_expr.get()._field_model)}));
	return _36113_d;
}



inline jule::Ptr<_1c974abc0_Data> _1c9833c86_builtin_caller_make(jule::Ptr<_1c974c73d_Eval>& _36929_e, jule::Ptr<_1e43699b1_FnCallExpr>& _36944_fc, jule::Ptr<_1c974abc0_Data>& _36966_d) {
	if ((_36944_fc.get()._field_generics.len() > 0LL)) {
		_1c974cc16_push_err(_36929_e.ptr(), _36944_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_36944_fc.get()._field_args.len() < 2LL)) {
		if ((_36944_fc.get()._field_args.len() == 1LL)) {
			_1c974cc16_push_err(_36929_e.ptr(), _36944_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4))}));
			return nullptr;
		};
		_1c974cc16_push_err(_36929_e.ptr(), _36944_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10))}));
		return nullptr;
	};
	jule::Ptr<_1c974abc0_Data> _38213_t = _1c976602b_eval_expr_kind(_36929_e, jule::Any(_36944_fc.get()._field_args[0LL].get()._field_kind));;
	if ((_38213_t == nullptr)) {
		return nullptr;
	};
	{
		
		if ((!(_38213_t.get()._field_decl))) {
			_case_begin_1cc440d46:;
			{
				goto _match_end_1cc4410ee;
			}
		}
		else if ((_1c97774c1_slc(_38213_t.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cc440dac:;
			{
				if ((_36944_fc.get()._field_args.len() > 3LL)) {
					_1c974cc16_push_err(_36929_e.ptr(), _36944_fc.get()._field_args[3LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				};
				goto _julec_label_cont;
			}
		}
		else if (((_1c97767ab_prim(_38213_t.get()._field_kind.ptr()) != nullptr) && _1c977be10_is_str(_1c97767ab_prim(_38213_t.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1cc440e23:;
			{
				if ((_36944_fc.get()._field_args.len() > 2LL)) {
					_1c974cc16_push_err(_36929_e.ptr(), _36944_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				};
				goto _julec_label_cont;
			}
		}
		_match_end_1cc4410ee:;
	};
	_1c974cc16_push_err(_36929_e.ptr(), _36944_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	return nullptr;
	_julec_label_cont:;
	_36966_d.get()._field_kind=_38213_t.get()._field_kind;
	jule::Ptr<_1c974abc0_Data> _40613_len = _1c9766647_eval_expr(_1e46b4866_evalp(_36929_e.get()._field_s, _36929_e.get()._field_lookup,_38213_t.get()._field_kind), _36944_fc.get()._field_args[1LL]);;
	if ((_40613_len == nullptr)) {
		return nullptr;
	};
	_1c9755b0e_check_integer_indexing_by_data(_36929_e.ptr(), _40613_len,_36944_fc.get()._field_args[1LL].get()._field_token);
	jule::Ptr<_1e437d9d6_BuiltinMakeCallExprModel> _41313_model = jule::new_ptr<_1e437d9d6_BuiltinMakeCallExprModel>(_1e437d9d6_BuiltinMakeCallExprModel{._field_kind=_38213_t.get()._field_kind, ._field_len=jule::Any(_40613_len.get()._field_model), });;
	_36966_d.get()._field_model=jule::Any(_41313_model);
	if ((_36944_fc.get()._field_args.len() == 3LL)) {
		jule::Ptr<_1c974abc0_Data> _41917_cap = _1c9766647_eval_expr(_1e46b4866_evalp(_36929_e.get()._field_s, _36929_e.get()._field_lookup,_38213_t.get()._field_kind), _36944_fc.get()._field_args[2LL]);;
		if ((_41917_cap == nullptr)) {
			return _36966_d;
		};
		_1c9755b0e_check_integer_indexing_by_data(_36929_e.ptr(), _41917_cap,_36944_fc.get()._field_args[2LL].get()._field_token);
		_41313_model.get()._field_cap=jule::Any(_41917_cap.get()._field_model);
	};
	return _36966_d;
}



inline jule::Ptr<_1c974abc0_Data> _1c9833db8_builtin_caller_append(jule::Ptr<_1c974c73d_Eval>& _42931_e, jule::Ptr<_1e43699b1_FnCallExpr>& _42946_fc, jule::Ptr<_1c974abc0_Data>& _42968_d) {
	if ((_42946_fc.get()._field_generics.len() > 0LL)) {
		_1c974cc16_push_err(_42931_e.ptr(), _42946_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_42946_fc.get()._field_args.len() < 2LL)) {
		if ((_42946_fc.get()._field_args.len() == 1LL)) {
			_1c974cc16_push_err(_42931_e.ptr(), _42946_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		};
		_1c974cc16_push_err(_42931_e.ptr(), _42946_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	};
	jule::Ptr<_1c974abc0_Data> _44213_t = _1c9766647_eval_expr(_42931_e, _42946_fc.get()._field_args[0LL]);;
	if ((_44213_t == nullptr)) {
		return nullptr;
	};
	if ((_1c97774c1_slc(_44213_t.get()._field_kind.ptr()) == nullptr)) {
		_1c974cc16_push_err(_42931_e.ptr(), _42946_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e4383018_FnIns> _45213_f = jule::new_ptr<_1e4383018_FnIns>(_1e4383018_FnIns{._field_params=jule::Slice<jule::Ptr<_1e438217c_ParamIns>>::make({jule::new_ptr<_1e438217c_ParamIns>(_1e438217c_ParamIns{._field_decl=jule::new_ptr<_1e4380389_Param>(_1e4380389_Param{._field_mutable=true, }), ._field_kind=_44213_t.get()._field_kind}),jule::new_ptr<_1e438217c_ParamIns>(_1e438217c_ParamIns{._field_decl=jule::new_ptr<_1e4380389_Param>(_1e4380389_Param{._field_mutable=true, ._field_variadic=true, }), ._field_kind=_1c97774c1_slc(_44213_t.get()._field_kind.ptr()).get()._field_elem})}), ._field_result=_44213_t.get()._field_kind, ._field_caller=jule::Fn<jule::Ptr<_1c974abc0_Data>(jule::Ptr<_1c974c73d_Eval>&,jule::Ptr<_1e43699b1_FnCallExpr>&,jule::Ptr<_1c974abc0_Data>&)>(_1c980278d_builtin_caller_common_plain), });;
	_42968_d.get()._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_45213_f, 1)});
	_42968_d.get()._field_model=jule::Any(jule::new_ptr<_1e437c793_CommonIdentExprModel>(_1e437c793_CommonIdentExprModel{._field_ident=jule::Str("append", 6)}));
	_42968_d=_1c980278d_builtin_caller_common_plain(_42931_e,_42946_fc,_42968_d);
	if ((_42968_d != nullptr)) {
		jule::Ptr<_1e4354902_FnCallExprModel> _48017_model = _42968_d.get()._field_model.operator jule::Ptr<_1e4354902_FnCallExprModel>();;
		_42968_d.get()._field_model=jule::Any(jule::new_ptr<_1e437dbc3_BuiltinAppendCallExprModel>(_1e437dbc3_BuiltinAppendCallExprModel{._field_dest=jule::Any(_48017_model.get()._field_args[0LL]), ._field_elements=jule::Any(_48017_model.get()._field_args[1LL])}));
	};
	return _42968_d;
}



inline jule::Ptr<_1c974abc0_Data> _1c9833eea_caller_copy_slice(jule::Ptr<_1c974abc0_Data>& _48927_dest, jule::Ptr<_1c974c73d_Eval>& _48945_e, jule::Ptr<_1e43699b1_FnCallExpr>& _48960_fc, jule::Ptr<_1c974abc0_Data>& _48982_d) {
	if ((!(_48927_dest.get()._field_mutable))) {
		_1c974cc16_push_err(_48945_e.ptr(), _48960_fc.get()._field_args[0LL].get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c974abc0_Data> _49413_src = _1c9766647_eval_expr(_48945_e, _48960_fc.get()._field_args[1LL]);;
	if ((_49413_src == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1c977cdbc_Slc> _49813_slc = _1c97774c1_slc(_49413_src.get()._field_kind.ptr());;
	if ((_49813_slc != nullptr)) {
		if (((!(_49413_src.get()._field_mutable)) && _1c9775a96_mutable(_49813_slc.get()._field_elem.ptr()))) {
			_1c974cc16_push_err(_48945_e.ptr(), _48960_fc.get()._field_args[1LL].get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
		};
		if ((!(_1c9774db4_equals(_48927_dest.get()._field_kind, _49413_src.get()._field_kind)))) {
			_1c974cc16_push_err(_48945_e.ptr(), _48960_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_48927_dest.get()._field_kind.ptr())),jule::Any(_1c9774aa6_to_str(_49413_src.get()._field_kind.ptr()))}));
		};
	} else {
		jule::Ptr<_1c9778e51_Prim> _50813_dest_prim = _1c97767ab_prim(_1c97774c1_slc(_48927_dest.get()._field_kind.ptr()).get()._field_elem.ptr());;
		jule::Ptr<_1c9778e51_Prim> _50913_prim = _1c97767ab_prim(_49413_src.get()._field_kind.ptr());;
		if (((((_50813_dest_prim == nullptr) || (_50913_prim == nullptr)) || (!(_1c977be10_is_str(_50913_prim.ptr())))) || (!(_1c977a4d5_is_u8(_50813_dest_prim.ptr()))))) {
			_1c974cc16_push_err(_48945_e.ptr(), _48960_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_48927_dest.get()._field_kind.ptr())),jule::Any(_1c9774aa6_to_str(_49413_src.get()._field_kind.ptr()))}));
		};
	};
	_48982_d.get()._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("int", 3)), 5)});
	_48982_d.get()._field_model=jule::Any(jule::new_ptr<_1e437ddb0_BuiltinCopyCallExprModel>(_1e437ddb0_BuiltinCopyCallExprModel{._field_dest=_48927_dest, ._field_src=_49413_src}));
	return _48982_d;
}



inline jule::Ptr<_1c974abc0_Data> _1c983412c_caller_copy_str(jule::Ptr<_1c974abc0_Data>& _52325_dest, jule::Ptr<_1c974c73d_Eval>& _52343_e, jule::Ptr<_1e43699b1_FnCallExpr>& _52358_fc, jule::Ptr<_1c974abc0_Data>& _52380_d) {
	if ((!(_52325_dest.get()._field_mutable))) {
		_1c974cc16_push_err(_52343_e.ptr(), _52358_fc.get()._field_args[0LL].get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c974abc0_Data> _52813_src = _1c9766647_eval_expr(_52343_e, _52358_fc.get()._field_args[1LL]);;
	if ((_52813_src == nullptr)) {
		return nullptr;
	};
	{
		
		if ((_1c97767ab_prim(_52813_src.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cc5c127e:;
			{
				if (_1c977be10_is_str(_1c97767ab_prim(_52813_src.get()._field_kind.ptr()).ptr())) {
					goto _julec_label_end;
				};
			}
		}
		else if ((_1c97774c1_slc(_52813_src.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cc5c12e5:;
			{
				jule::Ptr<_1c977cdbc_Slc> _53817_slc = _1c97774c1_slc(_52813_src.get()._field_kind.ptr());;
				if (((_1c97767ab_prim(_53817_slc.get()._field_elem.ptr()) != nullptr) && _1c977a4d5_is_u8(_1c97767ab_prim(_53817_slc.get()._field_elem.ptr()).ptr()))) {
					goto _julec_label_end;
				};
			}
		}
		_match_end_1cc5c15d1:;
	};
	_1c974cc16_push_err(_52343_e.ptr(), _52358_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_52325_dest.get()._field_kind.ptr())),jule::Any(_1c9774aa6_to_str(_52813_src.get()._field_kind.ptr()))}));
	_julec_label_end:;
	_52380_d.get()._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("int", 3)), 5)});
	_52380_d.get()._field_model=jule::Any(jule::new_ptr<_1e437ddb0_BuiltinCopyCallExprModel>(_1e437ddb0_BuiltinCopyCallExprModel{._field_dest=_52325_dest, ._field_src=_52813_src}));
	return _52380_d;
}



inline jule::Ptr<_1c974abc0_Data> _1c983425e_builtin_caller_copy(jule::Ptr<_1c974c73d_Eval>& _55329_e, jule::Ptr<_1e43699b1_FnCallExpr>& _55344_fc, jule::Ptr<_1c974abc0_Data>& _55366_d) {
	if ((_55344_fc.get()._field_generics.len() > 0LL)) {
		_1c974cc16_push_err(_55329_e.ptr(), _55344_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_55344_fc.get()._field_args.len() < 2LL)) {
		if ((_55344_fc.get()._field_args.len() == 1LL)) {
			_1c974cc16_push_err(_55329_e.ptr(), _55344_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		};
		_1c974cc16_push_err(_55329_e.ptr(), _55344_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	};
	if ((_55344_fc.get()._field_args.len() > 2LL)) {
		_1c974cc16_push_err(_55329_e.ptr(), _55344_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c974abc0_Data> _56913_dest = _1c9766647_eval_expr(_55329_e, _55344_fc.get()._field_args[0LL]);;
	{
		
		if ((_56913_dest == nullptr)) {
			_case_begin_1cc5cc91c:;
			{
				return nullptr;
			}
		}
		else if ((_1c97774c1_slc(_56913_dest.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1cc5cc81d:;
			{
				return _1c9833eea_caller_copy_slice(_56913_dest,_55329_e,_55344_fc,_55366_d);
			}
		}
		else if (((_1c97767ab_prim(_56913_dest.get()._field_kind.ptr()) != nullptr) && _1c977be10_is_str(_1c97767ab_prim(_56913_dest.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1cc5cc884:;
			{
				return _1c983412c_caller_copy_str(_56913_dest,_55329_e,_55344_fc,_55366_d);
			}
		}
		else {
			_case_begin_1cc5cb91b:;
			{
				_1c974cc16_push_err(_55329_e.ptr(), _55344_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1cc5cb894:;
	};
}



inline jule::Ptr<_1c974abc0_Data> _1c9834391_builtin_caller_clone(jule::Ptr<_1c974c73d_Eval>& _58330_e, jule::Ptr<_1e43699b1_FnCallExpr>& _58345_fc, jule::Ptr<_1c974abc0_Data>& ) {
	if ((_58345_fc.get()._field_generics.len() > 0LL)) {
		_1c974cc16_push_err(_58330_e.ptr(), _58345_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_58345_fc.get()._field_args.len() < 1LL)) {
		_1c974cc16_push_err(_58330_e.ptr(), _58345_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_58345_fc.get()._field_args.len() > 1LL)) {
		_1c974cc16_push_err(_58330_e.ptr(), _58345_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c974abc0_Data> _59613_d = _1c976602b_eval_expr_kind(_58330_e, jule::Any(_58345_fc.get()._field_args[0LL].get()._field_kind));;
	if ((_59613_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1c97762d3_supports_cloning(_59613_d.get()._field_kind.ptr())))) {
		{
			
			if ((_1c97774c1_slc(_59613_d.get()._field_kind.ptr()) != nullptr) || (_1c9777e72_map(_59613_d.get()._field_kind.ptr()) != nullptr) || (_1c977725c_arr(_59613_d.get()._field_kind.ptr()) != nullptr) || (_1c9776a20_sptr(_59613_d.get()._field_kind.ptr()) != nullptr)) {
				_case_begin_1cc5d42b4:;
				{
					{
						_1c974cc16_push_err(_58330_e.ptr(), _58345_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ has internally types which is not supports cloning", 57),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_59613_d.get()._field_kind.ptr()))}));
					};
				}
			}
			else if ((_1c9777999_strct(_59613_d.get()._field_kind.ptr()) != nullptr)) {
				_case_begin_1cc5d3b87:;
				{
					{
						_1c974cc16_push_err(_58330_e.ptr(), _58345_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ is not derives @", 23),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_59613_d.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			else {
				_case_begin_1cc5d3b21:;
				{
					{
						_1c974cc16_push_err(_58330_e.ptr(), _58345_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ is not support cloning", 29),jule::Slice<jule::Any>::make({jule::Any(_1c9774aa6_to_str(_59613_d.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			_match_end_1cc5d3a55:;
		};
	};
	_59613_d.get()._field_mutable=true;
	_59613_d.get()._field_model=jule::Any(jule::new_ptr<_1e437d233_BuiltinCloneCallExprModel>(_1e437d233_BuiltinCloneCallExprModel{._field_expr=jule::Any(_59613_d.get()._field_model)}));
	return _59613_d;
}



inline jule::Ptr<_1c974abc0_Data> _1c98344c3_builtin_caller_assert(jule::Ptr<_1c974c73d_Eval>& _62931_e, jule::Ptr<_1e43699b1_FnCallExpr>& _62946_fc, jule::Ptr<_1c974abc0_Data>& ) {
	if ((_62946_fc.get()._field_generics.len() > 0LL)) {
		_1c974cc16_push_err(_62931_e.ptr(), _62946_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_62946_fc.get()._field_args.len() < 1LL)) {
		_1c974cc16_push_err(_62931_e.ptr(), _62946_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_62946_fc.get()._field_args.len() > 2LL)) {
		_1c974cc16_push_err(_62931_e.ptr(), _62946_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c974abc0_Data> _64113_expr = _1c9766647_eval_expr(_62931_e, _62946_fc.get()._field_args[0LL]);;
	if ((_64113_expr == nullptr)) {
		return nullptr;
	};
	if (((_1c97767ab_prim(_64113_expr.get()._field_kind.ptr()) == nullptr) || (!(_1c977bb9b_is_bool(_1c97767ab_prim(_64113_expr.get()._field_kind.ptr()).ptr()))))) {
		_1c974cc16_push_err(_62931_e.ptr(), _62946_fc.get()._field_token,jule::Str("assertion requires boolean expression", 37),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e437d7e9_BuiltinAssertCallExprModel> _65013_model = jule::new_ptr<_1e437d7e9_BuiltinAssertCallExprModel>(_1e437d7e9_BuiltinAssertCallExprModel{._field_token=_62946_fc.get()._field_token, ._field_expr=jule::Any(_64113_expr.get()._field_model), ._field_log=jule::Str("assertion failed", 16)});;
	if ((_62946_fc.get()._field_args.len() == 2LL)) {
		jule::Ptr<_1c974abc0_Data> _65817_log = _1c9766647_eval_expr(_62931_e, _62946_fc.get()._field_args[1LL]);;
		if ((_65817_log == nullptr)) {
			return nullptr;
		};
		if ((((!(_1c974b583_is_const(_65817_log.ptr()))) || (_1c97767ab_prim(_65817_log.get()._field_kind.ptr()) == nullptr)) || (!(_1c977be10_is_str(_1c97767ab_prim(_65817_log.get()._field_kind.ptr()).ptr()))))) {
			_1c974cc16_push_err(_62931_e.ptr(), _62946_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9)),jule::Any(_1c9774aa6_to_str(_65817_log.get()._field_kind.ptr()))}));
			return nullptr;
		};
		_65013_model.get()._field_log=_1c968d64b_read_str(_65817_log.get()._field_constant.ptr());
	};
	jule::Ptr<_1c974abc0_Data> _67113_d = _1c9771520_build_void_data();;
	_67113_d.get()._field_model=jule::Any(_65013_model);
	return _67113_d;
}



inline jule::Ptr<_1c974abc0_Data> _1c9834605_builtin_caller_std_mem_size_of(jule::Ptr<_1c974c73d_Eval>& _67640_e, jule::Ptr<_1e43699b1_FnCallExpr>& _67655_fc, jule::Ptr<_1c974abc0_Data>& ) {
	if ((_67655_fc.get()._field_generics.len() > 0LL)) {
		_1c974cc16_push_err(_67640_e.ptr(), _67655_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c974abc0_Data> _68013_result = jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("uint", 4)), 5)}), });;
	if ((_67655_fc.get()._field_args.len() < 1LL)) {
		_1c974cc16_push_err(_67640_e.ptr(), _67655_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9))}));
		return _68013_result;
	};
	if ((_67655_fc.get()._field_args.len() > 1LL)) {
		_1c974cc16_push_err(_67640_e.ptr(), _67655_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c974abc0_Data> _69213_d = _1c976602b_eval_expr_kind(_67640_e, jule::Any(_67655_fc.get()._field_args[0LL].get()._field_kind));;
	if ((_69213_d == nullptr)) {
		return _68013_result;
	};
	_68013_result.get()._field_model=jule::Any(jule::new_ptr<_1e437be9b_SizeofExprModel>(_1e437be9b_SizeofExprModel{._field_expr=jule::Any(_69213_d.get()._field_model)}));
	return _68013_result;
}



inline jule::Ptr<_1c974abc0_Data> _1c9834737_builtin_caller_std_mem_align_of(jule::Ptr<_1c974c73d_Eval>& _70141_e, jule::Ptr<_1e43699b1_FnCallExpr>& _70156_fc, jule::Ptr<_1c974abc0_Data>& ) {
	if ((_70156_fc.get()._field_generics.len() > 0LL)) {
		_1c974cc16_push_err(_70141_e.ptr(), _70156_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c974abc0_Data> _70513_result = jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("uint", 4)), 5)}), });;
	if ((_70156_fc.get()._field_args.len() < 1LL)) {
		_1c974cc16_push_err(_70141_e.ptr(), _70156_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9))}));
		return _70513_result;
	};
	if ((_70156_fc.get()._field_args.len() > 1LL)) {
		_1c974cc16_push_err(_70141_e.ptr(), _70156_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c974abc0_Data> _71713_d = _1c976602b_eval_expr_kind(_70141_e, jule::Any(_70156_fc.get()._field_args[0LL].get()._field_kind));;
	if ((_71713_d == nullptr)) {
		return _70513_result;
	};
	_70513_result.get()._field_model=jule::Any(jule::new_ptr<_1e437e70c_AlignofExprModel>(_1e437e70c_AlignofExprModel{._field_expr=jule::Any(_71713_d.get()._field_model)}));
	return _70513_result;
}



inline jule::Ptr<_1c974abc0_Data> _1c9834869_builtin_caller_std_mem_free(jule::Ptr<_1c974c73d_Eval>& _72637_e, jule::Ptr<_1e43699b1_FnCallExpr>& _72652_fc, jule::Ptr<_1c974abc0_Data>& ) {
	if ((_72652_fc.get()._field_generics.len() > 0LL)) {
		_1c974cc16_push_err(_72637_e.ptr(), _72652_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_72652_fc.get()._field_args.len() < 1LL)) {
		_1c974cc16_push_err(_72637_e.ptr(), _72652_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1))}));
		return nullptr;
	};
	if ((_72652_fc.get()._field_args.len() > 1LL)) {
		_1c974cc16_push_err(_72637_e.ptr(), _72652_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c974abc0_Data> _73913_d = _1c976602b_eval_expr_kind(_72637_e, jule::Any(_72652_fc.get()._field_args[0LL].get()._field_kind));;
	if ((_73913_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1c977606e_performs_rc(_73913_d.get()._field_kind.ptr())))) {
		_1c974cc16_push_err(_72637_e.ptr(), _72652_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c974abc0_Data> _74813_result = _1c9771520_build_void_data();;
	_74813_result.get()._field_model=jule::Any(jule::new_ptr<_1e437eeb0_FreeExprModel>(_1e437eeb0_FreeExprModel{._field_expr=jule::Any(_73913_d.get()._field_model)}));
	return _74813_result;
}



inline jule::Ptr<_1c974abc0_Data> _1c983499b_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_1c974c73d_Eval>& _75351_e, jule::Ptr<_1e43699b1_FnCallExpr>& _75366_fc, jule::Ptr<_1c974abc0_Data>& ) {
	if ((_75366_fc.get()._field_generics.len() > 0LL)) {
		_1c974cc16_push_err(_75351_e.ptr(), _75366_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_75366_fc.get()._field_args.len() < 1LL)) {
		_1c974cc16_push_err(_75351_e.ptr(), _75366_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_75366_fc.get()._field_args.len() > 1LL)) {
		_1c974cc16_push_err(_75351_e.ptr(), _75366_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c974abc0_Data> _76613_d = _1c976602b_eval_expr_kind(_75351_e, jule::Any(_75366_fc.get()._field_args[0LL].get()._field_kind));;
	if ((_76613_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1c978ac54_is_builtin_str_convertable(_76613_d.get()._field_kind)))) {
		_1c974cc16_push_err(_75351_e.ptr(), _75366_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1c974abc0_Data>(_1c974abc0_Data{._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(_1c978b370_build_prim_type(jule::Str("str", 3)), 5)}), ._field_model=jule::Any(jule::new_ptr<_1e437ead6_IntegratedToStrExprModel>(_1e437ead6_IntegratedToStrExprModel{._field_expr=jule::Any(_76613_d.get()._field_model)})), });
}



inline jule::Ptr<_1c974abc0_Data> _1c9834cba_builtin_caller_std_jule_integrated_emit(jule::Ptr<_1c974c73d_Eval>& _78449_e, jule::Ptr<_1e43699b1_FnCallExpr>& _78464_fc, jule::Ptr<_1c974abc0_Data>& ) {
	if ((!(_1c974d651_is_unsafe(_78449_e.ptr())))) {
		_1c974cc16_push_err(_78449_e.ptr(), _78464_fc.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	if ((_78464_fc.get()._field_args.len() < 1LL)) {
		_1c974cc16_push_err(_78449_e.ptr(), _78464_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4))}));
		return nullptr;
	};
	jule::Ptr<_1c974abc0_Data> _79413_d = _1c9766647_eval_expr(_78449_e, _78464_fc.get()._field_args[0LL]);;
	if ((_79413_d == nullptr)) {
		return nullptr;
	};
	if (((_1c97767ab_prim(_79413_d.get()._field_kind.ptr()) == nullptr) || (!(_1c977be10_is_str(_1c97767ab_prim(_79413_d.get()._field_kind.ptr()).ptr()))))) {
		_1c974cc16_push_err(_78449_e.ptr(), _78464_fc.get()._field_args[0LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1c9774aa6_to_str(_79413_d.get()._field_kind.ptr()))}));
		return nullptr;
	};
	if (((!(_1c974b583_is_const(_79413_d.ptr()))) || (!(_1c96909e4_is_str(_79413_d.get()._field_constant.ptr()))))) {
		_1c974cc16_push_err(_78449_e.ptr(), _78464_fc.get()._field_args[0LL].get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1c974abc0_Data> _80913_r = _1c9771520_build_void_data();;
	if ((_78464_fc.get()._field_generics.len() != 0LL)) {
		if ((!(_1e46b1214_check_generic_quantity(_78449_e.get()._field_s.ptr(), 1LL,static_cast<jule::I64>(_78464_fc.get()._field_generics.len()),_78464_fc.get()._field_token)))) {
			return nullptr;
		};
		jule::Ptr<_1c977858d_TypeSymbol> _81517_k = _1e438744b_build_type(_78464_fc.get()._field_generics[0LL]);;
		if ((!(_1e46b34ad_check_type(_78449_e.get()._field_s, _81517_k,_78449_e.get()._field_lookup)))) {
			return nullptr;
		};
		_80913_r.get()._field_kind=_81517_k.get()._field_kind;
	};
	jule::Ptr<_1e437ecc3_BackendEmitExprModel> _82213_model = jule::new_ptr<_1e437ecc3_BackendEmitExprModel>(_1e437ecc3_BackendEmitExprModel{._field_code=_1c968d64b_read_str(_79413_d.get()._field_constant.ptr()), });;
	if ((_78464_fc.get()._field_args.len() > 1LL)) {
		_82213_model.get()._field_exprs=jule::Slice<jule::Any>::alloc(0LL,(_78464_fc.get()._field_args.len() - 1LL));
		{
			auto expr = _78464_fc.get()._field_args.slice(1LL);
			auto it = expr.begin();
			_iter_begin_1cc614ec6:;
			if (it != expr.end()) {
				jule::Ptr<_1e43659e0_Expr> _82821_arg = *it;
				{
					jule::Ptr<_1c974abc0_Data> _82921_argd = _1c976602b_eval_expr_kind(_78449_e, jule::Any(_82821_arg.get()._field_kind));;
					if ((_82921_argd == nullptr)) {
						return nullptr;
					};
					_82213_model.get()._field_exprs = jule::alloc_for_append(_82213_model.get()._field_exprs,1);_82213_model.get()._field_exprs.__push(jule::Any(_82921_argd.get()._field_model));;
				}
				_iter_next_1cc614ec6:;
				++it;
				goto _iter_begin_1cc614ec6;
			}
			_iter_end_1cc614ec6:;
		};
	};
	_80913_r.get()._field_model=jule::Any(_82213_model);
	return _80913_r;
}



inline jule::Ptr<_1c974abc0_Data> _1c98351c7_builtin_caller_std_debug_out(jule::Ptr<_1c974c73d_Eval>& _84138_e, jule::Ptr<_1e43699b1_FnCallExpr>& _84153_fc, jule::Ptr<_1c974abc0_Data>& _84175_d) {
	_84175_d=_1c9803629_builtin_caller_out(_84138_e,_84153_fc,_84175_d);
	if ((_84175_d == nullptr)) {
		return nullptr;
	};
	_84175_d.get()._field_model.operator jule::Ptr<_1e437cd59_BuiltinOutCallExprModel>().get()._field_debug=true;
	return _84175_d;
}



inline jule::Ptr<_1c974abc0_Data> _1c98355e5_builtin_caller_std_debug_outln(jule::Ptr<_1c974c73d_Eval>& _85140_e, jule::Ptr<_1e43699b1_FnCallExpr>& _85155_fc, jule::Ptr<_1c974abc0_Data>& _85177_d) {
	_85177_d=_1c980375b_builtin_caller_outln(_85140_e,_85155_fc,_85177_d);
	if ((_85177_d == nullptr)) {
		return nullptr;
	};
	_85177_d.get()._field_model.operator jule::Ptr<_1e437d046_BuiltinOutlnCallExprModel>().get()._field_debug=true;
	return _85177_d;
}



inline jule::Bool _20cdd4897_find_module_file(jule::Slice<jule::Ptr<_2252b727e_DirEntry>>& _1226_dirents) {
	{
		auto &expr = _1226_dirents;
		auto it = expr.begin();
		_iter_begin_1cc61a84a:;
		if (it != expr.end()) {
			jule::Ptr<_2252b727e_DirEntry> &_1312_d = *it;
			{
				if (((!(_2252e2012_is_dir(_1312_d.get()._field_stat.ptr()))) && (_1312_d.get()._field_name == jule::Str("jule.mod", 8)))) {
					return true;
				};
			}
			_iter_next_1cc61a84a:;
			++it;
			goto _iter_begin_1cc61a84a;
		}
		_iter_end_1cc61a84a:;
	};
	return false;
}



inline jule::Str _20cdd703c_find_module_file_deep(jule::Str _2434_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_2252b727e_DirEntry>> _2617_dirents = ({
				auto except = static__2254a5769_read(_2434_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1cc619e43;
				} jule::Slice<jule::Ptr<_2252b727e_DirEntry>>();});
			});;
			jule::Bool _3013_exist = _20cdd4897_find_module_file(_2617_dirents);;
			if (_3013_exist) {
				return _2434_path;
			};
			jule::I64 _3513_n = _2434_path.len();;
			_2434_path=_20b981357_dir(_2434_path);
			if ((_2434_path.len() == _3513_n)) {
				goto _iter_end_1cc619e43;
			};
		}
	_iter_next_1cc619e43:;
	}
	_iter_end_1cc619e43:;;
	return jule::Str();
}



inline jule::Slice<_20ca8ec5b_Log> _20cdd815e_check_module_file(jule::Str _4626_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__2252c944a_read(_20b961436_join(jule::Slice<jule::Str>::make({_4626_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_20ca8ec5b_Log>::make({_20ca8ec5b_Log{._field_kind=static_cast<jule::I64>(0LL), ._field_text=jule::Str("module file could not checked because of a problem", 50), }});
		} jule::Slice<jule::U8>();});
	});;
	jule::Str _549_s = _20c8b3321_trim(static_cast<jule::Str>(_479_bytes),jule::Str(" \n\r\t\v", 5));;
	if ((_549_s.len() != 0LL)) {
		return jule::Slice<_20ca8ec5b_Log>::make({_20ca8ec5b_Log{._field_kind=static_cast<jule::I64>(0LL), ._field_text=jule::Str("module file has syntax error(s)", 31), }});
	};
	return nullptr;
}



inline jule::Ptr<_1c9c90214_FileInfo> _1c9cd518d_parse_file(jule::Ptr<_20cda4adc_File> _2323_f) {
	if ((_2323_f == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1c9c90214_FileInfo> _2813_finf = jule::new_ptr<_1c9c90214_FileInfo>(_1c9c90214_FileInfo{});;
	std::tie(_2813_finf.get()._field_ast,_2813_finf.get()._field_errors) = _1c9cd56dd_parse_fileset(_2323_f);
	if ((_2813_finf.get()._field_errors.len() > 0LL)) {
		_2813_finf.get()._field_ast=nullptr;
	};
	return _2813_finf;
}



inline std::tuple<jule::Ptr<_1e433079b_Ast>,jule::Slice<_20ca8ec5b_Log>> _1c9cd56dd_parse_fileset(jule::Ptr<_20cda4adc_File> _6022_f) {
	jule::Ptr<_1c9d044ed_Parser> _6113_p = jule::new_ptr<_1c9d044ed_Parser>(_1c9d044ed_Parser{});;
	_1c9d13661_parse(_6113_p, _6022_f);
	return std::make_tuple(_6113_p.get()._field_ast,_6113_p.get()._field_errors);
}



inline jule::Ptr<_1e43702ad_ScopeTree> _1c9cd6425_new_scope(void) {
	return jule::new_ptr<_1e43702ad_ScopeTree>();
}



inline std::tuple<jule::Bool,jule::Bool> _1c9cd6700_is_st(jule::Ptr<_20cd9e6ec_Token> _4710_current, jule::Ptr<_20cd9e6ec_Token> _4727_prev) {
	jule::Bool _4743_ok = jule::Bool();
	jule::Bool _4753_terminated = jule::Bool();
	_4743_ok=((_4710_current.get()._field_id == static_cast<jule::U64>(5LLU)) || (_4727_prev.get()._field_row < _4710_current.get()._field_row));
	_4753_terminated=(_4710_current.get()._field_id == static_cast<jule::U64>(5LLU));
	return std::make_tuple(_4743_ok,_4753_terminated);
}



inline jule::Bool _1c9cd6a63_prev_is_incomplete_expr(jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _5329_tokens, jule::I64& _5348_i) {
	if (((_5348_i > 1LL) && (_5329_tokens[(_5348_i - 2LL)].get()._field_id == static_cast<jule::U64>(23LLU)))) {
		return false;
	};
	{
		jule::Ptr<_20cd9e6ec_Token> _5913_prev = _5329_tokens[(_5348_i - 1LL)];;
		return ((_5913_prev.get()._field_id == static_cast<jule::U64>(20LLU)) || (((_5913_prev.get()._field_id == static_cast<jule::U64>(7LLU)) && _20cda0225_is_bin_op(_5913_prev.get()._field_kind)) && (_5913_prev.get()._field_row < _5329_tokens[_5348_i].get()._field_row)));
	};
}



inline std::tuple<jule::I64,jule::Bool> _1c9cd6e09_next_st_pos(jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _6817_tokens, jule::I64 _6835_start) {
	jule::I64 _6913_brace_n = 0LL;;
	jule::I64 _7013_i = _6835_start;;
	for (; (_7013_i < _6817_tokens.len()); (_7013_i)++) {
		{
			jule::Bool _7217_ok = false;;
			jule::Bool _7317_terminated = false;;
			jule::Ptr<_20cd9e6ec_Token> _7413_tok = _6817_tokens[_7013_i];;
			{
				auto &_match_expr{ _7413_tok.get()._field_id };
				
				if (_match_expr == static_cast<jule::U64>(3LLU)) {
					_case_begin_1cd48c666:;
					{
						{
							auto &_match_expr{ _7413_tok.get()._field_kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_1cd48e5be:;
								{
									if (((_6913_brace_n == 0LL) && (_7013_i > _6835_start))) {
										if ((!(_1c9cd6a63_prev_is_incomplete_expr(_6817_tokens,_7013_i)))) {
											std::tie(_7217_ok,_7317_terminated) = _1c9cd6700_is_st(_7413_tok,_6817_tokens[(_7013_i - 1LL)]);
											if (_7217_ok) {
												goto _julec_label_return;
											};
										};
									};
									(_6913_brace_n)++;
								}
							}
							else {
								_case_begin_1cd48ce2a:;
								{
									(_6913_brace_n)--;
									if (((_6913_brace_n == 0LL) && ((_7013_i + 1LL) < _6817_tokens.len()))) {
										std::tie(_7217_ok,_7317_terminated) = _1c9cd6700_is_st(_6817_tokens[(_7013_i + 1LL)],_7413_tok);
										if (_7217_ok) {
											(_7013_i)++;
											goto _julec_label_return;
										};
									};
								}
							}
							_match_end_1cd48d0e5:;
						};
						goto _iter_next_1cd48b1c0;
					}
				}
				_match_end_1cd48c7dc:;
			};
			if ((_6913_brace_n != 0LL)) {
				goto _iter_next_1cd48b1c0;
			};
			if ((_7013_i > _6835_start)) {
				if (_1c9cd6a63_prev_is_incomplete_expr(_6817_tokens,_7013_i)) {
					goto _iter_next_1cd48b1c0;
				};
				std::tie(_7217_ok,_7317_terminated) = _1c9cd6700_is_st(_7413_tok,_6817_tokens[(_7013_i - 1LL)]);
			} else {
				std::tie(_7217_ok,_7317_terminated) = _1c9cd6700_is_st(_7413_tok,_7413_tok);
			};
			if ((!(_7217_ok))) {
				goto _iter_next_1cd48b1c0;
			};
			_julec_label_return:;
			if (_7317_terminated) {
				(_7013_i)++;
			};
			return std::make_tuple(_7013_i,_7317_terminated);
		}
	_iter_next_1cd48b1c0:;
	}
	_iter_end_1cd48b1c0:;;
	return std::make_tuple(_7013_i,false);
}



inline std::tuple<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>,jule::Bool> _1c9cd724a_skip_st(jule::I64& _13017_i, jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _13029_tokens) {
	jule::I64 _1319_start = _13017_i;;
	jule::Bool _13213_terminated = false;;
	std::tie(_13017_i,_13213_terminated) = _1c9cd6e09_next_st_pos(_13029_tokens,_1319_start);
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _13413_st_tokens = _13029_tokens.slice(_1319_start,_13017_i);;
	if (_13213_terminated) {
		if ((_13413_st_tokens.len() == 1LL)) {
			std::tie(_13413_st_tokens,_13213_terminated) = _1c9cd724a_skip_st(_13017_i,_13029_tokens);
			return std::make_tuple(_13413_st_tokens,_13213_terminated);
		};
		_13413_st_tokens=_13413_st_tokens.slice(0LL,(_13413_st_tokens.len() - 1LL));
	};
	return std::make_tuple(_13413_st_tokens,_13213_terminated);
}



inline jule::Slice<jule::Ptr<_1c9cd7547_Stmt>> _1c9cd78dd_split_stmts(jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _15221_tokens) {
	jule::Slice<jule::Ptr<_1c9cd7547_Stmt>> _15313_stmts = nullptr;;
	jule::I64 _15413_pos = 0LL;;
	while ((_15413_pos < _15221_tokens.len())) {
		{
			jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _15618_stmt;;
			jule::Bool _15624_terminated;;
			std::tie(_15618_stmt,_15624_terminated) = _1c9cd724a_skip_st(_15413_pos,_15221_tokens);
			_15313_stmts = jule::alloc_for_append(_15313_stmts,1);_15313_stmts.__push(jule::new_ptr<_1c9cd7547_Stmt>(_1c9cd7547_Stmt{._field_tokens=_15618_stmt, ._field_terminated=_15624_terminated}));;
		}
	_iter_next_1cd494eed:;
	}
	_iter_end_1cd494eed:;;
	return _15313_stmts;
}



inline jule::Ptr<_1c9ce4741_CallData> _1c9ce4aa4_get_call_data(jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _4423_tokens) {
	jule::Ptr<_1c9ce4741_CallData> _4513_data = jule::new_ptr<_1c9ce4741_CallData>();;
	std::tie(_4513_data.get()._field_expr_tokens,_4513_data.get()._field_args_tokens) = _1c9d02dae_range_last(_4423_tokens);
	if ((_4513_data.get()._field_expr_tokens.len() == 0LL)) {
		return _4513_data;
	};
	jule::Ptr<_20cd9e6ec_Token> _529_token = _4513_data.get()._field_expr_tokens[(_4513_data.get()._field_expr_tokens.len() - 1LL)];;
	if (((_529_token.get()._field_id == static_cast<jule::U64>(3LLU)) && (_529_token.get()._field_kind == jule::Str("]", 1)))) {
		std::tie(_4513_data.get()._field_expr_tokens,_4513_data.get()._field_generics_tokens) = _1c9d02dae_range_last(_4513_data.get()._field_expr_tokens);
	};
	return _4513_data;
}



inline jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _1c9ce4d90_get_block_expr(jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _6024_tokens) {
	jule::I64 _6113_brace_n = 0LL;;
	jule::I64 _6213_skip_to_next_brace_close = 0LL;;
	{
		auto &expr = _6024_tokens;
		auto it = expr.begin();
		_iter_begin_1cd49c05a:;
		if (it != expr.end()) {
			jule::I64 _639_i = it - expr.begin();
			jule::Ptr<_20cd9e6ec_Token> _6312_tok = *it;
			{
				{
					auto &_match_expr{ _6312_tok.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(16LLU) || _match_expr == static_cast<jule::U64>(17LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1cd49c91d:;
						{
							(_6213_skip_to_next_brace_close)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1cd49cc4d:;
						{
							{
								auto &_match_expr{ _6312_tok.get()._field_kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1cd49deb3:;
									{
										if (((_6113_brace_n > 0LL) || (_6213_skip_to_next_brace_close > 0LL))) {
											if ((_6213_skip_to_next_brace_close > 0LL)) {
												(_6213_skip_to_next_brace_close)--;
											};
											(_6113_brace_n)++;
											goto _match_end_1cd49dad9;
										};
										return _6024_tokens.slice(0LL,_639_i);
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1cd49e17d:;
									{
										(_6113_brace_n)++;
									}
								}
								else {
									_case_begin_1cd49d7ed:;
									{
										(_6113_brace_n)--;
									}
								}
								_match_end_1cd49dad9:;
							};
						}
					}
					_match_end_1cd49cb1b:;
				};
			}
			_iter_next_1cd49c05a:;
			++it;
			_639_i++;
			goto _iter_begin_1cd49c05a;
		}
		_iter_end_1cd49c05a:;
	};
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>,jule::Slice<jule::Ptr<_20cd9e6ec_Token>>> _1c9ce5137_split_colon(jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _9121_tokens) {
	jule::I64 _9213_range_n = 0LL;;
	{
		auto &expr = _9121_tokens;
		auto it = expr.begin();
		_iter_begin_1cd49d4ce:;
		if (it != expr.end()) {
			jule::I64 _939_i = it - expr.begin();
			jule::Ptr<_20cd9e6ec_Token> _9312_token = *it;
			{
				{
					auto &_match_expr{ _9312_token.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1cd4a0bc9:;
						{
							{
								auto &_match_expr{ _9312_token.get()._field_kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1cd4a1b75:;
									{
										(_9213_range_n)++;
										goto _iter_next_1cd49d4ce;
									}
								}
								else {
									_case_begin_1cd4a1614:;
									{
										(_9213_range_n)--;
									}
								}
								_match_end_1cd4a17ce:;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(11LLU)) {
						_case_begin_1cd4a1009:;
						{
							if ((_9213_range_n < 1LL)) {
								jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _10725_l = _9121_tokens.slice(0LL,_939_i);;
								jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _10825_r = _9121_tokens.slice((_939_i + 1LL));;
								return std::make_tuple(_10725_l,_10825_r);
							};
						}
					}
					_match_end_1cd4a0dc7:;
				};
			}
			_iter_next_1cd49d4ce:;
			++it;
			_939_i++;
			goto _iter_begin_1cd49d4ce;
		}
		_iter_end_1cd49d4ce:;
	};
	return std::make_tuple(nullptr,nullptr);
}



inline jule::I64 _1c9ce5423_find_lowest_prec_op(jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _11825_tokens) {
	jule::U8 _12313_prec = 255LLU;;
	jule::I64 _12413_prec_pos = -1LL;;
	jule::I64 _12613_brace_n = 0LL;;
	jule::Bool _12713_skip_to_next_brace_open = false;;
	{
		auto &expr = _11825_tokens;
		auto it = expr.begin();
		_iter_begin_1cd4a432b:;
		if (it != expr.end()) {
			jule::I64 _1289_i = it - expr.begin();
			jule::Ptr<_20cd9e6ec_Token> &_12812_token = *it;
			{
				{
					
					if ((_12812_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
						_case_begin_1cd4a500d:;
						{
							{
								auto &_match_expr{ _12812_token.get()._field_kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1cd4a61c9:;
									{
										_12713_skip_to_next_brace_open=false;
										goto _case_begin_1cd4a6372;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_1cd4a6372:;
									{
										(_12613_brace_n)++;
									}
								}
								else {
									_case_begin_1cd4a5b68:;
									{
										(_12613_brace_n)--;
									}
								}
								_match_end_1cd4a5cde:;
							};
							goto _iter_next_1cd4a432b;
						}
					}
					else if (_12713_skip_to_next_brace_open) {
						_case_begin_1cd4a5085:;
						{
							goto _iter_next_1cd4a432b;
						}
					}
					else if ((_12812_token.get()._field_id == static_cast<jule::U64>(16LLU))) {
						_case_begin_1cd4a510c:;
						{
							_12713_skip_to_next_brace_open=true;
							goto _iter_next_1cd4a432b;
						}
					}
					else if ((_1289_i == 0LL)) {
						_case_begin_1cd4a5184:;
						{
							goto _iter_next_1cd4a432b;
						}
					}
					else if ((_12812_token.get()._field_id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1cd4a520b:;
						{
							goto _iter_next_1cd4a432b;
						}
					}
					else if ((_12613_brace_n > 0LL)) {
						_case_begin_1cd4a5283:;
						{
							goto _iter_next_1cd4a432b;
						}
					}
					_match_end_1cd4a4da9:;
				};
				jule::Ptr<_20cd9e6ec_Token> _15513_left = _11825_tokens[(_1289_i - 1LL)];;
				if (((_15513_left.get()._field_id == static_cast<jule::U64>(7LLU)) || (_15513_left.get()._field_id == static_cast<jule::U64>(11LLU)))) {
					goto _iter_next_1cd4a432b;
				};
				if ((((_1289_i > 1LL) && (_15513_left.get()._field_id == static_cast<jule::U64>(3LLU))) && (_15513_left.get()._field_kind == jule::Str("]", 1)))) {
					jule::Ptr<_20cd9e6ec_Token> _16317_lleft = _11825_tokens[(_1289_i - 2LL)];;
					if (((_16317_lleft.get()._field_id == static_cast<jule::U64>(3LLU)) && (_16317_lleft.get()._field_kind == jule::Str("[", 1)))) {
						if (((_12812_token.get()._field_kind == jule::Str("&", 1)) || (_12812_token.get()._field_kind == jule::Str("*", 1)))) {
							goto _iter_next_1cd4a432b;
						};
					};
				};
				jule::U8 _17213_p = _20cd9ead7_prec(_12812_token.ptr());;
				if (((_17213_p != 0LLU) && (_17213_p <= _12313_prec))) {
					_12313_prec=_17213_p;
					_12413_prec_pos=_1289_i;
				};
			}
			_iter_next_1cd4a432b:;
			++it;
			_1289_i++;
			goto _iter_begin_1cd4a432b;
		}
		_iter_end_1cd4a432b:;
	};
	return _12413_prec_pos;
}



inline jule::Ptr<_1e4367690_IdentExpr> _1c9ce56ba_build_ident_expr(jule::Ptr<_20cd9e6ec_Token>& _18226_token) {
	return jule::new_ptr<_1e4367690_IdentExpr>(_1e4367690_IdentExpr{._field_token=_18226_token, ._field_ident=_18226_token.get()._field_kind, ._field_cpp_linked=false});
}



inline std::tuple<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>,jule::I64> _1c9ce5962_get_range_expr_tokens(jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _19031_tokens) {
	jule::I64 _19113_range_n = 0LL;;
	jule::I64 _19213_i = (_19031_tokens.len() - 1LL);;
	for (; (_19213_i >= 0LL); (_19213_i)--) {
		{
			jule::Ptr<_20cd9e6ec_Token> _19413_tok = _19031_tokens[_19213_i];;
			if ((_19413_tok.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _19413_tok.get()._field_kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1cd4ae38b:;
						{
							(_19113_range_n)++;
						}
					}
					else {
						_case_begin_1cd4ae07d:;
						{
							(_19113_range_n)--;
						}
					}
					_match_end_1cd4adec3:;
				};
			};
			if ((_19113_range_n == 0LL)) {
				return std::make_tuple(_19031_tokens.slice(0LL,_19213_i),_19113_range_n);
			};
		}
	_iter_next_1cd4ac433:;
	}
	_iter_end_1cd4ac433:;;
	return std::make_tuple(nullptr,_19113_range_n);
}



inline jule::Bool _1c9d01363_check_assign_tokens(jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _1625_tokens) {
	if (((_1625_tokens.len() == 0LL) || (!(_20cda3bb8_is_assign(_1625_tokens[0LL].get()._field_id))))) {
		return false;
	};
	jule::I64 _2013_brace_n = 0LL;;
	{
		auto &expr = _1625_tokens;
		auto it = expr.begin();
		_iter_begin_1cd4b1305:;
		if (it != expr.end()) {
			jule::Ptr<_20cd9e6ec_Token> &_2112_t = *it;
			{
				if ((_2112_t.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _2112_t.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1cd4b2427:;
							{
								(_2013_brace_n)++;
							}
						}
						else {
							_case_begin_1cd4b2119:;
							{
								(_2013_brace_n)--;
							}
						}
						_match_end_1cd4b205e:;
					};
				};
				if ((_2013_brace_n < 0LL)) {
					return false;
				} else if ((_2013_brace_n > 0LL)) {
					goto _iter_next_1cd4b1305;
				} else if (((_2112_t.get()._field_id == static_cast<jule::U64>(7LLU)) && _20cda4207_is_assign_op(_2112_t.get()._field_kind))) {
					return true;
				};
			}
			_iter_next_1cd4b1305:;
			++it;
			goto _iter_begin_1cd4b1305;
		}
		_iter_end_1cd4b1305:;
	};
	return false;
}



inline _20ca8ec5b_Log _1c9d02672_make_err(jule::I64 _4913_row, jule::I64 _4923_col, jule::Ptr<_20cda4adc_File>& _4934_f, jule::Str _4944_fmt, jule::Slice<jule::Any> _4957_args) {
	return _20ca8ec5b_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_row=_4913_row, ._field_column=_4923_col, ._field_path=_4934_f.get()._field_path, ._field_text=_20ca9019b_logf(_4944_fmt,jule::Any(_4957_args)), };
}



inline jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _1c9d02b17_range(jule::I64& _6815_i, jule::Str _6823_open, jule::Str _6840_close, jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _6863_tokens) {
	if ((_6815_i >= _6863_tokens.len())) {
		return nullptr;
	};
	jule::Ptr<_20cd9e6ec_Token> _739_tok = _6863_tokens[_6815_i];;
	if (((_739_tok.get()._field_id != static_cast<jule::U64>(3LLU)) || (_739_tok.get()._field_kind != _6823_open))) {
		return nullptr;
	};
	(_6815_i)++;
	jule::I64 _7913_range_n = 1LL;;
	jule::I64 _809_start = _6815_i;;
	for (; ((_7913_range_n != 0LL) && (_6815_i < _6863_tokens.len())); (_6815_i)++) {
		{
			jule::Ptr<_20cd9e6ec_Token> _8213_token = _6863_tokens[_6815_i];;
			if ((_8213_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _8213_token.get()._field_kind };
					
					if (_match_expr == _6823_open) {
						_case_begin_1cd4b7a8c:;
						{
							(_7913_range_n)++;
						}
					}
					else if (_match_expr == _6840_close) {
						_case_begin_1cd4b7d9a:;
						{
							(_7913_range_n)--;
						}
					}
					_match_end_1cd4b7c68:;
				};
			};
		}
	_iter_next_1cd4b4380:;
	}
	_iter_end_1cd4b4380:;;
	return _6863_tokens.slice(_809_start,(_6815_i - 1LL));
}



inline std::tuple<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>,jule::Slice<jule::Ptr<_20cd9e6ec_Token>>> _1c9d02dae_range_last(jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _10320_tokens) {
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _10340_cutted = jule::Slice<jule::Ptr<_20cd9e6ec_Token>>();
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _10358_cut = jule::Slice<jule::Ptr<_20cd9e6ec_Token>>();
	if ((_10320_tokens.len() == 0LL)) {
		_10340_cutted = _10320_tokens;
		_10358_cut = nullptr;
		return std::make_tuple(_10340_cutted,_10358_cut);
	} else if ((_10320_tokens[(_10320_tokens.len() - 1LL)].get()._field_id != static_cast<jule::U64>(3LLU))) {
		_10340_cutted = _10320_tokens;
		_10358_cut = nullptr;
		return std::make_tuple(_10340_cutted,_10358_cut);
	};
	jule::I64 _11013_brace_n = 0LL;;
	jule::I64 _11113_i = (_10320_tokens.len() - 1LL);;
	for (; (_11113_i >= 0LL); (_11113_i)--) {
		{
			jule::Ptr<_20cd9e6ec_Token> _11313_token = _10320_tokens[_11113_i];;
			if ((_11313_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _11313_token.get()._field_kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1cd4bbdb0:;
						{
							(_11013_brace_n)++;
							goto _iter_next_1cd4b8571;
						}
					}
					else {
						_case_begin_1cd4bbaa2:;
						{
							(_11013_brace_n)--;
						}
					}
					_match_end_1cd4bb9e7:;
				};
			};
			if ((_11013_brace_n == 0LL)) {
				_10340_cutted = _10320_tokens.slice(0LL,_11113_i);
				_10358_cut = _10320_tokens.slice(_11113_i);
				return std::make_tuple(_10340_cutted,_10358_cut);
			};
		}
	_iter_next_1cd4b8571:;
	}
	_iter_end_1cd4b8571:;;
	_10340_cutted = _10320_tokens;
	_10358_cut = nullptr;
	return std::make_tuple(_10340_cutted,_10358_cut);
}



inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>>,jule::Slice<_20ca8ec5b_Log>> _1c9d032dd_parts(jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _14015_tokens, jule::U64 _14033_id, jule::Bool _14046_expr_must) {
	if ((_14015_tokens.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Slice<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>> _14513_parts = nullptr;;
	jule::Slice<_20ca8ec5b_Log> _14613_errors = nullptr;;
	jule::I64 _14813_range_n = 0LL;;
	jule::I64 _14913_last = 0LL;;
	{
		auto &expr = _14015_tokens;
		auto it = expr.begin();
		_iter_begin_1cd4bed80:;
		if (it != expr.end()) {
			jule::I64 _1509_i = it - expr.begin();
			jule::Ptr<_20cd9e6ec_Token> _15012_token = *it;
			{
				if ((_15012_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _15012_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1cd4c1315:;
							{
								(_14813_range_n)++;
								goto _iter_next_1cd4bed80;
							}
						}
						else {
							_case_begin_1cd4c1007:;
							{
								(_14813_range_n)--;
							}
						}
						_match_end_1cd4c0e4c:;
					};
				};
				if ((_14813_range_n > 0LL)) {
					goto _iter_next_1cd4bed80;
				};
				if ((_15012_token.get()._field_id == _14033_id)) {
					if ((_14046_expr_must && ((_1509_i - _14913_last) <= 0LL))) {
						_20ca8ec5b_Log _16921_err = _1c9d02672_make_err(_15012_token.get()._field_row,_15012_token.get()._field_column,_15012_token.get()._field_file,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_14613_errors = jule::alloc_for_append(_14613_errors,1);_14613_errors.__push(_16921_err);;
					};
					_14513_parts = jule::alloc_for_append(_14513_parts,1);_14513_parts.__push(_14015_tokens.slice(_14913_last,_1509_i));;
					_14913_last=static_cast<jule::I64>((_1509_i + 1LL));
				};
			}
			_iter_next_1cd4bed80:;
			++it;
			_1509_i++;
			goto _iter_begin_1cd4bed80;
		}
		_iter_end_1cd4bed80:;
	};
	if ((_14913_last < _14015_tokens.len())) {
		_14513_parts = jule::alloc_for_append(_14513_parts,1);_14513_parts.__push(_14015_tokens.slice(_14913_last));;
	} else if ((!(_14046_expr_must))) {
		_14513_parts = jule::alloc_for_append(_14513_parts,1);_14513_parts.__push(jule::Slice<jule::Ptr<_20cd9e6ec_Token>>());;
	};
	return std::make_tuple(_14513_parts,_14613_errors);
}



inline jule::Str _1c9d035a7_get_close_kind_of_brace(jule::Str _18628_left) {
	{
		auto &_match_expr{ _18628_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_1cd4c4e95:;
			{
				return jule::Str("(", 1);
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_1cd4c3e72:;
			{
				return jule::Str("{", 1);
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_1cd4c3ed8:;
			{
				return jule::Str("[", 1);
			}
		}
		else {
			_case_begin_1cd4c457c:;
			{
				return jule::Str();
			}
		}
		_match_end_1cd4c0699:;
	};
}



inline _20ca8ec5b_Log _1c9d039a3_compiler_err(jule::Ptr<_20cd9e6ec_Token>& _19918_token, jule::Str& _19934_fmt, jule::Slice<jule::Any> _19947_args) {
	return _20ca8ec5b_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_row=_19918_token.get()._field_row, ._field_column=_19918_token.get()._field_column, ._field_path=_19918_token.get()._field_file.get()._field_path, ._field_text=_20ca9019b_logf(_19934_fmt,jule::Any(_19947_args)), ._field_line=_20cda5cb9_get_row(_19918_token.get()._field_file.ptr(), _19918_token.get()._field_row), };
}



inline void _1c9d03d05_push_suggestion(_20ca8ec5b_Log* _21031_log, jule::Str _21042_fmt, jule::Slice<jule::Any> _21055_args) {
	_21031_log->_field_suggestion=_20ca9019b_logf(_21042_fmt,jule::Any(_21055_args));
}



inline jule::Str _1c9d04135_tokstoa(jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _21413_tokens) {
	jule::Str _21513_s = jule::Str();;
	{
		auto &expr = _21413_tokens;
		auto it = expr.begin();
		_iter_begin_1cd4c7e65:;
		if (it != expr.end()) {
			jule::Ptr<_20cd9e6ec_Token> &_21612_token = *it;
			{
				_21513_s+=_21612_token.get()._field_kind;
			}
			_iter_next_1cd4c7e65:;
			++it;
			goto _iter_begin_1cd4c7e65;
		}
		_iter_end_1cd4c7e65:;
	};
	return _21513_s;
}



inline jule::Ptr<_1e436257a_TypeDecl> _1c9d14288_build_void_type(void) {
	return jule::new_ptr<_1e436257a_TypeDecl>();
}



inline jule::Ptr<_1e436257a_TypeDecl> _1c9d144ca_build_prim_type(jule::Ptr<_20cd9e6ec_Token> _2224_t) {
	return jule::new_ptr<_1e436257a_TypeDecl>(_1e436257a_TypeDecl{._field_token=_2224_t, ._field_kind=jule::Any(jule::new_ptr<_1e4362b0d_IdentTypeDecl>(_1e4362b0d_IdentTypeDecl{._field_token=_2224_t, ._field_ident=_2224_t.get()._field_kind, }))});
}



inline std::tuple<jule::Slice<jule::Ptr<_20cd9e6ec_Token>>,jule::I64> _1c9d1481b_split_map_range(jule::Slice<jule::Ptr<_20cd9e6ec_Token>>& _3525_tokens, jule::I64& _3548_i) {
	jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _3558_range_tokens = jule::Slice<jule::Ptr<_20cd9e6ec_Token>>();
	jule::I64 _3582_colon = jule::I64();
	_3582_colon=-1LL;
	jule::I64 _3713_range_n = 0LL;;
	jule::I64 _389_start = _3548_i;;
	for (; (_3548_i < _3525_tokens.len()); (_3548_i)++) {
		{
			jule::Ptr<_20cd9e6ec_Token> _4013_token = _3525_tokens[_3548_i];;
			if ((_4013_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4013_token.get()._field_kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1cd4cb441:;
						{
							(_3713_range_n)++;
							goto _iter_next_1cd4c9928;
						}
					}
					else {
						_case_begin_1cd4cb133:;
						{
							(_3713_range_n)--;
						}
					}
					_match_end_1cd4cb078:;
				};
			};
			if ((_3713_range_n == 0LL)) {
				if (((_389_start + 1LL) > _3548_i)) {
					return std::make_tuple(_3558_range_tokens,_3582_colon);
				};
				_3558_range_tokens=_3525_tokens.slice((_389_start + 1LL),_3548_i);
				goto _iter_end_1cd4c9928;
			} else if ((_3713_range_n != 1LL)) {
				goto _iter_next_1cd4c9928;
			};
			if (((_3582_colon == -1LL) && (_4013_token.get()._field_id == static_cast<jule::U64>(11LLU)))) {
				_3582_colon=static_cast<jule::I64>(((_3548_i - _389_start) - 1LL));
			};
		}
	_iter_next_1cd4c9928:;
	}
	_iter_end_1cd4c9928:;;
	return std::make_tuple(_3558_range_tokens,_3582_colon);
}



inline std::tuple<jule::Bool,jule::Bool> _1c989d361_check_os(jule::Str _913_arg) {
	jule::Bool _925_ok = jule::Bool();
	jule::Bool _935_exist = jule::Bool();
	_925_ok=false;
	_935_exist=true;
	{
		auto &_match_expr{ _913_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_1cd512cc4:;
			{
				_925_ok=_20ca934e0_is_windows(_20cab3dd4_OS);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_1cd512d3a:;
			{
				_925_ok=_20ca937cb_is_darwin(_20cab3dd4_OS);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_1cd512ab5:;
			{
				_925_ok=_20ca93a73_is_linux(_20cab3dd4_OS);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_1cd512b2b:;
			{
				_925_ok=_20ca94645_is_unix(_20cab3dd4_OS);
			}
		}
		else {
			_case_begin_1cd51239a:;
			{
				_925_ok=true;
				_935_exist=false;
			}
		}
		_match_end_1cd5128ea:;
	};
	return std::make_tuple(_925_ok,_935_exist);
}



inline std::tuple<jule::Bool,jule::Bool> _1c98b78b9_check_arch(jule::Str _3015_arg) {
	jule::Bool _3027_ok = jule::Bool();
	jule::Bool _3037_exist = jule::Bool();
	_3027_ok=false;
	_3037_exist=true;
	{
		auto &_match_expr{ _3015_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_1cd5154d0:;
			{
				_3027_ok=_20ca93d5e_is_i386(_20cab8449_ARCH);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_1cd515546:;
			{
				_3027_ok=_20ca94106_is_amd64(_20cab8449_ARCH);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_1cd5152c1:;
			{
				_3027_ok=_20ca9439d_is_arm64(_20cab8449_ARCH);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_1cd515337:;
			{
				_3027_ok=_20ca94c1c_is_64bit(_20cab8449_ARCH);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_1cd51539d:;
			{
				_3027_ok=_20ca94975_is_32bit(_20cab8449_ARCH);
			}
		}
		else {
			_case_begin_1cd514ab7:;
			{
				_3027_ok=true;
				_3037_exist=false;
			}
		}
		_match_end_1cd515106:;
	};
	return std::make_tuple(_3027_ok,_3037_exist);
}



inline jule::Bool _1c98b7b83_is_pass_file_annotation(jule::Str _5432_p) {
	_5432_p=_20b97533a_base(_5432_p);
	jule::I64 _569_n = _5432_p.len();;
	(_5432_p).mut_slice(0LL,(_569_n - _20b972bd9_ext(_5432_p).len()));;
	jule::Str _6213_a1 = jule::Str();;
	jule::Str _6513_a2 = jule::Str();;
	jule::I64 _6813_i = _20c5c5473_find_last_byte(_5432_p,'_');;
	if ((_6813_i == -1LL)) {
		jule::Bool _7118_ok;;
		jule::Bool _7126_exist;;
		std::tie(_7118_ok,_7126_exist) = _1c989d361_check_os(_5432_p);
		if (_7126_exist) {
			return _7118_ok;
		};
		std::tie(_7118_ok,_7126_exist) = _1c98b78b9_check_arch(_5432_p);
		return ((!(_7126_exist)) || _7118_ok);
	};
	if (((_6813_i + 1LL) >= _569_n)) {
		return true;
	};
	_6213_a1=_5432_p.slice((_6813_i + 1LL));
	(_5432_p).mut_slice(0LL,_6813_i);;
	_6813_i=static_cast<jule::I64>(_20c5c5473_find_last_byte(_5432_p,'_'));
	if ((_6813_i != -1LL)) {
		_6513_a2=_5432_p.slice((_6813_i + 1LL));
	};
	if (_6513_a2.empty()) {
		jule::Bool _9218_ok;;
		jule::Bool _9226_exist;;
		std::tie(_9218_ok,_9226_exist) = _1c989d361_check_os(_6213_a1);
		if (_9226_exist) {
			return _9218_ok;
		};
		std::tie(_9218_ok,_9226_exist) = _1c98b78b9_check_arch(_6213_a1);
		return ((!(_9226_exist)) || _9218_ok);
	};
	jule::Bool _10014_ok;;
	jule::Bool _10022_exist;;
	std::tie(_10014_ok,_10022_exist) = _1c98b78b9_check_arch(_6213_a1);
	if (_10022_exist) {
		if ((!(_10014_ok))) {
			return false;
		};
		std::tie(_10014_ok,_10022_exist) = _1c989d361_check_os(_6513_a2);
		return ((!(_10022_exist)) || _10014_ok);
	};
	std::tie(_10014_ok,_10022_exist) = _1c989d361_check_os(_6213_a1);
	return ((!(_10022_exist)) || _10014_ok);
}



inline void _1c98b8d60_set_os_vars(jule::Slice<jule::Str>& _3621_vars) {
	_3621_vars = jule::alloc_for_append(_3621_vars,1);_3621_vars.__push(_20cab3dd4_OS);;
	if (_20ca94645_is_unix(_20cab3dd4_OS)) {
		_3621_vars = jule::alloc_for_append(_3621_vars,1);_3621_vars.__push(jule::Str("unix", 4));;
	};
}



inline void _1c98b90b3_set_arch_vars(jule::Slice<jule::Str>& _4423_vars) {
	_4423_vars = jule::alloc_for_append(_4423_vars,1);_4423_vars.__push(_20cab8449_ARCH);;
	if (_20ca94c1c_is_64bit(_20cab8449_ARCH)) {
		_4423_vars = jule::alloc_for_append(_4423_vars,1);_4423_vars.__push(jule::Str("x64", 3));;
	};
	if (_20ca94975_is_32bit(_20cab8449_ARCH)) {
		_4423_vars = jule::alloc_for_append(_4423_vars,1);_4423_vars.__push(jule::Str("x32", 3));;
	};
}



inline void _1c98b936b_init_vars(jule::Slice<jule::Str>& _5519_vars, _1c98b8a52_CompileInfo& _5533_info) {
	_1c98b8d60_set_os_vars(_5519_vars);
	_1c98b90b3_set_arch_vars(_5519_vars);
	if (_5533_info._field_prod) {
		_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("production", 10));;
	};
	if (_5533_info._field_test) {
		_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("test", 4));;
	};
	{
		auto &_match_expr{ _5533_info._field_compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1cc547d93:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("clang", 5));;
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1cc547e09:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("gcc", 3));;
			}
		}
		_match_end_1cc54804c:;
	};
	{
		auto &_match_expr{ _5533_info._field_cpp_std };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1cc547964:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("cpp14", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1cc549108:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("cpp17", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1cc54916e:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("cpp20", 5));;
			}
		}
		_match_end_1cc548965:;
	};
}



inline jule::Slice<jule::U8> _1e497d448_read_buff(jule::Str _3014_path) {
	return ({
		auto except = static__2252c944a_read(_3014_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_20cae1708_exit(1LL);
			return nullptr;
		} jule::Slice<jule::U8>();});
	});
}



inline _20ca8ec5b_Log _1e4980428_flat_compiler_err(jule::Str _4122_text) {
	return _20ca8ec5b_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_text=_4122_text, };
}



inline void _1e49816b0_push_passes(jule::Ptr<_1e46a742a_Package>& _11221_p, jule::Slice<jule::Str>& _11245_passes) {
	{
		auto &expr = _11221_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1cc560592:;
		if (it != expr.end()) {
			jule::Ptr<_1c9745c42_SymbolTable> _11317_f = *it;
			{
				_julec_label_push:;
				{
					auto &expr = _11317_f.get()._field_passes;
					auto it = expr.begin();
					_iter_begin_1cc56eb01:;
					if (it != expr.end()) {
						_1e43870e9_Pass _11516_pass = *it;
						{
							if (_11516_pass._field_text.empty()) {
								goto _iter_next_1cc56eb01;
							};
							{
								auto &expr = _11245_passes;
								auto it = expr.begin();
								_iter_begin_1cc571c24:;
								if (it != expr.end()) {
									jule::Str _11920_cpass = *it;
									{
										if ((_11920_cpass == _11516_pass._field_text)) {
											goto _iter_next_1cc56eb01;
										};
									}
									_iter_next_1cc571c24:;
									++it;
									goto _iter_begin_1cc571c24;
								}
								_iter_end_1cc571c24:;
							};
							_11245_passes = jule::alloc_for_append(_11245_passes,1);_11245_passes.__push(_11516_pass._field_text);;
						}
						_iter_next_1cc56eb01:;
						++it;
						goto _iter_begin_1cc56eb01;
					}
					_iter_end_1cc56eb01:;
				};
			}
			_iter_next_1cc560592:;
			++it;
			goto _iter_begin_1cc560592;
		}
		_iter_end_1cc560592:;
	};
}



inline jule::Slice<jule::Str> _1e4987485_get_all_unique_passes(jule::Ptr<_1e46a742a_Package>& _12931_pkg, jule::Slice<jule::Ptr<_1e46a4768_ImportInfo>> _12956_uses) {
	jule::Slice<jule::Str> _13013_passes = nullptr;;
	_1e49816b0_push_passes(_12931_pkg,_13013_passes);
	{
		auto &expr = _12956_uses;
		auto it = expr.begin();
		_iter_begin_1cc573374:;
		if (it != expr.end()) {
			jule::Ptr<_1e46a4768_ImportInfo> _13317_u = *it;
			{
				if ((!(_13317_u.get()._field_cpp_linked))) {
					_1e49816b0_push_passes(_13317_u.get()._field_package,_13013_passes);
				};
			}
			_iter_next_1cc573374:;
			++it;
			goto _iter_begin_1cc573374;
		}
		_iter_end_1cc573374:;
	};
	return _13013_passes;
}



inline _1c98b8a52_CompileInfo _1e4991aee_build_compile_info(void) {
	_1c98b8a52_CompileInfo _14313_info = _1c98b8a52_CompileInfo{._field_prod=_23db44461_PRODUCTION, ._field_test=_23db43bbe_TEST, };;
	{
		auto &_match_expr{ _23db43163_COMPILER };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1cc574089:;
			{
				_14313_info._field_compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1cc57496e:;
			{
				_14313_info._field_compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_1cc574919:;
	};
	{
		auto &_match_expr{ _23db434c6_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1cc5754db:;
			{
				_14313_info._field_compiler=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1cc575552:;
			{
				_14313_info._field_compiler=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1cc574d7b:;
			{
				_14313_info._field_compiler=jule::Str("cpp20", 5);
			}
		}
		_match_end_1cc57540e:;
	};
	return _14313_info;
}



inline void _1ca05c1d4_eliminate_defines(jule::Ptr<_1e498133b_IR>& _22331_ir) {
	jule::Ptr<_1ca02928e_ObjectDeadCode> _22413_ocd = static__1ca05a18d_new(_22331_ir);;
	_1ca05be1a_elimanate(_22413_ocd);
}



inline void _1ca060c10_eliminate_dead_code_of_scope(jule::Ptr<_1e46862c7_Scope> _22637_s) {
	jule::Slice<jule::Ptr<_1e4688a16_Label>> _2279_labels = jule::Slice<jule::Ptr<_1e4688a16_Label>>::alloc(0LL,16LL);;
	jule::Slice<jule::Ptr<_1e4688d02_GotoSt>> _2289_gotos = jule::Slice<jule::Ptr<_1e4688d02_GotoSt>>::alloc(0LL,16LL);;
	jule::Ptr<_1ca05d1a2_ScopeDeadCode> _22913_sdc = jule::new_ptr<_1ca05d1a2_ScopeDeadCode>(_1ca05d1a2_ScopeDeadCode{._field_s=_22637_s, ._field_stmts=(&(_22637_s.get()._field_stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1e4688a16_Label>>>)((&(_2279_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1e4688d02_GotoSt>>>)((&(_2289_gotos))))});;
	{
		_1ca060924_optimize_stmts(_22913_sdc);
	};
}



inline void _1ca060e96_eliminate_scope_functions(jule::Slice<jule::Ptr<_1e4380576_Fn>>& _23935_funcs) {
	{
		auto &expr = _23935_funcs;
		auto it = expr.begin();
		_iter_begin_1cd654a4d:;
		if (it != expr.end()) {
			jule::Ptr<_1e4380576_Fn> _24017_func = *it;
			{
				{
					auto &expr = _24017_func.get()._field_instances;
					auto it = expr.begin();
					_iter_begin_1cd6566dc:;
					if (it != expr.end()) {
						jule::Ptr<_1e4383018_FnIns> _24121_ins = *it;
						{
							_1ca060c10_eliminate_dead_code_of_scope(_24121_ins.get()._field_scope);
						}
						_iter_next_1cd6566dc:;
						++it;
						goto _iter_begin_1cd6566dc;
					}
					_iter_end_1cd6566dc:;
				};
			}
			_iter_next_1cd654a4d:;
			++it;
			goto _iter_begin_1cd654a4d;
		}
		_iter_end_1cd654a4d:;
	};
}



inline void _1ca0611e9_eliminate_functions_scope_package(jule::Ptr<_1e46a742a_Package>& _24743_pkg) {
	{
		auto &expr = _24743_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1cd656ac7:;
		if (it != expr.end()) {
			jule::Ptr<_1c9745c42_SymbolTable> _24817_f = *it;
			{
				_1ca060e96_eliminate_scope_functions(_24817_f.get()._field_funcs);
			}
			_iter_next_1cd656ac7:;
			++it;
			goto _iter_begin_1cd656ac7;
		}
		_iter_end_1cd656ac7:;
	};
}



inline void _1ca06146e_eliminate_scope_package(jule::Ptr<_1e46a742a_Package>& _25333_pkg) {
	_1ca0611e9_eliminate_functions_scope_package(_25333_pkg);
}



inline void _1ca06168e_eliminate_scopes(jule::Ptr<_1e498133b_IR>& _25830_ir) {
	jule::I64 _25913_i = (_25830_ir.get()._field_used.len() - 1LL);;
	for (; (_25913_i >= 0LL); (_25913_i)--) {
		{
			jule::Ptr<_1e46a4768_ImportInfo> _26117_u = _25830_ir.get()._field_used[_25913_i];;
			if ((!(_26117_u.get()._field_cpp_linked))) {
				_1ca06146e_eliminate_scope_package(_26117_u.get()._field_package);
			};
		}
	_iter_next_1cd658106:;
	}
	_iter_end_1cd658106:;;
	_1ca06146e_eliminate_scope_package(_25830_ir.get()._field_main);
}



inline jule::Bool _1e3ba82ab_is_std_package(jule::Str _39919_f, jule::Str _39927_p) {
	return _20c83c443_has_prefix(_39919_f,_20b961436_join(jule::Slice<jule::Str>::make({_20caa3654_PATH_STDLIB,_39927_p})));
}



inline jule::Bool _1e3bc8210_is_constant_valid_conditional_case(jule::Ptr<_1e46866c3_If>& _40340_i) {
	{
		auto &_match_expr{ _40340_i.get()._field_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1c968bb88_Const>>()) {
			_case_begin_1cd7106a8:;
			{
				jule::Ptr<_1c968bb88_Const> _40613_c = _40340_i.get()._field_expr.operator jule::Ptr<_1c968bb88_Const>();;
				return (_1c9690780_is_bool(_40613_c.ptr()) && _1c968d3d7_read_bool(_40613_c.ptr()));
			}
		}
		_match_end_1cd710653:;
	};
	return false;
}



inline jule::Bool _1e3bcb06a_is_unreachable_expr(jule::Any& _41225_expr) {
	{
		auto &_match_expr{ _41225_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1c968bb88_Const>>()) {
			_case_begin_1cd711203:;
			{
				jule::Ptr<_1c968bb88_Const> _41513_c = _41225_expr.operator jule::Ptr<_1c968bb88_Const>();;
				return (_1c9690780_is_bool(_41513_c.ptr()) && (!(_1c968d3d7_read_bool(_41513_c.ptr()))));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e435a8e7_BinopExprModel>>()) {
			_case_begin_1cd711269:;
			{
				jule::Ptr<_1e435a8e7_BinopExprModel> _41813_m = _41225_expr.operator jule::Ptr<_1e435a8e7_BinopExprModel>();;
				if ((_41813_m.get()._field_op.get()._field_kind == jule::Str("&&", 2))) {
					return (_1e3bcb06a_is_unreachable_expr(_41813_m.get()._field_left.get()._field_model) || _1e3bcb06a_is_unreachable_expr(_41813_m.get()._field_right.get()._field_model));
				};
			}
		}
		_match_end_1cd71119d:;
	};
	return false;
}



inline jule::Bool _1e3bcd963_is_constant_valid_match_case(jule::Ptr<_1e468a9d5_Case>& _42634_case) {
	{
		auto &expr = _42634_case.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1cd7124ce:;
		if (it != expr.end()) {
			jule::Ptr<_1c974abc0_Data> &_42712_expr = *it;
			{
				if (((_1c974b583_is_const(_42712_expr.ptr()) && _1c9690780_is_bool(_42712_expr.get()._field_constant.ptr())) && _1c968d3d7_read_bool(_42712_expr.get()._field_constant.ptr()))) {
					return true;
				};
			}
			_iter_next_1cd7124ce:;
			++it;
			goto _iter_begin_1cd7124ce;
		}
		_iter_end_1cd7124ce:;
	};
	return false;
}



inline jule::Bool _1e3bd574a_is_unreachable_conditional_case(jule::Ptr<_1e46866c3_If>& _43537_i) {
	return _1e3bcb06a_is_unreachable_expr(_43537_i.get()._field_expr);
}



inline jule::Bool _1e3be0eb4_is_unreachable_match_case(jule::Ptr<_1e468a9d5_Case>& _43931_case) {
	{
		auto &expr = _43931_case.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1cd716208:;
		if (it != expr.end()) {
			jule::Ptr<_1c974abc0_Data> &_44012_expr = *it;
			{
				if ((!(_1e3bcb06a_is_unreachable_expr(_44012_expr.get()._field_model)))) {
					return false;
				};
			}
			_iter_next_1cd716208:;
			++it;
			goto _iter_begin_1cd716208;
		}
		_iter_end_1cd716208:;
	};
	return true;
}



inline std::tuple<jule::Bool,jule::U64> _1e40d33a6_check_for_bit_shift_opt(jule::Ptr<_1e4347a8d_OperandExprModel>& _43329_l, jule::Ptr<_1e4347a8d_OperandExprModel>& _43352_r) {
	jule::Bool _43376_ok = jule::Bool();
	jule::U64 _43386_x = jule::U64();
	if (((!(_1e4683d63_is_int(_1c9774aa6_to_str(_43329_l.get()._field_kind.ptr())))) || (!(_1e4683d63_is_int(_1c9774aa6_to_str(_43352_r.get()._field_kind.ptr())))))) {
		_43376_ok = false;
		_43386_x = 0LLU;
		return std::make_tuple(_43376_ok,_43386_x);
	};
	{
		auto &_match_expr{ _43352_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1c968bb88_Const>>()) {
			_case_begin_1cd718c88:;
			{
				goto _match_end_1cd718705;
			}
		}
		else {
			_case_begin_1cd71875a:;
			{
				_43376_ok = false;
				_43386_x = 0LLU;
				return std::make_tuple(_43376_ok,_43386_x);
			}
		}
		_match_end_1cd718705:;
	};
	_43386_x=static_cast<jule::U64>(_1c968dd88_as_u64(_43352_r.get()._field_model.operator jule::Ptr<_1c968bb88_Const>().ptr()));
	if (((_43386_x == 0LLU) || ((_43386_x & 1LL) != 0LLU))) {
		_43376_ok = false;
		_43386_x = 0LLU;
		return std::make_tuple(_43376_ok,_43386_x);
	};
	jule::F64 _4479_j = _1e5c083a3_log2(static_cast<jule::F64>(static_cast<jule::F64>(_43386_x)));;
	jule::U64 _4489_z = static_cast<jule::U64>(_4479_j);;
	if ((static_cast<jule::F64>(_4489_z) != _4479_j)) {
		_43376_ok = false;
		_43386_x = 0LLU;
		return std::make_tuple(_43376_ok,_43386_x);
	};
	_43376_ok = true;
	_43386_x = _4489_z;
	return std::make_tuple(_43376_ok,_43386_x);
}



inline void _1e40d594c_push_opt_level(jule::I64 _3223_level) {
	_20c8e7e49_COPY=(_3223_level >= static_cast<jule::I64>(1LL));
	_20c8e8a0a_DEADCODE=(_3223_level >= static_cast<jule::I64>(1LL));
	_20c8ec14b_APPEND=(_3223_level >= static_cast<jule::I64>(1LL));
	_20c8ec855_MATH=(_3223_level >= static_cast<jule::I64>(1LL));
	_20c8ed724_ACCESS=(_3223_level >= static_cast<jule::I64>(1LL));
	_20c8eeb54_INLINE=(_3223_level >= static_cast<jule::I64>(1LL));
	_20c9048b2_PTR=(_3223_level >= static_cast<jule::I64>(1LL));
	_20c90893d_COND=(_3223_level >= static_cast<jule::I64>(1LL));
}



inline void _1ca037ca3_detect_enabled(void) {
	_1c99dec44_expr_enabled=(((_20c9048b2_PTR || _20c8ec855_MATH) || _20c8ed724_ACCESS) || _20c90893d_COND);
	_1c9d18424_scope_enabled=((_20c90893d_COND || _20c8ec14b_APPEND) || _20c8e7e49_COPY);
}



inline void _1c9e9a991_throw(jule::Str _914_msg) {
	jule::outln(_914_msg);
	_20cae1708_exit(1LL);
}



inline jule::U64 _1ca520213_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));
}



inline jule::U64 _1ca520554_unix_year_to_seconds(jule::U64 _26225_y, jule::Bool& _26243_leap) {
	if (((_26225_y - 2LLU) <= 136LLU)) {
		jule::U64 _26417_leaps = ((_26225_y - 68LLU) >> 2LLU);;
		_26243_leap=(((_26225_y - 68LLU) & 3LLU) == 0LLU);
		if (_26243_leap) {
			(_26417_leaps)--;
		};
		return static_cast<jule::U64>(((31536000LLU * (_26225_y - 70LLU)) + (86400LLU * _26417_leaps)));
	};
	jule::U64 _27213_leaps = 0LLU;;
	jule::U64 _27313_centuries = 0LLU;;
	jule::U64 _27413_cycles = ((_26225_y - 100LLU) / 400LLU);;
	jule::U64 _27513_rem = ((_26225_y - 100LLU) % 400LL);;
	if ((_27513_rem < 0LLU)) {
		(_27413_cycles)--;
		_27513_rem+=400LLU;
	};
	if ((_27513_rem == 0LLU)) {
		_26243_leap=true;
		_27313_centuries=0LLU;
		_27213_leaps=0LLU;
	} else {
		if ((_27513_rem >= 200LLU)) {
			if ((_27513_rem >= 300LLU)) {
				_27313_centuries=3LLU;
				_27513_rem-=300LLU;
			} else {
				_27313_centuries=2LLU;
				_27513_rem-=200LLU;
			};
		} else {
			if ((_27513_rem >= 100LLU)) {
				_27313_centuries=1LLU;
				_27513_rem-=100LLU;
			} else {
				_27313_centuries=0LLU;
			};
		};
		if ((_27513_rem == 0LLU)) {
			_26243_leap=false;
			_27213_leaps=0LLU;
		} else {
			_27213_leaps=static_cast<jule::U64>((_27513_rem >> 2LLU));
			_27513_rem%=4LL;
			_26243_leap=(_27513_rem == 0LLU);
		};
	};
	_27213_leaps+=((97LLU * _27413_cycles) + (24LLU * _27313_centuries));
	if (_26243_leap) {
		(_27213_leaps)++;
	};
	return static_cast<jule::U64>((((((_26225_y - 100LLU) * 31536000LLU) + (_27213_leaps * 86400LLU)) + 946684800LLU) + 86400LLU));
}



inline jule::U64 _1ca5208d9_unix_month_to_seconds(jule::U64 _31926_m, jule::Bool _31939_leap) {
	jule::U64 _32113_t = 0LLU;;
	{
		auto &_match_expr{ _31926_m };
		
		if (_match_expr == 1LL) {
			_case_begin_1cc6e531a:;
			{
				_32113_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1cc6e577c:;
			{
				_32113_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1cc6e57e3:;
			{
				_32113_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1cc6e5859:;
			{
				_32113_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1cc6e58c0:;
			{
				_32113_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1cc6e5936:;
			{
				_32113_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1cc6e59ad:;
			{
				_32113_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1cc6e5a35:;
			{
				_32113_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1cc6e5aac:;
			{
				_32113_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_1cc6e5b34:;
			{
				_32113_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1cc6e5bab:;
			{
				_32113_t=28857600LLU;
			}
		}
		_match_end_1cc6e556d:;
	};
	if ((_31939_leap && (_31926_m >= 2LLU))) {
		_32113_t+=86400LLU;
	};
	return _32113_t;
}



inline jule::Bool _1ca496cd3_is_copy_optimizable(jule::Ptr<_1c974abc0_Data>& _73325_expr) {
	if ((!(_73325_expr.get()._field_lvalue))) {
		return false;
	};
	{
		auto &_match_expr{ _73325_expr.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e437bac2_SlicingExprModel>>()) {
			_case_begin_1cdc038e3:;
			{
				return false;
			}
		}
		_match_end_1cdc047b2:;
	};
	return true;
}



inline jule::Bool _1ca49718a_is_iter_copy_optimizable(jule::Ptr<_1c974abc0_Data>& _74430_expr, jule::Ptr<_1e46c6eb6_Var>& _74444_v) {
	if (((!(_74430_expr.get()._field_lvalue)) && (!(_1c9775a96_mutable(_74430_expr.get()._field_kind.ptr()))))) {
		return true;
	};
	return ((!(_74444_v.get()._field_mutable)) && (!(_74430_expr.get()._field_mutable)));
}



inline jule::Str _1ca4a56c6_decompose_common_esq(jule::U8 _114325_b) {
	{
		auto &_match_expr{ _114325_b };
		
		if (_match_expr == '\\') {
			_case_begin_1cdc061ba:;
			{
				return jule::Str("\\\\", 2);
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1cdc06231:;
			{
				return jule::Str("'", 1);
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1cdc06297:;
			{
				return jule::Str("\\\"", 2);
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1cdc0630d:;
			{
				return jule::Str("\\a", 2);
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1cdc0642e:;
			{
				return jule::Str("\\b", 2);
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1cdc06495:;
			{
				return jule::Str("\\f", 2);
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1cdc0650b:;
			{
				return jule::Str("\\n", 2);
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1cdc06583:;
			{
				return jule::Str("\\r", 2);
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1cdc0660a:;
			{
				return jule::Str("\\t", 2);
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1cdc067e7:;
			{
				return jule::Str("\\v", 2);
			}
		}
		else {
			_case_begin_1cdc0597d:;
			{
				return jule::Str();
			}
		}
		_match_end_1cdc06011:;
	};
}



inline jule::Str _1ca4a59b2_sbtoa(jule::U8 _117010_b) {
	if ((_117010_b == 0LLU)) {
		return jule::Str("\\x00", 4);
	};
	if ((_117010_b < 128LLU)) {
		jule::Str _117513_seq = _1ca4a56c6_decompose_common_esq(_117010_b);;
		if ((!(_117513_seq.empty()))) {
			return _117513_seq;
		};
		if (((32LL <= _117010_b) && (_117010_b <= 126LLU))) {
			return static_cast<jule::Str>(_117010_b);
		};
	};
	jule::Str _11839_seq = _1e5c30908_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_117010_b)),8LL);;
	if ((_11839_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _11839_seq);
	};
	return (jule::Str("\\", 1) + _11839_seq);
}



inline jule::Str _1ca4a5c59_cstr_bytes(jule::Slice<jule::U8> _119015_bytes) {
	jule::Str _119113_lit = jule::Str();;
	{
		auto &expr = _119015_bytes;
		auto it = expr.begin();
		_iter_begin_1cdc0bdb3:;
		if (it != expr.end()) {
			jule::U8 &_119212_b = *it;
			{
				_119113_lit+=_1ca4a59b2_sbtoa(_119212_b);
			}
			_iter_next_1cdc0bdb3:;
			++it;
			goto _iter_begin_1cdc0bdb3;
		}
		_iter_end_1cdc0bdb3:;
	};
	return _119113_lit;
}



inline jule::Str _1ca4a6045_cstr_lit(jule::Slice<jule::U8> _119813_bytes) {
	return ((jule::Str("\"", 1) + _1ca4a5c59_cstr_bytes(_119813_bytes)) + jule::Str("\"", 1));
}



inline jule::Str _1ca4a6386_ftoa(jule::F64 _12029_f, jule::I64 _120217_bitsize) {
	if ((_120217_bitsize != 32LL)) {
		if ((_12029_f == static_cast<jule::F64>(static_cast<jule::I64>(_12029_f)))) {
			return _1ca4a662d_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_12029_f)));
		};
		if ((_12029_f == static_cast<jule::F64>(static_cast<jule::U64>(_12029_f)))) {
			return _1ca4a68c5_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_12029_f)));
		};
	};
	jule::Str _121113_m = _1e4746de3_fmt_float(_12029_f,'f',-1LL,_120217_bitsize);;
	if ((!(_20c5c5ce2_contains(_121113_m,jule::Str(".", 1))))) {
		_121113_m+=jule::Str(".0", 2);
	};
	return _121113_m;
}



inline jule::Str _1ca4a662d_itoa(jule::I64 _12189_x) {
	{
		
		if ((_12189_x == jule::MAX_I64)) {
			_case_begin_1cdc10bdb:;
			{
				return jule::Str("jule::MAX_I64", 13);
			}
		}
		else if ((_12189_x == jule::MIN_I64)) {
			_case_begin_1cdc10ca7:;
			{
				return jule::Str("jule::MIN_I64", 13);
			}
		}
		_match_end_1cdc10acb:;
	};
	jule::Str _12269_fmt = _1e5c30a3a_fmt_int(_12189_x,10LL);;
	if (_20ca94c1c_is_64bit(jule::Str("amd64", 5))) {
		return (_12269_fmt + jule::Str("LL", 2));
	};
	return (_12269_fmt + jule::Str("L", 1));
}



inline jule::Str _1ca4a68c5_utoa(jule::U64 _12339_x) {
	{
		
		if ((_12339_x == jule::MAX_U64)) {
			_case_begin_1cdc12a23:;
			{
				return jule::Str("jule::MAX_U64", 13);
			}
		}
		_match_end_1cdc12957:;
	};
	jule::Str _12399_fmt = _1e5c30908_fmt_uint(_12339_x,10LL);;
	if (_20ca94c1c_is_64bit(jule::Str("amd64", 5))) {
		return (_12399_fmt + jule::Str("LLU", 3));
	};
	return (_12399_fmt + jule::Str("LU", 2));
}



inline jule::Bool _1ca4a6c05_is_forwarded(jule::Ptr<_1e46862c7_Scope>& _124618_s) {
	jule::Any _12479_last = _124618_s.get()._field_stmts[(_124618_s.get()._field_stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _12479_last };
		
		if (_match_expr.type_is<jule::Ptr<_1c974abc0_Data>>()) {
			_case_begin_1cdc14382:;
			{
				{
					auto &_match_expr{ _12479_last.operator jule::Ptr<_1c974abc0_Data>().get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1e437e09c_BuiltinErrorCallExprModel>>()) {
						_case_begin_1cdc15e11:;
						{
							return true;
						}
					}
					else {
						_case_begin_1cdc157d4:;
						{
							return false;
						}
					}
					_match_end_1cdc1577e:;
				};
			}
		}
		else {
			_case_begin_1cdc14bac:;
			{
				return true;
			}
		}
		_match_end_1cdc14b57:;
	};
}



inline jule::Bool _1ca4a6ebe_is_builtin_call_has_debuginf(jule::Ptr<_1e4354902_FnCallExprModel>& _126134_m) {
	if ((!(_1e4383c94_is_builtin(_126134_m.get()._field_func.ptr())))) {
		return false;
	};
	{
		auto &_match_expr{ _126134_m.get()._field_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1e437c980_CommonSubIdentExprModel>>()) {
			_case_begin_1cdc16b15:;
			{
				jule::Ptr<_1e437c980_CommonSubIdentExprModel> _126713_csie = _126134_m.get()._field_expr.operator jule::Ptr<_1e437c980_CommonSubIdentExprModel>();;
				return (_126713_csie.get()._field_ident == jule::Str("swap", 4));
			}
		}
		else {
			_case_begin_1cdc1596b:;
			{
				return false;
			}
		}
		_match_end_1cdc16560:;
	};
}



inline void _1ca5250b4_iter_files(jule::Ptr<_1e46a742a_Package>& _100120_pkg, jule::Fn<void(jule::Ptr<_1c9745c42_SymbolTable>&)> _100135_f) {
	{
		auto &expr = _100120_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1cdc16c69:;
		if (it != expr.end()) {
			jule::Ptr<_1c9745c42_SymbolTable> _100217_file = *it;
			{
				_100135_f(_100217_file);
			}
			_iter_next_1cdc16c69:;
			++it;
			goto _iter_begin_1cdc16c69;
		}
		_iter_end_1cdc16c69:;
	};
}



inline void _1ca525317_prepare_structure(jule::Ptr<_1e43360cb_Struct>& _100727_s) {
	{
		auto &expr = _100727_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1cdc17d69:;
		if (it != expr.end()) {
			jule::Ptr<_1e43462ea_StructIns> _100817_ins = *it;
			{
				{
					auto &expr = _100817_ins.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1cdc18a4b:;
					if (it != expr.end()) {
						jule::Ptr<_1e4380576_Fn> _100921_m = *it;
						{
							if (_100921_m.get()._field_statically) {
								goto _iter_next_1cdc18a4b;
							};
							{
								auto &expr = _100921_m.get()._field_instances;
								auto it = expr.begin();
								_iter_begin_1cdc193ba:;
								if (it != expr.end()) {
									jule::Ptr<_1e4383018_FnIns> _101325_mins = *it;
									{
										jule::Ptr<_1e438217c_ParamIns> _101425_p = _101325_mins.get()._field_params[0LL];;
										if ((!(_1e4355edb_is_ref(_101425_p.get()._field_decl.ptr())))) {
											_101425_p.get()._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(jule::new_ptr<_1ca526516_CustomType>(_1ca526516_CustomType{._field_kind=static__1ca527dca_as_ptr(static__1ca52b131_kind(_101425_p.get()._field_kind))}), 12)});
										} else {
											_101425_p.get()._field_kind=jule::new_ptr<_1c97746ee_TypeKind>(_1c97746ee_TypeKind{._field_kind=jule::Trait<_1c97742c0_Kind>(jule::new_ptr<_1ca526516_CustomType>(_1ca526516_CustomType{._field_kind=static__1ca52b131_kind(_101425_p.get()._field_kind)}), 12)});
										};
									}
									_iter_next_1cdc193ba:;
									++it;
									goto _iter_begin_1cdc193ba;
								}
								_iter_end_1cdc193ba:;
							};
						}
						_iter_next_1cdc18a4b:;
						++it;
						goto _iter_begin_1cdc18a4b;
					}
					_iter_end_1cdc18a4b:;
				};
			}
			_iter_next_1cdc17d69:;
			++it;
			goto _iter_begin_1cdc17d69;
		}
		_iter_end_1cdc17d69:;
	};
}



inline jule::Str _1ca5255ae_concat_all_parts(jule::Slice<jule::Ptr<_20cd9e6ec_Token>> _103421_parts) {
	jule::Str _103513_s = jule::Str();;
	{
		auto &expr = _103421_parts;
		auto it = expr.begin();
		_iter_begin_1cdc18881:;
		if (it != expr.end()) {
			jule::Ptr<_20cd9e6ec_Token> &_103612_p = *it;
			{
				_103513_s+=_103612_p.get()._field_kind;
			}
			_iter_next_1cdc18881:;
			++it;
			goto _iter_begin_1cdc18881;
		}
		_iter_end_1cdc18881:;
	};
	return _103513_s;
}



inline jule::Ptr<_1e43620c4_Directive> _1ca52ce57_find_directive(jule::Slice<jule::Ptr<_1e43620c4_Directive>>& _31824_directives, jule::Str _31855_tag) {
	{
		auto &expr = _31824_directives;
		auto it = expr.begin();
		_iter_begin_1cdc19156:;
		if (it != expr.end()) {
			jule::Ptr<_1e43620c4_Directive> _31917_dr = *it;
			{
				if ((_31917_dr.get()._field_tag.get()._field_kind == _31855_tag)) {
					return _31917_dr;
				};
			}
			_iter_next_1cdc19156:;
			++it;
			goto _iter_begin_1cdc19156;
		}
		_iter_end_1cdc19156:;
	};
	return nullptr;
}



inline jule::Bool _1ca52d2dc_has_directive(jule::Slice<jule::Ptr<_1e43620c4_Directive>>& _32819_directives, jule::Str _32850_tag) {
	return (_1ca52ce57_find_directive(_32819_directives,_32850_tag) != nullptr);
}



inline void _23dbd23ab_print_error_message(jule::Str _3024_msg) {
	jule::outln(_3024_msg);
}



inline void _20ca5b893_help(jule::Slice<jule::Str>& _3510_args) {
	if ((_3510_args.len() > 2LL)) {
		_23dbd23ab_print_error_message((jule::Str("invalid command: ", 17) + _3510_args[2LL]));
		return;;
	};
	jule::I64 _4113_max = _20ca62d3e_HELP_MAP[0LL][0LL].len();;
	{
		auto &expr = _20ca62d3e_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_1cdc6a84a:;
		if (it != expr.end()) {
			jule::Array<jule::Str,2> &_4212_k = *it;
			{
				jule::I64 _4313_n = _4212_k[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_1cdc6a84a:;
			++it;
			goto _iter_begin_1cdc6a84a;
		}
		_iter_end_1cdc6a84a:;
	};
	jule::Str _4913_s = jule::Str();;
	;
	{
		auto &expr = _20ca62d3e_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_1cdc6c176:;
		if (it != expr.end()) {
			jule::I64 _519_i = it - expr.begin();
			jule::Array<jule::Str,2> &_5112_part = *it;
			{
				_4913_s+=_5112_part[0LL];
				_4913_s+=_20b9a0233_repeat(jule::Str(" ", 1),static_cast<jule::I64>(((_4113_max - _5112_part[0LL].len()) + 5LL)));
				_4913_s+=_5112_part[1LL];
				if (((_519_i + 1LL) < 5LL)) {
					_4913_s+=jule::Str("\n", 1);
				};
			}
			_iter_next_1cdc6c176:;
			++it;
			_519_i++;
			goto _iter_begin_1cdc6c176;
		}
		_iter_end_1cdc6c176:;
	};
	jule::outln(_4913_s);
}



inline void _20ca6e07b_version(jule::Slice<jule::Str>& _6313_args) {
	if ((_6313_args.len() > 2LL)) {
		_23dbd23ab_print_error_message((jule::Str("invalid command: ", 17) + _6313_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.11 @master", 18));
}



inline void _20ca70676_tool_distos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	{
		auto &expr = _20ca92eb2_DISTOS;
		auto it = expr.begin();
		_iter_begin_1cdc70454:;
		if (it != expr.end()) {
			jule::Str &_7412_os = *it;
			{
				jule::out(_7412_os);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_1cdc70454:;
			++it;
			goto _iter_begin_1cdc70454;
		}
		_iter_end_1cdc70454:;
	};
	jule::outln(jule::Str());
}



inline void _20ca70e18_tool_distarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	{
		auto &expr = _20ca9328c_DISTARCH;
		auto it = expr.begin();
		_iter_begin_1cdc70c29:;
		if (it != expr.end()) {
			jule::Str &_8412_arch = *it;
			{
				jule::out(_8412_arch);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_1cdc70c29:;
			++it;
			goto _iter_begin_1cdc70c29;
		}
		_iter_end_1cdc70c29:;
	};
	jule::outln(jule::Str());
}



inline void _20ca716aa_tool(jule::Slice<jule::Str>& _9210_args) {
	if ((_9210_args.len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if ((_9210_args.len() > 3LL)) {
		_23dbd23ab_print_error_message((jule::Str("invalid command: ", 17) + _9210_args[3LL]));
		return;;
	};
	jule::Str _1039_cmd = _9210_args[2LL];;
	{
		auto &_match_expr{ _1039_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_1cdc73b2d:;
			{
				_20ca70676_tool_distos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_1cdc73897:;
			{
				_20ca70e18_tool_distarch();
			}
		}
		else {
			_case_begin_1cdc7291d:;
			{
				_23dbd23ab_print_error_message((jule::Str("undefined command: ", 19) + _1039_cmd));
			}
		}
		_match_end_1cdc73666:;
	};
}



inline void _20ca71e4c_julenv(jule::Slice<jule::Str>& _11512_args) {
	if ((_11512_args.len() > 2LL)) {
		_23dbd23ab_print_error_message((jule::Str("invalid command: ", 17) + _11512_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.11 @master", 33));
	jule::outln(jule::Str("architecture: amd64", 19));
	jule::outln(jule::Str("operating system: windows", 25));
	jule::outln((jule::Str("default compiler: ", 18) + _23db43163_COMPILER));
	jule::outln((jule::Str("default C++ standard: ", 22) + _23db434c6_CPP_STD));
}



inline void _20ca726de_mod(jule::Slice<jule::Str>& _1289_args) {
	if ((_1289_args.len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if ((_1289_args.len() > 3LL)) {
		_23dbd23ab_print_error_message((jule::Str("invalid command: ", 17) + _1289_args[3LL]));
		return;;
	};
	{
		auto &_match_expr{ _1289_args[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_1cdc7801c:;
			{
				({
					auto except = static__2252ccb02_write(jule::Str("jule.mod", 8),jule::Slice<jule::U8>(),432LL);
					if (!except.ok()) {
						_23dbd23ab_print_error_message(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1cdc770e8:;
			{
				_23dbd23ab_print_error_message((jule::Str("invalid command: ", 17) + _1289_args[2LL]));
			}
		}
		_match_end_1cdc77b65:;
	};
}



inline jule::Bool _20ca8249b_process_command(jule::Slice<jule::Str>& _15121_args) {
	{
		auto &_match_expr{ _15121_args[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_1cdc797b0:;
			{
				_20ca5b893_help(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_1cdc79826:;
			{
				_20ca6e07b_version(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_1cdc79d98:;
			{
				_20ca716aa_tool(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_1cdc79e0e:;
			{
				_20ca71e4c_julenv(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_1cdc79eb9:;
			{
				_20ca726de_mod(_15121_args);
			}
		}
		else {
			_case_begin_1cdc7889c:;
			{
				return false;
			}
		}
		_match_end_1cdc7933c:;
	};
	return true;
}



inline void _20ca58d13_show_info(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help,\n    version       Show version,\n    tool          Tools for effective Jule,\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 310));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18713_args = _20b90a633_args();;
	if ((_18713_args.len() < 2LL)) {
		_20ca58d13_show_info();
		return;;
	};
	if (_20ca8249b_process_command(_18713_args)) {
		return;;
	};
	_1ca6d01d6_compile_command(_18713_args);
}



inline void _20ca602d1_enable_vtp(void) {
	jule::U64 _199_h_out = _2253a5bec_get_std_handle(static_cast<jule::U64>(18446744073709551605LLU));;
	if ((_199_h_out == jule::MAX_U64)) {
		return;;
	};
	jule::I64 _2413_dw_mode = 0LL;;
	if ((!(_2253a8a8a_get_console_mode(_199_h_out,_2413_dw_mode)))) {
		return;;
	};
	_2413_dw_mode|=4LL;
	_2253a8dcb_set_console_mode(_199_h_out,_2413_dw_mode);
}



inline void _20ca7a010_init(void) {
	_20ca602d1_enable_vtp();
}



inline void _1ca53748e_init(void) {
	_23db43163_COMPILER=jule::Str("clang", 5);
}



inline jule::Ptr<_2253b69ee_File> _1ca537c31_open_output(jule::Str& _4817_path) {
	jule::Str _499_dir = _20b981357_dir(_4817_path);;
	({
		auto except = static__20b8a3642_of(_499_dir);
		if (!except.ok()) {
			({
				auto except = static__2254b91c8_create(_499_dir);
				if (!except.ok()) {
					_1c9e9a991_throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__2252c26c9_create(_4817_path);
		(except.ok()) ? (except.result) : ({
			_1c9e9a991_throw(jule::Str("a problem occurs when code generation", 37));
			nullptr;
		});
	});
}



inline void _1ca539e42_clear_objects(void) {
	({
		auto except = static__22545440a_remove(_1ca536c0d_get_compile_path());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__20b8a29e8_remove(_1ca54767a_OUT_DIR);
}



inline void _1ca5425ed_compile_ir(jule::Str _7715_compiler, jule::Str _7730_compiler_cmd) {
	jule::Ptr<_20cad09a0_Cmd> _7813_cmd = static__20cad0dce_new(_7715_compiler);;
	_7813_cmd.get()._field_args=jule::Slice<jule::Str>::make({_7715_compiler});
	_7813_cmd.get()._field_args=jule::append(_7813_cmd.get()._field_args,_20c5c5bb0_split(_7730_compiler_cmd,jule::Str(" ", 1),-1LL));
	jule::I64 _819_status = ({
		auto except = _20cad5301_spawn(_7813_cmd.ptr());
		(except.ok()) ? (except.result) : ({
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(12LL)) == _match_expr) {
					_case_begin_1cdc84aea:;
					{
						static__1c9e98681_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of fork problem", 56));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(3LL)) == _match_expr) {
					_case_begin_1cdc848db:;
					{
						static__1c9e98681_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(9LL)) == _match_expr) {
					_case_begin_1cdc84952:;
					{
						static__1c9e98681_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not in the proper format", 85));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL)) == _match_expr) {
					_case_begin_1cdc849b8:;
					{
						static__1c9e98681_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1cdc84633:;
					{
						static__1c9e98681_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of unkown problem", 58));
					}
				}
				_match_end_1cdc846bb:;
			};
			_1c9e9a991_throw(jule::Str());
			0LL;
		});
	});;
	if ((_819_status != 0LL)) {
		jule::Str _9813_error_message = ((jule::Str("\n>>> your backend compiler (", 28) + _23db43163_COMPILER) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1c9e98681_print(jule::Str("\033[31m", 5),_9813_error_message);
		_1c9e9a991_throw(jule::Str());
	};
	_1ca539e42_clear_objects();
}



inline jule::Bool _1ca55162e_is_cpp_source_file(jule::Str _10923_path) {
	jule::I64 _1109_offset = _20c5c5473_find_last_byte(_10923_path,'.');;
	if ((_1109_offset == -1LL)) {
		return false;
	};
	return _20ca83766_is_valid_cpp_ext(_10923_path.slice(_1109_offset));
}



inline void _1ca53db16_push_comp_cmd_clang(jule::Str& _11729_cmd) {
	_11729_cmd+=jule::Str("-Wno-everything ", 16);
	_11729_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _23db434c6_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1cdc89c43:;
			{
				_11729_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1cdc8a381:;
			{
				_11729_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1cdc8a3e7:;
			{
				_11729_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1cdc8a282:;
	};
	_11729_cmd+=jule::Str(" ", 1);
	if (_23db44461_PRODUCTION) {
		_11729_cmd+=jule::Str("-O3 ", 4);
		_11729_cmd+=jule::Str("-flto ", 6);
		_11729_cmd+=jule::Str("-DNDEBUG ", 9);
		_11729_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_11729_cmd+=jule::Str("-O0 ", 4);
	};
}



inline void _1ca536eb6_push_comp_cmd_gcc(jule::Str& _14327_cmd) {
	_14327_cmd+=jule::Str("-w ", 3);
	_14327_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _23db434c6_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1cdc8b739:;
			{
				_14327_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1cdc8c86c:;
			{
				_14327_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1cdc8c8d3:;
			{
				_14327_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1cdc8c76d:;
	};
	_14327_cmd+=jule::Str(" ", 1);
	if (_23db44461_PRODUCTION) {
		_14327_cmd+=jule::Str("-O3 ", 4);
		_14327_cmd+=jule::Str("-DNDEBUG ", 9);
		_14327_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_14327_cmd+=jule::Str("-O0 ", 4);
	};
}



inline std::tuple<jule::Str,jule::Str> _1ca548989_gen_compile_cmd(jule::Str _16920_source_path, jule::Ptr<_1e498133b_IR>& _16939_ir) {
	jule::Str &_17010_compiler = _23db4331c_COMPILER_PATH;;
	jule::Str _17113_cmd = jule::Str();;
	{
		auto &_match_expr{ _23db43163_COMPILER };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1cdc8ed14:;
			{
				_1ca536eb6_push_comp_cmd_gcc(_17113_cmd);
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1cdc90199:;
			{
				_1ca53db16_push_comp_cmd_clang(_17113_cmd);
			}
		}
		_match_end_1cdc90001:;
	};
	{
		auto &expr = _16939_ir.get()._field_passes;
		auto it = expr.begin();
		_iter_begin_1cdc90c9e:;
		if (it != expr.end()) {
			jule::Str &_18112_pass = *it;
			{
				_17113_cmd+=_18112_pass;
				_17113_cmd+=jule::Str(" ", 1);
			}
			_iter_next_1cdc90c9e:;
			++it;
			goto _iter_begin_1cdc90c9e;
		}
		_iter_end_1cdc90c9e:;
	};
	{
		auto &expr = _16939_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1cdc91200:;
		if (it != expr.end()) {
			jule::Ptr<_1e46a4768_ImportInfo> &_18712_u = *it;
			{
				if ((_18712_u.get()._field_cpp_linked && _1ca55162e_is_cpp_source_file(_18712_u.get()._field_path))) {
					_17113_cmd+=_18712_u.get()._field_path;
					_17113_cmd+=jule::Str(" ", 1);
				};
			}
			_iter_next_1cdc91200:;
			++it;
			goto _iter_begin_1cdc91200;
		}
		_iter_end_1cdc91200:;
	};
	if ((!(_1ca5529e8_OUT.empty()))) {
		_17113_cmd+=jule::Str("-o ", 3);
		_17113_cmd+=_1ca5529e8_OUT;
		_17113_cmd+=jule::Str(" ", 1);
	};
	_17113_cmd+=_16920_source_path;
	return std::make_tuple(_17010_compiler,_17113_cmd);
}



inline jule::Str _1ca536c0d_get_compile_path(void) {
	return _20b961436_join(jule::Slice<jule::Str>::make({_1ca54767a_OUT_DIR,_1ca549193_OUT_NAME}));
}



inline void _1ca537a66_apply_target_independent_optimizations(jule::Ptr<_1e498133b_IR>& _21448_ir) {
	jule::Ptr<_1ca001d16_Optimizer> _21613_opt = static__1c9d3c16d_new(_21448_ir);;
	_1c9eec6d5_optimize(_21613_opt.ptr());
}



inline void _1ca53b5d6_check_compiler_flag(void) {
	{
		auto &_match_expr{ _23db43163_COMPILER };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1cdc94445:;
			{
				_1c9e9a991_throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1cdc9416a:;
			{
				if (_23db4331c_COMPILER_PATH.empty()) {
					_23db4331c_COMPILER_PATH=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1cdc941d1:;
			{
				if (_23db4331c_COMPILER_PATH.empty()) {
					_23db4331c_COMPILER_PATH=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_1cdc93389:;
			{
				_1c9e9a991_throw((jule::Str("invalid option value for --compiler: ", 37) + _23db43163_COMPILER));
			}
		}
		_match_end_1cdc94104:;
	};
}



inline void _1ca540365_check_target_arch(jule::Str _23722_arch) {
	{
		auto &expr = _20ca9328c_DISTARCH;
		auto it = expr.begin();
		_iter_begin_1cdc95666:;
		if (it != expr.end()) {
			jule::Str &_23812_distarch = *it;
			{
				if ((_23722_arch == _23812_distarch)) {
					return;;
				};
			}
			_iter_next_1cdc95666:;
			++it;
			goto _iter_begin_1cdc95666;
		}
		_iter_end_1cdc95666:;
	};
	_1c9e9a991_throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _23722_arch));
}



inline void _1ca6ce636_check_target_os(jule::Str _24620_os) {
	{
		auto &expr = _20ca92eb2_DISTOS;
		auto it = expr.begin();
		_iter_begin_1cdc97091:;
		if (it != expr.end()) {
			jule::Str &_24712_distos = *it;
			{
				if ((_24620_os == _24712_distos)) {
					return;;
				};
			}
			_iter_next_1cdc97091:;
			++it;
			goto _iter_begin_1cdc97091;
		}
		_iter_end_1cdc97091:;
	};
	_1c9e9a991_throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _24620_os));
}



inline void _1ca6ce768_check_target_flag(jule::Str& _25523_target) {
	if (_25523_target.empty()) {
		_1c9e9a991_throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2609_parts = _20c5c5bb0_split(_25523_target,jule::Str("-", 1),-1LL);;
	if ((_2609_parts.len() != 2LL)) {
		_1c9e9a991_throw((jule::Str("--target: undefined platform target format: ", 44) + _25523_target));
	};
	jule::Str _26510_os = _2609_parts[0LL];;
	jule::Str _26514_arch = _2609_parts[1LL];;
	std::tie(_26510_os,_26514_arch) = std::make_tuple(_2609_parts[0LL],_2609_parts[1LL]);
	if ((_26510_os != jule::Str("native", 6))) {
		_1ca6ce636_check_target_os(_26510_os);
		_20cab3dd4_OS=_26510_os;
	};
	if ((_26514_arch != jule::Str("native", 6))) {
		_1ca540365_check_target_arch(_26514_arch);
		_20cab8449_ARCH=_26514_arch;
	};
	_1e467a035_update_target();
}



inline void _1ca6ce89a_check_opt_flag(jule::Str& _27820_opt) {
	if (_27820_opt.empty()) {
		_1c9e9a991_throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ _27820_opt };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_1cdc9c4b4:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_1cdc9c272:;
			{
				_1e40d594c_push_opt_level(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1cdc9bb56:;
			{
				_1c9e9a991_throw((jule::Str("--opt: invalid optimization level: ", 35) + _27820_opt));
			}
		}
		_match_end_1cdc9b9be:;
	};
}



inline void _1ca6cec0d_check_cpp_std_flag(void) {
	{
		auto &_match_expr{ _23db434c6_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1cdc9d5d6:;
			{
				goto _match_end_1cdc9cbbd;
			}
		}
		else {
			_case_begin_1cdc9c2d8:;
			{
				_1c9e9a991_throw((jule::Str("--cppstd: invalid optimization level: ", 38) + _23db434c6_CPP_STD));
			}
		}
		_match_end_1cdc9cbbd:;
	};
}



inline jule::Slice<jule::Str> _1ca6ced40_check_flags(jule::Slice<jule::Str>& _30317_args) {
	jule::Str _30413_opt = jule::Str("L0", 2);;
	jule::Str _30513_target = jule::Str("native-native", 13);;
	jule::Ptr<_1ca6ca81e_FlagSet> _30713_fs = static__1ca6cab0a_new();;
	_1cdca02db_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_30413_opt)))),jule::Str("opt", 3),0LL,jule::Str("Optimization level", 18));
	_1cdca02db_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_30513_target)))),jule::Str("target", 6),0LL,jule::Str("Target system", 13));
	_1cdca02db_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1ca5529e8_OUT)))),jule::Str("out", 3),'o',jule::Str("Output identifier", 17));
	_1cdca94d2_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_23db43718_SHADOWING)))),jule::Str("shadowing", 9),0LL,jule::Str("Allow shadowing", 15));
	_1cdca94d2_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_23db4396b_TRANSPILATION)))),jule::Str("transpile", 9),'t',jule::Str("Transpile code", 14));
	_1cdca02db_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_23db43163_COMPILER)))),jule::Str("compiler", 8),0LL,jule::Str("Backend compiler", 16));
	_1cdca02db_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_23db4331c_COMPILER_PATH)))),jule::Str("compiler-path", 13),0LL,jule::Str("Path of backend compiler", 24));
	_1cdca94d2_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_23db44461_PRODUCTION)))),jule::Str("production", 10),'p',jule::Str("Compile for production", 22));
	_1cdca94d2_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_23db43e22_RC)))),jule::Str("disable-rc", 10),0LL,jule::Str("Disable reference counting", 26));
	_1cdca94d2_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_23db4420d_SAFETY)))),jule::Str("disable-safety", 14),0LL,jule::Str("Disable safety", 14));
	_1cdca02db_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_23db434c6_CPP_STD)))),jule::Str("cppstd", 6),0LL,jule::Str("C++ standard", 12));
	_1cdca94d2_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20c8e7e49_COPY)))),jule::Str("opt-copy", 8),0LL,jule::Str("Copy optimization", 17));
	_1cdca94d2_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20c8e8a0a_DEADCODE)))),jule::Str("opt-deadcode", 12),0LL,jule::Str("Deadcode optimization", 21));
	_1cdca94d2_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20c8ec14b_APPEND)))),jule::Str("opt-append", 10),0LL,jule::Str("Append optimization", 19));
	_1cdca94d2_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20c8ec855_MATH)))),jule::Str("opt-math", 8),0LL,jule::Str("Math optimization", 17));
	_1cdca94d2_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20c8ed724_ACCESS)))),jule::Str("opt-access", 10),0LL,jule::Str("Access optimization", 19));
	_1cdca94d2_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20c8eeb54_INLINE)))),jule::Str("opt-inline", 10),0LL,jule::Str("Inline optimization", 19));
	_1cdca94d2_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20c9048b2_PTR)))),jule::Str("opt-ptr", 7),0LL,jule::Str("Pointer optimizations", 21));
	_1cdca94d2_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20c90893d_COND)))),jule::Str("opt-cond", 8),0LL,jule::Str("Conditional optimizations", 25));
	jule::Slice<jule::Str> _32913_content = ({
		auto except = _1ca6cb952_parse(_30713_fs.ptr(), _30317_args);
		(except.ok()) ? (except.result) : ({
			_1c9e9a991_throw(except.error.operator jule::Str());
			nullptr;
		});
	});;
	_1ca53b5d6_check_compiler_flag();
	_1ca6cec0d_check_cpp_std_flag();
	_1ca6ce768_check_target_flag(_30513_target);
	_1ca6ce89a_check_opt_flag(_30413_opt);
	return _32913_content;
}



inline void _1ca6cee72_setup_sema_flags(jule::I64& _34226_flags) {
	if (_23db43718_SHADOWING) {
		_34226_flags|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1e498133b_IR> _1ca6d00a4_build_ir(jule::Slice<jule::Str>& _34814_args) {
	jule::Slice<jule::Str> _3499_content = _1ca6ced40_check_flags(_34814_args);;
	jule::I64 _35113_sema_flags = static_cast<jule::I64>(0LL);;
	_1ca6cee72_setup_sema_flags(_35113_sema_flags);
	if ((_3499_content.len() == 0LL)) {
		_1c9e9a991_throw(_20ca9019b_logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>()));
	} else if ((_3499_content.len() > 1LL)) {
		_1c9e9a991_throw((jule::Str("undefined content: ", 19) + _3499_content[1LL]));
	};
	jule::Str _35914_path;;
	jule::Bool _35920_ok;;
	std::tie(_35914_path,_35920_ok) = _20b9737ab_abs(_3499_content[0LL]);
	if ((!(_35920_ok))) {
		_1c9e9a991_throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_2253b6d95_Status> _3659_inf = ({
		auto except = static__20b8a3642_of(_20caa3654_PATH_STDLIB);
		(except.ok()) ? (except.result) : ({{
			_1c9e9a991_throw(_20ca9019b_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
			return nullptr;
		} jule::Ptr<_2253b6d95_Status>();});
	});;
	if ((!(_2252e2012_is_dir(_3659_inf.ptr())))) {
		_1c9e9a991_throw(_20ca9019b_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1e498133b_IR> _37314_ir;;
	jule::Slice<_20ca8ec5b_Log> _37318_logs;;
	std::tie(_37314_ir,_37318_logs) = static__1c9e5ee83_build(_35914_path,_35113_sema_flags);
	if (((_37314_ir == nullptr) && (_37318_logs == nullptr))) {
		_1c9e9a991_throw(_20ca9019b_logf(jule::Str("there is no Jule source code in package: @", 42),jule::Slice<jule::Any>::make({jule::Any(_35914_path)})));
	};
	if ((_37318_logs != nullptr)) {
		static__1c9e9a100_print_logs(_37318_logs);
		_1c9e9a991_throw(jule::Str());
	};
	return _37314_ir;
}



inline void _1ca6d01d6_compile_command(jule::Slice<jule::Str>& _38825_args) {
	_38825_args=_38825_args.slice(1LL);
	if ((_38825_args[0LL] == jule::Str("test", 4))) {
		_23db43bbe_TEST=true;
		_38825_args=_38825_args.slice(1LL);
	};
	jule::Ptr<_1e498133b_IR> _39413_ir = _1ca6d00a4_build_ir(_38825_args);;
	;
	if ((!(_23db43bbe_TEST))) {
		jule::Ptr<_1e4380576_Fn> _39917_main = _1e46a8bbd_find_fn(_39413_ir.get()._field_main.ptr(), jule::Str("main", 4),false);;
		if ((_39917_main == nullptr)) {
			_1c9e9a991_throw(_20ca9019b_logf(jule::Str("missing entry point: entry point (main) function is not defined", 63),jule::Slice<jule::Any>()));
		};
	};
	_1ca537a66_apply_target_independent_optimizations(_39413_ir);
	_1e49740cb_order(_39413_ir.ptr());
	jule::Str _41010_compiler;;
	jule::Str _41020_compiler_cmd;;
	std::tie(_41010_compiler,_41020_compiler_cmd) = _1ca548989_gen_compile_cmd(_1ca536c0d_get_compile_path(),_39413_ir);
	jule::Ptr<_1ca4d7c36_ObjectCoder> _41213_oc = static__1ca4e1b1e_new(_39413_ir,_1ca4e41e8_SerializationInfo{._field_compiler=_41010_compiler, ._field_compiler_command=_41020_compiler_cmd});;
	if (_23db43bbe_TEST) {
		jule::Ptr<_1ca4a8b80_TestCoder> _41717_tc = static__1ca4a9103_new(_41213_oc);;
		_1ca4aa335_serialize(_41717_tc);
	} else {
		_1ca524c51_serialize(_41213_oc);
	};
	jule::Str _4239_path = _1ca536c0d_get_compile_path();;
	jule::Ptr<_2253b69ee_File> _42413_file = _1ca537c31_open_output(_4239_path);;
	({
		auto except = _225420d22_write(_42413_file.ptr(), static_cast<jule::Slice<jule::U8>>(_41213_oc.get()._field_obj));
		if (!except.ok()) {
			_1c9e9a991_throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _2252e0b15_close(_42413_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:428:5"));
	});
	if ((!(_23db4396b_TRANSPILATION))) {
		_1ca5425ed_compile_ir(_41010_compiler,_41020_compiler_cmd);
	};
}



void __jule_call_initializers(void) {
	_20cacdc78_init();
	_1e467a19a_init();
	_20ca7a010_init();
	_1ca53748e_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}