// Auto generated by JuleC.
// JuleC version: jule0.0.15 @master
// Date: 15/8/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp -lws2_32 -lshell32 -lshell32

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <winsock2.h>
#include <ws2ipdef.h>
#include <windows.h>
#include <fcntl.h>
#include <io.h>
#include <cstdio>
#include <sys/stat.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _1ac72e396_comptimeRangeKind{};
struct _1ac7749e6_Importer{};
struct _1ac85957b_Kind{};
struct _1ac879568_Lookup{};
struct _1baa6bbe2_CommonFlag{};
struct _1c1579287_acceptRange;
struct _1c164cc40_StrBuilder;
struct _1a74d3958_Range16;
struct _1a74d3e86_Range32;
struct _1a74d443c_RangeTable;
struct _1a6942d41_lazyBuff;
struct _1d9e50d54_DirEntry;
struct _1d9e510b8_Directory;
struct _1d9e522d9_File;
struct _1d9e5441d_Status;
struct _1a7634900_cmdAttrs;
struct _1a756d63b_Log;
struct _1dbb0263b_floatInfo;
struct _1dbb032da_decimalSlice;
struct _1dbb15594_leftCheat;
struct _1dbb160bc_decimal;
struct _1a6cde8d5_Const;
struct _1ac6b2e62_Token;
struct _1ac6b872b_File;
struct _1ac6ba84e_kindPair;
struct _1ac6c1965_lex;
struct _1ac6c67a0_Ast;
struct _1ac6c7680_Node;
struct _1ac6c7a9d_Directive;
struct _1ac6c8681_TypeDecl;
struct _1ac6c8c8b_IdentTypeDecl;
struct _1ac6c9088_SubIdentTypeDecl;
struct _1ac6c942e_NamespaceTypeDecl;
struct _1ac6c972b_SptrTypeDecl;
struct _1ac6c9ab1_SlcTypeDecl;
struct _1ac6c9dad_TupleTypeDecl;
struct _1ac6ca1aa_PtrTypeDecl;
struct _1ac6ca94c_ArrTypeDecl;
struct _1ac6cb19a_MapTypeDecl;
struct _1ac6cb574_RetTypeDecl;
struct _1ac6cc9b5_Expr;
struct _1ac6cccb2_RangeExpr;
struct _1ac6cd389_UseExpr;
struct _1ac6cd686_TupleExpr;
struct _1ac6cda60_LitExpr;
struct _1ac6cde39_UnsafeExpr;
struct _1ac6ce3e0_IdentExpr;
struct _1ac6cea72_UnaryExpr;
struct _1ac6cee4b_VariadicExpr;
struct _1ac6d0325_CastExpr;
struct _1ac6d06ee_NsSelectionExpr;
struct _1ac6d0ac8_SubIdentExpr;
struct _1ac6d107e_BinaryExpr;
struct _1ac6d16de_FnCallExpr;
struct _1ac6d21d4_FieldExprPair;
struct _1ac6d2a0e_StructLit;
struct _1ac6d2eb5_BraceLit;
struct _1ac6d37e0_KeyValPair;
struct _1ac6d3ed8_SliceExpr;
struct _1ac6d4978_IndexingExpr;
struct _1ac6d50d8_SlicingExpr;
struct _1ac6d53d5_Constraint;
struct _1ac6d588b_GenericDecl;
struct _1ac6d5c65_LabelSt;
struct _1ac6d613e_GotoSt;
struct _1ac6d643b_FallSt;
struct _1ac6d6a9b_AssignLeft;
struct _1ac6d712e_AssignSt;
struct _1ac6d8042_Stmt;
struct _1ac6d86a2_ScopeTree;
struct _1ac6d8dde_ParamDecl;
struct _1ac6da341_FnDecl;
struct _1ac6db4eb_VarDecl;
struct _1ac6db8c5_RetSt;
struct _1ac6dc145_Iter;
struct _1ac6dc970_WhileKind;
struct _1ac6dd377_RangeKind;
struct _1ac6dd751_BreakSt;
struct _1ac6ddb2a_ContSt;
struct _1ac6de0d1_If;
struct _1ac6de4aa_Else;
struct _1ac6de961_Conditional;
struct _1ac6e019d_TypeAliasDecl;
struct _1ac6e0654_Case;
struct _1ac6e0e6d_MatchCase;
struct _1ac6e1787_UseDecl;
struct _1ac6e1c3d_EnumItemDecl;
struct _1ac6e27ee_EnumDecl;
struct _1ac6e3129_TypeEnumItemDecl;
struct _1ac6e3789_TypeEnumDecl;
struct _1ac6e3a53_FieldDecl;
struct _1ac6e4449_StructDecl;
struct _1ac6e4b86_TraitDecl;
struct _1ac6e52e6_Impl;
struct _1ac6eb484_Field;
struct _1ac6ed464_Operators;
struct _1ac6ee377_Struct;
struct _1ac701555_FieldIns;
struct _1ac70600a_OperandExprModel;
struct _1ac706505_BinaryExprModel;
struct _1ac7068ce_UnaryExprModel;
struct _1ac706e0c_StructArgExprModel;
struct _1ac7072a3_StructLitExprModel;
struct _1ac7075a0_AllocStructLitExprModel;
struct _1ac707b33_CastingExprModel;
struct _1ac7084d5_FnCallExprModel;
struct _1ac7088ae_SliceExprModel;
struct _1ac708d65_IndexingExprModel;
struct _1ac70923e_AnonFnExprModel;
struct _1ac709618_KeyValPairExprModel;
struct _1ac709abe_MapExprModel;
struct _1ac70a152_SlicingExprModel;
struct _1ac70a6d5_TraitSubIdentExprModel;
struct _1ac70b076_StructSubIdentExprModel;
struct _1ac70b52c_StructStaticIdentExprModel;
struct _1ac70b906_ArrayExprModel;
struct _1ac70bc03_TupleExprModel;
struct _1ac70c0cc_BuiltinOutCallExprModel;
struct _1ac70c4a6_BuiltinOutlnCallExprModel;
struct _1ac70c880_BuiltinNewCallExprModel;
struct _1ac70cc59_BuiltinPanicCallExprModel;
struct _1ac70d210_BuiltinAssertCallExprModel;
struct _1ac70d6b6_BuiltinMakeCallExprModel;
struct _1ac70da90_BuiltinAppendCallExprModel;
struct _1ac70dd8c_BuiltinLenCallExprModel;
struct _1ac70e189_BuiltinCapCallExprModel;
struct _1ac70e563_BuiltinDeleteCallExprModel;
struct _1ac70e93c_BuiltinCopyCallExprModel;
struct _1ac70ed16_BuiltinErrorCallExprModel;
struct _1ac70a8c2_SizeofExprModel;
struct _1ac710542_AlignofExprModel;
struct _1ac71083e_RuneExprModel;
struct _1ac710b3b_IntegratedToStrExprModel;
struct _1ac711015_BackendEmitExprModel;
struct _1ac711312_FreeExprModel;
struct _1ac712016_RetType;
struct _1ac712797_Param;
struct _1ac71426b_Fn;
struct _1ac7161c4_ParamIns;
struct _1ac717170_FnIns;
struct _1ac71a33d_ReferenceStack;
struct _1ac71b85b_Pass;
struct _1ac721421_symbolBuilder;
struct _1ac727548_Trait;
struct _1ac7291d7_EnumItem;
struct _1ac729c54_Enum;
struct _1ac72ad87_TypeEnumItem;
struct _1ac72b45e_TypeEnum;
struct _1ac72e5b6_comptimeRange;
struct _1ac730089_comptimeStructField;
struct _1ac731c4a_comptimeStructFields;
struct _1ac733345_comptimeStatic;
struct _1ac735006_comptimeStatics;
struct _1ac736601_comptimeEnumField;
struct _1ac737998_comptimeEnumFields;
struct _1ac739093_comptimeParam;
struct _1ac73b309_comptimeParams;
struct _1ac73c904_comptimeTypeInfos;
struct _1ac73deee_comptimeTypeInfo;
struct _1ac745511_comptimeValue;
struct _1ac747d60_comptimeFiles;
struct _1ac74945a_comptimeFile;
struct _1ac74d86b_constraintChecker;
struct _1ac750bc0_Impl;
struct _1ac756126_Scope;
struct _1ac756544_If;
struct _1ac756841_Else;
struct _1ac756c5e_Conditional;
struct _1ac75705b_InfIter;
struct _1ac757512_WhileIter;
struct _1ac757e5d_RangeIter;
struct _1ac7582e3_ContSt;
struct _1ac7586bc_BreakSt;
struct _1ac7589b9_Label;
struct _1ac758d93_GotoSt;
struct _1ac75926c_Postfix;
struct _1ac759723_Assign;
struct _1ac759aec_MultiAssign;
struct _1ac75a25c_Match;
struct _1ac75ad95_Case;
struct _1ac75b48e_FallSt;
struct _1ac75b824_RetSt;
struct _1ac75be84_scopeLabel;
struct _1ac75c517_scopeGoto;
struct _1ac75d42a_scopeChecker;
struct _1ac771460_directiveChecker;
struct _1ac77790b_ImportInfo;
struct _1ac77a832_Package;
struct _1ac797156_commonSemaMeta;
struct _1ac797c7d_Sema;
struct _1ac7b794b_missingRetChecker;
struct _1ac7b9d5a_IterRelation;
struct _1ac7bb015_Var;
struct _1ac7bbd29_FuncPattern;
struct _1ac80b2db_typeCompatibilityChecker;
struct _1ac80d08a_assignTypeChecker;
struct _1ac80e960_dynamicTypeAnnotation;
struct _1ac8147bc_fnCallArgChecker;
struct _1ac817704_structLitChecker;
struct _1ac8194d6_rangeChecker;
struct _1ac81bc47_retTypeChecker;
struct _1ac81e013_SymbolTable;
struct _1ac8243ae_Data;
struct _1ac825503_Value;
struct _1ac8260a3_Eval;
struct _1ac8447ca_unaryEval;
struct _1ac846766_binaryEval;
struct _1ac85814b_InsGeneric;
struct _1ac858c40_TypeAlias;
struct _1ac859a32_TypeKind;
struct _1ac861c04_TypeSymbol;
struct _1ac86260b_Prim;
struct _1ac866137_Sptr;
struct _1ac866b0a_Slc;
struct _1ac8676ee_Tuple;
struct _1ac86829e_Map;
struct _1ac868e2b_Arr;
struct _1ac8698ee_Ptr;
struct _1ac86a900_referencer;
struct _1ac86b8e0_typeChecker;
struct _1ac874574_identTypeLookup;
struct _1ad036351_FileInfo;
struct _1ad1dc98b_stmt;
struct _1ad1dd32c_scopeParser;
struct _1ad1eac52_exprBuilder;
struct _1ad2081e3_assignInfo;
struct _1ad20b5e2_parser;
struct _1ad21d7be_typeBuilder;
struct _1ac9e8b49_CompileInfo;
struct _1ac9ea123_directiveEval;
struct _1ad222905_JuleImporter;
struct _1ad227b19_OrderedDefines;
struct _1ad227d7d_defineOrderer;
struct _1ad37d522_liveTable;
struct _1ad3b2c1b_scopeDeadCode;
struct _1ad3b6e73_exprDeadCode;
struct _1ac94d4a5_SwapExprModel;
struct _1ac94d8c3_EmptyCompareExprModel;
struct _1ac94dbc0_RefExprModel;
struct _1ac94e1ed_StrCompExprModel;
struct _1ac94e781_MutSlicingExprModel;
struct _1ac94ea7d_UnsafeBinaryExprModel;
struct _1ac94ed7a_UnsafeIndexingExprModel;
struct _1ac9502a9_PushToSliceExprModel;
struct _1ac950683_AppendToSliceExprModel;
struct _1ac95183d_scopeOptimizer;
struct _1ac9579cb_exprOptimizer;
struct _1ad3be0ac_Optimizer;
struct _1ad3e6d1b_AnsiEscape;
struct _1ad3e8438_Logger;
struct _1ba9ce8d0_AbsTime;
struct _1ba9d00a6_Time;
struct _1ad826c0c_scopeCoder;
struct _1ad830d8c_exprCoder;
struct _1adc5c593_TestCoder;
struct _1adc60453_identCoder;
struct _1ba9d7a3c_SerializationInfo;
struct _1ba9d8114_traitHash;
struct _1ba9d84dd_traitCast;
struct _1ba9e8ba2_customType;
struct _1ba9e97b8_typeCoder;
struct _1baa02b89_resultCoder;
struct _1bba8e86d_Flag;
struct _1bba96633_Flag;
struct _1bba99d2e_Flag;
struct _1bba9d56e_Flag;
struct _1bbaa1c6a_Flag;
struct _1baa6d793_FlagSet;
struct _1baa71224_argParser;
struct _1ba9d9555_ObjectCoder;
struct _1ad37d90c_ObjectDeadCode;
struct _1ad2253b9_IR;
struct _1ac702105_StructIns;
struct _1a7630665_Cmd;
struct _1c1579287_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

	inline bool operator==(_1c1579287_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_1c1579287_acceptRange _other) { return !this->operator==(_other); }


};
struct _1c164cc40_StrBuilder {
	jule::Slice<jule::U8> _field_buf;
	


};
struct _1a74d3958_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

	inline bool operator==(_1a74d3958_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_1a74d3958_Range16 _other) { return !this->operator==(_other); }


};
struct _1a74d3e86_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

	inline bool operator==(_1a74d3e86_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_1a74d3e86_Range32 _other) { return !this->operator==(_other); }


};
struct _1a74d443c_RangeTable {
	jule::Slice<_1a74d3958_Range16> _field_R16;
	jule::Slice<_1a74d3e86_Range32> _field_R32;
	jule::I64 _field_LatinOffset = 0;
	


};
struct _1a6942d41_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen = 0;
	


};
struct _1d9e50d54_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_1d9e5441d_Status> _field_Stat;
	

	inline bool operator==(_1d9e50d54_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_1d9e50d54_DirEntry _other) { return !this->operator==(_other); }


};
struct _1d9e510b8_Directory {
	

	inline bool operator==(_1d9e510b8_Directory _other) { return true; }

	inline bool operator!=(_1d9e510b8_Directory _other) { return !this->operator==(_other); }


};
struct _1d9e522d9_File {
	jule::Uintptr _field_handle = 0;
	

	inline bool operator==(_1d9e522d9_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_1d9e522d9_File _other) { return !this->operator==(_other); }


};
struct _1d9e5441d_Status {
	jule::I64 _field_mode = 0LL;
	jule::U64 _field_size = 0;
	

	inline bool operator==(_1d9e5441d_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_1d9e5441d_Status _other) { return !this->operator==(_other); }


};
struct _1a7634900_cmdAttrs {
	HANDLE _field_hProcess = nullptr;
	HANDLE _field_hThread = nullptr;
	

	inline bool operator==(_1a7634900_cmdAttrs _other) {
		return 
			this->_field_hProcess == _other._field_hProcess &&
			this->_field_hThread == _other._field_hThread;
	}

	inline bool operator!=(_1a7634900_cmdAttrs _other) { return !this->operator==(_other); }


};
struct _1a756d63b_Log {
	jule::I64 _field_Kind = 0LL;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

	inline bool operator==(_1a756d63b_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_1a756d63b_Log _other) { return !this->operator==(_other); }


};
struct _1dbb0263b_floatInfo {
	jule::U64 _field_mantbits = 0;
	jule::U64 _field_expbits = 0;
	jule::I64 _field_bias = 0;
	

	inline bool operator==(_1dbb0263b_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1dbb0263b_floatInfo _other) { return !this->operator==(_other); }


};
struct _1dbb032da_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	


};
struct _1dbb15594_leftCheat {
	jule::I64 _field_delta = 0;
	jule::Str _field_cutoff;
	

	inline bool operator==(_1dbb15594_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1dbb15594_leftCheat _other) { return !this->operator==(_other); }


};
struct _1dbb160bc_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

	inline bool operator==(_1dbb160bc_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1dbb160bc_decimal _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a6ce548a_Eq(_1a6cde8d5_Const*, _1a6cde8d5_Const);
inline jule::Bool _1a6ce57cb_Lt(_1a6cde8d5_Const*, _1a6cde8d5_Const);
inline jule::Bool _1a6ce5b1c_LtEq(_1a6cde8d5_Const*, _1a6cde8d5_Const);
inline jule::Bool _1a6ce5e5d_Gt(_1a6cde8d5_Const*, _1a6cde8d5_Const);
inline jule::Bool _1a6ce629e_GtEq(_1a6cde8d5_Const*, _1a6cde8d5_Const);
struct _1a6cde8d5_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

	inline jule::Bool operator==(_1a6cde8d5_Const _other) { return _1a6ce548a_Eq(this, _other); }

	inline bool operator!=(_1a6cde8d5_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1a6cde8d5_Const _other) { return _1a6ce5e5d_Gt(this, _other); }

	inline jule::Bool operator>=(_1a6cde8d5_Const _other) { return _1a6ce629e_GtEq(this, _other); }

	inline jule::Bool operator<(_1a6cde8d5_Const _other) { return _1a6ce57cb_Lt(this, _other); }

	inline jule::Bool operator<=(_1a6cde8d5_Const _other) { return _1a6ce5b1c_LtEq(this, _other); }


};
struct _1ac6b2e62_Token {
	jule::Ptr<_1ac6b872b_File> _field_File;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U64 _field_Id = 0LLU;
	

	inline bool operator==(_1ac6b2e62_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_1ac6b2e62_Token _other) { return !this->operator==(_other); }


};
struct _1ac6b872b_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _field_Tokens;
	


};
struct _1ac6ba84e_kindPair {
	jule::Str _field_kind = jule::Str::lit("::", 2);
	jule::U64 _field_id = 0LLU;
	

	inline bool operator==(_1ac6ba84e_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1ac6ba84e_kindPair _other) { return !this->operator==(_other); }


};
struct _1ac6c1965_lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _field_tokens;
	jule::Ptr<_1ac6b872b_File> _field_file;
	jule::I64 _field_pos = 0;
	jule::I64 _field_column = 0;
	jule::I64 _field_row = 0;
	jule::Slice<_1a756d63b_Log> _field_errors;
	


};
struct _1ac6c67a0_Ast {
	jule::Ptr<_1ac6b872b_File> _field_File;
	jule::Slice<jule::Ptr<_1ac6c7a9d_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1ac6e1787_UseDecl>> _field_UseDecls;
	jule::Slice<_1ac6c7680_Node> _field_Nodes;
	


};
struct _1ac6c7680_Node {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1ac6c7680_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1ac6c7680_Node _other) { return !this->operator==(_other); }


};
struct _1ac6c7a9d_Directive {
	jule::Ptr<_1ac6b2e62_Token> _field_Tag;
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _field_Args;
	


};
struct _1ac6c8681_TypeDecl {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1ac6c8681_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ac6c8681_TypeDecl _other) { return !this->operator==(_other); }


};
struct _1ac6c8c8b_IdentTypeDecl {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1ac6c8681_TypeDecl>> _field_Generics;
	


};
struct _1ac6c9088_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1ac6c8c8b_IdentTypeDecl>> _field_Idents;
	


};
struct _1ac6c942e_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _field_Idents;
	jule::Ptr<_1ac6c8681_TypeDecl> _field_Kind;
	


};
struct _1ac6c972b_SptrTypeDecl {
	jule::Ptr<_1ac6c8681_TypeDecl> _field_Elem;
	

	inline bool operator==(_1ac6c972b_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ac6c972b_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1ac6c9ab1_SlcTypeDecl {
	jule::Ptr<_1ac6c8681_TypeDecl> _field_Elem;
	

	inline bool operator==(_1ac6c9ab1_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ac6c9ab1_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1ac6c9dad_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1ac6c8681_TypeDecl>> _field_Types;
	


};
struct _1ac6ca1aa_PtrTypeDecl {
	jule::Ptr<_1ac6c8681_TypeDecl> _field_Elem;
	

	inline bool operator==(_1ac6ca1aa_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ac6ca1aa_PtrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1ac6ca94c_ArrTypeDecl {
	jule::Ptr<_1ac6c8681_TypeDecl> _field_Elem;
	jule::Ptr<_1ac6cc9b5_Expr> _field_Size;
	

	inline bool operator==(_1ac6ca94c_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1ac6ca94c_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1ac6cb19a_MapTypeDecl {
	jule::Ptr<_1ac6c8681_TypeDecl> _field_Key;
	jule::Ptr<_1ac6c8681_TypeDecl> _field_Val;
	

	inline bool operator==(_1ac6cb19a_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1ac6cb19a_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1ac6cb574_RetTypeDecl {
	jule::Ptr<_1ac6c8681_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _field_Idents;
	


};
struct _1ac6cc9b5_Expr {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Ptr<_1ac6b2e62_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1ac6cc9b5_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ac6cc9b5_Expr _other) { return !this->operator==(_other); }


};
struct _1ac6cccb2_RangeExpr {
	jule::Ptr<_1ac6cc9b5_Expr> _field_Expr;
	

	inline bool operator==(_1ac6cccb2_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac6cccb2_RangeExpr _other) { return !this->operator==(_other); }


};
struct _1ac6cd389_UseExpr {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Ptr<_1ac6cc9b5_Expr> _field_Expr;
	

	inline bool operator==(_1ac6cd389_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac6cd389_UseExpr _other) { return !this->operator==(_other); }


};
struct _1ac6cd686_TupleExpr {
	jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>> _field_Expr;
	


};
struct _1ac6cda60_LitExpr {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Str _field_Value;
	

	inline bool operator==(_1ac6cda60_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1ac6cda60_LitExpr _other) { return !this->operator==(_other); }


};
struct _1ac6cde39_UnsafeExpr {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Ptr<_1ac6cc9b5_Expr> _field_Expr;
	

	inline bool operator==(_1ac6cde39_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac6cde39_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _1ac6ce3e0_IdentExpr {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	

	inline bool operator==(_1ac6ce3e0_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Binded == _other._field_Binded;
	}

	inline bool operator!=(_1ac6ce3e0_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1ac6cea72_UnaryExpr {
	jule::Ptr<_1ac6b2e62_Token> _field_Op;
	jule::Ptr<_1ac6cc9b5_Expr> _field_Expr;
	

	inline bool operator==(_1ac6cea72_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac6cea72_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1ac6cee4b_VariadicExpr {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Ptr<_1ac6cc9b5_Expr> _field_Expr;
	

	inline bool operator==(_1ac6cee4b_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac6cee4b_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1ac6d0325_CastExpr {
	jule::Ptr<_1ac6c8681_TypeDecl> _field_Kind;
	jule::Ptr<_1ac6cc9b5_Expr> _field_Expr;
	

	inline bool operator==(_1ac6d0325_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac6d0325_CastExpr _other) { return !this->operator==(_other); }


};
struct _1ac6d06ee_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _field_Ns;
	jule::Ptr<_1ac6b2e62_Token> _field_Ident;
	


};
struct _1ac6d0ac8_SubIdentExpr {
	jule::Ptr<_1ac6cc9b5_Expr> _field_Expr;
	jule::Ptr<_1ac6b2e62_Token> _field_Ident;
	

	inline bool operator==(_1ac6d0ac8_SubIdentExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1ac6d0ac8_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1ac6d107e_BinaryExpr {
	jule::Ptr<_1ac6cc9b5_Expr> _field_Left;
	jule::Ptr<_1ac6cc9b5_Expr> _field_Right;
	jule::Ptr<_1ac6b2e62_Token> _field_Op;
	

	inline bool operator==(_1ac6d107e_BinaryExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1ac6d107e_BinaryExpr _other) { return !this->operator==(_other); }


};
struct _1ac6d16de_FnCallExpr {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Ptr<_1ac6cc9b5_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>> _field_Args;
	jule::Ptr<_1ac6d86a2_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	


};
struct _1ac6d21d4_FieldExprPair {
	jule::Ptr<_1ac6b2e62_Token> _field_Field;
	jule::Ptr<_1ac6cc9b5_Expr> _field_Expr;
	

	inline bool operator==(_1ac6d21d4_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac6d21d4_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1ac6d2a0e_StructLit {
	jule::Ptr<_1ac6b2e62_Token> _field_End;
	jule::Ptr<_1ac6c8681_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>> _field_Exprs;
	


};
struct _1ac6d2eb5_BraceLit {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Ptr<_1ac6b2e62_Token> _field_End;
	jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>> _field_Exprs;
	


};
struct _1ac6d37e0_KeyValPair {
	jule::Ptr<_1ac6cc9b5_Expr> _field_Key;
	jule::Ptr<_1ac6cc9b5_Expr> _field_Val;
	jule::Ptr<_1ac6b2e62_Token> _field_Colon;
	

	inline bool operator==(_1ac6d37e0_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_1ac6d37e0_KeyValPair _other) { return !this->operator==(_other); }


};
struct _1ac6d3ed8_SliceExpr {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Ptr<_1ac6b2e62_Token> _field_End;
	jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>> _field_Exprs;
	


};
struct _1ac6d4978_IndexingExpr {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Ptr<_1ac6b2e62_Token> _field_End;
	jule::Ptr<_1ac6cc9b5_Expr> _field_Expr;
	jule::Ptr<_1ac6cc9b5_Expr> _field_Index;
	

	inline bool operator==(_1ac6d4978_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1ac6d4978_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1ac6d50d8_SlicingExpr {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Ptr<_1ac6b2e62_Token> _field_End;
	jule::Ptr<_1ac6cc9b5_Expr> _field_Expr;
	jule::Ptr<_1ac6cc9b5_Expr> _field_Start;
	jule::Ptr<_1ac6cc9b5_Expr> _field_To;
	

	inline bool operator==(_1ac6d50d8_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_1ac6d50d8_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1ac6d53d5_Constraint {
	jule::Slice<jule::Ptr<_1ac6c8681_TypeDecl>> _field_Mask;
	


};
struct _1ac6d588b_GenericDecl {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ac6d53d5_Constraint> _field_Constraint;
	

	inline bool operator==(_1ac6d588b_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1ac6d588b_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1ac6d5c65_LabelSt {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Str _field_Ident;
	

	inline bool operator==(_1ac6d5c65_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1ac6d5c65_LabelSt _other) { return !this->operator==(_other); }


};
struct _1ac6d613e_GotoSt {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Ptr<_1ac6b2e62_Token> _field_Label;
	

	inline bool operator==(_1ac6d613e_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1ac6d613e_GotoSt _other) { return !this->operator==(_other); }


};
struct _1ac6d643b_FallSt {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	

	inline bool operator==(_1ac6d643b_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_1ac6d643b_FallSt _other) { return !this->operator==(_other); }


};
struct _1ac6d6a9b_AssignLeft {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_1ac6cc9b5_Expr> _field_Expr;
	

	inline bool operator==(_1ac6d6a9b_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac6d6a9b_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1ac6d712e_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_1ac6b2e62_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1ac6d6a9b_AssignLeft>> _field_Left;
	jule::Ptr<_1ac6cc9b5_Expr> _field_Right;
	


};
struct _1ac6d8042_Stmt {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1ac6d8042_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1ac6d8042_Stmt _other) { return !this->operator==(_other); }


};
struct _1ac6d86a2_ScopeTree {
	jule::Ptr<_1ac6d86a2_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_1ac6d8042_Stmt> _field_Stmts;
	jule::Ptr<_1ac6b2e62_Token> _field_End;
	


};
struct _1ac6d8dde_ParamDecl {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1ac6c8681_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1ac6d8dde_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1ac6d8dde_ParamDecl _other) { return !this->operator==(_other); }


};
struct _1ac6da341_FnDecl {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ac6c7a9d_Directive>> _field_Directives;
	jule::Ptr<_1ac6d86a2_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1ac6d588b_GenericDecl>> _field_Generics;
	jule::Ptr<_1ac6cb574_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1ac6d8dde_ParamDecl>> _field_Params;
	


};
struct _1ac6db4eb_VarDecl {
	jule::Ptr<_1ac6d86a2_ScopeTree> _field_Scope;
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Ptr<_1ac6b2e62_Token> _field_Setter;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_1ac6c7a9d_Directive>> _field_Directives;
	jule::Ptr<_1ac6c8681_TypeDecl> _field_Kind;
	jule::Ptr<_1ac6cc9b5_Expr> _field_Expr;
	


};
struct _1ac6db8c5_RetSt {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Ptr<_1ac6cc9b5_Expr> _field_Expr;
	

	inline bool operator==(_1ac6db8c5_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac6db8c5_RetSt _other) { return !this->operator==(_other); }


};
struct _1ac6dc145_Iter {
	jule::Bool _field_Comptime = false;
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_1ac6d86a2_ScopeTree> _field_Scope;
	

	inline bool operator==(_1ac6dc145_Iter _other) {
		return 
			this->_field_Comptime == _other._field_Comptime &&
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ac6dc145_Iter _other) { return !this->operator==(_other); }


};
struct _1ac6dc970_WhileKind {
	jule::Ptr<_1ac6cc9b5_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1ac6b2e62_Token> _field_NextToken;
	

	inline bool operator==(_1ac6dc970_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_1ac6dc970_WhileKind _other) { return !this->operator==(_other); }


};
struct _1ac6dd377_RangeKind {
	jule::Ptr<_1ac6b2e62_Token> _field_InToken;
	jule::Ptr<_1ac6cc9b5_Expr> _field_Expr;
	jule::Ptr<_1ac6db4eb_VarDecl> _field_KeyA;
	jule::Ptr<_1ac6db4eb_VarDecl> _field_KeyB;
	

	inline bool operator==(_1ac6dd377_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1ac6dd377_RangeKind _other) { return !this->operator==(_other); }


};
struct _1ac6dd751_BreakSt {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Ptr<_1ac6b2e62_Token> _field_Label;
	

	inline bool operator==(_1ac6dd751_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1ac6dd751_BreakSt _other) { return !this->operator==(_other); }


};
struct _1ac6ddb2a_ContSt {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Ptr<_1ac6b2e62_Token> _field_Label;
	

	inline bool operator==(_1ac6ddb2a_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1ac6ddb2a_ContSt _other) { return !this->operator==(_other); }


};
struct _1ac6de0d1_If {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Ptr<_1ac6cc9b5_Expr> _field_Expr;
	jule::Ptr<_1ac6d86a2_ScopeTree> _field_Scope;
	

	inline bool operator==(_1ac6de0d1_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ac6de0d1_If _other) { return !this->operator==(_other); }


};
struct _1ac6de4aa_Else {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Ptr<_1ac6d86a2_ScopeTree> _field_Scope;
	

	inline bool operator==(_1ac6de4aa_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ac6de4aa_Else _other) { return !this->operator==(_other); }


};
struct _1ac6de961_Conditional {
	jule::Ptr<_1ac6de0d1_If> _field_Head;
	jule::Slice<jule::Ptr<_1ac6de0d1_If>> _field_Tail;
	jule::Ptr<_1ac6de4aa_Else> _field_Default;
	


};
struct _1ac6e019d_TypeAliasDecl {
	jule::Ptr<_1ac6d86a2_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ac6c8681_TypeDecl> _field_Kind;
	

	inline bool operator==(_1ac6e019d_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_Binded == _other._field_Binded &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ac6e019d_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1ac6e0654_Case {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Ptr<_1ac6d86a2_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>> _field_Exprs;
	


};
struct _1ac6e0e6d_MatchCase {
	jule::Bool _field_Comptime = false;
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Ptr<_1ac6b2e62_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_1ac6cc9b5_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1ac6e0654_Case>> _field_Cases;
	jule::Ptr<_1ac6de4aa_Else> _field_Default;
	


};
struct _1ac6e1787_UseDecl {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _field_Selected;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	


};
struct _1ac6e1c3d_EnumItemDecl {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ac6cc9b5_Expr> _field_Expr;
	

	inline bool operator==(_1ac6e1c3d_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac6e1c3d_EnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1ac6e27ee_EnumDecl {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1ac6c8681_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1ac6e1c3d_EnumItemDecl>> _field_Items;
	jule::Ptr<_1ac6b2e62_Token> _field_End;
	


};
struct _1ac6e3129_TypeEnumItemDecl {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ac6c8681_TypeDecl> _field_Kind;
	

	inline bool operator==(_1ac6e3129_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ac6e3129_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1ac6e3789_TypeEnumDecl {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ac6e3129_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_1ac6b2e62_Token> _field_End;
	


};
struct _1ac6e3a53_FieldDecl {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1ac6c8681_TypeDecl> _field_Kind;
	jule::Ptr<_1ac6cc9b5_Expr> _field_Default;
	

	inline bool operator==(_1ac6e3a53_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1ac6e3a53_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1ac6e4449_StructDecl {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Ptr<_1ac6b2e62_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ac6e3a53_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1ac6c7a9d_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1ac6d588b_GenericDecl>> _field_Generics;
	


};
struct _1ac6e4b86_TraitDecl {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Ptr<_1ac6b2e62_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1ac6c8681_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1ac6da341_FnDecl>> _field_Methods;
	


};
struct _1ac6e52e6_Impl {
	jule::Ptr<_1ac6b2e62_Token> _field_End;
	jule::Ptr<_1ac6c8681_TypeDecl> _field_Base;
	jule::Ptr<_1ac6c8681_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1ac6da341_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1ac6db4eb_VarDecl>> _field_Statics;
	


};
struct _1ac6eb484_Field {
	jule::Ptr<_1ac6ee377_Struct> _field_Owner;
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1ac861c04_TypeSymbol> _field_Kind;
	jule::Ptr<_1ac6cc9b5_Expr> _field_Default;
	

	inline bool operator==(_1ac6eb484_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1ac6eb484_Field _other) { return !this->operator==(_other); }


};
struct _1ac6ed464_Operators {
	jule::Ptr<_1ac717170_FnIns> _field_Eq;
	jule::Ptr<_1ac717170_FnIns> _field_Gt;
	jule::Ptr<_1ac717170_FnIns> _field_GtEq;
	jule::Ptr<_1ac717170_FnIns> _field_Lt;
	jule::Ptr<_1ac717170_FnIns> _field_LtEq;
	jule::Ptr<_1ac717170_FnIns> _field_Shl;
	jule::Ptr<_1ac717170_FnIns> _field_Shr;
	jule::Ptr<_1ac717170_FnIns> _field_Add;
	jule::Ptr<_1ac717170_FnIns> _field_Sub;
	jule::Ptr<_1ac717170_FnIns> _field_Div;
	jule::Ptr<_1ac717170_FnIns> _field_Mul;
	jule::Ptr<_1ac717170_FnIns> _field_Mod;
	jule::Ptr<_1ac717170_FnIns> _field_BitAnd;
	jule::Ptr<_1ac717170_FnIns> _field_BitOr;
	jule::Ptr<_1ac717170_FnIns> _field_BitXor;
	jule::Ptr<_1ac717170_FnIns> _field_Neg;
	jule::Ptr<_1ac717170_FnIns> _field_Pos;
	jule::Ptr<_1ac717170_FnIns> _field_BitNot;
	jule::Ptr<_1ac717170_FnIns> _field_AddAssign;
	jule::Ptr<_1ac717170_FnIns> _field_SubAssign;
	jule::Ptr<_1ac717170_FnIns> _field_DivAssign;
	jule::Ptr<_1ac717170_FnIns> _field_MulAssign;
	jule::Ptr<_1ac717170_FnIns> _field_ModAssign;
	jule::Ptr<_1ac717170_FnIns> _field_ShlAssign;
	jule::Ptr<_1ac717170_FnIns> _field_ShrAssign;
	jule::Ptr<_1ac717170_FnIns> _field_BitOrAssign;
	jule::Ptr<_1ac717170_FnIns> _field_BitAndAssign;
	jule::Ptr<_1ac717170_FnIns> _field_BitXorAssign;
	

	inline bool operator==(_1ac6ed464_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_1ac6ed464_Operators _other) { return !this->operator==(_other); }


};
struct _1ac6ee377_Struct {
	jule::Ptr<_1ac797c7d_Sema> _field_sema;
	jule::Slice<jule::Ptr<_1ac6ee377_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1ac6ee377_Struct>> _field_Uses;
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ac6eb484_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1ac71426b_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1ac7bb015_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1ac6c7a9d_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1ac6d588b_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1ac727548_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1ac702105_StructIns>> _field_Instances;
	


};
struct _1ac701555_FieldIns {
	jule::Ptr<_1ac6eb484_Field> _field_Decl;
	jule::Ptr<_1ac859a32_TypeKind> _field_Kind;
	jule::Ptr<_1ac8243ae_Data> _field_Default;
	

	inline bool operator==(_1ac701555_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1ac701555_FieldIns _other) { return !this->operator==(_other); }


};
struct _1ac70600a_OperandExprModel {
	jule::Ptr<_1ac859a32_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

	inline bool operator==(_1ac70600a_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_1ac70600a_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1ac706505_BinaryExprModel {
	jule::Ptr<_1ac70600a_OperandExprModel> _field_Left;
	jule::Ptr<_1ac70600a_OperandExprModel> _field_Right;
	jule::Ptr<_1ac6b2e62_Token> _field_Op;
	

	inline bool operator==(_1ac706505_BinaryExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1ac706505_BinaryExprModel _other) { return !this->operator==(_other); }


};
struct _1ac7068ce_UnaryExprModel {
	jule::Ptr<_1ac8243ae_Data> _field_Expr;
	jule::Ptr<_1ac6b2e62_Token> _field_Op;
	

	inline bool operator==(_1ac7068ce_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1ac7068ce_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1ac706e0c_StructArgExprModel {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Ptr<_1ac701555_FieldIns> _field_Field;
	jule::Ptr<_1ac8243ae_Data> _field_Expr;
	

	inline bool operator==(_1ac706e0c_StructArgExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac706e0c_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1ac7072a3_StructLitExprModel {
	jule::Ptr<_1ac702105_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1ac706e0c_StructArgExprModel>> _field_Args;
	


};
struct _1ac7075a0_AllocStructLitExprModel {
	jule::Ptr<_1ac7072a3_StructLitExprModel> _field_Lit;
	

	inline bool operator==(_1ac7075a0_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_1ac7075a0_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1ac707b33_CastingExprModel {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1ac859a32_TypeKind> _field_Kind;
	jule::Ptr<_1ac859a32_TypeKind> _field_ExprKind;
	

	inline bool operator==(_1ac707b33_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_1ac707b33_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1ac7084d5_FnCallExprModel {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Ptr<_1ac717170_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1ac756126_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	


};
struct _1ac7088ae_SliceExprModel {
	jule::Ptr<_1ac859a32_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1ac708d65_IndexingExprModel {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Ptr<_1ac8243ae_Data> _field_Expr;
	jule::Ptr<_1ac8243ae_Data> _field_Index;
	

	inline bool operator==(_1ac708d65_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1ac708d65_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1ac70923e_AnonFnExprModel {
	jule::Ptr<_1ac717170_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	

	inline bool operator==(_1ac70923e_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_1ac70923e_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1ac709618_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

	inline bool operator==(_1ac709618_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1ac709618_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1ac709abe_MapExprModel {
	jule::Ptr<_1ac859a32_TypeKind> _field_KeyKind;
	jule::Ptr<_1ac859a32_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_1ac709618_KeyValPairExprModel>> _field_Entries;
	


};
struct _1ac70a152_SlicingExprModel {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1ac70a152_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1ac70a152_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1ac70a6d5_TraitSubIdentExprModel {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1ac71426b_Fn> _field_Method;
	jule::Ptr<_1ac727548_Trait> _field_Trt;
	

	inline bool operator==(_1ac70a6d5_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_1ac70a6d5_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1ac70b076_StructSubIdentExprModel {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Ptr<_1ac8243ae_Data> _field_Expr;
	jule::Ptr<_1ac717170_FnIns> _field_Method;
	jule::Ptr<_1ac701555_FieldIns> _field_Field;
	jule::Ptr<_1ac702105_StructIns> _field_Owner;
	

	inline bool operator==(_1ac70b076_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_1ac70b076_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1ac70b52c_StructStaticIdentExprModel {
	jule::Ptr<_1ac702105_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1ac717170_FnIns> _field_Method;
	

	inline bool operator==(_1ac70b52c_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_1ac70b52c_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1ac70b906_ArrayExprModel {
	jule::Ptr<_1ac868e2b_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1ac70bc03_TupleExprModel {
	jule::Slice<jule::Ptr<_1ac8243ae_Data>> _field_Datas;
	


};
struct _1ac70c0cc_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1ac70c0cc_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1ac70c0cc_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ac70c4a6_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1ac70c4a6_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1ac70c4a6_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ac70c880_BuiltinNewCallExprModel {
	jule::Ptr<_1ac859a32_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

	inline bool operator==(_1ac70c880_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_1ac70c880_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ac70cc59_BuiltinPanicCallExprModel {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1ac70cc59_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac70cc59_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ac70d210_BuiltinAssertCallExprModel {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

	inline bool operator==(_1ac70d210_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_1ac70d210_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ac70d6b6_BuiltinMakeCallExprModel {
	jule::Ptr<_1ac859a32_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

	inline bool operator==(_1ac70d6b6_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_1ac70d6b6_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ac70da90_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

	inline bool operator==(_1ac70da90_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_1ac70da90_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ac70dd8c_BuiltinLenCallExprModel {
	jule::Ptr<_1ac8243ae_Data> _field_Expr;
	

	inline bool operator==(_1ac70dd8c_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac70dd8c_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ac70e189_BuiltinCapCallExprModel {
	jule::Ptr<_1ac8243ae_Data> _field_Expr;
	

	inline bool operator==(_1ac70e189_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac70e189_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ac70e563_BuiltinDeleteCallExprModel {
	jule::Ptr<_1ac8243ae_Data> _field_Dest;
	jule::Ptr<_1ac8243ae_Data> _field_Key;
	

	inline bool operator==(_1ac70e563_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_1ac70e563_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ac70e93c_BuiltinCopyCallExprModel {
	jule::Ptr<_1ac8243ae_Data> _field_Dest;
	jule::Ptr<_1ac8243ae_Data> _field_Src;
	

	inline bool operator==(_1ac70e93c_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_1ac70e93c_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ac70ed16_BuiltinErrorCallExprModel {
	jule::Ptr<_1ac717170_FnIns> _field_Func;
	jule::Ptr<_1ac8243ae_Data> _field_Err;
	

	inline bool operator==(_1ac70ed16_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_1ac70ed16_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ac70a8c2_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1ac70a8c2_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac70a8c2_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1ac710542_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1ac710542_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac710542_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1ac71083e_RuneExprModel {
	jule::I32 _field_Code = 0;
	

	inline bool operator==(_1ac71083e_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_1ac71083e_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1ac710b3b_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1ac710b3b_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac710b3b_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1ac711015_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	


};
struct _1ac711312_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1ac711312_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac711312_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1ac712016_RetType {
	jule::Ptr<_1ac861c04_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _field_Idents;
	


};
struct _1ac712797_Param {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1ac861c04_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1ac712797_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1ac712797_Param _other) { return !this->operator==(_other); }


};
struct _1ac71426b_Fn {
	jule::Ptr<_1ac797c7d_Sema> _field_sema;
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ac6c7a9d_Directive>> _field_Directives;
	jule::Ptr<_1ac6d86a2_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1ac6d588b_GenericDecl>> _field_Generics;
	jule::Ptr<_1ac712016_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1ac712797_Param>> _field_Params;
	jule::Ptr<_1ac6ee377_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1ac717170_FnIns>> _field_Instances;
	


};
struct _1ac7161c4_ParamIns {
	jule::Ptr<_1ac712797_Param> _field_Decl;
	jule::Ptr<_1ac859a32_TypeKind> _field_Kind;
	

	inline bool operator==(_1ac7161c4_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ac7161c4_ParamIns _other) { return !this->operator==(_other); }


};
struct _1ac717170_FnIns {
	jule::Ptr<_1ac702105_StructIns> _field_Owner;
	jule::Ptr<_1ac71426b_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1ac85814b_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1ac7161c4_ParamIns>> _field_Params;
	jule::Ptr<_1ac859a32_TypeKind> _field_Result;
	jule::Ptr<_1ac756126_Scope> _field_Scope;
	jule::Ptr<_1ac71a33d_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)> _field_caller;
	jule::Bool _field_reloaded = false;
	


};
struct _1ac71a33d_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	


};
struct _1ac71b85b_Pass {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Str _field_Text;
	

	inline bool operator==(_1ac71b85b_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_1ac71b85b_Pass _other) { return !this->operator==(_other); }


};
struct _1ac721421_symbolBuilder {
	jule::Ptr<_1ac721421_symbolBuilder> _field_owner;
	jule::Trait<_1ac7749e6_Importer> _field_importer;
	jule::Slice<_1a756d63b_Log> _field_errors;
	jule::Ptr<_1ac6c67a0_Ast> _field_ast;
	jule::Ptr<_1ac81e013_SymbolTable> _field_table;
	


};
struct _1ac727548_Trait {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1ac861c04_TypeSymbol>> _field_Inherits;
	jule::Slice<jule::Ptr<_1ac71426b_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1ac6ee377_Struct>> _field_Implemented;
	


};
struct _1ac7291d7_EnumItem {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ac825503_Value> _field_Value;
	

	inline bool operator==(_1ac7291d7_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1ac7291d7_EnumItem _other) { return !this->operator==(_other); }


};
struct _1ac729c54_Enum {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1ac861c04_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1ac7291d7_EnumItem>> _field_Items;
	


};
struct _1ac72ad87_TypeEnumItem {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ac861c04_TypeSymbol> _field_Kind;
	

	inline bool operator==(_1ac72ad87_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ac72ad87_TypeEnumItem _other) { return !this->operator==(_other); }


};
struct _1ac72b45e_TypeEnum {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ac72ad87_TypeEnumItem>> _field_Items;
	


};
struct _1ac72e5b6_comptimeRange {
	jule::Trait<_1ac72e396_comptimeRangeKind> _field_kind;
	

	inline bool operator==(_1ac72e5b6_comptimeRange _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1ac72e5b6_comptimeRange _other) { return !this->operator==(_other); }


};
struct _1ac730089_comptimeStructField {
	jule::Ptr<_1ac701555_FieldIns> _field_field;
	

	inline bool operator==(_1ac730089_comptimeStructField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1ac730089_comptimeStructField _other) { return !this->operator==(_other); }


};
struct _1ac731c4a_comptimeStructFields {
	jule::Slice<jule::Ptr<_1ac701555_FieldIns>> _field_fields;
	


};
struct _1ac733345_comptimeStatic {
	jule::Ptr<_1ac7bb015_Var> _field_field;
	

	inline bool operator==(_1ac733345_comptimeStatic _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1ac733345_comptimeStatic _other) { return !this->operator==(_other); }


};
struct _1ac735006_comptimeStatics {
	jule::Slice<jule::Ptr<_1ac7bb015_Var>> _field_fields;
	


};
struct _1ac736601_comptimeEnumField {
	jule::Ptr<_1ac7291d7_EnumItem> _field_field;
	

	inline bool operator==(_1ac736601_comptimeEnumField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1ac736601_comptimeEnumField _other) { return !this->operator==(_other); }


};
struct _1ac737998_comptimeEnumFields {
	jule::Slice<jule::Ptr<_1ac7291d7_EnumItem>> _field_fields;
	


};
struct _1ac739093_comptimeParam {
	jule::Ptr<_1ac7161c4_ParamIns> _field_param;
	

	inline bool operator==(_1ac739093_comptimeParam _other) {
		return 
			this->_field_param == _other._field_param;
	}

	inline bool operator!=(_1ac739093_comptimeParam _other) { return !this->operator==(_other); }


};
struct _1ac73b309_comptimeParams {
	jule::Slice<jule::Ptr<_1ac7161c4_ParamIns>> _field_params;
	


};
struct _1ac73c904_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_1ac73deee_comptimeTypeInfo>> _field_types;
	


};
struct _1ac73deee_comptimeTypeInfo {
	jule::Ptr<_1ac859a32_TypeKind> _field_base;
	

	inline bool operator==(_1ac73deee_comptimeTypeInfo _other) {
		return 
			this->_field_base == _other._field_base;
	}

	inline bool operator!=(_1ac73deee_comptimeTypeInfo _other) { return !this->operator==(_other); }


};
struct _1ac745511_comptimeValue {
	jule::Ptr<_1ac8243ae_Data> _field_data;
	

	inline bool operator==(_1ac745511_comptimeValue _other) {
		return 
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1ac745511_comptimeValue _other) { return !this->operator==(_other); }


};
struct _1ac747d60_comptimeFiles {
	jule::Slice<jule::Ptr<_1ac81e013_SymbolTable>> _field_files;
	


};
struct _1ac74945a_comptimeFile {
	jule::Ptr<_1ac81e013_SymbolTable> _field_file;
	

	inline bool operator==(_1ac74945a_comptimeFile _other) {
		return 
			this->_field_file == _other._field_file;
	}

	inline bool operator!=(_1ac74945a_comptimeFile _other) { return !this->operator==(_other); }


};
struct _1ac74d86b_constraintChecker {
	jule::Ptr<_1ac797c7d_Sema> _field_s;
	jule::Slice<jule::Ptr<_1ac6d588b_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1ac85814b_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1ac858c40_TypeAlias>> _field_genericsA;
	jule::Ptr<_1ac717170_FnIns> _field_fi;
	jule::Ptr<_1ac702105_StructIns> _field_si;
	jule::Ptr<_1ac6b2e62_Token> _field_et;
	jule::Bool _field_uniq = false;
	


};
struct _1ac750bc0_Impl {
	jule::Ptr<_1ac6c8681_TypeDecl> _field_Base;
	jule::Ptr<_1ac6c8681_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1ac71426b_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1ac7bb015_Var>> _field_Statics;
	


};
struct _1ac756126_Scope {
	jule::Ptr<_1ac756126_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	


};
struct _1ac756544_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1ac756126_Scope> _field_Scope;
	

	inline bool operator==(_1ac756544_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ac756544_If _other) { return !this->operator==(_other); }


};
struct _1ac756841_Else {
	jule::Ptr<_1ac756126_Scope> _field_Scope;
	

	inline bool operator==(_1ac756841_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ac756841_Else _other) { return !this->operator==(_other); }


};
struct _1ac756c5e_Conditional {
	jule::Slice<jule::Ptr<_1ac756544_If>> _field_Elifs;
	jule::Ptr<_1ac756841_Else> _field_Default;
	


};
struct _1ac75705b_InfIter {
	jule::Ptr<_1ac756126_Scope> _field_Scope;
	

	inline bool operator==(_1ac75705b_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ac75705b_InfIter _other) { return !this->operator==(_other); }


};
struct _1ac757512_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1ac756126_Scope> _field_Scope;
	

	inline bool operator==(_1ac757512_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ac757512_WhileIter _other) { return !this->operator==(_other); }


};
struct _1ac757e5d_RangeIter {
	jule::Ptr<_1ac8243ae_Data> _field_Expr;
	jule::Ptr<_1ac756126_Scope> _field_Scope;
	jule::Ptr<_1ac7bb015_Var> _field_KeyA;
	jule::Ptr<_1ac7bb015_Var> _field_KeyB;
	

	inline bool operator==(_1ac757e5d_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1ac757e5d_RangeIter _other) { return !this->operator==(_other); }


};
struct _1ac7582e3_ContSt {
	jule::Uintptr _field_It = 0;
	

	inline bool operator==(_1ac7582e3_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_1ac7582e3_ContSt _other) { return !this->operator==(_other); }


};
struct _1ac7586bc_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

	inline bool operator==(_1ac7586bc_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_1ac7586bc_BreakSt _other) { return !this->operator==(_other); }


};
struct _1ac7589b9_Label {
	jule::Str _field_Ident;
	

	inline bool operator==(_1ac7589b9_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1ac7589b9_Label _other) { return !this->operator==(_other); }


};
struct _1ac758d93_GotoSt {
	jule::Str _field_Ident;
	jule::Ptr<_1ac7589b9_Label> _field_Label;
	

	inline bool operator==(_1ac758d93_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1ac758d93_GotoSt _other) { return !this->operator==(_other); }


};
struct _1ac75926c_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

	inline bool operator==(_1ac75926c_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1ac75926c_Postfix _other) { return !this->operator==(_other); }


};
struct _1ac759723_Assign {
	jule::Ptr<_1ac70600a_OperandExprModel> _field_L;
	jule::Ptr<_1ac70600a_OperandExprModel> _field_R;
	jule::Ptr<_1ac6b2e62_Token> _field_Op;
	

	inline bool operator==(_1ac759723_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1ac759723_Assign _other) { return !this->operator==(_other); }


};
struct _1ac759aec_MultiAssign {
	jule::Slice<jule::Ptr<_1ac8243ae_Data>> _field_L;
	jule::Any _field_R = jule::Any(nullptr);
	


};
struct _1ac75a25c_Match {
	jule::Ptr<_1ac8243ae_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Bool _field_Comptime = false;
	jule::Slice<jule::Ptr<_1ac75ad95_Case>> _field_Cases;
	jule::Ptr<_1ac75ad95_Case> _field_Default;
	


};
struct _1ac75ad95_Case {
	jule::Ptr<_1ac75a25c_Match> _field_Owner;
	jule::Ptr<_1ac756126_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1ac8243ae_Data>> _field_Exprs;
	jule::Ptr<_1ac75ad95_Case> _field_Next;
	


};
struct _1ac75b48e_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

	inline bool operator==(_1ac75b48e_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_1ac75b48e_FallSt _other) { return !this->operator==(_other); }


};
struct _1ac75b824_RetSt {
	jule::Ptr<_1ac717170_FnIns> _field_Func;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1ac75b824_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac75b824_RetSt _other) { return !this->operator==(_other); }


};
struct _1ac75be84_scopeLabel {
	jule::Ptr<_1ac6b2e62_Token> _field_token;
	jule::Ptr<_1ac7589b9_Label> _field_label;
	jule::I64 _field_pos = 0;
	jule::Ptr<_1ac75d42a_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

	inline bool operator==(_1ac75be84_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1ac75be84_scopeLabel _other) { return !this->operator==(_other); }


};
struct _1ac75c517_scopeGoto {
	jule::Ptr<_1ac758d93_GotoSt> _field_st;
	jule::Ptr<_1ac6d613e_GotoSt> _field_gt;
	jule::Ptr<_1ac75d42a_scopeChecker> _field_scope;
	jule::I64 _field_pos = 0;
	

	inline bool operator==(_1ac75c517_scopeGoto _other) {
		return 
			this->_field_st == _other._field_st &&
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1ac75c517_scopeGoto _other) { return !this->operator==(_other); }


};
struct _1ac75d42a_scopeChecker {
	jule::Ptr<_1ac6b2e62_Token> _field_calledFrom;
	jule::Ptr<_1ac797c7d_Sema> _field_s;
	jule::Ptr<_1ac717170_FnIns> _field_owner;
	jule::Ptr<_1ac75d42a_scopeChecker> _field_parent;
	jule::I64 _field_childIndex = 0;
	jule::Ptr<_1ac81e013_SymbolTable> _field_table;
	jule::Ptr<_1ac756126_Scope> _field_scope;
	jule::Ptr<_1ac6d86a2_ScopeTree> _field_tree;
	jule::Ptr<_1ac717170_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1ac75be84_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1ac75c517_scopeGoto>>> _field_gotos;
	jule::I64 _field_i = 0;
	

	inline bool operator==(_1ac75d42a_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1ac75d42a_scopeChecker _other) { return !this->operator==(_other); }


};
struct _1ac771460_directiveChecker {
	jule::Ptr<_1ac797c7d_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1ac6c7a9d_Directive>>> _field_d;
	jule::Any _field_o;
	

	inline bool operator==(_1ac771460_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1ac771460_directiveChecker _other) { return !this->operator==(_other); }


};
struct _1ac77790b_ImportInfo {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _field_Selected;
	jule::Ptr<_1ac77a832_Package> _field_Package;
	jule::I64 _field_ModId = 0;
	


};
struct _1ac77a832_Package {
	jule::Slice<jule::Ptr<_1ac81e013_SymbolTable>> _field_Files;
	


};
struct _1ac797156_commonSemaMeta {
	jule::Slice<jule::Ptr<_1ac73deee_comptimeTypeInfo>> _field_comptimeTypeInfos;
	


};
struct _1ac797c7d_Sema {
	jule::Slice<_1a756d63b_Log> _field_errors;
	jule::Slice<jule::Ptr<_1ac81e013_SymbolTable>> _field_files;
	jule::Ptr<_1ac81e013_SymbolTable> _field_file;
	jule::I64 _field_flags = 0LL;
	jule::Ptr<_1ac797156_commonSemaMeta> _field_meta;
	


};
struct _1ac7b794b_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	


};
struct _1ac7b9d5a_IterRelation {
	jule::Ptr<_1ac7bb015_Var> _field_Range;
	

	inline bool operator==(_1ac7b9d5a_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_1ac7b9d5a_IterRelation _other) { return !this->operator==(_other); }


};
struct _1ac7bb015_Var {
	jule::Ptr<_1ac756126_Scope> _field_Scope;
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1ac861c04_TypeSymbol> _field_Kind;
	jule::Ptr<_1ac825503_Value> _field_Value;
	jule::Ptr<_1ac71a33d_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1ac6c7a9d_Directive>> _field_Directives;
	jule::Ptr<_1ac7b9d5a_IterRelation> _field_IterRelation;
	jule::I64 _field_RetOrder = -2LL;
	jule::Slice<jule::Ptr<_1ac7bb015_Var>> _field_Depends;
	


};
struct _1ac7bbd29_FuncPattern {
	


};
struct _1ac80b2db_typeCompatibilityChecker {
	jule::Ptr<_1ac797c7d_Sema> _field_s;
	jule::Ptr<_1ac859a32_TypeKind> _field_dest;
	jule::Ptr<_1ac859a32_TypeKind> _field_src;
	jule::Ptr<_1ac6b2e62_Token> _field_errorToken;
	

	inline bool operator==(_1ac80b2db_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1ac80b2db_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
struct _1ac80d08a_assignTypeChecker {
	jule::Ptr<_1ac797c7d_Sema> _field_s;
	jule::Ptr<_1ac859a32_TypeKind> _field_dest;
	jule::Ptr<_1ac8243ae_Data> _field_d;
	jule::Ptr<_1ac6b2e62_Token> _field_errorToken;
	

	inline bool operator==(_1ac80d08a_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1ac80d08a_assignTypeChecker _other) { return !this->operator==(_other); }


};
struct _1ac80e960_dynamicTypeAnnotation {
	jule::Ptr<_1ac8260a3_Eval> _field_e;
	jule::Ptr<_1ac717170_FnIns> _field_f;
	jule::Ptr<_1ac7161c4_ParamIns> _field_p;
	jule::Ptr<_1ac8243ae_Data> _field_a;
	jule::Ptr<_1ac6b2e62_Token> _field_errorToken;
	jule::Ptr<_1ac859a32_TypeKind>* _field_k = nullptr;
	jule::Ptr<_1ac6c8681_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1ac859a32_TypeKind>> _field_ignored;
	


};
struct _1ac8147bc_fnCallArgChecker {
	jule::Ptr<_1ac8260a3_Eval> _field_e;
	jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>> _field_args;
	jule::Ptr<_1ac6b2e62_Token> _field_errorToken;
	jule::Ptr<_1ac717170_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1ac859a32_TypeKind>> _field_ignored;
	


};
struct _1ac817704_structLitChecker {
	jule::Ptr<_1ac8260a3_Eval> _field_e;
	jule::Ptr<_1ac6b2e62_Token> _field_errorToken;
	jule::Ptr<_1ac702105_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1ac706e0c_StructArgExprModel>> _field_args;
	


};
struct _1ac8194d6_rangeChecker {
	jule::Ptr<_1ac75d42a_scopeChecker> _field_sc;
	jule::Ptr<_1ac6dd377_RangeKind> _field_rang;
	jule::Ptr<_1ac757e5d_RangeIter> _field_Kind;
	jule::Ptr<_1ac8243ae_Data> _field_d;
	

	inline bool operator==(_1ac8194d6_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1ac8194d6_rangeChecker _other) { return !this->operator==(_other); }


};
struct _1ac81bc47_retTypeChecker {
	jule::Ptr<_1ac75d42a_scopeChecker> _field_sc;
	jule::Ptr<_1ac717170_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1ac859a32_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>> _field_exprs;
	jule::Ptr<_1ac6b2e62_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	


};
struct _1ac81e013_SymbolTable {
	jule::Ptr<_1ac6b872b_File> _field_File;
	jule::Slice<_1ac71b85b_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1ac77790b_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1ac7bb015_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1ac858c40_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1ac6ee377_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1ac71426b_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1ac727548_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1ac729c54_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1ac72b45e_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1ac750bc0_Impl>> _field_Impls;
	


};
struct _1ac8243ae_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_1ac859a32_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_1a6cde8d5_Const> _field_Constant;
	

	inline bool operator==(_1ac8243ae_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_1ac8243ae_Data _other) { return !this->operator==(_other); }


};
struct _1ac825503_Value {
	jule::Ptr<_1ac6cc9b5_Expr> _field_Expr;
	jule::Ptr<_1ac8243ae_Data> _field_Data;
	

	inline bool operator==(_1ac825503_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1ac825503_Value _other) { return !this->operator==(_other); }


};
struct _1ac8260a3_Eval {
	jule::Ptr<_1ac797c7d_Sema> _field_s;
	jule::Trait<_1ac879568_Lookup> _field_lookup;
	jule::Ptr<_1ac859a32_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_1ac7bb015_Var> _field_owner;
	jule::Ptr<_1ac701555_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

	inline bool operator==(_1ac8260a3_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1ac8260a3_Eval _other) { return !this->operator==(_other); }


};
struct _1ac8447ca_unaryEval {
	jule::Ptr<_1ac8260a3_Eval> _field_e;
	jule::Ptr<_1ac8243ae_Data> _field_d;
	jule::Ptr<_1ac6cea72_UnaryExpr> _field_u;
	

	inline bool operator==(_1ac8447ca_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1ac8447ca_unaryEval _other) { return !this->operator==(_other); }


};
struct _1ac846766_binaryEval {
	jule::Ptr<_1ac8260a3_Eval> _field_e;
	jule::Ptr<_1ac8243ae_Data> _field_l;
	jule::Ptr<_1ac8243ae_Data> _field_r;
	jule::Ptr<_1ac6b2e62_Token> _field_op;
	

	inline bool operator==(_1ac846766_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1ac846766_binaryEval _other) { return !this->operator==(_other); }


};
struct _1ac85814b_InsGeneric {
	jule::Ptr<_1ac859a32_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_1ac859a32_TypeKind>> _field_Constraint;
	


};
struct _1ac858c40_TypeAlias {
	jule::Ptr<_1ac6d86a2_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ac861c04_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1ac858c40_TypeAlias>> _field_Generics;
	


};
struct _1ac859a32_TypeKind {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait<_1ac85957b_Kind> _field_Kind;
	

	inline bool operator==(_1ac859a32_TypeKind _other) {
		return 
			this->_field_BindIdent == _other._field_BindIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ac859a32_TypeKind _other) { return !this->operator==(_other); }


};
struct _1ac861c04_TypeSymbol {
	jule::Ptr<_1ac6c8681_TypeDecl> _field_Decl;
	jule::Ptr<_1ac859a32_TypeKind> _field_Kind;
	

	inline bool operator==(_1ac861c04_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ac861c04_TypeSymbol _other) { return !this->operator==(_other); }


};
struct _1ac86260b_Prim {
	jule::Str _field_Kind;
	

	inline bool operator==(_1ac86260b_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ac86260b_Prim _other) { return !this->operator==(_other); }


};
struct _1ac866137_Sptr {
	jule::Ptr<_1ac859a32_TypeKind> _field_Elem;
	

	inline bool operator==(_1ac866137_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ac866137_Sptr _other) { return !this->operator==(_other); }


};
struct _1ac866b0a_Slc {
	jule::Ptr<_1ac859a32_TypeKind> _field_Elem;
	

	inline bool operator==(_1ac866b0a_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ac866b0a_Slc _other) { return !this->operator==(_other); }


};
struct _1ac8676ee_Tuple {
	jule::Slice<jule::Ptr<_1ac859a32_TypeKind>> _field_Types;
	


};
struct _1ac86829e_Map {
	jule::Ptr<_1ac859a32_TypeKind> _field_Key;
	jule::Ptr<_1ac859a32_TypeKind> _field_Val;
	

	inline bool operator==(_1ac86829e_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1ac86829e_Map _other) { return !this->operator==(_other); }


};
struct _1ac868e2b_Arr {
	jule::Bool _field_Auto = false;
	jule::I64 _field_N = 0;
	jule::Ptr<_1ac859a32_TypeKind> _field_Elem;
	

	inline bool operator==(_1ac868e2b_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ac868e2b_Arr _other) { return !this->operator==(_other); }


};
struct _1ac8698ee_Ptr {
	jule::Ptr<_1ac859a32_TypeKind> _field_Elem;
	

	inline bool operator==(_1ac8698ee_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ac8698ee_Ptr _other) { return !this->operator==(_other); }


};
struct _1ac86a900_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	inline bool operator==(_1ac86a900_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1ac86a900_referencer _other) { return !this->operator==(_other); }


};
struct _1ac86b8e0_typeChecker {
	jule::Ptr<_1ac797c7d_Sema> _field_s;
	jule::Trait<_1ac879568_Lookup> _field_rootLookup;
	jule::Trait<_1ac879568_Lookup> _field_lookup;
	jule::Ptr<_1ac86a900_referencer> _field_referencer;
	jule::Ptr<_1ac71a33d_ReferenceStack> _field_refers;
	jule::Ptr<_1ac6b2e62_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1ac6d588b_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1ac859a32_TypeKind>>* _field_ignoredGenerics = nullptr;
	jule::Slice<jule::Ptr<_1ac858c40_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk = true;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_1ac858c40_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1ac858c40_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	


};
struct _1ac874574_identTypeLookup {
	

	inline bool operator==(_1ac874574_identTypeLookup _other) { return true; }

	inline bool operator!=(_1ac874574_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _1ad036351_FileInfo {
	jule::Ptr<_1ac6c67a0_Ast> _field_Ast;
	jule::Slice<_1a756d63b_Log> _field_Errors;
	


};
struct _1ad1dc98b_stmt {
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	


};
struct _1ad1dd32c_scopeParser {
	jule::Ptr<_1ad20b5e2_parser> _field_p;
	jule::Ptr<_1ac6d86a2_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1ad1dc98b_stmt>> _field_stmts;
	jule::I64 _field_pos = 0;
	


};
struct _1ad1eac52_exprBuilder {
	jule::Ptr<_1ad20b5e2_parser> _field_p;
	

	inline bool operator==(_1ad1eac52_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1ad1eac52_exprBuilder _other) { return !this->operator==(_other); }


};
struct _1ad2081e3_assignInfo {
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _field_l;
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _field_r;
	jule::Ptr<_1ac6b2e62_Token> _field_setter;
	jule::Bool _field_ok = false;
	


};
struct _1ad20b5e2_parser {
	jule::Ptr<_1ac6c67a0_Ast> _field_ast;
	jule::Slice<jule::Ptr<_1ac6c7a9d_Directive>> _field_directives;
	jule::Slice<_1a756d63b_Log> _field_errors;
	jule::Ptr<_1ad1eac52_exprBuilder> _field_ep;
	


};
struct _1ad21d7be_typeBuilder {
	jule::Ptr<_1ad20b5e2_parser> _field_p;
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _field_tokens;
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = false;
	


};
struct _1ac9e8b49_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str::lit("clang", 5);
	jule::Str _field_CppStd = jule::Str::lit("cpp14", 5);
	

	inline bool operator==(_1ac9e8b49_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_1ac9e8b49_CompileInfo _other) { return !this->operator==(_other); }


};
struct _1ac9ea123_directiveEval {
	jule::Slice<_1a756d63b_Log> _field_logs;
	jule::Ptr<_1ac6c7a9d_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1ad222905_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1ac77790b_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1ad227b19_OrderedDefines {
	jule::Slice<jule::Ptr<_1ac6ee377_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1ac7bb015_Var>> _field_Globals;
	


};
struct _1ad227d7d_defineOrderer {
	

	inline bool operator==(_1ad227d7d_defineOrderer _other) { return true; }

	inline bool operator!=(_1ad227d7d_defineOrderer _other) { return !this->operator==(_other); }


};
struct _1ad37d522_liveTable {
	jule::Slice<jule::Ptr<_1ac7bb015_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1ac717170_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1ac702105_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1ac727548_Trait>> _field_traits;
	


};
struct _1ad3b2c1b_scopeDeadCode {
	jule::Ptr<_1ad3b2c1b_scopeDeadCode> _field_parent;
	jule::Ptr<_1ac756126_Scope> _field_s;
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1ac7589b9_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1ac758d93_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

	inline bool operator==(_1ad3b2c1b_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1ad3b2c1b_scopeDeadCode _other) { return !this->operator==(_other); }


};
struct _1ad3b6e73_exprDeadCode {
	jule::Ptr<_1ad3b2c1b_scopeDeadCode> _field_s;
	

	inline bool operator==(_1ad3b6e73_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1ad3b6e73_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _1ac94d4a5_SwapExprModel {
	jule::Ptr<_1ac8243ae_Data> _field_Left;
	jule::Ptr<_1ac8243ae_Data> _field_Right;
	

	inline bool operator==(_1ac94d4a5_SwapExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1ac94d4a5_SwapExprModel _other) { return !this->operator==(_other); }


};
struct _1ac94d8c3_EmptyCompareExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Neg = false;
	

	inline bool operator==(_1ac94d8c3_EmptyCompareExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Neg == _other._field_Neg;
	}

	inline bool operator!=(_1ac94d8c3_EmptyCompareExprModel _other) { return !this->operator==(_other); }


};
struct _1ac94dbc0_RefExprModel {
	jule::Ptr<_1ac7bb015_Var> _field_Var;
	

	inline bool operator==(_1ac94dbc0_RefExprModel _other) {
		return 
			this->_field_Var == _other._field_Var;
	}

	inline bool operator!=(_1ac94dbc0_RefExprModel _other) { return !this->operator==(_other); }


};
struct _1ac94e1ed_StrCompExprModel {
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Ptr<_1a6cde8d5_Const> _field_Right;
	jule::Bool _field_NotEq = false;
	

	inline bool operator==(_1ac94e1ed_StrCompExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_NotEq == _other._field_NotEq;
	}

	inline bool operator!=(_1ac94e1ed_StrCompExprModel _other) { return !this->operator==(_other); }


};
struct _1ac94e781_MutSlicingExprModel {
	jule::Ptr<_1ac6b2e62_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1ac94e781_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1ac94e781_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1ac94ea7d_UnsafeBinaryExprModel {
	jule::Ptr<_1ac706505_BinaryExprModel> _field_Node;
	

	inline bool operator==(_1ac94ea7d_UnsafeBinaryExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1ac94ea7d_UnsafeBinaryExprModel _other) { return !this->operator==(_other); }


};
struct _1ac94ed7a_UnsafeIndexingExprModel {
	jule::Ptr<_1ac708d65_IndexingExprModel> _field_Node;
	

	inline bool operator==(_1ac94ed7a_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1ac94ed7a_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1ac9502a9_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_1ac7088ae_SliceExprModel> _field_Elems;
	

	inline bool operator==(_1ac9502a9_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1ac9502a9_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1ac950683_AppendToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Slice = jule::Any(nullptr);
	

	inline bool operator==(_1ac950683_AppendToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Slice == _other._field_Slice;
	}

	inline bool operator!=(_1ac950683_AppendToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1ac95183d_scopeOptimizer {
	jule::I64 _field_i = 0;
	jule::Ptr<_1ac756126_Scope> _field_scope;
	

	inline bool operator==(_1ac95183d_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1ac95183d_scopeOptimizer _other) { return !this->operator==(_other); }


};
struct _1ac9579cb_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	

	inline bool operator==(_1ac9579cb_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1ac9579cb_exprOptimizer _other) { return !this->operator==(_other); }


};
struct _1ad3be0ac_Optimizer {
	jule::Ptr<_1ad2253b9_IR> _field_ir;
	

	inline bool operator==(_1ad3be0ac_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1ad3be0ac_Optimizer _other) { return !this->operator==(_other); }


};
struct _1ad3e6d1b_AnsiEscape {
	

	inline bool operator==(_1ad3e6d1b_AnsiEscape _other) { return true; }

	inline bool operator!=(_1ad3e6d1b_AnsiEscape _other) { return !this->operator==(_other); }


};
struct _1ad3e8438_Logger {
	

	inline bool operator==(_1ad3e8438_Logger _other) { return true; }

	inline bool operator!=(_1ad3e8438_Logger _other) { return !this->operator==(_other); }


};
struct _1ba9ce8d0_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

	inline bool operator==(_1ba9ce8d0_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_1ba9ce8d0_AbsTime _other) { return !this->operator==(_other); }


};
struct _1ba9d00a6_Time {
	jule::U64 _field_sec = 0;
	

	inline bool operator==(_1ba9d00a6_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1ba9d00a6_Time _other) { return !this->operator==(_other); }


};
struct _1ad826c0c_scopeCoder {
	jule::Ptr<_1ba9d9555_ObjectCoder> _field_oc;
	

	inline bool operator==(_1ad826c0c_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1ad826c0c_scopeCoder _other) { return !this->operator==(_other); }


};
struct _1ad830d8c_exprCoder {
	jule::Ptr<_1ba9d9555_ObjectCoder> _field_oc;
	

	inline bool operator==(_1ad830d8c_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1ad830d8c_exprCoder _other) { return !this->operator==(_other); }


};
struct _1adc5c593_TestCoder {
	jule::Ptr<_1ac702105_StructIns> _field_t;
	jule::Ptr<_1ac71426b_Fn> _field_tmReset;
	jule::Ptr<_1ac71426b_Fn> _field_tmFailed;
	jule::Ptr<_1ac71426b_Fn> _field_tmSkipped;
	jule::Ptr<_1ba9d9555_ObjectCoder> _field_oc;
	

	inline bool operator==(_1adc5c593_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1adc5c593_TestCoder _other) { return !this->operator==(_other); }


};
struct _1adc60453_identCoder {
	

	inline bool operator==(_1adc60453_identCoder _other) { return true; }

	inline bool operator!=(_1adc60453_identCoder _other) { return !this->operator==(_other); }


};
struct _1ba9d7a3c_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

	inline bool operator==(_1ba9d7a3c_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_1ba9d7a3c_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1ba9d8114_traitHash {
	jule::Ptr<_1ac727548_Trait> _field_t;
	jule::Str _field_ti;
	jule::Ptr<_1ac702105_StructIns> _field_s;
	jule::I64 _field_i = 0;
	

	inline bool operator==(_1ba9d8114_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_ti == _other._field_ti &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1ba9d8114_traitHash _other) { return !this->operator==(_other); }


};
struct _1ba9d84dd_traitCast {
	jule::Ptr<_1ac727548_Trait> _field_t1;
	jule::Ptr<_1ac727548_Trait> _field_t2;
	

	inline bool operator==(_1ba9d84dd_traitCast _other) {
		return 
			this->_field_t1 == _other._field_t1 &&
			this->_field_t2 == _other._field_t2;
	}

	inline bool operator!=(_1ba9d84dd_traitCast _other) { return !this->operator==(_other); }


};
struct _1ba9e8ba2_customType {
	jule::Str _field_kind;
	

	inline bool operator==(_1ba9e8ba2_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1ba9e8ba2_customType _other) { return !this->operator==(_other); }


};
struct _1ba9e97b8_typeCoder {
	jule::Ptr<_1ba9d9555_ObjectCoder> _field_oc;
	jule::Ptr<_1baa02b89_resultCoder> _field_rc;
	

	inline bool operator==(_1ba9e97b8_typeCoder _other) {
		return 
			this->_field_oc == _other._field_oc &&
			this->_field_rc == _other._field_rc;
	}

	inline bool operator!=(_1ba9e97b8_typeCoder _other) { return !this->operator==(_other); }


};
struct _1baa02b89_resultCoder {
	jule::Ptr<_1ba9e97b8_typeCoder> _field_tc;
	

	inline bool operator==(_1baa02b89_resultCoder _other) {
		return 
			this->_field_tc == _other._field_tc;
	}

	inline bool operator!=(_1baa02b89_resultCoder _other) { return !this->operator==(_other); }


};
struct _1bba8e86d_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

	inline bool operator==(_1bba8e86d_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1bba8e86d_Flag _other) { return !this->operator==(_other); }


};struct _1bba96633_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

	inline bool operator==(_1bba96633_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1bba96633_Flag _other) { return !this->operator==(_other); }


};struct _1bba99d2e_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

	inline bool operator==(_1bba99d2e_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1bba99d2e_Flag _other) { return !this->operator==(_other); }


};struct _1bba9d56e_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

	inline bool operator==(_1bba9d56e_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1bba9d56e_Flag _other) { return !this->operator==(_other); }


};struct _1bbaa1c6a_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

	inline bool operator==(_1bbaa1c6a_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1bbaa1c6a_Flag _other) { return !this->operator==(_other); }


};
struct _1baa6d793_FlagSet {
	jule::Slice<jule::Trait<_1baa6bbe2_CommonFlag>> _field_flags;
	


};
struct _1baa71224_argParser {
	_1baa6d793_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i = 0;
	


};
struct _1ba9d9555_ObjectCoder {
	_1c164cc40_StrBuilder _field_Buf;
	_1c164cc40_StrBuilder _field_resultDecls;
	_1c164cc40_StrBuilder _field_anyObj;
	jule::Ptr<_1ad2253b9_IR> _field_ir;
	_1ba9d7a3c_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1ba9d8114_traitHash>> _field_tmap;
	jule::Slice<jule::U8> _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_1ac859a32_TypeKind>> _field_anyTypeMap;
	jule::Slice<_1ba9d84dd_traitCast> _field_traitCastMap;
	jule::Ptr<_1ad830d8c_exprCoder> _field_ec;
	jule::Ptr<_1ad826c0c_scopeCoder> _field_sc;
	jule::Ptr<_1ba9e97b8_typeCoder> _field_tc;
	jule::I64 _field_headPos = 0;
	jule::I64 _field_declPos = 0;
	


};
struct _1ad37d90c_ObjectDeadCode {
	_1ad37d522_liveTable _field_live;
	jule::Ptr<_1ad2253b9_IR> _field_ir;
	


};
struct _1ad2253b9_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1ac77a832_Package> _field_Main;
	jule::Slice<jule::Ptr<_1ac77790b_ImportInfo>> _field_Used;
	_1ad227b19_OrderedDefines _field_Ordered;
	


};
struct _1ac702105_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_1ac6ee377_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1ac85814b_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1ac701555_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1ac7bb015_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1ac71426b_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Comparable = false;
	jule::Ptr<_1ac71a33d_ReferenceStack> _field_Refers;
	_1ac6ed464_Operators _field_Operators;
	


};
struct _1a7630665_Cmd {
	_1a7634900_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	


};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ac8243ae_Data__jule_tuple_x_1ac8243ae_Data {
	jule::Ptr<_1ac8243ae_Data> __jule_result_arg0;
	jule::Ptr<_1ac8243ae_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1ac8243ae_Data__jule_tuple_bool {
	jule::Ptr<_1ac8243ae_Data> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1ac6cc9b5_Expr__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ac6e0654_Case__jule_tuple_bool {
	jule::Ptr<_1ac6e0654_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1ac6e0654_Case__jule_tuple_x_1ac6de4aa_Else {
	jule::Slice<jule::Ptr<_1ac6e0654_Case>> __jule_result_arg0;
	jule::Ptr<_1ac6de4aa_Else> __jule_result_arg1;
};
struct __jule_tuple__1ac6d7cde_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ac6d712e_AssignSt__jule_tuple_bool {
	jule::Ptr<_1ac6d712e_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ac6c8681_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1ac6c8681_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ac6cb574_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1ac6cb574_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1ac6c67a0_Ast__jule_tuple_s_1a756d63b_Log {
	jule::Slice<jule::Ptr<_1ac6c67a0_Ast>> __jule_result_arg0;
	jule::Slice<_1a756d63b_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_1a756d63b_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_1a756d63b_Log> __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ad2253b9_IR__jule_tuple_s_1a756d63b_Log {
	jule::Ptr<_1ad2253b9_IR> __jule_result_arg0;
	jule::Slice<_1a756d63b_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_i32 {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__1a8dd5127_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I64 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__1a8dd5127_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__1a8dd5127_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__1a8dd5127_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I64 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ac81e013_SymbolTable__jule_tuple_s_1a756d63b_Log {
	jule::Ptr<_1ac81e013_SymbolTable> __jule_result_arg0;
	jule::Slice<_1a756d63b_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1ac77a832_Package__jule_tuple_s_1a756d63b_Log {
	jule::Ptr<_1ac77a832_Package> __jule_result_arg0;
	jule::Slice<_1a756d63b_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1ac6c67a0_Ast__jule_tuple_s_1a756d63b_Log {
	jule::Ptr<_1ac6c67a0_Ast> __jule_result_arg0;
	jule::Slice<_1a756d63b_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1ac6b2e62_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1ac6b2e62_Token__jule_tuple_sx_1ac6b2e62_Token {
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_1ac6b2e62_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_ssx_1ac6b2e62_Token__jule_tuple_s_1a756d63b_Log {
	jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>> __jule_result_arg0;
	jule::Slice<_1a756d63b_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline _1c164cc40_StrBuilder static__1c164d191_New(jule::I64);
inline void _1c164d449_Write(_1c164cc40_StrBuilder*, jule::Slice<jule::U8>);
inline void _1c164d702_WriteStr(_1c164cc40_StrBuilder*, jule::Str);
inline void _1c164d9aa_WriteByte(_1c164cc40_StrBuilder*, jule::U8);
inline jule::Str _1c164dee9_Str(_1c164cc40_StrBuilder*);
inline void _1c164e1e7_Clear(_1c164cc40_StrBuilder*);
inline jule::I64 _1c164e47d_Len(_1c164cc40_StrBuilder*);
inline jule::Slice<jule::U8> _1c164e99a_Buf(_1c164cc40_StrBuilder*);
inline void _1c164ec53_SetBuf(_1c164cc40_StrBuilder*, jule::Slice<jule::U8>);
inline jule::U8 _1a69432c5_index(_1a6942d41_lazyBuff*, jule::I64);
inline void _1a694357d_append(_1a6942d41_lazyBuff*, jule::U8);
inline jule::Str _1a6943814_string(_1a6942d41_lazyBuff*);
inline jule::Exceptional<jule::Slice<jule::Ptr<_1d9e50d54_DirEntry>>> static__1a6945b46_Read(jule::Str);
inline jule::VoidExceptional static__1a6945d77_Create(jule::Str);
inline jule::VoidExceptional static__1a69460a8_Remove(jule::Str);
inline jule::Ptr<_1d9e522d9_File> static__1d9e52707_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_1d9e522d9_File>> static__1d9e529c1_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__1d9e52c8a_Read(jule::Str);
inline jule::VoidExceptional static__1d9e53131_Write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::VoidExceptional _1d9e5386d_Close(_1d9e522d9_File*);
inline jule::Exceptional<jule::Ptr<_1d9e522d9_File>> static__1c157ce4a_Open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__1c157d17b_Remove(jule::Str);
inline jule::Exceptional<jule::I64> _1c157d610_Write(_1d9e522d9_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _1c157d951_Read(_1d9e522d9_File*, jule::Slice<jule::U8>);
inline jule::Bool _1d9e547e7_IsDir(_1d9e5441d_Status*);
inline jule::Bool _1d9e54a7d_IsReg(_1d9e5441d_Status*);
inline jule::U64 _1d9e54d14_Size(_1d9e5441d_Status*);
inline jule::Exceptional<jule::Ptr<_1d9e5441d_Status>> static__1a6946a48_Of(jule::Str);
inline jule::Bool _1dbb0c987_set(_1dbb160bc_decimal*, jule::Slice<jule::U8>);
inline __jule_tuple_u64__jule_tuple_bool _1dbb0ccc8_floatBits(_1dbb160bc_decimal*, _1dbb0263b_floatInfo*);
inline void _1dbb16474_assign(_1dbb160bc_decimal*, jule::U64);
inline void _1dbb1672c_shift(_1dbb160bc_decimal*, jule::I64);
inline void _1dbb169d5_roundDown(_1dbb160bc_decimal*, jule::I64);
inline void _1dbb16c8d_roundUp(_1dbb160bc_decimal*, jule::I64);
inline void _1dbb17046_round(_1dbb160bc_decimal*, jule::I64);
inline jule::U64 _1dbb172cc_roundedInteger(_1dbb160bc_decimal*);
inline jule::Ptr<_1a6cde8d5_Const> static__1a6cded25_NewI64(jule::I64);
inline jule::Ptr<_1a6cde8d5_Const> static__1a6ce00de_NewU64(jule::U64);
inline jule::Ptr<_1a6cde8d5_Const> static__1a6ce03a8_NewBool(jule::Bool);
inline jule::Ptr<_1a6cde8d5_Const> static__1a6ce0672_NewStr(jule::Str);
inline jule::Ptr<_1a6cde8d5_Const> static__1a6ce093b_NewF64(jule::F64);
inline jule::Ptr<_1a6cde8d5_Const> static__1a6ce0b4a_NewNil(void);
inline jule::I64 _1a6ce12aa_ReadI64(_1a6cde8d5_Const*);
inline jule::U64 _1a6ce1541_ReadU64(_1a6cde8d5_Const*);
inline jule::Bool _1a6ce17c7_ReadBool(_1a6cde8d5_Const*);
inline jule::Str _1a6ce1a5d_ReadStr(_1a6cde8d5_Const*);
inline jule::F64 _1a6ce1ce4_ReadF64(_1a6cde8d5_Const*);
inline jule::I64 _1a6ce207a_AsI64(_1a6cde8d5_Const*);
inline jule::U64 _1a6ce2311_AsU64(_1a6cde8d5_Const*);
inline jule::F64 _1a6ce2597_AsF64(_1a6cde8d5_Const*);
inline void _1a6ce2850_SetI64(_1a6cde8d5_Const*, jule::I64);
inline void _1a6ce2b08_SetU64(_1a6cde8d5_Const*, jule::U64);
inline void _1a6ce2db1_SetBool(_1a6cde8d5_Const*, jule::Bool);
inline void _1a6ce3169_SetStr(_1a6cde8d5_Const*, jule::Str);
inline void _1a6ce3422_SetF64(_1a6cde8d5_Const*, jule::F64);
inline jule::Bool _1a6ce38a6_IsI64(_1a6cde8d5_Const*);
inline jule::Bool _1a6ce3b3c_IsU64(_1a6cde8d5_Const*);
inline jule::Bool _1a6ce3dc3_IsBool(_1a6cde8d5_Const*);
inline jule::Bool _1a6ce4159_IsStr(_1a6cde8d5_Const*);
inline jule::Bool _1a6ce43e0_IsF64(_1a6cde8d5_Const*);
inline jule::Bool _1a6ce4676_IsNil(_1a6cde8d5_Const*);
inline jule::Bool _1a6ce4d08_And(_1a6cde8d5_Const*, _1a6cde8d5_Const);
inline jule::Bool _1a6ce5149_Or(_1a6cde8d5_Const*, _1a6cde8d5_Const);
inline jule::Bool _1a6ce65e0_Add(_1a6cde8d5_Const*, _1a6cde8d5_Const);
inline jule::Bool _1a6ce6931_Sub(_1a6cde8d5_Const*, _1a6cde8d5_Const);
inline jule::Bool _1a6ce6c72_Mul(_1a6cde8d5_Const*, _1a6cde8d5_Const);
inline jule::Bool _1a6ce70b3_Div(_1a6cde8d5_Const*, _1a6cde8d5_Const);
inline jule::Bool _1a6ce7404_Mod(_1a6cde8d5_Const*, _1a6cde8d5_Const);
inline jule::Bool _1a6ce7745_BitwiseAnd(_1a6cde8d5_Const*, _1a6cde8d5_Const);
inline jule::Bool _1a6ce7a86_BitwiseOr(_1a6cde8d5_Const*, _1a6cde8d5_Const);
inline jule::Bool _1a6ce7dc7_Xor(_1a6cde8d5_Const*, _1a6cde8d5_Const);
inline jule::Bool _1a6ce8218_Lshift(_1a6cde8d5_Const*, _1a6cde8d5_Const);
inline jule::Bool _1a6ce8559_Rshift(_1a6cde8d5_Const*, _1a6cde8d5_Const);
inline jule::U8 _1ac6b32d6_Prec(_1ac6b2e62_Token*);
inline void _1ac6b8b16_Fill(_1ac6b872b_File*, jule::Slice<jule::U8>);
inline jule::Str _1ac6b8d9c_Dir(_1ac6b872b_File*);
inline jule::Str _1ac6b9133_Name(_1ac6b872b_File*);
inline jule::Str _1ac6b970a_GetRow(_1ac6b872b_File*, jule::I64);
inline void _1ac6c1ee8_pushErr(_1ac6c1965_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _1ac6c2559_lex(_1ac6c1965_lex*);
inline jule::Str _1ac6c289a_id(_1ac6c1965_lex*, jule::Slice<jule::U8>*);
inline jule::Slice<jule::U8> _1ac6c2b31_resume(_1ac6c1965_lex*);
inline void _1ac6c2dd9_lexLineComment(_1ac6c1965_lex*, jule::Ptr<_1ac6b2e62_Token>*);
inline void _1ac6c3192_lexRangeComment(_1ac6c1965_lex*, jule::Ptr<_1ac6b2e62_Token>*);
inline jule::Str _1ac6c34d3_num(_1ac6c1965_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1ac6c3824_escapeSeq(_1ac6c1965_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1ac6c3c20_getRune(_1ac6c1965_lex*, jule::Slice<jule::U8>*, jule::Bool);
inline jule::Str _1ac6c4061_lexRune(_1ac6c1965_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1ac6c42e7_lexStr(_1ac6c1965_lex*);
inline void _1ac6c477b_newLine(_1ac6c1965_lex*);
inline jule::Bool _1ac6c4cdc_isOp(_1ac6c1965_lex*, jule::Slice<jule::U8>*, jule::Str, jule::U64, jule::Ptr<_1ac6b2e62_Token>*);
inline jule::Bool _1ac6c51d8_lexBasicOps(_1ac6c1965_lex*, jule::Slice<jule::U8>, jule::Ptr<_1ac6b2e62_Token>*);
inline jule::Bool _1ac6c55d4_lexId(_1ac6c1965_lex*, jule::Slice<jule::U8>*, jule::Ptr<_1ac6b2e62_Token>*);
inline jule::Bool _1ac6c59d0_lexNum(_1ac6c1965_lex*, jule::Slice<jule::U8>*, jule::Ptr<_1ac6b2e62_Token>*);
inline jule::Ptr<_1ac6b2e62_Token> _1ac6c5c66_token(_1ac6c1965_lex*);
inline jule::Bool _1ac6ca51d_IsUnsafe(_1ac6ca1aa_PtrTypeDecl*);
inline jule::Bool _1ac6cacb0_AutoSized(_1ac6ca94c_ArrTypeDecl*);
inline jule::Bool _1ac6d1a63_Unhandled(_1ac6d16de_FnCallExpr*);
inline jule::Bool _1ac6d1ce9_Ignored(_1ac6d16de_FnCallExpr*);
inline jule::Bool _1ac6d9263_IsSelf(_1ac6d8dde_ParamDecl*);
inline jule::Bool _1ac6da6a4_IsAnon(_1ac6da341_FnDecl*);
inline jule::Bool _1ac6dc4a8_IsInf(_1ac6dc145_Iter*);
inline jule::Bool _1ac6dccd3_IsWhileNext(_1ac6dc970_WhileKind*);
inline jule::Ptr<_1ac701555_FieldIns> _1ac6eb808_instance(jule::Ptr<_1ac6eb484_Field>);
inline jule::Ptr<_1ac702105_StructIns> _1ac6ee7d9_instance(jule::Ptr<_1ac6ee377_Struct>);
inline jule::Ptr<_1ac702105_StructIns> _1ac6eeae7_appendInstance(_1ac6ee377_Struct*, jule::Ptr<_1ac702105_StructIns>*);
inline jule::Ptr<_1ac71426b_Fn> _1ac6eeee3_FindMethod(_1ac6ee377_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1ac7bb015_Var> _1ac700334_FindStatic(_1ac6ee377_Struct*, jule::Str);
inline jule::Ptr<_1ac6eb484_Field> _1ac700675_FindField(_1ac6ee377_Struct*, jule::Str);
inline jule::Bool _1ac7009b6_IsImplements(_1ac6ee377_Struct*, jule::Ptr<_1ac727548_Trait>);
inline jule::Bool _1ac700d07_IsUses(_1ac6ee377_Struct*, jule::Ptr<_1ac6ee377_Struct>);
inline jule::Ptr<_1ac7161c4_ParamIns> _1ac712b2c_instance(jule::Ptr<_1ac712797_Param>);
inline jule::Bool _1ac712db3_IsSelf(_1ac712797_Param*);
inline jule::Bool _1ac713149_IsRef(_1ac712797_Param*);
inline jule::Bool _1ac7146de_IsVoid(_1ac71426b_Fn*);
inline jule::Bool _1ac714975_IsMethod(_1ac71426b_Fn*);
inline jule::Bool _1ac714c0b_IsEntryPoint(_1ac71426b_Fn*);
inline jule::Bool _1ac714e92_IsInit(_1ac71426b_Fn*);
inline jule::Bool _1ac715228_IsAnon(_1ac71426b_Fn*);
inline jule::Bool _1ac7154ae_AnyVar(_1ac71426b_Fn*);
inline jule::Ptr<_1ac717170_FnIns> _1ac715745_instanceForce(jule::Ptr<_1ac71426b_Fn>);
inline jule::Ptr<_1ac717170_FnIns> _1ac7159cb_instance(jule::Ptr<_1ac71426b_Fn>);
inline jule::Ptr<_1ac717170_FnIns> _1ac715cd9_appendInstance(_1ac71426b_Fn*, jule::Ptr<_1ac717170_FnIns>*);
inline jule::Str _1ac716537_Str(_1ac7161c4_ParamIns*);
inline jule::Str _1ac7174b1_Str(_1ac717170_FnIns*);
inline jule::Bool _1ac717802_Equal(jule::Ptr<_1ac717170_FnIns>, jule::Ptr<_1ac859a32_TypeKind>);
inline jule::Bool _1ac717c97_EqualFn(jule::Ptr<_1ac717170_FnIns>, jule::Ptr<_1ac717170_FnIns>*);
inline jule::Bool _1ac7180d8_equalTrait(jule::Ptr<_1ac717170_FnIns>, jule::Ptr<_1ac717170_FnIns>*);
inline jule::Slice<jule::Ptr<_1ac859a32_TypeKind>> _1ac71836e_Types(_1ac717170_FnIns*);
inline jule::Bool _1ac718605_IsBuiltin(_1ac717170_FnIns*);
inline jule::Bool _1ac71888b_IsAnon(_1ac717170_FnIns*);
inline jule::Bool _1ac718bcc_Same(_1ac717170_FnIns*, jule::Ptr<_1ac717170_FnIns>);
inline jule::Str _1ac71901d_GetKindStr(_1ac717170_FnIns*, jule::Bool);
inline jule::Ptr<_1ac71a33d_ReferenceStack> static__1ac71a63a_new(void);
inline jule::I64 _1ac71aa36_Len(_1ac71a33d_ReferenceStack*);
inline jule::Any _1ac71ad77_At(_1ac71a33d_ReferenceStack*, jule::I64);
inline void _1ac71b130_Push(_1ac71a33d_ReferenceStack*, jule::Any);
inline jule::Bool _1bccd6d5b_Exist(_1ac71a33d_ReferenceStack*, jule::Ptr<_1ac717170_FnIns>);
inline jule::Bool _1bcceb58a_Exist(_1ac71a33d_ReferenceStack*, jule::Ptr<_1ac7bb015_Var>);
inline jule::Bool _1bcdac22d_Exist(_1ac71a33d_ReferenceStack*, jule::Ptr<_1ac702105_StructIns>);
inline jule::Bool _1bd1e04a6_Exist(_1ac71a33d_ReferenceStack*, jule::Ptr<_1ac727548_Trait>);
inline void _1ac721cb2_pushErr(_1ac721421_symbolBuilder*, jule::Ptr<_1ac6b2e62_Token>*, jule::Str, jule::Slice<jule::Any>);
inline void _1ac722543_pushSuggestion(_1ac721421_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ac72293e_checkCppUseDeclPath(_1ac721421_symbolBuilder*, jule::Ptr<_1ac6e1787_UseDecl>*, jule::Str*);
inline jule::Ptr<_1ac77790b_ImportInfo> _1ac722c4c_buildCppHeaderImport(_1ac721421_symbolBuilder*, jule::Ptr<_1ac6e1787_UseDecl>*);
inline jule::Ptr<_1ac77790b_ImportInfo> _1ac72308d_buildStdImport(_1ac721421_symbolBuilder*, jule::Ptr<_1ac6e1787_UseDecl>*);
inline jule::Ptr<_1ac77790b_ImportInfo> _1ac7233ce_buildIdentImport(jule::Ptr<_1ac721421_symbolBuilder>, jule::Ptr<_1ac6e1787_UseDecl>*);
inline jule::Ptr<_1ac77790b_ImportInfo> _1ac723720_buildImport(jule::Ptr<_1ac721421_symbolBuilder>, jule::Ptr<_1ac6e1787_UseDecl>*);
inline jule::Bool _1ac723a61_checkDuplicateUseDecl(_1ac721421_symbolBuilder*, jule::Ptr<_1ac77790b_ImportInfo>*);
inline void _1ac723dc4_implImportSelections(_1ac721421_symbolBuilder*, jule::Ptr<_1ac77790b_ImportInfo>*, jule::Ptr<_1ac6e1787_UseDecl>*);
inline jule::Str _1ac724215_getAsLinkPath(jule::Ptr<_1ac721421_symbolBuilder>, jule::Str);
inline void _1ac724633_pushCycleError(jule::Ptr<_1ac721421_symbolBuilder>, jule::Ptr<_1ac721421_symbolBuilder>*, jule::Str, _1c164cc40_StrBuilder*);
inline void _1ac724a51_pushCrossCycleError(jule::Ptr<_1ac721421_symbolBuilder>, jule::Ptr<_1ac721421_symbolBuilder>*, jule::Ptr<_1ac77790b_ImportInfo>*, jule::Ptr<_1ac6b2e62_Token>*);
inline jule::Bool _1ac724e4c_checkImportCycles(jule::Ptr<_1ac721421_symbolBuilder>, jule::Ptr<_1ac77790b_ImportInfo>, jule::Ptr<_1ac6e1787_UseDecl>*);
inline void _1ac72536a_checkPackageAccessibility(_1ac721421_symbolBuilder*, jule::Ptr<_1ac6e1787_UseDecl>*, jule::Str*, jule::Str*);
inline jule::Bool _1ac725766_importPackage(jule::Ptr<_1ac721421_symbolBuilder>, jule::Ptr<_1ac77790b_ImportInfo>*, jule::Ptr<_1ac6e1787_UseDecl>*);
inline jule::Ptr<_1ac77790b_ImportInfo> _1ac725aa7_importUseDecl(jule::Ptr<_1ac721421_symbolBuilder>, jule::Ptr<_1ac6e1787_UseDecl>*);
inline void _1ac725ca5_importUseDecls(jule::Ptr<_1ac721421_symbolBuilder>);
inline void _1ac72605d_appendNode(_1ac721421_symbolBuilder*, _1ac6c7680_Node*);
inline void _1ac72625b_appendNodes(_1ac721421_symbolBuilder*);
inline void _1ac726514_pushDirectivePass(_1ac721421_symbolBuilder*, jule::Ptr<_1ac6c7a9d_Directive>*);
inline void _1ac726712_appendTopDirectives(_1ac721421_symbolBuilder*);
inline void _1ac726910_build(jule::Ptr<_1ac721421_symbolBuilder>);
inline jule::Str _1ac727911_Str(_1ac727548_Trait*);
inline jule::Bool _1ac727c52_Equal(jule::Ptr<_1ac727548_Trait>, jule::Ptr<_1ac859a32_TypeKind>);
inline jule::Ptr<_1ac71426b_Fn> _1ac7281e7_FindMethod(_1ac727548_Trait*, jule::Str);
inline jule::Ptr<_1ac71426b_Fn> _1ac728879_findMethodInherit(_1ac727548_Trait*, jule::Str*);
inline jule::Bool _1ac72958e_AutoExpr(_1ac7291d7_EnumItem*);
inline jule::Str _1ac72a0c8_Str(_1ac729c54_Enum*);
inline jule::Bool _1ac72a419_Equal(jule::Ptr<_1ac729c54_Enum>, jule::Ptr<_1ac859a32_TypeKind>);
inline jule::Ptr<_1ac7291d7_EnumItem> _1ac72a848_FindItem(_1ac729c54_Enum*, jule::Str);
inline jule::Str _1ac72b7a0_Str(_1ac72b45e_TypeEnum*);
inline jule::Bool _1ac72bae1_Equal(jule::Ptr<_1ac72b45e_TypeEnum>, jule::Ptr<_1ac859a32_TypeKind>);
inline jule::Ptr<_1ac72ad87_TypeEnumItem> _1ac72c020_FindItem(_1ac72b45e_TypeEnum*, jule::Str);
inline jule::Str _1ac72e93a_Str(_1ac72e5b6_comptimeRange*);
inline jule::Bool _1ac72ec7b_Equal(jule::Ptr<_1ac72e5b6_comptimeRange>, jule::Ptr<_1ac859a32_TypeKind>);
inline jule::Str _1ac730452_Str(_1ac730089_comptimeStructField*);
inline jule::Bool _1ac730793_Equal(jule::Ptr<_1ac730089_comptimeStructField>, jule::Ptr<_1ac859a32_TypeKind>);
inline jule::Ptr<_1ac8243ae_Data> _1ac730d37__Name(jule::Ptr<_1ac730089_comptimeStructField>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac731233__Type(jule::Ptr<_1ac730089_comptimeStructField>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac73162e__Public(jule::Ptr<_1ac730089_comptimeStructField>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac73193c_subIdent(jule::Ptr<_1ac730089_comptimeStructField>, jule::Str*);
inline jule::Str _1ac7320be_Str(_1ac731c4a_comptimeStructFields*);
inline jule::Bool _1ac732410_Equal(jule::Ptr<_1ac731c4a_comptimeStructFields>, jule::Ptr<_1ac859a32_TypeKind>);
inline void _1ac732883_ready(_1ac731c4a_comptimeStructFields*, jule::Ptr<_1ac7bb015_Var>*, jule::Ptr<_1ac7bb015_Var>*);
inline void _1ac732ca1_step(_1ac731c4a_comptimeStructFields*, jule::I64, jule::Ptr<_1ac7bb015_Var>*, jule::Ptr<_1ac7bb015_Var>*);
inline jule::I64 _1ac733037_len(_1ac731c4a_comptimeStructFields*);
inline jule::Str _1ac7336b9_Str(_1ac733345_comptimeStatic*);
inline jule::Bool _1ac733a0a_Equal(jule::Ptr<_1ac733345_comptimeStatic>, jule::Ptr<_1ac859a32_TypeKind>);
inline jule::Ptr<_1ac8243ae_Data> _1ac734137__Name(jule::Ptr<_1ac733345_comptimeStatic>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac734533__Type(jule::Ptr<_1ac733345_comptimeStatic>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac73492e__Public(jule::Ptr<_1ac733345_comptimeStatic>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac734c70_subIdent(jule::Ptr<_1ac733345_comptimeStatic>, jule::Str*);
inline jule::Str _1ac73537a_Str(_1ac735006_comptimeStatics*);
inline jule::Bool _1ac7356bb_Equal(jule::Ptr<_1ac735006_comptimeStatics>, jule::Ptr<_1ac859a32_TypeKind>);
inline void _1ac735b3e_ready(_1ac735006_comptimeStatics*, jule::Ptr<_1ac7bb015_Var>*, jule::Ptr<_1ac7bb015_Var>*);
inline void _1ac73605c_step(_1ac735006_comptimeStatics*, jule::I64, jule::Ptr<_1ac7bb015_Var>*, jule::Ptr<_1ac7bb015_Var>*);
inline jule::I64 _1ac7362e3_len(_1ac735006_comptimeStatics*);
inline jule::Str _1ac736a85_Str(_1ac736601_comptimeEnumField*);
inline jule::Bool _1ac736dc6_Equal(jule::Ptr<_1ac736601_comptimeEnumField>, jule::Ptr<_1ac859a32_TypeKind>);
inline jule::Ptr<_1ac8243ae_Data> _1ac737349__Name(jule::Ptr<_1ac736601_comptimeEnumField>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac73768a_subIdent(jule::Ptr<_1ac736601_comptimeEnumField>, jule::Str*);
inline jule::Str _1ac737d1c_Str(_1ac737998_comptimeEnumFields*);
inline jule::Bool _1ac73815d_Equal(jule::Ptr<_1ac737998_comptimeEnumFields>, jule::Ptr<_1ac859a32_TypeKind>);
inline void _1ac7385d1_ready(_1ac737998_comptimeEnumFields*, jule::Ptr<_1ac7bb015_Var>*, jule::Ptr<_1ac7bb015_Var>*);
inline void _1ac7389ee_step(_1ac737998_comptimeEnumFields*, jule::I64, jule::Ptr<_1ac7bb015_Var>*, jule::Ptr<_1ac7bb015_Var>*);
inline jule::I64 _1ac738c85_len(_1ac737998_comptimeEnumFields*);
inline jule::Str _1ac739417_Str(_1ac739093_comptimeParam*);
inline jule::Bool _1ac739758_Equal(jule::Ptr<_1ac739093_comptimeParam>, jule::Ptr<_1ac859a32_TypeKind>);
inline jule::Ptr<_1ac8243ae_Data> _1ac739eb7__Name(jule::Ptr<_1ac739093_comptimeParam>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac73a3b3__Type(jule::Ptr<_1ac739093_comptimeParam>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac73a7ae__Variadic(jule::Ptr<_1ac739093_comptimeParam>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac73abaa__Reference(jule::Ptr<_1ac739093_comptimeParam>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac73aeeb_subIdent(jule::Ptr<_1ac739093_comptimeParam>, jule::Str*);
inline jule::Str _1ac73b67d_Str(_1ac73b309_comptimeParams*);
inline jule::Bool _1ac73b9be_Equal(jule::Ptr<_1ac73b309_comptimeParams>, jule::Ptr<_1ac859a32_TypeKind>);
inline void _1ac73be42_ready(_1ac73b309_comptimeParams*, jule::Ptr<_1ac7bb015_Var>*, jule::Ptr<_1ac7bb015_Var>*);
inline void _1ac73c360_step(_1ac73b309_comptimeParams*, jule::I64, jule::Ptr<_1ac7bb015_Var>*, jule::Ptr<_1ac7bb015_Var>*);
inline jule::I64 _1ac73c5e6_len(_1ac73b309_comptimeParams*);
inline jule::Str _1ac73cc78_Str(_1ac73c904_comptimeTypeInfos*);
inline jule::Bool _1ac73d0b9_Equal(jule::Ptr<_1ac73c904_comptimeTypeInfos>, jule::Ptr<_1ac859a32_TypeKind>);
inline void _1ac73d53c_ready(_1ac73c904_comptimeTypeInfos*, jule::Ptr<_1ac7bb015_Var>*, jule::Ptr<_1ac7bb015_Var>*);
inline void _1ac73d95a_step(_1ac73c904_comptimeTypeInfos*, jule::I64, jule::Ptr<_1ac7bb015_Var>*, jule::Ptr<_1ac7bb015_Var>*);
inline jule::I64 _1ac73dbe1_len(_1ac73c904_comptimeTypeInfos*);
inline jule::Str _1ac73e373_Str(_1ac73deee_comptimeTypeInfo*);
inline jule::Bool _1ac73e6b4_Equal(jule::Ptr<_1ac73deee_comptimeTypeInfo>, jule::Ptr<_1ac859a32_TypeKind>);
inline jule::Ptr<_1ac8243ae_Data> _1ac73ed13__Str(jule::Ptr<_1ac73deee_comptimeTypeInfo>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac74020e__Kind(jule::Ptr<_1ac73deee_comptimeTypeInfo>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac74060a__Bits(jule::Ptr<_1ac73deee_comptimeTypeInfo>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac740a06__Elem(jule::Ptr<_1ac73deee_comptimeTypeInfo>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac740e02__Size(jule::Ptr<_1ac73deee_comptimeTypeInfo>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac7412ed__Key(jule::Ptr<_1ac73deee_comptimeTypeInfo>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac7416e9__Value(jule::Ptr<_1ac73deee_comptimeTypeInfo>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac741ae5__Fields(jule::Ptr<_1ac73deee_comptimeTypeInfo>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac741ee1__Statics(jule::Ptr<_1ac73deee_comptimeTypeInfo>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac7423dc__Public(jule::Ptr<_1ac73deee_comptimeTypeInfo>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac7427d8__Binded(jule::Ptr<_1ac73deee_comptimeTypeInfo>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac742bd4__Ordered(jule::Ptr<_1ac73deee_comptimeTypeInfo>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac7430d0__Comparable(jule::Ptr<_1ac73deee_comptimeTypeInfo>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac7434cb__Mutable(jule::Ptr<_1ac73deee_comptimeTypeInfo>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac7438c7__Types(jule::Ptr<_1ac73deee_comptimeTypeInfo>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac743cc3__Exceptional(jule::Ptr<_1ac73deee_comptimeTypeInfo>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac7441be__CanNil(jule::Ptr<_1ac73deee_comptimeTypeInfo>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac7445ba__RC(jule::Ptr<_1ac73deee_comptimeTypeInfo>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac7449b6__Result(jule::Ptr<_1ac73deee_comptimeTypeInfo>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac744db2__Params(jule::Ptr<_1ac73deee_comptimeTypeInfo>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac745203_subIdent(jule::Ptr<_1ac73deee_comptimeTypeInfo>, jule::Str*);
inline jule::Str _1ac745885_Str(_1ac745511_comptimeValue*);
inline jule::Bool _1ac745bc6_Equal(jule::Ptr<_1ac745511_comptimeValue>, jule::Ptr<_1ac859a32_TypeKind>);
inline jule::Ptr<_1ac8243ae_Data> _1ac746226__Unwrap(jule::Ptr<_1ac745511_comptimeValue>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac746622__Type(jule::Ptr<_1ac745511_comptimeValue>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac746a1d__Lvalue(jule::Ptr<_1ac745511_comptimeValue>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac746e19__Mutable(jule::Ptr<_1ac745511_comptimeValue>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac747315__Const(jule::Ptr<_1ac745511_comptimeValue>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac747711__Field(jule::Ptr<_1ac745511_comptimeValue>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac747a52_subIdent(jule::Ptr<_1ac745511_comptimeValue>, jule::Str*);
inline jule::Str _1ac7481d4_Str(_1ac747d60_comptimeFiles*);
inline jule::Bool _1ac748525_Equal(jule::Ptr<_1ac747d60_comptimeFiles>, jule::Ptr<_1ac859a32_TypeKind>);
inline void _1ac748998_ready(_1ac747d60_comptimeFiles*, jule::Ptr<_1ac7bb015_Var>*, jule::Ptr<_1ac7bb015_Var>*);
inline void _1ac748db6_step(_1ac747d60_comptimeFiles*, jule::I64, jule::Ptr<_1ac7bb015_Var>*, jule::Ptr<_1ac7bb015_Var>*);
inline jule::I64 _1ac74914c_len(_1ac747d60_comptimeFiles*);
inline jule::Str _1ac749900_Str(_1ac74945a_comptimeFile*);
inline jule::Bool _1ac749c41_Equal(jule::Ptr<_1ac74945a_comptimeFile>, jule::Ptr<_1ac859a32_TypeKind>);
inline jule::Ptr<_1ac8243ae_Data> _1ac74a25d__Path(jule::Ptr<_1ac74945a_comptimeFile>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac74a659__Name(jule::Ptr<_1ac74945a_comptimeFile>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac74aa55__Dir(jule::Ptr<_1ac74945a_comptimeFile>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac74ad96_subIdent(jule::Ptr<_1ac74945a_comptimeFile>, jule::Str*);
inline jule::Fn<jule::Bool(jule::Ptr<_1ac797c7d_Sema>*,jule::Slice<jule::Ptr<_1ac858c40_TypeAlias>>*)> _1ac74dc67_readyFn(jule::Ptr<_1ac74d86b_constraintChecker>);
inline jule::Bool _1ac74deed_readyFi(jule::Ptr<_1ac74d86b_constraintChecker>);
inline jule::Bool _1ac74e284_readySi(jule::Ptr<_1ac74d86b_constraintChecker>);
inline jule::Bool _1ac74e51a_ready(jule::Ptr<_1ac74d86b_constraintChecker>);
inline jule::Bool _1ac74e7a1_check(jule::Ptr<_1ac74d86b_constraintChecker>);
inline jule::Bool _1ac751088_IsTraitImpl(_1ac750bc0_Impl*);
inline jule::Bool _1ac75131e_IsStructImpl(_1ac750bc0_Impl*);
inline jule::Ptr<_1ac77790b_ImportInfo> _1ac75d8c0_SelectPackage(_1ac75d42a_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_1ac77790b_ImportInfo>)>);
inline jule::Ptr<_1ac7bb015_Var> _1ac75dcbb_FindVar(_1ac75d42a_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1ac858c40_TypeAlias> _1ac75e1b7_FindTypeAlias(_1ac75d42a_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1ac6ee377_Struct> _1ac75e5b3_FindStruct(_1ac75d42a_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1ac71426b_Fn> _1ac75e9ae_FindFn(_1ac75d42a_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1ac727548_Trait> _1ac75ed00_FindTrait(_1ac75d42a_scopeChecker*, jule::Str);
inline jule::Ptr<_1ac729c54_Enum> _1ac760141_FindEnum(_1ac75d42a_scopeChecker*, jule::Str);
inline jule::Ptr<_1ac72b45e_TypeEnum> _1ac760482_FindTypeEnum(_1ac75d42a_scopeChecker*, jule::Str);
inline jule::Bool _1ac7607d4_isUnsafe(jule::Ptr<_1ac75d42a_scopeChecker>);
inline jule::Bool _1ac760a6a_isRoot(_1ac75d42a_scopeChecker*);
inline void _1ac760c68_stop(_1ac75d42a_scopeChecker*);
inline jule::Bool _1ac760eee_stopped(_1ac75d42a_scopeChecker*);
inline jule::Bool _1ac761285_isDeferred(jule::Ptr<_1ac75d42a_scopeChecker>);
inline jule::Ptr<_1ac75d42a_scopeChecker> _1ac76151b_getRoot(jule::Ptr<_1ac75d42a_scopeChecker>);
inline jule::Ptr<_1ac75d42a_scopeChecker> _1ac7617a2_getHardRoot(jule::Ptr<_1ac75d42a_scopeChecker>);
inline jule::Ptr<_1ac7589b9_Label> _1ac761ae3_findLabel(_1ac75d42a_scopeChecker*, jule::Str*);
inline jule::Ptr<_1ac75be84_scopeLabel> _1ac761e34_findLabelScope(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Str*);
inline jule::Ptr<_1ac75be84_scopeLabel> _1ac762275_findLabelAll(_1ac75d42a_scopeChecker*, jule::Str*);
inline jule::Bool _1ac762671_isDuplicatedIdent(_1ac75d42a_scopeChecker*, jule::Uintptr, jule::Str*);
inline void _1ac762929_checkVarDecl(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac6db4eb_VarDecl>);
inline void _1ac762bd2_checkTypeAlias(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac858c40_TypeAlias>*);
inline void _1ac762e8a_checkTypeAliasDecl(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac6e019d_TypeAliasDecl>);
inline jule::Ptr<_1ac756126_Scope> _1ac763221_getChild(_1ac75d42a_scopeChecker*);
inline void _1ac76363e_checkChildSsc(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac6d86a2_ScopeTree>*, jule::Ptr<_1ac756126_Scope>*, jule::Ptr<_1ac75d42a_scopeChecker>*);
inline jule::Ptr<_1ac756126_Scope> _1ac763a3a_checkChildSc(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac6d86a2_ScopeTree>*, jule::Ptr<_1ac75d42a_scopeChecker>*);
inline jule::Ptr<_1ac756126_Scope> _1ac763d7b_checkChild(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac6d86a2_ScopeTree>*);
inline void _1ac764134_checkAnonScope(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac6d86a2_ScopeTree>);
inline void _1ac764497_processErrorCall(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac70ed16_BuiltinErrorCallExprModel>*, jule::Ptr<_1ac6b2e62_Token>);
inline void _1ac764750_checkExpr(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac6cc9b5_Expr>);
inline jule::Ptr<_1ac756544_If> _1ac764a91_checkIf(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac6de0d1_If>);
inline jule::Ptr<_1ac756841_Else> _1ac764dd2_checkElse(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac6de4aa_Else>);
inline void _1ac76518a_checkConditional(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac6de961_Conditional>);
inline void _1ac765663_checkIterScopeSsc(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Uintptr, jule::Ptr<_1ac6d86a2_ScopeTree>, jule::Ptr<_1ac756126_Scope>*, jule::Ptr<_1ac75d42a_scopeChecker>);
inline jule::Ptr<_1ac756126_Scope> _1ac765b19_checkIterScopeSc(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Uintptr, jule::Ptr<_1ac6d86a2_ScopeTree>, jule::Ptr<_1ac75d42a_scopeChecker>);
inline jule::Ptr<_1ac756126_Scope> _1ac766015_checkIterScope(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Uintptr, jule::Ptr<_1ac6d86a2_ScopeTree>*);
inline void _1ac7662bd_checkInfIter(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac6dc145_Iter>*);
inline void _1ac766576_checkWhileIter(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac6dc145_Iter>*);
inline void _1ac766994_checkComptimeRangeIter(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac6dc145_Iter>*, jule::Ptr<_1ac757e5d_RangeIter>*, jule::Ptr<_1ac8243ae_Data>*);
inline void _1ac766c4c_checkRangeIter(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac6dc145_Iter>*);
inline void _1ac767005_checkIter(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac6dc145_Iter>);
inline jule::Bool _1ac767346_checkValidContLabel(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Uintptr);
inline jule::Bool _1ac767687_checkValidBreakLabel(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_1ac7582e3_ContSt> _1ac7679c8_checkContValidScope(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac6ddb2a_ContSt>);
inline void _1ac767c81_checkCont(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac6ddb2a_ContSt>);
inline void _1ac768039_checkLabel(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac6d5c65_LabelSt>);
inline void _1ac7682e2_pushGoto(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac6d613e_GotoSt>);
inline void _1ac76859a_checkPostfix(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac6d712e_AssignSt>);
inline jule::Bool _1ac7688db_isNewAssignIdent(_1ac75d42a_scopeChecker*, jule::Str);
inline void _1ac768b94_removeInteriorMutRisk(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Bool _1ac76914a_checkStructureAssignOp(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac702105_StructIns>*, jule::Ptr<_1ac6d712e_AssignSt>*, jule::Ptr<_1ac8243ae_Data>*);
inline void _1ac769403_checkSingleAssign(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac6d712e_AssignSt>*);
inline void _1ac769986_processEndPartOfMultiAssign(_1ac75d42a_scopeChecker*, jule::Ptr<_1ac759aec_MultiAssign>*, jule::Ptr<_1ac6d712e_AssignSt>*, jule::Ptr<_1ac6d6a9b_AssignLeft>*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac8243ae_Data>*);
inline void _1ac769c3e_checkMultiAssign(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac6d712e_AssignSt>*);
inline void _1ac769ee7_checkAssignSt(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac6d712e_AssignSt>);
inline jule::Ptr<_1ac756126_Scope> _1ac76a3e3_checkCaseScope(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac75ad95_Case>*, jule::Ptr<_1ac6d86a2_ScopeTree>*);
inline jule::Ptr<_1ac75ad95_Case> _1ac76a954_checkCase(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac75a25c_Match>, jule::I64, jule::Ptr<_1ac6e0654_Case>, jule::Ptr<_1ac8243ae_Data>);
inline void _1ac76ad72_checkCases(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac6e0e6d_MatchCase>*, jule::Ptr<_1ac75a25c_Match>, jule::Ptr<_1ac8243ae_Data>);
inline jule::Ptr<_1ac75ad95_Case> _1ac76b26d_checkDefault(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac75a25c_Match>, jule::Ptr<_1ac6de4aa_Else>);
inline void _1ac76b5d1_checkComptimePanic(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac6b2e62_Token>, jule::Ptr<_1ac756126_Scope>*);
inline void _1ac76b944_processConstMatch(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac75a25c_Match>*, jule::Ptr<_1ac6e0e6d_MatchCase>*);
inline void _1ac76bbec_checkTypeMatch(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac6e0e6d_MatchCase>*);
inline void _1ac76bea5_checkCommonMatch(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac6e0e6d_MatchCase>*);
inline void _1ac76c25d_checkMatch(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac6e0e6d_MatchCase>);
inline void _1ac76c516_checkFall(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac6d643b_FallSt>);
inline jule::Ptr<_1ac7586bc_BreakSt> _1ac76c857_checkBreakWithLabel(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac6dd751_BreakSt>);
inline jule::Ptr<_1ac7586bc_BreakSt> _1ac76cb98_checkPlainBreak(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac6dd751_BreakSt>);
inline void _1ac76ce51_checkBreak(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac6dd751_BreakSt>);
inline void _1ac76d209_checkRet(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac6db8c5_RetSt>);
inline void _1ac76d4b2_checkUseExpr(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac6cd389_UseExpr>);
inline void _1ac76d76a_checkNode(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Any*);
inline void _1ac76d968_checkResult(jule::Ptr<_1ac75d42a_scopeChecker>);
inline void _1ac76db66_checkTree(jule::Ptr<_1ac75d42a_scopeChecker>);
inline void _1ac76dec9_checkGoto(_1ac75d42a_scopeChecker*, jule::Ptr<_1ac75c517_scopeGoto>*, jule::Ptr<_1ac75be84_scopeLabel>*);
inline void _1ac76e1c7_checkGotos(_1ac75d42a_scopeChecker*);
inline void _1ac76e3c5_checkLabels(_1ac75d42a_scopeChecker*);
inline void _1ac76e5c3_checkVars(_1ac75d42a_scopeChecker*);
inline void _1ac76e7c1_checkAliases(_1ac75d42a_scopeChecker*);
inline void _1ac76eb34_check(jule::Ptr<_1ac75d42a_scopeChecker>, jule::Ptr<_1ac6d86a2_ScopeTree>*, jule::Ptr<_1ac756126_Scope>*);
inline jule::Ptr<_1ac75d42a_scopeChecker> _1ac76edba_newChildChecker(jule::Ptr<_1ac75d42a_scopeChecker>);
inline void _1ac77186c_checkCdef(_1ac771460_directiveChecker*, jule::Ptr<_1ac6c7a9d_Directive>*);
inline void _1ac771b25_checkTypedef(_1ac771460_directiveChecker*, jule::Ptr<_1ac6c7a9d_Directive>*);
inline void _1ac771dcd_checkNamespace(_1ac771460_directiveChecker*, jule::Ptr<_1ac6c7a9d_Directive>*);
inline void _1ac772186_checkDeprecated(_1ac771460_directiveChecker*, jule::Ptr<_1ac6c7a9d_Directive>*);
inline void _1ac77243e_checkTest(_1ac771460_directiveChecker*, jule::Ptr<_1ac6c7a9d_Directive>*);
inline void _1ac7726e7_checkDirective(_1ac771460_directiveChecker*, jule::Ptr<_1ac6c7a9d_Directive>*);
inline void _1ac7728e5_check(_1ac771460_directiveChecker*);
inline jule::Ptr<_1ac77790b_ImportInfo> _1ac777de5_SelectPackage(_1ac77790b_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_1ac77790b_ImportInfo>)>);
inline jule::Ptr<_1ac7bb015_Var> _1ac7782e1_FindVar(_1ac77790b_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1ac858c40_TypeAlias> _1ac7786dc_FindTypeAlias(_1ac77790b_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1ac6ee377_Struct> _1ac778ad8_FindStruct(_1ac77790b_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1ac71426b_Fn> _1ac778ed4_FindFn(_1ac77790b_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1ac727548_Trait> _1ac779325_FindTrait(_1ac77790b_ImportInfo*, jule::Str);
inline jule::Ptr<_1ac729c54_Enum> _1ac779666_FindEnum(_1ac77790b_ImportInfo*, jule::Str);
inline jule::Ptr<_1ac72b45e_TypeEnum> _1ac7799a7_FindTypeEnum(_1ac77790b_ImportInfo*, jule::Str);
inline jule::Bool _1ac779e4c_isLookupable(_1ac77790b_ImportInfo*, jule::Str*);
inline jule::Bool _1ac77a28d_existIdent(_1ac77790b_ImportInfo*, jule::Str);
inline jule::Bool _1ac77a524_isAccessibleViaSelection(_1ac77790b_ImportInfo*);
inline jule::Ptr<_1ac77790b_ImportInfo> _1ac77acc7_SelectPackage(_1ac77a832_Package*, jule::Fn<jule::Bool(jule::Ptr<_1ac77790b_ImportInfo>)>);
inline jule::Ptr<_1ac7bb015_Var> _1ac77b1c3_FindVar(_1ac77a832_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1ac858c40_TypeAlias> _1ac77b5be_FindTypeAlias(_1ac77a832_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1ac6ee377_Struct> _1ac77b9ba_FindStruct(_1ac77a832_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1ac71426b_Fn> _1ac77bdb6_FindFn(_1ac77a832_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1ac727548_Trait> _1ac77c207_FindTrait(_1ac77a832_Package*, jule::Str);
inline jule::Ptr<_1ac729c54_Enum> _1ac77c548_FindEnum(_1ac77a832_Package*, jule::Str);
inline jule::Ptr<_1ac72b45e_TypeEnum> _1ac77c889_FindTypeEnum(_1ac77a832_Package*, jule::Str);
inline jule::Ptr<_1ac73deee_comptimeTypeInfo> _1ac7975b8_pushComptimeTypeInfo(_1ac797156_commonSemaMeta*, jule::Ptr<_1ac859a32_TypeKind>*);
inline jule::Ptr<_1ac77790b_ImportInfo> _1ac798223_SelectPackage(_1ac797c7d_Sema*, jule::Fn<jule::Bool(jule::Ptr<_1ac77790b_ImportInfo>)>);
inline jule::Ptr<_1ac7bb015_Var> _1ac79861e_FindVar(_1ac797c7d_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1ac858c40_TypeAlias> _1ac798a1a_FindTypeAlias(_1ac797c7d_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1ac6ee377_Struct> _1ac798e16_FindStruct(_1ac797c7d_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1ac71426b_Fn> _1ac799312_FindFn(_1ac797c7d_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1ac727548_Trait> _1ac799653_FindTrait(_1ac797c7d_Sema*, jule::Str);
inline jule::Ptr<_1ac729c54_Enum> _1ac799994_FindEnum(_1ac797c7d_Sema*, jule::Str);
inline jule::Ptr<_1ac72b45e_TypeEnum> _1ac799cd5_FindTypeEnum(_1ac797c7d_Sema*, jule::Str);
inline jule::Bool _1ac79a1e2_isFlag(_1ac797c7d_Sema*, jule::I64);
inline void _1ac79a49a_setCurrentFile(_1ac797c7d_Sema*, jule::Ptr<_1ac81e013_SymbolTable>);
inline void _1ac79a8b8_pushErr(_1ac797c7d_Sema*, jule::Ptr<_1ac6b2e62_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ac79ac2b_pushSuggestion(_1ac797c7d_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ac79b127_isAccessibleDefine(_1ac797c7d_Sema*, jule::Bool, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Bool _1ac79b5cd_isDuplicatedIdent(_1ac797c7d_Sema*, jule::Uintptr, jule::Str*, jule::Bool);
inline void _1ac79b941_checkDirectives(jule::Ptr<_1ac797c7d_Sema>, jule::Slice<jule::Ptr<_1ac6c7a9d_Directive>>*, jule::Any);
inline jule::Bool _1ac79bde7_checkGenericQuantity(_1ac797c7d_Sema*, jule::I64, jule::I64, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Bool _1ac79c2e3_isDuplicatedImportSelection(_1ac797c7d_Sema*, jule::Uintptr, jule::Str*);
inline jule::Any _1ac79c6de_getImportDef(_1ac797c7d_Sema*, jule::Str*, jule::Ptr<_1ac77790b_ImportInfo>*);
inline jule::Bool _1bc8a3ebc_checkImportSelection(_1ac797c7d_Sema*, jule::Ptr<_1ac6b2e62_Token>*, jule::Ptr<_1ac7bb015_Var>*);
inline jule::Bool _1bc8a8114_checkImportSelection(_1ac797c7d_Sema*, jule::Ptr<_1ac6b2e62_Token>*, jule::Ptr<_1ac858c40_TypeAlias>*);
inline jule::Bool _1bc8ac217_checkImportSelection(_1ac797c7d_Sema*, jule::Ptr<_1ac6b2e62_Token>*, jule::Ptr<_1ac6ee377_Struct>*);
inline jule::Bool _1bc8b14a2_checkImportSelection(_1ac797c7d_Sema*, jule::Ptr<_1ac6b2e62_Token>*, jule::Ptr<_1ac727548_Trait>*);
inline jule::Bool _1bc8b55a5_checkImportSelection(_1ac797c7d_Sema*, jule::Ptr<_1ac6b2e62_Token>*, jule::Ptr<_1ac729c54_Enum>*);
inline jule::Bool _1bc8b96a8_checkImportSelection(_1ac797c7d_Sema*, jule::Ptr<_1ac6b2e62_Token>*, jule::Ptr<_1ac72b45e_TypeEnum>*);
inline jule::Bool _1bc8bd7ab_checkImportSelection(_1ac797c7d_Sema*, jule::Ptr<_1ac6b2e62_Token>*, jule::Ptr<_1ac71426b_Fn>*);
inline jule::Bool _1ac79ce2b_checkImportSelectedSelections(_1ac797c7d_Sema*, jule::Ptr<_1ac77790b_ImportInfo>*);
inline jule::Bool _1bc8c2e86_checkImportsAllSelectionsFromCollection(_1ac797c7d_Sema*, jule::Slice<jule::Ptr<_1ac7bb015_Var>>*, jule::Ptr<_1ac6b2e62_Token>*);
inline jule::Bool _1bc8c411e_checkImportsAllSelectionsFromCollection(_1ac797c7d_Sema*, jule::Slice<jule::Ptr<_1ac858c40_TypeAlias>>*, jule::Ptr<_1ac6b2e62_Token>*);
inline jule::Bool _1bc8c68c4_checkImportsAllSelectionsFromCollection(_1ac797c7d_Sema*, jule::Slice<jule::Ptr<_1ac6ee377_Struct>>*, jule::Ptr<_1ac6b2e62_Token>*);
inline jule::Bool _1bc8c9124_checkImportsAllSelectionsFromCollection(_1ac797c7d_Sema*, jule::Slice<jule::Ptr<_1ac71426b_Fn>>*, jule::Ptr<_1ac6b2e62_Token>*);
inline jule::Bool _1bc8cb81e_checkImportsAllSelectionsFromCollection(_1ac797c7d_Sema*, jule::Slice<jule::Ptr<_1ac727548_Trait>>*, jule::Ptr<_1ac6b2e62_Token>*);
inline jule::Bool _1bc8ce0e6_checkImportsAllSelectionsFromCollection(_1ac797c7d_Sema*, jule::Slice<jule::Ptr<_1ac729c54_Enum>>*, jule::Ptr<_1ac6b2e62_Token>*);
inline jule::Bool _1bc8d1802_checkImportsAllSelectionsFromCollection(_1ac797c7d_Sema*, jule::Slice<jule::Ptr<_1ac72b45e_TypeEnum>>*, jule::Ptr<_1ac6b2e62_Token>*);
inline jule::Bool _1ac79d668_checkImportAllSelections(_1ac797c7d_Sema*, jule::Ptr<_1ac77790b_ImportInfo>*);
inline jule::Bool _1ac79d9a9_checkImportSelections(_1ac797c7d_Sema*, jule::Ptr<_1ac77790b_ImportInfo>*);
inline jule::Bool _1ac79dcea_isUseAliasDuplication(_1ac797c7d_Sema*, jule::Ptr<_1ac77790b_ImportInfo>*);
inline jule::Bool _1ac79e13b_checkImport(_1ac797c7d_Sema*, jule::Ptr<_1ac77790b_ImportInfo>*);
inline void _1ac79e339_checkImports(_1ac797c7d_Sema*);
inline void _1ac79e537_implFileImpls(jule::Ptr<_1ac797c7d_Sema>);
inline void _1ac79e735_implImpls(jule::Ptr<_1ac797c7d_Sema>);
inline void _1ac79e933_checkEnums(jule::Ptr<_1ac797c7d_Sema>);
inline void _1ac79eb31_checkFileInherits(jule::Ptr<_1ac797c7d_Sema>);
inline void _1ac79ed2e_checkInherits(jule::Ptr<_1ac797c7d_Sema>);
inline _1ac86b8e0_typeChecker _1ac7a02d5_typeChecker(jule::Ptr<_1ac797c7d_Sema>, jule::Trait<_1ac879568_Lookup>, jule::Slice<jule::Ptr<_1ac858c40_TypeAlias>>, jule::Ptr<_1ac86a900_referencer>);
inline jule::Ptr<_1ac859a32_TypeKind> _1ac7a0846_buildTypeWithRefers(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac6c8681_TypeDecl>*, jule::Trait<_1ac879568_Lookup>, jule::Slice<jule::Ptr<_1ac858c40_TypeAlias>>, jule::Ptr<_1ac86a900_referencer>);
inline jule::Bool _1ac7a0da7_checkTypeWithRefers(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac861c04_TypeSymbol>*, jule::Trait<_1ac879568_Lookup>, jule::Slice<jule::Ptr<_1ac858c40_TypeAlias>>, jule::Ptr<_1ac86a900_referencer>);
inline jule::Ptr<_1ac74d86b_constraintChecker> _1ac7a113d_constraintChecker(jule::Ptr<_1ac797c7d_Sema>);
inline jule::Bool _1ac7a1539_checkType(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac861c04_TypeSymbol>*, jule::Trait<_1ac879568_Lookup>);
inline jule::Ptr<_1ac859a32_TypeKind> _1ac7a19e0_buildTypeWithGenerics(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac6c8681_TypeDecl>*, jule::Slice<jule::Ptr<_1ac858c40_TypeAlias>>, jule::Ptr<_1ac71a33d_ReferenceStack>);
inline jule::Ptr<_1ac859a32_TypeKind> _1ac7a2172_selectType(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac6c8681_TypeDecl>*);
inline jule::Ptr<_1ac8260a3_Eval> _1ac7a2628_evalpd(jule::Ptr<_1ac797c7d_Sema>, jule::Trait<_1ac879568_Lookup>, jule::Ptr<_1ac859a32_TypeKind>, jule::Ptr<_1ac7bb015_Var>);
inline jule::Ptr<_1ac8260a3_Eval> _1ac7a2a24_evalp(jule::Ptr<_1ac797c7d_Sema>, jule::Trait<_1ac879568_Lookup>, jule::Ptr<_1ac859a32_TypeKind>);
inline jule::Ptr<_1ac8260a3_Eval> _1ac7a2d65_eval(jule::Ptr<_1ac797c7d_Sema>, jule::Trait<_1ac879568_Lookup>);
inline jule::Bool _1ac7a33c6_checkAssignType(jule::Ptr<_1ac797c7d_Sema>, jule::Bool, jule::Ptr<_1ac859a32_TypeKind>*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Bool _1ac7a387c__checkTypeCompatibility(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac859a32_TypeKind>*, jule::Ptr<_1ac859a32_TypeKind>*, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Bool _1ac7a3d33_checkTypeCompatibility(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac859a32_TypeKind>*, jule::Ptr<_1ac859a32_TypeKind>*, jule::Ptr<_1ac6b2e62_Token>*);
inline void _1ac7a4251_pushCompatiblityError(_1ac797c7d_Sema*, jule::Ptr<_1ac859a32_TypeKind>*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac6b2e62_Token>*);
inline jule::Bool _1ac7a4707_checkTypeCompatibility1(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac859a32_TypeKind>*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac6b2e62_Token>*);
inline jule::Ptr<_1ac859a32_TypeKind> _1ac7a4bad_buildNonGenericTypeKind(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac6c8681_TypeDecl>*, jule::Slice<jule::Ptr<_1ac6d588b_GenericDecl>>*, jule::Slice<jule::Ptr<_1ac859a32_TypeKind>>*);
inline jule::Bool _1ac7a50a9_buildFnNonGenericTypeKinds(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac717170_FnIns>*, jule::Slice<jule::Ptr<_1ac859a32_TypeKind>>*);
inline jule::Ptr<_1ac717170_FnIns> _1ac7a53ea_getTraitCheckFnKind(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac71426b_Fn>*);
inline jule::Bool _1ac7a58a1_checkConstraintsFn(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac717170_FnIns>*, jule::Ptr<_1ac6b2e62_Token>*, jule::Ptr<_1ac717170_FnIns>);
inline jule::Bool _1ac7a5d57_checkConstraintsStruct(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac702105_StructIns>*, jule::Ptr<_1ac6b2e62_Token>*, jule::Ptr<_1ac702105_StructIns>);
inline jule::Bool _1ac7a6253_fnEnvironment(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac717170_FnIns>*, jule::Fn<jule::Bool(jule::Ptr<_1ac797c7d_Sema>*,jule::Slice<jule::Ptr<_1ac858c40_TypeAlias>>*)>);
inline void _1ac7a650b_checkFnParamKind(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac7161c4_ParamIns>*);
inline jule::Bool _1ac7a684c_reloadFnInsTypes(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac717170_FnIns>);
inline jule::Bool _1ac7a6d03_checkRefValidityForInitExpr(jule::Ptr<_1ac797c7d_Sema>, jule::Bool, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac6b2e62_Token>*);
inline jule::Bool _1ac7a7144_isMutRiskyStruct(_1ac797c7d_Sema*, jule::Ptr<_1ac702105_StructIns>*);
inline jule::Bool _1ac7a7760_checkValidityForInitExpr(jule::Ptr<_1ac797c7d_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1ac859a32_TypeKind>*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac6b2e62_Token>*);
inline jule::Bool _1ac7a7b5b_checkTypeAliasDeclKind(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac858c40_TypeAlias>*, jule::Trait<_1ac879568_Lookup>);
inline void _1ac7a7ebe_checkTypeAliasDecl(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac858c40_TypeAlias>*, jule::Trait<_1ac879568_Lookup>);
inline void _1ac7a8277_checkTypeAliasDeclDup(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac858c40_TypeAlias>*);
inline jule::Bool _1ac7a850d_checkTypeAliasDecls(jule::Ptr<_1ac797c7d_Sema>);
inline void _1bc98409c_checkEnumItemsDup(_1ac797c7d_Sema*, jule::Slice<jule::Ptr<_1ac7291d7_EnumItem>>);
inline void _1bc991065_checkEnumItemsDup(_1ac797c7d_Sema*, jule::Slice<jule::Ptr<_1ac72ad87_TypeEnumItem>>);
inline void _1ac7a8a6e_checkEnumItemsStr(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac729c54_Enum>*);
inline void _1bc964951_checkEnumItemInt(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac729c54_Enum>*, jule::Ptr<_1ac86260b_Prim>*, jule::Ptr<_1ac7291d7_EnumItem>*, jule::U64*);
inline void _1bc974ab5_checkEnumItemInt(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac729c54_Enum>*, jule::Ptr<_1ac86260b_Prim>*, jule::Ptr<_1ac7291d7_EnumItem>*, jule::I64*);
inline void _1bc960b28_checkEnumItemsInt1(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac86260b_Prim>*, jule::Ptr<_1ac729c54_Enum>*);
inline void _1bc971bb1_checkEnumItemsInt1(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac86260b_Prim>*, jule::Ptr<_1ac729c54_Enum>*);
inline void _1ac7a971d_checkEnumItemsInt(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac729c54_Enum>*);
inline void _1ac7a99c6_checkEnumDecl(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac729c54_Enum>*);
inline void _1ac7a9c7e_checkTypeEnumDecl(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac72b45e_TypeEnum>*);
inline jule::Bool _1ac7aa015_checkEnumDecls(jule::Ptr<_1ac797c7d_Sema>);
inline jule::Bool _1ac7aa29b_checkTypeEnumDecls(jule::Ptr<_1ac797c7d_Sema>);
inline jule::Bool _1ac7aa5dc_checkDeclGenerics(_1ac797c7d_Sema*, jule::Slice<jule::Ptr<_1ac6d588b_GenericDecl>>*);
inline jule::Bool _1ac7aa92d_checkFnDeclParamsDup(_1ac797c7d_Sema*, jule::Ptr<_1ac71426b_Fn>*);
inline jule::Bool _1ac7aac6e_checkFnDeclResultDup(_1ac797c7d_Sema*, jule::Ptr<_1ac71426b_Fn>*);
inline jule::Bool _1ac7ab0b0_checkFnVariadicParam(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac71426b_Fn>*);
inline void _1ac7ab368_checkFnDeclPrototype(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac71426b_Fn>*);
inline jule::Bool _1ac7ab81e_catchTraitInheritCycle(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac727548_Trait>, jule::Ptr<_1ac727548_Trait>, _1c164cc40_StrBuilder*);
inline jule::Bool _1ac7abb60__checkTraitDeclInherits(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac727548_Trait>*);
inline void _1ac7abe18_checkTraitDeclInherits(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac727548_Trait>*);
inline void _1ac7ac1c1_checkTraitDeclMethod(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac71426b_Fn>*);
inline void _1ac7ac479_checkTraitDeclMethods(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac727548_Trait>*);
inline void _1ac7ac732_checkTraitDecl(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac727548_Trait>*);
inline jule::Bool _1ac7ac9b8_checkTraitDecls(jule::Ptr<_1ac797c7d_Sema>);
inline jule::Bool _1ac7acdb4_checkTraitImplMethods(_1ac797c7d_Sema*, jule::Ptr<_1ac727548_Trait>*, jule::Ptr<_1ac750bc0_Impl>*);
inline jule::Bool _1ac7ad2b0_implToStruct(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac6ee377_Struct>*, jule::Ptr<_1ac750bc0_Impl>*);
inline void _1ac7ad568_implTrait(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac750bc0_Impl>*);
inline void _1ac7ad821_implStruct(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac750bc0_Impl>*);
inline void _1ac7adac9_implImpl(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac750bc0_Impl>*);
inline void _1ac7ade3c_checkVarDecl(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac7bb015_Var>*, jule::Trait<_1ac879568_Lookup>);
inline void _1ac7ae1e5_checkGlobalVarDecl(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac7bb015_Var>*);
inline jule::Bool _1ac7ae47b_checkGlobalDecls(jule::Ptr<_1ac797c7d_Sema>);
inline jule::Bool _1ac7ae877_checkStructTraitImpl(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac6ee377_Struct>*, jule::Ptr<_1ac727548_Trait>*);
inline jule::Bool _1ac7aebb8_checkStructImpls(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac6ee377_Struct>*);
inline jule::Bool _1ac7b0009_checkStructFields(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac6ee377_Struct>*);
inline void _1ac7b02b2_checkStructDecl(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac6ee377_Struct>*);
inline jule::Bool _1ac7b0548_checkStructDecls(jule::Ptr<_1ac797c7d_Sema>);
inline void _1ac7b0801_checkAnonFuncDecl(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac71426b_Fn>*);
inline void _1ac7b0aa9_checkFuncDecl(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac71426b_Fn>*);
inline jule::Bool _1ac7b0dea_checkFuncDeclsBy(jule::Ptr<_1ac797c7d_Sema>, jule::Slice<jule::Ptr<_1ac71426b_Fn>>*);
inline jule::Bool _1ac7b1181_checkFuncDecls(jule::Ptr<_1ac797c7d_Sema>);
inline void _1ac7b159e_pushCycleError(_1ac797c7d_Sema*, jule::Str*, jule::Str*, _1c164cc40_StrBuilder*);
inline void _1ac7b1c53_checkPackageDecls(jule::Ptr<_1ac797c7d_Sema>);
inline void _1ac7b20b6_checkDataForTypeInference(_1ac797c7d_Sema*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac6b2e62_Token>*);
inline void _1ac7b236e_checkVarValue(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac7bb015_Var>*);
inline void _1ac7b26d2_evalVarValue(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac7bb015_Var>*, jule::Trait<_1ac879568_Lookup>);
inline void _1ac7b2a45_checkVar(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac7bb015_Var>*, jule::Trait<_1ac879568_Lookup>);
inline void _1ac7b2c43_checkGlobals(jule::Ptr<_1ac797c7d_Sema>);
inline jule::Ptr<_1ac717170_FnIns> _1ac7b313e_readyToCheckFn(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac702105_StructIns>*, jule::Ptr<_1ac71426b_Fn>*);
inline void _1ac7b34a2_checkTypeMethod(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac702105_StructIns>*, jule::Ptr<_1ac71426b_Fn>*);
inline jule::Ptr<_1ac717170_FnIns> _1ac7b3958_checkStructInsOp(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac702105_StructIns>*, jule::Ptr<_1ac71426b_Fn>*, jule::Fn<jule::Bool(jule::Ptr<_1ac71426b_Fn>)>);
inline jule::Bool _1ac7b3d54_checkStructEnv(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac702105_StructIns>*, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Bool _1ac7b4250_precheckStructIns(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac702105_StructIns>*, jule::Ptr<_1ac6b2e62_Token>);
inline void _1ac7b4508_checkStructIns(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac702105_StructIns>*);
inline void _1ac7b47b1_checkTypeStruct(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac6ee377_Struct>*);
inline void _1ac7b49ae_checkStructTypes(jule::Ptr<_1ac797c7d_Sema>);
inline void _1ac7b4c67_checkStructInsOperators(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac702105_StructIns>);
inline void _1ac7b5020_precheckStructType(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac6ee377_Struct>*);
inline void _1ac7b521d_precheckStructTypes(jule::Ptr<_1ac797c7d_Sema>);
inline void _1ac7b54c6_checkRets(_1ac797c7d_Sema*, jule::Ptr<_1ac717170_FnIns>*);
inline void _1ac7b5839_checkFnInsSc(_1ac797c7d_Sema*, jule::Ptr<_1ac717170_FnIns>*, jule::Ptr<_1ac75d42a_scopeChecker>*);
inline void _1ac7b5b9c_checkFnInsCaller(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac717170_FnIns>*, jule::Ptr<_1ac6b2e62_Token>);
inline void _1ac7b5e55_checkFnIns(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac717170_FnIns>*);
inline void _1ac7b620d_checkFunc(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac71426b_Fn>*);
inline void _1ac7b64b6_checkTestFn(_1ac797c7d_Sema*, jule::Ptr<_1ac717170_FnIns>*);
inline void _1ac7b676e_precheckFunc(jule::Ptr<_1ac797c7d_Sema>, jule::Ptr<_1ac71426b_Fn>*);
inline void _1ac7b696c_precheckFuncs(jule::Ptr<_1ac797c7d_Sema>);
inline void _1ac7b6b6a_checkFuncs(jule::Ptr<_1ac797c7d_Sema>);
inline void _1ac7b6d68_checkPackageTypes(jule::Ptr<_1ac797c7d_Sema>);
inline void _1ac7b7066_setFileSemaFields(jule::Ptr<_1ac797c7d_Sema>);
inline void _1ac7b7264_setSemaFields(jule::Ptr<_1ac797c7d_Sema>);
inline void _1ac7b751c_check(jule::Ptr<_1ac797c7d_Sema>, jule::Slice<jule::Ptr<_1ac81e013_SymbolTable>>*);
inline _1ac7b794b_missingRetChecker static__1ac7b7d14_new(void);
inline jule::Bool _1ac7b8122_checkConditional(_1ac7b794b_missingRetChecker*, jule::Ptr<_1ac756c5e_Conditional>);
inline jule::Bool _1ac7b8463_checkMatch(_1ac7b794b_missingRetChecker*, jule::Ptr<_1ac75a25c_Match>);
inline jule::Bool _1ac7b87a4_checkInfIter(_1ac7b794b_missingRetChecker*, jule::Ptr<_1ac75705b_InfIter>);
inline jule::Bool _1ac7b8ae5_checkScope(_1ac7b794b_missingRetChecker*, jule::Ptr<_1ac756126_Scope>);
inline jule::Bool _1ac7b8e36_check(_1ac7b794b_missingRetChecker*, jule::Ptr<_1ac756126_Scope>);
inline jule::Bool _1ac7bb39a_IsInitialized(_1ac7bb015_Var*);
inline jule::Bool _1ac7bb631_IsTypeInferred(_1ac7bb015_Var*);
inline jule::Bool _1ac7bb8b7_untypedConstant(_1ac7bb015_Var*);
inline jule::Bool static__1ac7bc467_Dispose(jule::Ptr<_1ac71426b_Fn>);
inline jule::Bool static__1ac7bc731_Str(jule::Ptr<_1ac71426b_Fn>);
inline jule::Bool static__1ac7bcaa5_logical(jule::Ptr<_1ac71426b_Fn>*, jule::Str);
inline jule::Bool static__1ac7bcd6e_Eq(jule::Ptr<_1ac71426b_Fn>);
inline jule::Bool static__1ac7bd138_Gt(jule::Ptr<_1ac71426b_Fn>);
inline jule::Bool static__1ac7bd402_GtEq(jule::Ptr<_1ac71426b_Fn>);
inline jule::Bool static__1ac7bd6bb_Lt(jule::Ptr<_1ac71426b_Fn>);
inline jule::Bool static__1ac7bd985_LtEq(jule::Ptr<_1ac71426b_Fn>);
inline jule::Bool static__1ac7bdd09_result(jule::Ptr<_1ac71426b_Fn>*, jule::Str);
inline jule::Bool static__1ac7be0c3_Shl(jule::Ptr<_1ac71426b_Fn>);
inline jule::Bool static__1ac7be38c_Shr(jule::Ptr<_1ac71426b_Fn>);
inline jule::Bool static__1ac7be656_Add(jule::Ptr<_1ac71426b_Fn>);
inline jule::Bool static__1ac7be920_Sub(jule::Ptr<_1ac71426b_Fn>);
inline jule::Bool static__1ac7bebd9_Div(jule::Ptr<_1ac71426b_Fn>);
inline jule::Bool static__1ac7beea3_Mul(jule::Ptr<_1ac71426b_Fn>);
inline jule::Bool static__1ac7c026c_Mod(jule::Ptr<_1ac71426b_Fn>);
inline jule::Bool static__1ac7c0536_BitAnd(jule::Ptr<_1ac71426b_Fn>);
inline jule::Bool static__1ac7c0800_BitOr(jule::Ptr<_1ac71426b_Fn>);
inline jule::Bool static__1ac7c0ab9_BitXor(jule::Ptr<_1ac71426b_Fn>);
inline jule::Bool static__1ac7c0e3d_unary(jule::Ptr<_1ac71426b_Fn>*, jule::Str);
inline jule::Bool static__1ac7c1207_Neg(jule::Ptr<_1ac71426b_Fn>);
inline jule::Bool static__1ac7c14c1_Pos(jule::Ptr<_1ac71426b_Fn>);
inline jule::Bool static__1ac7c178a_BitNot(jule::Ptr<_1ac71426b_Fn>);
inline jule::Bool static__1ac7c1b0e_assign(jule::Ptr<_1ac71426b_Fn>*, jule::Str);
inline jule::Bool static__1ac7c1dc8_AddAssign(jule::Ptr<_1ac71426b_Fn>);
inline jule::Bool static__1ac7c2192_SubAssign(jule::Ptr<_1ac71426b_Fn>);
inline jule::Bool static__1ac7c245b_DivAssign(jule::Ptr<_1ac71426b_Fn>);
inline jule::Bool static__1ac7c2725_MulAssign(jule::Ptr<_1ac71426b_Fn>);
inline jule::Bool static__1ac7c29de_ModAssign(jule::Ptr<_1ac71426b_Fn>);
inline jule::Bool static__1ac7c2ca8_ShlAssign(jule::Ptr<_1ac71426b_Fn>);
inline jule::Bool static__1ac7c3072_ShrAssign(jule::Ptr<_1ac71426b_Fn>);
inline jule::Bool static__1ac7c333b_BitOrAssign(jule::Ptr<_1ac71426b_Fn>);
inline jule::Bool static__1ac7c3605_BitAndAssign(jule::Ptr<_1ac71426b_Fn>);
inline jule::Bool static__1ac7c38be_BitXorAssign(jule::Ptr<_1ac71426b_Fn>);
inline void _1ac80b7d6_pushErr(_1ac80b2db_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ac80ba6c_checkTrait(_1ac80b2db_typeCompatibilityChecker*);
inline jule::Bool _1ac80bd03_checkPtr(_1ac80b2db_typeCompatibilityChecker*);
inline jule::Bool _1ac80c089_checkPrim(_1ac80b2db_typeCompatibilityChecker*);
inline jule::Bool _1ac80c485_typeEnum(_1ac80b2db_typeCompatibilityChecker*, jule::Ptr<_1ac72b45e_TypeEnum>*, jule::Ptr<_1ac859a32_TypeKind>*);
inline jule::Bool _1ac80c71b_checkTypeEnum(_1ac80b2db_typeCompatibilityChecker*);
inline jule::Bool _1ac80c9a2_check(_1ac80b2db_typeCompatibilityChecker*);
inline void _1ac80d51e_pushErr(_1ac80d08a_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ac80d7a5_checkValidity(_1ac80d08a_assignTypeChecker*);
inline jule::Bool _1ac80da3b_checkConst(_1ac80d08a_assignTypeChecker*);
inline jule::Bool _1ac80dcc2_checkCompatibility(_1ac80d08a_assignTypeChecker*);
inline jule::Bool _1ac80e058_check(_1ac80d08a_assignTypeChecker*);
inline jule::Bool _1bcb671c5_annotateConstraintElem(_1ac80e960_dynamicTypeAnnotation*, jule::Ptr<_1ac859a32_TypeKind>*);
inline jule::Bool _1bcb675e3_annotateConstraintElem(_1ac80e960_dynamicTypeAnnotation*, jule::Ptr<_1ac859a32_TypeKind>*);
inline jule::Bool _1bcb68bbb_annotateConstraintElem(_1ac80e960_dynamicTypeAnnotation*, jule::Ptr<_1ac859a32_TypeKind>*);
inline jule::Bool _1bcb70222_annotateConstraintElem(_1ac80e960_dynamicTypeAnnotation*, jule::Ptr<_1ac859a32_TypeKind>*);
inline jule::Bool _1ac810356_annotateConstraintMap(_1ac80e960_dynamicTypeAnnotation*, jule::Ptr<_1ac859a32_TypeKind>*);
inline jule::Bool _1ac810697_annotateConstraintTup(_1ac80e960_dynamicTypeAnnotation*, jule::Ptr<_1ac859a32_TypeKind>*);
inline jule::Bool _1ac8109d8_annotateConstraintFn(_1ac80e960_dynamicTypeAnnotation*, jule::Ptr<_1ac859a32_TypeKind>*);
inline jule::Bool _1ac810d29_annotateConstraintIdent(_1ac80e960_dynamicTypeAnnotation*, jule::Ptr<_1ac859a32_TypeKind>*);
inline jule::Bool _1ac81116a_annotateConstraint(_1ac80e960_dynamicTypeAnnotation*, jule::Ptr<_1ac859a32_TypeKind>*);
inline void _1ac8114cd_pushGeneric(_1ac80e960_dynamicTypeAnnotation*, jule::Ptr<_1ac859a32_TypeKind>*, jule::I64);
inline jule::Bool _1ac81181e_annotatePrim(_1ac80e960_dynamicTypeAnnotation*, jule::Ptr<_1ac859a32_TypeKind>*);
inline jule::Bool _1ac811b60_annotateArr(_1ac80e960_dynamicTypeAnnotation*, jule::Ptr<_1ac859a32_TypeKind>*);
inline jule::Bool _1ac811ea1_annotateSlc(_1ac80e960_dynamicTypeAnnotation*, jule::Ptr<_1ac859a32_TypeKind>*);
inline jule::Bool _1ac81239c_checkMapKey(_1ac80e960_dynamicTypeAnnotation*, jule::Ptr<_1ac859a32_TypeKind>*, jule::Ptr<_1ac859a32_TypeKind>*);
inline jule::Bool _1ac8126dd_annotateMap(_1ac80e960_dynamicTypeAnnotation*, jule::Ptr<_1ac859a32_TypeKind>*);
inline jule::Bool _1ac812a2e_annotateFn(_1ac80e960_dynamicTypeAnnotation*, jule::Ptr<_1ac859a32_TypeKind>*);
inline jule::Bool _1ac812d70_annotatePtr(_1ac80e960_dynamicTypeAnnotation*, jule::Ptr<_1ac859a32_TypeKind>*);
inline jule::Bool _1ac8131b1_annotateSptr(_1ac80e960_dynamicTypeAnnotation*, jule::Ptr<_1ac859a32_TypeKind>*);
inline jule::Bool _1ac813502_annotateStruct(_1ac80e960_dynamicTypeAnnotation*, jule::Ptr<_1ac859a32_TypeKind>*);
inline jule::Bool _1ac813843_annotateAny(_1ac80e960_dynamicTypeAnnotation*, jule::Ptr<_1ac859a32_TypeKind>*);
inline jule::Bool _1ac813b84_annotateKind(_1ac80e960_dynamicTypeAnnotation*, jule::Ptr<_1ac859a32_TypeKind>*);
inline jule::Bool _1ac813e1a_annotate(_1ac80e960_dynamicTypeAnnotation*);
inline void _1ac814d61_pushErrToken(_1ac8147bc_fnCallArgChecker*, jule::Ptr<_1ac6b2e62_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ac8151c4_pushErr(_1ac8147bc_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1ac7161c4_ParamIns>> _1ac81545a_getParams(_1ac8147bc_fnCallArgChecker*);
inline jule::Bool _1ac815768_checkCounts(_1ac8147bc_fnCallArgChecker*, jule::Slice<jule::Ptr<_1ac7161c4_ParamIns>>*);
inline jule::Bool _1ac815c1e_checkArg(_1ac8147bc_fnCallArgChecker*, jule::Ptr<_1ac7161c4_ParamIns>*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac6b2e62_Token>*);
inline jule::Bool _1ac81611a_push(_1ac8147bc_fnCallArgChecker*, jule::Ptr<_1ac7161c4_ParamIns>*, jule::Ptr<_1ac6cc9b5_Expr>);
inline jule::Bool _1ac816516_pushVariadic(_1ac8147bc_fnCallArgChecker*, jule::Ptr<_1ac7161c4_ParamIns>*, jule::I64);
inline jule::Bool _1ac816857_checkArgs(_1ac8147bc_fnCallArgChecker*, jule::Slice<jule::Ptr<_1ac7161c4_ParamIns>>*);
inline jule::Bool _1ac816add_checkDynamicTypeAnnotation(_1ac8147bc_fnCallArgChecker*);
inline jule::Bool _1ac816d74_check(_1ac8147bc_fnCallArgChecker*);
inline void _1ac817c54_pushErr(_1ac817704_structLitChecker*, jule::Ptr<_1ac6b2e62_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ac8180b7_pushSuggestion(_1ac817704_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1ac8184d5_pushMatch(_1ac817704_structLitChecker*, jule::Ptr<_1ac701555_FieldIns>*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac6b2e62_Token>*);
inline void _1ac818848_checkPair(_1ac817704_structLitChecker*, jule::Ptr<_1ac6d21d4_FieldExprPair>*, jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>>*);
inline jule::Bool _1ac818b89_readyExprs(_1ac817704_structLitChecker*, jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>>*);
inline void _1ac818e42_check(_1ac817704_structLitChecker*, jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>>*);
inline jule::Ptr<_1ac7bb015_Var> _1ac8199c0_buildVar(_1ac8194d6_rangeChecker*, jule::Ptr<_1ac6db4eb_VarDecl>*);
inline void _1ac819bbd_setSizeKey(_1ac8194d6_rangeChecker*);
inline void _1ac81a0db_checkRangeExprValidity(_1ac8194d6_rangeChecker*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac7bb015_Var>*, jule::Ptr<_1ac859a32_TypeKind>*);
inline void _1ac81a2d9_checkSlice(_1ac8194d6_rangeChecker*);
inline void _1ac81a4d7_checkArray(_1ac8194d6_rangeChecker*);
inline void _1ac81a6d5_checkMapKeyA(_1ac8194d6_rangeChecker*);
inline void _1ac81a8d3_checkMapKeyB(_1ac8194d6_rangeChecker*);
inline void _1ac81aad1_checkMap(_1ac8194d6_rangeChecker*);
inline void _1ac81acce_checkStr(_1ac8194d6_rangeChecker*);
inline void _1ac81aecc_checkComptime(_1ac8194d6_rangeChecker*);
inline jule::Bool _1ac81b263_checkComptimeRange(_1ac8194d6_rangeChecker*);
inline jule::Bool _1ac81b4e9_check(_1ac8194d6_rangeChecker*);
inline void _1ac81c165_prepareTypes(_1ac81bc47_retTypeChecker*);
inline void _1ac81c41d_prepareExprs(_1ac81bc47_retTypeChecker*, jule::Ptr<_1ac6cc9b5_Expr>*);
inline void _1ac81c61b_checkExprs(_1ac81bc47_retTypeChecker*);
inline jule::Bool _1ac81c95c_check(_1ac81bc47_retTypeChecker*, jule::Ptr<_1ac6cc9b5_Expr>*);
inline jule::Ptr<_1ac77790b_ImportInfo> _1ac81e4ec_SelectPackage(_1ac81e013_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_1ac77790b_ImportInfo>)>);
inline jule::Ptr<_1ac7bb015_Var> _1ac81e8e8_FindVar(_1ac81e013_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1ac858c40_TypeAlias> _1ac81ece4_FindTypeAlias(_1ac81e013_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1ac6ee377_Struct> _1ac8201e0_FindStruct(_1ac81e013_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1ac71426b_Fn> _1ac8205db_FindFn(_1ac81e013_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1ac727548_Trait> _1ac82092c_FindTrait(_1ac81e013_SymbolTable*, jule::Str);
inline jule::Ptr<_1ac729c54_Enum> _1ac820c6d_FindEnum(_1ac81e013_SymbolTable*, jule::Str);
inline jule::Ptr<_1ac72b45e_TypeEnum> _1ac8210ae_FindTypeEnum(_1ac81e013_SymbolTable*, jule::Str);
inline jule::Ptr<_1ac7bb015_Var> _1ac8216ca_findVar(_1ac81e013_SymbolTable*, jule::Str*, jule::Bool, jule::Bool);
inline jule::Ptr<_1ac858c40_TypeAlias> _1ac821b81_findTypeAlias(_1ac81e013_SymbolTable*, jule::Str*, jule::Bool, jule::Bool);
inline jule::Any _1ac82207c_defByIdent(_1ac81e013_SymbolTable*, jule::Str*, jule::Bool);
inline jule::Bool _1ac822533_isDuplicatedIdent(_1ac81e013_SymbolTable*, jule::Uintptr, jule::Str*, jule::Bool);
inline jule::Bool _1ac824766_IsNil(_1ac8243ae_Data*);
inline jule::Bool _1ac8249ec_IsVoid(_1ac8243ae_Data*);
inline jule::Bool _1ac824c83_IsConst(_1ac8243ae_Data*);
inline jule::Bool _1ac8250c4_GoodOperand(_1ac8243ae_Data*, jule::Ptr<_1ac8243ae_Data>*);
inline void _1ac826603_pushErr(_1ac8260a3_Eval*, jule::Ptr<_1ac6b2e62_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ac826966_pushSuggestion(_1ac8260a3_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1ac826b64_allowBuiltin(_1ac8260a3_Eval*);
inline void _1ac826d62_disallowBuiltin(_1ac8260a3_Eval*);
inline jule::Bool _1ac8270e8_isUnsafe(_1ac8260a3_Eval*);
inline jule::Bool _1ac82737e_isGlobal(_1ac8260a3_Eval*);
inline jule::Bool _1ac82768c_applyNumericPrefix(_1ac8260a3_Eval*, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac8279cd_litStr(_1ac8260a3_Eval*, jule::Ptr<_1ac6cda60_LitExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac827d1e_litRune(_1ac8260a3_Eval*, jule::Ptr<_1ac6cda60_LitExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac828160_litFloat(_1ac8260a3_Eval*, jule::Ptr<_1ac6cda60_LitExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac8284a1_litInt(_1ac8260a3_Eval*, jule::Ptr<_1ac6cda60_LitExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac8287e2_litNum(_1ac8260a3_Eval*, jule::Ptr<_1ac6cda60_LitExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac828b33_evalLit(_1ac8260a3_Eval*, jule::Ptr<_1ac6cda60_LitExpr>);
inline jule::Any _1ac828e74_findBuiltins(_1ac8260a3_Eval*, jule::Str*);
inline jule::Any _1ac829370_getDef(_1ac8260a3_Eval*, jule::Str*, jule::Bool);
inline jule::Ptr<_1ac71a33d_ReferenceStack> _1ac829606_getOwnerRefers(_1ac8260a3_Eval*);
inline void _1bccd4a29_pushReference(_1ac8260a3_Eval*, jule::Ptr<_1ac717170_FnIns>*);
inline void _1bcce92ad_pushReference(_1ac8260a3_Eval*, jule::Ptr<_1ac7bb015_Var>*);
inline void _1bcda9deb_pushReference(_1ac8260a3_Eval*, jule::Ptr<_1ac702105_StructIns>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac829c00__evalEnum(_1ac8260a3_Eval*, jule::Ptr<_1ac729c54_Enum>);
inline jule::Ptr<_1ac8243ae_Data> _1ac82a0eb_evalEnum(_1ac8260a3_Eval*, jule::Ptr<_1ac729c54_Enum>, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Ptr<_1ac8243ae_Data> _1ac82a43c__evalTypeEnum(_1ac8260a3_Eval*, jule::Ptr<_1ac72b45e_TypeEnum>);
inline jule::Ptr<_1ac8243ae_Data> _1ac82a838_evalTypeEnum(_1ac8260a3_Eval*, jule::Ptr<_1ac72b45e_TypeEnum>, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Ptr<_1ac8243ae_Data> _1ac82ab79__evalStruct(_1ac8260a3_Eval*, jule::Ptr<_1ac702105_StructIns>);
inline jule::Ptr<_1ac8243ae_Data> _1ac82b075_evalStruct(_1ac8260a3_Eval*, jule::Ptr<_1ac702105_StructIns>, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Ptr<_1ac8243ae_Data> _1ac82b3b6_evalFnIns(_1ac8260a3_Eval*, jule::Ptr<_1ac717170_FnIns>);
inline void _1ac82b729_checkDeprecated(_1ac8260a3_Eval*, jule::Slice<jule::Ptr<_1ac6c7a9d_Directive>>*, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Ptr<_1ac8243ae_Data> _1ac82bb25_evalFn(_1ac8260a3_Eval*, jule::Ptr<_1ac71426b_Fn>, jule::Ptr<_1ac6b2e62_Token>);
inline void _1ac82c043_pushIllegalCycleError(_1ac8260a3_Eval*, jule::Ptr<_1ac7bb015_Var>*, jule::Ptr<_1ac7bb015_Var>*, _1c164cc40_StrBuilder*);
inline jule::Bool _1ac82c43e_checkCrossCycle(_1ac8260a3_Eval*, jule::Ptr<_1ac7bb015_Var>*, _1c164cc40_StrBuilder*);
inline jule::Bool _1ac82c83a_checkIllegalCycles(_1ac8260a3_Eval*, jule::Ptr<_1ac7bb015_Var>*, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Ptr<_1ac8243ae_Data> _1ac82cc36_evalVar(_1ac8260a3_Eval*, jule::Ptr<_1ac7bb015_Var>, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Ptr<_1ac8243ae_Data> _1ac82d132_evalTypeAlias(_1ac8260a3_Eval*, jule::Ptr<_1ac858c40_TypeAlias>, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Ptr<_1ac8243ae_Data> _1ac82d52d_evalDef(_1ac8260a3_Eval*, jule::Any*, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Ptr<_1ac8243ae_Data> _1ac82d86e_evalIdent(_1ac8260a3_Eval*, jule::Ptr<_1ac6ce3e0_IdentExpr>);
inline jule::Ptr<_1ac8243ae_Data> _1ac82dbb0_evalUnary(jule::Ptr<_1ac8260a3_Eval>, jule::Ptr<_1ac6cea72_UnaryExpr>);
inline jule::Ptr<_1ac8243ae_Data> _1ac82e001_evalVariadic(jule::Ptr<_1ac8260a3_Eval>, jule::Ptr<_1ac6cee4b_VariadicExpr>);
inline jule::Ptr<_1ac8243ae_Data> _1ac82e342_evalUnsafe(jule::Ptr<_1ac8260a3_Eval>, jule::Ptr<_1ac6cde39_UnsafeExpr>);
inline jule::Ptr<_1ac8243ae_Data> _1ac82e683_evalArr(jule::Ptr<_1ac8260a3_Eval>, jule::Ptr<_1ac6d3ed8_SliceExpr>);
inline jule::Ptr<_1ac8243ae_Data> _1ac82eb39_evalExpSlc(jule::Ptr<_1ac8260a3_Eval>, jule::Ptr<_1ac6d3ed8_SliceExpr>, jule::Ptr<_1ac859a32_TypeKind>, jule::Any);
inline jule::Ptr<_1ac8243ae_Data> _1ac82ee7a_evalSliceExpr(jule::Ptr<_1ac8260a3_Eval>, jule::Ptr<_1ac6d3ed8_SliceExpr>);
inline void _1ac8302dd_checkIntegerIndexingByData(_1ac8260a3_Eval*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac6b2e62_Token>);
inline void _1ac83070b_indexingPtr(_1ac8260a3_Eval*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac6d4978_IndexingExpr>*);
inline void _1ac830b29_indexingArr(_1ac8260a3_Eval*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac6d4978_IndexingExpr>*);
inline void _1ac831047_indexingSlc(_1ac8260a3_Eval*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac6d4978_IndexingExpr>*);
inline void _1ac831465_indexingMap(_1ac8260a3_Eval*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac6d4978_IndexingExpr>*);
inline void _1ac831883_indexingStr(_1ac8260a3_Eval*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac6d4978_IndexingExpr>*);
inline void _1ac831ca1_toIndexing(_1ac8260a3_Eval*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac6d4978_IndexingExpr>*);
inline jule::Bool _1ac832257_pushGenericsFromExprSubIdent(jule::Ptr<_1ac8260a3_Eval>, jule::Ptr<_1ac6d0ac8_SubIdentExpr>*, jule::Slice<jule::Ptr<_1ac6c8681_TypeDecl>>*, jule::Ptr<_1ac6cc9b5_Expr>*);
inline jule::Bool _1ac832653_pushGenericsFromData(jule::Ptr<_1ac8260a3_Eval>, jule::Slice<jule::Ptr<_1ac6c8681_TypeDecl>>*, jule::Ptr<_1ac6cc9b5_Expr>*);
inline void _1ac8329b6_evalIdentDeclFromIndexing(jule::Ptr<_1ac8260a3_Eval>, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac6d4978_IndexingExpr>*);
inline jule::Bool _1ac832e6c_checkGenericFn(jule::Ptr<_1ac8260a3_Eval>, jule::Ptr<_1ac717170_FnIns>*, jule::Ptr<_1ac6b2e62_Token>*, jule::Any*);
inline void _1ac8332d0_evalFnGenericFromIndexing(jule::Ptr<_1ac8260a3_Eval>, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac6d4978_IndexingExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac833621_evalIndexing(jule::Ptr<_1ac8260a3_Eval>, jule::Ptr<_1ac6d4978_IndexingExpr>);
inline __jule_tuple_x_1ac8243ae_Data__jule_tuple_x_1ac8243ae_Data _1ac833962_evalSlicingExprs(jule::Ptr<_1ac8260a3_Eval>, jule::Ptr<_1ac6d50d8_SlicingExpr>*);
inline void _1ac833c1a_slicingArr(_1ac8260a3_Eval*, jule::Ptr<_1ac8243ae_Data>*);
inline void _1ac834138_slicingStr(_1ac8260a3_Eval*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac8243ae_Data>*);
inline void _1ac834611_checkSlicing(_1ac8260a3_Eval*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac6d50d8_SlicingExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac834952_evalSlicing(jule::Ptr<_1ac8260a3_Eval>, jule::Ptr<_1ac6d50d8_SlicingExpr>);
inline void _1ac834d70_castPtr(_1ac8260a3_Eval*, jule::Ptr<_1ac859a32_TypeKind>, jule::Ptr<_1ac8243ae_Data>, jule::Ptr<_1ac6b2e62_Token>);
inline void _1ac83528d_castStruct(_1ac8260a3_Eval*, jule::Ptr<_1ac859a32_TypeKind>, jule::Ptr<_1ac8243ae_Data>, jule::Ptr<_1ac6b2e62_Token>);
inline void _1ac8356ab_castRef(_1ac8260a3_Eval*, jule::Ptr<_1ac859a32_TypeKind>, jule::Ptr<_1ac8243ae_Data>, jule::Ptr<_1ac6b2e62_Token>);
inline void _1ac835ac9_castSlc(_1ac8260a3_Eval*, jule::Ptr<_1ac859a32_TypeKind>, jule::Ptr<_1ac8243ae_Data>, jule::Ptr<_1ac6b2e62_Token>);
inline void _1ac835e3c_castStr(_1ac8260a3_Eval*, jule::Ptr<_1ac8243ae_Data>, jule::Ptr<_1ac6b2e62_Token>);
inline void _1ac83635a_castInt(_1ac8260a3_Eval*, jule::Ptr<_1ac859a32_TypeKind>, jule::Ptr<_1ac8243ae_Data>, jule::Ptr<_1ac6b2e62_Token>);
inline void _1ac836778_castNum(_1ac8260a3_Eval*, jule::Ptr<_1ac859a32_TypeKind>, jule::Ptr<_1ac8243ae_Data>, jule::Ptr<_1ac6b2e62_Token>);
inline void _1ac836b96_castPrim(_1ac8260a3_Eval*, jule::Ptr<_1ac859a32_TypeKind>, jule::Ptr<_1ac8243ae_Data>, jule::Ptr<_1ac6b2e62_Token>);
inline void _1ac837009_castConstant(_1ac8260a3_Eval*, jule::Ptr<_1ac859a32_TypeKind>*, jule::Ptr<_1ac8243ae_Data>*);
inline void _1ac837427_castTypeEnum(_1ac8260a3_Eval*, jule::Ptr<_1ac859a32_TypeKind>*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac6b2e62_Token>*);
inline void _1ac837845_castTypeEnumT(_1ac8260a3_Eval*, jule::Ptr<_1ac859a32_TypeKind>*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac6b2e62_Token>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac837ceb_evalCastByTypeNData(_1ac8260a3_Eval*, jule::Ptr<_1ac859a32_TypeKind>, jule::Ptr<_1ac8243ae_Data>, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Ptr<_1ac8243ae_Data> _1ac8382a2_evalCastT(jule::Ptr<_1ac8260a3_Eval>, jule::Ptr<_1ac859a32_TypeKind>*, jule::Ptr<_1ac6cc9b5_Expr>*, jule::Ptr<_1ac6b2e62_Token>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac8385e3_evalCast(jule::Ptr<_1ac8260a3_Eval>, jule::Ptr<_1ac6d0325_CastExpr>);
inline jule::Ptr<_1ac8243ae_Data> _1ac838934_evalNsSelection(_1ac8260a3_Eval*, jule::Ptr<_1ac6d06ee_NsSelectionExpr>);
inline jule::Ptr<_1ac8243ae_Data> _1ac838dda_evalStructLitExplicit(jule::Ptr<_1ac8260a3_Eval>, jule::Ptr<_1ac702105_StructIns>, jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>>, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Ptr<_1ac8243ae_Data> _1ac83922b_evalStructLit(jule::Ptr<_1ac8260a3_Eval>, jule::Ptr<_1ac6d2a0e_StructLit>);
inline _1ac86b8e0_typeChecker _1ac8394b2_typeChecker(_1ac8260a3_Eval*);
inline jule::Ptr<_1ac8243ae_Data> _1ac839803_evalType(_1ac8260a3_Eval*, jule::Ptr<_1ac6c8681_TypeDecl>);
inline void _1ac839b66_callTypeFn(jule::Ptr<_1ac8260a3_Eval>, jule::Ptr<_1ac6d16de_FnCallExpr>*, jule::Ptr<_1ac8243ae_Data>*);
inline void _1ac839ec9_callBuiltinFn(jule::Ptr<_1ac8260a3_Eval>, jule::Ptr<_1ac6d16de_FnCallExpr>*, jule::Ptr<_1ac8243ae_Data>*);
inline void _1ac83a33c_checkFnOfConcurrentCall(_1ac8260a3_Eval*, jule::Ptr<_1ac717170_FnIns>*, jule::Ptr<_1ac6b2e62_Token>);
inline void _1ac83a75a_processExceptionalHandler(_1ac8260a3_Eval*, jule::Ptr<_1ac717170_FnIns>*, jule::Ptr<_1ac6d16de_FnCallExpr>*, jule::Ptr<_1ac8243ae_Data>*);
inline void _1ac83aabd_callFn(jule::Ptr<_1ac8260a3_Eval>, jule::Ptr<_1ac6d16de_FnCallExpr>*, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac83ae0e_evalFnCall(jule::Ptr<_1ac8260a3_Eval>, jule::Ptr<_1ac6d16de_FnCallExpr>);
inline jule::Ptr<_1ac8243ae_Data> _1ac83b30a_evalEnumStatic(_1ac8260a3_Eval*, jule::Ptr<_1ac729c54_Enum>, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Ptr<_1ac8243ae_Data> _1ac83b706_evalTypeEnumStatic(_1ac8260a3_Eval*, jule::Ptr<_1ac72b45e_TypeEnum>, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Ptr<_1ac8243ae_Data> _1ac83bb02_evalStructStatic(_1ac8260a3_Eval*, jule::Ptr<_1ac702105_StructIns>, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Ptr<_1ac8243ae_Data> _1ac83c0a8_evalTraitSubIdent(_1ac8260a3_Eval*, jule::Ptr<_1ac8243ae_Data>, jule::Ptr<_1ac727548_Trait>, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Ptr<_1ac8243ae_Data> _1ac83c619_evalStructSubIdentField(_1ac8260a3_Eval*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac702105_StructIns>*, jule::Ptr<_1ac6b2e62_Token>*, jule::Ptr<_1ac701555_FieldIns>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac83cb7a_evalStructSubIdent(_1ac8260a3_Eval*, jule::Ptr<_1ac8243ae_Data>, jule::Ptr<_1ac702105_StructIns>, jule::Ptr<_1ac6d0ac8_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1ac8243ae_Data> _1ac83cebb_evalIntTypeStatic(_1ac8260a3_Eval*, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Ptr<_1ac8243ae_Data> _1ac83d30c_evalUintTypeStatic(_1ac8260a3_Eval*, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Ptr<_1ac8243ae_Data> _1ac83d64d_evalI8TypeStatic(_1ac8260a3_Eval*, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Ptr<_1ac8243ae_Data> _1ac83d98e_evalI16TypeStatic(_1ac8260a3_Eval*, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Ptr<_1ac8243ae_Data> _1ac83dcd0_evalI32TypeStatic(_1ac8260a3_Eval*, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Ptr<_1ac8243ae_Data> _1ac83e121_evalI64TypeStatic(_1ac8260a3_Eval*, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Ptr<_1ac8243ae_Data> _1ac83e462_evalU8TypeStatic(_1ac8260a3_Eval*, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Ptr<_1ac8243ae_Data> _1ac83e7a3_evalU16TypeStatic(_1ac8260a3_Eval*, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Ptr<_1ac8243ae_Data> _1ac83eae4_evalU32TypeStatic(_1ac8260a3_Eval*, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Ptr<_1ac8243ae_Data> _1ac83ee35_evalU64TypeStatic(_1ac8260a3_Eval*, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Ptr<_1ac8243ae_Data> _1ac840276_evalF32TypeStatic(_1ac8260a3_Eval*, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Ptr<_1ac8243ae_Data> _1ac8405b7_evalF64TypeStatic(_1ac8260a3_Eval*, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Ptr<_1ac8243ae_Data> _1ac8409b3_evalPrimStatic(_1ac8260a3_Eval*, jule::Str, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Ptr<_1ac8243ae_Data> _1ac840dae_evalTypeStatic(_1ac8260a3_Eval*, jule::Ptr<_1ac8243ae_Data>, jule::Ptr<_1ac6d0ac8_SubIdentExpr>);
inline jule::Ptr<_1ac8243ae_Data> _1bced26e9_comptimeObjSubIdent(_1ac8260a3_Eval*, jule::Ptr<_1ac73deee_comptimeTypeInfo>*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac6d0ac8_SubIdentExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1bced6ca3_comptimeObjSubIdent(_1ac8260a3_Eval*, jule::Ptr<_1ac730089_comptimeStructField>*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac6d0ac8_SubIdentExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1bcedb318_comptimeObjSubIdent(_1ac8260a3_Eval*, jule::Ptr<_1ac736601_comptimeEnumField>*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac6d0ac8_SubIdentExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1bcee08c2_comptimeObjSubIdent(_1ac8260a3_Eval*, jule::Ptr<_1ac739093_comptimeParam>*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac6d0ac8_SubIdentExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1bcee507a_comptimeObjSubIdent(_1ac8260a3_Eval*, jule::Ptr<_1ac733345_comptimeStatic>*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac6d0ac8_SubIdentExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1bcee95e0_comptimeObjSubIdent(_1ac8260a3_Eval*, jule::Ptr<_1ac745511_comptimeValue>*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac6d0ac8_SubIdentExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1bceedb55_comptimeObjSubIdent(_1ac8260a3_Eval*, jule::Ptr<_1ac74945a_comptimeFile>*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac6d0ac8_SubIdentExpr>*);
inline __jule_tuple_x_1ac8243ae_Data__jule_tuple_bool _1ac841761_tryComptimeObjSubIdent(_1ac8260a3_Eval*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac6d0ac8_SubIdentExpr>);
inline jule::Ptr<_1ac8243ae_Data> _1ac841b5c_evalObjSubIdent(_1ac8260a3_Eval*, jule::Ptr<_1ac8243ae_Data>, jule::Ptr<_1ac6d0ac8_SubIdentExpr>);
inline jule::Ptr<_1ac8243ae_Data> _1ac841e9d_evalSubIdent(jule::Ptr<_1ac8260a3_Eval>, jule::Ptr<_1ac6d0ac8_SubIdentExpr>);
inline jule::Ptr<_1ac8243ae_Data> _1ac8422de_evalTuple(jule::Ptr<_1ac8260a3_Eval>, jule::Ptr<_1ac6cd686_TupleExpr>);
inline jule::Ptr<_1ac8243ae_Data> _1ac8426da_evalMap(jule::Ptr<_1ac8260a3_Eval>, jule::Ptr<_1ac86829e_Map>, jule::Ptr<_1ac6d2eb5_BraceLit>);
inline jule::Ptr<_1ac8243ae_Data> _1ac842a2b_evalBraceLit(jule::Ptr<_1ac8260a3_Eval>, jule::Ptr<_1ac6d2eb5_BraceLit>);
inline jule::Ptr<_1ac8243ae_Data> _1ac842d6c_evalAnonFunc(jule::Ptr<_1ac8260a3_Eval>, jule::Ptr<_1ac6da341_FnDecl>);
inline jule::Ptr<_1ac8243ae_Data> _1ac8431ad_evalBinary(jule::Ptr<_1ac8260a3_Eval>, jule::Ptr<_1ac6d107e_BinaryExpr>);
inline jule::Ptr<_1ac8243ae_Data> _1ac8434ee_evalExprKind(jule::Ptr<_1ac8260a3_Eval>, jule::Any);
inline jule::Ptr<_1ac8243ae_Data> _1ac843840_eval1(jule::Ptr<_1ac8260a3_Eval>, jule::Ptr<_1ac6cc9b5_Expr>);
inline jule::Ptr<_1ac8243ae_Data> _1ac843b81_eval(jule::Ptr<_1ac8260a3_Eval>, jule::Ptr<_1ac6cc9b5_Expr>);
inline jule::Ptr<_1ac8243ae_Data> _1ac843ec2_evalExpr1(jule::Ptr<_1ac8260a3_Eval>, jule::Ptr<_1ac6cc9b5_Expr>);
inline jule::Ptr<_1ac8243ae_Data> _1ac844313_evalExpr(jule::Ptr<_1ac8260a3_Eval>, jule::Ptr<_1ac6cc9b5_Expr>);
inline _1ac8447ca_unaryEval static__1ac844c1a_new(jule::Ptr<_1ac8260a3_Eval>);
inline void _1ac844e18_minus(_1ac8447ca_unaryEval*);
inline void _1ac845116_plus(_1ac8447ca_unaryEval*);
inline void _1ac845314_caret(_1ac8447ca_unaryEval*);
inline void _1ac845512_excl(_1ac8447ca_unaryEval*);
inline void _1ac845710_star(_1ac8447ca_unaryEval*);
inline void _1ac84590d_amper(_1ac8447ca_unaryEval*);
inline void _1ac845b0b_typeDecl(_1ac8447ca_unaryEval*);
inline void _1ac845d09_evalData(_1ac8447ca_unaryEval*);
inline jule::Ptr<_1ac8243ae_Data> _1ac84614a_eval(_1ac8447ca_unaryEval*, jule::Ptr<_1ac6cea72_UnaryExpr>);
inline _1ac846766_binaryEval static__1ac846d4e_newPlain(jule::Ptr<_1ac8260a3_Eval>);
inline _1ac846766_binaryEval static__1ac847190_new(jule::Ptr<_1ac8260a3_Eval>, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Bool _1ac847426_checkTypeCompatibility(_1ac846766_binaryEval*);
inline jule::Bool _1ac8476ac_checkStructCommonOperatorCompatibility(_1ac846766_binaryEval*);
inline jule::Ptr<_1ac8243ae_Data> _1ac847943_evalComptimeTypeInfo(_1ac846766_binaryEval*);
inline jule::Ptr<_1ac8243ae_Data> _1ac847bc9_evalNil(_1ac846766_binaryEval*);
inline jule::Ptr<_1ac8243ae_Data> _1ac847e60_evalEnum(_1ac846766_binaryEval*);
inline jule::Ptr<_1ac8243ae_Data> _1ac8481e6_evalTypeEnum(_1ac846766_binaryEval*);
inline jule::Ptr<_1ac8243ae_Data> _1ac84847c_evalSptr(_1ac846766_binaryEval*);
inline jule::Ptr<_1ac8243ae_Data> _1ac848713_evalPtr(_1ac846766_binaryEval*);
inline jule::Ptr<_1ac8243ae_Data> _1ac848999_evalArr(_1ac846766_binaryEval*);
inline jule::Ptr<_1ac8243ae_Data> _1ac848c30_evalSlc(_1ac846766_binaryEval*);
inline jule::Ptr<_1ac8243ae_Data> _1ac848eb6_evalStruct(_1ac846766_binaryEval*);
inline jule::Ptr<_1ac8243ae_Data> _1ac84924c_evalTrait(_1ac846766_binaryEval*);
inline jule::Ptr<_1ac8243ae_Data> _1ac8494d3_evalAny(_1ac846766_binaryEval*);
inline jule::Ptr<_1ac8243ae_Data> _1ac849769_evalBool(_1ac846766_binaryEval*);
inline jule::Ptr<_1ac8243ae_Data> _1ac849a00_evalStr(_1ac846766_binaryEval*);
inline void _1ac849bed_setTypeToGreater(_1ac846766_binaryEval*);
inline void _1ac849ea6_checkModData(_1ac846766_binaryEval*, jule::Ptr<_1ac8243ae_Data>*);
inline void _1ac84a1a4_mod(_1ac846766_binaryEval*);
inline jule::Bool _1ac84a5a0_numbersAreCompatibile(_1ac846766_binaryEval*, jule::Str*, jule::Str*);
inline jule::Ptr<_1ac8243ae_Data> _1ac84a836_evalFloat(_1ac846766_binaryEval*);
inline jule::Ptr<_1ac8243ae_Data> _1ac84aabc_evalInt(_1ac846766_binaryEval*);
inline jule::Ptr<_1ac8243ae_Data> _1ac84ad53_evalPrim(_1ac846766_binaryEval*);
inline void _1ac84b051_checkSpecialCases(_1ac846766_binaryEval*);
inline jule::Ptr<_1ac8243ae_Data> _1ac84b2d7_evalOp(_1ac846766_binaryEval*);
inline void _1ac84b590_evalConst(_1ac846766_binaryEval*, jule::Ptr<_1ac8243ae_Data>*);
inline void _1ac84b848_checkData(_1ac846766_binaryEval*, jule::Ptr<_1ac8243ae_Data>*);
inline void _1ac84ba46_checkDatas(_1ac846766_binaryEval*);
inline void _1ac84bcee_setModel(_1ac846766_binaryEval*, jule::Ptr<_1ac8243ae_Data>*);
inline void _1ac84c0a7_postEval(_1ac846766_binaryEval*, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac84c4a3_solveExplicit(_1ac846766_binaryEval*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac84c7e4_eval(_1ac846766_binaryEval*, jule::Ptr<_1ac6d107e_BinaryExpr>*);
inline jule::Str _1ac859dea_Str(_1ac859a32_TypeKind*);
inline jule::Bool _1ac85a23b_Equal(jule::Ptr<_1ac859a32_TypeKind>, jule::Ptr<_1ac859a32_TypeKind>);
inline jule::Bool _1ac85a879_Binded(_1ac859a32_TypeKind*);
inline jule::Bool _1ac85ab10_IsNil(_1ac859a32_TypeKind*);
inline jule::Bool _1ac85ad96_Void(_1ac859a32_TypeKind*);
inline jule::Bool _1ac85b12c_Comparable(_1ac859a32_TypeKind*);
inline jule::Bool _1ac85b3b3_Mutable(_1ac859a32_TypeKind*);
inline jule::Bool _1ac85b649_Ordered(_1ac859a32_TypeKind*);
inline jule::Bool _1ac85b8d0_NilCompatible(_1ac859a32_TypeKind*);
inline jule::Bool _1ac85bb66_PerformsRC(_1ac859a32_TypeKind*);
inline jule::Bool _1ac85bdec_Variadicable(_1ac859a32_TypeKind*);
inline jule::Ptr<_1ac86260b_Prim> _1ac85c183_Prim(_1ac859a32_TypeKind*);
inline jule::Ptr<_1ac866137_Sptr> _1ac85c419_Sptr(_1ac859a32_TypeKind*);
inline jule::Ptr<_1ac8698ee_Ptr> _1ac85c6a0_Ptr(_1ac859a32_TypeKind*);
inline jule::Ptr<_1ac729c54_Enum> _1ac85c936_Enum(_1ac859a32_TypeKind*);
inline jule::Ptr<_1ac72b45e_TypeEnum> _1ac85cbbc_TypeEnum(_1ac859a32_TypeKind*);
inline jule::Ptr<_1ac868e2b_Arr> _1ac85ce53_Arr(_1ac859a32_TypeKind*);
inline jule::Ptr<_1ac866b0a_Slc> _1ac85d1d9_Slc(_1ac859a32_TypeKind*);
inline jule::Ptr<_1ac717170_FnIns> _1ac85d470_Fn(_1ac859a32_TypeKind*);
inline jule::Ptr<_1ac702105_StructIns> _1ac85d706_Struct(_1ac859a32_TypeKind*);
inline jule::Ptr<_1ac727548_Trait> _1ac85d98c_Trait(_1ac859a32_TypeKind*);
inline jule::Ptr<_1ac86829e_Map> _1ac85dc23_Map(_1ac859a32_TypeKind*);
inline jule::Ptr<_1ac8676ee_Tuple> _1ac85dea9_Tup(_1ac859a32_TypeKind*);
inline jule::Bool _1ac85e240_comptime(_1ac859a32_TypeKind*);
inline jule::Ptr<_1ac731c4a_comptimeStructFields> _1ac85e4c6_comptimeStructFields(_1ac859a32_TypeKind*);
inline jule::Ptr<_1ac730089_comptimeStructField> _1ac85e75c_comptimeStructField(_1ac859a32_TypeKind*);
inline jule::Ptr<_1ac737998_comptimeEnumFields> _1ac85e9e3_comptimeEnumFields(_1ac859a32_TypeKind*);
inline jule::Ptr<_1ac736601_comptimeEnumField> _1ac85ec79_comptimeEnumField(_1ac859a32_TypeKind*);
inline jule::Ptr<_1ac73b309_comptimeParams> _1ac860010_comptimeParams(_1ac859a32_TypeKind*);
inline jule::Ptr<_1ac739093_comptimeParam> _1ac860296_comptimeParam(_1ac859a32_TypeKind*);
inline jule::Ptr<_1ac72e5b6_comptimeRange> _1ac86052c_comptimeRange(_1ac859a32_TypeKind*);
inline jule::Ptr<_1ac73c904_comptimeTypeInfos> _1ac8607b3_comptimeTypeInfos(_1ac859a32_TypeKind*);
inline jule::Ptr<_1ac73deee_comptimeTypeInfo> _1ac860a49_comptimeTypeInfo(_1ac859a32_TypeKind*);
inline jule::Ptr<_1ac735006_comptimeStatics> _1ac860cd0_comptimeStatics(_1ac859a32_TypeKind*);
inline jule::Ptr<_1ac733345_comptimeStatic> _1ac861066_comptimeStatic(_1ac859a32_TypeKind*);
inline jule::Ptr<_1ac745511_comptimeValue> _1ac8612ec_comptimeValue(_1ac859a32_TypeKind*);
inline jule::Ptr<_1ac74945a_comptimeFile> _1ac861583_comptimeFile(_1ac859a32_TypeKind*);
inline jule::Ptr<_1ac747d60_comptimeFiles> _1ac861819_comptimeFiles(_1ac859a32_TypeKind*);
inline jule::Bool _1ac862078_checked(_1ac861c04_TypeSymbol*);
inline jule::Str _1ac86294c_Str(_1ac86260b_Prim*);
inline jule::Bool _1ac862c8d_Equal(jule::Ptr<_1ac86260b_Prim>, jule::Ptr<_1ac859a32_TypeKind>);
inline jule::Bool _1ac863233_IsConstraint(_1ac86260b_Prim*);
inline jule::Bool _1ac8634b9_IsI8(_1ac86260b_Prim*);
inline jule::Bool _1ac863750_IsI16(_1ac86260b_Prim*);
inline jule::Bool _1ac8639d6_IsI32(_1ac86260b_Prim*);
inline jule::Bool _1ac863c6c_IsI64(_1ac86260b_Prim*);
inline jule::Bool _1ac864003_IsU8(_1ac86260b_Prim*);
inline jule::Bool _1ac864289_IsU16(_1ac86260b_Prim*);
inline jule::Bool _1ac864520_IsU32(_1ac86260b_Prim*);
inline jule::Bool _1ac8647a6_IsU64(_1ac86260b_Prim*);
inline jule::Bool _1ac864a3c_IsF32(_1ac86260b_Prim*);
inline jule::Bool _1ac864cc3_IsF64(_1ac86260b_Prim*);
inline jule::Bool _1ac865059_IsInt(_1ac86260b_Prim*);
inline jule::Bool _1ac8652e0_IsUint(_1ac86260b_Prim*);
inline jule::Bool _1ac865576_IsUintptr(_1ac86260b_Prim*);
inline jule::Bool _1ac86580c_IsBool(_1ac86260b_Prim*);
inline jule::Bool _1ac865a93_IsStr(_1ac86260b_Prim*);
inline jule::Bool _1ac865d29_IsAny(_1ac86260b_Prim*);
inline jule::Str _1ac8664ab_Str(_1ac866137_Sptr*);
inline jule::Bool _1ac8667ec_Equal(jule::Ptr<_1ac866137_Sptr>, jule::Ptr<_1ac859a32_TypeKind>);
inline jule::Str _1ac86708e_Str(_1ac866b0a_Slc*);
inline jule::Bool _1ac8673d0_Equal(jule::Ptr<_1ac866b0a_Slc>, jule::Ptr<_1ac859a32_TypeKind>);
inline jule::Str _1ac867a73_Str(_1ac8676ee_Tuple*);
inline jule::Bool _1ac867db4_Equal(jule::Ptr<_1ac8676ee_Tuple>, jule::Ptr<_1ac859a32_TypeKind>);
inline jule::Str _1ac868623_Str(_1ac86829e_Map*);
inline jule::Bool _1ac868964_Equal(jule::Ptr<_1ac86829e_Map>, jule::Ptr<_1ac859a32_TypeKind>);
inline jule::Str _1ac8692a0_Str(_1ac868e2b_Arr*);
inline jule::Bool _1ac8695e1_Equal(jule::Ptr<_1ac868e2b_Arr>, jule::Ptr<_1ac859a32_TypeKind>);
inline jule::Str _1ac869c73_Str(_1ac8698ee_Ptr*);
inline jule::Bool _1ac86a0b4_Equal(jule::Ptr<_1ac8698ee_Ptr>, jule::Ptr<_1ac859a32_TypeKind>);
inline jule::Bool _1ac86a438_IsUnsafe(_1ac8698ee_Ptr*);
inline void _1ac86c12c_pushErr(_1ac86b8e0_typeChecker*, jule::Ptr<_1ac6b2e62_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ac86c32a_allowBuiltin(_1ac86b8e0_typeChecker*);
inline void _1ac86c528_disallowBuiltin(_1ac86b8e0_typeChecker*);
inline void _1bd1dad31_pushReference(_1ac86b8e0_typeChecker*, jule::Ptr<_1ac702105_StructIns>*);
inline void _1bd1dd718_pushReference(_1ac86b8e0_typeChecker*, jule::Ptr<_1ac727548_Trait>*);
inline void _1ac86ca89_pushReferenceByKind(_1ac86b8e0_typeChecker*, jule::Ptr<_1ac859a32_TypeKind>*);
inline void _1ac86cea7_pushCycleError(_1ac86b8e0_typeChecker*, jule::Any, jule::Any, _1c164cc40_StrBuilder*);
inline jule::Bool _1ac86d3a3_checkCrossCycle(_1ac86b8e0_typeChecker*, jule::Any, _1c164cc40_StrBuilder*);
inline jule::Bool _1ac86d79e_checkIllegalCycles(_1ac86b8e0_typeChecker*, jule::Ptr<_1ac6c8c8b_IdentTypeDecl>*, jule::Any);
inline jule::Trait<_1ac85957b_Kind> _1ac86db9a_fromTypeAlias(_1ac86b8e0_typeChecker*, jule::Ptr<_1ac6c8c8b_IdentTypeDecl>*, jule::Ptr<_1ac858c40_TypeAlias>*);
inline jule::Ptr<_1ac729c54_Enum> _1ac86e096_fromEnum(_1ac86b8e0_typeChecker*, jule::Ptr<_1ac6c8c8b_IdentTypeDecl>*, jule::Ptr<_1ac729c54_Enum>*);
inline jule::Ptr<_1ac72b45e_TypeEnum> _1ac86e492_fromTypeEnum(_1ac86b8e0_typeChecker*, jule::Ptr<_1ac6c8c8b_IdentTypeDecl>*, jule::Ptr<_1ac72b45e_TypeEnum>*);
inline jule::Ptr<_1ac727548_Trait> _1ac86e88d_fromTrait(_1ac86b8e0_typeChecker*, jule::Ptr<_1ac6c8c8b_IdentTypeDecl>*, jule::Ptr<_1ac727548_Trait>*);
inline jule::Bool _1ac86ec89_checkStructIns(_1ac86b8e0_typeChecker*, jule::Ptr<_1ac702105_StructIns>*, jule::Ptr<_1ac6b2e62_Token>*);
inline void _1ac870042_appendUsedStructReference(_1ac86b8e0_typeChecker*, jule::Ptr<_1ac6ee377_Struct>*);
inline jule::Ptr<_1ac702105_StructIns> _1ac87043d_buildStructInstance(_1ac86b8e0_typeChecker*, jule::Ptr<_1ac6c8c8b_IdentTypeDecl>*, jule::Ptr<_1ac6ee377_Struct>*);
inline jule::Ptr<_1ac702105_StructIns> _1ac870839_fromStruct(_1ac86b8e0_typeChecker*, jule::Ptr<_1ac6c8c8b_IdentTypeDecl>*, jule::Ptr<_1ac6ee377_Struct>*);
inline jule::Trait<_1ac85957b_Kind> _1ac870b7a_getDef(_1ac86b8e0_typeChecker*, jule::Ptr<_1ac6c8c8b_IdentTypeDecl>*);
inline jule::Trait<_1ac85957b_Kind> _1ac870ebb_buildIdent(_1ac86b8e0_typeChecker*, jule::Ptr<_1ac6c8c8b_IdentTypeDecl>);
inline jule::Trait<_1ac85957b_Kind> _1ac87130c_buildSubIdent(_1ac86b8e0_typeChecker*, jule::Ptr<_1ac6c9088_SubIdentTypeDecl>);
inline jule::Ptr<_1ac866137_Sptr> _1ac87164d_buildSptrFromType(_1ac86b8e0_typeChecker*, jule::Ptr<_1ac859a32_TypeKind>*);
inline jule::Ptr<_1ac866137_Sptr> _1ac87198e_buildSptr(_1ac86b8e0_typeChecker*, jule::Ptr<_1ac6c972b_SptrTypeDecl>);
inline jule::Ptr<_1ac8698ee_Ptr> _1ac871cd0_buildPtrFromType(_1ac86b8e0_typeChecker*, jule::Ptr<_1ac859a32_TypeKind>*);
inline jule::Ptr<_1ac8698ee_Ptr> _1ac872121_buildPtr(_1ac86b8e0_typeChecker*, jule::Ptr<_1ac6ca1aa_PtrTypeDecl>);
inline jule::Ptr<_1ac866b0a_Slc> _1ac872462_buildSlc(_1ac86b8e0_typeChecker*, jule::Ptr<_1ac6c9ab1_SlcTypeDecl>);
inline jule::Ptr<_1ac868e2b_Arr> _1ac8727a3_buildArr(_1ac86b8e0_typeChecker*, jule::Ptr<_1ac6ca94c_ArrTypeDecl>);
inline jule::Ptr<_1ac86829e_Map> _1ac872ae4_buildMap(_1ac86b8e0_typeChecker*, jule::Ptr<_1ac6cb19a_MapTypeDecl>);
inline jule::Ptr<_1ac8676ee_Tuple> _1ac872e35_buildTuple(_1ac86b8e0_typeChecker*, jule::Ptr<_1ac6c9dad_TupleTypeDecl>);
inline jule::Bool _1ac873276_checkFuncTypes(_1ac86b8e0_typeChecker*, jule::Ptr<_1ac717170_FnIns>*);
inline jule::Ptr<_1ac717170_FnIns> _1ac8735b7_buildFunc(_1ac86b8e0_typeChecker*, jule::Ptr<_1ac6da341_FnDecl>);
inline jule::Trait<_1ac85957b_Kind> _1ac873908_buildByNamespace(_1ac86b8e0_typeChecker*, jule::Ptr<_1ac6c942e_NamespaceTypeDecl>);
inline jule::Ptr<_1ac859a32_TypeKind> _1ac873c49_build(_1ac86b8e0_typeChecker*, jule::Any*);
inline jule::Ptr<_1ac859a32_TypeKind> _1ac87408a_checkDecl(_1ac86b8e0_typeChecker*, jule::Ptr<_1ac6c8681_TypeDecl>*);
inline jule::Bool static__1ac8749d6_prim(jule::Str*, jule::Ptr<_1ac86260b_Prim>);
inline jule::Bool static__1ac874d5a_exist(jule::Str*, jule::Ptr<_1ac859a32_TypeKind>*);
inline void _1ad1dd99d_stop(_1ad1dd32c_scopeParser*);
inline jule::Bool _1ad1ddc34_stopped(_1ad1dd32c_scopeParser*);
inline jule::Bool _1ad1ddeba_finished(_1ad1dd32c_scopeParser*);
inline jule::Bool _1ad1de251_isLastSt(_1ad1dd32c_scopeParser*);
inline void _1ad1de5b4_pushErr(_1ad1dd32c_scopeParser*, jule::Ptr<_1ac6b2e62_Token>, jule::Str);
inline void _1ad1de927_pushSuggestion(_1ad1dd32c_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1ad1debd0_insertAsNext(_1ad1dd32c_scopeParser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Ptr<_1ad1dc98b_stmt> _1ad1dee66_next(_1ad1dd32c_scopeParser*);
inline jule::Ptr<_1ac6d86a2_ScopeTree> _1ad1e0362_buildScope(_1ad1dd32c_scopeParser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Ptr<_1ac6db4eb_VarDecl> _1ad1e06a3_buildVarSt(_1ad1dd32c_scopeParser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Ptr<_1ac6db8c5_RetSt> _1ad1e09e4_buildRetSt(_1ad1dd32c_scopeParser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline jule::Ptr<_1ac6dc145_Iter> _1ad1e0d35_buildWhileNextIter(_1ad1dd32c_scopeParser*, jule::Ptr<_1ad1dc98b_stmt>*);
inline jule::Ptr<_1ac6dc970_WhileKind> _1ad1e1176_buildWhileIterKind(_1ad1dd32c_scopeParser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>> _1ad1e14b7_getRangeKindKeysTokens(_1ad1dd32c_scopeParser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Ptr<_1ac6db4eb_VarDecl> _1ad1e1808_buildRangeKindKey(_1ad1dd32c_scopeParser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Slice<jule::Ptr<_1ac6db4eb_VarDecl>> _1ad1e1b49_buildRangeKindKeys(_1ad1dd32c_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>>*);
inline void _1ad1e1eac_setupRangeKindKeysPlain(_1ad1dd32c_scopeParser*, jule::Ptr<_1ac6dd377_RangeKind>*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline void _1ad1e2320_setupRangeKindKeysExplicit(_1ad1dd32c_scopeParser*, jule::Ptr<_1ac6dd377_RangeKind>*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline void _1ad1e2683_setupRangeKindKeys(_1ad1dd32c_scopeParser*, jule::Ptr<_1ac6dd377_RangeKind>*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Ptr<_1ac6dd377_RangeKind> _1ad1e2b39_buildRangeIterKind(_1ad1dd32c_scopeParser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*, jule::Ptr<_1ac6b2e62_Token>*);
inline jule::Any _1ad1e3035_buildCommonIterKind(_1ad1dd32c_scopeParser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*, jule::Ptr<_1ac6b2e62_Token>*);
inline jule::Ptr<_1ac6dc145_Iter> _1ad1e3376_buildCommonIter(_1ad1dd32c_scopeParser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline jule::Ptr<_1ac6dc145_Iter> _1ad1e36b7_buildIterSt(_1ad1dd32c_scopeParser*, jule::Ptr<_1ad1dc98b_stmt>*);
inline jule::Ptr<_1ac6dd751_BreakSt> _1ad1e3a08_buildBreakSt(_1ad1dd32c_scopeParser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Ptr<_1ac6ddb2a_ContSt> _1ad1e3d49_buildContSt(_1ad1dd32c_scopeParser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Ptr<_1ac6de0d1_If> _1ad1e418a_buildIf(_1ad1dd32c_scopeParser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Ptr<_1ac6de4aa_Else> _1ad1e44cb_buildElse(_1ad1dd32c_scopeParser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Ptr<_1ac6de961_Conditional> _1ad1e481c_buildIfElseChain(_1ad1dd32c_scopeParser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline jule::Ptr<_1ac6cc9b5_Expr> _1ad1e4b5d_buildCoCallSt(_1ad1dd32c_scopeParser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline jule::Ptr<_1ac6d613e_GotoSt> _1ad1e4e9e_buildGotoSt(_1ad1dd32c_scopeParser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Ptr<_1ac6d643b_FallSt> _1ad1e52e0_buildFallSt(_1ad1dd32c_scopeParser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Ptr<_1ac6e019d_TypeAliasDecl> _1ad1e5631_buildTypeAliasSt(_1ad1dd32c_scopeParser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline void _1ad1e5b09_pushCaseExpr(_1ad1dd32c_scopeParser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>, jule::Ptr<_1ac6b2e62_Token>, jule::Bool, jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>>*);
inline __jule_tuple_sx_1ac6cc9b5_Expr__jule_tuple_bool _1ad1e60b0_buildCaseExprs(_1ad1dd32c_scopeParser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*, jule::Ptr<_1ac6b2e62_Token>*, jule::Bool);
inline jule::Ptr<_1ac6d86a2_ScopeTree> _1ad1e6401_buildCaseScope(_1ad1dd32c_scopeParser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline __jule_tuple_x_1ac6e0654_Case__jule_tuple_bool _1ad1e67ec_buildCase(_1ad1dd32c_scopeParser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*, jule::Bool);
inline __jule_tuple_sx_1ac6e0654_Case__jule_tuple_x_1ac6de4aa_Else _1ad1e6be8_buildCases(_1ad1dd32c_scopeParser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>, jule::Bool);
inline jule::Ptr<_1ac6e0e6d_MatchCase> _1ad1e7039_buildMatchCase(_1ad1dd32c_scopeParser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline jule::Ptr<_1ac6d86a2_ScopeTree> _1ad1e737a_buildScopeSt(_1ad1dd32c_scopeParser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline jule::Ptr<_1ac6d5c65_LabelSt> _1ad1e76bb_buildLabelSt(_1ad1dd32c_scopeParser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline __jule_tuple__1ac6d7cde_StmtData__jule_tuple_bool _1ad1e7a0c_buildIdSt(_1ad1dd32c_scopeParser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Ptr<_1ad2081e3_assignInfo> _1ad1e7d4d_buildAssignInfo(_1ad1dd32c_scopeParser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Ptr<_1ac6d6a9b_AssignLeft> _1ad1e818e_buildAssignL(_1ad1dd32c_scopeParser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Slice<jule::Ptr<_1ac6d6a9b_AssignLeft>> _1ad1e84d0_buildAssignLs(_1ad1dd32c_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>>*);
inline __jule_tuple__1ac6d7cde_StmtData__jule_tuple_bool _1ad1e8821_buildPlainAssign(_1ad1dd32c_scopeParser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Bool _1ad1e8c1c_buildDeclAssign1(_1ad1dd32c_scopeParser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*, jule::Ptr<_1ac6d712e_AssignSt>*);
inline __jule_tuple_x_1ac6d712e_AssignSt__jule_tuple_bool _1ad1e905d_buildDeclAssign(_1ad1dd32c_scopeParser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline __jule_tuple__1ac6d7cde_StmtData__jule_tuple_bool _1ad1e939e_buildAssignSt(_1ad1dd32c_scopeParser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Ptr<_1ac6cd389_UseExpr> _1ad1e96e0_buildUseExpr(_1ad1dd32c_scopeParser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Any _1ad1e9a31_buildConstSt(_1ad1dd32c_scopeParser*, jule::Ptr<_1ad1dc98b_stmt>*);
inline jule::Any _1ad1e9d72_buildSt(_1ad1dd32c_scopeParser*, jule::Ptr<_1ad1dc98b_stmt>*);
inline void _1ad1ea1d5_build(_1ad1dd32c_scopeParser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*, jule::Ptr<_1ac6d86a2_ScopeTree>*);
inline void _1ad1eb538_pushErr(_1ad1eac52_exprBuilder*, jule::Ptr<_1ac6b2e62_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ad1eb89b_pushSuggestion(_1ad1eac52_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1ac6cd686_TupleExpr> _1ad1ebbdc_buildTuple(_1ad1eac52_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>>*);
inline jule::Ptr<_1ac6cda60_LitExpr> _1ad1ec02d_buildLit(_1ad1eac52_exprBuilder*, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Any _1ad1ec6b0_buildSingle(_1ad1eac52_exprBuilder*, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Ptr<_1ac6ce3e0_IdentExpr> _1ad1eca01_buildBindIdent(_1ad1eac52_exprBuilder*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Ptr<_1ac6cea72_UnaryExpr> _1ad1ecd42_buildUnary(_1ad1eac52_exprBuilder*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline jule::Ptr<_1ac6d0ac8_SubIdentExpr> _1ad1ed183_buildObjSubIdent(_1ad1eac52_exprBuilder*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline jule::Ptr<_1ac6d06ee_NsSelectionExpr> _1ad1ed4c4_buildNsSubIdent(_1ad1eac52_exprBuilder*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Ptr<_1ac6c8681_TypeDecl> _1ad1ed815_buildType(_1ad1eac52_exprBuilder*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Any _1ad1edb56_buildSubIdent(_1ad1eac52_exprBuilder*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Ptr<_1ac6cee4b_VariadicExpr> _1ad1ede97_buildVariadic(_1ad1eac52_exprBuilder*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline jule::Ptr<_1ac6cccb2_RangeExpr> _1ad1ee2d8_buildBetweenParentheses(_1ad1eac52_exprBuilder*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline jule::Ptr<_1ac6d0325_CastExpr> _1ad1ee629_tryBuildCast(_1ad1eac52_exprBuilder*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline void _1ad1eea47_pushArg(_1ad1eac52_exprBuilder*, jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>>*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>> _1ad1eed88_buildArgs(_1ad1eac52_exprBuilder*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline jule::Ptr<_1ac6d16de_FnCallExpr> _1ad200680_buildFnCall(_1ad1eac52_exprBuilder*, jule::Ptr<_1ac6b2e62_Token>*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Any _1ad2009c1_buildParenthesesRange(_1ad1eac52_exprBuilder*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Ptr<_1ac6cde39_UnsafeExpr> _1ad200d12_buildUnsafeExpr(_1ad1eac52_exprBuilder*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline jule::Ptr<_1ac6da341_FnDecl> _1ad201153_buildAnonFn(_1ad1eac52_exprBuilder*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Any _1ad201494_buildUnsafe(_1ad1eac52_exprBuilder*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline void _1ad2018b2_pushRangeLitPart(_1ad1eac52_exprBuilder*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>, jule::Ptr<_1ac6b2e62_Token>, jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>> _1ad201c03_getBraceRangeLitExprParts(_1ad1eac52_exprBuilder*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline jule::Ptr<_1ac6d21d4_FieldExprPair> _1ad202044_buildFieldExprPair(_1ad1eac52_exprBuilder*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline jule::Ptr<_1ac6cc9b5_Expr> _1ad202385_buildStructLitExpr(_1ad1eac52_exprBuilder*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>> _1ad2026c6_buildStructLitExprs(_1ad1eac52_exprBuilder*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Ptr<_1ac6d2a0e_StructLit> _1ad202a17_buildTypedStructLiteral(_1ad1eac52_exprBuilder*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline jule::Ptr<_1ac6cc9b5_Expr> _1ad202d58_buildBraceLitPart(_1ad1eac52_exprBuilder*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Ptr<_1ac6d2eb5_BraceLit> _1ad203199_buildBraceLit(_1ad1eac52_exprBuilder*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Any _1ad2034da_buildBraceRange(_1ad1eac52_exprBuilder*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>> _1ad20382b_getEnumerableParts(_1ad1eac52_exprBuilder*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline jule::Ptr<_1ac6d3ed8_SliceExpr> _1ad203b6c_buildSlice(_1ad1eac52_exprBuilder*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline jule::Ptr<_1ac6d4978_IndexingExpr> _1ad204123_buildIndexing(_1ad1eac52_exprBuilder*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Ptr<_1ac6d50d8_SlicingExpr> _1ad20473e_buildSlicing(_1ad1eac52_exprBuilder*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*, jule::Ptr<_1ac6b2e62_Token>*, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Any _1ad204a80_buildBracketRange(_1ad1eac52_exprBuilder*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline jule::Any _1ad204dc1_buildExclRight(_1ad1eac52_exprBuilder*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Any _1ad205212_buildData(_1ad1eac52_exprBuilder*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Any _1ad20560d_buildBinary(_1ad1eac52_exprBuilder*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*, jule::I64);
inline jule::Any _1ad20594e_build(_1ad1eac52_exprBuilder*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Any _1ad205c90_buildKind(_1ad1eac52_exprBuilder*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Ptr<_1ac6cc9b5_Expr> _1ad2060d1_buildFromTokens(_1ad1eac52_exprBuilder*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline void _1ad20b8de_stop(_1ad20b5e2_parser*);
inline jule::Bool _1ad20bb75_stopped(_1ad20b5e2_parser*);
inline void _1ad20c093_pushErr(_1ad20b5e2_parser*, jule::Ptr<_1ac6b2e62_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ad20c406_pushSuggestion(_1ad20b5e2_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1ac6cc9b5_Expr> _1ad20c747_buildExpr(jule::Ptr<_1ad20b5e2_parser>, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Ptr<_1ac6c7a9d_Directive> _1ad20ca88_buildDirective(_1ad20b5e2_parser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline void _1ad20cd41_pushDirective(_1ad20b5e2_parser*, jule::Ptr<_1ac6c7a9d_Directive>);
inline jule::Ptr<_1ac6d86a2_ScopeTree> _1ad20d23c_buildScope(jule::Ptr<_1ad20b5e2_parser>, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*, jule::Ptr<_1ac6b2e62_Token>);
inline __jule_tuple_x_1ac6c8681_TypeDecl__jule_tuple_bool _1ad20d6e3__buildType(jule::Ptr<_1ad20b5e2_parser>, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*, jule::I64*, jule::Bool);
inline __jule_tuple_x_1ac6c8681_TypeDecl__jule_tuple_bool _1ad20db99_buildType(jule::Ptr<_1ad20b5e2_parser>, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_1ac6e019d_TypeAliasDecl> _1ad20deda_buildTypeAliasDecl(jule::Ptr<_1ad20b5e2_parser>, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline void _1ad20e34d_buildVarTypeAndExpr(jule::Ptr<_1ad20b5e2_parser>, jule::Ptr<_1ac6db4eb_VarDecl>*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline void _1ad20e6b1_buildVarCommon(jule::Ptr<_1ad20b5e2_parser>, jule::Ptr<_1ac6db4eb_VarDecl>*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline void _1ad20eace_buildVarBegin(_1ad20b5e2_parser*, jule::Ptr<_1ac6db4eb_VarDecl>*, jule::I64*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Ptr<_1ac6db4eb_VarDecl> _1ad20ee20_buildVar(jule::Ptr<_1ad20b5e2_parser>, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline jule::Ptr<_1ac6d588b_GenericDecl> _1ad210261_buildGeneric(jule::Ptr<_1ad20b5e2_parser>, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Slice<jule::Ptr<_1ac6d588b_GenericDecl>> _1ad21065c_buildGenerics(jule::Ptr<_1ad20b5e2_parser>, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*, jule::Ptr<_1ac6b2e62_Token>*);
inline jule::Ptr<_1ac6d8dde_ParamDecl> _1ad21099d_buildSelfParam(_1ad20b5e2_parser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline void _1ad210dbb_paramTypeBegin(_1ad20b5e2_parser*, jule::Ptr<_1ac6d8dde_ParamDecl>*, jule::I64*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline void _1ad21122e_buildParamType(jule::Ptr<_1ad20b5e2_parser>, jule::Ptr<_1ac6d8dde_ParamDecl>*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline void _1ad211592_buildParamBody(jule::Ptr<_1ad20b5e2_parser>, jule::Ptr<_1ac6d8dde_ParamDecl>*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline jule::Ptr<_1ac6d8dde_ParamDecl> _1ad2118d3_buildParam(jule::Ptr<_1ad20b5e2_parser>, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline void _1ad211b8b_checkParams(_1ad20b5e2_parser*, jule::Slice<jule::Ptr<_1ac6d8dde_ParamDecl>>*);
inline jule::Slice<jule::Ptr<_1ac6d8dde_ParamDecl>> _1ad212087_buildParams(jule::Ptr<_1ad20b5e2_parser>, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*, jule::Bool);
inline __jule_tuple_x_1ac6cb574_RetTypeDecl__jule_tuple_bool _1ad212483_buildMultiRetType(jule::Ptr<_1ad20b5e2_parser>, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*, jule::I64*);
inline __jule_tuple_x_1ac6cb574_RetTypeDecl__jule_tuple_bool _1ad21287e_buildRetType(jule::Ptr<_1ad20b5e2_parser>, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*, jule::I64*);
inline jule::Ptr<_1ac6da341_FnDecl> _1ad212d35_buildFnPrototype(jule::Ptr<_1ad20b5e2_parser>, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_1ac6da341_FnDecl> _1ad2132db_buildFn(jule::Ptr<_1ad20b5e2_parser>, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _1ad21362c_getUseDeclSelectors(_1ad20b5e2_parser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline void _1ad213990_buildBindUseDecl(_1ad20b5e2_parser*, jule::Ptr<_1ac6e1787_UseDecl>*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Str _1ad213cd1_useDeclTokstoa(_1ad20b5e2_parser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline void _1ad214144_buildStdUseDecl(_1ad20b5e2_parser*, jule::Ptr<_1ac6e1787_UseDecl>*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline void _1ad2144a7_buildIdentUseDecl(_1ad20b5e2_parser*, jule::Ptr<_1ac6e1787_UseDecl>*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline void _1ad21481a_parseUseDecl(_1ad20b5e2_parser*, jule::Ptr<_1ac6e1787_UseDecl>*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline jule::Ptr<_1ac6e1787_UseDecl> _1ad214c16_buildUseDecl(_1ad20b5e2_parser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>, jule::Bool);
inline jule::Ptr<_1ac6c8681_TypeDecl> _1ad215112_buildTypeEnumItemKind(jule::Ptr<_1ad20b5e2_parser>, jule::I64*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Slice<jule::Ptr<_1ac6e3129_TypeEnumItemDecl>> _1ad215453_buildTypeEnumItems(jule::Ptr<_1ad20b5e2_parser>, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Ptr<_1ac6e3789_TypeEnumDecl> _1ad215794_buildTypeEnumDecl(jule::Ptr<_1ad20b5e2_parser>, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Ptr<_1ac6cc9b5_Expr> _1ad215b90_buildEnumItemExpr(jule::Ptr<_1ad20b5e2_parser>, jule::I64*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Slice<jule::Ptr<_1ac6e1c3d_EnumItemDecl>> _1ad215ed1_buildEnumItems(jule::Ptr<_1ad20b5e2_parser>, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Ptr<_1ac6e27ee_EnumDecl> _1ad216322_buildEnumDecl(jule::Ptr<_1ad20b5e2_parser>, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Any _1ad216663_buildNodeEnumDecl(jule::Ptr<_1ad20b5e2_parser>, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Ptr<_1ac6e3a53_FieldDecl> _1ad2169a4_buildField(jule::Ptr<_1ad20b5e2_parser>, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline jule::Slice<jule::Ptr<_1ac6e3a53_FieldDecl>> _1ad216ce5_buildStructDeclFields(jule::Ptr<_1ad20b5e2_parser>, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline jule::Ptr<_1ac6e4449_StructDecl> _1ad217136_buildStructDecl(jule::Ptr<_1ad20b5e2_parser>, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline void _1ad2173de_checkMethodReceiver(_1ad20b5e2_parser*, jule::Ptr<_1ac6da341_FnDecl>*);
inline void _1ad217752_buildTraitBody(jule::Ptr<_1ad20b5e2_parser>, jule::Ptr<_1ac6e4b86_TraitDecl>*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline jule::Ptr<_1ac6e4b86_TraitDecl> _1ad217a93_buildTraitDecl(jule::Ptr<_1ad20b5e2_parser>, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Ptr<_1ac6da341_FnDecl> _1ad217dd4_buildBindFn(jule::Ptr<_1ad20b5e2_parser>, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline jule::Ptr<_1ac6db4eb_VarDecl> _1ad218225_buildBindVar(jule::Ptr<_1ad20b5e2_parser>, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline jule::Ptr<_1ac6e4449_StructDecl> _1ad218566_buildBindStruct(jule::Ptr<_1ad20b5e2_parser>, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline jule::Ptr<_1ac6e019d_TypeAliasDecl> _1ad2188a7_buildBindTypeAlias(jule::Ptr<_1ad20b5e2_parser>, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline jule::Ptr<_1ac6e1787_UseDecl> _1ad218be8_buildBindUse(jule::Ptr<_1ad20b5e2_parser>, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline jule::Any _1ad219039_buildBind(jule::Ptr<_1ad20b5e2_parser>, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Ptr<_1ac6da341_FnDecl> _1ad21937a_getMethod(jule::Ptr<_1ad20b5e2_parser>, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline void _1ad2196dd_parseImplBody(jule::Ptr<_1ad20b5e2_parser>, jule::Ptr<_1ac6e52e6_Impl>*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Ptr<_1ac6e52e6_Impl> _1ad219a2e_buildImpl(jule::Ptr<_1ad20b5e2_parser>, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline jule::Any _1ad219d70_buildNodeData(jule::Ptr<_1ad20b5e2_parser>, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline void _1ad21a128_applyFnMeta(_1ad20b5e2_parser*, jule::Ptr<_1ac6da341_FnDecl>*);
inline void _1ad21a3d1_applyMeta(_1ad20b5e2_parser*, _1ac6c7680_Node*);
inline void _1ad21a689_pushUseDecl(jule::Ptr<_1ad20b5e2_parser>, jule::Ptr<_1ac6e1787_UseDecl>*);
inline jule::Bool _1ad21a9ca_pushMetaNodes(jule::Ptr<_1ad20b5e2_parser>, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline _1ac6c7680_Node _1ad21ad1b_parseNode(jule::Ptr<_1ad20b5e2_parser>, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline void _1ad21b0c4_appendNode(jule::Ptr<_1ad20b5e2_parser>, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline void _1ad21b59c_removeRange(_1ad20b5e2_parser*, jule::I64, jule::U64, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*, jule::Slice<jule::I64>*);
inline void _1ad21b9ba_pushWrongOrderCloseErr(_1ad20b5e2_parser*, jule::Ptr<_1ac6b2e62_Token>*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*, jule::Slice<jule::I64>*);
inline void _1ad21be93_pushRangeClose(_1ad20b5e2_parser*, jule::Ptr<_1ac6b2e62_Token>, jule::U64, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*, jule::Slice<jule::I64>*);
inline void _1ad21c24b_checkRanges(_1ad20b5e2_parser*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline void _1ad21c504_parse(jule::Ptr<_1ad20b5e2_parser>, jule::Ptr<_1ac6b872b_File>*);
inline void _1ad21dd63_pushErr(_1ad21d7be_typeBuilder*, jule::Ptr<_1ac6b2e62_Token>, jule::Str);
inline void _1ad21e1c6_pushSuggestion(_1ad21d7be_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1ac6c8681_TypeDecl> _1ad21e45c_buildNamespace(_1ad21d7be_typeBuilder*);
inline jule::Slice<jule::Ptr<_1ac6c8681_TypeDecl>> _1ad21e6e3_buildGenerics(_1ad21d7be_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>> _1ad21e979_identGenerics(_1ad21d7be_typeBuilder*);
inline jule::Ptr<_1ac6c8681_TypeDecl> _1ad21ec10_buildIdent(_1ad21d7be_typeBuilder*);
inline jule::Ptr<_1ac6c8681_TypeDecl> _1ad21ee96_buildCppLink(_1ad21d7be_typeBuilder*);
inline jule::Ptr<_1ac6c8681_TypeDecl> _1ad22022c_buildFn(_1ad21d7be_typeBuilder*);
inline jule::Ptr<_1ac6c8681_TypeDecl> _1ad2204b3_buildPtr(_1ad21d7be_typeBuilder*);
inline jule::Ptr<_1ac6c8681_TypeDecl> _1ad220749_buildSptr(_1ad21d7be_typeBuilder*);
inline jule::Ptr<_1ac6c8681_TypeDecl> _1ad2209d0_buildSlc(_1ad21d7be_typeBuilder*);
inline jule::Ptr<_1ac6c8681_TypeDecl> _1ad220c66_buildArr(_1ad21d7be_typeBuilder*);
inline jule::Ptr<_1ac6c8681_TypeDecl> _1ad220eec_buildMap(_1ad21d7be_typeBuilder*);
inline jule::Ptr<_1ac6c8681_TypeDecl> _1ad221283_buildEnumerable(_1ad21d7be_typeBuilder*);
inline jule::Ptr<_1ac6c8681_TypeDecl> _1ad221519_step(_1ad21d7be_typeBuilder*);
inline __jule_tuple_x_1ac6c8681_TypeDecl__jule_tuple_bool _1ad2217a0_build(_1ad21d7be_typeBuilder*);
inline void _1ac9ea673_pushErr(_1ac9ea123_directiveEval*, jule::Ptr<_1ac6b2e62_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>> _1ac9eaa6e_splitOperans(_1ac9ea123_directiveEval*, jule::U64, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Bool _1ac9eadb0_evalDirectiveIdent(_1ac9ea123_directiveEval*, jule::Str);
inline jule::Bool _1ac9eb201_evalDirectivePart(_1ac9ea123_directiveEval*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline jule::Bool _1ac9eb487_eval(_1ac9ea123_directiveEval*);
inline jule::Ptr<_1ad222905_JuleImporter> static__1ad222d01_New(_1ac9e8b49_CompileInfo);
inline jule::Slice<jule::Ptr<_1ac77790b_ImportInfo>> _1ad223087_AllPackages(_1ad222905_JuleImporter*);
inline void _1ad2234c7_SetModPath(_1ad222905_JuleImporter*, jule::Str);
inline jule::Str _1ad22375d_GetModPath(_1ad222905_JuleImporter*);
inline jule::Str _1ad223a9e_ModById(_1ad222905_JuleImporter*, jule::I64);
inline jule::Ptr<_1ac77790b_ImportInfo> _1ad223de0_GetImport(_1ad222905_JuleImporter*, jule::Str);
inline __jule_tuple_sx_1ac6c67a0_Ast__jule_tuple_s_1a756d63b_Log _1ad2242db_ImportPackage(_1ad222905_JuleImporter*, jule::Str, jule::Bool);
inline void _1ad224594_Imported(_1ad222905_JuleImporter*, jule::Ptr<_1ac77790b_ImportInfo>);
inline __jule_tuple_bool__jule_tuple_s_1a756d63b_Log _1ad2249c3_isPassBuildDirectives(_1ad222905_JuleImporter*, jule::Ptr<_1ac6c67a0_Ast>*);
inline jule::Bool _1bd7e54d4_isCommonOrdered(jule::Slice<jule::Ptr<_1ac6ee377_Struct>>, jule::Ptr<_1ac6ee377_Struct>);
inline jule::Bool _1bd7ea473_isCommonOrdered(jule::Slice<jule::Ptr<_1ac7bb015_Var>>, jule::Ptr<_1ac7bb015_Var>);
inline void _1bd7e1b40_orderCommon(jule::Slice<jule::Ptr<_1ac6ee377_Struct>>*);
inline void _1bd7e5d75_orderCommon(jule::Slice<jule::Ptr<_1ac7bb015_Var>>*);
inline void static__1ad228774_orderStructures(jule::Slice<jule::Ptr<_1ac6ee377_Struct>>*);
inline void static__1ad2289a5_orderVars(jule::Slice<jule::Ptr<_1ac7bb015_Var>>*);
inline void _1ad3b31c2_optimizeChild(jule::Ptr<_1ad3b2c1b_scopeDeadCode>, jule::Ptr<_1ac756126_Scope>*);
inline void _1ad3b347a_optimizeBodyChildExceptional(jule::Ptr<_1ad3b2c1b_scopeDeadCode>, jule::Ptr<_1ac756126_Scope>*);
inline void _1ad3b3733_optimizeBodyChild(jule::Ptr<_1ad3b2c1b_scopeDeadCode>, jule::Ptr<_1ac756126_Scope>*);
inline void _1ad3b39db_optimizeExprModel(jule::Ptr<_1ad3b2c1b_scopeDeadCode>, jule::Any*);
inline void _1ad3b3bd9_eliminateFollowed(_1ad3b2c1b_scopeDeadCode*);
inline void _1ad3b3e92_pushGoto(jule::Ptr<_1ad3b2c1b_scopeDeadCode>, jule::Ptr<_1ac758d93_GotoSt>);
inline void _1ad3b424a_pushLabel(jule::Ptr<_1ad3b2c1b_scopeDeadCode>, jule::Ptr<_1ac7589b9_Label>);
inline void _1ad3b4503_optimizeRangeIter(jule::Ptr<_1ad3b2c1b_scopeDeadCode>, jule::Ptr<_1ac757e5d_RangeIter>);
inline void _1ad3b47ab_optimizeWhileIter(jule::Ptr<_1ad3b2c1b_scopeDeadCode>, jule::Ptr<_1ac757512_WhileIter>);
inline void _1ad3b4a64_optimizeInfIter(jule::Ptr<_1ad3b2c1b_scopeDeadCode>, jule::Ptr<_1ac75705b_InfIter>);
inline void _1ad3b4d1c_optimizeConditional(jule::Ptr<_1ad3b2c1b_scopeDeadCode>, jule::Ptr<_1ac756c5e_Conditional>);
inline void _1ad3b50c5_optimizeMatch(jule::Ptr<_1ad3b2c1b_scopeDeadCode>, jule::Ptr<_1ac75a25c_Match>);
inline void _1ad3b537d_optimizeAssign(jule::Ptr<_1ad3b2c1b_scopeDeadCode>, jule::Ptr<_1ac759723_Assign>);
inline void _1ad3b5636_optimizeMultiAssign(jule::Ptr<_1ad3b2c1b_scopeDeadCode>, jule::Ptr<_1ac759aec_MultiAssign>);
inline void _1ad3b58de_optimizeStmt(jule::Ptr<_1ad3b2c1b_scopeDeadCode>, jule::Any);
inline void _1ad3b5adc_optimizeStmts(jule::Ptr<_1ad3b2c1b_scopeDeadCode>);
inline _1ad3b6e73_exprDeadCode static__1ad3b75b1_new(jule::Ptr<_1ad3b2c1b_scopeDeadCode>*);
inline void _1ad3b7869_binary(_1ad3b6e73_exprDeadCode*, jule::Ptr<_1ac706505_BinaryExprModel>);
inline void _1ad3b7b22_unary(_1ad3b6e73_exprDeadCode*, jule::Ptr<_1ac7068ce_UnaryExprModel>);
inline void _1ad3b7dca_structureLit(_1ad3b6e73_exprDeadCode*, jule::Ptr<_1ac7072a3_StructLitExprModel>);
inline void _1ad3b8183_allocStructure(_1ad3b6e73_exprDeadCode*, jule::Ptr<_1ac7075a0_AllocStructLitExprModel>);
inline void _1ad3b843b_casting(_1ad3b6e73_exprDeadCode*, jule::Ptr<_1ac707b33_CastingExprModel>);
inline void _1ad3b86e4_args(_1ad3b6e73_exprDeadCode*, jule::Slice<jule::Any>*);
inline void _1ad3b899c_funcCall(_1ad3b6e73_exprDeadCode*, jule::Ptr<_1ac7084d5_FnCallExprModel>);
inline void _1ad3b8c55_slice(_1ad3b6e73_exprDeadCode*, jule::Ptr<_1ac7088ae_SliceExprModel>);
inline void _1ad3b900d_array(_1ad3b6e73_exprDeadCode*, jule::Ptr<_1ac70b906_ArrayExprModel>);
inline void _1ad3b92b6_indexing(_1ad3b6e73_exprDeadCode*, jule::Ptr<_1ac708d65_IndexingExprModel>);
inline void _1ad3b956e_anonFunc(_1ad3b6e73_exprDeadCode*, jule::Ptr<_1ac70923e_AnonFnExprModel>);
inline void _1ad3b9827_mapExpr(_1ad3b6e73_exprDeadCode*, jule::Ptr<_1ac709abe_MapExprModel>);
inline void _1ad3b9ad0_slicing(_1ad3b6e73_exprDeadCode*, jule::Ptr<_1ac70a152_SlicingExprModel>);
inline void _1ad3b9d88_traitSub(_1ad3b6e73_exprDeadCode*, jule::Ptr<_1ac70a6d5_TraitSubIdentExprModel>);
inline void _1ad3ba141_structureSub(_1ad3b6e73_exprDeadCode*, jule::Ptr<_1ac70b076_StructSubIdentExprModel>);
inline void _1ad3ba3e9_tuple(_1ad3b6e73_exprDeadCode*, jule::Ptr<_1ac70bc03_TupleExprModel>);
inline void _1ad3ba6a2_newCall(_1ad3b6e73_exprDeadCode*, jule::Ptr<_1ac70c880_BuiltinNewCallExprModel>);
inline void _1ad3ba95a_outCall(_1ad3b6e73_exprDeadCode*, jule::Ptr<_1ac70c0cc_BuiltinOutCallExprModel>);
inline void _1ad3bac13_outlnCall(_1ad3b6e73_exprDeadCode*, jule::Ptr<_1ac70c4a6_BuiltinOutlnCallExprModel>);
inline void _1ad3baebb_panicCall(_1ad3b6e73_exprDeadCode*, jule::Ptr<_1ac70cc59_BuiltinPanicCallExprModel>);
inline void _1ad3bb274_assertCall(_1ad3b6e73_exprDeadCode*, jule::Ptr<_1ac70d210_BuiltinAssertCallExprModel>);
inline void _1ad3bb52c_errorCall(_1ad3b6e73_exprDeadCode*, jule::Ptr<_1ac70ed16_BuiltinErrorCallExprModel>);
inline void _1ad3bb7d5_makeCall(_1ad3b6e73_exprDeadCode*, jule::Ptr<_1ac70d6b6_BuiltinMakeCallExprModel>);
inline void _1ad3bba8d_appendCall(_1ad3b6e73_exprDeadCode*, jule::Ptr<_1ac70da90_BuiltinAppendCallExprModel>);
inline void _1ad3bbd46_lenCall(_1ad3b6e73_exprDeadCode*, jule::Ptr<_1ac70dd8c_BuiltinLenCallExprModel>);
inline void _1ad3bc0ee_capCall(_1ad3b6e73_exprDeadCode*, jule::Ptr<_1ac70e189_BuiltinCapCallExprModel>);
inline void _1ad3bc3a7_deleteCall(_1ad3b6e73_exprDeadCode*, jule::Ptr<_1ac70e563_BuiltinDeleteCallExprModel>);
inline void _1ad3bc660_sizeof(_1ad3b6e73_exprDeadCode*, jule::Ptr<_1ac70a8c2_SizeofExprModel>);
inline void _1ad3bc918_alignof(_1ad3b6e73_exprDeadCode*, jule::Ptr<_1ac710542_AlignofExprModel>);
inline void _1ad3bcbc1_integratedToStr(_1ad3b6e73_exprDeadCode*, jule::Ptr<_1ac710b3b_IntegratedToStrExprModel>);
inline void _1ad3bce79_free(_1ad3b6e73_exprDeadCode*, jule::Ptr<_1ac711312_FreeExprModel>);
inline void _1ad3bd232_backendEmit(_1ad3b6e73_exprDeadCode*, jule::Ptr<_1ac711015_BackendEmitExprModel>);
inline void _1ad3bd4da_optimize(_1ad3b6e73_exprDeadCode*, jule::Any*);
inline jule::Ptr<_1ac95183d_scopeOptimizer> static__1ac951d7c_new(jule::Ptr<_1ac756126_Scope>);
inline void _1ac952135_setCurrentStmt(_1ac95183d_scopeOptimizer*, jule::Any);
inline void _1ac952333_removeCurrent(_1ac95183d_scopeOptimizer*);
inline void _1ac9525db_optimizeData(_1ac95183d_scopeOptimizer*, jule::Ptr<_1ac8243ae_Data>);
inline void _1ac952894_optimizeVar(_1ac95183d_scopeOptimizer*, jule::Ptr<_1ac7bb015_Var>);
inline void _1ac952b4c_optimizeConditional(_1ac95183d_scopeOptimizer*, jule::Ptr<_1ac756c5e_Conditional>);
inline void _1ac95306a_buildDefaultConstantTrueCase(_1ac95183d_scopeOptimizer*, jule::Ptr<_1ac75ad95_Case>, jule::I64*, jule::Ptr<_1ac75a25c_Match>*);
inline void _1ac953323_optimizeMatch(_1ac95183d_scopeOptimizer*, jule::Ptr<_1ac75a25c_Match>);
inline void _1ac9535cb_optimizeRangeIter(_1ac95183d_scopeOptimizer*, jule::Ptr<_1ac757e5d_RangeIter>);
inline void _1ac953884_optimizeWhileIter(_1ac95183d_scopeOptimizer*, jule::Ptr<_1ac757512_WhileIter>);
inline jule::Bool _1ac953bc5_substr(_1ac95183d_scopeOptimizer*, jule::Ptr<_1ac759723_Assign>);
inline jule::Bool _1ac954016_strAssign(_1ac95183d_scopeOptimizer*, jule::Ptr<_1ac759723_Assign>);
inline jule::Bool _1ac954357_sliceAssign(_1ac95183d_scopeOptimizer*, jule::Ptr<_1ac759723_Assign>);
inline void _1ac954610_optimizeAssign(_1ac95183d_scopeOptimizer*, jule::Ptr<_1ac759723_Assign>);
inline jule::Bool _1ac954951_tryOptimizeSwap(_1ac95183d_scopeOptimizer*, jule::Ptr<_1ac759aec_MultiAssign>*);
inline void _1ac954c09_optimizeMultiAssign(_1ac95183d_scopeOptimizer*, jule::Ptr<_1ac759aec_MultiAssign>);
inline void _1ac954eb2_optimizeRet(_1ac95183d_scopeOptimizer*, jule::Ptr<_1ac75b824_RetSt>);
inline void _1ac95526a_optimizeStmt(_1ac95183d_scopeOptimizer*, jule::Any);
inline void _1ac955523_optimizeChild(_1ac95183d_scopeOptimizer*, jule::Ptr<_1ac756126_Scope>);
inline void _1ac955721_optimize(_1ac95183d_scopeOptimizer*);
inline void static__1ac9580b4_optimize(jule::Any*);
inline jule::Bool _1ac958405_selfCmpCond(_1ac9579cb_exprOptimizer*, jule::Ptr<_1ac706505_BinaryExprModel>*);
inline jule::Bool _1ac958746_boolCond(_1ac9579cb_exprOptimizer*, jule::Ptr<_1ac706505_BinaryExprModel>*);
inline jule::Bool _1ac958a87_strCond(_1ac9579cb_exprOptimizer*, jule::Ptr<_1ac706505_BinaryExprModel>);
inline jule::Bool _1ac95903d_tryNeutralElement1(_1ac9579cb_exprOptimizer*, jule::Ptr<_1ac706505_BinaryExprModel>*, jule::Ptr<_1a6cde8d5_Const>, jule::Ptr<_1ac70600a_OperandExprModel>*);
inline jule::Bool _1ac95937e_tryNeutralElement(_1ac9579cb_exprOptimizer*, jule::Ptr<_1ac706505_BinaryExprModel>*);
inline void _1ac959637_binary(_1ac9579cb_exprOptimizer*, jule::Ptr<_1ac706505_BinaryExprModel>);
inline void _1ac9598e0_unary(_1ac9579cb_exprOptimizer*, jule::Ptr<_1ac7068ce_UnaryExprModel>);
inline void _1ac959b98_structureLit(_1ac9579cb_exprOptimizer*, jule::Ptr<_1ac7072a3_StructLitExprModel>);
inline void _1ac959e51_allocStructure(_1ac9579cb_exprOptimizer*, jule::Ptr<_1ac7075a0_AllocStructLitExprModel>);
inline void _1ac95a209_casting(_1ac9579cb_exprOptimizer*, jule::Ptr<_1ac707b33_CastingExprModel>);
inline void _1ac95a4b2_args(_1ac9579cb_exprOptimizer*, jule::Slice<jule::Any>*);
inline void _1ac95a76a_scope(_1ac9579cb_exprOptimizer*, jule::Ptr<_1ac756126_Scope>*);
inline void _1ac95aa23_funcCall(_1ac9579cb_exprOptimizer*, jule::Ptr<_1ac7084d5_FnCallExprModel>);
inline void _1ac95accb_slice(_1ac9579cb_exprOptimizer*, jule::Ptr<_1ac7088ae_SliceExprModel>);
inline void _1ac95b084_array(_1ac9579cb_exprOptimizer*, jule::Ptr<_1ac70b906_ArrayExprModel>);
inline void _1ac95b33c_indexing(_1ac9579cb_exprOptimizer*, jule::Ptr<_1ac708d65_IndexingExprModel>);
inline void _1ac95b5e5_anonFunc(_1ac9579cb_exprOptimizer*, jule::Ptr<_1ac70923e_AnonFnExprModel>);
inline void _1ac95b89d_mapExpr(_1ac9579cb_exprOptimizer*, jule::Ptr<_1ac709abe_MapExprModel>);
inline void _1ac95bb56_slicing(_1ac9579cb_exprOptimizer*, jule::Ptr<_1ac70a152_SlicingExprModel>);
inline void _1ac95be0e_traitSub(_1ac9579cb_exprOptimizer*, jule::Ptr<_1ac70a6d5_TraitSubIdentExprModel>);
inline void _1ac95c1b7_structureSub(_1ac9579cb_exprOptimizer*, jule::Ptr<_1ac70b076_StructSubIdentExprModel>);
inline void _1ac95c470_tuple(_1ac9579cb_exprOptimizer*, jule::Ptr<_1ac70bc03_TupleExprModel>);
inline void _1ac95c728_newCall(_1ac9579cb_exprOptimizer*, jule::Ptr<_1ac70c880_BuiltinNewCallExprModel>);
inline void _1ac95c9d1_outCall(_1ac9579cb_exprOptimizer*, jule::Ptr<_1ac70c0cc_BuiltinOutCallExprModel>);
inline void _1ac95cc89_outlnCall(_1ac9579cb_exprOptimizer*, jule::Ptr<_1ac70c4a6_BuiltinOutlnCallExprModel>);
inline void _1ac95d042_panicCall(_1ac9579cb_exprOptimizer*, jule::Ptr<_1ac70cc59_BuiltinPanicCallExprModel>);
inline void _1ac95d2ea_assertCall(_1ac9579cb_exprOptimizer*, jule::Ptr<_1ac70d210_BuiltinAssertCallExprModel>);
inline void _1ac95d5a3_errorCall(_1ac9579cb_exprOptimizer*, jule::Ptr<_1ac70ed16_BuiltinErrorCallExprModel>);
inline void _1ac95d85b_makeCall(_1ac9579cb_exprOptimizer*, jule::Ptr<_1ac70d6b6_BuiltinMakeCallExprModel>);
inline void _1ac95db14_appendCall(_1ac9579cb_exprOptimizer*, jule::Ptr<_1ac70da90_BuiltinAppendCallExprModel>);
inline void _1ac95ddbc_lenCall(_1ac9579cb_exprOptimizer*, jule::Ptr<_1ac70dd8c_BuiltinLenCallExprModel>);
inline void _1ac95e175_capCall(_1ac9579cb_exprOptimizer*, jule::Ptr<_1ac70e189_BuiltinCapCallExprModel>);
inline void _1ac95e42d_deleteCall(_1ac9579cb_exprOptimizer*, jule::Ptr<_1ac70e563_BuiltinDeleteCallExprModel>);
inline void _1ac95e6d6_sizeof(_1ac9579cb_exprOptimizer*, jule::Ptr<_1ac70a8c2_SizeofExprModel>);
inline void _1ac95e98e_alignof(_1ac9579cb_exprOptimizer*, jule::Ptr<_1ac710542_AlignofExprModel>);
inline void _1ac95ec47_integratedToStr(_1ac9579cb_exprOptimizer*, jule::Ptr<_1ac710b3b_IntegratedToStrExprModel>);
inline void _1ac960000_free(_1ac9579cb_exprOptimizer*, jule::Ptr<_1ac711312_FreeExprModel>);
inline void _1ac9602a8_backendEmit(_1ac9579cb_exprOptimizer*, jule::Ptr<_1ac711015_BackendEmitExprModel>);
inline void _1ac9604a6_do(_1ac9579cb_exprOptimizer*);
inline jule::Ptr<_1ad3be0ac_Optimizer> static__1ad3be530_New(jule::Ptr<_1ad2253b9_IR>*);
inline void _1ad3be7d8_optimizeGlobal(_1ad3be0ac_Optimizer*, jule::Ptr<_1ac7bb015_Var>*);
inline void _1ad3bea91_optimizeFunction(_1ad3be0ac_Optimizer*, jule::Ptr<_1ac71426b_Fn>*);
inline void _1ad3bed49_optimizeStruct(_1ad3be0ac_Optimizer*, jule::Ptr<_1ac6ee377_Struct>*);
inline void _1ad3c0102_optimizeGlobals(_1ad3be0ac_Optimizer*, jule::Ptr<_1ac77a832_Package>*);
inline void _1ad3c03aa_optimizeFunctions(_1ad3be0ac_Optimizer*, jule::Ptr<_1ac77a832_Package>*);
inline void _1ad3c0663_optimizeStructs(_1ad3be0ac_Optimizer*, jule::Ptr<_1ac77a832_Package>*);
inline void _1ad3c091b_optimizePackage(_1ad3be0ac_Optimizer*, jule::Ptr<_1ac77a832_Package>*);
inline void _1ad3c0b19_Optimize(_1ad3be0ac_Optimizer*);
inline void static__1ad3c1411_Reset(void);
inline void static__1ad3e5be9_Print(jule::Str, jule::Str);
inline void static__1ad3e8713_LogFlat(_1a756d63b_Log*);
inline void static__1ad3e8944_LogError(_1a756d63b_Log*);
inline void static__1ad3e8b75_Log(_1a756d63b_Log*);
inline void static__1ad3e8da6_PrintLogs(jule::Slice<_1a756d63b_Log>*);
inline _1ba9d00a6_Time static__1ba9d045d_Unix(jule::U64);
inline _1ba9d00a6_Time static__1ba9d066c_Now(void);
inline _1ba9ce8d0_AbsTime _1ba9d1d55_Abs(_1ba9d00a6_Time*);
inline jule::Ptr<_1ad826c0c_scopeCoder> static__1ad827328_new(jule::Ptr<_1ba9d9555_ObjectCoder>*);
inline void _1bba7ad65_iterHead(jule::Ptr<_1ad826c0c_scopeCoder>, jule::Ptr<_1ac757e5d_RangeIter>*, jule::Bool*, jule::Str);
inline void _1ad8279ee_rangeIndexIter(jule::Ptr<_1ad826c0c_scopeCoder>, jule::Ptr<_1ac757e5d_RangeIter>*);
inline void _1ad827ca7_rangeHashmapIter(jule::Ptr<_1ad826c0c_scopeCoder>, jule::Ptr<_1ac757e5d_RangeIter>*);
inline void _1ad828060_ifCase(jule::Ptr<_1ad826c0c_scopeCoder>, jule::Ptr<_1ac756544_If>);
inline void _1ad828318_conditional(jule::Ptr<_1ad826c0c_scopeCoder>, jule::Ptr<_1ac756c5e_Conditional>);
inline void _1ad8285c1_infIter(jule::Ptr<_1ad826c0c_scopeCoder>, jule::Ptr<_1ac75705b_InfIter>);
inline void _1ad828879_whileIter(jule::Ptr<_1ad826c0c_scopeCoder>, jule::Ptr<_1ac757512_WhileIter>);
inline void _1ad828b32_rangeIter(jule::Ptr<_1ad826c0c_scopeCoder>, jule::Ptr<_1ac757e5d_RangeIter>);
inline void _1ad828dda_cont(jule::Ptr<_1ad826c0c_scopeCoder>, jule::Ptr<_1ac7582e3_ContSt>);
inline void _1ad829193_label(jule::Ptr<_1ad826c0c_scopeCoder>, jule::Ptr<_1ac7589b9_Label>);
inline void _1ad82944b_gotoSt(jule::Ptr<_1ad826c0c_scopeCoder>, jule::Ptr<_1ac758d93_GotoSt>);
inline void _1ad829704_postfix(jule::Ptr<_1ad826c0c_scopeCoder>, jule::Ptr<_1ac75926c_Postfix>);
inline void _1ad8299ac_assign(jule::Ptr<_1ad826c0c_scopeCoder>, jule::Ptr<_1ac759723_Assign>);
inline void _1ad829c65_mapLookupAssign(jule::Ptr<_1ad826c0c_scopeCoder>, jule::Ptr<_1ac759aec_MultiAssign>*);
inline void _1ad82a01d_multiAssignTup(jule::Ptr<_1ad826c0c_scopeCoder>, jule::Ptr<_1ac759aec_MultiAssign>*);
inline void _1ad82a2c6_multiAssignFn(jule::Ptr<_1ad826c0c_scopeCoder>, jule::Ptr<_1ac759aec_MultiAssign>*);
inline void _1ad82a57e_multiAssign(jule::Ptr<_1ad826c0c_scopeCoder>, jule::Ptr<_1ac759aec_MultiAssign>);
inline jule::Fn<void(void)> _1ad82a8c0_matchExpr(jule::Ptr<_1ad826c0c_scopeCoder>, jule::Ptr<_1ac75a25c_Match>);
inline void _1ad82ac33_case(jule::Ptr<_1ad826c0c_scopeCoder>, jule::Ptr<_1ac75a25c_Match>, jule::Ptr<_1ac75ad95_Case>);
inline void _1ad82aedb_matchSt(jule::Ptr<_1ad826c0c_scopeCoder>, jule::Ptr<_1ac75a25c_Match>);
inline void _1ad82b294_fallSt(jule::Ptr<_1ad826c0c_scopeCoder>, jule::Ptr<_1ac75b48e_FallSt>);
inline void _1ad82b54c_breakSt(jule::Ptr<_1ad826c0c_scopeCoder>, jule::Ptr<_1ac7586bc_BreakSt>);
inline void _1ad82b805_setResult(jule::Ptr<_1ad826c0c_scopeCoder>, jule::Ptr<_1ac75b824_RetSt>);
inline void _1ad82baad_retSt(jule::Ptr<_1ad826c0c_scopeCoder>, jule::Ptr<_1ac75b824_RetSt>);
inline void _1ad82bd66_var(jule::Ptr<_1ad826c0c_scopeCoder>, jule::Ptr<_1ac7bb015_Var>);
inline void _1ad82c11e_mutSlicing(jule::Ptr<_1ad826c0c_scopeCoder>, jule::Ptr<_1ac94e781_MutSlicingExprModel>);
inline void _1ad82c3c7_swap(jule::Ptr<_1ad826c0c_scopeCoder>, jule::Ptr<_1ac94d4a5_SwapExprModel>);
inline void _1ad82c680_st(jule::Ptr<_1ad826c0c_scopeCoder>, jule::Any);
inline void _1ad82c938_scopeStmts(jule::Ptr<_1ad826c0c_scopeCoder>, jule::Ptr<_1ac756126_Scope>*);
inline void _1ad82cbe1_scope(jule::Ptr<_1ad826c0c_scopeCoder>, jule::Ptr<_1ac756126_Scope>);
inline void _1ad82ce99_funcScope(jule::Ptr<_1ad826c0c_scopeCoder>, jule::Ptr<_1ac717170_FnIns>);
inline jule::Ptr<_1ad830d8c_exprCoder> static__1ad831255_new(jule::Ptr<_1ba9d9555_ObjectCoder>*);
inline void _1ad83150d_string(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1a6cde8d5_Const>*);
inline void _1ad8317b6_boolean(jule::Ptr<_1ad830d8c_exprCoder>, jule::Bool);
inline void _1ad8319b4_nilLit(jule::Ptr<_1ad830d8c_exprCoder>);
inline jule::Bool _1ad831d05_ftoaSpecialCases(jule::Ptr<_1ad830d8c_exprCoder>, jule::F64*);
inline void _1ad8320ad_float32(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1a6cde8d5_Const>*);
inline void _1ad832366_float64(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1a6cde8d5_Const>*);
inline void _1ad83261e_constant(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1a6cde8d5_Const>);
inline void _1ad832a3c_divByZeroBinary(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac6b2e62_Token>*, jule::Ptr<_1ac70600a_OperandExprModel>*, jule::Ptr<_1ac70600a_OperandExprModel>*);
inline void _1ad832ce5_unsafeBinary(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac706505_BinaryExprModel>);
inline void _1ad83309d_binary(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac706505_BinaryExprModel>);
inline void _1ad833356_var(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac7bb015_Var>);
inline void _1ad83360e_structureIns(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac702105_StructIns>);
inline void _1ad8338b7_unary(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac7068ce_UnaryExprModel>);
inline void _1ad833b70_structureLit(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac7072a3_StructLitExprModel>);
inline void _1ad833e28_allocStructure(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac7075a0_AllocStructLitExprModel>);
inline void _1ad8341d1_possibleRefExpr(jule::Ptr<_1ad830d8c_exprCoder>, jule::Any);
inline void _1ad8345ee_castTraitFromTrait(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac707b33_CastingExprModel>*, jule::Ptr<_1ac727548_Trait>, jule::Ptr<_1ac727548_Trait>);
inline void _1ad8348a7_casting(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac707b33_CastingExprModel>);
inline void _1ad834b60_models(jule::Ptr<_1ad830d8c_exprCoder>, jule::Slice<jule::Any>);
inline void _1ad834e18_args(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac7084d5_FnCallExprModel>*);
inline void _1ad8351c1_modelForCall(jule::Ptr<_1ad830d8c_exprCoder>, jule::Any);
inline void _1ad835479_pushCallInf(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac7084d5_FnCallExprModel>*);
inline jule::Bool _1ad8357ba_isWrapped(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac7084d5_FnCallExprModel>*);
inline void _1ad835a73_pureFuncCall(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac7084d5_FnCallExprModel>*);
inline void _1ad835d2b_coFuncCall(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac7084d5_FnCallExprModel>*);
inline void _1ad83618e_writeUseExpr(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac717170_FnIns>*, jule::Ptr<_1ac8243ae_Data>);
inline void _1ad836447_funcCall(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac7084d5_FnCallExprModel>);
inline void _1ad836700_slice(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac7088ae_SliceExprModel>);
inline void _1ad8369a8_indexing(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac708d65_IndexingExprModel>);
inline void _1ad836c61_unsafeIndexing(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac94ed7a_UnsafeIndexingExprModel>);
inline void _1ad837019_anonFunc(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac70923e_AnonFnExprModel>);
inline void _1ad8372c2_mapExpr(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac709abe_MapExprModel>);
inline void _1ad83757a_slicing(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac70a152_SlicingExprModel>);
inline void _1ad837833_traitSub(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac70a6d5_TraitSubIdentExprModel>);
inline void _1ad837adb_structureSub(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac70b076_StructSubIdentExprModel>);
inline void _1ad837d94_array(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac70b906_ArrayExprModel>);
inline void _1ad83814c_funcInsCommon(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac717170_FnIns>);
inline void _1ad838405_funcIns(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac717170_FnIns>);
inline void _1ad8386ad_tuple(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac70bc03_TupleExprModel>);
inline void _1ad838966_newCall(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac70c880_BuiltinNewCallExprModel>);
inline void _1ad838c1e_outCall(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac70c0cc_BuiltinOutCallExprModel>);
inline void _1ad838ec7_outlnCall(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac70c4a6_BuiltinOutlnCallExprModel>);
inline void _1ad839280_panicCall(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac70cc59_BuiltinPanicCallExprModel>);
inline void _1ad839538_assertCall(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac70d210_BuiltinAssertCallExprModel>);
inline void _1ad8397e1_errorCall(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac70ed16_BuiltinErrorCallExprModel>);
inline void _1ad839a99_copyCall(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac70e93c_BuiltinCopyCallExprModel>);
inline void _1ad839d52_lenCall(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac70dd8c_BuiltinLenCallExprModel>);
inline void _1ad83a10a_capCall(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac70e189_BuiltinCapCallExprModel>);
inline void _1ad83a3b3_deleteCall(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac70e563_BuiltinDeleteCallExprModel>);
inline void _1ad83a66b_makeCallSlice(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac70d6b6_BuiltinMakeCallExprModel>*);
inline void _1a90633c6_makeCallStr(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac70d6b6_BuiltinMakeCallExprModel>*);
inline void _1a9066044_makeCall(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac70d6b6_BuiltinMakeCallExprModel>);
inline void _1ad83a957_pushToSlice(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac9502a9_PushToSliceExprModel>);
inline void _1ad83ac10_appendToSlice(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac950683_AppendToSliceExprModel>);
inline void _1ad83aeb8_appendCall(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac70da90_BuiltinAppendCallExprModel>);
inline void _1ad83b271_sizeof(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac70a8c2_SizeofExprModel>);
inline void _1ad83b529_alignof(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac710542_AlignofExprModel>);
inline void _1ad83b7d2_runeLit(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac71083e_RuneExprModel>);
inline void _1ad83ba8a_structureStatic(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac70b52c_StructStaticIdentExprModel>);
inline void _1ad83bd43_integratedToStr(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac710b3b_IntegratedToStrExprModel>);
inline void _1ad83c0eb_backendEmit(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac711015_BackendEmitExprModel>);
inline void _1ad83c3a4_free(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac711312_FreeExprModel>);
inline void _1ad83c65c_strComp(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac94e1ed_StrCompExprModel>);
inline void _1ad83c915_emptyCompare(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac94d8c3_EmptyCompareExprModel>);
inline void _1ad83cbbd_model(jule::Ptr<_1ad830d8c_exprCoder>, jule::Any);
inline void _1ad83ce76_initExpr(jule::Ptr<_1ad830d8c_exprCoder>, jule::Ptr<_1ac859a32_TypeKind>);
inline jule::Ptr<_1adc5c593_TestCoder> static__1adc5c9d3_New(jule::Ptr<_1ba9d9555_ObjectCoder>*);
inline jule::Ptr<_1ac77790b_ImportInfo> _1adc5cc69_findTestingPackage(jule::Ptr<_1adc5c593_TestCoder>);
inline void _1adc5d022_appendTest(jule::Ptr<_1adc5c593_TestCoder>, jule::Ptr<_1ac717170_FnIns>);
inline void _1adc5d2ca_appendPackageTests(jule::Ptr<_1adc5c593_TestCoder>, jule::Ptr<_1ac77a832_Package>*);
inline jule::Bool _1adc5d561_readyTestingPackage(jule::Ptr<_1adc5c593_TestCoder>);
inline void _1adc5d75e_callTmReset(jule::Ptr<_1adc5c593_TestCoder>);
inline void _1adc5d95c_callTmFailed(jule::Ptr<_1adc5c593_TestCoder>);
inline void _1adc5db5a_callTmSkipped(jule::Ptr<_1adc5c593_TestCoder>);
inline void _1adc5dd58_Serialize(jule::Ptr<_1adc5c593_TestCoder>);
inline void static__1adc60981_writeIdentTo(_1c164cc40_StrBuilder*, jule::Str*);
inline void static__1adc60d27_toOut(_1c164cc40_StrBuilder*, jule::Str, jule::Uintptr);
inline void static__1adc61278_toLocal(_1c164cc40_StrBuilder*, jule::I64, jule::I64, jule::Str*);
inline void static__1adc61564_func(_1c164cc40_StrBuilder*, jule::Ptr<_1ac71426b_Fn>*);
inline void static__1adc61850_funcIns(_1c164cc40_StrBuilder*, jule::Ptr<_1ac717170_FnIns>*);
inline void static__1adc61b3b_traitDecl(_1c164cc40_StrBuilder*, jule::Ptr<_1ac727548_Trait>);
inline void static__1adc61e27_param(_1c164cc40_StrBuilder*, jule::Ptr<_1ac712797_Param>*);
inline void static__1adc62213_structure(_1c164cc40_StrBuilder*, jule::Ptr<_1ac6ee377_Struct>*);
inline void static__1adc624ee_structureIns(_1c164cc40_StrBuilder*, jule::Ptr<_1ac702105_StructIns>*);
inline void static__1adc627da_field(_1c164cc40_StrBuilder*, jule::Ptr<_1ac6eb484_Field>*);
inline void static__1adc62ac6_var(_1c164cc40_StrBuilder*, jule::Ptr<_1ac7bb015_Var>);
inline void static__1adc62db2_iterBegin(_1c164cc40_StrBuilder*, jule::Uintptr);
inline void static__1adc6319d_iterEnd(_1c164cc40_StrBuilder*, jule::Uintptr);
inline void static__1adc63489_iterNext(_1c164cc40_StrBuilder*, jule::Uintptr);
inline void static__1adc63775_label(_1c164cc40_StrBuilder*, jule::Uintptr);
inline void static__1adc63a61_matchEnd(_1c164cc40_StrBuilder*, jule::Uintptr);
inline void static__1adc63d4c_caseBegin(_1c164cc40_StrBuilder*, jule::Uintptr);
inline jule::Str _1ba9e9048_Str(_1ba9e8ba2_customType*);
inline jule::Bool _1ba9e9389_Equal(jule::Ptr<_1ba9e8ba2_customType>, jule::Ptr<_1ac859a32_TypeKind>);
inline jule::Ptr<_1ba9e97b8_typeCoder> static__1ba9e9d07_new(jule::Ptr<_1ba9d9555_ObjectCoder>*);
inline void _1ba9ea16a_toType(_1ba9e97b8_typeCoder*, _1c164cc40_StrBuilder*, jule::Str);
inline void _1ba9ea4cd_prim(_1ba9e97b8_typeCoder*, _1c164cc40_StrBuilder*, jule::Ptr<_1ac86260b_Prim>);
inline void _1ba9ea841_tuple(_1ba9e97b8_typeCoder*, _1c164cc40_StrBuilder*, jule::Ptr<_1ac8676ee_Tuple>);
inline void _1ba9eaba4_asSptr(_1ba9e97b8_typeCoder*, _1c164cc40_StrBuilder*, jule::Slice<jule::U8>);
inline void _1ba9eb017_sptr(_1ba9e97b8_typeCoder*, _1c164cc40_StrBuilder*, jule::Ptr<_1ac866137_Sptr>);
inline void _1ba9eb37a_ptr(_1ba9e97b8_typeCoder*, _1c164cc40_StrBuilder*, jule::Ptr<_1ac8698ee_Ptr>);
inline void _1ba9eb6dd_enumDecl(_1ba9e97b8_typeCoder*, _1c164cc40_StrBuilder*, jule::Ptr<_1ac729c54_Enum>);
inline void _1ba9eba51_typeEnumDecl(_1ba9e97b8_typeCoder*, _1c164cc40_StrBuilder*, jule::Ptr<_1ac72b45e_TypeEnum>);
inline void _1ba9ebdb4_asSlice(_1ba9e97b8_typeCoder*, _1c164cc40_StrBuilder*, jule::Ptr<_1ac859a32_TypeKind>);
inline void _1ba9ec227_slice(_1ba9e97b8_typeCoder*, _1c164cc40_StrBuilder*, jule::Ptr<_1ac866b0a_Slc>);
inline void _1ba9ec58a_mapType(_1ba9e97b8_typeCoder*, _1c164cc40_StrBuilder*, jule::Ptr<_1ac86829e_Map>);
inline void _1ba9ecc61_traitDecl(_1ba9e97b8_typeCoder*, _1c164cc40_StrBuilder*, jule::Ptr<_1ac727548_Trait>);
inline void _1ba9ed0c4_structure(_1ba9e97b8_typeCoder*, _1c164cc40_StrBuilder*, jule::Ptr<_1ac6ee377_Struct>);
inline void _1ba9ed437_structureIns(_1ba9e97b8_typeCoder*, _1c164cc40_StrBuilder*, jule::Ptr<_1ac702105_StructIns>);
inline void _1ba9ed79a_array(_1ba9e97b8_typeCoder*, _1c164cc40_StrBuilder*, jule::Ptr<_1ac868e2b_Arr>);
inline void _1ba9ede71_paramIns(_1ba9e97b8_typeCoder*, _1c164cc40_StrBuilder*, jule::Ptr<_1ac7161c4_ParamIns>*);
inline void _1ba9ee647_funcInsResult(_1ba9e97b8_typeCoder*, _1c164cc40_StrBuilder*, jule::Ptr<_1ac717170_FnIns>*);
inline void _1ba9ee9aa_anonFunc(_1ba9e97b8_typeCoder*, _1c164cc40_StrBuilder*, jule::Ptr<_1ac717170_FnIns>);
inline void _1ba9eed1d_func(_1ba9e97b8_typeCoder*, _1c164cc40_StrBuilder*, jule::Ptr<_1ac717170_FnIns>);
inline void _1baa00181_kind(_1ba9e97b8_typeCoder*, _1c164cc40_StrBuilder*, jule::Ptr<_1ac859a32_TypeKind>);
inline jule::Ptr<_1baa02b89_resultCoder> static__1baa03162_new(jule::Ptr<_1ba9e97b8_typeCoder>*);
inline void _1baa034c5_ptr(_1baa02b89_resultCoder*, _1c164cc40_StrBuilder*, jule::Ptr<_1ac8698ee_Ptr>);
inline void _1baa03838_sptr(_1baa02b89_resultCoder*, _1c164cc40_StrBuilder*, jule::Ptr<_1ac866137_Sptr>);
inline void _1baa03b9b_mapType(_1baa02b89_resultCoder*, _1c164cc40_StrBuilder*, jule::Ptr<_1ac86829e_Map>);
inline void _1baa0400e_slice(_1baa02b89_resultCoder*, _1c164cc40_StrBuilder*, jule::Ptr<_1ac866b0a_Slc>);
inline void _1baa04372_arr(_1baa02b89_resultCoder*, _1c164cc40_StrBuilder*, jule::Ptr<_1ac868e2b_Arr>);
inline void _1baa046d5_func(_1baa02b89_resultCoder*, _1c164cc40_StrBuilder*, jule::Ptr<_1ac717170_FnIns>);
inline void _1baa04a48_tup(_1baa02b89_resultCoder*, _1c164cc40_StrBuilder*, jule::Ptr<_1ac8676ee_Tuple>);
inline void _1baa04dab_codeMut(_1baa02b89_resultCoder*, _1c164cc40_StrBuilder*, jule::Ptr<_1ac859a32_TypeKind>*);
inline void _1baa0521e_codeMut1(_1baa02b89_resultCoder*, _1c164cc40_StrBuilder*, jule::Ptr<_1ac859a32_TypeKind>*);
inline jule::Slice<jule::U8> _1baa0552c_code(_1baa02b89_resultCoder*, jule::Ptr<_1ac859a32_TypeKind>*);
inline jule::Str _1bba9096d_Name(_1bba8e86d_Flag*);
inline jule::Str _1bba90ab1_What(_1bba8e86d_Flag*);
inline void _1bba91e47_Reset(_1bba8e86d_Flag*);
inline jule::I32 _1bba9208a_Short(_1bba8e86d_Flag*);
inline jule::Str _1bba96259_Name(_1bba96633_Flag*);
inline jule::Str _1bba9691e_What(_1bba96633_Flag*);
inline void _1bba96a62_Reset(_1bba96633_Flag*);
inline jule::I32 _1bba96ba5_Short(_1bba96633_Flag*);
inline jule::Str _1bba99955_Name(_1bba99d2e_Flag*);
inline jule::Str _1bba9a11a_What(_1bba99d2e_Flag*);
inline void _1bba9a25d_Reset(_1bba99d2e_Flag*);
inline jule::I32 _1bba9a3a1_Short(_1bba99d2e_Flag*);
inline jule::Str _1bba9d195_Name(_1bba9d56e_Flag*);
inline jule::Str _1bba9d85a_What(_1bba9d56e_Flag*);
inline void _1bba9d99d_Reset(_1bba9d56e_Flag*);
inline jule::I32 _1bba9dae1_Short(_1bba9d56e_Flag*);
inline jule::Str _1bbaa1891_Name(_1bbaa1c6a_Flag*);
inline jule::Str _1bbaa2056_What(_1bbaa1c6a_Flag*);
inline void _1bbaa2199_Reset(_1bbaa1c6a_Flag*);
inline jule::I32 _1bbaa22dc_Short(_1bbaa1c6a_Flag*);
inline jule::Ptr<_1baa6d793_FlagSet> static__1baa6da7e_New(void);
inline jule::Trait<_1baa6bbe2_CommonFlag> _1baa6e002_FindFlag(_1baa6d793_FlagSet*, jule::Str);
inline jule::Trait<_1baa6bbe2_CommonFlag> _1baa6e343_FindFlagShort(_1baa6d793_FlagSet*, jule::I32);
inline jule::Exceptional<jule::Slice<jule::Str>> _1baa6e91a_Parse(_1baa6d793_FlagSet*, jule::Slice<jule::Str>);
inline jule::Ptr<_1bbaa1c6a_Flag> _1acc1246c_addFlagCommon(_1baa6d793_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1bba9d56e_Flag> _1acc19298_addFlagCommon(_1baa6d793_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1acc1015c_AddVar(_1baa6d793_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1acc16ecc_AddVar(_1baa6d793_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
inline __jule_tuple_i64__jule_tuple_bool _1bbab4b90_parseInteger(_1baa71224_argParser*, jule::Str*, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>);
inline __jule_tuple_u64__jule_tuple_bool _1bbabc46c_parseInteger(_1baa71224_argParser*, jule::Str*, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>);
inline jule::Str _1baa71a3d_getData(_1baa71224_argParser*);
inline jule::VoidExceptional _1baa71cb3_processFlag(_1baa71224_argParser*, jule::Trait<_1baa6bbe2_CommonFlag>*);
inline jule::VoidExceptional _1baa7206b_singleDash(_1baa71224_argParser*, jule::Str*);
inline jule::VoidExceptional _1baa72324_doubleDash(_1baa71224_argParser*, jule::Str*);
inline jule::VoidExceptional _1baa72522_tryArg(_1baa71224_argParser*);
inline jule::VoidExceptional _1baa72720_parse(_1baa71224_argParser*);
inline jule::Ptr<_1ba9d9555_ObjectCoder> static__1ba9d9951_New(jule::Ptr<_1ad2253b9_IR>*, _1ba9d7a3c_SerializationInfo);
inline void _1ba9d9c09_write(jule::Ptr<_1ba9d9555_ObjectCoder>, jule::Str);
inline void _1ba9d9eb2_writeBytes(jule::Ptr<_1ba9d9555_ObjectCoder>, jule::Slice<jule::U8>);
inline void _1ba9da1b0_addIndent(jule::Ptr<_1ba9d9555_ObjectCoder>);
inline void _1ba9da3ad_doneIndent(jule::Ptr<_1ba9d9555_ObjectCoder>);
inline void _1ba9da5ab_indent(jule::Ptr<_1ba9d9555_ObjectCoder>);
inline jule::I64 _1ba9da8ec_findAnyType(jule::Ptr<_1ba9d9555_ObjectCoder>, jule::Ptr<_1ac859a32_TypeKind>*);
inline jule::I64 _1ba9dac3d_pushAnyType(jule::Ptr<_1ba9d9555_ObjectCoder>, jule::Ptr<_1ac859a32_TypeKind>);
inline void _1ba9daee6_pushResultIns(jule::Ptr<_1ba9d9555_ObjectCoder>, jule::Ptr<_1ac717170_FnIns>*);
inline void _1ba9db29e_pushResult(jule::Ptr<_1ba9d9555_ObjectCoder>, jule::Ptr<_1ac71426b_Fn>*);
inline jule::I64 _1ba9db69a_findTypeOffsetS(_1ba9d9555_ObjectCoder*, jule::Ptr<_1ac727548_Trait>, jule::Ptr<_1ac702105_StructIns>);
inline jule::I64 _1ba9dba96_findTypeOffset(_1ba9d9555_ObjectCoder*, jule::Ptr<_1ac727548_Trait>, jule::Ptr<_1ac859a32_TypeKind>);
inline void _1ba9dbe09_pushAndWriteMaskMapper(jule::Ptr<_1ba9d9555_ObjectCoder>, jule::Ptr<_1ac727548_Trait>, jule::Ptr<_1ac727548_Trait>);
inline void _1ba9dc1b2_locInfo(jule::Ptr<_1ba9d9555_ObjectCoder>, jule::Ptr<_1ac6b2e62_Token>*);
inline void _1ba9dc3b0_head(jule::Ptr<_1ba9d9555_ObjectCoder>);
inline void _1ba9dc5ad_links(jule::Ptr<_1ba9d9555_ObjectCoder>);
inline void _1ba9dc866_prepareStructure(_1ba9d9555_ObjectCoder*, jule::Ptr<_1ac6ee377_Struct>*);
inline void _1ba9dca64_prepareStructures(jule::Ptr<_1ba9d9555_ObjectCoder>);
inline void _1ba9dcd1c_iterPackages(jule::Ptr<_1ba9d9555_ObjectCoder>, jule::Fn<void(jule::Ptr<_1ac77a832_Package>*)>);
inline void _1ba9dd01a_buildTraitMap(jule::Ptr<_1ba9d9555_ObjectCoder>);
inline void _1ba9dd218_traitDecls(jule::Ptr<_1ba9d9555_ObjectCoder>);
inline void _1ba9dd4c1_structurePlainDecl(jule::Ptr<_1ba9d9555_ObjectCoder>, jule::Ptr<_1ac6ee377_Struct>*);
inline void _1ba9dd6be_structurePlainDecls(jule::Ptr<_1ba9d9555_ObjectCoder>);
inline void _1ba9dd977_fieldDecl(jule::Ptr<_1ba9d9555_ObjectCoder>, jule::Ptr<_1ac701555_FieldIns>*);
inline void _1ba9ddc30_structureDestructor(jule::Ptr<_1ba9d9555_ObjectCoder>, jule::Ptr<_1ac702105_StructIns>*);
inline void _1ba9de093_structureOperatorEq(jule::Ptr<_1ba9d9555_ObjectCoder>, jule::Slice<jule::U8>, jule::Ptr<_1ac702105_StructIns>*);
inline void _1ba9de406_structureOperatorNotEq(jule::Ptr<_1ba9d9555_ObjectCoder>, jule::Slice<jule::U8>, jule::Ptr<_1ac702105_StructIns>*);
inline void _1ba9de824_structureOperator(jule::Ptr<_1ba9d9555_ObjectCoder>, jule::Slice<jule::U8>, jule::Ptr<_1ac717170_FnIns>*, jule::Str);
inline void _1ba9deacc_structureOperators(jule::Ptr<_1ba9d9555_ObjectCoder>, jule::Ptr<_1ac702105_StructIns>*);
inline void _1ba9ded85_structureInsDecl(jule::Ptr<_1ba9d9555_ObjectCoder>, jule::Ptr<_1ac702105_StructIns>*);
inline void _1ba9e013d_structureDecl(jule::Ptr<_1ba9d9555_ObjectCoder>, jule::Ptr<_1ac6ee377_Struct>*);
inline void _1ba9e033b_structureDecls(jule::Ptr<_1ba9d9555_ObjectCoder>);
inline void _1ba9e0539_structureMethodDecls(jule::Ptr<_1ba9d9555_ObjectCoder>);
inline void _1ba9e07e2_paramsDecls(jule::Ptr<_1ba9d9555_ObjectCoder>, jule::Slice<jule::Ptr<_1ac7161c4_ParamIns>>*);
inline void _1ba9e0b55_funcHead(jule::Ptr<_1ba9d9555_ObjectCoder>, jule::Ptr<_1ac717170_FnIns>*, jule::Bool);
inline void _1ba9e0eb8_funcDeclIns(jule::Ptr<_1ba9d9555_ObjectCoder>, jule::Ptr<_1ac717170_FnIns>*, jule::Bool);
inline void _1ba9e132b_funcDecl(jule::Ptr<_1ba9d9555_ObjectCoder>, jule::Ptr<_1ac71426b_Fn>*, jule::Bool);
inline void _1ba9e1749_funcDeclTrait(jule::Ptr<_1ba9d9555_ObjectCoder>, jule::Ptr<_1ac727548_Trait>*, jule::Ptr<_1ac71426b_Fn>*, jule::Bool);
inline void _1ba9e1947_funcDecls(jule::Ptr<_1ba9d9555_ObjectCoder>);
inline void _1ba9e1caa_traitDataTypeMethods(jule::Ptr<_1ba9d9555_ObjectCoder>, jule::Ptr<_1ac727548_Trait>*, jule::Ptr<_1ac727548_Trait>*);
inline void _1ba9e1ea8_traitDataTypes(jule::Ptr<_1ba9d9555_ObjectCoder>);
inline void _1ba9e2261_paramIns(jule::Ptr<_1ba9d9555_ObjectCoder>, jule::Ptr<_1ac7161c4_ParamIns>*);
inline void _1ba9e2519_paramsIns(jule::Ptr<_1ba9d9555_ObjectCoder>, jule::Slice<jule::Ptr<_1ac7161c4_ParamIns>>*);
inline void _1ba9e287c_varInitExpr(jule::Ptr<_1ba9d9555_ObjectCoder>, jule::Ptr<_1ac7bb015_Var>*, jule::Fn<void(void)>);
inline void _1ba9e2b35_var(jule::Ptr<_1ba9d9555_ObjectCoder>, jule::Ptr<_1ac7bb015_Var>);
inline void _1ba9e2ddd_funcIns(jule::Ptr<_1ba9d9555_ObjectCoder>, jule::Ptr<_1ac717170_FnIns>*);
inline void _1ba9e3196_func(jule::Ptr<_1ba9d9555_ObjectCoder>, jule::Ptr<_1ac71426b_Fn>*);
inline void _1ba9e3509_funcTrait(jule::Ptr<_1ba9d9555_ObjectCoder>, jule::Ptr<_1ba9d8114_traitHash>*, jule::Ptr<_1ac71426b_Fn>*);
inline void _1ba9e386c_traitWrapper(jule::Ptr<_1ba9d9555_ObjectCoder>, jule::Ptr<_1ac71426b_Fn>*, jule::Ptr<_1ba9d8114_traitHash>*);
inline void _1ba9e3a6a_traitWrappers(jule::Ptr<_1ba9d9555_ObjectCoder>);
inline void _1ba9e3dcd_traitDataMethods(jule::Ptr<_1ba9d9555_ObjectCoder>, jule::Ptr<_1ac727548_Trait>*, jule::Ptr<_1ba9d8114_traitHash>*);
inline void _1ba9e4241_traitData(jule::Ptr<_1ba9d9555_ObjectCoder>, jule::Ptr<_1ba9d8114_traitHash>*, jule::Ptr<_1ac727548_Trait>*);
inline void _1ba9e443e_traitDatas(jule::Ptr<_1ba9d9555_ObjectCoder>);
inline void _1ba9e463c_globals(jule::Ptr<_1ba9d9555_ObjectCoder>);
inline void _1ba9e483a_decls(jule::Ptr<_1ba9d9555_ObjectCoder>);
inline void _1ba9e4ae3_structureMethods(jule::Ptr<_1ba9d9555_ObjectCoder>, jule::Ptr<_1ac702105_StructIns>*);
inline void _1ba9e4d9b_structureOstream(jule::Ptr<_1ba9d9555_ObjectCoder>, jule::Ptr<_1ac702105_StructIns>*);
inline void _1ba9e5154_structureIns(jule::Ptr<_1ba9d9555_ObjectCoder>, jule::Ptr<_1ac702105_StructIns>*);
inline void _1ba9e540c_structure(jule::Ptr<_1ba9d9555_ObjectCoder>, jule::Ptr<_1ac6ee377_Struct>*);
inline void _1ba9e560a_structures(jule::Ptr<_1ba9d9555_ObjectCoder>);
inline void _1ba9e5808_funcs(jule::Ptr<_1ba9d9555_ObjectCoder>);
inline void _1ba9e5ab1_pushInit(jule::Ptr<_1ba9d9555_ObjectCoder>, jule::Ptr<_1ac77a832_Package>*);
inline void _1ba9e5cae_initCaller(jule::Ptr<_1ba9d9555_ObjectCoder>);
inline void _1ba9e5eac_end(jule::Ptr<_1ba9d9555_ObjectCoder>);
inline void _1ba9e61aa_serializeHead(jule::Ptr<_1ba9d9555_ObjectCoder>);
inline void _1ba9e63a8_Serialize(jule::Ptr<_1ba9d9555_ObjectCoder>);
inline jule::Ptr<_1ad37d90c_ObjectDeadCode> static__1ad3ad893_new(jule::Ptr<_1ad2253b9_IR>*);
inline jule::Bool _1bd823248_isLive(jule::Ptr<_1ad37d90c_ObjectDeadCode>, jule::Ptr<_1ac727548_Trait>*);
inline jule::Bool _1bd828cba_isLive(jule::Ptr<_1ad37d90c_ObjectDeadCode>, jule::Ptr<_1ac717170_FnIns>*);
inline jule::Bool _1bd82eaa1_isLive(jule::Ptr<_1ad37d90c_ObjectDeadCode>, jule::Ptr<_1ac702105_StructIns>*);
inline jule::Bool _1bd836e2c_isLive(jule::Ptr<_1ad37d90c_ObjectDeadCode>, jule::Ptr<_1ac7bb015_Var>*);
inline void _1bd823655_pushLive(jule::Ptr<_1ad37d90c_ObjectDeadCode>, jule::Ptr<_1ac727548_Trait>);
inline void _1bd829172_pushLive(jule::Ptr<_1ad37d90c_ObjectDeadCode>, jule::Ptr<_1ac717170_FnIns>);
inline void _1bd8301ab_pushLive(jule::Ptr<_1ad37d90c_ObjectDeadCode>, jule::Ptr<_1ac702105_StructIns>);
inline void _1bd837339_pushLive(jule::Ptr<_1ad37d90c_ObjectDeadCode>, jule::Ptr<_1ac7bb015_Var>);
inline void _1ad3ae245_setReferencesAsLive(jule::Ptr<_1ad37d90c_ObjectDeadCode>, jule::Ptr<_1ac71a33d_ReferenceStack>*);
inline void _1ad3ae4ed_inits(jule::Ptr<_1ad37d90c_ObjectDeadCode>, jule::Ptr<_1ac77a832_Package>*);
inline void _1ad3ae7a6_collectLivePackage(jule::Ptr<_1ad37d90c_ObjectDeadCode>, jule::Ptr<_1ac77a832_Package>*);
inline void _1ad3ae9a4_collectLive(jule::Ptr<_1ad37d90c_ObjectDeadCode>);
inline void _1ad3aec5c_removeDeadGlobals(jule::Ptr<_1ad37d90c_ObjectDeadCode>, jule::Slice<jule::Ptr<_1ac7bb015_Var>>*);
inline void _1ad3b0015_removeDeadFns(jule::Ptr<_1ad37d90c_ObjectDeadCode>, jule::Slice<jule::Ptr<_1ac71426b_Fn>>*);
inline void _1ad3b02bd_removeDeadStructs(jule::Ptr<_1ad37d90c_ObjectDeadCode>, jule::Slice<jule::Ptr<_1ac6ee377_Struct>>*);
inline void _1ad3b0576_removeDeadTraits(jule::Ptr<_1ad37d90c_ObjectDeadCode>, jule::Slice<jule::Ptr<_1ac727548_Trait>>*);
inline void _1ad3b082e_removeDeadsFile(jule::Ptr<_1ad37d90c_ObjectDeadCode>, jule::Ptr<_1ac81e013_SymbolTable>*);
inline void _1ad3b0ad7_removeDeadsPackage(jule::Ptr<_1ad37d90c_ObjectDeadCode>, jule::Ptr<_1ac77a832_Package>*);
inline void _1ad3b0cd5_removeDeads(jule::Ptr<_1ad37d90c_ObjectDeadCode>);
inline void _1ad3b0ed3_elimanate(jule::Ptr<_1ad37d90c_ObjectDeadCode>);
inline __jule_tuple_x_1ad2253b9_IR__jule_tuple_s_1a756d63b_Log static__1ad22582b_Build(jule::Str, jule::I64);
inline void _1ad225d15_appendStructs(_1ad2253b9_IR*, jule::Ptr<_1ac77a832_Package>*, jule::Slice<jule::Ptr<_1ac6ee377_Struct>>*);
inline jule::Slice<jule::Ptr<_1ac6ee377_Struct>> _1ad22609b_GetAllStructures(_1ad2253b9_IR*);
inline void _1ad22640e_appendGlobals(_1ad2253b9_IR*, jule::Ptr<_1ac77a832_Package>*, jule::Slice<jule::Ptr<_1ac7bb015_Var>>*);
inline jule::Slice<jule::Ptr<_1ac7bb015_Var>> _1ad226695_GetAllGlobals(_1ad2253b9_IR*);
inline void _1ad226893_Order(_1ad2253b9_IR*);
inline jule::Str _1ac702479_Str(_1ac702105_StructIns*);
inline jule::Bool _1ac7027ba_Equal(jule::Ptr<_1ac702105_StructIns>, jule::Ptr<_1ac859a32_TypeKind>);
inline jule::Bool _1ac702c71_Same(_1ac702105_StructIns*, jule::Ptr<_1ac702105_StructIns>);
inline jule::Ptr<_1ac71426b_Fn> _1ac70316c_FindMethod(_1ac702105_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_1ac701555_FieldIns> _1ac7034ad_FindField(_1ac702105_StructIns*, jule::Str);
inline jule::Ptr<_1ac7bb015_Var> _1ac7037ee_FindStatic(_1ac702105_StructIns*, jule::Str);
inline jule::Ptr<_1a7630665_Cmd> static__1a7630a83_New(jule::Str);
inline jule::VoidExceptional _1a7630c81_Spawn(_1a7630665_Cmd*);
inline jule::Exceptional<jule::I64> _1a7631215_Wait(_1a7630665_Cmd*);
inline jule::VoidExceptional _1a7634c74_spawn(_1a7630665_Cmd*);
inline jule::Exceptional<jule::I64> _1a7635208_wait(_1a7630665_Cmd*);
inline jule::I32 _1d9e0ca25_DecodeRune(jule::I32, jule::I32);
inline __jule_tuple_i32__jule_tuple_i32 _1d9e0ccde_EncodeRune(jule::I32);
inline jule::Slice<jule::U16> _1d9e0d130_Encode(jule::Slice<jule::I32>);
inline jule::Slice<jule::I32> _1d9e0d3e9_Decode(jule::Slice<jule::U16>);
inline jule::Slice<jule::U16> _1d9e0d73a_AppendRune(jule::Slice<jule::U16>, jule::I32);
inline jule::Slice<jule::U16> _1d9e0d98d_UTF16FromStr(jule::Str);
inline jule::Str _1d9e0dc9b_UTF16ToStr(jule::Slice<jule::U16>);
inline jule::Str _1d9e0e065_U16PtrToStr(jule::U16*);
inline jule::I64 _1dbd20d21_GetLastErrno(void);
inline jule::Uintptr _1d9e381c1_GetStdHandle(jule::Uintptr);
inline jule::Bool _1d9e3848a_CloseHandle(jule::Uintptr);
inline jule::I64 _1d9e3880e_Wstat(jule::U16*, struct _stat*);
inline jule::I64 _1d9e38c3d_Wopen(jule::U16*, jule::I64, jule::I64);
inline jule::U32 _1d9e38e4c_GetLastError(void);
inline jule::U32 _1d9e392c1_GetCurrentDirectory(jule::U32, jule::U16*);
inline jule::Bool _1d9e39854_DeleteFile(jule::U16*);
inline jule::Bool _1d9e39b1d_CreateDirectory(jule::U16*);
inline jule::Bool _1d9e39dd7_RemoveDirectory(jule::U16*);
inline jule::U32 _1d9e3a3c1_GetFullPathName(jule::U16*, jule::U32, jule::U16*, jule::U16**);
inline jule::Bool _1d9e3a745_GetConsoleMode(jule::Uintptr, jule::I64*);
inline jule::Bool _1d9e3ad1c_SetConsoleMode(jule::Uintptr, jule::I64);
inline jule::Bool _1d9e3b3a0_WriteConsole(jule::Uintptr, jule::U16*, jule::I64, jule::I64*, void*);
inline jule::Bool _1d9e3b889_ReadConsole(jule::Uintptr, jule::U16*, jule::I64, jule::I64*);
inline jule::Uintptr _1d9e3be1c_FindFirstFile(jule::U16*, WIN32_FIND_DATAW*);
inline jule::I64 _1d9e3c291_FindNextFile(jule::Uintptr, WIN32_FIND_DATAW*);
inline jule::I64 _1d9e3c55a_FindClose(jule::Uintptr);
inline jule::I64 _1d9e3e66c_Read(jule::I64, void*, jule::U64);
inline jule::I64 _1d9e3ea13_Close(jule::I64);
inline jule::I64 _1d9e3ee42_Write(jule::I64, void*, jule::U64);
inline void _1d9e40173_Exit(jule::I64);
inline __jule_tuple_i32__jule_tuple_int _1c1579d9d_DecodeRune(jule::Slice<jule::U8>);
inline __jule_tuple_i32__jule_tuple_int _1c157a1de_DecodeRuneStr(jule::Str);
inline __jule_tuple_i32__jule_tuple_int _1c157a772_DecodeLastRuneStr(jule::Str);
inline jule::I64 _1c157aa3b_RuneLen(jule::I32);
inline jule::I64 _1c157ae8c_EncodeRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _1c157b311_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _1c157b685_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _1c157bc18_RuneCountStr(jule::Str);
inline jule::Bool _1c157bed2_RuneStart(jule::U8);
inline jule::Str _1c164112e_Str(jule::U8*, jule::I64);
inline jule::Slice<jule::U8> _1bab81ad7_Slice(jule::U8*, jule::I64);
inline jule::Slice<jule::U8> _1c164bdc6_StrBytes(jule::Str);
inline jule::Str _1c164c190_BytesStr(jule::Slice<jule::U8>);
inline jule::Str _1c164c459_StrFromBytes(jule::Slice<jule::U8>);
inline jule::I64 _1c1680c0c_getLastOsErrorWindows(void);
inline jule::Slice<jule::Str> _1c1681c1e_Args(void);
inline jule::Exceptional<jule::Str> _1c16821b4_WorkingDir(void);
inline jule::Exceptional<jule::Str> _1c16830e9_getwd(void);
inline jule::Bool _1a7467cc7_IsLetter(jule::I32);
inline jule::Bool _1a74d56e6_is16(jule::Slice<_1a74d3958_Range16>, jule::U16);
inline jule::Bool _1a74d5a6a_is32(jule::Slice<_1a74d3e86_Range32>, jule::U32);
inline jule::Bool _1a74d6373_isExcludingLatin(jule::Ptr<_1a74d443c_RangeTable>, jule::I32);
inline jule::Bool _1a74d663c_IsUpper(jule::I32);
inline jule::I64 _1a6937c26_findLastByte(jule::U8*, jule::U8*, jule::U8);
inline jule::I64 _1a6938463_FindByteStr(jule::Str, jule::U8);
inline jule::I64 _1a69387d7_FindLastByteStr(jule::Str, jule::U8);
inline jule::Str _1a6938c27_Repeat(jule::Str, jule::I64);
inline jule::Bool _1a693919a_hasPrefix(jule::Str*, jule::Str*, jule::I64);
inline jule::Bool _1a693951e_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _1a693993c_hasSuffix(jule::Str*, jule::Str*, jule::I64);
inline jule::Bool _1a6939c7d_HasSuffix(jule::Str, jule::Str);
inline jule::I64 _1a693a1ac_FindAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _1a693a531_Find(jule::Str, jule::Str);
inline jule::I64 _1a693aa70_FindLastAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _1a693ade4_FindLast(jule::Str, jule::Str);
inline jule::I64 _1a693c643_FindLastByte(jule::Str, jule::U8);
inline jule::I64 _1a693cb71_FindRune(jule::Str, jule::I32);
inline jule::I64 _1a693d369_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _1a693db1c_Split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _1a693de91_Contains(jule::Str, jule::Str);
inline jule::Bool _1a693ea0d_ContainsAny(jule::Str, jule::Str);
inline jule::I64 _1a693ed82_Count(jule::Str, jule::Str);
inline jule::Str _1a694036b_Replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline jule::Str _1a69410e7_TrimLeft(jule::Str, jule::Str);
inline jule::Str _1a694146b_TrimRight(jule::Str, jule::Str);
inline jule::Str _1a6941a43_Trim(jule::Str, jule::Str);
inline jule::Bool _1c16507d1_IsPathSep(jule::U8);
inline jule::Bool _1c1650ade_isSlash(jule::U8);
inline jule::U8 _1c1650da8_toUpper(jule::U8);
inline jule::I64 _1c16514b3_volumeNameLen(jule::Str);
inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _1c165177c_cutPath(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _1c1651a46_fullPath(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _1c1651ddc_abs(jule::Str);
inline jule::Str _1c16521a6_join(jule::Slice<jule::Str>);
inline jule::Str _1a6943bcc_Clean(jule::Str);
inline jule::Str _1a69442a4_FromSlash(jule::Str);
inline jule::Str _1a694455c_Join(jule::Slice<jule::Str>);
inline jule::Str _1a6944826_Ext(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _1a6944ae0_Abs(jule::Str);
inline jule::Str _1a6944da9_Base(jule::Str);
inline jule::Str _1a6945250_Dir(jule::Str);
inline jule::Str _1a6945519_VolumeName(jule::Str);
inline jule::I64 _1d9e50705_getLastFsError(void);
inline jule::Bool _1c157dcc5_isConsoleHandle(jule::Uintptr);
inline void _1a76355b0_appendEscapeArg(_1c164cc40_StrBuilder*, jule::Str);
inline jule::Str _1a7635879_makeCmdLine(jule::Slice<jule::Str>);
inline jule::Exceptional<jule::Slice<jule::U16>> _1a7635c53_createEnvBlock(jule::Slice<jule::Str>);
inline jule::I64 _1a7636c87_processErrorFromCode(jule::I64);
inline jule::I64 _1a7636ea7_getLastProcessError(void);
inline void _1a76377c1_Exit(jule::I64);
inline jule::Str _1a76379d0_Executable(void);
inline jule::Bool _1a75610ac_IsStdHeaderPath(jule::Str);
inline jule::Bool _1a7561387_IsValidHeaderExt(jule::Str);
inline jule::Bool _1a7561651_IsValidCppExt(jule::Str);
inline jule::Str _1a756da9d_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1a756ddab_argToStr(jule::Any);
inline jule::I64 _1a756e175_findNextFmt(jule::Str);
inline jule::Str _1a756e53d_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a75703a7_IsTopDirective(jule::Str);
inline jule::Bool _1a7571809_IsWindows(jule::Str);
inline jule::Bool _1a7571ad4_IsDarwin(jule::Str);
inline jule::Bool _1a7571d9d_IsLinux(jule::Str);
inline jule::Bool _1a75721de_IsI386(jule::Str);
inline jule::Bool _1a75724a8_IsAmd64(jule::Str);
inline jule::Bool _1a7572772_IsArm64(jule::Str);
inline jule::Bool _1a7572a3b_IsUnix(jule::Str);
inline jule::Bool _1a7572dd2_Is32Bit(jule::Str);
inline jule::Bool _1a757319b_Is64Bit(jule::Str);
inline void _1a7638cab_init(void);
inline jule::I64 _1dbaab815_LeadingZeros64(jule::U64);
inline jule::I64 _1dbaac76c_TrailingZeros(jule::U64);
inline jule::I64 _1dbaad1c9_TrailingZeros32(jule::U32);
inline jule::I64 _1dbaad493_TrailingZeros64(jule::U64);
inline jule::I64 _1dbab3e49_Len32(jule::U32);
inline jule::I64 _1dbab4213_Len64(jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1dbab4ea0_Add64(jule::U64, jule::U64, jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1dbab67a9_Mul64(jule::U64, jule::U64);
inline jule::U32 _1a9514558_F32Bits(jule::F32);
inline jule::F32 _1a9514866_F32FromBits(jule::U32);
inline jule::U64 _1a9514b30_F64Bits(jule::F64);
inline jule::F64 _1a9514e71_F64FromBits(jule::U64);
inline __jule_tuple_f64__jule_tuple_int _1a9517528_Frexp(jule::F64);
inline jule::F64 _1dbabdbbd_NaN(void);
inline jule::Bool _1dbabdecb_IsNaN(jule::F64);
inline jule::F64 _1dbabe295_Inf(jule::I64);
inline jule::Bool _1dbabe5d6_IsInf(jule::F64, jule::I64);
inline __jule_tuple_f64__jule_tuple_int _1dbabe8a0_normalize(jule::F64);
inline jule::F64 _1dbac1385_Log(jule::F64);
inline jule::F64 _1dbac1d7a_Abs(jule::F64);
inline __jule_tuple_f64__jule_tuple_f64 _1dbac8a74_Modf(jule::F64);
inline jule::F64 _1dbac937c_Log2(jule::F64);
inline jule::Str _1dbb0386d_FmtFloat(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1dbb03e56_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1dbb045c7_bigFtoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1dbb0263b_floatInfo*);
inline jule::Slice<jule::U8> _1dbb04c9d_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _1dbb032da_decimalSlice, jule::I64, jule::U8);
inline void _1dbb051ee_roundShortest(_1dbb160bc_decimal*, jule::U64, jule::I64, _1dbb0263b_floatInfo*);
inline jule::Slice<jule::U8> _1dbb05793_fmtE(jule::Slice<jule::U8>, jule::Bool, _1dbb032da_decimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _1dbb05c7c_fmtF(jule::Slice<jule::U8>, jule::Bool, _1dbb032da_decimalSlice, jule::I64);
inline jule::Slice<jule::U8> _1dbb063ed_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _1dbb0263b_floatInfo*);
inline jule::Slice<jule::U8> _1dbb06b07_fmtX(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1dbb0263b_floatInfo*);
inline jule::I64 _1dbb06e7b_min(jule::I64, jule::I64);
inline jule::I64 _1dbb07300_max(jule::I64, jule::I64);
inline jule::U8 _1dbb07e38_lower(jule::U8);
inline __jule_tuple_u64__jule_tuple__1a8dd5127_ConvError _1dbb083ab_parseUint(jule::Str*, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _1dbb087da_ParseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _1dbb08c91_ParseInt(jule::Str, jule::I64, jule::I64);
inline __jule_tuple_f64__jule_tuple_bool _1dbb09984_eiselLemire64(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1dbb09dc4_eiselLemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _1dbb0bc1c_commonPrefixLenIgnoreCase(jule::Str, jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1dbb0c02a_special(jule::Str);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1dbb0c2e4_readFloat(jule::Str*);
inline __jule_tuple_f64__jule_tuple_bool _1dbb0dd73_atof64exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1dbb0e2a2_atof32exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f64__jule_tuple__1a8dd5127_ConvError _1dbb0e846_atofHex(_1dbb0263b_floatInfo*, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1a8dd5127_ConvError _1dbb0ec20_atof32(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a8dd5127_ConvError _1dbb0eed9_atof64(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a8dd5127_ConvError _1dbb1035d_parseFloatPrefix(jule::Str*, jule::I64);
inline jule::Exceptional<jule::F64> _1dbb106d2_ParseFloat(jule::Str, jule::I64);
inline void _1dbb10eda_ryuFtoaFixed32(_1dbb032da_decimalSlice*, jule::U32, jule::I64, jule::I64);
inline void _1dbb11480_ryuFtoaFixed64(_1dbb032da_decimalSlice*, jule::U64, jule::I64, jule::I64);
inline void _1dbb11ccc_formatDecimal(_1dbb032da_decimalSlice*, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _1dbb122a5_ryuFtoaShortest(_1dbb032da_decimalSlice*, jule::U64, jule::I64, _1dbb0263b_floatInfo*);
inline jule::I64 _1dbb1256e_mulByLog2Log10(jule::I64);
inline jule::I64 _1dbb12838_mulByLog10Log2(jule::I64);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1dbb12c67_computeBounds(jule::U64, jule::I64, _1dbb0263b_floatInfo*);
inline void _1dbb13383_ryuDigits(_1dbb032da_decimalSlice*, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _1dbb13a04_ryuDigits32(_1dbb032da_decimalSlice*, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1dbb13e33_mult64bitPow10(jule::U32, jule::I64, jule::I64);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1dbb14362_mult128bitPow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _1dbb146d6_divisibleByPow5(jule::U64, jule::I64);
inline __jule_tuple_u32__jule_tuple_u32 _1dbb149a0_divmod1e9(jule::U64);
inline void _1dbb1791a_trim(_1dbb160bc_decimal*);
inline void _1dbb17c06_rightShift(_1dbb160bc_decimal*, jule::U64);
inline jule::Bool _1dbb181ac_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I64, jule::Str*);
inline void _1dbb18465_leftShift(_1dbb160bc_decimal*, jule::U64);
inline jule::Bool _1dbb187d9_shouldRoundUp(_1dbb160bc_decimal*, jule::I64);
inline jule::Str _1dbba3346_FmtUint(jule::U64, jule::I64);
inline jule::Str _1dbba370e_FmtInt(jule::I64, jule::I64);
inline jule::Str _1dbba39c8_Itoa(jule::I64);
inline jule::Str _1dbba3d19_small(jule::I64);
inline jule::Bool _1dbba40d3_isPowerOfTwo(jule::I64);
inline __jule_tuple_su8__jule_tuple_str _1dbba4677_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline jule::Str _1dbba5c1c_RealKindOf(jule::Str);
inline jule::I64 _1dbba5ed6_BitsizeOf(jule::Str);
inline jule::Str _1dbba6327_IntFromBits(jule::I64);
inline jule::Str _1dbba65e1_UintFromBits(jule::I64);
inline jule::Str _1dbba68aa_FloatFromBits(jule::I64);
inline jule::Bool _1dbba7504_CheckBitFloat(jule::Str, jule::I64);
inline jule::I64 _1dbba77bd_BitsizeOfFloat(jule::F64);
inline jule::I64 _1dbba7a87_BitsizeOfInt(jule::I64);
inline jule::I64 _1dbba7d51_BitsizeOfUint(jule::U64);
inline void _1a6cd5b1d_UpdateTarget(void);
inline void _1a6cd5c61_init(void);
inline jule::I64 _1a6cd9a45_MinI(jule::Str);
inline jule::I64 _1a6cd9d53_MaxI(jule::Str);
inline jule::U64 _1a6cda11c_MaxU(jule::Str);
inline jule::F64 _1a6cda34d_Min(jule::Str);
inline jule::F64 _1a6cda617_Max(jule::Str);
inline jule::Bool _1a6cdaa8a_IsI16Greater(jule::Str);
inline jule::Bool _1a6cdad98_IsI32Greater(jule::Str);
inline jule::Bool _1a6cdb162_IsI64Greater(jule::Str);
inline jule::Bool _1a6cdb4a3_IsU16Greater(jule::Str);
inline jule::Bool _1a6cdb76c_IsU32Greater(jule::Str);
inline jule::Bool _1a6cdba36_IsU64Greater(jule::Str);
inline jule::Bool _1a6cdbd00_IsF32Greater(jule::Str);
inline jule::Bool _1a6cdc196_IsF64Greater(jule::Str);
inline jule::Bool _1a6cdc51a_IsGreater(jule::Str, jule::Str);
inline jule::Bool _1a6cdd609_IsSigInt(jule::Str);
inline jule::Bool _1a6cdd917_IsUnsigInt(jule::Str);
inline jule::Bool _1a6cddbd1_IsInt(jule::Str);
inline jule::Bool _1a6cde022_IsFloat(jule::Str);
inline jule::Bool _1a6cde2db_IsNum(jule::Str);
inline jule::Bool _1a6cde5a5_IsSigNum(jule::Str);
inline void _1a6ce8900_lshiftUnsig(_1a6cde8d5_Const*, _1a6cde8d5_Const*);
inline void _1a6ce8c30_rshiftUnsig(_1a6cde8d5_Const*, _1a6cde8d5_Const*);
inline jule::Bool _1ac6b369e_IsUnaryOp(jule::U64);
inline jule::Bool _1ac6b39ac_IsBinOp(jule::U64);
inline jule::Bool _1ac6b40b7_IsStr(jule::Str);
inline jule::Bool _1ac6b4381_IsRawStr(jule::Str);
inline jule::Bool _1ac6b464a_IsRune(jule::Str);
inline jule::Bool _1ac6b5074_IsFloat(jule::Str);
inline jule::Bool _1ac6b533d_IsNum(jule::Str);
inline jule::Bool _1ac6b58c1_IsIgnoreIdent(jule::Str);
inline jule::Bool _1ac6b5b8a_IsAnonIdent(jule::Str);
inline jule::Bool _1ac6b621d_IsSpace(jule::I32);
inline jule::Bool _1ac6b6691_IsLetter(jule::I32);
inline jule::Bool _1ac6b6c24_IsDecimal(jule::U8);
inline jule::Bool _1ac6b6edd_IsBinary(jule::U8);
inline jule::Bool _1ac6b72a7_IsOctal(jule::U8);
inline jule::Bool _1ac6b7571_IsHex(jule::U8);
inline jule::Bool _1ac6b783a_IsAssign(jule::U64);
inline jule::Bool _1ac6b7b04_IsPostfixOp(jule::U64);
inline jule::Bool _1ac6b7dbd_IsAssignOp(jule::U64);
inline jule::Ptr<_1ac6b872b_File> _1ac6b9ac3_NewFileSet(jule::Str);
inline _1a756d63b_Log _1ac6bb61e_makeErr(jule::I64, jule::I64, jule::Ptr<_1ac6b872b_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ac6bb9d7_bytesHasPrefix(jule::Slice<jule::U8>*, jule::Str);
inline jule::Str _1ac6bbd5b_floatFmtE(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1ac6bc224_floatFmtP(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1ac6bc598_floatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1ac6bc91c_floatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1ac6bcc91_floatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1ac6bd225_floatNum(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1ac6bd4de_commonNum(jule::Slice<jule::U8>*);
inline jule::Str _1ac6bd7a8_binaryNum(jule::Slice<jule::U8>*);
inline jule::Bool _1ac6bdb2c_isFloatFmtE(jule::U8, jule::I64);
inline jule::Bool _1ac6bdea1_isFloatFmtP(jule::U8, jule::I64);
inline jule::Bool _1ac6be325_isFloatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _1ac6be699_isFloatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _1ac6bea1d_isFloatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1ac6bee91_octalNum(jule::Slice<jule::U8>*);
inline jule::Str _1ac6c025a_hexNum(jule::Slice<jule::U8>*);
inline jule::Str _1ac6c05ce_hexEscape(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1ac6c0898_bigUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _1ac6c0b62_littleUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _1ac6c0e2b_hexByteEscape(jule::Slice<jule::U8>*);
inline jule::Str _1ac6c11e5_byteEscape(jule::Slice<jule::U8>*);
inline jule::Slice<_1a756d63b_Log> _1ac6c61d9_Lex(jule::Ptr<_1ac6b872b_File>, jule::I64);
inline jule::Bool _1ac793e77_FindModuleFile(jule::Slice<jule::Ptr<_1d9e50d54_DirEntry>>*);
inline jule::Str _1ac794230_FindModuleFileDeep(jule::Str);
inline jule::Slice<_1a756d63b_Log> _1ac7944e9_CheckModuleFile(jule::Str*);
inline jule::Bool _1ac794d79_IsPub(jule::Str);
inline jule::Bool _1ac7dcd7d_IsAscii(jule::I32);
inline jule::I32 _1ac8085e6_ToRune(jule::Str);
inline jule::Str _1ac808816_ToRawStr(jule::Str);
inline jule::Str _1ac808b57_ToStr(jule::Str);
inline __jule_tuple_u8__jule_tuple_bool _1ac808e21_tryBtoaCommonEsq(jule::Str);
inline jule::I32 _1ac809262_runeFromEsqSeq(jule::Str, jule::I64*);
inline void _1ac809608_strEsqSeq(jule::Slice<jule::U8>*, jule::Str, jule::I64*);
inline jule::I64 _1ac93758d_findFormatPrefix(jule::Slice<jule::U8>*, jule::I64);
inline jule::Slice<jule::U8> _1ac937912_getFormatRange(jule::I64*, jule::Slice<jule::U8>*);
inline void _1ac937bed_FmtByDefault(_1c164cc40_StrBuilder*, jule::Any*);
inline void _1ac93811b_applyFmtByDefault(_1c164cc40_StrBuilder*, jule::I64*, jule::Slice<jule::Any>);
inline void _1ac93856c_applyFmt(jule::Slice<jule::U8>*, _1c164cc40_StrBuilder*, jule::I64*, jule::Slice<jule::Any>);
inline jule::Slice<jule::U8> _1ac9388ad_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1ac93a8d2_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ac71944c_parameterUsesGenerics(jule::Ptr<_1ac7161c4_ParamIns>*, jule::Slice<jule::Ptr<_1ac6d588b_GenericDecl>>*);
inline jule::Ptr<_1ac861c04_TypeSymbol> _1ac71bbbe_buildType(jule::Ptr<_1ac6c8681_TypeDecl>);
inline jule::Ptr<_1ac825503_Value> _1ac71becc_buildExpr(jule::Ptr<_1ac6cc9b5_Expr>);
inline jule::Ptr<_1ac858c40_TypeAlias> _1ac71c296_buildTypeAlias(jule::Ptr<_1ac6e019d_TypeAliasDecl>);
inline jule::Ptr<_1ac6eb484_Field> _1ac71c5d7_buildField(jule::Ptr<_1ac6e3a53_FieldDecl>);
inline jule::Slice<jule::Ptr<_1ac6eb484_Field>> _1ac71c8a1_buildFields(jule::Slice<jule::Ptr<_1ac6e3a53_FieldDecl>>*);
inline jule::Ptr<_1ac6ee377_Struct> _1ac71cb6a_buildStruct(jule::Ptr<_1ac6e4449_StructDecl>);
inline jule::Ptr<_1ac712797_Param> _1ac71ce34_buildParam(jule::Ptr<_1ac6d8dde_ParamDecl>);
inline jule::Slice<jule::Ptr<_1ac712797_Param>> _1ac71d2ca_buildParams(jule::Slice<jule::Ptr<_1ac6d8dde_ParamDecl>>*);
inline jule::Ptr<_1ac712016_RetType> _1ac71d594_buildRetType(jule::Ptr<_1ac6cb574_RetTypeDecl>);
inline jule::Ptr<_1ac71426b_Fn> _1ac71d85d_buildFunc(jule::Ptr<_1ac6da341_FnDecl>);
inline jule::Slice<jule::Ptr<_1ac71426b_Fn>> _1ac71db27_buildMethods(jule::Slice<jule::Ptr<_1ac6da341_FnDecl>>*);
inline jule::Slice<jule::Ptr<_1ac861c04_TypeSymbol>> _1ac71dde1_buildTraitInherits(jule::Slice<jule::Ptr<_1ac6c8681_TypeDecl>>*);
inline jule::Ptr<_1ac727548_Trait> _1ac71e1aa_buildTrait(jule::Ptr<_1ac6e4b86_TraitDecl>);
inline jule::Ptr<_1ac7291d7_EnumItem> _1ac71e474_buildEnumItem(jule::Ptr<_1ac6e1c3d_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1ac7291d7_EnumItem>> _1ac71e73d_buildEnumItems(jule::Slice<jule::Ptr<_1ac6e1c3d_EnumItemDecl>>*);
inline jule::Ptr<_1ac729c54_Enum> _1ac71ebb1_buildEnum(jule::Ptr<_1ac6e27ee_EnumDecl>);
inline jule::Ptr<_1ac72ad87_TypeEnumItem> _1ac71ee7a_buildTypeEnumItem(jule::Ptr<_1ac6e3129_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_1ac72ad87_TypeEnumItem>> _1ac720244_buildTypeEnumItems(jule::Slice<jule::Ptr<_1ac6e3129_TypeEnumItemDecl>>*);
inline jule::Ptr<_1ac72b45e_TypeEnum> _1ac72050d_buildTypeEnum(jule::Ptr<_1ac6e3789_TypeEnumDecl>);
inline jule::Ptr<_1ac7bb015_Var> _1ac7207c7_buildVar(jule::Ptr<_1ac6db4eb_VarDecl>);
inline jule::Slice<jule::Ptr<_1ac7bb015_Var>> _1ac720a91_buildVars(jule::Slice<jule::Ptr<_1ac6db4eb_VarDecl>>);
inline jule::Ptr<_1ac750bc0_Impl> _1ac720d5a_buildImpl(jule::Ptr<_1ac6e52e6_Impl>);
inline jule::Ptr<_1ac8243ae_Data> _1ac74b21a_buildAsComptimeMethodData(jule::Ptr<_1ac717170_FnIns>*);
inline jule::Ptr<_1ac77790b_ImportInfo> _1ac74b528_findComptimePackage(jule::Ptr<_1ac797c7d_Sema>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac74b89c_buildComptimeTypeInfoData(jule::Ptr<_1ac797c7d_Sema>*, jule::Ptr<_1ac859a32_TypeKind>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac74bacd_buildComptimeValue(jule::Ptr<_1ac8243ae_Data>*);
inline jule::Str _1ac74eb69_toStrConstraints(jule::Ptr<_1ac85814b_InsGeneric>);
inline jule::Bool _1ac750032_matchConstraint(jule::Str*, jule::Ptr<_1ac859a32_TypeKind>*);
inline jule::Bool _1ac7502eb_isBuiltinConstraint(jule::Str*);
inline jule::Ptr<_1ac75d42a_scopeChecker> _1ac752e03_newScopeCheckerBase(jule::Ptr<_1ac797c7d_Sema>*, jule::Ptr<_1ac717170_FnIns>);
inline jule::Ptr<_1ac75d42a_scopeChecker> _1ac7532bb_newScopeChecker(jule::Ptr<_1ac797c7d_Sema>*, jule::Ptr<_1ac717170_FnIns>);
inline jule::Ptr<_1ac75be84_scopeLabel> _1ac753640_findLabelParent(jule::Str*, jule::Ptr<_1ac75d42a_scopeChecker>);
inline jule::Bool _1ac753a08_modelIsGotoScope(jule::Any, jule::Ptr<_1ac756126_Scope>*);
inline jule::Bool _1ac753d7c_stmtIsGotoScope(jule::Any*, jule::Ptr<_1ac756126_Scope>*);
inline jule::I64 _1ac754201_countMatchType(jule::Ptr<_1ac75a25c_Match>*, jule::Ptr<_1ac859a32_TypeKind>*);
inline jule::Slice<jule::Ptr<_1ac8243ae_Data>> _1ac7544ba_getDatasFromTupleData(jule::Ptr<_1ac8243ae_Data>*);
inline jule::Bool _1ac754d7d_checkMut(jule::Ptr<_1ac797c7d_Sema>*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac8243ae_Data>, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Bool _1ac755367_checkAssign(jule::Ptr<_1ac797c7d_Sema>*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac8243ae_Data>, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Bool _1ac755631_isValidAstStForNextSt(jule::Any*);
inline jule::Bool _1ac7558ea_isValidStForNextSt(jule::Any*);
inline jule::Bool _1ac755bb4_stmtIsDef(jule::Any*);
inline jule::U64 _1ac77023e_removeEqFromOp(jule::U64);
inline void _1ac770470_makeComptimeRange(jule::Ptr<_1ac8243ae_Data>*);
inline jule::Bool _1ac77096a_canComptimeMatch(jule::Ptr<_1ac8243ae_Data>*);
inline jule::Ptr<_1ac7bb015_Var> _1ac774de2_findVarInPackage(jule::Slice<jule::Ptr<_1ac81e013_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1ac858c40_TypeAlias> _1ac775365_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1ac81e013_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1ac6ee377_Struct> _1ac775794_findStructInPackage(jule::Slice<jule::Ptr<_1ac81e013_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1ac71426b_Fn> _1ac775c4a_findFnInPackage(jule::Slice<jule::Ptr<_1ac81e013_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1ac727548_Trait> _1ac77608b_findTraitInPackage(jule::Slice<jule::Ptr<_1ac81e013_SymbolTable>>*, jule::Str*);
inline jule::Ptr<_1ac729c54_Enum> _1ac776410_findEnumInPackage(jule::Slice<jule::Ptr<_1ac81e013_SymbolTable>>*, jule::Str*);
inline jule::Ptr<_1ac72b45e_TypeEnum> _1ac776784_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1ac81e013_SymbolTable>>*, jule::Str*);
inline jule::Any _1ac776cc3_defByIdentPackage(jule::Slice<jule::Ptr<_1ac81e013_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Bool _1ac77cd0c_isStdPackage(jule::Str*, jule::Str);
inline jule::Bool _1ac79541d_isValidModelForRef(jule::Any*);
inline _1a756d63b_Log _1ac79594b_compilerErr(jule::Ptr<_1ac6b2e62_Token>*, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ac795cc0_impIsLookupable(jule::Ptr<_1ac77790b_ImportInfo>*, jule::Str*);
inline void _1ac796078_appendRetVars(jule::Slice<jule::Ptr<_1ac7bb015_Var>>*, jule::Ptr<_1ac717170_FnIns>*);
inline void _1ac796364_appendParamVars(jule::Slice<jule::Ptr<_1ac7bb015_Var>>*, jule::Ptr<_1ac717170_FnIns>*);
inline void _1ac796650_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1ac858c40_TypeAlias>>*, jule::Ptr<_1ac717170_FnIns>*);
inline jule::Ptr<_1ac81e013_SymbolTable> _1ac7969c4_findFile(jule::Slice<jule::Ptr<_1ac81e013_SymbolTable>>*, jule::Ptr<_1ac6b872b_File>*);
inline void _1ac796e7a_pushSuggestion(_1a756d63b_Log*, jule::Str, jule::Slice<jule::Any>);
inline void _1ac7b92cc_pushImplemented(jule::Ptr<_1ac727548_Trait>, jule::Ptr<_1ac6ee377_Struct>*);
inline void _1ac7b95b8_pushImplements(jule::Ptr<_1ac6ee377_Struct>*, jule::Ptr<_1ac727548_Trait>);
inline jule::Bool _1ac809dab_traitHasReferenceReceiver(jule::Ptr<_1ac727548_Trait>*);
inline jule::Bool _1ac80a241_floatAssignable(jule::Str*, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Bool _1ac80a5b5_sigAssignable(jule::Str, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Bool _1ac80a97d_unsigAssignable(jule::Str, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Bool _1ac80ad02_intAssignable(jule::Str, jule::Ptr<_1ac8243ae_Data>*);
inline void _1ac81721a_checkMutRiskOfStructLit(jule::Ptr<_1ac797c7d_Sema>*, jule::Ptr<_1ac7072a3_StructLitExprModel>*);
inline jule::Ptr<_1ac859a32_TypeKind> _1ac81ccae_lenKind(void);
inline jule::Bool _1ac81d111_isGoodValueToInfer(jule::Ptr<_1ac8243ae_Data>*);
inline jule::Ptr<_1ac6c7a9d_Directive> _1ac84cc23_findDirective(jule::Slice<jule::Ptr<_1ac6c7a9d_Directive>>*, jule::Str);
inline jule::Any _1ac84d0db_findBuiltinsImport(jule::Str*, jule::Ptr<_1ac77790b_ImportInfo>);
inline void _1ac84d31c_fitBitsize(jule::Ptr<_1ac8243ae_Data>*);
inline void _1ac84d64c_makeStructLitAlloc(jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac7072a3_StructLitExprModel>*);
inline jule::Ptr<_1ac7bb015_Var> _1ac84d9c1_buildErrorVar(jule::Ptr<_1ac756126_Scope>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Any _1ac84dd45_findBuiltinsSema(jule::Str*, jule::Ptr<_1ac797c7d_Sema>);
inline jule::Bool _1ac84e10e_isOkForShifting(jule::Ptr<_1ac8243ae_Data>*);
inline jule::Bool _1ac84e4d8_isInstancedStruct(jule::Ptr<_1ac702105_StructIns>);
inline jule::Bool _1ac84e85c_isPtrArithmeticCompatible(jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac8243ae_Data>*);
inline void _1ac84eb48_applyCastKindModel(jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac859a32_TypeKind>*);
inline void _1ac84ee34_applyCastKind(jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac859a32_TypeKind>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac850143_buildVoidData(void);
inline jule::Str _1ac85040c_checkDataForIntegerIndexing(jule::Ptr<_1ac8243ae_Data>*);
inline void _1ac8506e8_applyCastModelByEnum(jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac729c54_Enum>);
inline void _1ac8509d4_castConstByType(jule::Str*, jule::Ptr<_1ac8243ae_Data>*);
inline void _1ac850e79_updateModelToGenericIns(jule::Any*, jule::Ptr<_1ac717170_FnIns>*);
inline jule::Bool _1ac8512ed_pushSubIdentFromExpr(jule::Any, jule::Ptr<_1ac6c9088_SubIdentTypeDecl>*);
inline jule::Str _1ac8515b7_constoa(jule::Ptr<_1a6cde8d5_Const>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac856798_evalEnumStatic(jule::Ptr<_1ac729c54_Enum>*, jule::Ptr<_1ac7291d7_EnumItem>*);
inline jule::Ptr<_1ac7072a3_StructLitExprModel> _1ac856a62_isLitBased(jule::Any*);
inline void _1ac856d4d_makeImplicitDeref(jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac6b2e62_Token>);
inline void _1bcd74811_updateRefer(jule::Ptr<_1ac71a33d_ReferenceStack>, jule::Ptr<_1ac717170_FnIns>*, jule::Ptr<_1ac717170_FnIns>*);
inline jule::Bool _1ac875289_kindUsesGenerics(jule::Ptr<_1ac859a32_TypeKind>*, jule::Slice<jule::Ptr<_1ac6d588b_GenericDecl>>*);
inline jule::Bool _1ac875652_hasDirective(jule::Slice<jule::Ptr<_1ac6c7a9d_Directive>>*, jule::Str);
inline jule::Bool _1ac87591b_canGetPtr(jule::Ptr<_1ac8243ae_Data>*);
inline jule::Bool _1ac875c5c_isValidForSptrType(jule::Ptr<_1ac859a32_TypeKind>*);
inline jule::Bool _1ac876026_isValidForRef(jule::Ptr<_1ac859a32_TypeKind>*);
inline jule::Bool _1ac8762e0_isBuiltinStrConvertable(jule::Ptr<_1ac859a32_TypeKind>*);
inline jule::Str _1ac8765a9_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Ptr<_1ac86260b_Prim> _1ac876950_buildPrimType(jule::Str);
inline void _1ac877005_applyImplicitCast(jule::Ptr<_1ac859a32_TypeKind>*, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Bool _1ac8772be_validTypeForXof(jule::Ptr<_1ac859a32_TypeKind>*);
inline __jule_tuple_x_1ac81e013_SymbolTable__jule_tuple_s_1a756d63b_Log _1ac87a35a_buildSymbols(jule::Ptr<_1ac6c67a0_Ast>*, jule::Trait<_1ac7749e6_Importer>*, jule::Ptr<_1ac721421_symbolBuilder>);
inline __jule_tuple_x_1ac77a832_Package__jule_tuple_s_1a756d63b_Log _1ac87a7cd_analyzePackage(jule::Slice<jule::Ptr<_1ac6c67a0_Ast>>*, jule::Trait<_1ac7749e6_Importer>*, jule::I64*);
inline __jule_tuple_x_1ac77a832_Package__jule_tuple_s_1a756d63b_Log _1ac87ac0c_AnalyzePackage(jule::Slice<jule::Ptr<_1ac6c67a0_Ast>>, jule::Trait<_1ac7749e6_Importer>, jule::I64);
inline jule::Ptr<_1ac717170_FnIns> _1ac93b372_findBuiltinFunc(jule::Str*);
inline jule::Ptr<_1ac858c40_TypeAlias> _1ac93b680_primTypeAlias(jule::Ptr<_1ac859a32_TypeKind>*);
inline jule::Ptr<_1ac7bb015_Var> _1ac940288_findBuiltinVar(jule::Str*);
inline jule::Ptr<_1ac858c40_TypeAlias> _1ac9404b9_findBuiltinTypeAlias(jule::Str);
inline jule::Any _1ac940783_findBuiltinDef(jule::Str*);
inline jule::Any _1ac940a4c_findBuiltinDefStdDebug(jule::Str*);
inline jule::Any _1ac940d16_findBuiltinDefStdMem(jule::Str*);
inline jule::Any _1ac9411ac_findBuiltinDefStdComptime(jule::Str*);
inline jule::Any _1ac941476_findBuiltinDefStdJuleIntegrated(jule::Str*);
inline jule::Any _1ac9417ea_findPackageBuiltinDef(jule::Str*, jule::Str*);
inline jule::Ptr<_1ac8243ae_Data> _1ac941c29_builtinCallerCommonPlain(jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac94209d_builtinCallerError(jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac9424cc_builtinCallerOut(jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac94290b_builtinCallerOutln(jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac942d3a_builtinCallerNew(jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac943423_builtinCallerPanic(jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac943852_builtinCallerMake(jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac943c81_builtinCallerAppend(jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac94426a_callerCopySlice(jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac944699_builtinCallerCopy(jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac944a1d_callerLenSlice(jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac944d92_callerLenMap(jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac945216_callerLenArr(jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac94558a_callerLenStr(jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac94590e_callerLenComptime(jule::Ptr<_1ac8243ae_Data>*, jule::I64);
inline jule::Ptr<_1ac8243ae_Data> _1ac945d3d_builtinCallerLen(jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac9461b2_callerCapSlice(jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac9465e1_builtinCallerCap(jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac946aca_callerDeleteMap(jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*, jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac947009_builtinCallerDelete(jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac947438_builtinCallerAssert(jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac947a10_builtinCallerStdComptimeTypeOf(jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac947dc8_builtinCallerStdComptimeValueOf(jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac948307_builtinCallerStdComptimeLine(jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac948736_builtinCallerStdComptimeFile(jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac948b65_builtinCallerStdComptimeFiles(jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac949094_builtinCallerStdComptimeTypeAlias(jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac9494c3_builtinCallerStdMemSizeOf(jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac949902_builtinCallerStdMemAlignOf(jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac949d31_builtinCallerStdMemFree(jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac94a260_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac94a68e_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac94aabd_builtinCallerStdDebugOut(jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Ptr<_1ac8243ae_Data> _1ac94aeec_builtinCallerStdDebugOutln(jule::Ptr<_1ac8260a3_Eval>*, jule::Ptr<_1ac6d16de_FnCallExpr>*, jule::Ptr<_1ac8243ae_Data>*);
inline jule::Ptr<_1ad036351_FileInfo> _1ad1da69d_ParseFile(jule::Ptr<_1ac6b872b_File>);
inline __jule_tuple_x_1ac6c67a0_Ast__jule_tuple_s_1a756d63b_Log _1ad1dac75_parseFileset(jule::Ptr<_1ac6b872b_File>);
inline jule::Ptr<_1ac6d86a2_ScopeTree> _1ad1db715_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1ad1dba9a_isSt(jule::Ptr<_1ac6b2e62_Token>, jule::Ptr<_1ac6b2e62_Token>);
inline jule::Bool _1ad1dbe1e_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*, jule::I64*);
inline __jule_tuple_int__jule_tuple_bool _1ad1dc2d7_nextStPos(jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*, jule::I64);
inline __jule_tuple_sx_1ac6b2e62_Token__jule_tuple_bool _1ad1dc65b_skipSt(jule::I64*, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline jule::Slice<jule::Ptr<_1ad1dc98b_stmt>> _1ad1dcd43_splitStmts(jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Bool _1ad206499_isTypeOp(jule::U64*);
inline jule::Bool _1ad2067a7_isTypeRange(jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _1ad206a71_getBlockExpr(jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline __jule_tuple_sx_1ac6b2e62_Token__jule_tuple_sx_1ac6b2e62_Token _1ad206e39_splitDelim(jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*, jule::U64);
inline jule::I64 _1ad207203_findLowestPrecOp(jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Ptr<_1ac6ce3e0_IdentExpr> _1ad2074bc_buildIdentExpr(jule::Ptr<_1ac6b2e62_Token>*);
inline __jule_tuple_sx_1ac6b2e62_Token__jule_tuple_int _1ad207786_getRangeExprTokens(jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline jule::Bool _1ad20859a_checkAssignTokens(jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline _1a756d63b_Log _1ad209799_makeErr(jule::I64, jule::I64, jule::Ptr<_1ac6b872b_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _1ad209c94_range(jule::I64*, jule::U64, jule::U64, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline __jule_tuple_sx_1ac6b2e62_Token__jule_tuple_sx_1ac6b2e62_Token _1ad20a05d_rangeLast(jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*);
inline __jule_tuple_ssx_1ac6b2e62_Token__jule_tuple_s_1a756d63b_Log _1ad20a514_parts(jule::Slice<jule::Ptr<_1ac6b2e62_Token>>*, jule::U64, jule::Bool);
inline jule::U64 _1ad20a7cd_getCloseOfBrace(jule::U64);
inline _1a756d63b_Log _1ad20ac0c_compilerErr(jule::Ptr<_1ac6b2e62_Token>*, jule::Str*, jule::Slice<jule::Any>);
inline void _1ad20b0a3_pushSuggestion(_1a756d63b_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1ac6c8681_TypeDecl> _1ad21d00a_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _1ac9cd2e3_checkOs(jule::Str);
inline __jule_tuple_bool__jule_tuple_bool _1ac9cd436_checkArch(jule::Str);
inline jule::Bool _1ac9e7ce1_isPassFileAnnotation(jule::Str);
inline void _1ac9e8e68_setOsVars(jule::Slice<jule::Str>*);
inline void _1ac9e91dd_setArchVars(jule::Slice<jule::Str>*);
inline void _1ac9e94c9_initVars(jule::Slice<jule::Str>*, _1ac9e8b49_CompileInfo*);
inline jule::Slice<jule::U8> _1ad222141_readBuff(jule::Str);
inline _1a756d63b_Log _1ad22241b_flatCompilerErr(jule::Str);
inline void _1ad226c39_pushPasses(jule::Ptr<_1ac77a832_Package>*, jule::Slice<jule::Str>*);
inline jule::Slice<jule::Str> _1ad227102_getAllUniquePasses(jule::Ptr<_1ac77a832_Package>*, jule::Slice<jule::Ptr<_1ac77790b_ImportInfo>>);
inline _1ac9e8b49_CompileInfo _1ad227311_buildCompileInfo(void);
inline void _1ad3b1313_EliminateDefines(jule::Ptr<_1ad2253b9_IR>*);
inline jule::Ptr<_1ac6c7a9d_Directive> _1ad3b16cb_findDirective(jule::Slice<jule::Ptr<_1ac6c7a9d_Directive>>*, jule::Str);
inline jule::Bool _1ad3b1a50_hasDirective(jule::Slice<jule::Ptr<_1ac6c7a9d_Directive>>*, jule::Str);
inline jule::Bool _1ad3b1e18_isTraitMethod(jule::Ptr<_1ac702105_StructIns>*, jule::Ptr<_1ac717170_FnIns>*);
inline void _1ad3b5e1c_eliminateDeadCodeOfScope(jule::Ptr<_1ac756126_Scope>);
inline void _1ad3b6192_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1ac71426b_Fn>>*);
inline void _1ad3b63c3_eliminateFunctionsScopePackage(jule::Ptr<_1ac77a832_Package>*);
inline void _1ad3b667b_eliminateScopePackage(jule::Ptr<_1ac77a832_Package>*);
inline void _1ad3b68ac_EliminateScopes(jule::Ptr<_1ad2253b9_IR>*);
inline jule::Uintptr _1ac94b294_typeData(jule::Any*);
inline jule::Bool _1ac94b629_equalConst(jule::Ptr<_1a6cde8d5_Const>, jule::Ptr<_1a6cde8d5_Const>);
inline jule::Bool _1ac94b99d_equalCasting(jule::Ptr<_1ac707b33_CastingExprModel>, jule::Ptr<_1ac707b33_CastingExprModel>);
inline jule::Bool _1ac94bd66_equalUnary(jule::Ptr<_1ac7068ce_UnaryExprModel>, jule::Ptr<_1ac7068ce_UnaryExprModel>);
inline jule::Bool _1ac94c1da_equalIndexing(jule::Ptr<_1ac708d65_IndexingExprModel>, jule::Ptr<_1ac708d65_IndexingExprModel>);
inline jule::Bool _1ac94c55e_equalBinary(jule::Ptr<_1ac706505_BinaryExprModel>, jule::Ptr<_1ac706505_BinaryExprModel>);
inline jule::Bool _1ac94c8d3_equalModels(jule::Any, jule::Any);
inline jule::Bool _1ac955b94_isStdPackage(jule::Str*, jule::Str);
inline jule::Bool _1ac955ea2_isConstantValidConditionalCase(jule::Ptr<_1ac756544_If>*);
inline jule::Bool _1ac95626b_isUnreachableExpr(jule::Any*);
inline jule::Bool _1ac9565ac_isConstantValidMatchCase(jule::Ptr<_1ac75ad95_Case>*);
inline jule::Bool _1ac956876_isUnreachableConditionalCase(jule::Ptr<_1ac756544_If>*);
inline jule::Bool _1ac956b40_isUnreachableMatchCase(jule::Ptr<_1ac75ad95_Case>*);
inline __jule_tuple_bool__jule_tuple_u64 _1ac960929_checkForBitShiftOpt(jule::Ptr<_1ac70600a_OperandExprModel>*, jule::Ptr<_1ac70600a_OperandExprModel>*);
inline jule::Bool _1ac960ce2_areSameLvalueExprModel(jule::Any*, jule::Any*);
inline void _1ac96360d_PushOptLevel(jule::I64);
inline void _1ad3c0d8e_detectEnabled(void);
inline void _1ad3e9879_Throw(jule::Str);
inline jule::U64 _1ba9d2196_unix(void);
inline jule::Bool _1ad82d362_isCopyOptimizable(jule::Ptr<_1ac8243ae_Data>*);
inline jule::Bool _1ad82d72a_isIterCopyOptimizable(jule::Ptr<_1ac8243ae_Data>*, jule::Ptr<_1ac7bb015_Var>*);
inline jule::Str _1ad83d33e_decomposeCommonEsq(jule::U8);
inline jule::Str _1ad83d64c_sbtoa(jule::U8);
inline void _1ad83d938_cstrBytes(_1c164cc40_StrBuilder*, jule::Str);
inline void _1ad83dc68_cstrLit(_1c164cc40_StrBuilder*, jule::Str);
inline void _1ad83e10e_ftoa(_1c164cc40_StrBuilder*, jule::F64, jule::I64);
inline void _1ad83e3ea_itoa(_1c164cc40_StrBuilder*, jule::I64);
inline void _1ad83e6d6_utoa(_1c164cc40_StrBuilder*, jule::U64);
inline jule::Bool _1ad83eab0_isForwarded(jule::Ptr<_1ac756126_Scope>*);
inline jule::Bool _1ad83ed79_isExprComesFromBind(jule::Ptr<_1ac8243ae_Data>*);
inline jule::Bool _1ad840143_isAny(jule::Ptr<_1ac859a32_TypeKind>*);
inline void _1ba9e6793_iterFiles(jule::Ptr<_1ac77a832_Package>*, jule::Fn<void(jule::Ptr<_1ac81e013_SymbolTable>*)>);
inline jule::Slice<jule::U8> _1ba9e6aa1_concatAllParts(jule::Slice<jule::Ptr<_1ac6b2e62_Token>>);
inline jule::Bool _1ba9e6e25_containsTraitMethod(jule::Ptr<_1ac727548_Trait>*, jule::Str*);
inline void _1ba9e7255_pushMethodsFromInherit(jule::Ptr<_1ac727548_Trait>*, jule::Ptr<_1ac727548_Trait>*);
inline void _1ba9e7541_pushMethodsFromInherits(jule::Ptr<_1ac727548_Trait>*, jule::Ptr<_1ac727548_Trait>*);
inline jule::Bool _1ba9e780a_isOpMethod(jule::Ptr<_1ac71426b_Fn>*);
inline jule::Bool _1ba9e7ac4_isHeadDecl(jule::Ptr<_1ac71426b_Fn>*);
inline jule::Ptr<_1ac6c7a9d_Directive> _1baa06e8a_findDirective(jule::Slice<jule::Ptr<_1ac6c7a9d_Directive>>*, jule::Str);
inline jule::Bool _1baa07353_hasDirective(jule::Slice<jule::Ptr<_1ac6c7a9d_Directive>>*, jule::Str);
inline jule::Bool _1baa0761c_shouldInitialized(jule::Ptr<_1ac859a32_TypeKind>*);
inline void _1a763bd7a_printErrorMessage(jule::Str);
inline void _1a763c100_help(jule::Slice<jule::Str>*);
inline void _1a763c331_version(jule::Slice<jule::Str>*);
inline void _1a763c52e_toolDistos(void);
inline void _1a763c6a5_toolDistarch(void);
inline void _1a763c8d6_tool(jule::Slice<jule::Str>*);
inline void _1a763cb17_julenv(jule::Slice<jule::Str>*);
inline void _1a763ce25_mod(jule::Slice<jule::Str>*);
inline jule::Bool _1a763d1de_processCommand(jule::Slice<jule::Str>*);
inline void _1a763d365_showInfo(void);
void entry_point(void);
inline void _1a763dd27_enableVtp(void);
inline void _1a763dee2_init(void);
inline void _1baa73ee6_init(void);
inline jule::Ptr<_1d9e522d9_File> _1baa742c1_openOutput(jule::Str*);
inline void _1baa74447_clearObjects(void);
inline void _1baa74777_compileIr(jule::Str, jule::Str);
inline jule::Bool _1baa74a41_isCppSourceFile(jule::Str);
inline void _1baa74c72_pushCompCmdClang(_1c164cc40_StrBuilder*);
inline void _1baa74ea3_pushCompCmdGcc(_1c164cc40_StrBuilder*);
inline __jule_tuple_str__jule_tuple_str _1baa75437_genCompileCmd(jule::Str, jule::Ptr<_1ad2253b9_IR>*);
inline jule::Str _1baa75646_getCompilePath(void);
inline void _1baa75877_applyTargetIndependentOptimizations(jule::Ptr<_1ad2253b9_IR>*);
inline void _1baa759ed_checkCompilerFlag(void);
inline void _1baa75c2e_checkTargetArch(jule::Str);
inline void _1baa75e60_checkTargetOs(jule::Str);
inline void _1baa76191_checkTargetFlag(jule::Str*);
inline void _1baa763c2_checkOptFlag(jule::Str*);
inline void _1baa76757_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1baa769bb_checkFlags(jule::Slice<jule::Str>*);
inline void _1baa76bec_setupSemaFlags(jule::I64*);
inline jule::Ptr<_1ad2253b9_IR> _1baa76eb6_buildIr(jule::Slice<jule::Str>*);
inline void _1baa771e7_compileCommand(jule::Slice<jule::Str>*);


struct _1ac72e396_comptimeRangeKindMptrData {
	void(*_1ac72da8d_ready)(jule::Trait<_1ac72e396_comptimeRangeKind>, jule::Ptr<_1ac7bb015_Var>*, jule::Ptr<_1ac7bb015_Var>*);
	void(*_1ac72deab_step)(jule::Trait<_1ac72e396_comptimeRangeKind>, jule::I64, jule::Ptr<_1ac7bb015_Var>*, jule::Ptr<_1ac7bb015_Var>*);
	jule::I64(*_1ac72e242_len)(jule::Trait<_1ac72e396_comptimeRangeKind>);
};

struct _1ac7749e6_ImporterMptrData {
	void(*_1ac7737c5_SetModPath)(jule::Trait<_1ac7749e6_Importer>, jule::Str);
	jule::Str(*_1ac773a5b_GetModPath)(jule::Trait<_1ac7749e6_Importer>);
	jule::Str(*_1ac773d9c_ModById)(jule::Trait<_1ac7749e6_Importer>, jule::I64);
	jule::Ptr<_1ac77790b_ImportInfo>(*_1ac7741dd_GetImport)(jule::Trait<_1ac7749e6_Importer>, jule::Str);
	__jule_tuple_sx_1ac6c67a0_Ast__jule_tuple_s_1a756d63b_Log(*_1ac7745d9_ImportPackage)(jule::Trait<_1ac7749e6_Importer>, jule::Str, jule::Bool);
	void(*_1ac774892_Imported)(jule::Trait<_1ac7749e6_Importer>, jule::Ptr<_1ac77790b_ImportInfo>);
};

struct _1ac85957b_KindMptrData {
	jule::Str(*_1ac8590d6_Str)(jule::Trait<_1ac85957b_Kind>);
	jule::Bool(*_1ac859427_Equal)(jule::Trait<_1ac85957b_Kind>, jule::Ptr<_1ac859a32_TypeKind>);
};

struct _1ac879568_LookupMptrData {
	jule::Ptr<_1ac77790b_ImportInfo>(*_1ac877852_SelectPackage)(jule::Trait<_1ac879568_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_1ac77790b_ImportInfo>)>);
	jule::Ptr<_1ac7bb015_Var>(*_1ac877c4d_FindVar)(jule::Trait<_1ac879568_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1ac858c40_TypeAlias>(*_1ac878149_FindTypeAlias)(jule::Trait<_1ac879568_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1ac6ee377_Struct>(*_1ac878545_FindStruct)(jule::Trait<_1ac879568_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1ac71426b_Fn>(*_1ac878941_FindFn)(jule::Trait<_1ac879568_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1ac727548_Trait>(*_1ac878c82_FindTrait)(jule::Trait<_1ac879568_Lookup>, jule::Str);
	jule::Ptr<_1ac729c54_Enum>(*_1ac8790c3_FindEnum)(jule::Trait<_1ac879568_Lookup>, jule::Str);
	jule::Ptr<_1ac72b45e_TypeEnum>(*_1ac879414_FindTypeEnum)(jule::Trait<_1ac879568_Lookup>, jule::Str);
};

struct _1baa6bbe2_CommonFlagMptrData {
	jule::Str(*_1baa3adc0_Name)(jule::Trait<_1baa6bbe2_CommonFlag>);
	jule::I32(*_1baa3b013_Short)(jule::Trait<_1baa6bbe2_CommonFlag>);
	jule::Str(*_1baa6b95b_What)(jule::Trait<_1baa6bbe2_CommonFlag>);
	void(*_1baa6ba9e_Reset)(jule::Trait<_1baa6bbe2_CommonFlag>);
};



inline void _1ac72da8d_ready_comptimeRangeKind_0(jule::Trait<_1ac72e396_comptimeRangeKind> _self_, jule::Ptr<_1ac7bb015_Var>* _2429_keyA, jule::Ptr<_1ac7bb015_Var>* _2446_keyB) {
	_1ac732883_ready(_self_.safe_ptr<_1ac731c4a_comptimeStructFields>(), _2429_keyA, _2446_keyB);
}
inline void _1ac72deab_step_comptimeRangeKind_0(jule::Trait<_1ac72e396_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_1ac7bb015_Var>* _2536_keyA, jule::Ptr<_1ac7bb015_Var>* _2553_keyB) {
	_1ac732ca1_step(_self_.safe_ptr<_1ac731c4a_comptimeStructFields>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _1ac72e242_len_comptimeRangeKind_0(jule::Trait<_1ac72e396_comptimeRangeKind> _self_) {
	return _1ac733037_len(_self_.safe_ptr<_1ac731c4a_comptimeStructFields>());
}
inline void _1ac72da8d_ready_comptimeRangeKind_1(jule::Trait<_1ac72e396_comptimeRangeKind> _self_, jule::Ptr<_1ac7bb015_Var>* _2429_keyA, jule::Ptr<_1ac7bb015_Var>* _2446_keyB) {
	_1ac735b3e_ready(_self_.safe_ptr<_1ac735006_comptimeStatics>(), _2429_keyA, _2446_keyB);
}
inline void _1ac72deab_step_comptimeRangeKind_1(jule::Trait<_1ac72e396_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_1ac7bb015_Var>* _2536_keyA, jule::Ptr<_1ac7bb015_Var>* _2553_keyB) {
	_1ac73605c_step(_self_.safe_ptr<_1ac735006_comptimeStatics>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _1ac72e242_len_comptimeRangeKind_1(jule::Trait<_1ac72e396_comptimeRangeKind> _self_) {
	return _1ac7362e3_len(_self_.safe_ptr<_1ac735006_comptimeStatics>());
}
inline void _1ac72da8d_ready_comptimeRangeKind_2(jule::Trait<_1ac72e396_comptimeRangeKind> _self_, jule::Ptr<_1ac7bb015_Var>* _2429_keyA, jule::Ptr<_1ac7bb015_Var>* _2446_keyB) {
	_1ac7385d1_ready(_self_.safe_ptr<_1ac737998_comptimeEnumFields>(), _2429_keyA, _2446_keyB);
}
inline void _1ac72deab_step_comptimeRangeKind_2(jule::Trait<_1ac72e396_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_1ac7bb015_Var>* _2536_keyA, jule::Ptr<_1ac7bb015_Var>* _2553_keyB) {
	_1ac7389ee_step(_self_.safe_ptr<_1ac737998_comptimeEnumFields>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _1ac72e242_len_comptimeRangeKind_2(jule::Trait<_1ac72e396_comptimeRangeKind> _self_) {
	return _1ac738c85_len(_self_.safe_ptr<_1ac737998_comptimeEnumFields>());
}
inline void _1ac72da8d_ready_comptimeRangeKind_3(jule::Trait<_1ac72e396_comptimeRangeKind> _self_, jule::Ptr<_1ac7bb015_Var>* _2429_keyA, jule::Ptr<_1ac7bb015_Var>* _2446_keyB) {
	_1ac73be42_ready(_self_.safe_ptr<_1ac73b309_comptimeParams>(), _2429_keyA, _2446_keyB);
}
inline void _1ac72deab_step_comptimeRangeKind_3(jule::Trait<_1ac72e396_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_1ac7bb015_Var>* _2536_keyA, jule::Ptr<_1ac7bb015_Var>* _2553_keyB) {
	_1ac73c360_step(_self_.safe_ptr<_1ac73b309_comptimeParams>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _1ac72e242_len_comptimeRangeKind_3(jule::Trait<_1ac72e396_comptimeRangeKind> _self_) {
	return _1ac73c5e6_len(_self_.safe_ptr<_1ac73b309_comptimeParams>());
}
inline void _1ac72da8d_ready_comptimeRangeKind_4(jule::Trait<_1ac72e396_comptimeRangeKind> _self_, jule::Ptr<_1ac7bb015_Var>* _2429_keyA, jule::Ptr<_1ac7bb015_Var>* _2446_keyB) {
	_1ac73d53c_ready(_self_.safe_ptr<_1ac73c904_comptimeTypeInfos>(), _2429_keyA, _2446_keyB);
}
inline void _1ac72deab_step_comptimeRangeKind_4(jule::Trait<_1ac72e396_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_1ac7bb015_Var>* _2536_keyA, jule::Ptr<_1ac7bb015_Var>* _2553_keyB) {
	_1ac73d95a_step(_self_.safe_ptr<_1ac73c904_comptimeTypeInfos>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _1ac72e242_len_comptimeRangeKind_4(jule::Trait<_1ac72e396_comptimeRangeKind> _self_) {
	return _1ac73dbe1_len(_self_.safe_ptr<_1ac73c904_comptimeTypeInfos>());
}
inline void _1ac72da8d_ready_comptimeRangeKind_5(jule::Trait<_1ac72e396_comptimeRangeKind> _self_, jule::Ptr<_1ac7bb015_Var>* _2429_keyA, jule::Ptr<_1ac7bb015_Var>* _2446_keyB) {
	_1ac748998_ready(_self_.safe_ptr<_1ac747d60_comptimeFiles>(), _2429_keyA, _2446_keyB);
}
inline void _1ac72deab_step_comptimeRangeKind_5(jule::Trait<_1ac72e396_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_1ac7bb015_Var>* _2536_keyA, jule::Ptr<_1ac7bb015_Var>* _2553_keyB) {
	_1ac748db6_step(_self_.safe_ptr<_1ac747d60_comptimeFiles>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _1ac72e242_len_comptimeRangeKind_5(jule::Trait<_1ac72e396_comptimeRangeKind> _self_) {
	return _1ac74914c_len(_self_.safe_ptr<_1ac747d60_comptimeFiles>());
}
inline void _1ac7737c5_SetModPath_Importer_0(jule::Trait<_1ac7749e6_Importer> _self_, jule::Str _1729_path) {
	_1ad2234c7_SetModPath(_self_.safe_ptr<_1ad222905_JuleImporter>(), _1729_path);
}
inline jule::Str _1ac773a5b_GetModPath_Importer_0(jule::Trait<_1ac7749e6_Importer> _self_) {
	return _1ad22375d_GetModPath(_self_.safe_ptr<_1ad222905_JuleImporter>());
}
inline jule::Str _1ac773d9c_ModById_Importer_0(jule::Trait<_1ac7749e6_Importer> _self_, jule::I64 _2522_id) {
	return _1ad223a9e_ModById(_self_.safe_ptr<_1ad222905_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_1ac77790b_ImportInfo> _1ac7741dd_GetImport_Importer_0(jule::Trait<_1ac7749e6_Importer> _self_, jule::Str _3128_path) {
	return _1ad223de0_GetImport(_self_.safe_ptr<_1ad222905_JuleImporter>(), _3128_path);
}
inline __jule_tuple_sx_1ac6c67a0_Ast__jule_tuple_s_1a756d63b_Log _1ac7745d9_ImportPackage_Importer_0(jule::Trait<_1ac7749e6_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _1ad2242db_ImportPackage(_self_.safe_ptr<_1ad222905_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _1ac774892_Imported_Importer_0(jule::Trait<_1ac7749e6_Importer> _self_, jule::Ptr<_1ac77790b_ImportInfo> _4131__0) {
	_1ad224594_Imported(_self_.safe_ptr<_1ad222905_JuleImporter>(), _4131__0);
}
inline jule::Str _1ac8590d6_Str_Kind_0(jule::Trait<_1ac85957b_Kind> _self_) {
	return _1ac702479_Str(_self_.safe_ptr<_1ac702105_StructIns>());
}
inline jule::Bool _1ac859427_Equal_Kind_0(jule::Trait<_1ac85957b_Kind> _self_, jule::Ptr<_1ac859a32_TypeKind> _5621_other) {
	return _1ac7027ba_Equal(_self_.data.as<_1ac702105_StructIns>(), _5621_other);
}
inline jule::Str _1ac8590d6_Str_Kind_1(jule::Trait<_1ac85957b_Kind> _self_) {
	return _1ac7174b1_Str(_self_.safe_ptr<_1ac717170_FnIns>());
}
inline jule::Bool _1ac859427_Equal_Kind_1(jule::Trait<_1ac85957b_Kind> _self_, jule::Ptr<_1ac859a32_TypeKind> _5621_other) {
	return _1ac717802_Equal(_self_.data.as<_1ac717170_FnIns>(), _5621_other);
}
inline jule::Str _1ac8590d6_Str_Kind_2(jule::Trait<_1ac85957b_Kind> _self_) {
	return _1ac727911_Str(_self_.safe_ptr<_1ac727548_Trait>());
}
inline jule::Bool _1ac859427_Equal_Kind_2(jule::Trait<_1ac85957b_Kind> _self_, jule::Ptr<_1ac859a32_TypeKind> _5621_other) {
	return _1ac727c52_Equal(_self_.data.as<_1ac727548_Trait>(), _5621_other);
}
inline jule::Str _1ac8590d6_Str_Kind_3(jule::Trait<_1ac85957b_Kind> _self_) {
	return _1ac72a0c8_Str(_self_.safe_ptr<_1ac729c54_Enum>());
}
inline jule::Bool _1ac859427_Equal_Kind_3(jule::Trait<_1ac85957b_Kind> _self_, jule::Ptr<_1ac859a32_TypeKind> _5621_other) {
	return _1ac72a419_Equal(_self_.data.as<_1ac729c54_Enum>(), _5621_other);
}
inline jule::Str _1ac8590d6_Str_Kind_4(jule::Trait<_1ac85957b_Kind> _self_) {
	return _1ac72b7a0_Str(_self_.safe_ptr<_1ac72b45e_TypeEnum>());
}
inline jule::Bool _1ac859427_Equal_Kind_4(jule::Trait<_1ac85957b_Kind> _self_, jule::Ptr<_1ac859a32_TypeKind> _5621_other) {
	return _1ac72bae1_Equal(_self_.data.as<_1ac72b45e_TypeEnum>(), _5621_other);
}
inline jule::Str _1ac8590d6_Str_Kind_5(jule::Trait<_1ac85957b_Kind> _self_) {
	return _1ac72e93a_Str(_self_.safe_ptr<_1ac72e5b6_comptimeRange>());
}
inline jule::Bool _1ac859427_Equal_Kind_5(jule::Trait<_1ac85957b_Kind> _self_, jule::Ptr<_1ac859a32_TypeKind> _5621_other) {
	return _1ac72ec7b_Equal(_self_.data.as<_1ac72e5b6_comptimeRange>(), _5621_other);
}
inline jule::Str _1ac8590d6_Str_Kind_6(jule::Trait<_1ac85957b_Kind> _self_) {
	return _1ac730452_Str(_self_.safe_ptr<_1ac730089_comptimeStructField>());
}
inline jule::Bool _1ac859427_Equal_Kind_6(jule::Trait<_1ac85957b_Kind> _self_, jule::Ptr<_1ac859a32_TypeKind> _5621_other) {
	return _1ac730793_Equal(_self_.data.as<_1ac730089_comptimeStructField>(), _5621_other);
}
inline jule::Str _1ac8590d6_Str_Kind_7(jule::Trait<_1ac85957b_Kind> _self_) {
	return _1ac7320be_Str(_self_.safe_ptr<_1ac731c4a_comptimeStructFields>());
}
inline jule::Bool _1ac859427_Equal_Kind_7(jule::Trait<_1ac85957b_Kind> _self_, jule::Ptr<_1ac859a32_TypeKind> _5621_other) {
	return _1ac732410_Equal(_self_.data.as<_1ac731c4a_comptimeStructFields>(), _5621_other);
}
inline jule::Str _1ac8590d6_Str_Kind_8(jule::Trait<_1ac85957b_Kind> _self_) {
	return _1ac7336b9_Str(_self_.safe_ptr<_1ac733345_comptimeStatic>());
}
inline jule::Bool _1ac859427_Equal_Kind_8(jule::Trait<_1ac85957b_Kind> _self_, jule::Ptr<_1ac859a32_TypeKind> _5621_other) {
	return _1ac733a0a_Equal(_self_.data.as<_1ac733345_comptimeStatic>(), _5621_other);
}
inline jule::Str _1ac8590d6_Str_Kind_9(jule::Trait<_1ac85957b_Kind> _self_) {
	return _1ac73537a_Str(_self_.safe_ptr<_1ac735006_comptimeStatics>());
}
inline jule::Bool _1ac859427_Equal_Kind_9(jule::Trait<_1ac85957b_Kind> _self_, jule::Ptr<_1ac859a32_TypeKind> _5621_other) {
	return _1ac7356bb_Equal(_self_.data.as<_1ac735006_comptimeStatics>(), _5621_other);
}
inline jule::Str _1ac8590d6_Str_Kind_10(jule::Trait<_1ac85957b_Kind> _self_) {
	return _1ac736a85_Str(_self_.safe_ptr<_1ac736601_comptimeEnumField>());
}
inline jule::Bool _1ac859427_Equal_Kind_10(jule::Trait<_1ac85957b_Kind> _self_, jule::Ptr<_1ac859a32_TypeKind> _5621_other) {
	return _1ac736dc6_Equal(_self_.data.as<_1ac736601_comptimeEnumField>(), _5621_other);
}
inline jule::Str _1ac8590d6_Str_Kind_11(jule::Trait<_1ac85957b_Kind> _self_) {
	return _1ac737d1c_Str(_self_.safe_ptr<_1ac737998_comptimeEnumFields>());
}
inline jule::Bool _1ac859427_Equal_Kind_11(jule::Trait<_1ac85957b_Kind> _self_, jule::Ptr<_1ac859a32_TypeKind> _5621_other) {
	return _1ac73815d_Equal(_self_.data.as<_1ac737998_comptimeEnumFields>(), _5621_other);
}
inline jule::Str _1ac8590d6_Str_Kind_12(jule::Trait<_1ac85957b_Kind> _self_) {
	return _1ac739417_Str(_self_.safe_ptr<_1ac739093_comptimeParam>());
}
inline jule::Bool _1ac859427_Equal_Kind_12(jule::Trait<_1ac85957b_Kind> _self_, jule::Ptr<_1ac859a32_TypeKind> _5621_other) {
	return _1ac739758_Equal(_self_.data.as<_1ac739093_comptimeParam>(), _5621_other);
}
inline jule::Str _1ac8590d6_Str_Kind_13(jule::Trait<_1ac85957b_Kind> _self_) {
	return _1ac73b67d_Str(_self_.safe_ptr<_1ac73b309_comptimeParams>());
}
inline jule::Bool _1ac859427_Equal_Kind_13(jule::Trait<_1ac85957b_Kind> _self_, jule::Ptr<_1ac859a32_TypeKind> _5621_other) {
	return _1ac73b9be_Equal(_self_.data.as<_1ac73b309_comptimeParams>(), _5621_other);
}
inline jule::Str _1ac8590d6_Str_Kind_14(jule::Trait<_1ac85957b_Kind> _self_) {
	return _1ac73cc78_Str(_self_.safe_ptr<_1ac73c904_comptimeTypeInfos>());
}
inline jule::Bool _1ac859427_Equal_Kind_14(jule::Trait<_1ac85957b_Kind> _self_, jule::Ptr<_1ac859a32_TypeKind> _5621_other) {
	return _1ac73d0b9_Equal(_self_.data.as<_1ac73c904_comptimeTypeInfos>(), _5621_other);
}
inline jule::Str _1ac8590d6_Str_Kind_15(jule::Trait<_1ac85957b_Kind> _self_) {
	return _1ac73e373_Str(_self_.safe_ptr<_1ac73deee_comptimeTypeInfo>());
}
inline jule::Bool _1ac859427_Equal_Kind_15(jule::Trait<_1ac85957b_Kind> _self_, jule::Ptr<_1ac859a32_TypeKind> _5621_other) {
	return _1ac73e6b4_Equal(_self_.data.as<_1ac73deee_comptimeTypeInfo>(), _5621_other);
}
inline jule::Str _1ac8590d6_Str_Kind_16(jule::Trait<_1ac85957b_Kind> _self_) {
	return _1ac745885_Str(_self_.safe_ptr<_1ac745511_comptimeValue>());
}
inline jule::Bool _1ac859427_Equal_Kind_16(jule::Trait<_1ac85957b_Kind> _self_, jule::Ptr<_1ac859a32_TypeKind> _5621_other) {
	return _1ac745bc6_Equal(_self_.data.as<_1ac745511_comptimeValue>(), _5621_other);
}
inline jule::Str _1ac8590d6_Str_Kind_17(jule::Trait<_1ac85957b_Kind> _self_) {
	return _1ac7481d4_Str(_self_.safe_ptr<_1ac747d60_comptimeFiles>());
}
inline jule::Bool _1ac859427_Equal_Kind_17(jule::Trait<_1ac85957b_Kind> _self_, jule::Ptr<_1ac859a32_TypeKind> _5621_other) {
	return _1ac748525_Equal(_self_.data.as<_1ac747d60_comptimeFiles>(), _5621_other);
}
inline jule::Str _1ac8590d6_Str_Kind_18(jule::Trait<_1ac85957b_Kind> _self_) {
	return _1ac749900_Str(_self_.safe_ptr<_1ac74945a_comptimeFile>());
}
inline jule::Bool _1ac859427_Equal_Kind_18(jule::Trait<_1ac85957b_Kind> _self_, jule::Ptr<_1ac859a32_TypeKind> _5621_other) {
	return _1ac749c41_Equal(_self_.data.as<_1ac74945a_comptimeFile>(), _5621_other);
}
inline jule::Str _1ac8590d6_Str_Kind_19(jule::Trait<_1ac85957b_Kind> _self_) {
	return _1ac859dea_Str(_self_.safe_ptr<_1ac859a32_TypeKind>());
}
inline jule::Bool _1ac859427_Equal_Kind_19(jule::Trait<_1ac85957b_Kind> _self_, jule::Ptr<_1ac859a32_TypeKind> _5621_other) {
	return _1ac85a23b_Equal(_self_.data.as<_1ac859a32_TypeKind>(), _5621_other);
}
inline jule::Str _1ac8590d6_Str_Kind_20(jule::Trait<_1ac85957b_Kind> _self_) {
	return _1ac86294c_Str(_self_.safe_ptr<_1ac86260b_Prim>());
}
inline jule::Bool _1ac859427_Equal_Kind_20(jule::Trait<_1ac85957b_Kind> _self_, jule::Ptr<_1ac859a32_TypeKind> _5621_other) {
	return _1ac862c8d_Equal(_self_.data.as<_1ac86260b_Prim>(), _5621_other);
}
inline jule::Str _1ac8590d6_Str_Kind_21(jule::Trait<_1ac85957b_Kind> _self_) {
	return _1ac8664ab_Str(_self_.safe_ptr<_1ac866137_Sptr>());
}
inline jule::Bool _1ac859427_Equal_Kind_21(jule::Trait<_1ac85957b_Kind> _self_, jule::Ptr<_1ac859a32_TypeKind> _5621_other) {
	return _1ac8667ec_Equal(_self_.data.as<_1ac866137_Sptr>(), _5621_other);
}
inline jule::Str _1ac8590d6_Str_Kind_22(jule::Trait<_1ac85957b_Kind> _self_) {
	return _1ac86708e_Str(_self_.safe_ptr<_1ac866b0a_Slc>());
}
inline jule::Bool _1ac859427_Equal_Kind_22(jule::Trait<_1ac85957b_Kind> _self_, jule::Ptr<_1ac859a32_TypeKind> _5621_other) {
	return _1ac8673d0_Equal(_self_.data.as<_1ac866b0a_Slc>(), _5621_other);
}
inline jule::Str _1ac8590d6_Str_Kind_23(jule::Trait<_1ac85957b_Kind> _self_) {
	return _1ac867a73_Str(_self_.safe_ptr<_1ac8676ee_Tuple>());
}
inline jule::Bool _1ac859427_Equal_Kind_23(jule::Trait<_1ac85957b_Kind> _self_, jule::Ptr<_1ac859a32_TypeKind> _5621_other) {
	return _1ac867db4_Equal(_self_.data.as<_1ac8676ee_Tuple>(), _5621_other);
}
inline jule::Str _1ac8590d6_Str_Kind_24(jule::Trait<_1ac85957b_Kind> _self_) {
	return _1ac868623_Str(_self_.safe_ptr<_1ac86829e_Map>());
}
inline jule::Bool _1ac859427_Equal_Kind_24(jule::Trait<_1ac85957b_Kind> _self_, jule::Ptr<_1ac859a32_TypeKind> _5621_other) {
	return _1ac868964_Equal(_self_.data.as<_1ac86829e_Map>(), _5621_other);
}
inline jule::Str _1ac8590d6_Str_Kind_25(jule::Trait<_1ac85957b_Kind> _self_) {
	return _1ac8692a0_Str(_self_.safe_ptr<_1ac868e2b_Arr>());
}
inline jule::Bool _1ac859427_Equal_Kind_25(jule::Trait<_1ac85957b_Kind> _self_, jule::Ptr<_1ac859a32_TypeKind> _5621_other) {
	return _1ac8695e1_Equal(_self_.data.as<_1ac868e2b_Arr>(), _5621_other);
}
inline jule::Str _1ac8590d6_Str_Kind_26(jule::Trait<_1ac85957b_Kind> _self_) {
	return _1ac869c73_Str(_self_.safe_ptr<_1ac8698ee_Ptr>());
}
inline jule::Bool _1ac859427_Equal_Kind_26(jule::Trait<_1ac85957b_Kind> _self_, jule::Ptr<_1ac859a32_TypeKind> _5621_other) {
	return _1ac86a0b4_Equal(_self_.data.as<_1ac8698ee_Ptr>(), _5621_other);
}
inline jule::Str _1ac8590d6_Str_Kind_27(jule::Trait<_1ac85957b_Kind> _self_) {
	return _1ba9e9048_Str(_self_.safe_ptr<_1ba9e8ba2_customType>());
}
inline jule::Bool _1ac859427_Equal_Kind_27(jule::Trait<_1ac85957b_Kind> _self_, jule::Ptr<_1ac859a32_TypeKind> _5621_other) {
	return _1ba9e9389_Equal(_self_.data.as<_1ba9e8ba2_customType>(), _5621_other);
}
inline jule::Ptr<_1ac77790b_ImportInfo> _1ac877852_SelectPackage_Lookup_0(jule::Trait<_1ac879568_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1ac77790b_ImportInfo>)> _932_selector) {
	return _1ac75d8c0_SelectPackage(_self_.safe_ptr<_1ac75d42a_scopeChecker>(), _932_selector);
}
inline jule::Ptr<_1ac7bb015_Var> _1ac877c4d_FindVar_Lookup_0(jule::Trait<_1ac879568_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1ac75dcbb_FindVar(_self_.safe_ptr<_1ac75d42a_scopeChecker>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1ac858c40_TypeAlias> _1ac878149_FindTypeAlias_Lookup_0(jule::Trait<_1ac879568_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1ac75e1b7_FindTypeAlias(_self_.safe_ptr<_1ac75d42a_scopeChecker>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1ac6ee377_Struct> _1ac878545_FindStruct_Lookup_0(jule::Trait<_1ac879568_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1ac75e5b3_FindStruct(_self_.safe_ptr<_1ac75d42a_scopeChecker>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1ac71426b_Fn> _1ac878941_FindFn_Lookup_0(jule::Trait<_1ac879568_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1ac75e9ae_FindFn(_self_.safe_ptr<_1ac75d42a_scopeChecker>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1ac727548_Trait> _1ac878c82_FindTrait_Lookup_0(jule::Trait<_1ac879568_Lookup> _self_, jule::Str _2928_ident) {
	return _1ac75ed00_FindTrait(_self_.safe_ptr<_1ac75d42a_scopeChecker>(), _2928_ident);
}
inline jule::Ptr<_1ac729c54_Enum> _1ac8790c3_FindEnum_Lookup_0(jule::Trait<_1ac879568_Lookup> _self_, jule::Str _3327_ident) {
	return _1ac760141_FindEnum(_self_.safe_ptr<_1ac75d42a_scopeChecker>(), _3327_ident);
}
inline jule::Ptr<_1ac72b45e_TypeEnum> _1ac879414_FindTypeEnum_Lookup_0(jule::Trait<_1ac879568_Lookup> _self_, jule::Str _3731_ident) {
	return _1ac760482_FindTypeEnum(_self_.safe_ptr<_1ac75d42a_scopeChecker>(), _3731_ident);
}
inline jule::Ptr<_1ac77790b_ImportInfo> _1ac877852_SelectPackage_Lookup_1(jule::Trait<_1ac879568_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1ac77790b_ImportInfo>)> _932_selector) {
	return _1ac777de5_SelectPackage(_self_.safe_ptr<_1ac77790b_ImportInfo>(), _932_selector);
}
inline jule::Ptr<_1ac7bb015_Var> _1ac877c4d_FindVar_Lookup_1(jule::Trait<_1ac879568_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1ac7782e1_FindVar(_self_.safe_ptr<_1ac77790b_ImportInfo>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1ac858c40_TypeAlias> _1ac878149_FindTypeAlias_Lookup_1(jule::Trait<_1ac879568_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1ac7786dc_FindTypeAlias(_self_.safe_ptr<_1ac77790b_ImportInfo>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1ac6ee377_Struct> _1ac878545_FindStruct_Lookup_1(jule::Trait<_1ac879568_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1ac778ad8_FindStruct(_self_.safe_ptr<_1ac77790b_ImportInfo>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1ac71426b_Fn> _1ac878941_FindFn_Lookup_1(jule::Trait<_1ac879568_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1ac778ed4_FindFn(_self_.safe_ptr<_1ac77790b_ImportInfo>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1ac727548_Trait> _1ac878c82_FindTrait_Lookup_1(jule::Trait<_1ac879568_Lookup> _self_, jule::Str _2928_ident) {
	return _1ac779325_FindTrait(_self_.safe_ptr<_1ac77790b_ImportInfo>(), _2928_ident);
}
inline jule::Ptr<_1ac729c54_Enum> _1ac8790c3_FindEnum_Lookup_1(jule::Trait<_1ac879568_Lookup> _self_, jule::Str _3327_ident) {
	return _1ac779666_FindEnum(_self_.safe_ptr<_1ac77790b_ImportInfo>(), _3327_ident);
}
inline jule::Ptr<_1ac72b45e_TypeEnum> _1ac879414_FindTypeEnum_Lookup_1(jule::Trait<_1ac879568_Lookup> _self_, jule::Str _3731_ident) {
	return _1ac7799a7_FindTypeEnum(_self_.safe_ptr<_1ac77790b_ImportInfo>(), _3731_ident);
}
inline jule::Ptr<_1ac77790b_ImportInfo> _1ac877852_SelectPackage_Lookup_2(jule::Trait<_1ac879568_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1ac77790b_ImportInfo>)> _932_selector) {
	return _1ac77acc7_SelectPackage(_self_.safe_ptr<_1ac77a832_Package>(), _932_selector);
}
inline jule::Ptr<_1ac7bb015_Var> _1ac877c4d_FindVar_Lookup_2(jule::Trait<_1ac879568_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1ac77b1c3_FindVar(_self_.safe_ptr<_1ac77a832_Package>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1ac858c40_TypeAlias> _1ac878149_FindTypeAlias_Lookup_2(jule::Trait<_1ac879568_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1ac77b5be_FindTypeAlias(_self_.safe_ptr<_1ac77a832_Package>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1ac6ee377_Struct> _1ac878545_FindStruct_Lookup_2(jule::Trait<_1ac879568_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1ac77b9ba_FindStruct(_self_.safe_ptr<_1ac77a832_Package>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1ac71426b_Fn> _1ac878941_FindFn_Lookup_2(jule::Trait<_1ac879568_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1ac77bdb6_FindFn(_self_.safe_ptr<_1ac77a832_Package>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1ac727548_Trait> _1ac878c82_FindTrait_Lookup_2(jule::Trait<_1ac879568_Lookup> _self_, jule::Str _2928_ident) {
	return _1ac77c207_FindTrait(_self_.safe_ptr<_1ac77a832_Package>(), _2928_ident);
}
inline jule::Ptr<_1ac729c54_Enum> _1ac8790c3_FindEnum_Lookup_2(jule::Trait<_1ac879568_Lookup> _self_, jule::Str _3327_ident) {
	return _1ac77c548_FindEnum(_self_.safe_ptr<_1ac77a832_Package>(), _3327_ident);
}
inline jule::Ptr<_1ac72b45e_TypeEnum> _1ac879414_FindTypeEnum_Lookup_2(jule::Trait<_1ac879568_Lookup> _self_, jule::Str _3731_ident) {
	return _1ac77c889_FindTypeEnum(_self_.safe_ptr<_1ac77a832_Package>(), _3731_ident);
}
inline jule::Ptr<_1ac77790b_ImportInfo> _1ac877852_SelectPackage_Lookup_3(jule::Trait<_1ac879568_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1ac77790b_ImportInfo>)> _932_selector) {
	return _1ac798223_SelectPackage(_self_.safe_ptr<_1ac797c7d_Sema>(), _932_selector);
}
inline jule::Ptr<_1ac7bb015_Var> _1ac877c4d_FindVar_Lookup_3(jule::Trait<_1ac879568_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1ac79861e_FindVar(_self_.safe_ptr<_1ac797c7d_Sema>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1ac858c40_TypeAlias> _1ac878149_FindTypeAlias_Lookup_3(jule::Trait<_1ac879568_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1ac798a1a_FindTypeAlias(_self_.safe_ptr<_1ac797c7d_Sema>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1ac6ee377_Struct> _1ac878545_FindStruct_Lookup_3(jule::Trait<_1ac879568_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1ac798e16_FindStruct(_self_.safe_ptr<_1ac797c7d_Sema>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1ac71426b_Fn> _1ac878941_FindFn_Lookup_3(jule::Trait<_1ac879568_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1ac799312_FindFn(_self_.safe_ptr<_1ac797c7d_Sema>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1ac727548_Trait> _1ac878c82_FindTrait_Lookup_3(jule::Trait<_1ac879568_Lookup> _self_, jule::Str _2928_ident) {
	return _1ac799653_FindTrait(_self_.safe_ptr<_1ac797c7d_Sema>(), _2928_ident);
}
inline jule::Ptr<_1ac729c54_Enum> _1ac8790c3_FindEnum_Lookup_3(jule::Trait<_1ac879568_Lookup> _self_, jule::Str _3327_ident) {
	return _1ac799994_FindEnum(_self_.safe_ptr<_1ac797c7d_Sema>(), _3327_ident);
}
inline jule::Ptr<_1ac72b45e_TypeEnum> _1ac879414_FindTypeEnum_Lookup_3(jule::Trait<_1ac879568_Lookup> _self_, jule::Str _3731_ident) {
	return _1ac799cd5_FindTypeEnum(_self_.safe_ptr<_1ac797c7d_Sema>(), _3731_ident);
}
inline jule::Ptr<_1ac77790b_ImportInfo> _1ac877852_SelectPackage_Lookup_4(jule::Trait<_1ac879568_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1ac77790b_ImportInfo>)> _932_selector) {
	return _1ac81e4ec_SelectPackage(_self_.safe_ptr<_1ac81e013_SymbolTable>(), _932_selector);
}
inline jule::Ptr<_1ac7bb015_Var> _1ac877c4d_FindVar_Lookup_4(jule::Trait<_1ac879568_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1ac81e8e8_FindVar(_self_.safe_ptr<_1ac81e013_SymbolTable>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1ac858c40_TypeAlias> _1ac878149_FindTypeAlias_Lookup_4(jule::Trait<_1ac879568_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1ac81ece4_FindTypeAlias(_self_.safe_ptr<_1ac81e013_SymbolTable>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1ac6ee377_Struct> _1ac878545_FindStruct_Lookup_4(jule::Trait<_1ac879568_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1ac8201e0_FindStruct(_self_.safe_ptr<_1ac81e013_SymbolTable>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1ac71426b_Fn> _1ac878941_FindFn_Lookup_4(jule::Trait<_1ac879568_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1ac8205db_FindFn(_self_.safe_ptr<_1ac81e013_SymbolTable>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1ac727548_Trait> _1ac878c82_FindTrait_Lookup_4(jule::Trait<_1ac879568_Lookup> _self_, jule::Str _2928_ident) {
	return _1ac82092c_FindTrait(_self_.safe_ptr<_1ac81e013_SymbolTable>(), _2928_ident);
}
inline jule::Ptr<_1ac729c54_Enum> _1ac8790c3_FindEnum_Lookup_4(jule::Trait<_1ac879568_Lookup> _self_, jule::Str _3327_ident) {
	return _1ac820c6d_FindEnum(_self_.safe_ptr<_1ac81e013_SymbolTable>(), _3327_ident);
}
inline jule::Ptr<_1ac72b45e_TypeEnum> _1ac879414_FindTypeEnum_Lookup_4(jule::Trait<_1ac879568_Lookup> _self_, jule::Str _3731_ident) {
	return _1ac8210ae_FindTypeEnum(_self_.safe_ptr<_1ac81e013_SymbolTable>(), _3731_ident);
}
inline jule::Str _1baa3adc0_Name_CommonFlag_0(jule::Trait<_1baa6bbe2_CommonFlag> _self_) {
	return _1bba9096d_Name(_self_.safe_ptr<_1bba8e86d_Flag>());
}
inline jule::I32 _1baa3b013_Short_CommonFlag_0(jule::Trait<_1baa6bbe2_CommonFlag> _self_) {
	return _1bba9208a_Short(_self_.safe_ptr<_1bba8e86d_Flag>());
}
inline jule::Str _1baa6b95b_What_CommonFlag_0(jule::Trait<_1baa6bbe2_CommonFlag> _self_) {
	return _1bba90ab1_What(_self_.safe_ptr<_1bba8e86d_Flag>());
}
inline void _1baa6ba9e_Reset_CommonFlag_0(jule::Trait<_1baa6bbe2_CommonFlag> _self_) {
	_1bba91e47_Reset(_self_.safe_ptr<_1bba8e86d_Flag>());
}
inline jule::Str _1baa3adc0_Name_CommonFlag_1(jule::Trait<_1baa6bbe2_CommonFlag> _self_) {
	return _1bba96259_Name(_self_.safe_ptr<_1bba96633_Flag>());
}
inline jule::I32 _1baa3b013_Short_CommonFlag_1(jule::Trait<_1baa6bbe2_CommonFlag> _self_) {
	return _1bba96ba5_Short(_self_.safe_ptr<_1bba96633_Flag>());
}
inline jule::Str _1baa6b95b_What_CommonFlag_1(jule::Trait<_1baa6bbe2_CommonFlag> _self_) {
	return _1bba9691e_What(_self_.safe_ptr<_1bba96633_Flag>());
}
inline void _1baa6ba9e_Reset_CommonFlag_1(jule::Trait<_1baa6bbe2_CommonFlag> _self_) {
	_1bba96a62_Reset(_self_.safe_ptr<_1bba96633_Flag>());
}
inline jule::Str _1baa3adc0_Name_CommonFlag_2(jule::Trait<_1baa6bbe2_CommonFlag> _self_) {
	return _1bba99955_Name(_self_.safe_ptr<_1bba99d2e_Flag>());
}
inline jule::I32 _1baa3b013_Short_CommonFlag_2(jule::Trait<_1baa6bbe2_CommonFlag> _self_) {
	return _1bba9a3a1_Short(_self_.safe_ptr<_1bba99d2e_Flag>());
}
inline jule::Str _1baa6b95b_What_CommonFlag_2(jule::Trait<_1baa6bbe2_CommonFlag> _self_) {
	return _1bba9a11a_What(_self_.safe_ptr<_1bba99d2e_Flag>());
}
inline void _1baa6ba9e_Reset_CommonFlag_2(jule::Trait<_1baa6bbe2_CommonFlag> _self_) {
	_1bba9a25d_Reset(_self_.safe_ptr<_1bba99d2e_Flag>());
}
inline jule::Str _1baa3adc0_Name_CommonFlag_3(jule::Trait<_1baa6bbe2_CommonFlag> _self_) {
	return _1bba9d195_Name(_self_.safe_ptr<_1bba9d56e_Flag>());
}
inline jule::I32 _1baa3b013_Short_CommonFlag_3(jule::Trait<_1baa6bbe2_CommonFlag> _self_) {
	return _1bba9dae1_Short(_self_.safe_ptr<_1bba9d56e_Flag>());
}
inline jule::Str _1baa6b95b_What_CommonFlag_3(jule::Trait<_1baa6bbe2_CommonFlag> _self_) {
	return _1bba9d85a_What(_self_.safe_ptr<_1bba9d56e_Flag>());
}
inline void _1baa6ba9e_Reset_CommonFlag_3(jule::Trait<_1baa6bbe2_CommonFlag> _self_) {
	_1bba9d99d_Reset(_self_.safe_ptr<_1bba9d56e_Flag>());
}
inline jule::Str _1baa3adc0_Name_CommonFlag_4(jule::Trait<_1baa6bbe2_CommonFlag> _self_) {
	return _1bbaa1891_Name(_self_.safe_ptr<_1bbaa1c6a_Flag>());
}
inline jule::I32 _1baa3b013_Short_CommonFlag_4(jule::Trait<_1baa6bbe2_CommonFlag> _self_) {
	return _1bbaa22dc_Short(_self_.safe_ptr<_1bbaa1c6a_Flag>());
}
inline jule::Str _1baa6b95b_What_CommonFlag_4(jule::Trait<_1baa6bbe2_CommonFlag> _self_) {
	return _1bbaa2056_What(_self_.safe_ptr<_1bbaa1c6a_Flag>());
}
inline void _1baa6ba9e_Reset_CommonFlag_4(jule::Trait<_1baa6bbe2_CommonFlag> _self_) {
	_1bbaa2199_Reset(_self_.safe_ptr<_1bbaa1c6a_Flag>());
}


static _1ac72e396_comptimeRangeKindMptrData _1ac72e396_comptimeRangeKind_mptr_data[] = {
	{
		._1ac72da8d_ready=_1ac72da8d_ready_comptimeRangeKind_0,
		._1ac72deab_step=_1ac72deab_step_comptimeRangeKind_0,
		._1ac72e242_len=_1ac72e242_len_comptimeRangeKind_0,
	},
	{
		._1ac72da8d_ready=_1ac72da8d_ready_comptimeRangeKind_1,
		._1ac72deab_step=_1ac72deab_step_comptimeRangeKind_1,
		._1ac72e242_len=_1ac72e242_len_comptimeRangeKind_1,
	},
	{
		._1ac72da8d_ready=_1ac72da8d_ready_comptimeRangeKind_2,
		._1ac72deab_step=_1ac72deab_step_comptimeRangeKind_2,
		._1ac72e242_len=_1ac72e242_len_comptimeRangeKind_2,
	},
	{
		._1ac72da8d_ready=_1ac72da8d_ready_comptimeRangeKind_3,
		._1ac72deab_step=_1ac72deab_step_comptimeRangeKind_3,
		._1ac72e242_len=_1ac72e242_len_comptimeRangeKind_3,
	},
	{
		._1ac72da8d_ready=_1ac72da8d_ready_comptimeRangeKind_4,
		._1ac72deab_step=_1ac72deab_step_comptimeRangeKind_4,
		._1ac72e242_len=_1ac72e242_len_comptimeRangeKind_4,
	},
	{
		._1ac72da8d_ready=_1ac72da8d_ready_comptimeRangeKind_5,
		._1ac72deab_step=_1ac72deab_step_comptimeRangeKind_5,
		._1ac72e242_len=_1ac72e242_len_comptimeRangeKind_5,
	},
};
static _1ac7749e6_ImporterMptrData _1ac7749e6_Importer_mptr_data[] = {
	{
		._1ac7737c5_SetModPath=_1ac7737c5_SetModPath_Importer_0,
		._1ac773a5b_GetModPath=_1ac773a5b_GetModPath_Importer_0,
		._1ac773d9c_ModById=_1ac773d9c_ModById_Importer_0,
		._1ac7741dd_GetImport=_1ac7741dd_GetImport_Importer_0,
		._1ac7745d9_ImportPackage=_1ac7745d9_ImportPackage_Importer_0,
		._1ac774892_Imported=_1ac774892_Imported_Importer_0,
	},
};
static _1ac85957b_KindMptrData _1ac85957b_Kind_mptr_data[] = {
	{
		._1ac8590d6_Str=_1ac8590d6_Str_Kind_0,
		._1ac859427_Equal=_1ac859427_Equal_Kind_0,
	},
	{
		._1ac8590d6_Str=_1ac8590d6_Str_Kind_1,
		._1ac859427_Equal=_1ac859427_Equal_Kind_1,
	},
	{
		._1ac8590d6_Str=_1ac8590d6_Str_Kind_2,
		._1ac859427_Equal=_1ac859427_Equal_Kind_2,
	},
	{
		._1ac8590d6_Str=_1ac8590d6_Str_Kind_3,
		._1ac859427_Equal=_1ac859427_Equal_Kind_3,
	},
	{
		._1ac8590d6_Str=_1ac8590d6_Str_Kind_4,
		._1ac859427_Equal=_1ac859427_Equal_Kind_4,
	},
	{
		._1ac8590d6_Str=_1ac8590d6_Str_Kind_5,
		._1ac859427_Equal=_1ac859427_Equal_Kind_5,
	},
	{
		._1ac8590d6_Str=_1ac8590d6_Str_Kind_6,
		._1ac859427_Equal=_1ac859427_Equal_Kind_6,
	},
	{
		._1ac8590d6_Str=_1ac8590d6_Str_Kind_7,
		._1ac859427_Equal=_1ac859427_Equal_Kind_7,
	},
	{
		._1ac8590d6_Str=_1ac8590d6_Str_Kind_8,
		._1ac859427_Equal=_1ac859427_Equal_Kind_8,
	},
	{
		._1ac8590d6_Str=_1ac8590d6_Str_Kind_9,
		._1ac859427_Equal=_1ac859427_Equal_Kind_9,
	},
	{
		._1ac8590d6_Str=_1ac8590d6_Str_Kind_10,
		._1ac859427_Equal=_1ac859427_Equal_Kind_10,
	},
	{
		._1ac8590d6_Str=_1ac8590d6_Str_Kind_11,
		._1ac859427_Equal=_1ac859427_Equal_Kind_11,
	},
	{
		._1ac8590d6_Str=_1ac8590d6_Str_Kind_12,
		._1ac859427_Equal=_1ac859427_Equal_Kind_12,
	},
	{
		._1ac8590d6_Str=_1ac8590d6_Str_Kind_13,
		._1ac859427_Equal=_1ac859427_Equal_Kind_13,
	},
	{
		._1ac8590d6_Str=_1ac8590d6_Str_Kind_14,
		._1ac859427_Equal=_1ac859427_Equal_Kind_14,
	},
	{
		._1ac8590d6_Str=_1ac8590d6_Str_Kind_15,
		._1ac859427_Equal=_1ac859427_Equal_Kind_15,
	},
	{
		._1ac8590d6_Str=_1ac8590d6_Str_Kind_16,
		._1ac859427_Equal=_1ac859427_Equal_Kind_16,
	},
	{
		._1ac8590d6_Str=_1ac8590d6_Str_Kind_17,
		._1ac859427_Equal=_1ac859427_Equal_Kind_17,
	},
	{
		._1ac8590d6_Str=_1ac8590d6_Str_Kind_18,
		._1ac859427_Equal=_1ac859427_Equal_Kind_18,
	},
	{
		._1ac8590d6_Str=_1ac8590d6_Str_Kind_19,
		._1ac859427_Equal=_1ac859427_Equal_Kind_19,
	},
	{
		._1ac8590d6_Str=_1ac8590d6_Str_Kind_20,
		._1ac859427_Equal=_1ac859427_Equal_Kind_20,
	},
	{
		._1ac8590d6_Str=_1ac8590d6_Str_Kind_21,
		._1ac859427_Equal=_1ac859427_Equal_Kind_21,
	},
	{
		._1ac8590d6_Str=_1ac8590d6_Str_Kind_22,
		._1ac859427_Equal=_1ac859427_Equal_Kind_22,
	},
	{
		._1ac8590d6_Str=_1ac8590d6_Str_Kind_23,
		._1ac859427_Equal=_1ac859427_Equal_Kind_23,
	},
	{
		._1ac8590d6_Str=_1ac8590d6_Str_Kind_24,
		._1ac859427_Equal=_1ac859427_Equal_Kind_24,
	},
	{
		._1ac8590d6_Str=_1ac8590d6_Str_Kind_25,
		._1ac859427_Equal=_1ac859427_Equal_Kind_25,
	},
	{
		._1ac8590d6_Str=_1ac8590d6_Str_Kind_26,
		._1ac859427_Equal=_1ac859427_Equal_Kind_26,
	},
	{
		._1ac8590d6_Str=_1ac8590d6_Str_Kind_27,
		._1ac859427_Equal=_1ac859427_Equal_Kind_27,
	},
};
static _1ac879568_LookupMptrData _1ac879568_Lookup_mptr_data[] = {
	{
		._1ac877852_SelectPackage=_1ac877852_SelectPackage_Lookup_0,
		._1ac877c4d_FindVar=_1ac877c4d_FindVar_Lookup_0,
		._1ac878149_FindTypeAlias=_1ac878149_FindTypeAlias_Lookup_0,
		._1ac878545_FindStruct=_1ac878545_FindStruct_Lookup_0,
		._1ac878941_FindFn=_1ac878941_FindFn_Lookup_0,
		._1ac878c82_FindTrait=_1ac878c82_FindTrait_Lookup_0,
		._1ac8790c3_FindEnum=_1ac8790c3_FindEnum_Lookup_0,
		._1ac879414_FindTypeEnum=_1ac879414_FindTypeEnum_Lookup_0,
	},
	{
		._1ac877852_SelectPackage=_1ac877852_SelectPackage_Lookup_1,
		._1ac877c4d_FindVar=_1ac877c4d_FindVar_Lookup_1,
		._1ac878149_FindTypeAlias=_1ac878149_FindTypeAlias_Lookup_1,
		._1ac878545_FindStruct=_1ac878545_FindStruct_Lookup_1,
		._1ac878941_FindFn=_1ac878941_FindFn_Lookup_1,
		._1ac878c82_FindTrait=_1ac878c82_FindTrait_Lookup_1,
		._1ac8790c3_FindEnum=_1ac8790c3_FindEnum_Lookup_1,
		._1ac879414_FindTypeEnum=_1ac879414_FindTypeEnum_Lookup_1,
	},
	{
		._1ac877852_SelectPackage=_1ac877852_SelectPackage_Lookup_2,
		._1ac877c4d_FindVar=_1ac877c4d_FindVar_Lookup_2,
		._1ac878149_FindTypeAlias=_1ac878149_FindTypeAlias_Lookup_2,
		._1ac878545_FindStruct=_1ac878545_FindStruct_Lookup_2,
		._1ac878941_FindFn=_1ac878941_FindFn_Lookup_2,
		._1ac878c82_FindTrait=_1ac878c82_FindTrait_Lookup_2,
		._1ac8790c3_FindEnum=_1ac8790c3_FindEnum_Lookup_2,
		._1ac879414_FindTypeEnum=_1ac879414_FindTypeEnum_Lookup_2,
	},
	{
		._1ac877852_SelectPackage=_1ac877852_SelectPackage_Lookup_3,
		._1ac877c4d_FindVar=_1ac877c4d_FindVar_Lookup_3,
		._1ac878149_FindTypeAlias=_1ac878149_FindTypeAlias_Lookup_3,
		._1ac878545_FindStruct=_1ac878545_FindStruct_Lookup_3,
		._1ac878941_FindFn=_1ac878941_FindFn_Lookup_3,
		._1ac878c82_FindTrait=_1ac878c82_FindTrait_Lookup_3,
		._1ac8790c3_FindEnum=_1ac8790c3_FindEnum_Lookup_3,
		._1ac879414_FindTypeEnum=_1ac879414_FindTypeEnum_Lookup_3,
	},
	{
		._1ac877852_SelectPackage=_1ac877852_SelectPackage_Lookup_4,
		._1ac877c4d_FindVar=_1ac877c4d_FindVar_Lookup_4,
		._1ac878149_FindTypeAlias=_1ac878149_FindTypeAlias_Lookup_4,
		._1ac878545_FindStruct=_1ac878545_FindStruct_Lookup_4,
		._1ac878941_FindFn=_1ac878941_FindFn_Lookup_4,
		._1ac878c82_FindTrait=_1ac878c82_FindTrait_Lookup_4,
		._1ac8790c3_FindEnum=_1ac8790c3_FindEnum_Lookup_4,
		._1ac879414_FindTypeEnum=_1ac879414_FindTypeEnum_Lookup_4,
	},
};
static _1baa6bbe2_CommonFlagMptrData _1baa6bbe2_CommonFlag_mptr_data[] = {
	{
		._1baa3adc0_Name=_1baa3adc0_Name_CommonFlag_0,
		._1baa3b013_Short=_1baa3b013_Short_CommonFlag_0,
		._1baa6b95b_What=_1baa6b95b_What_CommonFlag_0,
		._1baa6ba9e_Reset=_1baa6ba9e_Reset_CommonFlag_0,
	},
	{
		._1baa3adc0_Name=_1baa3adc0_Name_CommonFlag_1,
		._1baa3b013_Short=_1baa3b013_Short_CommonFlag_1,
		._1baa6b95b_What=_1baa6b95b_What_CommonFlag_1,
		._1baa6ba9e_Reset=_1baa6ba9e_Reset_CommonFlag_1,
	},
	{
		._1baa3adc0_Name=_1baa3adc0_Name_CommonFlag_2,
		._1baa3b013_Short=_1baa3b013_Short_CommonFlag_2,
		._1baa6b95b_What=_1baa6b95b_What_CommonFlag_2,
		._1baa6ba9e_Reset=_1baa6ba9e_Reset_CommonFlag_2,
	},
	{
		._1baa3adc0_Name=_1baa3adc0_Name_CommonFlag_3,
		._1baa3b013_Short=_1baa3b013_Short_CommonFlag_3,
		._1baa6b95b_What=_1baa6b95b_What_CommonFlag_3,
		._1baa6ba9e_Reset=_1baa6ba9e_Reset_CommonFlag_3,
	},
	{
		._1baa3adc0_Name=_1baa3adc0_Name_CommonFlag_4,
		._1baa3b013_Short=_1baa3b013_Short_CommonFlag_4,
		._1baa6b95b_What=_1baa6b95b_What_CommonFlag_4,
		._1baa6ba9e_Reset=_1baa6ba9e_Reset_CommonFlag_4,
	},
};


void __jule_any_type0_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_any_type0_dealloc, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
void __jule_any_type1_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_any_type1_dealloc, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
void __jule_any_type2_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_any_type2_dealloc, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
void __jule_any_type3_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_any_type3_dealloc, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
void __jule_any_type4_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_any_type4_dealloc, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
void __jule_any_type5_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_any_type5_dealloc, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
void __jule_any_type6_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_any_type6_dealloc, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
void __jule_any_type7_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac717170_FnIns>().dealloc(); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_any_type7_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1ac717170_FnIns> &other) { return any.type == &__jule_any_type7 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type8_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac7bb015_Var>().dealloc(); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_any_type8_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1ac7bb015_Var> &other) { return any.type == &__jule_any_type8 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type9_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac702105_StructIns>().dealloc(); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_any_type9_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1ac702105_StructIns> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type10_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac727548_Trait>().dealloc(); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_any_type10_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1ac727548_Trait> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type11_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6e52e6_Impl>().dealloc(); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_any_type11_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1ac6e52e6_Impl> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type12_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6e019d_TypeAliasDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_any_type12_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1ac6e019d_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type13_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6e4449_StructDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_any_type13_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1ac6e4449_StructDecl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type14_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6da341_FnDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_any_type14_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1ac6da341_FnDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type15_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6e4b86_TraitDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_any_type15_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1ac6e4b86_TraitDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type16_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6db4eb_VarDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_any_type16_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1ac6db4eb_VarDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type17_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6e27ee_EnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_any_type17_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1ac6e27ee_EnumDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type18_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6e3789_TypeEnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_any_type18_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1ac6e3789_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type19_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a6cde8d5_Const>().dealloc(); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_any_type19_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_1a6cde8d5_Const> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type20_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6c8c8b_IdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_any_type20_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1ac6c8c8b_IdentTypeDecl> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type21_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac7589b9_Label>().dealloc(); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_any_type21_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1ac7589b9_Label> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type22_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac756126_Scope>().dealloc(); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_any_type22_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1ac756126_Scope> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type23_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac70ed16_BuiltinErrorCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_any_type23_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1ac70ed16_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type24_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac8243ae_Data>().dealloc(); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_any_type24_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1ac8243ae_Data> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type25_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac711015_BackendEmitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_any_type25_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1ac711015_BackendEmitExprModel> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type26_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac70da90_BuiltinAppendCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_any_type26_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1ac70da90_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type27_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac70c0cc_BuiltinOutCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_any_type27_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1ac70c0cc_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type28_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac70c4a6_BuiltinOutlnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_any_type28_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1ac70c4a6_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type29_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac70cc59_BuiltinPanicCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_any_type29_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1ac70cc59_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type30_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac70d210_BuiltinAssertCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_any_type30_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1ac70d210_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type31_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac70e93c_BuiltinCopyCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_any_type31_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1ac70e93c_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type32_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac70e563_BuiltinDeleteCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_any_type32_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1ac70e563_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type33_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac711312_FreeExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_any_type33_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1ac711312_FreeExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type34_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac7084d5_FnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_any_type34_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1ac7084d5_FnCallExprModel> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type35_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac756c5e_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_any_type35_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1ac756c5e_Conditional> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type36_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac75705b_InfIter>().dealloc(); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_any_type36_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1ac75705b_InfIter> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type37_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6dc970_WhileKind>().dealloc(); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_any_type37_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1ac6dc970_WhileKind> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type38_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac757512_WhileIter>().dealloc(); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_any_type38_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1ac757512_WhileIter> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type39_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6dd377_RangeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_any_type39_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1ac6dd377_RangeKind> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type40_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac757e5d_RangeIter>().dealloc(); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_any_type40_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1ac757e5d_RangeIter> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type41_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac7582e3_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_any_type41_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1ac7582e3_ContSt> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type42_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac758d93_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_any_type42_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1ac758d93_GotoSt> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type43_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac75926c_Postfix>().dealloc(); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_any_type43_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1ac75926c_Postfix> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type44_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac759723_Assign>().dealloc(); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_any_type44_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1ac759723_Assign> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type45_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac708d65_IndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_any_type45_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1ac708d65_IndexingExprModel> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type46_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac759aec_MultiAssign>().dealloc(); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_any_type46_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1ac759aec_MultiAssign> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type47_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac75a25c_Match>().dealloc(); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_any_type47_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1ac75a25c_Match> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type48_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac75b48e_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_any_type48_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1ac75b48e_FallSt> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type49_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac7586bc_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_any_type49_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1ac7586bc_BreakSt> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type50_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac75b824_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_any_type50_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1ac75b824_RetSt> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type51_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6d86a2_ScopeTree>().dealloc(); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_any_type51_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1ac6d86a2_ScopeTree> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type52_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6cc9b5_Expr>().dealloc(); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_any_type52_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1ac6cc9b5_Expr> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type53_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6de961_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_any_type53_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1ac6de961_Conditional> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type54_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6dc145_Iter>().dealloc(); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_any_type54_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1ac6dc145_Iter> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type55_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6ddb2a_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_any_type55_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1ac6ddb2a_ContSt> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type56_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6d5c65_LabelSt>().dealloc(); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_any_type56_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1ac6d5c65_LabelSt> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type57_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6d613e_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_any_type57_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1ac6d613e_GotoSt> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type58_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6d712e_AssignSt>().dealloc(); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_any_type58_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1ac6d712e_AssignSt> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type59_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6e0e6d_MatchCase>().dealloc(); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_any_type59_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1ac6e0e6d_MatchCase> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type60_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6d643b_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_any_type60_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1ac6d643b_FallSt> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type61_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6dd751_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_any_type61_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1ac6dd751_BreakSt> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type62_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6db8c5_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_any_type62_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1ac6db8c5_RetSt> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type63_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6cd389_UseExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_any_type63_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1ac6cd389_UseExpr> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type64_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac71426b_Fn>().dealloc(); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_any_type64_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1ac71426b_Fn> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type65_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6ee377_Struct>().dealloc(); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_any_type65_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1ac6ee377_Struct> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type66_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac858c40_TypeAlias>().dealloc(); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_any_type66_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1ac858c40_TypeAlias> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type67_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac729c54_Enum>().dealloc(); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_any_type67_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1ac729c54_Enum> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type68_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac72b45e_TypeEnum>().dealloc(); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_any_type68_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1ac72b45e_TypeEnum> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type69_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6ca94c_ArrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_any_type69_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1ac6ca94c_ArrTypeDecl> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type70_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6c9ab1_SlcTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_any_type70_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1ac6c9ab1_SlcTypeDecl> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type71_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6ca1aa_PtrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_any_type71_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1ac6ca1aa_PtrTypeDecl> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type72_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6c972b_SptrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_any_type72_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1ac6c972b_SptrTypeDecl> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type73_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6cb19a_MapTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_any_type73_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1ac6cb19a_MapTypeDecl> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type74_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6c9dad_TupleTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_any_type74_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1ac6c9dad_TupleTypeDecl> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type75_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6cee4b_VariadicExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_any_type75_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1ac6cee4b_VariadicExpr> &other) { return any.type == &__jule_any_type75 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type76_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac7088ae_SliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_any_type76_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1ac7088ae_SliceExprModel> &other) { return any.type == &__jule_any_type76 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type77_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6d21d4_FieldExprPair>().dealloc(); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_any_type77_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1ac6d21d4_FieldExprPair> &other) { return any.type == &__jule_any_type77 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type78_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6d37e0_KeyValPair>().dealloc(); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_any_type78_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1ac6d37e0_KeyValPair> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type79_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6ce3e0_IdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_any_type79_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1ac6ce3e0_IdentExpr> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type80_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6cd686_TupleExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_any_type80_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1ac6cd686_TupleExpr> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type81_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac70bc03_TupleExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_any_type81_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1ac70bc03_TupleExprModel> &other) { return any.type == &__jule_any_type81 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type82_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac71083e_RuneExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_any_type82_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1ac71083e_RuneExprModel> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type83_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac859a32_TypeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_any_type83_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1ac859a32_TypeKind> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type84_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac70b906_ArrayExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_any_type84_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1ac70b906_ArrayExprModel> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type85_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6d0ac8_SubIdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_any_type85_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1ac6d0ac8_SubIdentExpr> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type86_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6c9088_SubIdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_any_type86_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1ac6c9088_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type87_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6cea72_UnaryExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_any_type87_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1ac6cea72_UnaryExpr> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type88_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6c8681_TypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_any_type88_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1ac6c8681_TypeDecl> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type89_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6d06ee_NsSelectionExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_any_type89_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1ac6d06ee_NsSelectionExpr> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type90_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6c942e_NamespaceTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_any_type90_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1ac6c942e_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type91_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac70a152_SlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_any_type91_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1ac70a152_SlicingExprModel> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type92_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac707b33_CastingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_any_type92_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1ac707b33_CastingExprModel> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type93_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6d3ed8_SliceExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_any_type93_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1ac6d3ed8_SliceExpr> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type94_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac7072a3_StructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_any_type94_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1ac7072a3_StructLitExprModel> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type95_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac70b52c_StructStaticIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_any_type95_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1ac70b52c_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type96_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac70a6d5_TraitSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_any_type96_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1ac70a6d5_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type97_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac70b076_StructSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_any_type97_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1ac70b076_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type98_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac709abe_MapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_any_type98_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1ac709abe_MapExprModel> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type99_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac70923e_AnonFnExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_any_type99_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1ac70923e_AnonFnExprModel> &other) { return any.type == &__jule_any_type99 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type100_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6cccb2_RangeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_any_type100_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1ac6cccb2_RangeExpr> &other) { return any.type == &__jule_any_type100 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type101_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6cda60_LitExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_any_type101_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1ac6cda60_LitExpr> &other) { return any.type == &__jule_any_type101 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type102_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6cde39_UnsafeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_any_type102_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1ac6cde39_UnsafeExpr> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type103_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6d4978_IndexingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_any_type103_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1ac6d4978_IndexingExpr> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type104_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6d50d8_SlicingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_any_type104_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1ac6d50d8_SlicingExpr> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type105_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6d0325_CastExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_any_type105_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1ac6d0325_CastExpr> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type106_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6d2a0e_StructLit>().dealloc(); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_any_type106_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1ac6d2a0e_StructLit> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type107_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6d16de_FnCallExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_any_type107_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1ac6d16de_FnCallExpr> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type108_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6d2eb5_BraceLit>().dealloc(); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_any_type108_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1ac6d2eb5_BraceLit> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type109_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac6d107e_BinaryExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_any_type109_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1ac6d107e_BinaryExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type110_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac7068ce_UnaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_any_type110_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1ac7068ce_UnaryExprModel> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type111_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac706505_BinaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_any_type111_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1ac706505_BinaryExprModel> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type112_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac7075a0_AllocStructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_any_type112_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1ac7075a0_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type113_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac70c880_BuiltinNewCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_any_type113_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1ac70c880_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type114_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac70d6b6_BuiltinMakeCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_any_type114_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1ac70d6b6_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type115_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac70dd8c_BuiltinLenCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_any_type115_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1ac70dd8c_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type116_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac70e189_BuiltinCapCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_any_type116_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1ac70e189_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type116 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type117_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac70a8c2_SizeofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_any_type117_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1ac70a8c2_SizeofExprModel> &other) { return any.type == &__jule_any_type117 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type118_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac710542_AlignofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_any_type118_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1ac710542_AlignofExprModel> &other) { return any.type == &__jule_any_type118 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type119_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac710b3b_IntegratedToStrExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_any_type119_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1ac710b3b_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type120_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac94e781_MutSlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_any_type120_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1ac94e781_MutSlicingExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type121_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9502a9_PushToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_any_type121_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1ac9502a9_PushToSliceExprModel> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type122_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac950683_AppendToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_any_type122_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1ac950683_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type123_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac94d4a5_SwapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_any_type123_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1ac94d4a5_SwapExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type124_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac94d8c3_EmptyCompareExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_any_type124_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1ac94d8c3_EmptyCompareExprModel> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type125_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac94e1ed_StrCompExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_any_type125_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1ac94e1ed_StrCompExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type126_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac94ea7d_UnsafeBinaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_any_type126_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1ac94ea7d_UnsafeBinaryExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type127_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac94dbc0_RefExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_any_type127_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1ac94dbc0_RefExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type128_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac94ed7a_UnsafeIndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_any_type128_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1ac94ed7a_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type129_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
jule::Bool __jule_any_type129_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other); }
jule::Str __jule_any_type129_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_any_type129_dealloc, .eq=__jule_any_type129_eq, .to_str=__jule_any_type129_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type129 && __jule_any_type129_eq(any.data.alloc, (void*)&other); }
void __jule_any_type130_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
jule::Bool __jule_any_type130_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other); }
jule::Str __jule_any_type130_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_any_type130_dealloc, .eq=__jule_any_type130_eq, .to_str=__jule_any_type130_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type130 && __jule_any_type130_eq(any.data.alloc, (void*)&other); }
void __jule_any_type131_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
jule::Bool __jule_any_type131_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other); }
jule::Str __jule_any_type131_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_any_type131_dealloc, .eq=__jule_any_type131_eq, .to_str=__jule_any_type131_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type131 && __jule_any_type131_eq(any.data.alloc, (void*)&other); }
void __jule_any_type132_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
jule::Bool __jule_any_type132_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other); }
jule::Str __jule_any_type132_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_any_type132_dealloc, .eq=__jule_any_type132_eq, .to_str=__jule_any_type132_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type132 && __jule_any_type132_eq(any.data.alloc, (void*)&other); }
void __jule_any_type133_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
jule::Bool __jule_any_type133_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other); }
jule::Str __jule_any_type133_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_any_type133_dealloc, .eq=__jule_any_type133_eq, .to_str=__jule_any_type133_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type133 && __jule_any_type133_eq(any.data.alloc, (void*)&other); }
void __jule_any_type134_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
jule::Bool __jule_any_type134_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other); }
jule::Str __jule_any_type134_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_any_type134_dealloc, .eq=__jule_any_type134_eq, .to_str=__jule_any_type134_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type134 && __jule_any_type134_eq(any.data.alloc, (void*)&other); }
jule::Array<jule::Array<jule::Str,2>,5> _1a763bb8d_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str::lit("help", 4),jule::Str::lit("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str::lit("version", 7),jule::Str::lit("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str::lit("tool", 4),jule::Str::lit("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str::lit("julenv", 6),jule::Str::lit("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str::lit("mod", 3),jule::Str::lit("Module management", 17)})});
jule::Str _1baa73776_OutDir = jule::Str::lit("dist", 4);
jule::Str _1baa73a73_OutName = jule::Str::lit("ir.cpp", 6);
jule::Str _1baa73d3c_Out = jule::Str();
jule::Str _1da0b545d_Compiler = jule::Str();
jule::Str _1da0b67e4_CompilerPath = jule::Str();
jule::Str _1da0b6a47_CppStd = jule::Str::lit("cpp17", 5);
jule::Bool _1da0b6ccd_Shadowing = false;
jule::Bool _1da0b7097_Transpilation = false;
jule::Bool _1da0b7361_Test = false;
jule::Bool _1da0b762a_RC = true;
jule::Bool _1da0b7a04_Safety = true;
jule::Bool _1da0b7cbd_Production = false;
jule::Uintptr _1d9e378eb_STDIN = _1d9e381c1_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551606LLU));
jule::Uintptr _1d9e37bb5_STDOUT = _1d9e381c1_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551605LLU));
jule::Uintptr _1d9e37e4b_STDERR = _1d9e381c1_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551604LLU));
jule::Array<jule::U8,256> _1c1578c04_first = jule::Array<jule::U8,256>({240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,19LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,35LLU,3LLU,3LLU,52LLU,4LLU,4LLU,4LLU,68LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU});
jule::Array<_1c1579287_acceptRange,16> _1c1579595_acceptRanges = jule::Array<_1c1579287_acceptRange,16>({_1c1579287_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_1c1579287_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_1c1579287_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_1c1579287_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_1c1579287_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Ptr<_1a74d443c_RangeTable> _1a7469d95__L = jule::new_ptr<_1a74d443c_RangeTable>(_1a74d443c_RangeTable{._field_R16=jule::Slice<_1a74d3958_Range16>::make({_1a74d3958_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_1a74d3958_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_1a74d3958_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_1a74d3958_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_1a74d3958_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_1a74d3958_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_1a74d3958_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_1a74d3958_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_1a74d3958_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_1a74d3958_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_1a74d3958_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_1a74d3958_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_1a74d3958_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_1a74d3958_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_1a74d3958_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_1a74d3958_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_1a74d3958_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_1a74d3958_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_1a74d3958_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_1a74d3958_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_1a74d3958_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_1a74d3958_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_1a74d3958_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_1a74d3958_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_1a74d3958_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_1a74d3958_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_1a74d3958_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_1a74d3958_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_1a74d3958_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_1a74d3958_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_1a74d3958_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_1a74d3958_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_1a74d3958_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_1a74d3958_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_1a74d3958_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_1a74d3958_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_1a74d3958_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_1a74d3958_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_1a74d3958_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_1a74d3958_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_1a74d3958_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_1a74d3958_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_1a74d3958_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_1a74d3958_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_1a74d3958_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_1a74d3958_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_1a74d3958_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_1a74d3958_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_1a74d3958_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_1a74d3958_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_1a74d3958_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_1a74d3958_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_1a74d3958_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_1a74d3958_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_1a74d3958_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_1a74d3958_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_1a74d3958_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_1a74d3958_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_1a74d3958_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_1a74d3958_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_1a74d3e86_Range32>::make({_1a74d3e86_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_1a74d3e86_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_1a74d3e86_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_1a74d3e86_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_1a74d3e86_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_1a74d3e86_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_1a74d3e86_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_1a74d3e86_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_1a74d3e86_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_1a74d3e86_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_1a74d3e86_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_1a74d3e86_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_1a74d3e86_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_1a74d3e86_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_1a74d3e86_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_1a74d3e86_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_1a74d3e86_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_1a74d3e86_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_1a74d3e86_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_1a74d3e86_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_1a74d3e86_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_1a74d3e86_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_1a74d3e86_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_1a74d3e86_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_1a74d3e86_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_1a74d3e86_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_1a74d3e86_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_1a74d3e86_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_1a74d3e86_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_1a74d3e86_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_1a74d3e86_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_1a74d3e86_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_1a74d3e86_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_1a74d3e86_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_1a74d3e86_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_1a74d3e86_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_1a74d3e86_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_1a74d3e86_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_1a74d3e86_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_1a74d3e86_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_1a74d3e86_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_1a74d3e86_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_1a74d3e86_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_1a74d443c_RangeTable> _1a746ad85__LU = jule::new_ptr<_1a74d443c_RangeTable>(_1a74d443c_RangeTable{._field_R16=jule::Slice<_1a74d3958_Range16>::make({_1a74d3958_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_1a74d3958_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_1a74d3958_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_1a74d3958_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_1a74d3958_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_1a74d3958_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_1a74d3958_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_1a74d3958_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_1a74d3958_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_1a74d3958_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_1a74d3958_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_1a74d3958_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_1a74d3958_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_1a74d3958_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_1a74d3958_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_1a74d3958_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_1a74d3958_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_1a74d3e86_Range32>::make({_1a74d3e86_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_1a74d3e86_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_1a74d3e86_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_1a74d3e86_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_1a74d3e86_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_1a74d3e86_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_1a74d3e86_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::U8,256> _1a74ccc71__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::Str,4> _1a755dc69_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str::lit(".h", 2),jule::Str::lit(".hpp", 4),jule::Str::lit(".hxx", 4),jule::Str::lit(".hh", 3)});
jule::Array<jule::Str,3> _1a7560a4b_CppExts = jule::Array<jule::Str,3>({jule::Str::lit(".cpp", 4),jule::Str::lit(".cc", 3),jule::Str::lit(".cxx", 4)});
jule::Array<jule::Str,1> _1a7560d04_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str::lit(".mm", 3)});
jule::Str _1a7637ccc_PathStdlib = jule::Str();
jule::Str _1a7638030_PathExec = jule::Str();
jule::Str _1a76382d8_PathWd = jule::Str();
jule::Str _1a76385e6_PathApi = jule::Str();
jule::Str _1a76388b0_Os = jule::Str::lit("windows", 7);
jule::Str _1a7638b79_Arch = jule::Str::lit("amd64", 5);
jule::Array<jule::U8,32> _1dbaabe31__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1dbaac4e7__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_1dbb0263b_floatInfo _1dbb02a37_f32info = _1dbb0263b_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_1dbb0263b_floatInfo _1dbb02d45_f64info = _1dbb0263b_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _1dbb0a7dc_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _1dbb0c646_powtab = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1dbb0d218_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1dbb0d559_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _1dbb117c1_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1dbb15594_leftCheat> _1dbb159c3_leftCheats = jule::Slice<_1dbb15594_leftCheat>::make({_1dbb15594_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_1dbb15594_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("5", 1)},_1dbb15594_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("25", 2)},_1dbb15594_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("125", 3)},_1dbb15594_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("625", 3)},_1dbb15594_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("3125", 4)},_1dbb15594_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("15625", 5)},_1dbb15594_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("78125", 5)},_1dbb15594_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("390625", 6)},_1dbb15594_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("1953125", 7)},_1dbb15594_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("9765625", 7)},_1dbb15594_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("48828125", 8)},_1dbb15594_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("244140625", 9)},_1dbb15594_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("1220703125", 10)},_1dbb15594_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("6103515625", 10)},_1dbb15594_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("30517578125", 11)},_1dbb15594_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("152587890625", 12)},_1dbb15594_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("762939453125", 12)},_1dbb15594_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("3814697265625", 13)},_1dbb15594_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("19073486328125", 14)},_1dbb15594_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("95367431640625", 14)},_1dbb15594_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("476837158203125", 15)},_1dbb15594_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("2384185791015625", 16)},_1dbb15594_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("11920928955078125", 17)},_1dbb15594_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("59604644775390625", 17)},_1dbb15594_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("298023223876953125", 18)},_1dbb15594_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("1490116119384765625", 19)},_1dbb15594_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("7450580596923828125", 19)},_1dbb15594_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("37252902984619140625", 20)},_1dbb15594_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("186264514923095703125", 21)},_1dbb15594_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("931322574615478515625", 21)},_1dbb15594_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("4656612873077392578125", 22)},_1dbb15594_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("23283064365386962890625", 23)},_1dbb15594_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("116415321826934814453125", 24)},_1dbb15594_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("582076609134674072265625", 24)},_1dbb15594_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("2910383045673370361328125", 25)},_1dbb15594_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("14551915228366851806640625", 26)},_1dbb15594_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("72759576141834259033203125", 26)},_1dbb15594_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("363797880709171295166015625", 27)},_1dbb15594_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("1818989403545856475830078125", 28)},_1dbb15594_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("9094947017729282379150390625", 28)},_1dbb15594_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("45474735088646411895751953125", 29)},_1dbb15594_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("227373675443232059478759765625", 30)},_1dbb15594_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("1136868377216160297393798828125", 31)},_1dbb15594_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("5684341886080801486968994140625", 31)},_1dbb15594_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("28421709430404007434844970703125", 32)},_1dbb15594_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("142108547152020037174224853515625", 33)},_1dbb15594_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("710542735760100185871124267578125", 33)},_1dbb15594_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("3552713678800500929355621337890625", 34)},_1dbb15594_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("17763568394002504646778106689453125", 35)},_1dbb15594_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("88817841970012523233890533447265625", 35)},_1dbb15594_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("444089209850062616169452667236328125", 36)},_1dbb15594_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("2220446049250313080847263336181640625", 37)},_1dbb15594_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("11102230246251565404236316680908203125", 38)},_1dbb15594_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("55511151231257827021181583404541015625", 38)},_1dbb15594_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("277555756156289135105907917022705078125", 39)},_1dbb15594_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("1387778780781445675529539585113525390625", 40)},_1dbb15594_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("6938893903907228377647697925567626953125", 40)},_1dbb15594_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("34694469519536141888238489627838134765625", 41)},_1dbb15594_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("173472347597680709441192448139190673828125", 42)},_1dbb15594_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str::lit("867361737988403547205962240695953369140625", 42)}});
jule::I64 _1dbba4e08_BitSize = 0LL;
jule::Str _1dbba5216_SysInt = jule::Str();
jule::Str _1dbba54d0_SysUint = jule::Str();
jule::Array<jule::I32,5> _1ac618736_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::U64,6> _1ac6189ab_UnaryOps = jule::Array<jule::U64,6>({static_cast<jule::U64>(61LLU),static_cast<jule::U64>(60LLU),static_cast<jule::U64>(67LLU),static_cast<jule::U64>(68LLU),static_cast<jule::U64>(62LLU),static_cast<jule::U64>(65LLU)});
jule::Array<jule::U64,18> _1ac618cec_BinOps = jule::Array<jule::U64,18>({static_cast<jule::U64>(60LLU),static_cast<jule::U64>(61LLU),static_cast<jule::U64>(62LLU),static_cast<jule::U64>(63LLU),static_cast<jule::U64>(64LLU),static_cast<jule::U64>(65LLU),static_cast<jule::U64>(66LLU),static_cast<jule::U64>(67LLU),static_cast<jule::U64>(56LLU),static_cast<jule::U64>(57LLU),static_cast<jule::U64>(69LLU),static_cast<jule::U64>(70LLU),static_cast<jule::U64>(53LLU),static_cast<jule::U64>(52LLU),static_cast<jule::U64>(54LLU),static_cast<jule::U64>(55LLU),static_cast<jule::U64>(50LLU),static_cast<jule::U64>(51LLU)});
jule::Array<jule::U64,2> _1ac6ac423_PostfixOps = jule::Array<jule::U64,2>({static_cast<jule::U64>(58LLU),static_cast<jule::U64>(59LLU)});
jule::Array<jule::U64,11> _1ac6ac720_AssignOps = jule::Array<jule::U64,11>({static_cast<jule::U64>(71LLU),static_cast<jule::U64>(40LLU),static_cast<jule::U64>(41LLU),static_cast<jule::U64>(43LLU),static_cast<jule::U64>(42LLU),static_cast<jule::U64>(44LLU),static_cast<jule::U64>(46LLU),static_cast<jule::U64>(45LLU),static_cast<jule::U64>(49LLU),static_cast<jule::U64>(48LLU),static_cast<jule::U64>(47LLU)});
jule::Array<_1ac6ba84e_kindPair,28> _1ac6bac7d_keywords = jule::Array<_1ac6ba84e_kindPair,28>({_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("const", 5), ._field_id=static_cast<jule::U64>(6LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("ret", 3), ._field_id=static_cast<jule::U64>(2LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("type", 4), ._field_id=static_cast<jule::U64>(7LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("for", 3), ._field_id=static_cast<jule::U64>(9LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("break", 5), ._field_id=static_cast<jule::U64>(10LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("continue", 8), ._field_id=static_cast<jule::U64>(11LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("in", 2), ._field_id=static_cast<jule::U64>(12LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("if", 2), ._field_id=static_cast<jule::U64>(13LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("else", 4), ._field_id=static_cast<jule::U64>(14LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("use", 3), ._field_id=static_cast<jule::U64>(16LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("goto", 4), ._field_id=static_cast<jule::U64>(18LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("enum", 4), ._field_id=static_cast<jule::U64>(20LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("struct", 6), ._field_id=static_cast<jule::U64>(21LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("co", 2), ._field_id=static_cast<jule::U64>(22LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("match", 5), ._field_id=static_cast<jule::U64>(23LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("self", 4), ._field_id=static_cast<jule::U64>(24LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("trait", 5), ._field_id=static_cast<jule::U64>(25LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("impl", 4), ._field_id=static_cast<jule::U64>(26LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("cpp", 3), ._field_id=static_cast<jule::U64>(27LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("fall", 4), ._field_id=static_cast<jule::U64>(28LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("fn", 2), ._field_id=static_cast<jule::U64>(29LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("let", 3), ._field_id=static_cast<jule::U64>(30LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("unsafe", 6), ._field_id=static_cast<jule::U64>(31LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("mut", 3), ._field_id=static_cast<jule::U64>(32LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("defer", 5), ._field_id=static_cast<jule::U64>(33LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("static", 6), ._field_id=static_cast<jule::U64>(34LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("error", 5), ._field_id=static_cast<jule::U64>(36LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("map", 3), ._field_id=static_cast<jule::U64>(37LLU)}});
jule::Array<_1ac6ba84e_kindPair,46> _1ac6bb0be_basicOps = jule::Array<_1ac6ba84e_kindPair,46>({_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("::", 2), ._field_id=static_cast<jule::U64>(19LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit(":=", 2), ._field_id=static_cast<jule::U64>(38LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit(":", 1), ._field_id=static_cast<jule::U64>(8LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit(";", 1), ._field_id=static_cast<jule::U64>(3LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit(",", 1), ._field_id=static_cast<jule::U64>(5LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("...", 3), ._field_id=static_cast<jule::U64>(39LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit(".", 1), ._field_id=static_cast<jule::U64>(17LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("+=", 2), ._field_id=static_cast<jule::U64>(40LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("-=", 2), ._field_id=static_cast<jule::U64>(41LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("*=", 2), ._field_id=static_cast<jule::U64>(42LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("/=", 2), ._field_id=static_cast<jule::U64>(43LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("%=", 2), ._field_id=static_cast<jule::U64>(44LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("<<=", 3), ._field_id=static_cast<jule::U64>(45LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit(">>=", 3), ._field_id=static_cast<jule::U64>(46LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("^=", 2), ._field_id=static_cast<jule::U64>(47LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("&=", 2), ._field_id=static_cast<jule::U64>(48LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("|=", 2), ._field_id=static_cast<jule::U64>(49LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("==", 2), ._field_id=static_cast<jule::U64>(50LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("!=", 2), ._field_id=static_cast<jule::U64>(51LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit(">=", 2), ._field_id=static_cast<jule::U64>(52LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("<=", 2), ._field_id=static_cast<jule::U64>(53LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("&&", 2), ._field_id=static_cast<jule::U64>(54LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("||", 2), ._field_id=static_cast<jule::U64>(55LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("<<", 2), ._field_id=static_cast<jule::U64>(56LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit(">>", 2), ._field_id=static_cast<jule::U64>(57LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("++", 2), ._field_id=static_cast<jule::U64>(58LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("--", 2), ._field_id=static_cast<jule::U64>(59LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("+", 1), ._field_id=static_cast<jule::U64>(60LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("-", 1), ._field_id=static_cast<jule::U64>(61LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("*", 1), ._field_id=static_cast<jule::U64>(62LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("/", 1), ._field_id=static_cast<jule::U64>(63LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("%", 1), ._field_id=static_cast<jule::U64>(64LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("&", 1), ._field_id=static_cast<jule::U64>(65LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("|", 1), ._field_id=static_cast<jule::U64>(66LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("^", 1), ._field_id=static_cast<jule::U64>(67LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("!", 1), ._field_id=static_cast<jule::U64>(68LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("<", 1), ._field_id=static_cast<jule::U64>(69LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit(">", 1), ._field_id=static_cast<jule::U64>(70LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("=", 1), ._field_id=static_cast<jule::U64>(71LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("#", 1), ._field_id=static_cast<jule::U64>(35LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("{", 1), ._field_id=static_cast<jule::U64>(72LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("}", 1), ._field_id=static_cast<jule::U64>(73LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("[", 1), ._field_id=static_cast<jule::U64>(76LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("]", 1), ._field_id=static_cast<jule::U64>(77LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit("(", 1), ._field_id=static_cast<jule::U64>(74LLU)},_1ac6ba84e_kindPair{._field_kind=jule::Str::lit(")", 1), ._field_id=static_cast<jule::U64>(75LLU)}});
jule::Slice<jule::Str> _1ac74d01e_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str::lit("signed", 6),jule::Str::lit("unsigned", 8),jule::Str::lit("float", 5),jule::Str::lit("numeric", 7),jule::Str::lit("mutable", 7),jule::Str::lit("immutable", 9),jule::Str::lit("ordered", 7),jule::Str::lit("comparable", 10)});
jule::Ptr<_1ac859a32_TypeKind> _1ac93b98d_primNil = jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=nullptr});
jule::Ptr<_1ac859a32_TypeKind> _1ac93bc9b_primVoid = jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(_1ac876950_buildPrimType(jule::Str::lit("void", 4)), 20)});
jule::Ptr<_1ac859a32_TypeKind> _1ac93c065_primAny = jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(_1ac876950_buildPrimType(jule::Str::lit("any", 3)), 20)});
jule::Ptr<_1ac859a32_TypeKind> _1ac93c373_primStr = jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(_1ac876950_buildPrimType(jule::Str::lit("str", 3)), 20)});
jule::Ptr<_1ac859a32_TypeKind> _1ac93c63c_primBool = jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(_1ac876950_buildPrimType(jule::Str::lit("bool", 4)), 20)});
jule::Ptr<_1ac859a32_TypeKind> _1ac93c906_primUintptr = jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(_1ac876950_buildPrimType(jule::Str::lit("uintptr", 7)), 20)});
jule::Ptr<_1ac859a32_TypeKind> _1ac93cbc0_primUint = jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(_1ac876950_buildPrimType(jule::Str::lit("uint", 4)), 20)});
jule::Ptr<_1ac859a32_TypeKind> _1ac93d099_primInt = jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(_1ac876950_buildPrimType(jule::Str::lit("int", 3)), 20)});
jule::Ptr<_1ac859a32_TypeKind> _1ac93d363_primI8 = jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(_1ac876950_buildPrimType(jule::Str::lit("i8", 2)), 20)});
jule::Ptr<_1ac859a32_TypeKind> _1ac93d62c_primI16 = jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(_1ac876950_buildPrimType(jule::Str::lit("i16", 3)), 20)});
jule::Ptr<_1ac859a32_TypeKind> _1ac93d8e6_primI32 = jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(_1ac876950_buildPrimType(jule::Str::lit("i32", 3)), 20)});
jule::Ptr<_1ac859a32_TypeKind> _1ac93dbb0_primI64 = jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(_1ac876950_buildPrimType(jule::Str::lit("i64", 3)), 20)});
jule::Ptr<_1ac859a32_TypeKind> _1ac93de79_primU8 = jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(_1ac876950_buildPrimType(jule::Str::lit("u8", 2)), 20)});
jule::Ptr<_1ac859a32_TypeKind> _1ac93e243_primU16 = jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(_1ac876950_buildPrimType(jule::Str::lit("u16", 3)), 20)});
jule::Ptr<_1ac859a32_TypeKind> _1ac93e50c_primU32 = jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(_1ac876950_buildPrimType(jule::Str::lit("u32", 3)), 20)});
jule::Ptr<_1ac859a32_TypeKind> _1ac93e980_primU64 = jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(_1ac876950_buildPrimType(jule::Str::lit("u64", 3)), 20)});
jule::Ptr<_1ac859a32_TypeKind> _1ac93ec49_primF32 = jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(_1ac876950_buildPrimType(jule::Str::lit("f32", 3)), 20)});
jule::Ptr<_1ac859a32_TypeKind> _1ac940013_primF64 = jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(_1ac876950_buildPrimType(jule::Str::lit("f64", 3)), 20)});
jule::Bool _1ac9614b8_Copy = false;
jule::Bool _1ac9617c6_Deadcode = false;
jule::Bool _1ac961a90_Append = false;
jule::Bool _1ac961d9d_Math = false;
jule::Bool _1ac962167_Access = false;
jule::Bool _1ac962431_Inline = false;
jule::Bool _1ac9626ea_Ptr = false;
jule::Bool _1ac962ac4_Cond = false;
jule::Bool _1ac962d8d_Str = false;
jule::Bool _1ac963157_Slice = false;
jule::Bool _1ac963421_Assign = false;
jule::Bool _1ad3bdaa1_exprEnabled = false;
jule::Bool _1ad3bdd9d_scopeEnabled = false;
jule::Array<jule::U64,12> _1ba9cdda7_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _1ad8265d0_assignArgName = jule::Str::lit("__jule_assign_arg", 17);
jule::Ptr<_1a74d443c_RangeTable> _1a747858a_Upper = _1a746ad85__LU;
jule::Ptr<_1a74d443c_RangeTable> _1a7472034_Letter = _1a7469d95__L;



std::ostream &operator<<(std::ostream &_Stream, _1c1579287_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline _1c164cc40_StrBuilder static__1c164d191_New(jule::I64 _1519_cap) {
	if ((_1519_cap < 0LL)) {
		jule::panic(jule::Str::lit("std::strings: StrBuilder.New: cap < 0", 37) + jule::Str("\nlocation: std/internal/strings/builder.jule:17:13"));;
	};
	return _1c164cc40_StrBuilder{._field_buf=jule::Slice<jule::U8>::alloc(0LL, _1519_cap, 0)};;
}



inline void _1c164d449_Write(_1c164cc40_StrBuilder* _self_, jule::Slice<jule::U8> _2524_b) {
	((*(_self_))._field_buf).append(_2524_b);;
}



inline void _1c164d702_WriteStr(_1c164cc40_StrBuilder* _self_, jule::Str _3027_s) {
	((*(_self_))._field_buf).append(_1c164bdc6_StrBytes(_3027_s));;
}



inline void _1c164d9aa_WriteByte(_1c164cc40_StrBuilder* _self_, jule::U8 _3528_b) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(_3528_b); };
}



inline jule::Str _1c164dee9_Str(_1c164cc40_StrBuilder* _self_) {
	jule::Str _5013_s = _1c164c459_StrFromBytes((*(_self_))._field_buf);;
	_1c164e1e7_Clear(_self_);
	return _5013_s;;
}



inline void _1c164e1e7_Clear(_1c164cc40_StrBuilder* _self_) {
	(*(_self_))._field_buf=nullptr;
}



inline jule::I64 _1c164e47d_Len(_1c164cc40_StrBuilder* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_buf.len());;
}



inline jule::Slice<jule::U8> _1c164e99a_Buf(_1c164cc40_StrBuilder* _self_) {
	return (*(_self_))._field_buf;;
}



inline void _1c164ec53_SetBuf(_1c164cc40_StrBuilder* _self_, jule::Slice<jule::U8> _7736_buf) {
	(*(_self_))._field_buf=_7736_buf;
}





std::ostream &operator<<(std::ostream &_Stream, _1c164cc40_StrBuilder _Src) {
	_Stream << "StrBuilder{";
	_Stream << "buf:" << _Src._field_buf;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a74d3958_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a74d3e86_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a74d443c_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1a69432c5_index(_1a6942d41_lazyBuff* _self_, jule::I64 _5524_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5524_i];;
	};
	return (*(_self_))._field_path[_5524_i];;
}



inline void _1a694357d_append(_1a6942d41_lazyBuff* _self_, jule::U8 _6225_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6225_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len(), 0);
		jule::copy(((*(_self_))._field_buff), ((*(_self_))._field_path.slice(0LL, (*(_self_))._field_w)).fake_slice());
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6225_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _1a6943814_string(_1a6942d41_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + _1c164c190_BytesStr((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a6942d41_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d9e50d54_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_1d9e50d54_DirEntry>>> static__1a6945b46_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_1d9e50d54_DirEntry>> __jule_func_result;
	jule::Slice<jule::U16> _169_utf16Path = _1d9e0d98d_UTF16FromStr(_1a694455c_Join(jule::Slice<jule::Str>::make({_1520_path,jule::Str::lit("*", 1)})));;
	WIN32_FIND_DATAW _1713_data = (WIN32_FIND_DATAW){};;
	jule::Uintptr _189_handle = _1d9e3be1c_FindFirstFile((&(_169_utf16Path[0LL])), (&(_1713_data)));;
	if ((_189_handle == jule::MAX_U64)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_1d9e50d54_DirEntry>>>(jule::Any(), __jule_func_result);;
	};
	for (;;) {
		{
			jule::Ptr<_1d9e50d54_DirEntry> _2317_entry = jule::new_ptr<_1d9e50d54_DirEntry>(_1d9e50d54_DirEntry{._field_Name=_1d9e0e065_U16PtrToStr(((jule::U16*)(_1713_data.cFileName))), });;
			(*(_2317_entry))._field_Stat=({
				auto except = static__1a6946a48_Of(_1a694455c_Join(jule::Slice<jule::Str>::make({_1520_path,(*(_2317_entry))._field_Name})));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_1d9e50d54_DirEntry>>>(except.error);
				} jule::Ptr<_1d9e5441d_Status>(nullptr);});
			});
			{ jule::Slice<jule::Ptr<_1d9e50d54_DirEntry>> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(_2317_entry); };
			if ((_1d9e3c291_FindNextFile(_189_handle, (&(_1713_data))) == 0LL)) {
				goto _iter_end_1bb961762;
			};
		}
	_iter_next_1bb961762:;
	}
	_iter_end_1bb961762:;;
	_1d9e3c55a_FindClose(_189_handle);
	return jule::Exceptional<jule::Slice<jule::Ptr<_1d9e50d54_DirEntry>>>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional static__1a6945d77_Create(jule::Str _3922_path) {
	jule::Slice<jule::U16> _449_utf16Path = _1d9e0d98d_UTF16FromStr(_3922_path);;
	if ((!(_1d9e39b1d_CreateDirectory((&(_449_utf16Path[0LL])))))) {
		return jule::VoidExceptional(jule::Any(_1d9e50705_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional static__1a69460a8_Remove(jule::Str _5322_path) {
	jule::Slice<jule::U16> _549_utf16Path = _1d9e0d98d_UTF16FromStr(_5322_path);;
	if ((!(_1d9e39dd7_RemoveDirectory((&(_549_utf16Path[0LL])))))) {
		return jule::VoidExceptional(jule::Any(_1d9e50705_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}





std::ostream &operator<<(std::ostream &_Stream, _1d9e510b8_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d9e522d9_File> static__1d9e52707_New(jule::Uintptr _4519_handle) {
	return jule::new_ptr<_1d9e522d9_File>(_1d9e522d9_File{._field_handle=_4519_handle});;
}



inline jule::Exceptional<jule::Ptr<_1d9e522d9_File>> static__1d9e529c1_Create(jule::Str _5522_path) {
	return jule::Exceptional<jule::Ptr<_1d9e522d9_File>>(jule::Any(), ({
		auto except = static__1c157ce4a_Open(_5522_path, static_cast<jule::I64>(770LL), 438LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Ptr<_1d9e522d9_File>>(except.error);
		} jule::Ptr<_1d9e522d9_File>(nullptr);});
	}));;
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__1d9e52c8a_Read(jule::Str _6720_path) {
	jule::Ptr<_1d9e5441d_Status> _689_s = ({
		auto except = static__1a6946a48_Of(_6720_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_1d9e5441d_Status>(nullptr);});
	});;
	if ((!(_1d9e54a7d_IsReg(_689_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(static_cast<jule::I64>(14LL), &__jule_any_type0));
	};
	if ((_1d9e54d14_Size(_689_s.ptr()) == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), jule::Slice<jule::U8>::alloc(0LL, 0LL, 0));;
	};
	jule::Ptr<_1d9e522d9_File> _7813_f = ({
		auto except = static__1c157ce4a_Open(_6720_path, static_cast<jule::I64>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_1d9e522d9_File>(nullptr);});
	});;
	__JULE_DEFER({
		({
			auto except = _1d9e5386d_Close(_7813_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});;
	jule::Slice<jule::U8> _8113_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_1d9e54d14_Size(_689_s.ptr())), static_cast<jule::I64>(_1d9e54d14_Size(_689_s.ptr())), 0);;
	jule::I64 _829_n = ({
		auto except = _1c157d951_Read(_7813_f.ptr(), _8113_buff);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} 0;});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), _8113_buff.slice(0LL, _829_n));;
}



inline jule::VoidExceptional static__1d9e53131_Write(jule::Str _9121_path, jule::Slice<jule::U8> _9132_data, jule::I64 _9146_perm) {
	jule::Ptr<_1d9e522d9_File> _9213_f = ({
		auto except = static__1c157ce4a_Open(_9121_path, static_cast<jule::I64>(769LL), _9146_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional(except.error);
		} jule::Ptr<_1d9e522d9_File>(nullptr);});
	});;
	({
		auto except = _1c157d610_Write(_9213_f.ptr(), _9132_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _1d9e5386d_Close(_9213_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1d9e5386d_Close(_1d9e522d9_File* _self_) {
	if ((_1d9e3ea13_Close(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(_1d9e50705_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::Ptr<_1d9e522d9_File>> static__1c157ce4a_Open(jule::Str _2120_path, jule::I64 _2131_flag, jule::I64 _2144_mode) {
	jule::Slice<jule::U16> _229_utf16Path = _1d9e0d98d_UTF16FromStr(_2120_path);;
	jule::I64 _239_handle = _1d9e38c3d_Wopen((&(_229_utf16Path[0LL])), static_cast<jule::I64>(_2131_flag), _2144_mode);;
	if ((_239_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_1d9e522d9_File>>(jule::Any(_1d9e50705_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::Ptr<_1d9e522d9_File>>(jule::Any(), static__1d9e52707_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_239_handle))));;
}



inline jule::VoidExceptional static__1c157d17b_Remove(jule::Str _3422_path) {
	jule::Slice<jule::U16> _359_utf16Path = _1d9e0d98d_UTF16FromStr(_3422_path);;
	if ((!(_1d9e39854_DeleteFile((&(_359_utf16Path[0LL])))))) {
		return jule::VoidExceptional(jule::Any(_1d9e50705_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _1c157d610_Write(_1d9e522d9_File* _self_, jule::Slice<jule::U8> _4924_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_4924_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	if (_1c157dcc5_isConsoleHandle((*(_self_))._field_handle)) {
		jule::Slice<jule::U16> _5513_utf16Buf = _1d9e0d98d_UTF16FromStr(static_cast<jule::Str>(_4924_buf));;
		jule::Bool _5613_ok = _1d9e3b3a0_WriteConsole((*(_self_))._field_handle, (&(_5513_utf16Buf[0LL])), static_cast<jule::I64>(_5513_utf16Buf.len()), &(__jule_func_result), nullptr);;
		if ((!(_5613_ok))) {
			return jule::Exceptional<jule::I64>(jule::Any(_1d9e50705_getLastFsError(), &__jule_any_type0));
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_1d9e3ee42_Write(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), (&(_4924_buf[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_4924_buf.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_1d9e50705_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::Exceptional<jule::I64> _1c157d951_Read(_1d9e522d9_File* _self_, jule::Slice<jule::U8> _7927_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_7927_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	if (_1c157dcc5_isConsoleHandle((*(_self_))._field_handle)) {
		jule::Slice<jule::U16> _8517_codepage = jule::Slice<jule::U16>::alloc(_7927_buf.len(), _7927_buf.len(), 0);;
		jule::Bool _8613_ok = _1d9e3b889_ReadConsole((*(_self_))._field_handle, (&(_8517_codepage[0LL])), static_cast<jule::I64>(_7927_buf.len()), &(__jule_func_result));;
		if ((!(_8613_ok))) {
			return jule::Exceptional<jule::I64>(jule::Any(_1d9e50705_getLastFsError(), &__jule_any_type0));
		};
		jule::Slice<jule::I32> _9113_runes = _1d9e0d3e9_Decode(_8517_codepage.slice(0LL, __jule_func_result));;
		__jule_func_result=0LL;
		{
			auto expr = &(_9113_runes);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bb978bca:;
			if (it != expr_end) {
				jule::I32 *_9320_r = it;
				{
					jule::I64 _9417_size = _1c157aa3b_RuneLen((*(_9320_r)));;
					if (((__jule_func_result + _9417_size) > _7927_buf.len())) {
						goto _iter_end_1bb978bca;
					};
					_1c157ae8c_EncodeRune(_7927_buf.slice(__jule_func_result), (*(_9320_r)));
					__jule_func_result+=_9417_size;
				}
				_iter_next_1bb978bca:;
				++it;
				goto _iter_begin_1bb978bca;
			}
			_iter_end_1bb978bca:;
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_1d9e3e66c_Read(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), (&(_7927_buf[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_7927_buf.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_1d9e50705_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}





std::ostream &operator<<(std::ostream &_Stream, _1d9e522d9_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d9e547e7_IsDir(_1d9e5441d_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL));;
}



inline jule::Bool _1d9e54a7d_IsReg(_1d9e5441d_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(2LL)) == static_cast<jule::I64>(2LL));;
}



inline jule::U64 _1d9e54d14_Size(_1d9e5441d_Status* _self_) {
	return (*(_self_))._field_size;;
}



inline jule::Exceptional<jule::Ptr<_1d9e5441d_Status>> static__1a6946a48_Of(jule::Str _1218_path) {
	if ((_1218_path).empty()) {
		return jule::Exceptional<jule::Ptr<_1d9e5441d_Status>>(jule::Any(static_cast<jule::I64>(4LL), &__jule_any_type0));
	};
	jule::Slice<jule::U16> _169_utf16Path = _1d9e0d98d_UTF16FromStr(_1218_path);;
	struct _stat _1713_handle = (struct _stat){};;
	jule::I64 _189_code = _1d9e3880e_Wstat((&(_169_utf16Path[0LL])), (&(_1713_handle)));;
	if ((_189_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_1d9e5441d_Status>>(jule::Any(_1d9e50705_getLastFsError(), &__jule_any_type0));
	};
	jule::Ptr<_1d9e5441d_Status> _2213_stat = jule::new_ptr<_1d9e5441d_Status>();;
	(*(_2213_stat))._field_size=_1713_handle.st_size;
	if (((_1713_handle.st_mode & 16384LLU) == 16384LLU)) {
		(*(_2213_stat))._field_mode|=static_cast<jule::I64>(1LL);
	} else if (((_1713_handle.st_mode & 32768LLU) == 32768LLU)) {
		(*(_2213_stat))._field_mode|=static_cast<jule::I64>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_1d9e5441d_Status>>(jule::Any(), _2213_stat);;
}





std::ostream &operator<<(std::ostream &_Stream, _1d9e5441d_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7634900_cmdAttrs _Src) {
	_Stream << "cmdAttrs{";
	_Stream << "hProcess:" << _Src._field_hProcess << ", ";
	_Stream << "hThread:" << _Src._field_hThread;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a756d63b_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1dbb0263b_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1dbb032da_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1dbb15594_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dbb0c987_set(_1dbb160bc_decimal* _self_, jule::Slice<jule::U8> _23822_s) {
	jule::Bool __jule_func_result = false;
	jule::I64 _23913_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_23913_i >= _23822_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23822_s[_23913_i] == '+')) {
			_case_begin_1bbe25594:;
			{
				(_23913_i)++;
			}
		}
		else if ((_23822_s[_23913_i] == '-')) {
			_case_begin_1bbe25792:;
			{
				(*(_self_))._field_neg=true;
				(_23913_i)++;
			}
		}
		_match_end_1bbe256a4:;
	};
	jule::Bool _25613_sawdot = false;;
	jule::Bool _25713_sawdigits = false;;
	for (; (_23913_i < _23822_s.len()); (_23913_i)++) {
		{
			{
				
				if ((_23822_s[_23913_i] == '_')) {
					_case_begin_1bbe27244:;
					{
						goto _iter_next_1bbe26ac3;
					}
				}
				else if ((_23822_s[_23913_i] == '.')) {
					_case_begin_1bbe272bb:;
					{
						if (_25613_sawdot) {
							return __jule_func_result;;
						};
						_25613_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1bbe26ac3;
					}
				}
				else if ((('0' <= _23822_s[_23913_i]) && (_23822_s[_23913_i] <= '9'))) {
					_case_begin_1bbe27343:;
					{
						_25713_sawdigits=true;
						if (((_23822_s[_23913_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1bbe26ac3;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23822_s[_23913_i];
							((*(_self_))._field_nd)++;
						} else if ((_23822_s[_23913_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1bbe26ac3;
					}
				}
				_match_end_1bbe27123:;
			};
			goto _iter_end_1bbe26ac3;
		}
	_iter_next_1bbe26ac3:;
	}
	_iter_end_1bbe26ac3:;;
	if ((!(_25713_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_25613_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_23913_i < _23822_s.len()) && (_1dbb07e38_lower(_23822_s[_23913_i]) == 'e'))) {
		(_23913_i)++;
		if ((_23913_i >= _23822_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _30217_esign = 1LL;;
		if ((_23822_s[_23913_i] == '+')) {
			(_23913_i)++;
		} else if ((_23822_s[_23913_i] == '-')) {
			(_23913_i)++;
			_30217_esign=-1LL;
		};
		if ((((_23913_i >= _23822_s.len()) || (_23822_s[_23913_i] < '0')) || (_23822_s[_23913_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _31217_e = 0LL;;
		for (; ((_23913_i < _23822_s.len()) && ((('0' <= _23822_s[_23913_i]) && (_23822_s[_23913_i] <= '9')) || (_23822_s[_23913_i] == '_'))); (_23913_i)++) {
			{
				if ((_23822_s[_23913_i] == '_')) {
					goto _iter_next_1bbe2d008;
				};
				if ((_31217_e < 10000LL)) {
					_31217_e=static_cast<jule::I64>((((_31217_e * 10LL) + static_cast<jule::I64>(_23822_s[_23913_i])) - '0'));
				};
			}
		_iter_next_1bbe2d008:;
		}
		_iter_end_1bbe2d008:;;
		(*(_self_))._field_dp+=(_31217_e * _30217_esign);
	};
	if ((_23913_i != _23822_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1dbb0ccc8_floatBits(_1dbb160bc_decimal* _self_, _1dbb0263b_floatInfo* _33229_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _33313_exp = 0LL;;
	jule::U64 _33413_mant = static_cast<jule::U64>(0LLU);;
	if (((*(_self_))._field_nd == 0LL)) {
		_33413_mant=0LLU;
		_33313_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_1bbe3c633;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_1bbe33dcc;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_33413_mant=0LLU;
		_33313_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_1bbe3c633;
	};
	_33313_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I64 _35917_n = 0LL;;
			if (((*(_self_))._field_dp >= _1dbb0c646_powtab.len())) {
				_35917_n=27LL;
			} else {
				_35917_n=_1dbb0c646_powtab[(*(_self_))._field_dp];
			};
			_1dbb1672c_shift(_self_, static_cast<jule::I64>((-(_35917_n))));
			_33313_exp+=_35917_n;
		}
	_iter_next_1bbe3396a:;
	}
	_iter_end_1bbe3396a:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I64 _36917_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _1dbb0c646_powtab.len())) {
				_36917_n=27LL;
			} else {
				_36917_n=_1dbb0c646_powtab[(-((*(_self_))._field_dp))];
			};
			_1dbb1672c_shift(_self_, _36917_n);
			_33313_exp-=_36917_n;
		}
	_iter_next_1bbe35142:;
	}
	_iter_end_1bbe35142:;;
	(_33313_exp)--;
	if ((_33313_exp < ((*(_33229_flt))._field_bias + 1LL))) {
		jule::I64 _38613_n = (((*(_33229_flt))._field_bias + 1LL) - _33313_exp);;
		_1dbb1672c_shift(_self_, static_cast<jule::I64>((-(_38613_n))));
		_33313_exp+=_38613_n;
	};
	if (((_33313_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
		goto _julec_label_1bbe33dcc;
	};
	_1dbb1672c_shift(_self_, static_cast<jule::I64>(static_cast<jule::I64>((1LL + (*(_33229_flt))._field_mantbits))));
	_33413_mant=static_cast<jule::U64>(_1dbb172cc_roundedInteger(_self_));
	if ((_33413_mant == (2LLU << (*(_33229_flt))._field_mantbits))) {
		_33413_mant>>=1LLU;
		(_33313_exp)++;
		if (((_33313_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
			goto _julec_label_1bbe33dcc;
		};
	};
	if (((_33413_mant & (1LLU << (*(_33229_flt))._field_mantbits)) == 0LLU)) {
		_33313_exp=(*(_33229_flt))._field_bias;
	};
	goto _julec_label_1bbe3c633;
	_julec_label_1bbe33dcc:;
	_33413_mant=0LLU;
	_33313_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << (*(_33229_flt))._field_expbits) - 1LLU) + static_cast<jule::U64>((*(_33229_flt))._field_bias))));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_1bbe3c633:;
	jule::U64 _42213_bits = (_33413_mant & ((1LLU << (*(_33229_flt))._field_mantbits) - 1LLU));;
	_42213_bits|=(static_cast<jule::U64>(((_33313_exp - (*(_33229_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) << (*(_33229_flt))._field_mantbits);
	if ((*(_self_))._field_neg) {
		_42213_bits|=((1LLU << (*(_33229_flt))._field_mantbits) << (*(_33229_flt))._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _42213_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1dbb16474_assign(_1dbb160bc_decimal* _self_, jule::U64 _15129_v) {
	jule::Array<jule::U8,24> _15217_buf = jule::Array<jule::U8,24>(0);;
	jule::I64 _15513_n = 0LL;;
	while ((_15129_v > 0LLU)) {
		{
			jule::U64 _15713_v1 = (_15129_v / 10LLU);;
			_15129_v-=(10LLU * _15713_v1);
			_15217_buf[_15513_n]=static_cast<jule::U8>(static_cast<jule::U8>((_15129_v + '0')));
			(_15513_n)++;
			_15129_v=_15713_v1;
		}
	_iter_next_1bbe410b5:;
	}
	_iter_end_1bbe410b5:;;
	(*(_self_))._field_nd=0LL;
	(_15513_n)--;
	for (; (_15513_n >= 0LL); (_15513_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15217_buf[_15513_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1bbe41a22:;
	}
	_iter_end_1bbe41a22:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_1dbb1791a_trim(_self_);
}



inline void _1dbb1672c_shift(_1dbb160bc_decimal* _self_, jule::I64 _17628_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1bbe439d0:;
		}
		else if ((_17628_k > 0LL)) {
			_case_begin_1bbe43a57:;
			{
				while ((_17628_k > 60LL)) {
					{
						_1dbb18465_leftShift(_self_, 60LLU);
						_17628_k-=60LL;
					}
				_iter_next_1bbe446a1:;
				}
				_iter_end_1bbe446a1:;;
				_1dbb18465_leftShift(_self_, static_cast<jule::U64>(static_cast<jule::U64>(_17628_k)));
			}
		}
		else if ((_17628_k < 0LL)) {
			_case_begin_1bbe43ace:;
			{
				while ((_17628_k < -60LL)) {
					{
						_1dbb17c06_rightShift(_self_, 60LLU);
						_17628_k+=60LL;
					}
				_iter_next_1bbe44629:;
				}
				_iter_end_1bbe44629:;;
				_1dbb17c06_rightShift(_self_, static_cast<jule::U64>(static_cast<jule::U64>((-(_17628_k)))));
			}
		}
		_match_end_1bbe438ae:;
	};
}



inline void _1dbb169d5_roundDown(_1dbb160bc_decimal* _self_, jule::I64 _19628_nd) {
	if (((_19628_nd < 0LL) || (_19628_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19628_nd;
	_1dbb1791a_trim(_self_);
}



inline void _1dbb16c8d_roundUp(_1dbb160bc_decimal* _self_, jule::I64 _20526_nd) {
	if (((_20526_nd < 0LL) || (_20526_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I64 _21113_i = (_20526_nd - 1LL);;
	for (; (_21113_i >= 0LL); (_21113_i)--) {
		{
			jule::U8 _21313_c = (*(_self_))._field_d[_21113_i];;
			if ((_21313_c < '9')) {
				((*(_self_))._field_d[_21113_i])++;
				(*(_self_))._field_nd=static_cast<jule::I64>((_21113_i + 1LL));
				return;;
			};
		}
	_iter_next_1bbe47b7c:;
	}
	_iter_end_1bbe47b7c:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _1dbb17046_round(_1dbb160bc_decimal* _self_, jule::I64 _23224_nd) {
	if (((_23224_nd < 0LL) || (_23224_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_1dbb187d9_shouldRoundUp(_self_, _23224_nd)) {
		_1dbb16c8d_roundUp(_self_, _23224_nd);
	} else {
		_1dbb169d5_roundDown(_self_, _23224_nd);
	};
}



inline jule::U64 _1dbb172cc_roundedInteger(_1dbb160bc_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I64 _24913_i = 0LL;;
	jule::U64 _25013_n = static_cast<jule::U64>(0LLU);;
	for (; ((_24913_i < (*(_self_))._field_dp) && (_24913_i < (*(_self_))._field_nd)); (_24913_i)++) {
		{
			_25013_n=static_cast<jule::U64>(((_25013_n * 10LLU) + static_cast<jule::U64>(((*(_self_))._field_d[_24913_i] - '0'))));
		}
	_iter_next_1bbe4aa92:;
	}
	_iter_end_1bbe4aa92:;;
	for (; (_24913_i < (*(_self_))._field_dp); (_24913_i)++) {
		{
			_25013_n*=10LLU;
		}
	_iter_next_1bbe4cad8:;
	}
	_iter_end_1bbe4cad8:;;
	if (_1dbb187d9_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_25013_n)++;
	};
	return _25013_n;;
}





std::ostream &operator<<(std::ostream &_Stream, _1dbb160bc_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a6cde8d5_Const> static__1a6cded25_NewI64(jule::I64 _1622_x) {
	return jule::new_ptr<_1a6cde8d5_Const>(_1a6cde8d5_Const{._field_data=jule::Any(_1622_x, &__jule_any_type1)});;
}



inline jule::Ptr<_1a6cde8d5_Const> static__1a6ce00de_NewU64(jule::U64 _1922_x) {
	return jule::new_ptr<_1a6cde8d5_Const>(_1a6cde8d5_Const{._field_data=jule::Any(_1922_x, &__jule_any_type2)});;
}



inline jule::Ptr<_1a6cde8d5_Const> static__1a6ce03a8_NewBool(jule::Bool _2223_x) {
	return jule::new_ptr<_1a6cde8d5_Const>(_1a6cde8d5_Const{._field_data=jule::Any(_2223_x, &__jule_any_type3)});;
}



inline jule::Ptr<_1a6cde8d5_Const> static__1a6ce0672_NewStr(jule::Str _2522_x) {
	return jule::new_ptr<_1a6cde8d5_Const>(_1a6cde8d5_Const{._field_data=jule::Any(_2522_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1a6cde8d5_Const> static__1a6ce093b_NewF64(jule::F64 _2822_x) {
	return jule::new_ptr<_1a6cde8d5_Const>(_1a6cde8d5_Const{._field_data=jule::Any(_2822_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1a6cde8d5_Const> static__1a6ce0b4a_NewNil(void) {
	return jule::new_ptr<_1a6cde8d5_Const>(_1a6cde8d5_Const{._field_data=nullptr});;
}



inline jule::I64 _1a6ce12aa_ReadI64(_1a6cde8d5_Const* _self_) {
	if ((!(_1a6ce38a6_IsI64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1));;
}



inline jule::U64 _1a6ce1541_ReadU64(_1a6cde8d5_Const* _self_) {
	if ((!(_1a6ce3b3c_IsU64(_self_)))) {
		return 0LLU;;
	};
	return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2));;
}



inline jule::Bool _1a6ce17c7_ReadBool(_1a6cde8d5_Const* _self_) {
	if ((!(_1a6ce3dc3_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type3);;
}



inline jule::Str _1a6ce1a5d_ReadStr(_1a6cde8d5_Const* _self_) {
	if ((!(_1a6ce4159_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type4);;
}



inline jule::F64 _1a6ce1ce4_ReadF64(_1a6cde8d5_Const* _self_) {
	if ((!(_1a6ce43e0_IsF64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5));;
}



inline jule::I64 _1a6ce207a_AsI64(_1a6cde8d5_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1bbeb3478:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1bbeb3852:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1bbeb38b8:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5)));;
			}
		}
		else {
			_case_begin_1bbeb37db:;
			{
				return 0LL;;
			}
		}
		_match_end_1bbeb3632:;
	};
}



inline jule::U64 _1a6ce2311_AsU64(_1a6cde8d5_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1bbeb4710:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2));;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1bbeb518e:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1bbeb5205:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5)));;
			}
		}
		else {
			_case_begin_1bbeb4127:;
			{
				return 0LLU;;
			}
		}
		_match_end_1bbeb40c2:;
	};
}



inline jule::F64 _1a6ce2597_AsF64(_1a6cde8d5_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1bbeb5e92:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5));;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1bbeb6921:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1bbeb6987:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2)));;
			}
		}
		else {
			_case_begin_1bbeb58a9:;
			{
				return 0LL;;
			}
		}
		_match_end_1bbeb5854:;
	};
}



inline void _1a6ce2850_SetI64(_1a6cde8d5_Const* _self_, jule::I64 _13825_x) {
	(*(_self_))._field_data=jule::Any(_13825_x, &__jule_any_type1);
}



inline void _1a6ce2b08_SetU64(_1a6cde8d5_Const* _self_, jule::U64 _14125_x) {
	(*(_self_))._field_data=jule::Any(_14125_x, &__jule_any_type2);
}



inline void _1a6ce2db1_SetBool(_1a6cde8d5_Const* _self_, jule::Bool _14426_x) {
	(*(_self_))._field_data=jule::Any(_14426_x, &__jule_any_type3);
}



inline void _1a6ce3169_SetStr(_1a6cde8d5_Const* _self_, jule::Str _14725_x) {
	(*(_self_))._field_data=jule::Any(_14725_x, &__jule_any_type4);
}



inline void _1a6ce3422_SetF64(_1a6cde8d5_Const* _self_, jule::F64 _15025_x) {
	(*(_self_))._field_data=jule::Any(_15025_x, &__jule_any_type5);
}



inline jule::Bool _1a6ce38a6_IsI64(_1a6cde8d5_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1bbeba6d3:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bbeba925:;
			{
				return false;;
			}
		}
		_match_end_1bbeba8c0:;
	};
}



inline jule::Bool _1a6ce3b3c_IsU64(_1a6cde8d5_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1bbebb0c9:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bbebb32c:;
			{
				return false;;
			}
		}
		_match_end_1bbebb2c7:;
	};
}



inline jule::Bool _1a6ce3dc3_IsBool(_1a6cde8d5_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1bbebba36:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bbebbc89:;
			{
				return false;;
			}
		}
		_match_end_1bbebbc34:;
	};
}



inline jule::Bool _1a6ce4159_IsStr(_1a6cde8d5_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1bbebc493:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bbebc6e6:;
			{
				return false;;
			}
		}
		_match_end_1bbebc691:;
	};
}



inline jule::Bool _1a6ce43e0_IsF64(_1a6cde8d5_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1bbebce00:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bbebd153:;
			{
				return false;;
			}
		}
		_match_end_1bbebd0ed:;
	};
}



inline jule::Bool _1a6ce4676_IsNil(_1a6cde8d5_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _1a6ce4d08_And(_1a6cde8d5_Const* _self_, _1a6cde8d5_Const _23818_x) {
	{
		
		if ((_1a6ce3dc3_IsBool(_self_) && _1a6ce3dc3_IsBool(&_23818_x))) {
			_case_begin_1bbec2454:;
			{
				return (_1a6ce17c7_ReadBool(_self_) && _1a6ce17c7_ReadBool(&_23818_x));;
			}
		}
		else {
			_case_begin_1bbec2399:;
			{
				return false;;
			}
		}
		_match_end_1bbec1eae:;
	};
}



inline jule::Bool _1a6ce5149_Or(_1a6cde8d5_Const* _self_, _1a6cde8d5_Const _24917_x) {
	{
		
		if ((_1a6ce3dc3_IsBool(_self_) && _1a6ce3dc3_IsBool(&_24917_x))) {
			_case_begin_1bbec3763:;
			{
				return (_1a6ce17c7_ReadBool(_self_) || _1a6ce17c7_ReadBool(&_24917_x));;
			}
		}
		else {
			_case_begin_1bbec2e05:;
			{
				return false;;
			}
		}
		_match_end_1bbec2d5b:;
	};
}



inline jule::Bool _1a6ce548a_Eq(_1a6cde8d5_Const* _self_, _1a6cde8d5_Const _26017_x) {
	{
		
		if (_1a6ce4676_IsNil(_self_)) {
			_case_begin_1bbec4a94:;
			{
				return _1a6ce4676_IsNil(&_26017_x);;
			}
		}
		else if (_1a6ce3dc3_IsBool(_self_)) {
			_case_begin_1bbec4b1b:;
			{
				return (_1a6ce3dc3_IsBool(&_26017_x) && (_1a6ce17c7_ReadBool(_self_) == _1a6ce17c7_ReadBool(&_26017_x)));;
			}
		}
		else if (_1a6ce4159_IsStr(_self_)) {
			_case_begin_1bbec4d91:;
			{
				return (_1a6ce4159_IsStr(&_26017_x) && (_1a6ce1a5d_ReadStr(_self_) == _1a6ce1a5d_ReadStr(&_26017_x)));;
			}
		}
		else if (_1a6ce38a6_IsI64(_self_)) {
			_case_begin_1bbec4e07:;
			{
				return (_1a6ce12aa_ReadI64(_self_) == _1a6ce207a_AsI64(&_26017_x));;
			}
		}
		else if (_1a6ce3b3c_IsU64(_self_)) {
			_case_begin_1bbec4e6d:;
			{
				return (_1a6ce1541_ReadU64(_self_) == _1a6ce2311_AsU64(&_26017_x));;
			}
		}
		else if (_1a6ce43e0_IsF64(_self_)) {
			_case_begin_1bbec4ed4:;
			{
				return (_1a6ce1ce4_ReadF64(_self_) == _1a6ce2597_AsF64(&_26017_x));;
			}
		}
		else {
			_case_begin_1bbec41d1:;
			{
				return false;;
			}
		}
		_match_end_1bbec4137:;
	};
}



inline jule::Bool _1a6ce57cb_Lt(_1a6cde8d5_Const* _self_, _1a6cde8d5_Const _28717_x) {
	{
		
		if (_1a6ce4159_IsStr(_self_)) {
			_case_begin_1bbec8757:;
			{
				return (_1a6ce4159_IsStr(&_28717_x) && (_1a6ce1a5d_ReadStr(_self_) < _1a6ce1a5d_ReadStr(&_28717_x)));;
			}
		}
		else if (_1a6ce38a6_IsI64(_self_)) {
			_case_begin_1bbec87bd:;
			{
				return (_1a6ce12aa_ReadI64(_self_) < _1a6ce207a_AsI64(&_28717_x));;
			}
		}
		else if (_1a6ce3b3c_IsU64(_self_)) {
			_case_begin_1bbec8845:;
			{
				return (_1a6ce1541_ReadU64(_self_) < _1a6ce2311_AsU64(&_28717_x));;
			}
		}
		else if (_1a6ce43e0_IsF64(_self_)) {
			_case_begin_1bbec8a76:;
			{
				return (_1a6ce1ce4_ReadF64(_self_) < _1a6ce2597_AsF64(&_28717_x));;
			}
		}
		else {
			_case_begin_1bbec5479:;
			{
				return false;;
			}
		}
		_match_end_1bbec53ad:;
	};
}



inline jule::Bool _1a6ce5b1c_LtEq(_1a6cde8d5_Const* _self_, _1a6cde8d5_Const _31019_x) {
	{
		
		if (_1a6ce4159_IsStr(_self_)) {
			_case_begin_1bbecb419:;
			{
				return (_1a6ce4159_IsStr(&_31019_x) && (_1a6ce1a5d_ReadStr(_self_) <= _1a6ce1a5d_ReadStr(&_31019_x)));;
			}
		}
		else if (_1a6ce38a6_IsI64(_self_)) {
			_case_begin_1bbecb480:;
			{
				return (_1a6ce12aa_ReadI64(_self_) <= _1a6ce207a_AsI64(&_31019_x));;
			}
		}
		else if (_1a6ce3b3c_IsU64(_self_)) {
			_case_begin_1bbecb507:;
			{
				return (_1a6ce1541_ReadU64(_self_) <= _1a6ce2311_AsU64(&_31019_x));;
			}
		}
		else if (_1a6ce43e0_IsF64(_self_)) {
			_case_begin_1bbecb738:;
			{
				return (_1a6ce1ce4_ReadF64(_self_) <= _1a6ce2597_AsF64(&_31019_x));;
			}
		}
		else {
			_case_begin_1bbec90b5:;
			{
				return false;;
			}
		}
		_match_end_1bbec8ee9:;
	};
}



inline jule::Bool _1a6ce5e5d_Gt(_1a6cde8d5_Const* _self_, _1a6cde8d5_Const _33317_x) {
	{
		
		if (_1a6ce4159_IsStr(_self_)) {
			_case_begin_1bbece0cb:;
			{
				return (_1a6ce4159_IsStr(&_33317_x) && (_1a6ce1a5d_ReadStr(_self_) > _1a6ce1a5d_ReadStr(&_33317_x)));;
			}
		}
		else if (_1a6ce38a6_IsI64(_self_)) {
			_case_begin_1bbece142:;
			{
				return (_1a6ce12aa_ReadI64(_self_) > _1a6ce207a_AsI64(&_33317_x));;
			}
		}
		else if (_1a6ce3b3c_IsU64(_self_)) {
			_case_begin_1bbece1b9:;
			{
				return (_1a6ce1541_ReadU64(_self_) > _1a6ce2311_AsU64(&_33317_x));;
			}
		}
		else if (_1a6ce43e0_IsF64(_self_)) {
			_case_begin_1bbece3ea:;
			{
				return (_1a6ce1ce4_ReadF64(_self_) > _1a6ce2597_AsF64(&_33317_x));;
			}
		}
		else {
			_case_begin_1bbecbc77:;
			{
				return false;;
			}
		}
		_match_end_1bbecbbab:;
	};
}



inline jule::Bool _1a6ce629e_GtEq(_1a6cde8d5_Const* _self_, _1a6cde8d5_Const _35619_x) {
	{
		
		if (_1a6ce4159_IsStr(_self_)) {
			_case_begin_1bbed1c8d:;
			{
				return (_1a6ce4159_IsStr(&_35619_x) && (_1a6ce1a5d_ReadStr(_self_) >= _1a6ce1a5d_ReadStr(&_35619_x)));;
			}
		}
		else if (_1a6ce38a6_IsI64(_self_)) {
			_case_begin_1bbed1d04:;
			{
				return (_1a6ce12aa_ReadI64(_self_) >= _1a6ce207a_AsI64(&_35619_x));;
			}
		}
		else if (_1a6ce3b3c_IsU64(_self_)) {
			_case_begin_1bbed1d7b:;
			{
				return (_1a6ce1541_ReadU64(_self_) >= _1a6ce2311_AsU64(&_35619_x));;
			}
		}
		else if (_1a6ce43e0_IsF64(_self_)) {
			_case_begin_1bbed20ac:;
			{
				return (_1a6ce1ce4_ReadF64(_self_) >= _1a6ce2597_AsF64(&_35619_x));;
			}
		}
		else {
			_case_begin_1bbece939:;
			{
				return false;;
			}
		}
		_match_end_1bbece86d:;
	};
}



inline jule::Bool _1a6ce65e0_Add(_1a6cde8d5_Const* _self_, _1a6cde8d5_Const _37722_x) {
	{
		
		if (_1a6ce4159_IsStr(_self_)) {
			_case_begin_1bbed4950:;
			{
				if ((!(_1a6ce4159_IsStr(&_37722_x)))) {
					return false;;
				};
				_1a6ce3169_SetStr(_self_, (_1a6ce1a5d_ReadStr(_self_) + _1a6ce1a5d_ReadStr(&_37722_x)));
			}
		}
		else if (_1a6ce43e0_IsF64(_self_)) {
			_case_begin_1bbed49b6:;
			{
				_1a6ce3422_SetF64(_self_, static_cast<jule::F64>((_1a6ce1ce4_ReadF64(_self_) + _1a6ce2597_AsF64(&_37722_x))));
			}
		}
		else if (_1a6ce38a6_IsI64(_self_)) {
			_case_begin_1bbed4a3d:;
			{
				if (_1a6ce43e0_IsF64(&_37722_x)) {
					_1a6ce3422_SetF64(_self_, static_cast<jule::F64>((_1a6ce2597_AsF64(_self_) + _1a6ce1ce4_ReadF64(&_37722_x))));
				} else {
					_1a6ce2850_SetI64(_self_, static_cast<jule::I64>((_1a6ce12aa_ReadI64(_self_) + _1a6ce207a_AsI64(&_37722_x))));
				};
			}
		}
		else if (_1a6ce3b3c_IsU64(_self_)) {
			_case_begin_1bbed4c6e:;
			{
				if (_1a6ce43e0_IsF64(&_37722_x)) {
					_1a6ce3422_SetF64(_self_, static_cast<jule::F64>((_1a6ce2597_AsF64(_self_) + _1a6ce1ce4_ReadF64(&_37722_x))));
				} else {
					_1a6ce2b08_SetU64(_self_, static_cast<jule::U64>((_1a6ce1541_ReadU64(_self_) + _1a6ce2311_AsU64(&_37722_x))));
				};
			}
		}
		else {
			_case_begin_1bbed25eb:;
			{
				return false;;
			}
		}
		_match_end_1bbed2530:;
	};
	return true;;
}



inline jule::Bool _1a6ce6931_Sub(_1a6cde8d5_Const* _self_, _1a6cde8d5_Const _40622_x) {
	{
		
		if (_1a6ce43e0_IsF64(_self_)) {
			_case_begin_1bbed9878:;
			{
				_1a6ce3422_SetF64(_self_, static_cast<jule::F64>((_1a6ce1ce4_ReadF64(_self_) - _1a6ce2597_AsF64(&_40622_x))));
			}
		}
		else if (_1a6ce38a6_IsI64(_self_)) {
			_case_begin_1bbed9900:;
			{
				if (_1a6ce43e0_IsF64(&_40622_x)) {
					_1a6ce3422_SetF64(_self_, static_cast<jule::F64>((_1a6ce2597_AsF64(_self_) - _1a6ce1ce4_ReadF64(&_40622_x))));
				} else {
					_1a6ce2850_SetI64(_self_, static_cast<jule::I64>((_1a6ce12aa_ReadI64(_self_) - _1a6ce207a_AsI64(&_40622_x))));
				};
			}
		}
		else if (_1a6ce3b3c_IsU64(_self_)) {
			_case_begin_1bbed9977:;
			{
				if (_1a6ce43e0_IsF64(&_40622_x)) {
					_1a6ce3422_SetF64(_self_, static_cast<jule::F64>((_1a6ce2597_AsF64(_self_) - _1a6ce1ce4_ReadF64(&_40622_x))));
				} else {
					_1a6ce2b08_SetU64(_self_, static_cast<jule::U64>((_1a6ce1541_ReadU64(_self_) - _1a6ce2311_AsU64(&_40622_x))));
				};
			}
		}
		else {
			_case_begin_1bbed914c:;
			{
				return false;;
			}
		}
		_match_end_1bbed9081:;
	};
	return true;;
}



inline jule::Bool _1a6ce6c72_Mul(_1a6cde8d5_Const* _self_, _1a6cde8d5_Const _43022_x) {
	{
		
		if (_1a6ce43e0_IsF64(_self_)) {
			_case_begin_1bbedd926:;
			{
				_1a6ce3422_SetF64(_self_, static_cast<jule::F64>((_1a6ce1ce4_ReadF64(_self_) * _1a6ce2597_AsF64(&_43022_x))));
			}
		}
		else if (_1a6ce38a6_IsI64(_self_)) {
			_case_begin_1bbedd99d:;
			{
				if (_1a6ce43e0_IsF64(&_43022_x)) {
					_1a6ce3422_SetF64(_self_, static_cast<jule::F64>((_1a6ce2597_AsF64(_self_) * _1a6ce1ce4_ReadF64(&_43022_x))));
				} else {
					_1a6ce2850_SetI64(_self_, static_cast<jule::I64>((_1a6ce12aa_ReadI64(_self_) * _1a6ce207a_AsI64(&_43022_x))));
				};
			}
		}
		else if (_1a6ce3b3c_IsU64(_self_)) {
			_case_begin_1bbedda25:;
			{
				if (_1a6ce43e0_IsF64(&_43022_x)) {
					_1a6ce3422_SetF64(_self_, static_cast<jule::F64>((_1a6ce2597_AsF64(_self_) * _1a6ce1ce4_ReadF64(&_43022_x))));
				} else {
					_1a6ce2b08_SetU64(_self_, static_cast<jule::U64>((_1a6ce1541_ReadU64(_self_) * _1a6ce2311_AsU64(&_43022_x))));
				};
			}
		}
		else {
			_case_begin_1bbedd0a7:;
			{
				return false;;
			}
		}
		_match_end_1bbedcedb:;
	};
	return true;;
}



inline jule::Bool _1a6ce70b3_Div(_1a6cde8d5_Const* _self_, _1a6cde8d5_Const _45822_x) {
	{
		
		if (_1a6ce43e0_IsF64(_self_)) {
			_case_begin_1bbee29c4:;
			{
				jule::F64 _46113_l = _1a6ce2597_AsF64(&_45822_x);;
				if ((_46113_l == 0LL)) {
					return false;;
				};
				_1a6ce3422_SetF64(_self_, static_cast<jule::F64>(jule::div(_1a6ce1ce4_ReadF64(_self_),_46113_l)));
			}
		}
		else if (_1a6ce38a6_IsI64(_self_)) {
			_case_begin_1bbee2a4b:;
			{
				jule::F64 _46713_l = _1a6ce2597_AsF64(&_45822_x);;
				if ((_46713_l == 0LL)) {
					return false;;
				};
				_1a6ce3422_SetF64(_self_, static_cast<jule::F64>(jule::div(_1a6ce2597_AsF64(_self_),_46713_l)));
			}
		}
		else if (_1a6ce3b3c_IsU64(_self_)) {
			_case_begin_1bbee2ac3:;
			{
				jule::F64 _47313_l = _1a6ce2597_AsF64(&_45822_x);;
				if ((_47313_l == 0LL)) {
					return false;;
				};
				_1a6ce3422_SetF64(_self_, static_cast<jule::F64>(jule::div(_1a6ce2597_AsF64(_self_),_47313_l)));
			}
		}
		else {
			_case_begin_1bbee2155:;
			{
				return false;;
			}
		}
		_match_end_1bbee2089:;
	};
	return true;;
}



inline jule::Bool _1a6ce7404_Mod(_1a6cde8d5_Const* _self_, _1a6cde8d5_Const _48722_x) {
	{
		
		if (_1a6ce38a6_IsI64(_self_)) {
			_case_begin_1bbee6ba4:;
			{
				jule::I64 _49013_l = _1a6ce207a_AsI64(&_48722_x);;
				if ((_49013_l == 0LL)) {
					return false;;
				};
				_1a6ce2850_SetI64(_self_, static_cast<jule::I64>(jule::mod(_1a6ce12aa_ReadI64(_self_),_49013_l)));
			}
		}
		else if (_1a6ce3b3c_IsU64(_self_)) {
			_case_begin_1bbee6c2b:;
			{
				jule::U64 _49613_l = _1a6ce2311_AsU64(&_48722_x);;
				if ((_49613_l == 0LLU)) {
					return false;;
				};
				_1a6ce2b08_SetU64(_self_, static_cast<jule::U64>(jule::mod(_1a6ce1541_ReadU64(_self_),_49613_l)));
			}
		}
		else {
			_case_begin_1bbee6ae9:;
			{
				return false;;
			}
		}
		_match_end_1bbee57b8:;
	};
	return true;;
}



inline jule::Bool _1a6ce7745_BitwiseAnd(_1a6cde8d5_Const* _self_, _1a6cde8d5_Const _50929_x) {
	{
		
		if (_1a6ce38a6_IsI64(_self_)) {
			_case_begin_1bbee9aca:;
			{
				_1a6ce2850_SetI64(_self_, static_cast<jule::I64>((_1a6ce12aa_ReadI64(_self_) & _1a6ce207a_AsI64(&_50929_x))));
			}
		}
		else if (_1a6ce3b3c_IsU64(_self_)) {
			_case_begin_1bbee9b52:;
			{
				_1a6ce2b08_SetU64(_self_, static_cast<jule::U64>((_1a6ce1541_ReadU64(_self_) & _1a6ce2311_AsU64(&_50929_x))));
			}
		}
		else {
			_case_begin_1bbee9a20:;
			{
				return false;;
			}
		}
		_match_end_1bbee86de:;
	};
	return true;;
}



inline jule::Bool _1a6ce7a86_BitwiseOr(_1a6cde8d5_Const* _self_, _1a6cde8d5_Const _52328_x) {
	{
		
		if (_1a6ce38a6_IsI64(_self_)) {
			_case_begin_1bbeeb956:;
			{
				_1a6ce2850_SetI64(_self_, static_cast<jule::I64>((_1a6ce12aa_ReadI64(_self_) | _1a6ce207a_AsI64(&_52328_x))));
			}
		}
		else if (_1a6ce3b3c_IsU64(_self_)) {
			_case_begin_1bbeeb9cd:;
			{
				_1a6ce2b08_SetU64(_self_, static_cast<jule::U64>((_1a6ce1541_ReadU64(_self_) | _1a6ce2311_AsU64(&_52328_x))));
			}
		}
		else {
			_case_begin_1bbeeb88a:;
			{
				return false;;
			}
		}
		_match_end_1bbeeb7be:;
	};
	return true;;
}



inline jule::Bool _1a6ce7dc7_Xor(_1a6cde8d5_Const* _self_, _1a6cde8d5_Const _53722_x) {
	{
		
		if (_1a6ce38a6_IsI64(_self_)) {
			_case_begin_1bbeed7d2:;
			{
				_1a6ce2850_SetI64(_self_, static_cast<jule::I64>((_1a6ce12aa_ReadI64(_self_) ^ _1a6ce207a_AsI64(&_53722_x))));
			}
		}
		else if (_1a6ce3b3c_IsU64(_self_)) {
			_case_begin_1bbeed859:;
			{
				_1a6ce2b08_SetU64(_self_, static_cast<jule::U64>((_1a6ce1541_ReadU64(_self_) ^ _1a6ce2311_AsU64(&_53722_x))));
			}
		}
		else {
			_case_begin_1bbeed716:;
			{
				return false;;
			}
		}
		_match_end_1bbeed64a:;
	};
	return true;;
}



inline jule::Bool _1a6ce8218_Lshift(_1a6cde8d5_Const* _self_, _1a6cde8d5_Const _55125_x) {
	{
		
		if (_1a6ce38a6_IsI64(_self_)) {
			_case_begin_1bc00065d:;
			{
				jule::I64 _55413_l = _1a6ce207a_AsI64(_self_);;
				if ((_55413_l < 0LL)) {
					jule::U64 _55617_r = _1a6ce2311_AsU64(&_55125_x);;
					_1a6ce2850_SetI64(_self_, static_cast<jule::I64>((_55413_l << _55617_r)));
				} else {
					_1a6ce8900_lshiftUnsig(_self_, &(_55125_x));
				};
			}
		}
		else if (_1a6ce3b3c_IsU64(_self_)) {
			_case_begin_1bc0006d5:;
			{
				_1a6ce8900_lshiftUnsig(_self_, &(_55125_x));
			}
		}
		else {
			_case_begin_1bc000592:;
			{
				return false;;
			}
		}
		_match_end_1bc0004c6:;
	};
	return true;;
}



inline jule::Bool _1a6ce8559_Rshift(_1a6cde8d5_Const* _self_, _1a6cde8d5_Const _57125_x) {
	{
		
		if (_1a6ce38a6_IsI64(_self_)) {
			_case_begin_1bc002c37:;
			{
				jule::I64 _57413_l = _1a6ce207a_AsI64(_self_);;
				if ((_57413_l < 0LL)) {
					jule::U64 _57617_r = _1a6ce2311_AsU64(&_57125_x);;
					_1a6ce2850_SetI64(_self_, static_cast<jule::I64>((_57413_l >> _57617_r)));
				} else {
					_1a6ce8c30_rshiftUnsig(_self_, &(_57125_x));
				};
			}
		}
		else if (_1a6ce3b3c_IsU64(_self_)) {
			_case_begin_1bc002cae:;
			{
				_1a6ce8c30_rshiftUnsig(_self_, &(_57125_x));
			}
		}
		else {
			_case_begin_1bc002b6b:;
			{
				return false;;
			}
		}
		_match_end_1bc002aa0:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a6cde8d5_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1ac6b32d6_Prec(_1ac6b2e62_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(57LLU) || _match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1bc0614e3:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1bc06167a:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(71LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1bc0616e1:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1bc061768:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1bc0617e0:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1bc060d61:;
			{
				return 0LLU;;
			}
		}
		_match_end_1bc060cb7:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6b2e62_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline void _1ac6b8b16_Fill(_1ac6b872b_File* _self_, jule::Slice<jule::U8> _1727_data) {
	(*(_self_))._field_Data=_1727_data;
}



inline jule::Str _1ac6b8d9c_Dir(_1ac6b872b_File* _self_) {
	return _1a6945250_Dir((*(_self_))._field_Path);;
}



inline jule::Str _1ac6b9133_Name(_1ac6b872b_File* _self_) {
	return _1a6944da9_Base((*(_self_))._field_Path);;
}



inline jule::Str _1ac6b970a_GetRow(_1ac6b872b_File* _self_, jule::I64 _3821_row) {
	jule::I64 _3913_n = 0LL;;
	jule::I64 _4013_lineStart = 0LL;;
	jule::I64 _4113_i = 0LL;;
	for (; (_4113_i < (*(_self_))._field_Data.len()); (_4113_i)++) {
		{
			if (((*(_self_))._field_Data[_4113_i] != '\n')) {
				goto _iter_next_1bc06696b;
			};
			(_3913_n)++;
			if ((_3913_n == _3821_row)) {
				return static_cast<jule::Str>((*(_self_))._field_Data.slice(_4013_lineStart, _4113_i));;
			};
			_4013_lineStart=static_cast<jule::I64>((_4113_i + 1LL));
		}
	_iter_next_1bc06696b:;
	}
	_iter_end_1bc06696b:;;
	return jule::Str();;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6b872b_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6ba84e_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1ac6c1ee8_pushErr(_1ac6c1965_lex* _self_, jule::Str _44726_fmt, jule::Slice<jule::Any> _44739_args) {
	{ jule::Slice<_1a756d63b_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1ac6bb61e_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44726_fmt, _44739_args)); };
}



inline void _1ac6c2559_lex(_1ac6c1965_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_1ac6c477b_newLine(_self_);
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::Ptr<_1ac6b2e62_Token> _46217_token = _1ac6c5c66_token(_self_);;
			if (((*(_46217_token))._field_Id != static_cast<jule::U64>(0LLU))) {
				{ jule::Slice<jule::Ptr<_1ac6b2e62_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_46217_token); };
			};
		}
	_iter_next_1bc095758:;
	}
	_iter_end_1bc095758:;;
}



inline jule::Str _1ac6c289a_id(_1ac6c1965_lex* _self_, jule::Slice<jule::U8>* _47122_ln) {
	if (((*(_47122_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _4759_r = 0;;
	jule::I64 _47516_i = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c1579d9d_DecodeRune((*(_47122_ln)));
		_4759_r = __jule_assign_result.__jule_result_arg0;
		_47516_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_4759_r != '_') && (!(_1ac6b6691_IsLetter(_4759_r))))) {
		return jule::Str();;
	};
	while ((_47516_i < (*(_47122_ln)).len())) {
		{
			jule::I32 _48113_pr = 0;;
			jule::I64 _48117_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c1579d9d_DecodeRune((*(_47122_ln)).slice(_47516_i));
				_48113_pr = __jule_assign_result.__jule_result_arg0;
				_48117_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_48113_pr != '_') && (!(_1ac6b6c24_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_48113_pr)))))) && (!(_1ac6b6691_IsLetter(_48113_pr))))) {
				(*(_self_))._field_pos+=_47516_i;
				return static_cast<jule::Str>((*(_47122_ln)).slice(0LL, _47516_i));;
			};
			_47516_i+=_48117_n;
		}
	_iter_next_1bc099174:;
	}
	_iter_end_1bc099174:;;
	(*(_self_))._field_pos+=(*(_47122_ln)).len();
	return static_cast<jule::Str>((*(_47122_ln)));;
}



inline jule::Slice<jule::U8> _1ac6c2b31_resume(_1ac6c1965_lex* _self_) {
	jule::I64 _49613_i = (*(_self_))._field_pos;;
	for (; (_49613_i < (*((*(_self_))._field_file))._field_Data.len()); (_49613_i)++) {
		{
			jule::I32 _49813_r = static_cast<jule::I32>((*((*(_self_))._field_file))._field_Data[_49613_i]);;
			if (_1ac6b621d_IsSpace(_49813_r)) {
				;
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _49813_r };
					
					if (_match_expr == '\n') {
						_case_begin_1bc09d2ee:;
						{
							_1ac6c477b_newLine(_self_);
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1bc09d211:;
						{
							(*(_self_))._field_column+=8LL;
						}
					}
					else {
						_case_begin_1bc09cb17:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1bc09cd26:;
				};
				goto _iter_next_1bc099592;
			};
			jule::I64 _51317_j = _49613_i;;
			for (; (_51317_j < (*((*(_self_))._field_file))._field_Data.len()); (_51317_j)++) {
				{
					if (((*((*(_self_))._field_file))._field_Data[_51317_j] == '\n')) {
						goto _iter_end_1bc09bc9d;
					};
				}
			_iter_next_1bc09bc9d:;
			}
			_iter_end_1bc09bc9d:;;
			return (*((*(_self_))._field_file))._field_Data.slice(_49613_i, _51317_j);;
		}
	_iter_next_1bc099592:;
	}
	_iter_end_1bc099592:;;
	return nullptr;;
}



inline void _1ac6c2dd9_lexLineComment(_1ac6c1965_lex* _self_, jule::Ptr<_1ac6b2e62_Token>* _52438_token) {
	jule::I64 _5259_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _52813_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if (((_52813_r == '\n') || (_52813_r == '\r'))) {
				goto _iter_end_1bc0a0c6e;
			};
		}
	_iter_next_1bc0a0c6e:;
	}
	_iter_end_1bc0a0c6e:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		(*((*(_52438_token))))._field_Id=static_cast<jule::U64>(15LLU);
		(*((*(_52438_token))))._field_Kind=static_cast<jule::Str>((*((*(_self_))._field_file))._field_Data.slice(_5259_start, (*(_self_))._field_pos));
	};
}



inline void _1ac6c3192_lexRangeComment(_1ac6c1965_lex* _self_, jule::Ptr<_1ac6b2e62_Token>* _53939_token) {
	jule::I64 _5409_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _54313_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_54313_r == '\r')) {
				goto _iter_next_1bc0a42b1;
			};
			if ((_54313_r == '\n')) {
				_1ac6c477b_newLine(_self_);
				goto _iter_next_1bc0a42b1;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*((*(_self_))._field_file))._field_Data.len()) && (_54313_r == '*')) && ((*((*(_self_))._field_file))._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					(*((*(_53939_token))))._field_Id=static_cast<jule::U64>(15LLU);
					(*((*(_53939_token))))._field_Kind=static_cast<jule::Str>((*((*(_self_))._field_file))._field_Data.slice(_5409_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1bc0a42b1:;
	}
	_iter_end_1bc0a42b1:;;
	_1ac6c1ee8_pushErr(_self_, jule::Str::lit("missing block comment close", 27), jule::Slice<jule::Any>());
}



inline jule::Str _1ac6c34d3_num(_1ac6c1965_lex* _self_, jule::Slice<jule::U8>* _56723_txt) {
	jule::Str __jule_func_result;
	if (((*(_56723_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_1ac6c025a_hexNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1bc0a97c2;
	};
	__jule_func_result=_1ac6bee91_octalNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1bc0a97c2;
	};
	__jule_func_result=_1ac6bd7a8_binaryNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1bc0a97c2;
	};
	__jule_func_result=_1ac6bd4de_commonNum(_56723_txt);
	_julec_label_1bc0a97c2:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1ac6c3824_escapeSeq(_1ac6c1965_lex* _self_, jule::Slice<jule::U8>* _58929_txt) {
	jule::Str _59013_seq = jule::Str();;
	if (((*(_58929_txt)).len() < 2LL)) {
		goto _julec_label_1bc0b0b19;
	};
	{
		auto &_match_expr{ (*(_58929_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1bc0adab2:;
			{
				(*(_self_))._field_pos+=2LL;
				return static_cast<jule::Str>((*(_58929_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1bc0adc5a:;
			{
				_59013_seq=_1ac6c0898_bigUnicodePointEscape(_58929_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1bc0ad7e8:;
			{
				_59013_seq=_1ac6c0b62_littleUnicodePointEscape(_58929_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1bc0ad85e:;
			{
				_59013_seq=_1ac6c0e2b_hexByteEscape(_58929_txt);
			}
		}
		else {
			_case_begin_1bc0ad188:;
			{
				_59013_seq=_1ac6c11e5_byteEscape(_58929_txt);
			}
		}
		_match_end_1bc0ad6c7:;
	};
	_julec_label_1bc0b0b19:;
	if ((_59013_seq).empty()) {
		((*(_self_))._field_pos)++;
		_1ac6c1ee8_pushErr(_self_, jule::Str::lit("invalid escape sequence", 23), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_59013_seq.len();
	return _59013_seq;;
}



inline jule::Str _1ac6c3c20_getRune(_1ac6c1965_lex* _self_, jule::Slice<jule::U8>* _61927_txt, jule::Bool _61940_raw) {
	if (((!(_61940_raw)) && ((*(_61927_txt))[0LL] == '\\'))) {
		return _1ac6c3824_escapeSeq(_self_, _61927_txt);;
	};
	jule::I32 _6239_r = 0;;
	jule::I64 _62312_n = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c1579d9d_DecodeRune((*(_61927_txt)));
		_6239_r = __jule_assign_result.__jule_result_arg0;
		_62312_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_62312_n;
	return jule::Str::from_rune(_6239_r);;
}



inline jule::Str _1ac6c4061_lexRune(_1ac6c1965_lex* _self_, jule::Slice<jule::U8>* _62827_txt) {
	_1c164cc40_StrBuilder _62913_run = static__1c164d191_New(8LL);;
	_1c164d9aa_WriteByte(&_62913_run, '\'');
	((*(_self_))._field_column)++;
	jule::I64 _63213_n = 0LL;;
	jule::I64 _63313_i = 1LL;;
	for (; (_63313_i < (*(_62827_txt)).len()); (_63313_i)++) {
		{
			if (((*(_62827_txt))[_63313_i] == '\r')) {
				goto _iter_next_1bc0b4d4e;
			};
			if (((*(_62827_txt))[_63313_i] == '\n')) {
				_1ac6c1ee8_pushErr(_self_, jule::Str::lit("rune is not finished", 20), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_1ac6c477b_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _64513_part = (*(_62827_txt)).slice(_63313_i);;
			jule::Str _64613_r = _1ac6c3c20_getRune(_self_, &(_64513_part), false);;
			_1c164d702_WriteStr(&_62913_run, _64613_r);
			(*(_self_))._field_column+=_1c157bc18_RuneCountStr(_64613_r);
			if (_64613_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1bc0b4d4e;
			};
			if ((_64613_r.len() > 1LL)) {
				_63313_i+=(_64613_r.len() - 1LL);
			};
			(_63213_n)++;
		}
	_iter_next_1bc0b4d4e:;
	}
	_iter_end_1bc0b4d4e:;;
	if ((_63213_n == 0LL)) {
		_1ac6c1ee8_pushErr(_self_, jule::Str::lit("rune is cannot empty", 20), jule::Slice<jule::Any>());
	} else if ((_63213_n > 1LL)) {
		_1ac6c1ee8_pushErr(_self_, jule::Str::lit("rune is should be single", 24), jule::Slice<jule::Any>());
	};
	return _1c164dee9_Str(&_62913_run);;
}



inline jule::Str _1ac6c42e7_lexStr(_1ac6c1965_lex* _self_) {
	_1c164cc40_StrBuilder _66913_s = static__1c164d191_New(16LL);;
	jule::U8 _6709_mark = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _6729_raw = (_6709_mark == '`');;
	_1c164d9aa_WriteByte(&_66913_s, _6709_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::U8 _67713_ch = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_67713_ch == '\r')) {
				goto _iter_next_1bc0ba42b;
			};
			if ((_67713_ch == '\n')) {
				_1ac6c477b_newLine(_self_);
				if ((!(_6729_raw))) {
					_1ac6c1ee8_pushErr(_self_, jule::Str::lit("string is not finished", 22), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _68917_part = (*((*(_self_))._field_file))._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _69013_r = _1ac6c3c20_getRune(_self_, &(_68917_part), _6729_raw);;
			_1c164d702_WriteStr(&_66913_s, _69013_r);
			(*(_self_))._field_column+=_1c157bc18_RuneCountStr(_69013_r);
			if ((_67713_ch == _6709_mark)) {
				goto _iter_end_1bc0ba42b;
			};
		}
	_iter_next_1bc0ba42b:;
	}
	_iter_end_1bc0ba42b:;;
	return _1c164dee9_Str(&_66913_s);;
}



inline void _1ac6c477b_newLine(_1ac6c1965_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _1ac6c4cdc_isOp(_1ac6c1965_lex* _self_, jule::Slice<jule::U8>* _71024_txt, jule::Str _71037_kind, jule::U64 _71048_id, jule::Ptr<_1ac6b2e62_Token>* _71066_t) {
	if ((!(_1ac6bb9d7_bytesHasPrefix(_71024_txt, _71037_kind)))) {
		return false;;
	};
	(*((*(_71066_t))))._field_Kind=_71037_kind;
	(*((*(_71066_t))))._field_Id=_71048_id;
	(*(_self_))._field_pos+=_71037_kind.len();
	return true;;
}



inline jule::Bool _1ac6c51d8_lexBasicOps(_1ac6c1965_lex* _self_, jule::Slice<jule::U8> _72030_txt, jule::Ptr<_1ac6b2e62_Token>* _72048_tok) {
	{
		auto expr = &(_1ac6bb0be_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc0c1e49:;
		if (it != expr_end) {
			_1ac6ba84e_kindPair *_72116_pair = it;
			{
				if (_1ac6c4cdc_isOp(_self_, &(_72030_txt), (*(_72116_pair))._field_kind, (*(_72116_pair))._field_id, _72048_tok)) {
					return true;;
				};
			}
			_iter_next_1bc0c1e49:;
			++it;
			goto _iter_begin_1bc0c1e49;
		}
		_iter_end_1bc0c1e49:;
	};
	return false;;
}



inline jule::Bool _1ac6c55d4_lexId(_1ac6c1965_lex* _self_, jule::Slice<jule::U8>* _72925_txt, jule::Ptr<_1ac6b2e62_Token>* _72943_t) {
	jule::Str _7309_lex = _1ac6c289a_id(_self_, _72925_txt);;
	if ((_7309_lex).empty()) {
		return false;;
	};
	(*((*(_72943_t))))._field_Kind=_7309_lex;
	(*((*(_72943_t))))._field_Id=static_cast<jule::U64>(1LLU);
	return true;;
}



inline jule::Bool _1ac6c59d0_lexNum(_1ac6c1965_lex* _self_, jule::Slice<jule::U8>* _73926_txt, jule::Ptr<_1ac6b2e62_Token>* _73944_t) {
	jule::Str _7409_lex = _1ac6c34d3_num(_self_, _73926_txt);;
	if ((_7409_lex).empty()) {
		return false;;
	};
	(*((*(_73944_t))))._field_Kind=_7409_lex;
	(*((*(_73944_t))))._field_Id=static_cast<jule::U64>(4LLU);
	return true;;
}



inline jule::Ptr<_1ac6b2e62_Token> _1ac6c5c66_token(_1ac6c1965_lex* _self_) {
	jule::Ptr<_1ac6b2e62_Token> _75113_t = jule::new_ptr<_1ac6b2e62_Token>(_1ac6b2e62_Token{._field_File=(*(_self_))._field_file, ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _7569_txt = _1ac6c2b31_resume(_self_);;
	if ((_7569_txt == nullptr)) {
		return _75113_t;;
	};
	(*(_75113_t))._field_Column=(*(_self_))._field_column;
	(*(_75113_t))._field_Row=(*(_self_))._field_row;
	{
		
		if (_1ac6c59d0_lexNum(_self_, &(_7569_txt), &(_75113_t))) {
			_case_begin_1bc0c8ec8:;
			{
				goto _match_end_1bc0c6e3d;
			}
		}
		else if ((_7569_txt[0LL] == '\'')) {
			_case_begin_1bc0c85c1:;
			{
				(*(_75113_t))._field_Kind=_1ac6c4061_lexRune(_self_, &(_7569_txt));
				(*(_75113_t))._field_Id=static_cast<jule::U64>(4LLU);
				return _75113_t;;
			}
		}
		else if (((_7569_txt[0LL] == '\"') || (_7569_txt[0LL] == '`'))) {
			_case_begin_1bc0c8637:;
			{
				(*(_75113_t))._field_Kind=_1ac6c42e7_lexStr(_self_);
				(*(_75113_t))._field_Id=static_cast<jule::U64>(4LLU);
				return _75113_t;;
			}
		}
		else if (_1ac6bb9d7_bytesHasPrefix(&(_7569_txt), jule::Str::lit("//", 2))) {
			_case_begin_1bc0c869d:;
			{
				_1ac6c2dd9_lexLineComment(_self_, &(_75113_t));
				return _75113_t;;
			}
		}
		else if (_1ac6bb9d7_bytesHasPrefix(&(_7569_txt), jule::Str::lit("/*", 2))) {
			_case_begin_1bc0c7a43:;
			{
				_1ac6c3192_lexRangeComment(_self_, &(_75113_t));
				return _75113_t;;
			}
		}
		else if (_1ac6c51d8_lexBasicOps(_self_, _7569_txt, &(_75113_t))) {
			_case_begin_1bc0c7aa9:;
			{
				goto _match_end_1bc0c6e3d;
			}
		}
		else if (_1ac6c55d4_lexId(_self_, &(_7569_txt), &(_75113_t))) {
			_case_begin_1bc0c7b20:;
			{
				{
					auto expr = &(_1ac6bac7d_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc0cc927:;
					if (it != expr_end) {
						_1ac6ba84e_kindPair *_78820_pair = it;
						{
							if (((*(_78820_pair))._field_kind == (*(_75113_t))._field_Kind)) {
								(*(_75113_t))._field_Id=(*(_78820_pair))._field_id;
								goto _iter_end_1bc0cc927;
							};
						}
						_iter_next_1bc0cc927:;
						++it;
						goto _iter_begin_1bc0cc927;
					}
					_iter_end_1bc0cc927:;
				};
			}
		}
		else {
			_case_begin_1bc0c79cc:;
			{
				jule::I32 _79513_r = 0;;
				jule::I64 _79516_sz = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c1579d9d_DecodeRune(_7569_txt);
					_79513_r = __jule_assign_result.__jule_result_arg0;
					_79516_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1ac6c1ee8_pushErr(_self_, jule::Str::lit("undefined token: @", 18), jule::Slice<jule::Any>::make({jule::Any(_79513_r, &__jule_any_type6)}));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_79516_sz;
				return _75113_t;;
			}
		}
		_match_end_1bc0c6e3d:;
	};
	(*(_self_))._field_column+=_1c157bc18_RuneCountStr((*(_75113_t))._field_Kind);
	return _75113_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6c1965_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6c67a0_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6c7680_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6c7a9d_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6c8681_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6c8c8b_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6c9088_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6c942e_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6c972b_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6c9ab1_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6c9dad_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac6ca51d_IsUnsafe(_1ac6ca1aa_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6ca1aa_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac6cacb0_AutoSized(_1ac6ca94c_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6ca94c_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6cb19a_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6cb574_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6cc9b5_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6cccb2_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6cd389_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6cd686_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6cda60_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6cde39_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6ce3e0_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6cea72_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6cee4b_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6d0325_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6d06ee_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6d0ac8_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6d107e_BinaryExpr _Src) {
	_Stream << "BinaryExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac6d1a63_Unhandled(_1ac6d16de_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1ac6d1ce9_Ignored(_1ac6d16de_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*((*(_self_))._field_Exception))._field_Deferred);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6d16de_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6d21d4_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6d2a0e_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6d2eb5_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6d37e0_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6d3ed8_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6d4978_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6d50d8_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6d53d5_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6d588b_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6d5c65_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6d613e_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6d643b_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6d6a9b_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6d712e_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6d8042_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6d86a2_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac6d9263_IsSelf(_1ac6d8dde_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6d8dde_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac6da6a4_IsAnon(_1ac6da341_FnDecl* _self_) {
	return (*(_self_))._field_Ident.equal("<anonymous>", 11);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6da341_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6db4eb_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6db8c5_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac6dc4a8_IsInf(_1ac6dc145_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6dc145_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac6dccd3_IsWhileNext(_1ac6dc970_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6dc970_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6dd377_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6dd751_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6ddb2a_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6de0d1_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6de4aa_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6de961_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6e019d_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6e0654_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6e0e6d_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6e1787_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6e1c3d_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6e27ee_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6e3129_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6e3789_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6e3a53_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6e4449_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6e4b86_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Inherits:" << _Src._field_Inherits << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6e52e6_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac701555_FieldIns> _1ac6eb808_instance(jule::Ptr<_1ac6eb484_Field> _self_) {
	return jule::new_ptr<_1ac701555_FieldIns>(_1ac701555_FieldIns{._field_Decl=_self_, });;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6eb484_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6ed464_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac702105_StructIns> _1ac6ee7d9_instance(jule::Ptr<_1ac6ee377_Struct> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	jule::Ptr<_1ac702105_StructIns> _10013_ins = jule::new_ptr<_1ac702105_StructIns>(_1ac702105_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_1ac701555_FieldIns>>::alloc(0LL, (*(_self_))._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_1ac7bb015_Var>>::alloc(0LL, (*(_self_))._field_Statics.len()), ._field_Refers=static__1ac71a63a_new(), });;
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc3c8d44:;
		if (it != expr_end) {
			jule::Ptr<_1ac7bb015_Var> _10721_s = *it;
			{
				{ jule::Slice<jule::Ptr<_1ac7bb015_Var>> &__jule_push_dest = (*(_10013_ins))._field_Statics; __jule_push_dest.push(jule::new_ptr<_1ac7bb015_Var>((*(_10721_s)))); };
			}
			_iter_next_1bc3c8d44:;
			++it;
			goto _iter_begin_1bc3c8d44;
		}
		_iter_end_1bc3c8d44:;
	};
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc3c9284:;
		if (it != expr_end) {
			jule::Ptr<_1ac6eb484_Field> _11121_f = *it;
			{
				{ jule::Slice<jule::Ptr<_1ac701555_FieldIns>> &__jule_push_dest = (*(_10013_ins))._field_Fields; __jule_push_dest.push(_1ac6eb808_instance(_11121_f)); };
				if ((((!((*(_11121_f))._field_Mutable)) && ((*((*(_11121_f))._field_Kind))._field_Kind != nullptr)) && _1ac85b3b3_Mutable((*((*(_11121_f))._field_Kind))._field_Kind.ptr()))) {
					(*(_10013_ins))._field_Mutable=true;
				};
			}
			_iter_next_1bc3c9284:;
			++it;
			goto _iter_begin_1bc3c9284;
		}
		_iter_end_1bc3c9284:;
	};
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		(*(_10013_ins))._field_Methods=(*(_self_))._field_Methods;
	} else {
		(*(_10013_ins))._field_Methods=jule::Slice<jule::Ptr<_1ac71426b_Fn>>::alloc(0LL, (*(_self_))._field_Methods.len());
		{
			auto expr = &((*(_self_))._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bc3cd8b5:;
			if (it != expr_end) {
				jule::Ptr<_1ac71426b_Fn> _12225_f = *it;
				{
					jule::Ptr<_1ac71426b_Fn> _12321_fins = jule::new_ptr<_1ac71426b_Fn>((*(_12225_f)));;
					(*(_12321_fins))._field_Instances=nullptr;
					{ jule::Slice<jule::Ptr<_1ac71426b_Fn>> &__jule_push_dest = (*(_10013_ins))._field_Methods; __jule_push_dest.push(_12321_fins); };
				}
				_iter_next_1bc3cd8b5:;
				++it;
				goto _iter_begin_1bc3cd8b5;
			}
			_iter_end_1bc3cd8b5:;
		};
	};
	return _10013_ins;;
}



inline jule::Ptr<_1ac702105_StructIns> _1ac6eeae7_appendInstance(_1ac6ee377_Struct* _self_, jule::Ptr<_1ac702105_StructIns>* _13438_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc3d0c6e:;
		if (it != expr_end) {
			jule::Ptr<_1ac702105_StructIns> _14021_ains = *it;
			{
				if (_1ac702c71_Same(_14021_ains.ptr(), (*(_13438_ins)))) {
					return _14021_ains;;
				};
			}
			_iter_next_1bc3d0c6e:;
			++it;
			goto _iter_begin_1bc3d0c6e;
		}
		_iter_end_1bc3d0c6e:;
	};
	{ jule::Slice<jule::Ptr<_1ac702105_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13438_ins))); };
	return nullptr;;
}



inline jule::Ptr<_1ac71426b_Fn> _1ac6eeee3_FindMethod(_1ac6ee377_Struct* _self_, jule::Str _15229_ident, jule::Bool _15241_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc3d2325:;
		if (it != expr_end) {
			jule::Ptr<_1ac71426b_Fn> _15321_f = *it;
			{
				if ((((*(_15321_f))._field_Statically == _15241_statically) && ((*(_15321_f))._field_Ident == _15229_ident))) {
					return _15321_f;;
				};
			}
			_iter_next_1bc3d2325:;
			++it;
			goto _iter_begin_1bc3d2325;
		}
		_iter_end_1bc3d2325:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac7bb015_Var> _1ac700334_FindStatic(_1ac6ee377_Struct* _self_, jule::Str _16329_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc3d3678:;
		if (it != expr_end) {
			jule::Ptr<_1ac7bb015_Var> _16421_v = *it;
			{
				if (((*(_16421_v))._field_Ident == _16329_ident)) {
					return _16421_v;;
				};
			}
			_iter_next_1bc3d3678:;
			++it;
			goto _iter_begin_1bc3d3678;
		}
		_iter_end_1bc3d3678:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac6eb484_Field> _1ac700675_FindField(_1ac6ee377_Struct* _self_, jule::Str _17428_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc3d468a:;
		if (it != expr_end) {
			jule::Ptr<_1ac6eb484_Field> _17521_f = *it;
			{
				if (((*(_17521_f))._field_Ident == _17428_ident)) {
					return _17521_f;;
				};
			}
			_iter_next_1bc3d468a:;
			++it;
			goto _iter_begin_1bc3d468a;
		}
		_iter_end_1bc3d468a:;
	};
	return nullptr;;
}



inline jule::Bool _1ac7009b6_IsImplements(_1ac6ee377_Struct* _self_, jule::Ptr<_1ac727548_Trait> _18427_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc3d568b:;
		if (it != expr_end) {
			jule::Ptr<_1ac727548_Trait> *_18516_it = it;
			{
				if ((_18427_t == (*(_18516_it)))) {
					return true;;
				};
			}
			_iter_next_1bc3d568b:;
			++it;
			goto _iter_begin_1bc3d568b;
		}
		_iter_end_1bc3d568b:;
	};
	return false;;
}



inline jule::Bool _1ac700d07_IsUses(_1ac6ee377_Struct* _self_, jule::Ptr<_1ac6ee377_Struct> _19421_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc3d646c:;
		if (it != expr_end) {
			jule::Ptr<_1ac6ee377_Struct> *_19516_u = it;
			{
				while ((_19421_s == (*(_19516_u)))) {
					{
						return true;;
					}
				_iter_next_1bc3d6aee:;
				}
				_iter_end_1bc3d6aee:;;
			}
			_iter_next_1bc3d646c:;
			++it;
			goto _iter_begin_1bc3d646c;
		}
		_iter_end_1bc3d646c:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac6ee377_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac701555_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac70600a_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac706505_BinaryExprModel _Src) {
	_Stream << "BinaryExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac7068ce_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac706e0c_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac7072a3_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac7075a0_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac707b33_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac7084d5_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac7088ae_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac708d65_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac70923e_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac709618_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac709abe_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac70a152_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac70a6d5_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac70b076_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac70b52c_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac70b906_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac70bc03_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac70c0cc_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac70c4a6_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac70c880_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac70cc59_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac70d210_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac70d6b6_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac70da90_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac70dd8c_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac70e189_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac70e563_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac70e93c_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac70ed16_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac70a8c2_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac710542_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac71083e_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac710b3b_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac711015_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac711312_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac712016_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac7161c4_ParamIns> _1ac712b2c_instance(jule::Ptr<_1ac712797_Param> _self_) {
	return jule::new_ptr<_1ac7161c4_ParamIns>(_1ac7161c4_ParamIns{._field_Decl=_self_, });;
}



inline jule::Bool _1ac712db3_IsSelf(_1ac712797_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1ac713149_IsRef(_1ac712797_Param* _self_) {
	return (!((*(_self_))._field_Ident).empty() && ((*(_self_))._field_Ident[0LL] == '&'));;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac712797_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac7146de_IsVoid(_1ac71426b_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1ac714975_IsMethod(_1ac71426b_Fn* _self_) {
	return ((*(_self_))._field_Owner != nullptr);;
}



inline jule::Bool _1ac714c0b_IsEntryPoint(_1ac71426b_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1ac714e92_IsInit(_1ac71426b_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1ac715228_IsAnon(_1ac71426b_Fn* _self_) {
	return _1ac6b5b8a_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1ac7154ae_AnyVar(_1ac71426b_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*((*(_self_))._field_Result))._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1ac717170_FnIns> _1ac715745_instanceForce(jule::Ptr<_1ac71426b_Fn> _self_) {
	jule::Ptr<_1ac717170_FnIns> _10113_ins = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_1ac756126_Scope>(), ._field_Refers=static__1ac71a63a_new(), });;
	(*(_10113_ins))._field_Params=jule::Slice<jule::Ptr<_1ac7161c4_ParamIns>>::alloc(0LL, (*(_self_))._field_Params.len());
	{
		auto expr = &((*(_self_))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc3ed8c4:;
		if (it != expr_end) {
			jule::Ptr<_1ac712797_Param> _10821_p = *it;
			{
				{ jule::Slice<jule::Ptr<_1ac7161c4_ParamIns>> &__jule_push_dest = (*(_10113_ins))._field_Params; __jule_push_dest.push(_1ac712b2c_instance(_10821_p)); };
			}
			_iter_next_1bc3ed8c4:;
			++it;
			goto _iter_begin_1bc3ed8c4;
		}
		_iter_end_1bc3ed8c4:;
	};
	if (((*((*(_10113_ins))._field_Decl))._field_Result != nullptr)) {
		(*(_10113_ins))._field_Result=(*((*((*((*(_10113_ins))._field_Decl))._field_Result))._field_Kind))._field_Kind;
	};
	return _10113_ins;;
}



inline jule::Ptr<_1ac717170_FnIns> _1ac7159cb_instance(jule::Ptr<_1ac71426b_Fn> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	return _1ac715745_instanceForce(_self_);;
}



inline jule::Ptr<_1ac717170_FnIns> _1ac715cd9_appendInstance(_1ac71426b_Fn* _self_, jule::Ptr<_1ac717170_FnIns>* _12938_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_1ac717170_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_1ac717170_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc403d5d:;
		if (it != expr_end) {
			jule::Ptr<_1ac717170_FnIns> _14521_ains = *it;
			{
				if (_1ac718bcc_Same(_14521_ains.ptr(), (*(_12938_ins)))) {
					return _14521_ains;;
				};
			}
			_iter_next_1bc403d5d:;
			++it;
			goto _iter_begin_1bc403d5d;
		}
		_iter_end_1bc403d5d:;
	};
	{ jule::Slice<jule::Ptr<_1ac717170_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac71426b_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ac716537_Str(_1ac7161c4_ParamIns* _self_) {
	_1c164cc40_StrBuilder _16713_s = static__1c164d191_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Mutable) {
		_1c164d702_WriteStr(&_16713_s, jule::Str::lit("mut ", 4));
	};
	if ((*((*(_self_))._field_Decl))._field_Reference) {
		_1c164d702_WriteStr(&_16713_s, jule::Str::lit("&_:", 3));
	};
	if (_1ac712db3_IsSelf((*(_self_))._field_Decl.ptr())) {
		if (_1ac713149_IsRef((*(_self_))._field_Decl.ptr())) {
			_1c164d9aa_WriteByte(&_16713_s, '&');
		};
		_1c164d702_WriteStr(&_16713_s, jule::Str::lit("self", 4));
		return _1c164dee9_Str(&_16713_s);;
	};
	if ((*((*(_self_))._field_Decl))._field_Variadic) {
		_1c164d702_WriteStr(&_16713_s, jule::Str::lit("...", 3));
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_1c164d702_WriteStr(&_16713_s, _1ac859dea_Str((*(_self_))._field_Kind.ptr()));
	};
	return _1c164dee9_Str(&_16713_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac7161c4_ParamIns _Src) {
	_Stream << _1ac716537_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ac7174b1_Str(_1ac717170_FnIns* _self_) {
	;
	return _1ac71901d_GetKindStr(_self_, false);;
}



inline jule::Bool _1ac717802_Equal(jule::Ptr<_1ac717170_FnIns> _self_, jule::Ptr<_1ac859a32_TypeKind> _21821_other) {
	jule::Ptr<_1ac717170_FnIns> _2199_f = _1ac85d470_Fn(_21821_other.ptr());;
	if ((_2199_f == nullptr)) {
		return false;;
	};
	return _1ac717c97_EqualFn(_self_, &(_2199_f));;
}



inline jule::Bool _1ac717c97_EqualFn(jule::Ptr<_1ac717170_FnIns> _self_, jule::Ptr<_1ac717170_FnIns>* _22924_f) {
	if (((*((*(_self_))._field_Decl))._field_Exceptional != (*((*((*(_22924_f))))._field_Decl))._field_Exceptional)) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Unsafety != (*((*((*(_22924_f))))._field_Decl))._field_Unsafety)) {
		return false;;
	};
	if ((_1ac7146de_IsVoid((*(_self_))._field_Decl.ptr()) != _1ac7146de_IsVoid((*((*(_22924_f))))._field_Decl.ptr()))) {
		return false;;
	};
	jule::Fn<jule::Bool(jule::Ptr<_1ac7161c4_ParamIns>,jule::Ptr<_1ac7161c4_ParamIns>)> _2399_checkParams = jule::Fn<jule::Bool(jule::Ptr<_1ac7161c4_ParamIns>,jule::Ptr<_1ac7161c4_ParamIns>)>([=](jule::Ptr<_1ac7161c4_ParamIns> _23927_p1, jule::Ptr<_1ac7161c4_ParamIns> _23942_p2) mutable -> jule::Bool {
		if (((*((*(_23927_p1))._field_Decl))._field_Mutable != (*((*(_23942_p2))._field_Decl))._field_Mutable)) {
			return false;;
		};
		if (_1ac712db3_IsSelf((*(_23927_p1))._field_Decl.ptr())) {
			if ((!(_1ac712db3_IsSelf((*(_23942_p2))._field_Decl.ptr())))) {
				return false;;
			};
			if ((_1ac713149_IsRef((*(_23927_p1))._field_Decl.ptr()) != _1ac713149_IsRef((*(_23942_p2))._field_Decl.ptr()))) {
				return false;;
			};
			return true;;
		};
		if (((*((*(_23927_p1))._field_Decl))._field_Reference != (*((*(_23942_p2))._field_Decl))._field_Reference)) {
			return false;;
		};
		if (((*((*(_23927_p1))._field_Decl))._field_Variadic != (*((*(_23942_p2))._field_Decl))._field_Variadic)) {
			return false;;
		};
		return _1ac85a23b_Equal((*(_23927_p1))._field_Kind, (*(_23942_p2))._field_Kind);;
	});;
	if (((*((*(_22924_f))))._field_Params.len() != (*(_self_))._field_Params.len())) {
		return false;;
	};
	jule::I64 _27113_i = 0LL;;
	for (; (_27113_i < (*(_self_))._field_Params.len()); (_27113_i)++) {
		{
			if ((!(_2399_checkParams((*(_self_))._field_Params[_27113_i], (*((*(_22924_f))))._field_Params[_27113_i])))) {
				return false;;
			};
		}
	_iter_next_1bc414cb4:;
	}
	_iter_end_1bc414cb4:;;
	if ((!(_1ac7146de_IsVoid((*(_self_))._field_Decl.ptr())))) {
		if ((!(_1ac85a23b_Equal((*(_self_))._field_Result, (*((*(_22924_f))))._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1ac7180d8_equalTrait(jule::Ptr<_1ac717170_FnIns> _self_, jule::Ptr<_1ac717170_FnIns>* _28827_other) {
	if (((*((*(_self_))._field_Decl))._field_Public != (*((*((*(_28827_other))))._field_Decl))._field_Public)) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Ident != (*((*((*(_28827_other))))._field_Decl))._field_Ident)) {
		return false;;
	};
	if ((!(_1ac717c97_EqualFn(_self_, _28827_other)))) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Generics.len() != (*((*((*(_28827_other))))._field_Decl))._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1ac859a32_TypeKind>> _1ac71836e_Types(_1ac717170_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1bc41a47e:;
			{
				return nullptr;;
			}
		}
		else if ((_1ac85dea9_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1bc41a4e5:;
			{
				return jule::Slice<jule::Ptr<_1ac859a32_TypeKind>>::make({(*(_self_))._field_Result});;
			}
		}
		else {
			_case_begin_1bc41a418:;
			{
				return (*(_1ac85dea9_Tup((*(_self_))._field_Result.ptr())))._field_Types;;
			}
		}
		_match_end_1bc41a34c:;
	};
}



inline jule::Bool _1ac718605_IsBuiltin(_1ac717170_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1ac71888b_IsAnon(_1ac717170_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1ac715228_IsAnon((*(_self_))._field_Decl.ptr())));;
}



inline jule::Bool _1ac718bcc_Same(_1ac717170_FnIns* _self_, jule::Ptr<_1ac717170_FnIns> _33119_f) {
	if ((((*(_self_))._field_Decl != (*(_33119_f))._field_Decl) || ((*(_33119_f))._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc41dd9a:;
		if (it != expr_end) {
			jule::I64 _33613_i = it - expr->begin();
			jule::Ptr<_1ac85814b_InsGeneric> *_33616_g = it;
			{
				jule::Ptr<_1ac85814b_InsGeneric> _33713_g2 = (*(_33119_f))._field_Generics[_33613_i];;
				if ((((*((*((*(_33616_g))))._field_Kind))._field_BindIdent != (*((*(_33713_g2))._field_Kind))._field_BindIdent) || (!(_1ac85a23b_Equal((*((*(_33616_g))))._field_Kind, (*(_33713_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1bc41dd9a:;
			++it;
			_33613_i++;
			goto _iter_begin_1bc41dd9a;
		}
		_iter_end_1bc41dd9a:;
	};
	return true;;
}



inline jule::Str _1ac71901d_GetKindStr(_1ac717170_FnIns* _self_, jule::Bool _34825_ident) {
	_1c164cc40_StrBuilder _34913_s = static__1c164d191_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Unsafety) {
		_1c164d702_WriteStr(&_34913_s, jule::Str::lit("unsafe ", 7));
	};
	_1c164d702_WriteStr(&_34913_s, jule::Str::lit("fn", 2));
	if ((_34825_ident && ((*(_self_))._field_Decl != nullptr))) {
		_1c164d9aa_WriteByte(&_34913_s, ' ');
		_1c164d702_WriteStr(&_34913_s, (*((*(_self_))._field_Decl))._field_Ident);
	};
	_1c164d9aa_WriteByte(&_34913_s, '(');
	jule::I64 _3639_n = (*(_self_))._field_Params.len();;
	if ((_3639_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bc424202:;
			if (it != expr_end) {
				jule::I64 _36517_i = it - expr->begin();
				jule::Ptr<_1ac7161c4_ParamIns> *_36520_p = it;
				{
					_1c164d702_WriteStr(&_34913_s, _1ac716537_Str((*(_36520_p)).ptr()));
					if ((_36517_i < ((*(_self_))._field_Params.len() - 1LL))) {
						_1c164d9aa_WriteByte(&_34913_s, ',');
					};
				}
				_iter_next_1bc424202:;
				++it;
				_36517_i++;
				goto _iter_begin_1bc424202;
			}
			_iter_end_1bc424202:;
		};
	};
	_1c164d9aa_WriteByte(&_34913_s, ')');
	if ((*((*(_self_))._field_Decl))._field_Exceptional) {
		_1c164d9aa_WriteByte(&_34913_s, '!');
	};
	if ((!(_1ac7146de_IsVoid((*(_self_))._field_Decl.ptr())))) {
		_1c164d9aa_WriteByte(&_34913_s, ':');
		_1c164d702_WriteStr(&_34913_s, _1ac859dea_Str((*(_self_))._field_Result.ptr()));
	};
	return _1c164dee9_Str(&_34913_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac717170_FnIns _Src) {
	_Stream << _1ac7174b1_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1ac71a33d_ReferenceStack> static__1ac71a63a_new(void) {
	return jule::new_ptr<_1ac71a33d_ReferenceStack>(_1ac71a33d_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});;
}



inline jule::I64 _1ac71aa36_Len(_1ac71a33d_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_buffer.len());;
}



inline jule::Any _1ac71ad77_At(_1ac71a33d_ReferenceStack* _self_, jule::I64 _6821_i) {
	return (*(_self_))._field_buffer[_6821_i];;
}



inline void _1ac71b130_Push(_1ac71a33d_ReferenceStack* _self_, jule::Any _7327_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_7327_ref); };
}



inline jule::Bool _1bccd6d5b_Exist(_1ac71a33d_ReferenceStack* _self_, jule::Ptr<_1ac717170_FnIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bccd8214:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type7_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1bccd8214:;
			++it;
			goto _iter_begin_1bccd8214;
		}
		_iter_end_1bccd8214:;
	};
	return false;;
}

inline jule::Bool _1bcceb58a_Exist(_1ac71a33d_ReferenceStack* _self_, jule::Ptr<_1ac7bb015_Var> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bccec8ee:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type8_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1bccec8ee:;
			++it;
			goto _iter_begin_1bccec8ee;
		}
		_iter_end_1bccec8ee:;
	};
	return false;;
}

inline jule::Bool _1bcdac22d_Exist(_1ac71a33d_ReferenceStack* _self_, jule::Ptr<_1ac702105_StructIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcdad5d6:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type9_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1bcdad5d6:;
			++it;
			goto _iter_begin_1bcdad5d6;
		}
		_iter_end_1bcdad5d6:;
	};
	return false;;
}

inline jule::Bool _1bd1e04a6_Exist(_1ac71a33d_ReferenceStack* _self_, jule::Ptr<_1ac727548_Trait> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd1e17d7:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type10_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1bd1e17d7:;
			++it;
			goto _iter_begin_1bd1e17d7;
		}
		_iter_end_1bd1e17d7:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac71a33d_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac71b85b_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline void _1ac721cb2_pushErr(_1ac721421_symbolBuilder* _self_, jule::Ptr<_1ac6b2e62_Token>* _33227_token, jule::Str _33242_fmt, jule::Slice<jule::Any> _33255_args) {
	{ jule::Slice<_1a756d63b_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1ac79594b_compilerErr(_33227_token, true, _33242_fmt, _33255_args)); };
}



inline void _1ac722543_pushSuggestion(_1ac721421_symbolBuilder* _self_, jule::Str _34133_fmt, jule::Slice<jule::Any> _34146_args) {
	{
		_1ac796e7a_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _34133_fmt, _34146_args);
	};
}



inline jule::Bool _1ac72293e_checkCppUseDeclPath(_1ac721421_symbolBuilder* _self_, jule::Ptr<_1ac6e1787_UseDecl>* _34539_decl, jule::Str* _34556_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _3469_ext = _1a6944826_Ext((*(_34556_path)));;
	if (((!(_1a7561387_IsValidHeaderExt(_3469_ext))) && (!(_1a7561651_IsValidCppExt(_3469_ext))))) {
		_1ac721cb2_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("invalid C++ extension: @", 24), jule::Slice<jule::Any>::make({jule::Any(_3469_ext, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1d9e5441d_Status> _3539_info = ({
		auto except = static__1a6946a48_Of((*(_34556_path)));
		(except.ok()) ? (except.result) : ({{
			_1ac721cb2_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_34539_decl))))._field_LinkPath, &__jule_any_type4)}));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_1d9e5441d_Status>(nullptr);});
	});;
	if (_1d9e547e7_IsDir(_3539_info.ptr())) {
		_1ac721cb2_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_34539_decl))))._field_LinkPath, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1ac77790b_ImportInfo> _1ac722c4c_buildCppHeaderImport(_1ac721421_symbolBuilder* _self_, jule::Ptr<_1ac6e1787_UseDecl>* _36544_decl) {
	jule::Str _36613_path = (*((*(_36544_decl))))._field_LinkPath;;
	if ((!(_1a75610ac_IsStdHeaderPath((*((*(_36544_decl))))._field_LinkPath)))) {
		_36613_path=_1a694455c_Join(jule::Slice<jule::Str>::make({_1ac6b8d9c_Dir((*((*((*(_36544_decl))))._field_Token))._field_File.ptr()),(*((*(_36544_decl))))._field_LinkPath}));
		jule::Bool _37017_ok = _1ac72293e_checkCppUseDeclPath(_self_, _36544_decl, &(_36613_path));;
		if ((!(_37017_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1a6944ae0_Abs(_36613_path);
			_36613_path = __jule_assign_result.__jule_result_arg0;
			_37017_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_37017_ok))) {
			_1ac721cb2_pushErr(_self_, &((*((*(_36544_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_36544_decl))))._field_LinkPath, &__jule_any_type4)}));
		};
	};
	return jule::new_ptr<_1ac77790b_ImportInfo>(_1ac77790b_ImportInfo{._field_Token=(*((*(_36544_decl))))._field_Token, ._field_Path=_36613_path, ._field_LinkPath=(*((*(_36544_decl))))._field_LinkPath, ._field_Ident=jule::Str(), ._field_Binded=true, ._field_Std=false, ._field_Package=nullptr, });;
}



inline jule::Ptr<_1ac77790b_ImportInfo> _1ac72308d_buildStdImport(_1ac721421_symbolBuilder* _self_, jule::Ptr<_1ac6e1787_UseDecl>* _39338_decl) {
	jule::Str _39513_path = (*((*(_39338_decl))))._field_LinkPath.slice(5LL);;
	_39513_path=_1a694036b_Replace(_39513_path, jule::Str::lit("::", 2), jule::Str::lit("\\", 1), -1LL);
	_39513_path=_1a694455c_Join(jule::Slice<jule::Str>::make({_1a7637ccc_PathStdlib,_39513_path}));
	jule::Bool _39815_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1a6944ae0_Abs(_39513_path);
		_39513_path = __jule_assign_result.__jule_result_arg0;
		_39815_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_39815_ok))) {
		_1ac721cb2_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d9e5441d_Status> _4059_info = ({
		auto except = static__1a6946a48_Of(_39513_path);
		(except.ok()) ? (except.result) : ({{
			_1ac721cb2_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
			return nullptr;;
		} jule::Ptr<_1d9e5441d_Status>(nullptr);});
	});;
	if ((!(_1d9e547e7_IsDir(_4059_info.ptr())))) {
		_1ac721cb2_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _4159_i = (_1a693ade4_FindLast((*((*(_39338_decl))))._field_LinkPath, jule::Str::lit("::", 2)) + 1LL);;
	jule::Str _4169_ident = (*((*(_39338_decl))))._field_LinkPath.slice(_4159_i);;
	return jule::new_ptr<_1ac77790b_ImportInfo>(_1ac77790b_ImportInfo{._field_Token=(*((*(_39338_decl))))._field_Token, ._field_Path=_39513_path, ._field_LinkPath=(*((*(_39338_decl))))._field_LinkPath, ._field_Ident=_4169_ident, ._field_Alias=(*((*(_39338_decl))))._field_Alias, ._field_Binded=false, ._field_Std=true, ._field_ImportAll=(*((*(_39338_decl))))._field_Full, ._field_Package=jule::new_ptr<_1ac77a832_Package>(_1ac77a832_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1ac77790b_ImportInfo> _1ac7233ce_buildIdentImport(jule::Ptr<_1ac721421_symbolBuilder> _self_, jule::Ptr<_1ac6e1787_UseDecl>* _43341_decl) {
	if ((((*((*(_43341_decl))))._field_LinkPath.equal("_", 1) || (_1a693a531_Find((*((*(_43341_decl))))._field_LinkPath, jule::Str::lit("::_::", 5)) != -1LL)) || _1a6939c7d_HasSuffix((*((*(_43341_decl))))._field_LinkPath, jule::Str::lit("::_", 3)))) {
		_1ac721cb2_pushErr(_self_.ptr(), &((*((*(_43341_decl))))._field_Token), jule::Str::lit("use declaration paths cannot contain blank identifier", 53), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _4419_modPath = _1ac7749e6_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ac773a5b_GetModPath((*(_self_))._field_importer);;
	if ((_4419_modPath.len() == 0LL)) {
		_1ac721cb2_pushErr(_self_.ptr(), &((*((*(_43341_decl))))._field_Token), jule::Str::lit("no module file found in current directory or any parent directory", 65), jule::Slice<jule::Any>());
		_1ac722543_pushSuggestion(_self_.ptr(), jule::Str::lit("use \"julec mod init\" command to initialize module", 49), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _44813_path = (*((*(_43341_decl))))._field_LinkPath;;
	_44813_path=_1a694036b_Replace(_44813_path, jule::Str::lit("::", 2), jule::Str::lit("\\", 1), -1LL);
	_44813_path=_1a694455c_Join(jule::Slice<jule::Str>::make({_4419_modPath,_44813_path}));
	jule::Bool _45215_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1a6944ae0_Abs(_44813_path);
		_44813_path = __jule_assign_result.__jule_result_arg0;
		_45215_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_45215_ok))) {
		_1ac721cb2_pushErr(_self_.ptr(), &((*((*(_43341_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43341_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d9e5441d_Status> _4599_info = ({
		auto except = static__1a6946a48_Of(_44813_path);
		(except.ok()) ? (except.result) : ({{
			_1ac721cb2_pushErr(_self_.ptr(), &((*((*(_43341_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43341_decl))))._field_LinkPath, &__jule_any_type4)}));
			return nullptr;;
		} jule::Ptr<_1d9e5441d_Status>(nullptr);});
	});;
	if ((!(_1d9e547e7_IsDir(_4599_info.ptr())))) {
		_1ac721cb2_pushErr(_self_.ptr(), &((*((*(_43341_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43341_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _4699_i = (_1a693ade4_FindLast((*((*(_43341_decl))))._field_LinkPath, jule::Str::lit("::", 2)) + 1LL);;
	jule::Str _4709_ident = (*((*(_43341_decl))))._field_LinkPath.slice(_4699_i);;
	return jule::new_ptr<_1ac77790b_ImportInfo>(_1ac77790b_ImportInfo{._field_Token=(*((*(_43341_decl))))._field_Token, ._field_Path=_44813_path, ._field_LinkPath=(*((*(_43341_decl))))._field_LinkPath, ._field_Ident=_4709_ident, ._field_Alias=(*((*(_43341_decl))))._field_Alias, ._field_Binded=false, ._field_Std=false, ._field_ImportAll=(*((*(_43341_decl))))._field_Full, ._field_Package=jule::new_ptr<_1ac77a832_Package>(_1ac77a832_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1ac77790b_ImportInfo> _1ac723720_buildImport(jule::Ptr<_1ac721421_symbolBuilder> _self_, jule::Ptr<_1ac6e1787_UseDecl>* _48736_decl) {
	{
		
		if ((*((*(_48736_decl))))._field_Binded) {
			_case_begin_1bc468532:;
			{
				return _1ac722c4c_buildCppHeaderImport(_self_.ptr(), _48736_decl);;
			}
		}
		else if ((*((*(_48736_decl))))._field_Std) {
			_case_begin_1bc468598:;
			{
				return _1ac72308d_buildStdImport(_self_.ptr(), _48736_decl);;
			}
		}
		else {
			_case_begin_1bc4684bb:;
			{
				return _1ac7233ce_buildIdentImport(_self_, _48736_decl);;
			}
		}
		_match_end_1bc468400:;
	};
}



inline jule::Bool _1ac723a61_checkDuplicateUseDecl(_1ac721421_symbolBuilder* _self_, jule::Ptr<_1ac77790b_ImportInfo>* _49841_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ac77790b_ImportInfo> _5009_lpkg = _1ac81e4ec_SelectPackage((*(_self_))._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1ac77790b_ImportInfo>)>([=](jule::Ptr<_1ac77790b_ImportInfo> _50045_spkg) mutable -> jule::Bool {
		return ((*((*(_49841_pkg))))._field_Path == (*(_50045_spkg))._field_Path);;
	}));;
	if ((_5009_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1ac721cb2_pushErr(_self_, &((*((*(_49841_pkg))))._field_Token), jule::Str::lit("use declaration duplication: @ is already used above", 52), jule::Slice<jule::Any>::make({jule::Any((*((*(_49841_pkg))))._field_LinkPath, &__jule_any_type4)}));
	_1ac722543_pushSuggestion(_self_, jule::Str::lit("remove this use declaration, already used, it is safe", 53), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _1ac723dc4_implImportSelections(_1ac721421_symbolBuilder* _self_, jule::Ptr<_1ac77790b_ImportInfo>* _51244_imp, jule::Ptr<_1ac6e1787_UseDecl>* _51267_decl) {
	(*((*(_51244_imp))))._field_Selected=(*((*(_51267_decl))))._field_Selected;
	{
		auto expr = &((*((*(_51244_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc46d559:;
		if (it != expr_end) {
			jule::Ptr<_1ac6b2e62_Token> _51416_item = *it;
			{
				{
					auto expr = &((*((*(_51244_imp))))._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc46de50:;
					if (it != expr_end) {
						jule::Ptr<_1ac6b2e62_Token> _51520_citem = *it;
						{
							if ((_51416_item == _51520_citem)) {
								goto _iter_end_1bc46de50;
							} else if (((*(_51416_item))._field_Kind == (*(_51520_citem))._field_Kind)) {
								_1ac721cb2_pushErr(_self_, &(_51416_item), jule::Str::lit("duplicated selection: @ is already selected", 43), jule::Slice<jule::Any>::make({jule::Any((*(_51416_item))._field_Kind, &__jule_any_type4)}));
								_1ac722543_pushSuggestion(_self_, jule::Str::lit("remove this use selection, already selected, it is safe", 55), jule::Slice<jule::Any>());
								goto _iter_end_1bc46de50;
							};
						}
						_iter_next_1bc46de50:;
						++it;
						goto _iter_begin_1bc46de50;
					}
					_iter_end_1bc46de50:;
				};
			}
			_iter_next_1bc46d559:;
			++it;
			goto _iter_begin_1bc46d559;
		}
		_iter_end_1bc46d559:;
	};
}



inline jule::Str _1ac724215_getAsLinkPath(jule::Ptr<_1ac721421_symbolBuilder> _self_, jule::Str _52737_path) {
	if (_1a693951e_HasPrefix(_52737_path, _1a7637ccc_PathStdlib)) {
		(_52737_path).mut_slice(_1a7637ccc_PathStdlib.len());;
		return (jule::Str::lit("std", 3) + _1a694036b_Replace(_52737_path, jule::Str::lit("\\", 1), jule::Str::lit("::", 2), -1LL));;
	};
	jule::Str _5339_root;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1a6944ae0_Abs(_1ac7749e6_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ac773a5b_GetModPath((*(_self_))._field_importer));
		_5339_root = __jule_assign_result.__jule_result_arg0;
	});
	(_52737_path).mut_slice(_5339_root.len());;
	if ((_52737_path[0LL] == 92LLU)) {
		(_52737_path).mut_slice(1LL);;
	};
	return _1a694036b_Replace(_52737_path, jule::Str::lit("\\", 1), jule::Str::lit("::", 2), -1LL);;
}



inline void _1ac724633_pushCycleError(jule::Ptr<_1ac721421_symbolBuilder> _self_, jule::Ptr<_1ac721421_symbolBuilder>* _54135_sb, jule::Str _54155_path, _1c164cc40_StrBuilder* _54171_message) {
	;
	jule::Str _5439_refersTo = _1a756da9d_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_1ac724215_getAsLinkPath(_self_, _1ac6b8d9c_Dir((*((*((*(_54135_sb))))._field_table))._field_File.ptr())), &__jule_any_type4),jule::Any(_1ac724215_getAsLinkPath(_self_, _54155_path), &__jule_any_type4)}));;
	jule::Str _5479_m = _1c164dee9_Str(_54171_message);;
	_1c164d702_WriteStr(_54171_message, _1a6938c27_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1c164d702_WriteStr(_54171_message, _5439_refersTo);
	_1c164d9aa_WriteByte(_54171_message, '\n');
	_1c164d702_WriteStr(_54171_message, _5479_m);
}



inline void _1ac724a51_pushCrossCycleError(jule::Ptr<_1ac721421_symbolBuilder> _self_, jule::Ptr<_1ac721421_symbolBuilder>* _55440_target, jule::Ptr<_1ac77790b_ImportInfo>* _55465_imp, jule::Ptr<_1ac6b2e62_Token>* _55484_errorToken) {
	_1c164cc40_StrBuilder _55513_message = static__1c164d191_New(32LL);;
	_1ac724633_pushCycleError(_self_, &(_self_), (*((*(_55465_imp))))._field_Path, &(_55513_message));
	jule::Ptr<_1ac721421_symbolBuilder> _55913_owner = (*(_self_))._field_owner;;
	jule::Ptr<_1ac721421_symbolBuilder> _56013_old = _self_;;
	while (((*(_55913_owner))._field_owner != nullptr)) {
		{
			_1ac724633_pushCycleError(_self_, &((*(_56013_old))._field_owner), _1ac6b8d9c_Dir((*((*(_56013_old))._field_table))._field_File.ptr()), &(_55513_message));
			if (((*(_55913_owner))._field_owner == (*(_55440_target)))) {
				_1ac724633_pushCycleError(_self_, _55440_target, _1ac6b8d9c_Dir((*((*(_55913_owner))._field_table))._field_File.ptr()), &(_55513_message));
				goto _iter_end_1bc47663e;
			};
			_56013_old=_55913_owner;
			_55913_owner=(*(_55913_owner))._field_owner;
		}
	_iter_next_1bc47663e:;
	}
	_iter_end_1bc47663e:;;
	_1ac721cb2_pushErr(_self_.ptr(), _55484_errorToken, jule::Str::lit("illegal cross cycle in use declarations;\n@", 42), jule::Slice<jule::Any>::make({jule::Any(_1c164dee9_Str(&_55513_message), &__jule_any_type4)}));
}



inline jule::Bool _1ac724e4c_checkImportCycles(jule::Ptr<_1ac721421_symbolBuilder> _self_, jule::Ptr<_1ac77790b_ImportInfo> _57737_imp, jule::Ptr<_1ac6e1787_UseDecl>* _57756_decl) {
	if (((*(_57737_imp))._field_Path == _1ac6b8d9c_Dir((*((*(_self_))._field_table))._field_File.ptr()))) {
		_1ac721cb2_pushErr(_self_.ptr(), &((*((*(_57756_decl))))._field_Token), jule::Str::lit("illegal cycle in use declaration, package @ refers to itself", 60), jule::Slice<jule::Any>::make({jule::Any(_1ac724215_getAsLinkPath(_self_, (*(_57737_imp))._field_Path), &__jule_any_type4)}));
		return false;;
	};
	if (((*(_self_))._field_owner == nullptr)) {
		return true;;
	};
	jule::Ptr<_1ac721421_symbolBuilder> _58713_owner = (*(_self_))._field_owner;;
	_julec_label_1bc47d1a1:;
	if ((_1ac6b8d9c_Dir((*((*(_58713_owner))._field_table))._field_File.ptr()) == (*(_57737_imp))._field_Path)) {
		_1ac724a51_pushCrossCycleError(_self_, &(_58713_owner), &(_57737_imp), &((*((*(_57756_decl))))._field_Token));
		return false;;
	};
	if (((*(_58713_owner))._field_owner != nullptr)) {
		_58713_owner=(*(_58713_owner))._field_owner;
		goto _julec_label_1bc47d1a1;
	};
	return true;;
}



inline void _1ac72536a_checkPackageAccessibility(_1ac721421_symbolBuilder* _self_, jule::Ptr<_1ac6e1787_UseDecl>* _60845_decl, jule::Str* _60862_mod, jule::Str* _60873_path) {
	if (((_1ac7749e6_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ac773a5b_GetModPath((*(_self_))._field_importer) != (*(_60862_mod))) && _1a693de91_Contains((*(_60873_path)), jule::Str::lit("internal", 8)))) {
		_1ac721cb2_pushErr(_self_, &((*((*(_60845_decl))))._field_Token), jule::Str::lit("you cannot access to internal packages", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1ac725766_importPackage(jule::Ptr<_1ac721421_symbolBuilder> _self_, jule::Ptr<_1ac77790b_ImportInfo>* _61438_imp, jule::Ptr<_1ac6e1787_UseDecl>* _61461_decl) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_61438_imp))))._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac77790b_ImportInfo> _61913_port = _1ac7749e6_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ac7741dd_GetImport((*(_self_))._field_importer, (*((*(_61438_imp))))._field_Path);;
	if ((_61913_port != nullptr)) {
		(*((*(_61438_imp))))._field_Package=(*(_61913_port))._field_Package;
		(*((*(_61438_imp))))._field_Duplicate=true;
		jule::Str _62413_oldMod = _1ac7749e6_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ac773a5b_GetModPath((*(_self_))._field_importer);;
		_1ac7749e6_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ac7737c5_SetModPath((*(_self_))._field_importer, _1ac7749e6_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ac773d9c_ModById((*(_self_))._field_importer, (*((*(_61438_imp))))._field_ModId));
		_1ac72536a_checkPackageAccessibility(_self_.ptr(), _61461_decl, &(_62413_oldMod), &((*(_61913_port))._field_Path));
		_1ac7749e6_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ac7737c5_SetModPath((*(_self_))._field_importer, _62413_oldMod);
	} else {
		if ((!(_1ac724e4c_checkImportCycles(_self_, (*(_61438_imp)), _61461_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _63313_oldMod = _1ac7749e6_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ac773a5b_GetModPath((*(_self_))._field_importer);;
		__JULE_DEFER({
			_1ac7749e6_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ac7737c5_SetModPath((*(_self_))._field_importer, _63313_oldMod);
		});;
		if ((*((*(_61438_imp))))._field_Std) {
			_1ac7749e6_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ac7737c5_SetModPath((*(_self_))._field_importer, _1a7637ccc_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1ac6c67a0_Ast>> _63817_asts;;
		jule::Slice<_1a756d63b_Log> _63827_errors;;
		({
			__jule_tuple_sx_1ac6c67a0_Ast__jule_tuple_s_1a756d63b_Log __jule_assign_result = _1ac7749e6_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ac7745d9_ImportPackage((*(_self_))._field_importer, (*((*(_61438_imp))))._field_Path, (!((*((*(_61438_imp))))._field_Std)));
			_63817_asts = __jule_assign_result.__jule_result_arg0;
			_63827_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_63827_errors.len() > 0LL)) {
			((*(_self_))._field_errors).append(_63827_errors);;
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1ac72536a_checkPackageAccessibility(_self_.ptr(), _61461_decl, &(_63313_oldMod), &((*((*(_61438_imp))))._field_Path));
		{
			auto expr = &(_63817_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bc48908b:;
			if (it != expr_end) {
				jule::Ptr<_1ac6c67a0_Ast> _64625_ast = *it;
				{
					jule::Ptr<_1ac81e013_SymbolTable> _64725_table = nullptr;;
					({
						__jule_tuple_x_1ac81e013_SymbolTable__jule_tuple_s_1a756d63b_Log __jule_assign_result = _1ac87a35a_buildSymbols(&(_64625_ast), &((*(_self_))._field_importer), _self_);
						_64725_table = __jule_assign_result.__jule_result_arg0;
						_63827_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_63827_errors.len() > 0LL)) {
						((*(_self_))._field_errors).append(_63827_errors);;
						__jule_func_result = false;
						return __jule_func_result;;
					};
					{ jule::Slice<jule::Ptr<_1ac81e013_SymbolTable>> &__jule_push_dest = (*((*((*(_61438_imp))))._field_Package))._field_Files; __jule_push_dest.push(_64725_table); };
				}
				_iter_next_1bc48908b:;
				++it;
				goto _iter_begin_1bc48908b;
			}
			_iter_end_1bc48908b:;
		};
	};
	_1ac723dc4_implImportSelections(_self_.ptr(), _61438_imp, _61461_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1ac77790b_ImportInfo> _1ac725aa7_importUseDecl(jule::Ptr<_1ac721421_symbolBuilder> _self_, jule::Ptr<_1ac6e1787_UseDecl>* _66138_decl) {
	jule::Ptr<_1ac77790b_ImportInfo> _66213_imp = _1ac723720_buildImport(_self_, _66138_decl);;
	if ((_66213_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _66813_ok = _1ac723a61_checkDuplicateUseDecl(_self_.ptr(), &(_66213_imp));;
	if ((!(_66813_ok))) {
		return nullptr;;
	};
	_66813_ok=_1ac725766_importPackage(_self_, &(_66213_imp), _66138_decl);
	{ jule::Slice<jule::Ptr<_1ac77790b_ImportInfo>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Imports; __jule_push_dest.push(_66213_imp); };
	if (_66813_ok) {
		_1ac7749e6_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ac774892_Imported((*(_self_))._field_importer, _66213_imp);
		return _66213_imp;;
	};
	return nullptr;;
}



inline void _1ac725ca5_importUseDecls(jule::Ptr<_1ac721421_symbolBuilder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc4901b3:;
		if (it != expr_end) {
			jule::Ptr<_1ac6e1787_UseDecl> _68321_decl = *it;
			{
				_1ac725aa7_importUseDecl(_self_, &(_68321_decl));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					goto _iter_end_1bc4901b3;
				};
			}
			_iter_next_1bc4901b3:;
			++it;
			goto _iter_begin_1bc4901b3;
		}
		_iter_end_1bc4901b3:;
	};
}



inline void _1ac72605d_appendNode(_1ac721421_symbolBuilder* _self_, _1ac6c7680_Node* _69234_node) {
	{
		auto &_match_expr{ (*(_69234_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1bc491428:;
			{
				{ jule::Slice<jule::Ptr<_1ac750bc0_Impl>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Impls; __jule_push_dest.push(_1ac720d5a_buildImpl((*(_69234_node))._field_Data.cast_ptr<_1ac6e52e6_Impl>(&__jule_any_type11))); };
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1bc491769:;
			{
				jule::Ptr<_1ac858c40_TypeAlias> _69717_ta = _1ac71c296_buildTypeAlias((*(_69234_node))._field_Data.cast_ptr<_1ac6e019d_TypeAliasDecl>(&__jule_any_type12));;
				{ jule::Slice<jule::Ptr<_1ac858c40_TypeAlias>> &__jule_push_dest = (*((*(_self_))._field_table))._field_TypeAliases; __jule_push_dest.push(_69717_ta); };
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1bc4917d0:;
			{
				jule::Ptr<_1ac6ee377_Struct> _70017_srct = _1ac71cb6a_buildStruct((*(_69234_node))._field_Data.cast_ptr<_1ac6e4449_StructDecl>(&__jule_any_type13));;
				{ jule::Slice<jule::Ptr<_1ac6ee377_Struct>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Structs; __jule_push_dest.push(_70017_srct); };
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1bc49203e:;
			{
				jule::Ptr<_1ac71426b_Fn> _70317_f = _1ac71d85d_buildFunc((*(_69234_node))._field_Data.cast_ptr<_1ac6da341_FnDecl>(&__jule_any_type14));;
				{ jule::Slice<jule::Ptr<_1ac71426b_Fn>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Funcs; __jule_push_dest.push(_70317_f); };
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1bc4920a5:;
			{
				jule::Ptr<_1ac727548_Trait> _70617_t = _1ac71e1aa_buildTrait((*(_69234_node))._field_Data.cast_ptr<_1ac6e4b86_TraitDecl>(&__jule_any_type15));;
				{ jule::Slice<jule::Ptr<_1ac727548_Trait>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Traits; __jule_push_dest.push(_70617_t); };
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1bc49211b:;
			{
				jule::Ptr<_1ac7bb015_Var> _70917_v = _1ac7207c7_buildVar((*(_69234_node))._field_Data.cast_ptr<_1ac6db4eb_VarDecl>(&__jule_any_type16));;
				{ jule::Slice<jule::Ptr<_1ac7bb015_Var>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Vars; __jule_push_dest.push(_70917_v); };
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1bc492182:;
			{
				jule::Ptr<_1ac729c54_Enum> _71217_e = _1ac71ebb1_buildEnum((*(_69234_node))._field_Data.cast_ptr<_1ac6e27ee_EnumDecl>(&__jule_any_type17));;
				{ jule::Slice<jule::Ptr<_1ac729c54_Enum>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Enums; __jule_push_dest.push(_71217_e); };
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1bc4921e8:;
			{
				jule::Ptr<_1ac72b45e_TypeEnum> _71517_e = _1ac72050d_buildTypeEnum((*(_69234_node))._field_Data.cast_ptr<_1ac6e3789_TypeEnumDecl>(&__jule_any_type18));;
				{ jule::Slice<jule::Ptr<_1ac72b45e_TypeEnum>> &__jule_push_dest = (*((*(_self_))._field_table))._field_TypeEnums; __jule_push_dest.push(_71517_e); };
			}
		}
		else {
			_case_begin_1bc491659:;
			{
				_1ac721cb2_pushErr(_self_, &((*(_69234_node))._field_Token), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bc491604:;
	};
}



inline void _1ac72625b_appendNodes(_1ac721421_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc499a5d:;
		if (it != expr_end) {
			_1ac6c7680_Node _72321_node = *it;
			{
				_1ac72605d_appendNode(_self_, &(_72321_node));
			}
			_iter_next_1bc499a5d:;
			++it;
			goto _iter_begin_1bc499a5d;
		}
		_iter_end_1bc499a5d:;
	};
}



inline void _1ac726514_pushDirectivePass(_1ac721421_symbolBuilder* _self_, jule::Ptr<_1ac6c7a9d_Directive>* _72841_d) {
	if (((*((*(_72841_d))))._field_Args.len() == 0LL)) {
		_1ac721cb2_pushErr(_self_, &((*((*(_72841_d))))._field_Tag), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_72841_d))))._field_Args.len() > 1LL)) {
		jule::Ptr<_1ac6b2e62_Token> _73313_arg = (*((*(_72841_d))))._field_Args[1LL];;
		_1ac721cb2_pushErr(_self_, &(_73313_arg), jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_72841_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1ac6b2e62_Token> _7379_arg = (*((*(_72841_d))))._field_Args[0LL];;
	if (((*(_7379_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1ac721cb2_pushErr(_self_, &(_7379_arg), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_7379_arg))._field_Kind[0LL] != '\"')) {
		_1ac721cb2_pushErr(_self_, &(_7379_arg), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<_1ac71b85b_Pass> &__jule_push_dest = (*((*(_self_))._field_table))._field_Passes; __jule_push_dest.push(_1ac71b85b_Pass{._field_Token=(*((*(_72841_d))))._field_Tag, ._field_Text=(*(_7379_arg))._field_Kind.slice(1LL, ((*(_7379_arg))._field_Kind.len() - 1LL))}); };
}



inline void _1ac726712_appendTopDirectives(_1ac721421_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc4a13d3:;
		if (it != expr_end) {
			jule::Ptr<_1ac6c7a9d_Directive> _75521_d = *it;
			{
				{
					auto &_match_expr{ (*((*(_75521_d))._field_Tag))._field_Kind };
					
					if (_match_expr == jule::Str::lit("pass", 4)) {
						_case_begin_1bc4a3209:;
						{
							_1ac726514_pushDirectivePass(_self_, &(_75521_d));
						}
					}
					_match_end_1bc4a313d:;
				};
			}
			_iter_next_1bc4a13d3:;
			++it;
			goto _iter_begin_1bc4a13d3;
		}
		_iter_end_1bc4a13d3:;
	};
}



inline void _1ac726910_build(jule::Ptr<_1ac721421_symbolBuilder> _self_) {
	(*(_self_))._field_table=jule::new_ptr<_1ac81e013_SymbolTable>(_1ac81e013_SymbolTable{._field_File=(*((*(_self_))._field_ast))._field_File, });
	_1ac726712_appendTopDirectives(_self_.ptr());
	_1ac725ca5_importUseDecls(_self_);
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
	_1ac72625b_appendNodes(_self_.ptr());
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ac721421_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ac727911_Str(_1ac727548_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1ac727c52_Equal(jule::Ptr<_1ac727548_Trait> _self_, jule::Ptr<_1ac859a32_TypeKind> _2521_other) {
	jule::Ptr<_1ac727548_Trait> _269_trt = _1ac85d98c_Trait(_2521_other.ptr());;
	return (_self_ == _269_trt);;
}



inline jule::Ptr<_1ac71426b_Fn> _1ac7281e7_FindMethod(_1ac727548_Trait* _self_, jule::Str _3429_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc4a6b47:;
		if (it != expr_end) {
			jule::Ptr<_1ac71426b_Fn> _3521_f = *it;
			{
				if (((*(_3521_f))._field_Ident == _3429_ident)) {
					return _3521_f;;
				};
			}
			_iter_next_1bc4a6b47:;
			++it;
			goto _iter_begin_1bc4a6b47;
		}
		_iter_end_1bc4a6b47:;
	};
	return _1ac728879_findMethodInherit(_self_, &(_3429_ident));;
}



inline jule::Ptr<_1ac71426b_Fn> _1ac728879_findMethodInherit(_1ac727548_Trait* _self_, jule::Str* _5537_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc4a9d48:;
		if (it != expr_end) {
			jule::Ptr<_1ac861c04_TypeSymbol> _5621_i = *it;
			{
				if (((*(_5621_i))._field_Kind == nullptr)) {
					goto _iter_next_1bc4a9d48;
				};
				jule::Ptr<_1ac727548_Trait> _6017_t = _1ac85d98c_Trait((*(_5621_i))._field_Kind.ptr());;
				if ((_6017_t != nullptr)) {
					jule::Ptr<_1ac71426b_Fn> _6221_f2 = _1ac7281e7_FindMethod(_6017_t.ptr(), (*(_5537_ident)));;
					if ((_6221_f2 != nullptr)) {
						return _6221_f2;;
					};
				};
			}
			_iter_next_1bc4a9d48:;
			++it;
			goto _iter_begin_1bc4a9d48;
		}
		_iter_end_1bc4a9d48:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac727548_Trait _Src) {
	_Stream << _1ac727911_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1ac72958e_AutoExpr(_1ac7291d7_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac7291d7_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ac72a0c8_Str(_1ac729c54_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1ac72a419_Equal(jule::Ptr<_1ac729c54_Enum> _self_, jule::Ptr<_1ac859a32_TypeKind> _3821_other) {
	jule::Ptr<_1ac729c54_Enum> _399_enm = _1ac85c936_Enum(_3821_other.ptr());;
	return (_self_ == _399_enm);;
}



inline jule::Ptr<_1ac7291d7_EnumItem> _1ac72a848_FindItem(_1ac729c54_Enum* _self_, jule::Str _4727_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc4ad698:;
		if (it != expr_end) {
			jule::Ptr<_1ac7291d7_EnumItem> _4821_item = *it;
			{
				if (((*(_4821_item))._field_Ident == _4727_ident)) {
					return _4821_item;;
				};
			}
			_iter_next_1bc4ad698:;
			++it;
			goto _iter_begin_1bc4ad698;
		}
		_iter_end_1bc4ad698:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac729c54_Enum _Src) {
	_Stream << _1ac72a0c8_Str(&_Src);
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac72ad87_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ac72b7a0_Str(_1ac72b45e_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1ac72bae1_Equal(jule::Ptr<_1ac72b45e_TypeEnum> _self_, jule::Ptr<_1ac859a32_TypeKind> _8021_other) {
	jule::Ptr<_1ac72b45e_TypeEnum> _819_tenm = _1ac85cbbc_TypeEnum(_8021_other.ptr());;
	return (_self_ == _819_tenm);;
}



inline jule::Ptr<_1ac72ad87_TypeEnumItem> _1ac72c020_FindItem(_1ac72b45e_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc4b0997:;
		if (it != expr_end) {
			jule::Ptr<_1ac72ad87_TypeEnumItem> _9021_item = *it;
			{
				if (((*(_9021_item))._field_Ident == _8927_ident)) {
					return _9021_item;;
				};
			}
			_iter_next_1bc4b0997:;
			++it;
			goto _iter_begin_1bc4b0997;
		}
		_iter_end_1bc4b0997:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac72b45e_TypeEnum _Src) {
	_Stream << _1ac72b7a0_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ac72e93a_Str(_1ac72e5b6_comptimeRange* _self_) {
	return jule::Str::lit("comptimeRange", 13);;
}



inline jule::Bool _1ac72ec7b_Equal(jule::Ptr<_1ac72e5b6_comptimeRange> _self_, jule::Ptr<_1ac859a32_TypeKind> _3621_other) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac72e5b6_comptimeRange _Src) {
	_Stream << _1ac72e93a_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ac730452_Str(_1ac730089_comptimeStructField* _self_) {
	return jule::Str::lit("comptimeStructField", 19);;
}



inline jule::Bool _1ac730793_Equal(jule::Ptr<_1ac730089_comptimeStructField> _self_, jule::Ptr<_1ac859a32_TypeKind> _4621_other) {
	return false;;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac730d37__Name(jule::Ptr<_1ac730089_comptimeStructField> _self_, jule::Ptr<_1ac8260a3_Eval>* _5026_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _5041_fc) {
	if (((*((*(_5041_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_5026_e)).ptr(), (*((*((*(_5041_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a6cde8d5_Const> _5513_constant = static__1a6ce0672_NewStr((*((*((*(_self_))._field_field))._field_Decl))._field_Ident);;
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c373_primStr, ._field_Model=jule::Any(_5513_constant, &__jule_any_type19), ._field_Constant=_5513_constant});;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac731233__Type(jule::Ptr<_1ac730089_comptimeStructField> _self_, jule::Ptr<_1ac8260a3_Eval>* _6330_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _6345_fc) {
	if (((*((*(_6345_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_6330_e)).ptr(), (*((*((*(_6345_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1ac74b89c_buildComptimeTypeInfoData(&((*((*(_6330_e))))._field_s), &((*((*(_self_))._field_field))._field_Kind));;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac73162e__Public(jule::Ptr<_1ac730089_comptimeStructField> _self_, jule::Ptr<_1ac8260a3_Eval>* _7132_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _7147_fc) {
	if (((*((*(_7147_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_7132_e)).ptr(), (*((*((*(_7147_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a6cde8d5_Const> _7613_constant = static__1a6ce03a8_NewBool((*((*((*(_self_))._field_field))._field_Decl))._field_Public);;
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c63c_primBool, ._field_Model=jule::Any(_7613_constant, &__jule_any_type19), ._field_Constant=_7613_constant});;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac73193c_subIdent(jule::Ptr<_1ac730089_comptimeStructField> _self_, jule::Str* _8429_ident) {
	{
		auto &_match_expr{ (*(_8429_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1bc4bd301:;
			{
				jule::Ptr<_1ac717170_FnIns> _8717_method = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>([=](jule::Ptr<_1ac8260a3_Eval>* _8833_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _8848_fc, jule::Ptr<_1ac8243ae_Data>* ) mutable -> jule::Ptr<_1ac8243ae_Data> {
					return _1ac730d37__Name(_self_, _8833_e, _8848_fc);;
				}), });;
				return _1ac74b21a_buildAsComptimeMethodData(&(_8717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1bc4bd367:;
			{
				jule::Ptr<_1ac717170_FnIns> _9417_method = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>([=](jule::Ptr<_1ac8260a3_Eval>* _9533_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _9548_fc, jule::Ptr<_1ac8243ae_Data>* ) mutable -> jule::Ptr<_1ac8243ae_Data> {
					return _1ac73162e__Public(_self_, _9533_e, _9548_fc);;
				}), });;
				return _1ac74b21a_buildAsComptimeMethodData(&(_9417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1bc4bd3cd:;
			{
				jule::Ptr<_1ac717170_FnIns> _10117_method = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>([=](jule::Ptr<_1ac8260a3_Eval>* _10233_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _10248_fc, jule::Ptr<_1ac8243ae_Data>* ) mutable -> jule::Ptr<_1ac8243ae_Data> {
					return _1ac731233__Type(_self_, _10233_e, _10248_fc);;
				}), });;
				return _1ac74b21a_buildAsComptimeMethodData(&(_10117_method));;
			}
		}
		else {
			_case_begin_1bc4bd28a:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc4bd235:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ac730089_comptimeStructField _Src) {
	_Stream << _1ac730452_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ac7320be_Str(_1ac731c4a_comptimeStructFields* _self_) {
	return jule::Str::lit("comptimeStructFields", 20);;
}



inline jule::Bool _1ac732410_Equal(jule::Ptr<_1ac731c4a_comptimeStructFields> _self_, jule::Ptr<_1ac859a32_TypeKind> _12021_other) {
	return false;;
}



inline void _1ac732883_ready(_1ac731c4a_comptimeStructFields* _self_, jule::Ptr<_1ac7bb015_Var>* _12429_keyA, jule::Ptr<_1ac7bb015_Var>* _12446_keyB) {
	if (((*(_12429_keyA)) != nullptr)) {
		(*((*(_12429_keyA))))._field_Constant=true;
		(*((*(_12429_keyA))))._field_Value=jule::new_ptr<_1ac825503_Value>(_1ac825503_Value{._field_Data=jule::new_ptr<_1ac8243ae_Data>()});
		(*((*(_12429_keyA))))._field_Kind=(*(_1ac9404b9_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_12446_keyB)) != nullptr)) {
		(*((*(_12446_keyB))))._field_Constant=true;
		(*((*(_12446_keyB))))._field_Value=jule::new_ptr<_1ac825503_Value>(_1ac825503_Value{._field_Data=jule::new_ptr<_1ac8243ae_Data>()});
		(*((*(_12446_keyB))))._field_Kind=jule::new_ptr<_1ac861c04_TypeSymbol>(_1ac861c04_TypeSymbol{._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(jule::new_ptr<_1ac730089_comptimeStructField>(), 6)})});
	};
}



inline void _1ac732ca1_step(_1ac731c4a_comptimeStructFields* _self_, jule::I64 _14523_i, jule::Ptr<_1ac7bb015_Var>* _14536_keyA, jule::Ptr<_1ac7bb015_Var>* _14553_keyB) {
	if (((*(_14536_keyA)) != nullptr)) {
		(*((*((*((*(_14536_keyA))))._field_Value))._field_Data))._field_Constant=static__1a6cded25_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_14523_i)));
		(*((*((*((*(_14536_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_14536_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_14553_keyB)) != nullptr)) {
		(*(_1ac85e75c_comptimeStructField((*((*((*(_14553_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_14523_i];
	};
}



inline jule::I64 _1ac733037_len(_1ac731c4a_comptimeStructFields* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac731c4a_comptimeStructFields _Src) {
	_Stream << _1ac7320be_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ac7336b9_Str(_1ac733345_comptimeStatic* _self_) {
	return jule::Str::lit("comptimeStatic", 14);;
}



inline jule::Bool _1ac733a0a_Equal(jule::Ptr<_1ac733345_comptimeStatic> _self_, jule::Ptr<_1ac859a32_TypeKind> _16921_other) {
	return false;;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac734137__Name(jule::Ptr<_1ac733345_comptimeStatic> _self_, jule::Ptr<_1ac8260a3_Eval>* _17326_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _17341_fc) {
	if (((*((*(_17341_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_17326_e)).ptr(), (*((*((*(_17341_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a6cde8d5_Const> _17813_constant = static__1a6ce0672_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c373_primStr, ._field_Model=jule::Any(_17813_constant, &__jule_any_type19), ._field_Constant=_17813_constant});;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac734533__Type(jule::Ptr<_1ac733345_comptimeStatic> _self_, jule::Ptr<_1ac8260a3_Eval>* _18630_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _18645_fc) {
	if (((*((*(_18645_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_18630_e)).ptr(), (*((*((*(_18645_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1ac74b89c_buildComptimeTypeInfoData(&((*((*(_18630_e))))._field_s), &((*((*((*(_self_))._field_field))._field_Kind))._field_Kind));;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac73492e__Public(jule::Ptr<_1ac733345_comptimeStatic> _self_, jule::Ptr<_1ac8260a3_Eval>* _19432_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _19447_fc) {
	if (((*((*(_19447_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_19432_e)).ptr(), (*((*((*(_19447_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a6cde8d5_Const> _19913_constant = static__1a6ce03a8_NewBool((*((*(_self_))._field_field))._field_Public);;
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c63c_primBool, ._field_Model=jule::Any(_19913_constant, &__jule_any_type19), ._field_Constant=_19913_constant});;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac734c70_subIdent(jule::Ptr<_1ac733345_comptimeStatic> _self_, jule::Str* _20729_ident) {
	{
		auto &_match_expr{ (*(_20729_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1bc4d3bc9:;
			{
				jule::Ptr<_1ac717170_FnIns> _21017_method = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>([=](jule::Ptr<_1ac8260a3_Eval>* _21133_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _21148_fc, jule::Ptr<_1ac8243ae_Data>* ) mutable -> jule::Ptr<_1ac8243ae_Data> {
					return _1ac734137__Name(_self_, _21133_e, _21148_fc);;
				}), });;
				return _1ac74b21a_buildAsComptimeMethodData(&(_21017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1bc4d3c40:;
			{
				jule::Ptr<_1ac717170_FnIns> _21717_method = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>([=](jule::Ptr<_1ac8260a3_Eval>* _21833_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _21848_fc, jule::Ptr<_1ac8243ae_Data>* ) mutable -> jule::Ptr<_1ac8243ae_Data> {
					return _1ac73492e__Public(_self_, _21833_e, _21848_fc);;
				}), });;
				return _1ac74b21a_buildAsComptimeMethodData(&(_21717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1bc4d3ca6:;
			{
				jule::Ptr<_1ac717170_FnIns> _22417_method = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>([=](jule::Ptr<_1ac8260a3_Eval>* _22533_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _22548_fc, jule::Ptr<_1ac8243ae_Data>* ) mutable -> jule::Ptr<_1ac8243ae_Data> {
					return _1ac734533__Type(_self_, _22533_e, _22548_fc);;
				}), });;
				return _1ac74b21a_buildAsComptimeMethodData(&(_22417_method));;
			}
		}
		else {
			_case_begin_1bc4d3b63:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc4d3b0d:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ac733345_comptimeStatic _Src) {
	_Stream << _1ac7336b9_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ac73537a_Str(_1ac735006_comptimeStatics* _self_) {
	return jule::Str::lit("comptimeStatics", 15);;
}



inline jule::Bool _1ac7356bb_Equal(jule::Ptr<_1ac735006_comptimeStatics> _self_, jule::Ptr<_1ac859a32_TypeKind> _24321_other) {
	return false;;
}



inline void _1ac735b3e_ready(_1ac735006_comptimeStatics* _self_, jule::Ptr<_1ac7bb015_Var>* _24729_keyA, jule::Ptr<_1ac7bb015_Var>* _24746_keyB) {
	if (((*(_24729_keyA)) != nullptr)) {
		(*((*(_24729_keyA))))._field_Constant=true;
		(*((*(_24729_keyA))))._field_Value=jule::new_ptr<_1ac825503_Value>(_1ac825503_Value{._field_Data=jule::new_ptr<_1ac8243ae_Data>()});
		(*((*(_24729_keyA))))._field_Kind=(*(_1ac9404b9_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_24746_keyB)) != nullptr)) {
		(*((*(_24746_keyB))))._field_Constant=true;
		(*((*(_24746_keyB))))._field_Value=jule::new_ptr<_1ac825503_Value>(_1ac825503_Value{._field_Data=jule::new_ptr<_1ac8243ae_Data>()});
		(*((*(_24746_keyB))))._field_Kind=jule::new_ptr<_1ac861c04_TypeSymbol>(_1ac861c04_TypeSymbol{._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(jule::new_ptr<_1ac733345_comptimeStatic>(), 8)})});
	};
}



inline void _1ac73605c_step(_1ac735006_comptimeStatics* _self_, jule::I64 _26823_i, jule::Ptr<_1ac7bb015_Var>* _26836_keyA, jule::Ptr<_1ac7bb015_Var>* _26853_keyB) {
	if (((*(_26836_keyA)) != nullptr)) {
		(*((*((*((*(_26836_keyA))))._field_Value))._field_Data))._field_Constant=static__1a6cded25_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_26823_i)));
		(*((*((*((*(_26836_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_26836_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_26853_keyB)) != nullptr)) {
		(*(_1ac861066_comptimeStatic((*((*((*(_26853_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_26823_i];
	};
}



inline jule::I64 _1ac7362e3_len(_1ac735006_comptimeStatics* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac735006_comptimeStatics _Src) {
	_Stream << _1ac73537a_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ac736a85_Str(_1ac736601_comptimeEnumField* _self_) {
	return jule::Str::lit("comptimeEnumField", 17);;
}



inline jule::Bool _1ac736dc6_Equal(jule::Ptr<_1ac736601_comptimeEnumField> _self_, jule::Ptr<_1ac859a32_TypeKind> _29221_other) {
	return false;;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac737349__Name(jule::Ptr<_1ac736601_comptimeEnumField> _self_, jule::Ptr<_1ac8260a3_Eval>* _29626_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _29641_fc) {
	if (((*((*(_29641_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_29626_e)).ptr(), (*((*((*(_29641_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a6cde8d5_Const> _30113_constant = static__1a6ce0672_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c373_primStr, ._field_Model=jule::Any(_30113_constant, &__jule_any_type19), ._field_Constant=_30113_constant});;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac73768a_subIdent(jule::Ptr<_1ac736601_comptimeEnumField> _self_, jule::Str* _30929_ident) {
	{
		auto &_match_expr{ (*(_30929_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1bc4e48ee:;
			{
				jule::Ptr<_1ac717170_FnIns> _31217_method = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>([=](jule::Ptr<_1ac8260a3_Eval>* _31333_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _31348_fc, jule::Ptr<_1ac8243ae_Data>* ) mutable -> jule::Ptr<_1ac8243ae_Data> {
					return _1ac737349__Name(_self_, _31333_e, _31348_fc);;
				}), });;
				return _1ac74b21a_buildAsComptimeMethodData(&(_31217_method));;
			}
		}
		else {
			_case_begin_1bc4e4888:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc4e4833:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ac736601_comptimeEnumField _Src) {
	_Stream << _1ac736a85_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ac737d1c_Str(_1ac737998_comptimeEnumFields* _self_) {
	return jule::Str::lit("comptimeEnumFields", 18);;
}



inline jule::Bool _1ac73815d_Equal(jule::Ptr<_1ac737998_comptimeEnumFields> _self_, jule::Ptr<_1ac859a32_TypeKind> _33121_other) {
	return false;;
}



inline void _1ac7385d1_ready(_1ac737998_comptimeEnumFields* _self_, jule::Ptr<_1ac7bb015_Var>* _33529_keyA, jule::Ptr<_1ac7bb015_Var>* _33546_keyB) {
	if (((*(_33529_keyA)) != nullptr)) {
		(*((*(_33529_keyA))))._field_Constant=true;
		(*((*(_33529_keyA))))._field_Value=jule::new_ptr<_1ac825503_Value>(_1ac825503_Value{._field_Data=jule::new_ptr<_1ac8243ae_Data>()});
		(*((*(_33529_keyA))))._field_Kind=(*(_1ac9404b9_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_33546_keyB)) != nullptr)) {
		(*((*(_33546_keyB))))._field_Constant=true;
		(*((*(_33546_keyB))))._field_Value=jule::new_ptr<_1ac825503_Value>(_1ac825503_Value{._field_Data=jule::new_ptr<_1ac8243ae_Data>()});
		(*((*(_33546_keyB))))._field_Kind=jule::new_ptr<_1ac861c04_TypeSymbol>(_1ac861c04_TypeSymbol{._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(jule::new_ptr<_1ac736601_comptimeEnumField>(), 10)})});
	};
}



inline void _1ac7389ee_step(_1ac737998_comptimeEnumFields* _self_, jule::I64 _35623_i, jule::Ptr<_1ac7bb015_Var>* _35636_keyA, jule::Ptr<_1ac7bb015_Var>* _35653_keyB) {
	if (((*(_35636_keyA)) != nullptr)) {
		(*((*((*((*(_35636_keyA))))._field_Value))._field_Data))._field_Constant=static__1a6cded25_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_35623_i)));
		(*((*((*((*(_35636_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_35636_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_35653_keyB)) != nullptr)) {
		(*(_1ac85ec79_comptimeEnumField((*((*((*(_35653_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_35623_i];
	};
}



inline jule::I64 _1ac738c85_len(_1ac737998_comptimeEnumFields* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac737998_comptimeEnumFields _Src) {
	_Stream << _1ac737d1c_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ac739417_Str(_1ac739093_comptimeParam* _self_) {
	return jule::Str::lit("comptimeParam", 13);;
}



inline jule::Bool _1ac739758_Equal(jule::Ptr<_1ac739093_comptimeParam> _self_, jule::Ptr<_1ac859a32_TypeKind> _38021_other) {
	return false;;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac739eb7__Name(jule::Ptr<_1ac739093_comptimeParam> _self_, jule::Ptr<_1ac8260a3_Eval>* _38426_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _38441_fc) {
	if (((*((*(_38441_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_38426_e)).ptr(), (*((*((*(_38441_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a6cde8d5_Const> _38913_constant = static__1a6ce0672_NewStr((*((*((*(_self_))._field_param))._field_Decl))._field_Ident);;
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c373_primStr, ._field_Model=jule::Any(_38913_constant, &__jule_any_type19), ._field_Constant=_38913_constant});;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac73a3b3__Type(jule::Ptr<_1ac739093_comptimeParam> _self_, jule::Ptr<_1ac8260a3_Eval>* _39730_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _39745_fc) {
	if (((*((*(_39745_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_39730_e)).ptr(), (*((*((*(_39745_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1ac74b89c_buildComptimeTypeInfoData(&((*((*(_39730_e))))._field_s), &((*((*(_self_))._field_param))._field_Kind));;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac73a7ae__Variadic(jule::Ptr<_1ac739093_comptimeParam> _self_, jule::Ptr<_1ac8260a3_Eval>* _40534_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _40549_fc) {
	if (((*((*(_40549_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_40534_e)).ptr(), (*((*((*(_40549_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a6cde8d5_Const> _41013_constant = static__1a6ce03a8_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Variadic);;
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c63c_primBool, ._field_Model=jule::Any(_41013_constant, &__jule_any_type19), ._field_Constant=_41013_constant});;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac73abaa__Reference(jule::Ptr<_1ac739093_comptimeParam> _self_, jule::Ptr<_1ac8260a3_Eval>* _41835_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _41850_fc) {
	if (((*((*(_41850_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_41835_e)).ptr(), (*((*((*(_41850_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a6cde8d5_Const> _42313_constant = static__1a6ce03a8_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Reference);;
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c63c_primBool, ._field_Model=jule::Any(_42313_constant, &__jule_any_type19), ._field_Constant=_42313_constant});;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac73aeeb_subIdent(jule::Ptr<_1ac739093_comptimeParam> _self_, jule::Str* _43129_ident) {
	{
		auto &_match_expr{ (*(_43129_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1bc508eda:;
			{
				jule::Ptr<_1ac717170_FnIns> _43417_method = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>([=](jule::Ptr<_1ac8260a3_Eval>* _43533_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _43548_fc, jule::Ptr<_1ac8243ae_Data>* ) mutable -> jule::Ptr<_1ac8243ae_Data> {
					return _1ac739eb7__Name(_self_, _43533_e, _43548_fc);;
				}), });;
				return _1ac74b21a_buildAsComptimeMethodData(&(_43417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Variadic", 8)) {
			_case_begin_1bc509051:;
			{
				jule::Ptr<_1ac717170_FnIns> _44117_method = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>([=](jule::Ptr<_1ac8260a3_Eval>* _44233_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _44248_fc, jule::Ptr<_1ac8243ae_Data>* ) mutable -> jule::Ptr<_1ac8243ae_Data> {
					return _1ac73a7ae__Variadic(_self_, _44233_e, _44248_fc);;
				}), });;
				return _1ac74b21a_buildAsComptimeMethodData(&(_44117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Reference", 9)) {
			_case_begin_1bc5090b7:;
			{
				jule::Ptr<_1ac717170_FnIns> _44817_method = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>([=](jule::Ptr<_1ac8260a3_Eval>* _44933_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _44948_fc, jule::Ptr<_1ac8243ae_Data>* ) mutable -> jule::Ptr<_1ac8243ae_Data> {
					return _1ac73abaa__Reference(_self_, _44933_e, _44948_fc);;
				}), });;
				return _1ac74b21a_buildAsComptimeMethodData(&(_44817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1bc50913e:;
			{
				jule::Ptr<_1ac717170_FnIns> _45517_method = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>([=](jule::Ptr<_1ac8260a3_Eval>* _45633_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _45648_fc, jule::Ptr<_1ac8243ae_Data>* ) mutable -> jule::Ptr<_1ac8243ae_Data> {
					return _1ac73a3b3__Type(_self_, _45633_e, _45648_fc);;
				}), });;
				return _1ac74b21a_buildAsComptimeMethodData(&(_45517_method));;
			}
		}
		else {
			_case_begin_1bc508e74:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc508e1e:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ac739093_comptimeParam _Src) {
	_Stream << _1ac739417_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ac73b67d_Str(_1ac73b309_comptimeParams* _self_) {
	return jule::Str::lit("comptimeParams", 14);;
}



inline jule::Bool _1ac73b9be_Equal(jule::Ptr<_1ac73b309_comptimeParams> _self_, jule::Ptr<_1ac859a32_TypeKind> _47421_other) {
	return false;;
}



inline void _1ac73be42_ready(_1ac73b309_comptimeParams* _self_, jule::Ptr<_1ac7bb015_Var>* _47829_keyA, jule::Ptr<_1ac7bb015_Var>* _47846_keyB) {
	if (((*(_47829_keyA)) != nullptr)) {
		(*((*(_47829_keyA))))._field_Constant=true;
		(*((*(_47829_keyA))))._field_Value=jule::new_ptr<_1ac825503_Value>(_1ac825503_Value{._field_Data=jule::new_ptr<_1ac8243ae_Data>()});
		(*((*(_47829_keyA))))._field_Kind=(*(_1ac9404b9_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_47846_keyB)) != nullptr)) {
		(*((*(_47846_keyB))))._field_Constant=true;
		(*((*(_47846_keyB))))._field_Value=jule::new_ptr<_1ac825503_Value>(_1ac825503_Value{._field_Data=jule::new_ptr<_1ac8243ae_Data>()});
		(*((*(_47846_keyB))))._field_Kind=jule::new_ptr<_1ac861c04_TypeSymbol>(_1ac861c04_TypeSymbol{._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(jule::new_ptr<_1ac739093_comptimeParam>(), 12)})});
	};
}



inline void _1ac73c360_step(_1ac73b309_comptimeParams* _self_, jule::I64 _49923_i, jule::Ptr<_1ac7bb015_Var>* _49936_keyA, jule::Ptr<_1ac7bb015_Var>* _49953_keyB) {
	if (((*(_49936_keyA)) != nullptr)) {
		(*((*((*((*(_49936_keyA))))._field_Value))._field_Data))._field_Constant=static__1a6cded25_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_49923_i)));
		(*((*((*((*(_49936_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_49936_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_49953_keyB)) != nullptr)) {
		(*(_1ac860296_comptimeParam((*((*((*(_49953_keyB))))._field_Kind))._field_Kind.ptr())))._field_param=(*(_self_))._field_params[_49923_i];
	};
}



inline jule::I64 _1ac73c5e6_len(_1ac73b309_comptimeParams* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_params.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac73b309_comptimeParams _Src) {
	_Stream << _1ac73b67d_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ac73cc78_Str(_1ac73c904_comptimeTypeInfos* _self_) {
	return jule::Str::lit("comptimeTypeInfos", 17);;
}



inline jule::Bool _1ac73d0b9_Equal(jule::Ptr<_1ac73c904_comptimeTypeInfos> _self_, jule::Ptr<_1ac859a32_TypeKind> _52321_other) {
	return false;;
}



inline void _1ac73d53c_ready(_1ac73c904_comptimeTypeInfos* _self_, jule::Ptr<_1ac7bb015_Var>* _52729_keyA, jule::Ptr<_1ac7bb015_Var>* _52746_keyB) {
	if (((*(_52729_keyA)) != nullptr)) {
		(*((*(_52729_keyA))))._field_Constant=true;
		(*((*(_52729_keyA))))._field_Value=jule::new_ptr<_1ac825503_Value>(_1ac825503_Value{._field_Data=jule::new_ptr<_1ac8243ae_Data>()});
		(*((*(_52729_keyA))))._field_Kind=(*(_1ac9404b9_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_52746_keyB)) != nullptr)) {
		(*((*(_52746_keyB))))._field_Constant=true;
		(*((*(_52746_keyB))))._field_Value=jule::new_ptr<_1ac825503_Value>(_1ac825503_Value{._field_Data=jule::new_ptr<_1ac8243ae_Data>()});
		(*((*(_52746_keyB))))._field_Kind=jule::new_ptr<_1ac861c04_TypeSymbol>(_1ac861c04_TypeSymbol{._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(jule::new_ptr<_1ac73deee_comptimeTypeInfo>(), 15)})});
	};
}



inline void _1ac73d95a_step(_1ac73c904_comptimeTypeInfos* _self_, jule::I64 _54823_i, jule::Ptr<_1ac7bb015_Var>* _54836_keyA, jule::Ptr<_1ac7bb015_Var>* _54853_keyB) {
	if (((*(_54836_keyA)) != nullptr)) {
		(*((*((*((*(_54836_keyA))))._field_Value))._field_Data))._field_Constant=static__1a6cded25_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_54823_i)));
		(*((*((*((*(_54836_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_54836_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_54853_keyB)) != nullptr)) {
		(*((*((*((*(_54853_keyB))))._field_Kind))._field_Kind))._field_Kind=jule::Trait<_1ac85957b_Kind>((*(_self_))._field_types[_54823_i], 15);
	};
}



inline jule::I64 _1ac73dbe1_len(_1ac73c904_comptimeTypeInfos* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_types.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac73c904_comptimeTypeInfos _Src) {
	_Stream << _1ac73cc78_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ac73e373_Str(_1ac73deee_comptimeTypeInfo* _self_) {
	return ((jule::Str::lit("comptimeTypeInfo[", 17) + _1ac859dea_Str((*(_self_))._field_base.ptr())) + jule::Str::lit("]", 1));;
}



inline jule::Bool _1ac73e6b4_Equal(jule::Ptr<_1ac73deee_comptimeTypeInfo> _self_, jule::Ptr<_1ac859a32_TypeKind> _57221_other) {
	return false;;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac73ed13__Str(jule::Ptr<_1ac73deee_comptimeTypeInfo> _self_, jule::Ptr<_1ac8260a3_Eval>* _57625_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _57640_fc) {
	if (((*((*(_57640_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_57625_e)).ptr(), (*((*((*(_57640_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Str", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a6cde8d5_Const> _58113_constant = static__1a6ce0672_NewStr(_1ac859dea_Str((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c373_primStr, ._field_Model=jule::Any(_58113_constant, &__jule_any_type19), ._field_Constant=_58113_constant});;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac74020e__Kind(jule::Ptr<_1ac73deee_comptimeTypeInfo> _self_, jule::Ptr<_1ac8260a3_Eval>* _58930_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _58945_fc) {
	if (((*((*(_58945_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_58930_e)).ptr(), (*((*((*(_58945_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Kind", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ac729c54_Enum> _59413_enm = _1ac779666_FindEnum(_1ac74b528_findComptimePackage(&((*((*(_58930_e))))._field_s)).ptr(), jule::Str::lit("Kind", 4));;
	jule::Ptr<_1ac7291d7_EnumItem> _59517_item = nullptr;;
	{
		
		if (_1ac85ad96_Void((*(_self_))._field_base.ptr())) {
			_case_begin_1bc526832:;
			{
				_59517_item=_1ac72a848_FindItem(_59413_enm.ptr(), jule::Str::lit("Void", 4));
			}
		}
		else if ((_1ac85d706_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bc526722:;
			{
				_59517_item=_1ac72a848_FindItem(_59413_enm.ptr(), jule::Str::lit("Struct", 6));
			}
		}
		else if ((_1ac85d98c_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bc526645:;
			{
				_59517_item=_1ac72a848_FindItem(_59413_enm.ptr(), jule::Str::lit("Trait", 5));
			}
		}
		else if ((_1ac85c6a0_Ptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bc526436:;
			{
				if (_1ac86a438_IsUnsafe(_1ac85c6a0_Ptr((*(_self_))._field_base.ptr()).ptr())) {
					_59517_item=_1ac72a848_FindItem(_59413_enm.ptr(), jule::Str::lit("UnsafePtr", 9));
				} else {
					_59517_item=_1ac72a848_FindItem(_59413_enm.ptr(), jule::Str::lit("Ptr", 3));
				};
			}
		}
		else if ((_1ac85c419_Sptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bc52649c:;
			{
				_59517_item=_1ac72a848_FindItem(_59413_enm.ptr(), jule::Str::lit("SmartPtr", 8));
			}
		}
		else if ((_1ac85c936_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bc526eb4:;
			{
				_59517_item=_1ac72a848_FindItem(_59413_enm.ptr(), jule::Str::lit("Enum", 4));
			}
		}
		else if ((_1ac85dc23_Map((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bc52702a:;
			{
				_59517_item=_1ac72a848_FindItem(_59413_enm.ptr(), jule::Str::lit("Map", 3));
			}
		}
		else if ((_1ac85d1d9_Slc((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bc5270a2:;
			{
				_59517_item=_1ac72a848_FindItem(_59413_enm.ptr(), jule::Str::lit("Slice", 5));
			}
		}
		else if ((_1ac85ce53_Arr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bc527129:;
			{
				_59517_item=_1ac72a848_FindItem(_59413_enm.ptr(), jule::Str::lit("Array", 5));
			}
		}
		else if ((_1ac85d470_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bc5271a1:;
			{
				_59517_item=_1ac72a848_FindItem(_59413_enm.ptr(), jule::Str::lit("Func", 4));
			}
		}
		else if ((_1ac85dea9_Tup((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bc527228:;
			{
				_59517_item=_1ac72a848_FindItem(_59413_enm.ptr(), jule::Str::lit("Tuple", 5));
			}
		}
		else if ((_1ac85c183_Prim((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bc5272a0:;
			{
				jule::Ptr<_1ac86260b_Prim> _62413_prim = _1ac85c183_Prim((*(_self_))._field_base.ptr());;
				{
					
					if (_1ac865d29_IsAny(_62413_prim.ptr())) {
						_case_begin_1bc532bc3:;
						{
							_59517_item=_1ac72a848_FindItem(_59413_enm.ptr(), jule::Str::lit("Any", 3));
						}
					}
					else if (_1ac86580c_IsBool(_62413_prim.ptr())) {
						_case_begin_1bc532c39:;
						{
							_59517_item=_1ac72a848_FindItem(_59413_enm.ptr(), jule::Str::lit("Bool", 4));
						}
					}
					else if (_1ac865a93_IsStr(_62413_prim.ptr())) {
						_case_begin_1bc532ca0:;
						{
							_59517_item=_1ac72a848_FindItem(_59413_enm.ptr(), jule::Str::lit("Str", 3));
						}
					}
					else if (_1ac864a3c_IsF32(_62413_prim.ptr())) {
						_case_begin_1bc532d16:;
						{
							_59517_item=_1ac72a848_FindItem(_59413_enm.ptr(), jule::Str::lit("F32", 3));
						}
					}
					else if (_1ac864cc3_IsF64(_62413_prim.ptr())) {
						_case_begin_1bc533894:;
						{
							_59517_item=_1ac72a848_FindItem(_59413_enm.ptr(), jule::Str::lit("F64", 3));
						}
					}
					else if (_1ac8634b9_IsI8(_62413_prim.ptr())) {
						_case_begin_1bc53390a:;
						{
							_59517_item=_1ac72a848_FindItem(_59413_enm.ptr(), jule::Str::lit("I8", 2));
						}
					}
					else if (_1ac863750_IsI16(_62413_prim.ptr())) {
						_case_begin_1bc533971:;
						{
							_59517_item=_1ac72a848_FindItem(_59413_enm.ptr(), jule::Str::lit("I16", 3));
						}
					}
					else if (_1ac8639d6_IsI32(_62413_prim.ptr())) {
						_case_begin_1bc5339d7:;
						{
							_59517_item=_1ac72a848_FindItem(_59413_enm.ptr(), jule::Str::lit("I32", 3));
						}
					}
					else if (_1ac863c6c_IsI64(_62413_prim.ptr())) {
						_case_begin_1bc533a4d:;
						{
							_59517_item=_1ac72a848_FindItem(_59413_enm.ptr(), jule::Str::lit("I64", 3));
						}
					}
					else if (_1ac864003_IsU8(_62413_prim.ptr())) {
						_case_begin_1bc533ac5:;
						{
							_59517_item=_1ac72a848_FindItem(_59413_enm.ptr(), jule::Str::lit("U8", 2));
						}
					}
					else if (_1ac864289_IsU16(_62413_prim.ptr())) {
						_case_begin_1bc533b4c:;
						{
							_59517_item=_1ac72a848_FindItem(_59413_enm.ptr(), jule::Str::lit("U16", 3));
						}
					}
					else if (_1ac864520_IsU32(_62413_prim.ptr())) {
						_case_begin_1bc533bc4:;
						{
							_59517_item=_1ac72a848_FindItem(_59413_enm.ptr(), jule::Str::lit("U32", 3));
						}
					}
					else if (_1ac8647a6_IsU64(_62413_prim.ptr())) {
						_case_begin_1bc533c4b:;
						{
							_59517_item=_1ac72a848_FindItem(_59413_enm.ptr(), jule::Str::lit("U64", 3));
						}
					}
					else if (_1ac865059_IsInt(_62413_prim.ptr())) {
						_case_begin_1bc533cc3:;
						{
							_59517_item=_1ac72a848_FindItem(_59413_enm.ptr(), jule::Str::lit("Int", 3));
						}
					}
					else if (_1ac8652e0_IsUint(_62413_prim.ptr())) {
						_case_begin_1bc533d4a:;
						{
							_59517_item=_1ac72a848_FindItem(_59413_enm.ptr(), jule::Str::lit("Uint", 4));
						}
					}
					else if (_1ac865576_IsUintptr(_62413_prim.ptr())) {
						_case_begin_1bc533dc2:;
						{
							_59517_item=_1ac72a848_FindItem(_59413_enm.ptr(), jule::Str::lit("Uintptr", 7));
						}
					}
					else {
						_case_begin_1bc532b5c:;
						{
							jule::panic((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1ac859dea_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:659:17"));;
						}
					}
					_match_end_1bc532ae6:;
				};
			}
		}
		else {
			_case_begin_1bc5262d2:;
			{
				jule::panic((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1ac859dea_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:662:13"));;
			}
		}
		_match_end_1bc525e5d:;
	};
	return _1ac856798_evalEnumStatic(&(_59413_enm), &(_59517_item));;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac74060a__Bits(jule::Ptr<_1ac73deee_comptimeTypeInfo> _self_, jule::Ptr<_1ac8260a3_Eval>* _66730_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _66745_fc) {
	if (((*((*(_66745_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_66730_e)).ptr(), (*((*((*(_66745_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ac86260b_Prim> _6729_prim = _1ac85c183_Prim((*(_self_))._field_base.ptr());;
	if ((_6729_prim == nullptr)) {
		_1ac826603_pushErr((*(_66730_e)).ptr(), (*((*(_66745_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _6779_n = _1dbba5ed6_BitsizeOf((*(_6729_prim))._field_Kind);;
	if ((_6779_n == -1LL)) {
		_1ac826603_pushErr((*(_66730_e)).ptr(), (*((*(_66745_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a6cde8d5_Const> _68213_constant = static__1a6cded25_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_6779_n)));;
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c373_primStr, ._field_Model=jule::Any(_68213_constant, &__jule_any_type19), ._field_Constant=_68213_constant});;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac740a06__Elem(jule::Ptr<_1ac73deee_comptimeTypeInfo> _self_, jule::Ptr<_1ac8260a3_Eval>* _69030_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _69045_fc) {
	if (((*((*(_69045_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_69030_e)).ptr(), (*((*((*(_69045_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ac8698ee_Ptr> _69513_ptr = _1ac85c6a0_Ptr((*(_self_))._field_base.ptr());;
	if ((_69513_ptr != nullptr)) {
		if (_1ac86a438_IsUnsafe(_69513_ptr.ptr())) {
			_1ac826603_pushErr((*(_69030_e)).ptr(), (*((*(_69045_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
			return nullptr;;
		};
		return _1ac74b89c_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*(_69513_ptr))._field_Elem));;
	};
	jule::Ptr<_1ac866137_Sptr> _70313_sptr = _1ac85c419_Sptr((*(_self_))._field_base.ptr());;
	if ((_70313_sptr != nullptr)) {
		return _1ac74b89c_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*(_70313_sptr))._field_Elem));;
	};
	jule::Ptr<_1ac866b0a_Slc> _70713_slice = _1ac85d1d9_Slc((*(_self_))._field_base.ptr());;
	if ((_70713_slice != nullptr)) {
		return _1ac74b89c_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*(_70713_slice))._field_Elem));;
	};
	jule::Ptr<_1ac868e2b_Arr> _71113_array = _1ac85ce53_Arr((*(_self_))._field_base.ptr());;
	if ((_71113_array != nullptr)) {
		return _1ac74b89c_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*(_71113_array))._field_Elem));;
	};
	jule::Ptr<_1ac729c54_Enum> _71513_enm = _1ac85c936_Enum((*(_self_))._field_base.ptr());;
	if ((_71513_enm != nullptr)) {
		return _1ac74b89c_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*((*(_71513_enm))._field_Kind))._field_Kind));;
	};
	_1ac826603_pushErr((*(_69030_e)).ptr(), (*((*(_69045_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac740e02__Size(jule::Ptr<_1ac73deee_comptimeTypeInfo> _self_, jule::Ptr<_1ac8260a3_Eval>* _72330_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _72345_fc) {
	if (((*((*(_72345_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_72330_e)).ptr(), (*((*((*(_72345_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ac868e2b_Arr> _72813_arr = _1ac85ce53_Arr((*(_self_))._field_base.ptr());;
	if ((_72813_arr == nullptr)) {
		_1ac826603_pushErr((*(_72330_e)).ptr(), (*((*(_72345_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a6cde8d5_Const> _73313_constant = static__1a6cded25_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_72813_arr))._field_N)));;
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93d099_primInt, ._field_Model=jule::Any(_73313_constant, &__jule_any_type19), ._field_Constant=_73313_constant});;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac7412ed__Key(jule::Ptr<_1ac73deee_comptimeTypeInfo> _self_, jule::Ptr<_1ac8260a3_Eval>* _74129_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _74144_fc) {
	if (((*((*(_74144_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_74129_e)).ptr(), (*((*((*(_74144_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ac86829e_Map> _74613_m = _1ac85dc23_Map((*(_self_))._field_base.ptr());;
	if ((_74613_m == nullptr)) {
		_1ac826603_pushErr((*(_74129_e)).ptr(), (*((*(_74144_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1ac74b89c_buildComptimeTypeInfoData(&((*((*(_74129_e))))._field_s), &((*(_74613_m))._field_Key));;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac7416e9__Value(jule::Ptr<_1ac73deee_comptimeTypeInfo> _self_, jule::Ptr<_1ac8260a3_Eval>* _75431_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _75446_fc) {
	if (((*((*(_75446_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_75431_e)).ptr(), (*((*((*(_75446_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ac86829e_Map> _75913_m = _1ac85dc23_Map((*(_self_))._field_base.ptr());;
	if ((_75913_m == nullptr)) {
		_1ac826603_pushErr((*(_75431_e)).ptr(), (*((*(_75446_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1ac74b89c_buildComptimeTypeInfoData(&((*((*(_75431_e))))._field_s), &((*(_75913_m))._field_Val));;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac741ae5__Fields(jule::Ptr<_1ac73deee_comptimeTypeInfo> _self_, jule::Ptr<_1ac8260a3_Eval>* _76732_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _76747_fc) {
	if (((*((*(_76747_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_76732_e)).ptr(), (*((*((*(_76747_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ac702105_StructIns> _77213_s = _1ac85d706_Struct((*(_self_))._field_base.ptr());;
	if ((_77213_s != nullptr)) {
		return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(jule::new_ptr<_1ac731c4a_comptimeStructFields>(_1ac731c4a_comptimeStructFields{._field_fields=(*(_77213_s))._field_Fields}), 7)}), });;
	};
	jule::Ptr<_1ac729c54_Enum> _78213_enm = _1ac85c936_Enum((*(_self_))._field_base.ptr());;
	if ((_78213_enm != nullptr)) {
		return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(jule::new_ptr<_1ac737998_comptimeEnumFields>(_1ac737998_comptimeEnumFields{._field_fields=(*(_78213_enm))._field_Items}), 11)}), });;
	};
	_1ac826603_pushErr((*(_76732_e)).ptr(), (*((*(_76747_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac741ee1__Statics(jule::Ptr<_1ac73deee_comptimeTypeInfo> _self_, jule::Ptr<_1ac8260a3_Eval>* _79633_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _79648_fc) {
	if (((*((*(_79648_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_79633_e)).ptr(), (*((*((*(_79648_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ac702105_StructIns> _80113_s = _1ac85d706_Struct((*(_self_))._field_base.ptr());;
	if ((_80113_s == nullptr)) {
		_1ac826603_pushErr((*(_79633_e)).ptr(), (*((*(_79648_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(jule::new_ptr<_1ac735006_comptimeStatics>(_1ac735006_comptimeStatics{._field_fields=(*(_80113_s))._field_Statics}), 9)}), });;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac7423dc__Public(jule::Ptr<_1ac73deee_comptimeTypeInfo> _self_, jule::Ptr<_1ac8260a3_Eval>* _81532_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _81547_fc) {
	if (((*((*(_81547_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_81532_e)).ptr(), (*((*((*(_81547_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Bool _82013_public = false;;
	{
		
		if ((_1ac85d706_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bc564e14:;
			{
				_82013_public=(*((*(_1ac85d706_Struct((*(_self_))._field_base.ptr())))._field_Decl))._field_Public;
			}
		}
		else if ((_1ac85d98c_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bc565db0:;
			{
				_82013_public=(*(_1ac85d98c_Trait((*(_self_))._field_base.ptr())))._field_Public;
			}
		}
		else if ((_1ac85c936_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bc565e26:;
			{
				_82013_public=(*(_1ac85c936_Enum((*(_self_))._field_base.ptr())))._field_Public;
			}
		}
		else if ((_1ac85cbbc_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bc564b17:;
			{
				_82013_public=(*(_1ac85cbbc_TypeEnum((*(_self_))._field_base.ptr())))._field_Public;
			}
		}
		else {
			_case_begin_1bc564aa1:;
			{
				_1ac826603_pushErr((*(_81532_e)).ptr(), (*((*(_81547_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bc564980:;
	};
	jule::Ptr<_1a6cde8d5_Const> _83413_constant = static__1a6ce03a8_NewBool(_82013_public);;
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c63c_primBool, ._field_Model=jule::Any(_83413_constant, &__jule_any_type19), ._field_Constant=_83413_constant});;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac7427d8__Binded(jule::Ptr<_1ac73deee_comptimeTypeInfo> _self_, jule::Ptr<_1ac8260a3_Eval>* _84232_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _84247_fc) {
	if (((*((*(_84247_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_84232_e)).ptr(), (*((*((*(_84247_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a6cde8d5_Const> _84713_constant = static__1a6ce03a8_NewBool(_1ac85a879_Binded((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c63c_primBool, ._field_Model=jule::Any(_84713_constant, &__jule_any_type19), ._field_Constant=_84713_constant});;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac742bd4__Ordered(jule::Ptr<_1ac73deee_comptimeTypeInfo> _self_, jule::Ptr<_1ac8260a3_Eval>* _85529_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _85544_fc) {
	if (((*((*(_85544_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_85529_e)).ptr(), (*((*((*(_85544_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Ordered", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a6cde8d5_Const> _86013_constant = static__1a6ce03a8_NewBool(_1ac85b649_Ordered((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c373_primStr, ._field_Model=jule::Any(_86013_constant, &__jule_any_type19), ._field_Constant=_86013_constant});;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac7430d0__Comparable(jule::Ptr<_1ac73deee_comptimeTypeInfo> _self_, jule::Ptr<_1ac8260a3_Eval>* _86832_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _86847_fc) {
	if (((*((*(_86847_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_86832_e)).ptr(), (*((*((*(_86847_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Comparable", 10), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a6cde8d5_Const> _87313_constant = static__1a6ce03a8_NewBool(_1ac85b12c_Comparable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c373_primStr, ._field_Model=jule::Any(_87313_constant, &__jule_any_type19), ._field_Constant=_87313_constant});;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac7434cb__Mutable(jule::Ptr<_1ac73deee_comptimeTypeInfo> _self_, jule::Ptr<_1ac8260a3_Eval>* _88129_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _88144_fc) {
	if (((*((*(_88144_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_88129_e)).ptr(), (*((*((*(_88144_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a6cde8d5_Const> _88613_constant = static__1a6ce03a8_NewBool(_1ac85b3b3_Mutable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c63c_primBool, ._field_Model=jule::Any(_88613_constant, &__jule_any_type19), ._field_Constant=_88613_constant});;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac7438c7__Types(jule::Ptr<_1ac73deee_comptimeTypeInfo> _self_, jule::Ptr<_1ac8260a3_Eval>* _89431_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _89446_fc) {
	if (((*((*(_89446_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_89431_e)).ptr(), (*((*((*(_89446_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ac8676ee_Tuple> _89913_tup = _1ac85dea9_Tup((*(_self_))._field_base.ptr());;
	if ((_89913_tup == nullptr)) {
		_1ac826603_pushErr((*(_89431_e)).ptr(), (*((*(_89446_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ac73c904_comptimeTypeInfos> _90413_infos = jule::new_ptr<_1ac73c904_comptimeTypeInfos>(_1ac73c904_comptimeTypeInfos{._field_types=jule::Slice<jule::Ptr<_1ac73deee_comptimeTypeInfo>>::alloc(0LL, (*(_89913_tup))._field_Types.len())});;
	{
		auto expr = &((*(_89913_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc579d6e:;
		if (it != expr_end) {
			jule::Ptr<_1ac859a32_TypeKind> _90721_t = *it;
			{
				{ jule::Slice<jule::Ptr<_1ac73deee_comptimeTypeInfo>> &__jule_push_dest = (*(_90413_infos))._field_types; __jule_push_dest.push(_1ac7975b8_pushComptimeTypeInfo((*((*((*(_89431_e))))._field_s))._field_meta.ptr(), &(_90721_t))); };
			}
			_iter_next_1bc579d6e:;
			++it;
			goto _iter_begin_1bc579d6e;
		}
		_iter_end_1bc579d6e:;
	};
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(_90413_infos, 14)}), });;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac743cc3__Exceptional(jule::Ptr<_1ac73deee_comptimeTypeInfo> _self_, jule::Ptr<_1ac8260a3_Eval>* _91737_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _91752_fc) {
	if (((*((*(_91752_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_91737_e)).ptr(), (*((*((*(_91752_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ac717170_FnIns> _92213_f = _1ac85d470_Fn((*(_self_))._field_base.ptr());;
	if ((_92213_f == nullptr)) {
		_1ac826603_pushErr((*(_91737_e)).ptr(), (*((*(_91752_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a6cde8d5_Const> _92713_constant = static__1a6ce03a8_NewBool((((*(_92213_f))._field_Decl != nullptr) && (*((*(_92213_f))._field_Decl))._field_Exceptional));;
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c63c_primBool, ._field_Model=jule::Any(_92713_constant, &__jule_any_type19), ._field_Constant=_92713_constant});;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac7441be__CanNil(jule::Ptr<_1ac73deee_comptimeTypeInfo> _self_, jule::Ptr<_1ac8260a3_Eval>* _93532_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _93547_fc) {
	if (((*((*(_93547_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_93532_e)).ptr(), (*((*((*(_93547_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("CanNil", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a6cde8d5_Const> _94013_constant = static__1a6ce03a8_NewBool(_1ac85b8d0_NilCompatible((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c63c_primBool, ._field_Model=jule::Any(_94013_constant, &__jule_any_type19), ._field_Constant=_94013_constant});;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac7445ba__RC(jule::Ptr<_1ac73deee_comptimeTypeInfo> _self_, jule::Ptr<_1ac8260a3_Eval>* _94828_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _94843_fc) {
	if (((*((*(_94843_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_94828_e)).ptr(), (*((*((*(_94843_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("RC", 2), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a6cde8d5_Const> _95313_constant = static__1a6ce03a8_NewBool(_1ac85bb66_PerformsRC((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c63c_primBool, ._field_Model=jule::Any(_95313_constant, &__jule_any_type19), ._field_Constant=_95313_constant});;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac7449b6__Result(jule::Ptr<_1ac73deee_comptimeTypeInfo> _self_, jule::Ptr<_1ac8260a3_Eval>* _96132_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _96147_fc) {
	if (((*((*(_96147_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_96132_e)).ptr(), (*((*((*(_96147_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ac717170_FnIns> _96613_f = _1ac85d470_Fn((*(_self_))._field_base.ptr());;
	if ((_96613_f == nullptr)) {
		_1ac826603_pushErr((*(_96132_e)).ptr(), (*((*(_96147_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*(_96613_f))._field_Result == nullptr)) {
		return _1ac74b89c_buildComptimeTypeInfoData(&((*((*(_96132_e))))._field_s), &(_1ac93bc9b_primVoid));;
	};
	return _1ac74b89c_buildComptimeTypeInfoData(&((*((*(_96132_e))))._field_s), &((*(_96613_f))._field_Result));;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac744db2__Params(jule::Ptr<_1ac73deee_comptimeTypeInfo> _self_, jule::Ptr<_1ac8260a3_Eval>* _97732_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _97747_fc) {
	if (((*((*(_97747_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_97732_e)).ptr(), (*((*((*(_97747_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ac717170_FnIns> _98213_f = _1ac85d470_Fn((*(_self_))._field_base.ptr());;
	if ((_98213_f == nullptr)) {
		_1ac826603_pushErr((*(_97732_e)).ptr(), (*((*(_97747_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(jule::new_ptr<_1ac73b309_comptimeParams>(_1ac73b309_comptimeParams{._field_params=(*(_98213_f))._field_Params}), 13)}), });;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac745203_subIdent(jule::Ptr<_1ac73deee_comptimeTypeInfo> _self_, jule::Str* _99429_ident) {
	{
		auto &_match_expr{ (*(_99429_ident)) };
		
		if (_match_expr == jule::Str::lit("Str", 3)) {
			_case_begin_1bc58e218:;
			{
				jule::Ptr<_1ac717170_FnIns> _99717_method = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>([=](jule::Ptr<_1ac8260a3_Eval>* _99833_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _99848_fc, jule::Ptr<_1ac8243ae_Data>* ) mutable -> jule::Ptr<_1ac8243ae_Data> {
					return _1ac73ed13__Str(_self_, _99833_e, _99848_fc);;
				}), });;
				return _1ac74b21a_buildAsComptimeMethodData(&(_99717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Bits", 4)) {
			_case_begin_1bc58e79b:;
			{
				jule::Ptr<_1ac717170_FnIns> _100417_method = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>([=](jule::Ptr<_1ac8260a3_Eval>* _100533_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _100548_fc, jule::Ptr<_1ac8243ae_Data>* ) mutable -> jule::Ptr<_1ac8243ae_Data> {
					return _1ac74060a__Bits(_self_, _100533_e, _100548_fc);;
				}), });;
				return _1ac74b21a_buildAsComptimeMethodData(&(_100417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Elem", 4)) {
			_case_begin_1bc58e812:;
			{
				jule::Ptr<_1ac717170_FnIns> _101117_method = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>([=](jule::Ptr<_1ac8260a3_Eval>* _101233_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _101248_fc, jule::Ptr<_1ac8243ae_Data>* ) mutable -> jule::Ptr<_1ac8243ae_Data> {
					return _1ac740a06__Elem(_self_, _101233_e, _101248_fc);;
				}), });;
				return _1ac74b21a_buildAsComptimeMethodData(&(_101117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Size", 4)) {
			_case_begin_1bc58e878:;
			{
				jule::Ptr<_1ac717170_FnIns> _101817_method = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>([=](jule::Ptr<_1ac8260a3_Eval>* _101933_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _101948_fc, jule::Ptr<_1ac8243ae_Data>* ) mutable -> jule::Ptr<_1ac8243ae_Data> {
					return _1ac740e02__Size(_self_, _101933_e, _101948_fc);;
				}), });;
				return _1ac74b21a_buildAsComptimeMethodData(&(_101817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Key", 3)) {
			_case_begin_1bc58e8de:;
			{
				jule::Ptr<_1ac717170_FnIns> _102517_method = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>([=](jule::Ptr<_1ac8260a3_Eval>* _102633_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _102648_fc, jule::Ptr<_1ac8243ae_Data>* ) mutable -> jule::Ptr<_1ac8243ae_Data> {
					return _1ac7412ed__Key(_self_, _102633_e, _102648_fc);;
				}), });;
				return _1ac74b21a_buildAsComptimeMethodData(&(_102517_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Value", 5)) {
			_case_begin_1bc58e9ee:;
			{
				jule::Ptr<_1ac717170_FnIns> _103217_method = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>([=](jule::Ptr<_1ac8260a3_Eval>* _103333_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _103348_fc, jule::Ptr<_1ac8243ae_Data>* ) mutable -> jule::Ptr<_1ac8243ae_Data> {
					return _1ac7416e9__Value(_self_, _103333_e, _103348_fc);;
				}), });;
				return _1ac74b21a_buildAsComptimeMethodData(&(_103217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1bc58ea65:;
			{
				jule::Ptr<_1ac717170_FnIns> _103917_method = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>([=](jule::Ptr<_1ac8260a3_Eval>* _104033_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _104048_fc, jule::Ptr<_1ac8243ae_Data>* ) mutable -> jule::Ptr<_1ac8243ae_Data> {
					return _1ac741ae5__Fields(_self_, _104033_e, _104048_fc);;
				}), });;
				return _1ac74b21a_buildAsComptimeMethodData(&(_103917_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1bc58eacb:;
			{
				jule::Ptr<_1ac717170_FnIns> _104617_method = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>([=](jule::Ptr<_1ac8260a3_Eval>* _104733_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _104748_fc, jule::Ptr<_1ac8243ae_Data>* ) mutable -> jule::Ptr<_1ac8243ae_Data> {
					return _1ac741ee1__Statics(_self_, _104733_e, _104748_fc);;
				}), });;
				return _1ac74b21a_buildAsComptimeMethodData(&(_104617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1bc58eb42:;
			{
				jule::Ptr<_1ac717170_FnIns> _105317_method = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>([=](jule::Ptr<_1ac8260a3_Eval>* _105433_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _105448_fc, jule::Ptr<_1ac8243ae_Data>* ) mutable -> jule::Ptr<_1ac8243ae_Data> {
					return _1ac744db2__Params(_self_, _105433_e, _105448_fc);;
				}), });;
				return _1ac74b21a_buildAsComptimeMethodData(&(_105317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Types", 5)) {
			_case_begin_1bc58eba8:;
			{
				jule::Ptr<_1ac717170_FnIns> _106017_method = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>([=](jule::Ptr<_1ac8260a3_Eval>* _106133_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _106148_fc, jule::Ptr<_1ac8243ae_Data>* ) mutable -> jule::Ptr<_1ac8243ae_Data> {
					return _1ac7438c7__Types(_self_, _106133_e, _106148_fc);;
				}), });;
				return _1ac74b21a_buildAsComptimeMethodData(&(_106017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1bc58ec1e:;
			{
				jule::Ptr<_1ac717170_FnIns> _106717_method = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>([=](jule::Ptr<_1ac8260a3_Eval>* _106833_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _106848_fc, jule::Ptr<_1ac8243ae_Data>* ) mutable -> jule::Ptr<_1ac8243ae_Data> {
					return _1ac7423dc__Public(_self_, _106833_e, _106848_fc);;
				}), });;
				return _1ac74b21a_buildAsComptimeMethodData(&(_106717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1bc58ec85:;
			{
				jule::Ptr<_1ac717170_FnIns> _107417_method = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>([=](jule::Ptr<_1ac8260a3_Eval>* _107533_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _107548_fc, jule::Ptr<_1ac8243ae_Data>* ) mutable -> jule::Ptr<_1ac8243ae_Data> {
					return _1ac7427d8__Binded(_self_, _107533_e, _107548_fc);;
				}), });;
				return _1ac74b21a_buildAsComptimeMethodData(&(_107417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Ordered", 7)) {
			_case_begin_1bc58ed0c:;
			{
				jule::Ptr<_1ac717170_FnIns> _108117_method = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>([=](jule::Ptr<_1ac8260a3_Eval>* _108233_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _108248_fc, jule::Ptr<_1ac8243ae_Data>* ) mutable -> jule::Ptr<_1ac8243ae_Data> {
					return _1ac742bd4__Ordered(_self_, _108233_e, _108248_fc);;
				}), });;
				return _1ac74b21a_buildAsComptimeMethodData(&(_108117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Comparable", 10)) {
			_case_begin_1bc58ed84:;
			{
				jule::Ptr<_1ac717170_FnIns> _108817_method = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>([=](jule::Ptr<_1ac8260a3_Eval>* _108933_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _108948_fc, jule::Ptr<_1ac8243ae_Data>* ) mutable -> jule::Ptr<_1ac8243ae_Data> {
					return _1ac7430d0__Comparable(_self_, _108933_e, _108948_fc);;
				}), });;
				return _1ac74b21a_buildAsComptimeMethodData(&(_108817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1bc58ee0b:;
			{
				jule::Ptr<_1ac717170_FnIns> _109517_method = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>([=](jule::Ptr<_1ac8260a3_Eval>* _109633_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _109648_fc, jule::Ptr<_1ac8243ae_Data>* ) mutable -> jule::Ptr<_1ac8243ae_Data> {
					return _1ac7434cb__Mutable(_self_, _109633_e, _109648_fc);;
				}), });;
				return _1ac74b21a_buildAsComptimeMethodData(&(_109517_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Exceptional", 11)) {
			_case_begin_1bc58ee83:;
			{
				jule::Ptr<_1ac717170_FnIns> _110217_method = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>([=](jule::Ptr<_1ac8260a3_Eval>* _110333_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _110348_fc, jule::Ptr<_1ac8243ae_Data>* ) mutable -> jule::Ptr<_1ac8243ae_Data> {
					return _1ac743cc3__Exceptional(_self_, _110333_e, _110348_fc);;
				}), });;
				return _1ac74b21a_buildAsComptimeMethodData(&(_110217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("CanNil", 6)) {
			_case_begin_1bc59000a:;
			{
				jule::Ptr<_1ac717170_FnIns> _110917_method = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>([=](jule::Ptr<_1ac8260a3_Eval>* _111033_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _111048_fc, jule::Ptr<_1ac8243ae_Data>* ) mutable -> jule::Ptr<_1ac8243ae_Data> {
					return _1ac7441be__CanNil(_self_, _111033_e, _111048_fc);;
				}), });;
				return _1ac74b21a_buildAsComptimeMethodData(&(_110917_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("RC", 2)) {
			_case_begin_1bc590082:;
			{
				jule::Ptr<_1ac717170_FnIns> _111617_method = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>([=](jule::Ptr<_1ac8260a3_Eval>* _111733_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _111748_fc, jule::Ptr<_1ac8243ae_Data>* ) mutable -> jule::Ptr<_1ac8243ae_Data> {
					return _1ac7445ba__RC(_self_, _111733_e, _111748_fc);;
				}), });;
				return _1ac74b21a_buildAsComptimeMethodData(&(_111617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Result", 6)) {
			_case_begin_1bc590109:;
			{
				jule::Ptr<_1ac717170_FnIns> _112317_method = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>([=](jule::Ptr<_1ac8260a3_Eval>* _112433_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _112448_fc, jule::Ptr<_1ac8243ae_Data>* ) mutable -> jule::Ptr<_1ac8243ae_Data> {
					return _1ac7449b6__Result(_self_, _112433_e, _112448_fc);;
				}), });;
				return _1ac74b21a_buildAsComptimeMethodData(&(_112317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Kind", 4)) {
			_case_begin_1bc590181:;
			{
				jule::Ptr<_1ac717170_FnIns> _113017_method = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>([=](jule::Ptr<_1ac8260a3_Eval>* _113133_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _113148_fc, jule::Ptr<_1ac8243ae_Data>* ) mutable -> jule::Ptr<_1ac8243ae_Data> {
					return _1ac74020e__Kind(_self_, _113133_e, _113148_fc);;
				}), });;
				return _1ac74b21a_buildAsComptimeMethodData(&(_113017_method));;
			}
		}
		else {
			_case_begin_1bc58e35b:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc58e070:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ac73deee_comptimeTypeInfo _Src) {
	_Stream << _1ac73e373_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ac745885_Str(_1ac745511_comptimeValue* _self_) {
	return jule::Str::lit("comptimeValue", 13);;
}



inline jule::Bool _1ac745bc6_Equal(jule::Ptr<_1ac745511_comptimeValue> _self_, jule::Ptr<_1ac859a32_TypeKind> _114921_other) {
	return false;;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac746226__Unwrap(jule::Ptr<_1ac745511_comptimeValue> _self_, jule::Ptr<_1ac8260a3_Eval>* _115332_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _115347_fc) {
	if (((*((*(_115347_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_115332_e)).ptr(), (*((*((*(_115347_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Unwrap", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_self_))._field_data;;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac746622__Type(jule::Ptr<_1ac745511_comptimeValue> _self_, jule::Ptr<_1ac8260a3_Eval>* _116130_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _116145_fc) {
	if (((*((*(_116145_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_116130_e)).ptr(), (*((*((*(_116145_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1ac74b89c_buildComptimeTypeInfoData(&((*((*(_116130_e))))._field_s), &((*((*(_self_))._field_data))._field_Kind));;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac746a1d__Lvalue(jule::Ptr<_1ac745511_comptimeValue> _self_, jule::Ptr<_1ac8260a3_Eval>* _116932_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _116947_fc) {
	if (((*((*(_116947_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_116932_e)).ptr(), (*((*((*(_116947_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Lvalue", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a6cde8d5_Const> _117413_constant = static__1a6ce03a8_NewBool((*((*(_self_))._field_data))._field_Lvalue);;
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c63c_primBool, ._field_Model=jule::Any(_117413_constant, &__jule_any_type19), ._field_Constant=_117413_constant});;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac746e19__Mutable(jule::Ptr<_1ac745511_comptimeValue> _self_, jule::Ptr<_1ac8260a3_Eval>* _118233_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _118248_fc) {
	if (((*((*(_118248_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_118233_e)).ptr(), (*((*((*(_118248_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a6cde8d5_Const> _118713_constant = static__1a6ce03a8_NewBool((*((*(_self_))._field_data))._field_Mutable);;
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c63c_primBool, ._field_Model=jule::Any(_118713_constant, &__jule_any_type19), ._field_Constant=_118713_constant});;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac747315__Const(jule::Ptr<_1ac745511_comptimeValue> _self_, jule::Ptr<_1ac8260a3_Eval>* _119531_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _119546_fc) {
	if (((*((*(_119546_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_119531_e)).ptr(), (*((*((*(_119546_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Const", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a6cde8d5_Const> _120013_constant = static__1a6ce03a8_NewBool(_1ac824c83_IsConst((*(_self_))._field_data.ptr()));;
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c63c_primBool, ._field_Model=jule::Any(_120013_constant, &__jule_any_type19), ._field_Constant=_120013_constant});;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac747711__Field(jule::Ptr<_1ac745511_comptimeValue> _self_, jule::Ptr<_1ac8260a3_Eval>* _120831_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _120846_fc) {
	if (((*((*(_120846_fc))))._field_Args.len() > 1LL)) {
		_1ac826603_pushErr((*(_120831_e)).ptr(), (*((*((*(_120846_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ac702105_StructIns> _121313_s = _1ac85d706_Struct((*((*(_self_))._field_data))._field_Kind.ptr());;
	if ((_121313_s == nullptr)) {
		_1ac826603_pushErr((*(_120831_e)).ptr(), (*((*(_120846_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*((*(_self_))._field_data))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ac6cc9b5_Expr> _121813_arg = (*((*(_120846_fc))))._field_Args[0LL];;
	jule::Ptr<_1ac8243ae_Data> _121913_d = _1ac844313_evalExpr((*(_120831_e)), _121813_arg);;
	if ((_121913_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ac824c83_IsConst(_121913_d.ptr())))) {
		_1ac826603_pushErr((*(_120831_e)).ptr(), (*(_121813_arg))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac86260b_Prim> _12279_prim = _1ac85c183_Prim((*(_121913_d))._field_Kind.ptr());;
	if (((_12279_prim == nullptr) || (!(_1ac865a93_IsStr(_12279_prim.ptr()))))) {
		_1ac826603_pushErr((*(_120831_e)).ptr(), (*(_121813_arg))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1ac859dea_Str((*(_121913_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Str _12329_ident = _1a6ce1a5d_ReadStr((*(_121913_d))._field_Constant.ptr());;
	jule::Ptr<_1ac701555_FieldIns> _123313_f = _1ac7034ad_FindField(_121313_s.ptr(), _12329_ident);;
	if ((_123313_f == nullptr)) {
		_1ac826603_pushErr((*(_120831_e)).ptr(), (*(_121813_arg))._field_Token, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_121313_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any(_12329_ident, &__jule_any_type4)}));
		return nullptr;;
	};
	_121913_d=jule::new_ptr<_1ac8243ae_Data>((*((*(_self_))._field_data)));
	_121913_d=_1ac83c619_evalStructSubIdentField((*(_120831_e)).ptr(), &(_121913_d), &(_121313_s), &((*(_121813_arg))._field_Token), &(_123313_f));
	return _1ac74bacd_buildComptimeValue(&(_121913_d));;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac747a52_subIdent(jule::Ptr<_1ac745511_comptimeValue> _self_, jule::Str* _124329_ident) {
	{
		auto &_match_expr{ (*(_124329_ident)) };
		
		if (_match_expr == jule::Str::lit("Unwrap", 6)) {
			_case_begin_1bc5d654b:;
			{
				jule::Ptr<_1ac717170_FnIns> _124617_method = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>([=](jule::Ptr<_1ac8260a3_Eval>* _124733_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _124748_fc, jule::Ptr<_1ac8243ae_Data>* ) mutable -> jule::Ptr<_1ac8243ae_Data> {
					return _1ac746226__Unwrap(_self_, _124733_e, _124748_fc);;
				}), });;
				return _1ac74b21a_buildAsComptimeMethodData(&(_124617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1bc5d65c3:;
			{
				jule::Ptr<_1ac717170_FnIns> _125317_method = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>([=](jule::Ptr<_1ac8260a3_Eval>* _125433_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _125448_fc, jule::Ptr<_1ac8243ae_Data>* ) mutable -> jule::Ptr<_1ac8243ae_Data> {
					return _1ac746622__Type(_self_, _125433_e, _125448_fc);;
				}), });;
				return _1ac74b21a_buildAsComptimeMethodData(&(_125317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Lvalue", 6)) {
			_case_begin_1bc5d664a:;
			{
				jule::Ptr<_1ac717170_FnIns> _126017_method = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>([=](jule::Ptr<_1ac8260a3_Eval>* _126133_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _126148_fc, jule::Ptr<_1ac8243ae_Data>* ) mutable -> jule::Ptr<_1ac8243ae_Data> {
					return _1ac746a1d__Lvalue(_self_, _126133_e, _126148_fc);;
				}), });;
				return _1ac74b21a_buildAsComptimeMethodData(&(_126017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1bc5d66c2:;
			{
				jule::Ptr<_1ac717170_FnIns> _126717_method = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>([=](jule::Ptr<_1ac8260a3_Eval>* _126833_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _126848_fc, jule::Ptr<_1ac8243ae_Data>* ) mutable -> jule::Ptr<_1ac8243ae_Data> {
					return _1ac746e19__Mutable(_self_, _126833_e, _126848_fc);;
				}), });;
				return _1ac74b21a_buildAsComptimeMethodData(&(_126717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Const", 5)) {
			_case_begin_1bc5d6925:;
			{
				jule::Ptr<_1ac717170_FnIns> _127417_method = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>([=](jule::Ptr<_1ac8260a3_Eval>* _127533_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _127548_fc, jule::Ptr<_1ac8243ae_Data>* ) mutable -> jule::Ptr<_1ac8243ae_Data> {
					return _1ac747315__Const(_self_, _127533_e, _127548_fc);;
				}), });;
				return _1ac74b21a_buildAsComptimeMethodData(&(_127417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Field", 5)) {
			_case_begin_1bc5d699c:;
			{
				jule::Ptr<_1ac717170_FnIns> _128117_method = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>([=](jule::Ptr<_1ac8260a3_Eval>* _128233_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _128248_fc, jule::Ptr<_1ac8243ae_Data>* ) mutable -> jule::Ptr<_1ac8243ae_Data> {
					return _1ac747711__Field(_self_, _128233_e, _128248_fc);;
				}), });;
				return _1ac74b21a_buildAsComptimeMethodData(&(_128117_method));;
			}
		}
		else {
			_case_begin_1bc5d64c4:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc5d63b4:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ac745511_comptimeValue _Src) {
	_Stream << _1ac745885_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ac7481d4_Str(_1ac747d60_comptimeFiles* _self_) {
	return jule::Str::lit("comptimeFiles", 13);;
}



inline jule::Bool _1ac748525_Equal(jule::Ptr<_1ac747d60_comptimeFiles> _self_, jule::Ptr<_1ac859a32_TypeKind> _130021_other) {
	return false;;
}



inline void _1ac748998_ready(_1ac747d60_comptimeFiles* _self_, jule::Ptr<_1ac7bb015_Var>* _130429_keyA, jule::Ptr<_1ac7bb015_Var>* _130446_keyB) {
	if (((*(_130429_keyA)) != nullptr)) {
		(*((*(_130429_keyA))))._field_Constant=true;
		(*((*(_130429_keyA))))._field_Value=jule::new_ptr<_1ac825503_Value>(_1ac825503_Value{._field_Data=jule::new_ptr<_1ac8243ae_Data>()});
		(*((*(_130429_keyA))))._field_Kind=(*(_1ac9404b9_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_130446_keyB)) != nullptr)) {
		(*((*(_130446_keyB))))._field_Constant=true;
		(*((*(_130446_keyB))))._field_Value=jule::new_ptr<_1ac825503_Value>(_1ac825503_Value{._field_Data=jule::new_ptr<_1ac8243ae_Data>()});
		(*((*(_130446_keyB))))._field_Kind=jule::new_ptr<_1ac861c04_TypeSymbol>(_1ac861c04_TypeSymbol{._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(jule::new_ptr<_1ac74945a_comptimeFile>(), 18)})});
	};
}



inline void _1ac748db6_step(_1ac747d60_comptimeFiles* _self_, jule::I64 _132523_i, jule::Ptr<_1ac7bb015_Var>* _132536_keyA, jule::Ptr<_1ac7bb015_Var>* _132553_keyB) {
	if (((*(_132536_keyA)) != nullptr)) {
		(*((*((*((*(_132536_keyA))))._field_Value))._field_Data))._field_Constant=static__1a6cded25_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_132523_i)));
		(*((*((*((*(_132536_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_132536_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_132553_keyB)) != nullptr)) {
		(*((*((*((*((*(_132553_keyB))))._field_Kind))._field_Kind))._field_Kind.cast_ptr<_1ac74945a_comptimeFile>(18)))._field_file=(*(_self_))._field_files[_132523_i];
	};
}



inline jule::I64 _1ac74914c_len(_1ac747d60_comptimeFiles* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_files.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac747d60_comptimeFiles _Src) {
	_Stream << _1ac7481d4_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ac749900_Str(_1ac74945a_comptimeFile* _self_) {
	return jule::Str::lit("comptimeFile", 12);;
}



inline jule::Bool _1ac749c41_Equal(jule::Ptr<_1ac74945a_comptimeFile> _self_, jule::Ptr<_1ac859a32_TypeKind> _134921_other) {
	return false;;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac74a25d__Path(jule::Ptr<_1ac74945a_comptimeFile> _self_, jule::Ptr<_1ac8260a3_Eval>* _135330_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _135345_fc) {
	if (((*((*(_135345_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_135330_e)).ptr(), (*((*((*(_135345_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Path", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a6cde8d5_Const> _135813_constant = static__1a6ce0672_NewStr((*((*((*(_self_))._field_file))._field_File))._field_Path);;
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c373_primStr, ._field_Model=jule::Any(_135813_constant, &__jule_any_type19), ._field_Constant=_135813_constant});;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac74a659__Name(jule::Ptr<_1ac74945a_comptimeFile> _self_, jule::Ptr<_1ac8260a3_Eval>* _136630_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _136645_fc) {
	if (((*((*(_136645_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_136630_e)).ptr(), (*((*((*(_136645_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a6cde8d5_Const> _137113_constant = static__1a6ce0672_NewStr(_1ac6b9133_Name((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c373_primStr, ._field_Model=jule::Any(_137113_constant, &__jule_any_type19), ._field_Constant=_137113_constant});;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac74aa55__Dir(jule::Ptr<_1ac74945a_comptimeFile> _self_, jule::Ptr<_1ac8260a3_Eval>* _137929_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _137944_fc) {
	if (((*((*(_137944_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_137929_e)).ptr(), (*((*((*(_137944_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Dir", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a6cde8d5_Const> _138413_constant = static__1a6ce0672_NewStr(_1ac6b8d9c_Dir((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c373_primStr, ._field_Model=jule::Any(_138413_constant, &__jule_any_type19), ._field_Constant=_138413_constant});;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac74ad96_subIdent(jule::Ptr<_1ac74945a_comptimeFile> _self_, jule::Str* _139229_ident) {
	{
		auto &_match_expr{ (*(_139229_ident)) };
		
		if (_match_expr == jule::Str::lit("Path", 4)) {
			_case_begin_1bc603a52:;
			{
				jule::Ptr<_1ac717170_FnIns> _139517_method = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>([=](jule::Ptr<_1ac8260a3_Eval>* _139633_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _139648_fc, jule::Ptr<_1ac8243ae_Data>* ) mutable -> jule::Ptr<_1ac8243ae_Data> {
					return _1ac74a25d__Path(_self_, _139633_e, _139648_fc);;
				}), });;
				return _1ac74b21a_buildAsComptimeMethodData(&(_139517_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1bc603ab8:;
			{
				jule::Ptr<_1ac717170_FnIns> _140217_method = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>([=](jule::Ptr<_1ac8260a3_Eval>* _140333_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _140348_fc, jule::Ptr<_1ac8243ae_Data>* ) mutable -> jule::Ptr<_1ac8243ae_Data> {
					return _1ac74a659__Name(_self_, _140333_e, _140348_fc);;
				}), });;
				return _1ac74b21a_buildAsComptimeMethodData(&(_140217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Dir", 3)) {
			_case_begin_1bc603b2e:;
			{
				jule::Ptr<_1ac717170_FnIns> _140917_method = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>([=](jule::Ptr<_1ac8260a3_Eval>* _141033_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _141048_fc, jule::Ptr<_1ac8243ae_Data>* ) mutable -> jule::Ptr<_1ac8243ae_Data> {
					return _1ac74aa55__Dir(_self_, _141033_e, _141048_fc);;
				}), });;
				return _1ac74b21a_buildAsComptimeMethodData(&(_140917_method));;
			}
		}
		else {
			_case_begin_1bc6039db:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc603216:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ac74945a_comptimeFile _Src) {
	_Stream << _1ac749900_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_1ac797c7d_Sema>*,jule::Slice<jule::Ptr<_1ac858c40_TypeAlias>>*)> _1ac74dc67_readyFn(jule::Ptr<_1ac74d86b_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_1ac797c7d_Sema>*,jule::Slice<jule::Ptr<_1ac858c40_TypeAlias>>*)>([=](jule::Ptr<_1ac797c7d_Sema>* _6421_sema, jule::Slice<jule::Ptr<_1ac858c40_TypeAlias>>* _6439_generics) mutable -> jule::Bool {
		{
			auto expr = &((*(_self_))._field_genericsD);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bc615822:;
			if (it != expr_end) {
				jule::I64 _6518_i = it - expr->begin();
				jule::Ptr<_1ac6d588b_GenericDecl> _6525_g = *it;
				{
					jule::Ptr<_1ac85814b_InsGeneric> _6621_generic = (*(_self_))._field_generics[_6518_i];;
					if ((((*(_6525_g))._field_Constraint == nullptr) || ((*((*(_6525_g))._field_Constraint))._field_Mask.len() == 0LL))) {
						goto _iter_next_1bc615822;
					};
					(*(_6621_generic))._field_Constraint=jule::Slice<jule::Ptr<_1ac859a32_TypeKind>>::alloc(0LL, (*((*(_6525_g))._field_Constraint))._field_Mask.len());
					{
						auto expr = &((*((*(_6525_g))._field_Constraint))._field_Mask);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bc6185b1:;
						if (it != expr_end) {
							jule::Ptr<_1ac6c8681_TypeDecl> _7129_mask = *it;
							{
								jule::I64 _7221_n = (*((*(_6421_sema))))._field_errors.len();;
								jule::Ptr<_1ac859a32_TypeKind> _7325_kind = _1ac7a0846_buildTypeWithRefers((*(_6421_sema)), &(_7129_mask), jule::Trait<_1ac879568_Lookup>((*(_6421_sema)), 3), (*(_6439_generics)), nullptr);;
								if ((_7325_kind == nullptr)) {
									{
										auto &_match_expr{ (*(_7129_mask))._field_Kind };
										
										if (_match_expr.type == &__jule_any_type20) {
											_case_begin_1bc61a360:;
											{
												jule::Ptr<_1ac6c8c8b_IdentTypeDecl> _7733_itd = (*(_7129_mask))._field_Kind.cast_ptr<_1ac6c8c8b_IdentTypeDecl>(&__jule_any_type20);;
												if ((((*(_7733_itd))._field_Generics.len() == 0LL) && _1ac7502eb_isBuiltinConstraint(&((*(_7733_itd))._field_Ident)))) {
													_7325_kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(_1ac876950_buildPrimType((*(_7733_itd))._field_Ident), 20)});
													(*((*(_6421_sema))))._field_errors=(*((*(_6421_sema))))._field_errors.slice(0LL, _7221_n);
													goto _julec_label_1bc61ce12;
												};
											}
										}
										_match_end_1bc61a2e9:;
									};
									return false;;
								};
								_julec_label_1bc61ce12:;
								{ jule::Slice<jule::Ptr<_1ac859a32_TypeKind>> &__jule_push_dest = (*(_6621_generic))._field_Constraint; __jule_push_dest.push(_7325_kind); };
							}
							_iter_next_1bc6185b1:;
							++it;
							goto _iter_begin_1bc6185b1;
						}
						_iter_end_1bc6185b1:;
					};
				}
				_iter_next_1bc615822:;
				++it;
				_6518_i++;
				goto _iter_begin_1bc615822;
			}
			_iter_end_1bc615822:;
		};
		return true;;
	});;
}



inline jule::Bool _1ac74deed_readyFi(jule::Ptr<_1ac74d86b_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*(_self_))._field_fi))._field_Decl))._field_Generics;
	(*(_self_))._field_generics=(*((*(_self_))._field_fi))._field_Generics;
	return ((!((*(_self_))._field_uniq)) || _1ac7a6253_fnEnvironment((*(_self_))._field_s, &((*(_self_))._field_fi), _1ac74dc67_readyFn(_self_)));;
}



inline jule::Bool _1ac74e284_readySi(jule::Ptr<_1ac74d86b_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*(_self_))._field_si))._field_Decl))._field_Generics;
	(*(_self_))._field_generics=(*((*(_self_))._field_si))._field_Generics;
	return ((!((*(_self_))._field_uniq)) || _1ac74dc67_readyFn(_self_)(&((*(_self_))._field_s), &((*(_self_))._field_genericsA)));;
}



inline jule::Bool _1ac74e51a_ready(jule::Ptr<_1ac74d86b_constraintChecker> _self_) {
	if (((*(_self_))._field_fi != nullptr)) {
		return _1ac74deed_readyFi(_self_);;
	};
	return _1ac74e284_readySi(_self_);;
}



inline jule::Bool _1ac74e7a1_check(jule::Ptr<_1ac74d86b_constraintChecker> _self_) {
	if ((!(_1ac74e51a_ready(_self_)))) {
		return false;;
	};
	_julec_label_1bc623cb4:;
	{
		auto expr = &((*(_self_))._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc6246bb:;
		if (it != expr_end) {
			jule::I64 _12014_i = it - expr->begin();
			jule::Ptr<_1ac85814b_InsGeneric> _12021_g = *it;
			{
				if (((*(_12021_g))._field_Constraint == nullptr)) {
					goto _iter_next_1bc6246bb;
				};
				{
					auto expr = &((*(_12021_g))._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc6258a9:;
					if (it != expr_end) {
						jule::Ptr<_1ac859a32_TypeKind> _12425_c2 = *it;
						{
							jule::Ptr<_1ac86260b_Prim> _12521_prim = _1ac85c183_Prim(_12425_c2.ptr());;
							if (((_12521_prim != nullptr) && _1ac863233_IsConstraint(_12521_prim.ptr()))) {
								if (_1ac750032_matchConstraint(&((*(_12521_prim))._field_Kind), &((*(_12021_g))._field_Kind))) {
									goto _iter_next_1bc6246bb;
								};
								goto _iter_next_1bc6258a9;
							};
							if (_1ac85a23b_Equal(_12425_c2, (*(_12021_g))._field_Kind)) {
								goto _iter_next_1bc6246bb;
							};
						}
						_iter_next_1bc6258a9:;
						++it;
						goto _iter_begin_1bc6258a9;
					}
					_iter_end_1bc6258a9:;
				};
				_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_et, jule::Str::lit("type @ is not matched with @'s constraint\n       constraint: @", 62), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_12021_g))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*(_self_))._field_genericsD[_12014_i]))._field_Ident, &__jule_any_type4),jule::Any(_1ac74eb69_toStrConstraints(_12021_g), &__jule_any_type4)}));
				return false;;
			}
			_iter_next_1bc6246bb:;
			++it;
			_12014_i++;
			goto _iter_begin_1bc6246bb;
		}
		_iter_end_1bc6246bb:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac74d86b_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac751088_IsTraitImpl(_1ac750bc0_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1ac75131e_IsStructImpl(_1ac750bc0_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac750bc0_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac756126_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac756544_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac756841_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac756c5e_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac75705b_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac757512_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac757e5d_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac7582e3_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac7586bc_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac7589b9_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac758d93_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac75926c_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac759723_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac759aec_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac75a25c_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac75ad95_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac75b48e_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac75b824_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac75be84_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac75c517_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "st:" << _Src._field_st << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac77790b_ImportInfo> _1ac75d8c0_SelectPackage(_1ac75d42a_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_1ac77790b_ImportInfo>)> _45832_selector) {
	return _1ac798223_SelectPackage((*(_self_))._field_s.ptr(), _45832_selector);;
}



inline jule::Ptr<_1ac7bb015_Var> _1ac75dcbb_FindVar(_1ac75d42a_scopeChecker* _self_, jule::Str _46926_ident, jule::Bool _46938_binded) {
	;
	jule::Ptr<_1ac7bb015_Var> _47213_v = _1ac8216ca_findVar((*(_self_))._field_table.ptr(), &(_46926_ident), _46938_binded, true);;
	if ((_47213_v != nullptr)) {
		return _47213_v;;
	};
	jule::Ptr<_1ac75d42a_scopeChecker> _47713_parent = (*(_self_))._field_parent;;
	while ((_47713_parent != nullptr)) {
		{
			_47213_v=_1ac8216ca_findVar((*(_47713_parent))._field_table.ptr(), &(_46926_ident), _46938_binded, true);
			if ((_47213_v != nullptr)) {
				return _47213_v;;
			};
			_47713_parent=(*(_47713_parent))._field_parent;
		}
	_iter_next_1bc662110:;
	}
	_iter_end_1bc662110:;;
	return _1ac79861e_FindVar((*(_self_))._field_s.ptr(), _46926_ident, _46938_binded);;
}



inline jule::Ptr<_1ac858c40_TypeAlias> _1ac75e1b7_FindTypeAlias(_1ac75d42a_scopeChecker* _self_, jule::Str _49632_ident, jule::Bool _49644_binded) {
	;
	jule::Ptr<_1ac858c40_TypeAlias> _49913_ta = _1ac821b81_findTypeAlias((*(_self_))._field_table.ptr(), &(_49632_ident), _49644_binded, true);;
	if ((_49913_ta != nullptr)) {
		return _49913_ta;;
	};
	jule::Ptr<_1ac75d42a_scopeChecker> _50413_parent = (*(_self_))._field_parent;;
	while ((_50413_parent != nullptr)) {
		{
			_49913_ta=_1ac821b81_findTypeAlias((*(_50413_parent))._field_table.ptr(), &(_49632_ident), _49644_binded, true);
			if ((_49913_ta != nullptr)) {
				return _49913_ta;;
			};
			_50413_parent=(*(_50413_parent))._field_parent;
		}
	_iter_next_1bc665124:;
	}
	_iter_end_1bc665124:;;
	return _1ac798a1a_FindTypeAlias((*(_self_))._field_s.ptr(), _49632_ident, _49644_binded);;
}



inline jule::Ptr<_1ac6ee377_Struct> _1ac75e5b3_FindStruct(_1ac75d42a_scopeChecker* _self_, jule::Str _52129_ident, jule::Bool _52141_binded) {
	return _1ac798e16_FindStruct((*(_self_))._field_s.ptr(), _52129_ident, _52141_binded);;
}



inline jule::Ptr<_1ac71426b_Fn> _1ac75e9ae_FindFn(_1ac75d42a_scopeChecker* _self_, jule::Str _53025_ident, jule::Bool _53037_binded) {
	return _1ac799312_FindFn((*(_self_))._field_s.ptr(), _53025_ident, _53037_binded);;
}



inline jule::Ptr<_1ac727548_Trait> _1ac75ed00_FindTrait(_1ac75d42a_scopeChecker* _self_, jule::Str _53928_ident) {
	return _1ac799653_FindTrait((*(_self_))._field_s.ptr(), _53928_ident);;
}



inline jule::Ptr<_1ac729c54_Enum> _1ac760141_FindEnum(_1ac75d42a_scopeChecker* _self_, jule::Str _54827_ident) {
	return _1ac799994_FindEnum((*(_self_))._field_s.ptr(), _54827_ident);;
}



inline jule::Ptr<_1ac72b45e_TypeEnum> _1ac760482_FindTypeEnum(_1ac75d42a_scopeChecker* _self_, jule::Str _55731_ident) {
	return _1ac799cd5_FindTypeEnum((*(_self_))._field_s.ptr(), _55731_ident);;
}



inline jule::Bool _1ac7607d4_isUnsafe(jule::Ptr<_1ac75d42a_scopeChecker> _self_) {
	jule::Ptr<_1ac75d42a_scopeChecker> _56513_scope = _self_;;
	_julec_label_1bc669c1c:;
	if ((*((*(_56513_scope))._field_scope))._field_Unsafety) {
		return true;;
	};
	if (((*(_56513_scope))._field_parent != nullptr)) {
		_56513_scope=(*(_56513_scope))._field_parent;
		goto _julec_label_1bc669c1c;
	};
	return false;;
}



inline jule::Bool _1ac760a6a_isRoot(_1ac75d42a_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1ac760c68_stop(_1ac75d42a_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1ac760eee_stopped(_1ac75d42a_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1ac761285_isDeferred(jule::Ptr<_1ac75d42a_scopeChecker> _self_) {
	jule::Ptr<_1ac75d42a_scopeChecker> _59813_scope = _self_;;
	_julec_label_1bc66d094:;
	if ((*((*(_59813_scope))._field_scope))._field_Deferred) {
		return true;;
	};
	if (((*(_59813_scope))._field_parent != nullptr)) {
		_59813_scope=(*(_59813_scope))._field_parent;
		goto _julec_label_1bc66d094;
	};
	return false;;
}



inline jule::Ptr<_1ac75d42a_scopeChecker> _1ac76151b_getRoot(jule::Ptr<_1ac75d42a_scopeChecker> _self_) {
	jule::Ptr<_1ac75d42a_scopeChecker> _61613_root = _self_;;
	while ((((*(_61613_root))._field_parent != nullptr) && ((*(_61613_root))._field_owner == nullptr))) {
		{
			_61613_root=(*(_61613_root))._field_parent;
		}
	_iter_next_1bc670030:;
	}
	_iter_end_1bc670030:;;
	return _61613_root;;
}



inline jule::Ptr<_1ac75d42a_scopeChecker> _1ac7617a2_getHardRoot(jule::Ptr<_1ac75d42a_scopeChecker> _self_) {
	jule::Ptr<_1ac75d42a_scopeChecker> _62613_root = _self_;;
	while (((*(_62613_root))._field_parent != nullptr)) {
		{
			_62613_root=(*(_62613_root))._field_parent;
		}
	_iter_next_1bc671383:;
	}
	_iter_end_1bc671383:;;
	return _62613_root;;
}



inline jule::Ptr<_1ac7589b9_Label> _1ac761ae3_findLabel(_1ac75d42a_scopeChecker* _self_, jule::Str* _63629_ident) {
	{
		auto expr = &((*((*(_self_))._field_scope))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc672560:;
		if (it != expr_end) {
			jule::Any _63721_st = *it;
			{
				{
					auto &_match_expr{ _63721_st };
					
					if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1bc672d68:;
						{
							jule::Ptr<_1ac7589b9_Label> _64021_label = _63721_st.cast_ptr<_1ac7589b9_Label>(&__jule_any_type21);;
							if (((*(_64021_label))._field_Ident == (*(_63629_ident)))) {
								return _64021_label;;
							};
						}
					}
					_match_end_1bc672d13:;
				};
			}
			_iter_next_1bc672560:;
			++it;
			goto _iter_begin_1bc672560;
		}
		_iter_end_1bc672560:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac75be84_scopeLabel> _1ac761e34_findLabelScope(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Str* _65235_ident) {
	jule::Ptr<_1ac75be84_scopeLabel> _65313_label = _1ac762275_findLabelAll(_self_.ptr(), _65235_ident);;
	if (((_65313_label != nullptr) && ((*(_65313_label))._field_scope == _self_))) {
		return _65313_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac75be84_scopeLabel> _1ac762275_findLabelAll(_1ac75d42a_scopeChecker* _self_, jule::Str* _66432_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc675420:;
		if (it != expr_end) {
			jule::Ptr<_1ac75be84_scopeLabel> _66521_lbl = *it;
			{
				if (((*((*(_66521_lbl))._field_label))._field_Ident == (*(_66432_ident)))) {
					return _66521_lbl;;
				};
			}
			_iter_next_1bc675420:;
			++it;
			goto _iter_begin_1bc675420;
		}
		_iter_end_1bc675420:;
	};
	return nullptr;;
}



inline jule::Bool _1ac762671_isDuplicatedIdent(_1ac75d42a_scopeChecker* _self_, jule::Uintptr _67636_itself, jule::Str* _67654_ident) {
	jule::Ptr<_1ac7bb015_Var> _6779_v = _1ac75dcbb_FindVar(_self_, (*(_67654_ident)), false);;
	if (((_6779_v != nullptr) && (static_cast<jule::Uintptr>(_6779_v) != _67636_itself))) {
		if (((*(_6779_v))._field_Scope == nullptr)) {
			return false;;
		};
		return (((*(_6779_v))._field_Scope == (*(_self_))._field_scope) || (!(_1ac79a1e2_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	jule::Ptr<_1ac858c40_TypeAlias> _6859_ta = _1ac75e1b7_FindTypeAlias(_self_, (*(_67654_ident)), false);;
	if (((_6859_ta != nullptr) && (static_cast<jule::Uintptr>(_6859_ta) != _67636_itself))) {
		if (((*(_6859_ta))._field_Scope == nullptr)) {
			return false;;
		};
		return (((*(_6859_ta))._field_Scope == (*(_self_))._field_tree) || (!(_1ac79a1e2_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	return false;;
}



inline void _1ac762929_checkVarDecl(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac6db4eb_VarDecl> _69636_decl) {
	jule::Ptr<_1ac7bb015_Var> _69713_v = _1ac7207c7_buildVar(_69636_decl);;
	(*(_69713_v))._field_Scope=(*(_self_))._field_scope;
	__JULE_DEFER({
		{ jule::Slice<jule::Ptr<_1ac7bb015_Var>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Vars; __jule_push_dest.push(_69713_v); };
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_69713_v, &__jule_any_type8)); };
	});;
	if (_1ac762671_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_69713_v)), &((*(_69713_v))._field_Ident))) {
		_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_69713_v))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_69713_v))._field_Ident, &__jule_any_type4)}));
		_1ac79ac2b_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1ac760c68_stop(_self_.ptr());
		return;;
	};
	_1ac7ade3c_checkVarDecl((*(_self_))._field_s, &(_69713_v), jule::Trait<_1ac879568_Lookup>(_self_, 0));
	if (((!(_1ac7bb631_IsTypeInferred(_69713_v.ptr()))) && (((*(_69713_v))._field_Kind == nullptr) || ((*((*(_69713_v))._field_Kind))._field_Kind == nullptr)))) {
		return;;
	};
	_1ac7b26d2_evalVarValue((*(_self_))._field_s, &(_69713_v), jule::Trait<_1ac879568_Lookup>(_self_, 0));
	if (((!(_1ac7bb39a_IsInitialized(_69713_v.ptr()))) || ((*((*(_69713_v))._field_Value))._field_Data == nullptr))) {
		return;;
	};
	_1ac768b94_removeInteriorMutRisk(_self_, &((*((*(_69713_v))._field_Value))._field_Data));
	_1ac7b236e_checkVarValue((*(_self_))._field_s, &(_69713_v));
}



inline void _1ac762bd2_checkTypeAlias(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac858c40_TypeAlias>* _72739_ta) {
	if (_1ac762671_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_72739_ta)))), &((*((*(_72739_ta))))._field_Ident))) {
		_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*(_72739_ta))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_72739_ta))))._field_Ident, &__jule_any_type4)}));
		_1ac79ac2b_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1ac760c68_stop(_self_.ptr());
		return;;
	};
	_1ac7a7ebe_checkTypeAliasDecl((*(_self_))._field_s, _72739_ta, jule::Trait<_1ac879568_Lookup>(_self_, 0));
	{ jule::Slice<jule::Ptr<_1ac858c40_TypeAlias>> &__jule_push_dest = (*((*(_self_))._field_table))._field_TypeAliases; __jule_push_dest.push((*(_72739_ta))); };
	if (((*((*((*(_72739_ta))))._field_Kind))._field_Kind == nullptr)) {
		_1ac760c68_stop(_self_.ptr());
	};
}



inline void _1ac762e8a_checkTypeAliasDecl(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac6e019d_TypeAliasDecl> _74342_decl) {
	jule::Ptr<_1ac858c40_TypeAlias> _74413_ta = _1ac71c296_buildTypeAlias(_74342_decl);;
	_1ac762bd2_checkTypeAlias(_self_, &(_74413_ta));
}



inline jule::Ptr<_1ac756126_Scope> _1ac763221_getChild(_1ac75d42a_scopeChecker* _self_) {
	return jule::new_ptr<_1ac756126_Scope>(_1ac756126_Scope{._field_Parent=(*(_self_))._field_scope, });;
}



inline void _1ac76363e_checkChildSsc(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac6d86a2_ScopeTree>* _75438_tree, jule::Ptr<_1ac756126_Scope>* _75461_s, jule::Ptr<_1ac75d42a_scopeChecker>* _75477_ssc) {
	(*((*(_75477_ssc))))._field_parent=_self_;
	_1ac76eb34_check((*(_75477_ssc)), _75438_tree, _75461_s);
}



inline jule::Ptr<_1ac756126_Scope> _1ac763a3a_checkChildSc(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac6d86a2_ScopeTree>* _75937_tree, jule::Ptr<_1ac75d42a_scopeChecker>* _75960_ssc) {
	jule::Ptr<_1ac756126_Scope> _76013_s = _1ac763221_getChild(_self_.ptr());;
	_1ac76363e_checkChildSsc(_self_, _75937_tree, &(_76013_s), _75960_ssc);
	return _76013_s;;
}



inline jule::Ptr<_1ac756126_Scope> _1ac763d7b_checkChild(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac6d86a2_ScopeTree>* _76535_tree) {
	jule::Ptr<_1ac75d42a_scopeChecker> _76613_ssc = _1ac76edba_newChildChecker(_self_);;
	return _1ac763a3a_checkChildSc(_self_, _76535_tree, &(_76613_ssc));;
}



inline void _1ac764134_checkAnonScope(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac6d86a2_ScopeTree> _77038_tree) {
	jule::Ptr<_1ac756126_Scope> _77113_s = _1ac763d7b_checkChild(_self_, &(_77038_tree));;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_77113_s, &__jule_any_type22)); };
}



inline void _1ac764497_processErrorCall(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac70ed16_BuiltinErrorCallExprModel>* _77541_m, jule::Ptr<_1ac6b2e62_Token> _77572_err) {
	if (_1ac761285_isDeferred(_self_)) {
		_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), _77572_err, jule::Str::lit("deferred scopes are not supports error calls", 44), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ac75d42a_scopeChecker> _78013_root = _1ac76151b_getRoot(_self_);;
	if ((!((*((*((*(_78013_root))._field_owner))._field_Decl))._field_Exceptional))) {
		_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), _77572_err, jule::Str::lit("error call can only useable for exceptional functions", 53), jule::Slice<jule::Any>());
		_1ac79ac2b_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("you can declare an exceptional function with \"!\" operator", 57), jule::Slice<jule::Any>());
	};
	(*((*(_77541_m))))._field_Func=(*(_78013_root))._field_owner;
}



inline void _1ac764750_checkExpr(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac6cc9b5_Expr> _78833_expr) {
	jule::Ptr<_1ac8260a3_Eval> _78913_eval = _1ac7a2d65_eval((*(_self_))._field_s, jule::Trait<_1ac879568_Lookup>(_self_, 0));;
	(*(_78913_eval))._field_ignored=true;
	jule::Ptr<_1ac8243ae_Data> _79113_d = _1ac844313_evalExpr(_78913_eval, _78833_expr);;
	if (((_79113_d == nullptr) || ((*(_79113_d))._field_Model == nullptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_79113_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1bc6928c1:;
			{
				jule::Ptr<_1ac70ed16_BuiltinErrorCallExprModel> _80017_m = (*(_79113_d))._field_Model.cast_ptr<_1ac70ed16_BuiltinErrorCallExprModel>(&__jule_any_type23);;
				_1ac764497_processErrorCall(_self_, &(_80017_m), (*(_78833_expr))._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_79113_d, &__jule_any_type24)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33 || _match_expr.type == &__jule_any_type34) {
			_case_begin_1bc693064:;
			{
				{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_79113_d, &__jule_any_type24)); };
			}
		}
		else {
			_case_begin_1bc692eed:;
			{
				_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_78833_expr))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bc692e98:;
	};
}



inline jule::Ptr<_1ac756544_If> _1ac764a91_checkIf(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac6de0d1_If> _81931_i) {
	jule::Ptr<_1ac756126_Scope> _82013_s = _1ac763d7b_checkChild(_self_, &((*(_81931_i))._field_Scope));;
	jule::Ptr<_1ac8243ae_Data> _82213_d = _1ac844313_evalExpr(_1ac7a2d65_eval((*(_self_))._field_s, jule::Trait<_1ac879568_Lookup>(_self_, 0)), (*(_81931_i))._field_Expr);;
	if ((_82213_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ac86260b_Prim> _82713_prim = _1ac85c183_Prim((*(_82213_d))._field_Kind.ptr());;
	if (((_82713_prim == nullptr) || (!(_1ac86580c_IsBool(_82713_prim.ptr()))))) {
		_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*(_81931_i))._field_Expr))._field_Token, jule::Str::lit("if conditions must be have boolean expression", 45), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ac756544_If>(_1ac756544_If{._field_Expr=(*(_82213_d))._field_Model, ._field_Scope=_82013_s});;
}



inline jule::Ptr<_1ac756841_Else> _1ac764dd2_checkElse(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac6de4aa_Else> _83933_e) {
	return jule::new_ptr<_1ac756841_Else>(_1ac756841_Else{._field_Scope=_1ac763d7b_checkChild(_self_, &((*(_83933_e))._field_Scope))});;
}



inline void _1ac76518a_checkConditional(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac6de961_Conditional> _84540_conditional) {
	jule::Ptr<_1ac756c5e_Conditional> _84613_c = jule::new_ptr<_1ac756c5e_Conditional>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_84613_c, &__jule_any_type35)); };
	(*(_84613_c))._field_Elifs=jule::Slice<jule::Ptr<_1ac756544_If>>::alloc(0LL, ((*(_84540_conditional))._field_Tail.len() + 1LL));
	{ jule::Slice<jule::Ptr<_1ac756544_If>> &__jule_push_dest = (*(_84613_c))._field_Elifs; __jule_push_dest.push(_1ac764a91_checkIf(_self_, (*(_84540_conditional))._field_Head)); };
	{
		auto expr = &((*(_84540_conditional))._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc69e405:;
		if (it != expr_end) {
			jule::Ptr<_1ac6de0d1_If> _85221_elif = *it;
			{
				{ jule::Slice<jule::Ptr<_1ac756544_If>> &__jule_push_dest = (*(_84613_c))._field_Elifs; __jule_push_dest.push(_1ac764a91_checkIf(_self_, _85221_elif)); };
			}
			_iter_next_1bc69e405:;
			++it;
			goto _iter_begin_1bc69e405;
		}
		_iter_end_1bc69e405:;
	};
	if (((*(_84540_conditional))._field_Default != nullptr)) {
		(*(_84613_c))._field_Default=_1ac764dd2_checkElse(_self_, (*(_84540_conditional))._field_Default);
	};
}



inline void _1ac765663_checkIterScopeSsc(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Uintptr _86137_it, jule::Ptr<_1ac6d86a2_ScopeTree> _86154_tree, jule::Ptr<_1ac756126_Scope>* _86177_s, jule::Ptr<_1ac75d42a_scopeChecker> _86192_ssc) {
	(*(_86192_ssc))._field_it=_86137_it;
	_1ac76363e_checkChildSsc(_self_, &(_86154_tree), _86177_s, &(_86192_ssc));
}



inline jule::Ptr<_1ac756126_Scope> _1ac765b19_checkIterScopeSc(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Uintptr _86636_it, jule::Ptr<_1ac6d86a2_ScopeTree> _86653_tree, jule::Ptr<_1ac75d42a_scopeChecker> _86675_ssc) {
	jule::Ptr<_1ac756126_Scope> _86713_scope = _1ac763221_getChild(_self_.ptr());;
	_1ac765663_checkIterScopeSsc(_self_, _86636_it, _86653_tree, &(_86713_scope), _86675_ssc);
	return _86713_scope;;
}



inline jule::Ptr<_1ac756126_Scope> _1ac766015_checkIterScope(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Uintptr _87234_it, jule::Ptr<_1ac6d86a2_ScopeTree>* _87252_tree) {
	jule::Ptr<_1ac75d42a_scopeChecker> _87313_ssc = _1ac76edba_newChildChecker(_self_);;
	return _1ac765b19_checkIterScopeSc(_self_, _87234_it, (*(_87252_tree)), _87313_ssc);;
}



inline void _1ac7662bd_checkInfIter(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac6dc145_Iter>* _87737_it) {
	jule::Ptr<_1ac75705b_InfIter> _87813_kind = jule::new_ptr<_1ac75705b_InfIter>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_87813_kind, &__jule_any_type36)); };
	(*(_87813_kind))._field_Scope=_1ac766015_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_87813_kind)), &((*((*(_87737_it))))._field_Scope));
}



inline void _1ac766576_checkWhileIter(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac6dc145_Iter>* _88339_it) {
	jule::Ptr<_1ac6dc970_WhileKind> _88413_wh = (*((*(_88339_it))))._field_Kind.cast_ptr<_1ac6dc970_WhileKind>(&__jule_any_type37);;
	if ((((*(_88413_wh))._field_Expr == nullptr) && ((*(_88413_wh))._field_Next == nullptr))) {
		_1ac7662bd_checkInfIter(_self_, _88339_it);
		return;;
	};
	jule::Ptr<_1ac757512_WhileIter> _89013_kind = jule::new_ptr<_1ac757512_WhileIter>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_89013_kind, &__jule_any_type38)); };
	(*(_89013_kind))._field_Scope=_1ac766015_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_89013_kind)), &((*((*(_88339_it))))._field_Scope));
	if (((*(_88413_wh))._field_Expr != nullptr)) {
		jule::Ptr<_1ac8243ae_Data> _89517_d = _1ac844313_evalExpr(_1ac7a2d65_eval((*(_self_))._field_s, jule::Trait<_1ac879568_Lookup>(_self_, 0)), (*(_88413_wh))._field_Expr);;
		if ((_89517_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1ac86260b_Prim> _90013_prim = _1ac85c183_Prim((*(_89517_d))._field_Kind.ptr());;
		if ((_90013_prim == nullptr)) {
			_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*(_88339_it))))._field_Token, jule::Str::lit("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1ac86580c_IsBool(_90013_prim.ptr())))) {
			_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*(_88339_it))))._field_Token, jule::Str::lit("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		(*(_89013_kind))._field_Expr=(*(_89517_d))._field_Model;
	};
	if (_1ac6dccd3_IsWhileNext(_88413_wh.ptr())) {
		if ((!(_1ac755631_isValidAstStForNextSt(&((*(_88413_wh))._field_Next))))) {
			_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_88413_wh))._field_NextToken, jule::Str::lit("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _92013_n = (*((*(_self_))._field_scope))._field_Stmts.len();;
		_1ac76d76a_checkNode(_self_, &((*(_88413_wh))._field_Next));
		if ((_92013_n < (*((*(_self_))._field_scope))._field_Stmts.len())) {
			jule::Any _92321_st = (*((*(_self_))._field_scope))._field_Stmts[_92013_n];;
			(*((*(_self_))._field_scope))._field_Stmts=(*((*(_self_))._field_scope))._field_Stmts.slice(0LL, _92013_n);
			if ((!(_1ac7558ea_isValidStForNextSt(&(_92321_st))))) {
				_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_88413_wh))._field_NextToken, jule::Str::lit("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			};
			(*(_89013_kind))._field_Next=_92321_st;
		};
	};
}



inline void _1ac766994_checkComptimeRangeIter(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac6dc145_Iter>* _93347_it, jule::Ptr<_1ac757e5d_RangeIter>* _93363_kind, jule::Ptr<_1ac8243ae_Data>* _93386_d) {
	if (((*((*(_93363_kind))))._field_KeyA != nullptr)) {
		if (((!(_1ac79a1e2_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1ac762671_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*((*(_93363_kind))))._field_KeyA))._field_Ident)))) {
			_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_93363_kind))))._field_KeyA))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_93363_kind))))._field_KeyA))._field_Ident, &__jule_any_type4)}));
			_1ac79ac2b_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	if (((*((*(_93363_kind))))._field_KeyB != nullptr)) {
		if (((!(_1ac79a1e2_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1ac762671_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*((*(_93363_kind))))._field_KeyB))._field_Ident)))) {
			_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_93363_kind))))._field_KeyB))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_93363_kind))))._field_KeyB))._field_Ident, &__jule_any_type4)}));
			_1ac79ac2b_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_1ac6dd377_RangeKind> _94713_rang = (*((*(_93347_it))))._field_Kind.cast_ptr<_1ac6dd377_RangeKind>(&__jule_any_type39);;
	_1ac770470_makeComptimeRange(_93386_d);
	if ((*((*(_93386_d))))._field_Decl) {
		_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*(_94713_rang))._field_Expr))._field_Token, jule::Str::lit("type @ is not supports comptime iterations", 42), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*((*(_93386_d))))._field_Kind.ptr()), &__jule_any_type4)}));
		return;;
	};
	_1ac8194d6_rangeChecker _95413_rc = _1ac8194d6_rangeChecker{._field_sc=_self_, ._field_rang=_94713_rang, ._field_Kind=(*(_93363_kind)), ._field_d=(*(_93386_d))};;
	jule::Bool _9609_ok = _1ac81b4e9_check(&_95413_rc);;
	if ((!(_9609_ok))) {
		return;;
	};
	jule::Ptr<_1ac72e5b6_comptimeRange> _96513_comptime = _1ac86052c_comptimeRange((*((*(_93386_d))))._field_Kind.ptr());;
	_1ac72e396_comptimeRangeKind_mptr_data[((*(_96513_comptime))._field_kind).type_offset]._1ac72da8d_ready((*(_96513_comptime))._field_kind, &((*((*(_93363_kind))))._field_KeyA), &((*((*(_93363_kind))))._field_KeyB));
	jule::I64 _96713_i = 0LL;;
	jule::I64 _9689_errors = (*((*(_self_))._field_s))._field_errors.len();;
	for (; (_96713_i < _1ac72e396_comptimeRangeKind_mptr_data[((*(_96513_comptime))._field_kind).type_offset]._1ac72e242_len((*(_96513_comptime))._field_kind)); (_96713_i)++) {
		{
			jule::Ptr<_1ac75d42a_scopeChecker> _97017_ssc = _1ac76edba_newChildChecker(_self_);;
			jule::Ptr<_1ac756126_Scope> _97117_scope = _1ac763221_getChild(_self_.ptr());;
			if (((*((*(_93363_kind))))._field_KeyA != nullptr)) {
				(*((*((*(_93363_kind))))._field_KeyA))._field_Scope=_97117_scope;
				{ jule::Slice<jule::Ptr<_1ac7bb015_Var>> &__jule_push_dest = (*((*(_97017_ssc))._field_table))._field_Vars; __jule_push_dest.push((*((*(_93363_kind))))._field_KeyA); };
			};
			if (((*((*(_93363_kind))))._field_KeyB != nullptr)) {
				(*((*((*(_93363_kind))))._field_KeyB))._field_Scope=_97117_scope;
				{ jule::Slice<jule::Ptr<_1ac7bb015_Var>> &__jule_push_dest = (*((*(_97017_ssc))._field_table))._field_Vars; __jule_push_dest.push((*((*(_93363_kind))))._field_KeyB); };
			};
			_1ac72e396_comptimeRangeKind_mptr_data[((*(_96513_comptime))._field_kind).type_offset]._1ac72deab_step((*(_96513_comptime))._field_kind, _96713_i, &((*((*(_93363_kind))))._field_KeyA), &((*((*(_93363_kind))))._field_KeyB));
			_1ac76363e_checkChildSsc(_self_, &((*((*(_93347_it))))._field_Scope), &(_97117_scope), &(_97017_ssc));
			if ((_9689_errors != (*((*(_self_))._field_s))._field_errors.len())) {
				goto _iter_end_1bc6beb73;
			};
			{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_97117_scope, &__jule_any_type22)); };
		}
	_iter_next_1bc6beb73:;
	}
	_iter_end_1bc6beb73:;;
}



inline void _1ac766c4c_checkRangeIter(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac6dc145_Iter>* _99039_it) {
	jule::Ptr<_1ac6dd377_RangeKind> _99113_rang = (*((*(_99039_it))))._field_Kind.cast_ptr<_1ac6dd377_RangeKind>(&__jule_any_type39);;
	jule::Ptr<_1ac8243ae_Data> _99313_d = _1ac843ec2_evalExpr1(_1ac7a2d65_eval((*(_self_))._field_s, jule::Trait<_1ac879568_Lookup>(_self_, 0)), (*(_99113_rang))._field_Expr);;
	if ((_99313_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1ac757e5d_RangeIter> _99813_kind = jule::new_ptr<_1ac757e5d_RangeIter>(_1ac757e5d_RangeIter{._field_Expr=_99313_d, });;
	if ((*((*(_99039_it))))._field_Comptime) {
		_1ac766994_checkComptimeRangeIter(_self_, _99039_it, &(_99813_kind), &(_99313_d));
		return;;
	};
	if (_1ac85e240_comptime((*(_99313_d))._field_Kind.ptr())) {
		_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*(_99113_rang))._field_Expr))._field_Token, jule::Str::lit("comptime expressions cannot be iterated at runtime", 50), jule::Slice<jule::Any>());
		_1ac79ac2b_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("declarate comptime iteration like: const for ...", 48), jule::Slice<jule::Any>());
		return;;
	};
	_1ac8194d6_rangeChecker _101213_rc = _1ac8194d6_rangeChecker{._field_sc=_self_, ._field_rang=_99113_rang, ._field_Kind=_99813_kind, ._field_d=_99313_d};;
	jule::Bool _10189_ok = _1ac81b4e9_check(&_101213_rc);;
	if ((!(_10189_ok))) {
		return;;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_99813_kind, &__jule_any_type40)); };
	jule::Ptr<_1ac75d42a_scopeChecker> _102513_ssc = _1ac76edba_newChildChecker(_self_);;
	jule::Ptr<_1ac756126_Scope> _102613_scope = _1ac763221_getChild(_self_.ptr());;
	if (((*(_99813_kind))._field_KeyA != nullptr)) {
		if (((!(_1ac79a1e2_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1ac762671_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*(_99813_kind))._field_KeyA))._field_Ident)))) {
			_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*(_99813_kind))._field_KeyA))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_99813_kind))._field_KeyA))._field_Ident, &__jule_any_type4)}));
			_1ac79ac2b_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*((*(_99813_kind))._field_KeyA))._field_Scope=_102613_scope;
		{ jule::Slice<jule::Ptr<_1ac7bb015_Var>> &__jule_push_dest = (*((*(_102513_ssc))._field_table))._field_Vars; __jule_push_dest.push((*(_99813_kind))._field_KeyA); };
	};
	if (((*(_99813_kind))._field_KeyB != nullptr)) {
		if (((!(_1ac79a1e2_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1ac762671_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*(_99813_kind))._field_KeyB))._field_Ident)))) {
			_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*(_99813_kind))._field_KeyB))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_99813_kind))._field_KeyB))._field_Ident, &__jule_any_type4)}));
			_1ac79ac2b_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*((*(_99813_kind))._field_KeyB))._field_Scope=_102613_scope;
		{ jule::Slice<jule::Ptr<_1ac7bb015_Var>> &__jule_push_dest = (*((*(_102513_ssc))._field_table))._field_Vars; __jule_push_dest.push((*(_99813_kind))._field_KeyB); };
	};
	_1ac765663_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_99813_kind)), (*((*(_99039_it))))._field_Scope, &(_102613_scope), _102513_ssc);
	(*(_99813_kind))._field_Scope=_102613_scope;
}



inline void _1ac767005_checkIter(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac6dc145_Iter> _105033_it) {
	if (_1ac6dc4a8_IsInf(_105033_it.ptr())) {
		if ((*(_105033_it))._field_Comptime) {
			_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_105033_it))._field_Token, jule::Str::lit("comptime iterations can only be range iteration", 47), jule::Slice<jule::Any>());
			return;;
		};
		_1ac7662bd_checkInfIter(_self_, &(_105033_it));
		return;;
	};
	{
		auto &_match_expr{ (*(_105033_it))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1bc6d765d:;
			{
				if ((*(_105033_it))._field_Comptime) {
					_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_105033_it))._field_Token, jule::Str::lit("comptime iterations can only be range iteration", 47), jule::Slice<jule::Any>());
					return;;
				};
				_1ac766576_checkWhileIter(_self_, &(_105033_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1bc6d8c25:;
			{
				_1ac766c4c_checkRangeIter(_self_, &(_105033_it));
			}
		}
		else {
			_case_begin_1bc6d873b:;
			{
				jule::outln(jule::Str::lit("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1bc6d86d6:;
	};
}



inline jule::Bool _1ac767346_checkValidContLabel(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Uintptr _107439_it) {
	jule::Ptr<_1ac75d42a_scopeChecker> _107513_scope = _self_;;
	_julec_label_1bc6dadd1:;
	if (((*(_107513_scope))._field_it == _107439_it)) {
		return true;;
	};
	if (((*(_107513_scope))._field_parent != nullptr)) {
		_107513_scope=(*(_107513_scope))._field_parent;
		goto _julec_label_1bc6dadd1;
	};
	return false;;
}



inline jule::Bool _1ac767687_checkValidBreakLabel(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Uintptr _109040_ptr) {
	jule::Ptr<_1ac75d42a_scopeChecker> _109113_scope = _self_;;
	_julec_label_1bc6dce8d:;
	if (((*(_109113_scope))._field_it == _109040_ptr)) {
		return true;;
	};
	if (((*(_109113_scope))._field_cse != 0LLU)) {
		jule::Uintptr _109913_mtch = static_cast<jule::Uintptr>((*(((_1ac75ad95_Case*)((*(_109113_scope))._field_cse))))._field_Owner);;
		if ((_109913_mtch == _109040_ptr)) {
			return true;;
		};
	};
	if (((*(_109113_scope))._field_parent != nullptr)) {
		_109113_scope=(*(_109113_scope))._field_parent;
		goto _julec_label_1bc6dce8d;
	};
	return false;;
}



inline jule::Ptr<_1ac7582e3_ContSt> _1ac7679c8_checkContValidScope(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac6ddb2a_ContSt> _111339_c) {
	if (_1ac761285_isDeferred(_self_)) {
		_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_111339_c))._field_Token, jule::Str::lit("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_111339_c))._field_Label != nullptr)) {
		return jule::new_ptr<_1ac7582e3_ContSt>();;
	};
	jule::Ptr<_1ac75d42a_scopeChecker> _112313_scope = _self_;;
	_julec_label_1bc6e0b94:;
	{
		
		if (((((*(_112313_scope))._field_it == 0LLU) && ((*(_112313_scope))._field_parent != nullptr)) && ((*(_112313_scope))._field_owner == nullptr))) {
			_case_begin_1bc6e2998:;
			{
				_112313_scope=(*(_112313_scope))._field_parent;
				goto _julec_label_1bc6e0b94;
			}
		}
		else if (((*(_112313_scope))._field_it != 0LLU)) {
			_case_begin_1bc6e2a20:;
			{
				return jule::new_ptr<_1ac7582e3_ContSt>(_1ac7582e3_ContSt{._field_It=(*(_112313_scope))._field_it});;
			}
		}
		_match_end_1bc6e28dd:;
	};
	_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_111339_c))._field_Token, jule::Str::lit("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1ac767c81_checkCont(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac6ddb2a_ContSt> _113729_c) {
	jule::Ptr<_1ac7582e3_ContSt> _113813_cont = _1ac7679c8_checkContValidScope(_self_, _113729_c);;
	if ((_113813_cont == nullptr)) {
		return;;
	};
	if (((*(_113729_c))._field_Label != nullptr)) {
		jule::Ptr<_1ac75be84_scopeLabel> _114417_label = _1ac753640_findLabelParent(&((*((*(_113729_c))._field_Label))._field_Kind), (*(_self_))._field_parent);;
		if ((_114417_label == nullptr)) {
			_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_113729_c))._field_Label, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*((*(_113729_c))._field_Label))._field_Kind, &__jule_any_type4)}));
			return;;
		};
		(*(_114417_label))._field_used=true;
		if ((((*(_114417_label))._field_pos + 1LL) >= (*((*((*(_114417_label))._field_scope))._field_scope))._field_Stmts.len())) {
			_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_113729_c))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_113729_c))._field_Label))._field_Kind, &__jule_any_type4)}));
			return;;
		};
		jule::I64 _115713_i = ((*(_114417_label))._field_pos + 1LL);;
		if ((_115713_i >= (*((*((*(_114417_label))._field_scope))._field_scope))._field_Stmts.len())) {
			_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_113729_c))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>());
		} else {
			jule::Any _116121_st = (*((*((*(_114417_label))._field_scope))._field_scope))._field_Stmts[_115713_i];;
			{
				auto &_match_expr{ _116121_st };
				
				if (_match_expr.type == &__jule_any_type36) {
					_case_begin_1bc6ed113:;
					{
						(*(_113813_cont))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_116121_st.cast_ptr<_1ac75705b_InfIter>(&__jule_any_type36)));
					}
				}
				else if (_match_expr.type == &__jule_any_type40) {
					_case_begin_1bc6ed322:;
					{
						(*(_113813_cont))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_116121_st.cast_ptr<_1ac757e5d_RangeIter>(&__jule_any_type40)));
					}
				}
				else if (_match_expr.type == &__jule_any_type38) {
					_case_begin_1bc6ed388:;
					{
						(*(_113813_cont))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_116121_st.cast_ptr<_1ac757512_WhileIter>(&__jule_any_type38)));
					}
				}
				else {
					_case_begin_1bc6ed2ab:;
					{
						_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_113729_c))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_113729_c))._field_Label))._field_Kind, &__jule_any_type4)}));
					}
				}
				_match_end_1bc6ed256:;
			};
		};
	};
	if (((*(_113813_cont))._field_It != 0LLU)) {
		if ((!(_1ac767346_checkValidContLabel(_self_, (*(_113813_cont))._field_It)))) {
			_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_113729_c))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_113729_c))._field_Label))._field_Kind, &__jule_any_type4)}));
		};
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_113813_cont, &__jule_any_type41)); };
}



inline void _1ac768039_checkLabel(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac6d5c65_LabelSt> _118434_l) {
	if ((_1ac761ae3_findLabel(_self_.ptr(), &((*(_118434_l))._field_Ident)) != nullptr)) {
		_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_118434_l))._field_Token, jule::Str::lit("label is already exist in this identifier: @", 44), jule::Slice<jule::Any>::make({jule::Any((*(_118434_l))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1ac7589b9_Label> _119013_label = jule::new_ptr<_1ac7589b9_Label>(_1ac7589b9_Label{._field_Ident=(*(_118434_l))._field_Ident});;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_119013_label, &__jule_any_type21)); };
	{ jule::Slice<jule::Ptr<_1ac75be84_scopeLabel>> &__jule_push_dest = (*((*(_self_))._field_labels)); __jule_push_dest.push(jule::new_ptr<_1ac75be84_scopeLabel>(_1ac75be84_scopeLabel{._field_token=(*(_118434_l))._field_Token, ._field_label=_119013_label, ._field_pos=static_cast<jule::I64>(((*((*(_self_))._field_scope))._field_Stmts.len() - 1LL)), ._field_scope=_self_, })); };
}



inline void _1ac7682e2_pushGoto(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac6d613e_GotoSt> _120332_gt) {
	jule::Ptr<_1ac758d93_GotoSt> _120413_st = jule::new_ptr<_1ac758d93_GotoSt>(_1ac758d93_GotoSt{._field_Ident=(*((*(_120332_gt))._field_Label))._field_Kind, });;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_120413_st, &__jule_any_type42)); };
	{ jule::Slice<jule::Ptr<_1ac75c517_scopeGoto>> &__jule_push_dest = (*((*(_self_))._field_gotos)); __jule_push_dest.push(jule::new_ptr<_1ac75c517_scopeGoto>(_1ac75c517_scopeGoto{._field_st=_120413_st, ._field_gt=_120332_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>(((*((*(_self_))._field_scope))._field_Stmts.len() - 1LL))})); };
}



inline void _1ac76859a_checkPostfix(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac6d712e_AssignSt> _121736_a) {
	if (((*(_121736_a))._field_Left.len() > 1LL)) {
		_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_121736_a))._field_Setter, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ac6cc9b5_Expr> _122313_expr = (*((*(_121736_a))._field_Left[0LL]))._field_Expr;;
	jule::Ptr<_1ac8243ae_Data> _122413_d = _1ac844313_evalExpr(_1ac7a2d65_eval((*(_self_))._field_s, jule::Trait<_1ac879568_Lookup>(_self_, 0)), _122313_expr);;
	if ((_122413_d == nullptr)) {
		return;;
	};
	_1ac755367_checkAssign(&((*(_self_))._field_s), &(_122413_d), nullptr, (*(_121736_a))._field_Setter);
	if ((_1ac85c6a0_Ptr((*(_122413_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ac8698ee_Ptr> _123217_ptr = _1ac85c6a0_Ptr((*(_122413_d))._field_Kind.ptr());;
		if (_1ac86a438_IsUnsafe(_123217_ptr.ptr())) {
			_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_121736_a))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_121736_a))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1ac859dea_Str((*(_122413_d))._field_Kind.ptr()), &__jule_any_type4)}));
			return;;
		};
	} else {
		if (((_1ac85c183_Prim((*(_122413_d))._field_Kind.ptr()) == nullptr) || (!(_1a6cde2db_IsNum((*(_1ac85c183_Prim((*(_122413_d))._field_Kind.ptr())))._field_Kind))))) {
			_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_121736_a))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_121736_a))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1ac859dea_Str((*(_122413_d))._field_Kind.ptr()), &__jule_any_type4)}));
			return;;
		};
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1ac75926c_Postfix>(_1ac75926c_Postfix{._field_Expr=(*(_122413_d))._field_Model, ._field_Op=(*((*(_121736_a))._field_Setter))._field_Kind}), &__jule_any_type43)); };
}



inline jule::Bool _1ac7688db_isNewAssignIdent(_1ac75d42a_scopeChecker* _self_, jule::Str _125035_ident) {
	if ((_1ac6b58c1_IsIgnoreIdent(_125035_ident) || (_125035_ident).empty())) {
		return false;;
	};
	return (_1ac82207c_defByIdent((*(_self_))._field_table.ptr(), &(_125035_ident), false) == nullptr);;
}



inline void _1ac768b94_removeInteriorMutRisk(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac8243ae_Data>* _126346_d) {
	jule::Ptr<_1ac702105_StructIns> _12649_s = _1ac85d706_Struct((*((*(_126346_d))))._field_Kind.ptr());;
	if ((_12649_s == nullptr)) {
		return;;
	};
	jule::Ptr<_1ac75d42a_scopeChecker> _12689_root = _1ac7617a2_getHardRoot(_self_);;
	if (((*((*(_12689_root))._field_owner))._field_Owner != _12649_s)) {
		return;;
	};
	(*((*(_126346_d))))._field_Mutable=true;
}



inline jule::Bool _1ac76914a_checkStructureAssignOp(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac702105_StructIns>* _127747_s, jule::Ptr<_1ac6d712e_AssignSt>* _127767_a, jule::Ptr<_1ac8243ae_Data>* _127786_r) {
	jule::Ptr<_1ac717170_FnIns> _128017_overload = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_127767_a))))._field_Setter))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1bc71d62d:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1bc71dc5a:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1bc71dcc1:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1bc71dd37:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1bc71dd9d:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1bc720454:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1bc7204ba:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1bc720531:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1bc720597:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1bc72060d:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1bc71dbe4:;
			{
				_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*(_127767_a))))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_127767_a))))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1ac702479_Str((*(_127747_s)).ptr()), &__jule_any_type4)}));
				return false;;
			}
		}
		_match_end_1bc71db8e:;
	};
	if ((_128017_overload == nullptr)) {
		_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*(_127767_a))))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_127767_a))))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1ac702479_Str((*(_127747_s)).ptr()), &__jule_any_type4)}));
		return false;;
	};
	jule::Ptr<_1ac7161c4_ParamIns> _131213_p = (*(_128017_overload))._field_Params[1LL];;
	return _1ac7a33c6_checkAssignType((*(_self_))._field_s, (*((*(_131213_p))._field_Decl))._field_Reference, &((*(_131213_p))._field_Kind), _127786_r, (*((*(_127767_a))))._field_Setter);;
}



inline void _1ac769403_checkSingleAssign(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac6d712e_AssignSt>* _131642_a) {
	jule::Ptr<_1ac8243ae_Data> _131717_l = nullptr;;
	if ((!(_1ac6b58c1_IsIgnoreIdent((*((*((*(_131642_a))))._field_Left[0LL]))._field_Ident)))) {
		jule::Ptr<_1ac6cc9b5_Expr> _132017_expr = (*((*((*(_131642_a))))._field_Left[0LL]))._field_Expr;;
		_131717_l=_1ac844313_evalExpr(_1ac7a2d65_eval((*(_self_))._field_s, jule::Trait<_1ac879568_Lookup>(_self_, 0)), _132017_expr);
		if ((_131717_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1ac8260a3_Eval> _132717_eval = nullptr;;
	if ((_131717_l != nullptr)) {
		_132717_eval=_1ac7a2a24_evalp((*(_self_))._field_s, jule::Trait<_1ac879568_Lookup>(_self_, 0), (*(_131717_l))._field_Kind);
	} else {
		_132717_eval=_1ac7a2d65_eval((*(_self_))._field_s, jule::Trait<_1ac879568_Lookup>(_self_, 0));
	};
	(*(_132717_eval))._field_unsafety=_1ac7607d4_isUnsafe(_self_);
	jule::Ptr<_1ac8243ae_Data> _133413_r = _1ac844313_evalExpr(_132717_eval, (*((*(_131642_a))))._field_Right);;
	if ((_133413_r == nullptr)) {
		return;;
	};
	_1ac768b94_removeInteriorMutRisk(_self_, &(_133413_r));
	if ((_131717_l == nullptr)) {
		if (_1ac85ad96_Void((*(_133413_r))._field_Kind.ptr())) {
			_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_131642_a))))._field_Right))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_133413_r, &__jule_any_type24)); };
		return;;
	};
	if ((!(_1ac755367_checkAssign(&((*(_self_))._field_s), &(_131717_l), _133413_r, (*((*(_131642_a))))._field_Setter)))) {
		return;;
	};
	if ((_1ac85dea9_Tup((*(_133413_r))._field_Kind.ptr()) != nullptr)) {
		_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*(_131642_a))))._field_Setter, jule::Str::lit("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ac70600a_OperandExprModel> _135813_lm = jule::new_ptr<_1ac70600a_OperandExprModel>(_1ac70600a_OperandExprModel{._field_Kind=(*(_131717_l))._field_Kind, ._field_Model=(*(_131717_l))._field_Model});;
	jule::Ptr<_1ac70600a_OperandExprModel> _136213_rm = jule::new_ptr<_1ac70600a_OperandExprModel>(_1ac70600a_OperandExprModel{._field_Kind=(*(_133413_r))._field_Kind, ._field_Model=(*(_133413_r))._field_Model});;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1ac759723_Assign>(_1ac759723_Assign{._field_L=_135813_lm, ._field_R=_136213_rm, ._field_Op=(*((*(_131642_a))))._field_Setter}), &__jule_any_type44)); };
	if (((*((*((*(_131642_a))))._field_Setter))._field_Id == static_cast<jule::U64>(71LLU))) {
		_1ac80d08a_assignTypeChecker _136917_checker = _1ac80d08a_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_131717_l))._field_Kind, ._field_d=_133413_r, ._field_errorToken=(*((*(_131642_a))))._field_Setter};;
		if (_1ac80e058_check(&_136917_checker)) {
			(*(_136213_rm))._field_Model=(*(_133413_r))._field_Model;
			(*(_135813_lm))._field_Model=(*(_131717_l))._field_Model;
		};
		return;;
	};
	jule::Ptr<_1ac702105_StructIns> _138113_strct = _1ac85d706_Struct((*(_131717_l))._field_Kind.ptr());;
	if ((_138113_strct != nullptr)) {
		_1ac76914a_checkStructureAssignOp(_self_, &(_138113_strct), _131642_a, &(_133413_r));
		return;;
	};
	jule::U64 _13869_id = (*((*((*(_131642_a))))._field_Setter))._field_Id;;
	(*((*((*(_131642_a))))._field_Setter))._field_Id=_1ac77023e_removeEqFromOp((*((*((*(_131642_a))))._field_Setter))._field_Id);
	_1ac846766_binaryEval _138813_solver = static__1ac847190_new(_132717_eval, (*((*(_131642_a))))._field_Setter);;
	({
		jule::Ptr<_1ac8243ae_Data> ___jule_assign_arg = _131717_l;
		jule::Ptr<_1ac8243ae_Data> _1___jule_assign_arg = _133413_r;
		_138813_solver._field_l = ___jule_assign_arg;
		_138813_solver._field_r = _1___jule_assign_arg;
	});
	_1ac84b2d7_evalOp(&_138813_solver);
	(*((*((*(_131642_a))))._field_Setter))._field_Id=_13869_id;
}



inline void _1ac769986_processEndPartOfMultiAssign(_1ac75d42a_scopeChecker* _self_, jule::Ptr<_1ac759aec_MultiAssign>* _139451_st, jule::Ptr<_1ac6d712e_AssignSt>* _139514_a, jule::Ptr<_1ac6d6a9b_AssignLeft>* _139533_lexpr, jule::Ptr<_1ac8243ae_Data>* _139558_l, jule::Ptr<_1ac8243ae_Data>* _139573_r) {
	if (((!((*((*(_139533_lexpr))))._field_Reference)) && _1ac6b58c1_IsIgnoreIdent((*((*(_139533_lexpr))))._field_Ident))) {
		if (_1ac85ad96_Void((*((*(_139573_r))))._field_Kind.ptr())) {
			_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_139514_a))))._field_Right))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_1ac8243ae_Data>> &__jule_push_dest = (*((*(_139451_st))))._field_L; __jule_push_dest.push(nullptr); };
		return;;
	};
	if (((*((*(_139514_a))))._field_Declarative && ((*((*(_139533_lexpr))))._field_Reference || _1ac7688db_isNewAssignIdent(_self_, (*((*(_139533_lexpr))))._field_Ident)))) {
		if (_1ac762671_isDuplicatedIdent(_self_, 0LLU, &((*((*(_139533_lexpr))))._field_Ident))) {
			_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*(_139533_lexpr))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_139533_lexpr))))._field_Ident, &__jule_any_type4)}));
			_1ac79ac2b_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
			_1ac760c68_stop(_self_);
			return;;
		};
		if (_1ac6b58c1_IsIgnoreIdent((*((*(_139533_lexpr))))._field_Ident)) {
			_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*(_139533_lexpr))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1ac7bb015_Var> _141617_v = jule::new_ptr<_1ac7bb015_Var>(_1ac7bb015_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*((*(_139533_lexpr))))._field_Token, ._field_Ident=(*((*(_139533_lexpr))))._field_Ident, ._field_Mutable=(*((*(_139533_lexpr))))._field_Mutable, ._field_Reference=(*((*(_139533_lexpr))))._field_Reference, ._field_Value=jule::new_ptr<_1ac825503_Value>(_1ac825503_Value{._field_Expr=(*((*(_139514_a))))._field_Right, ._field_Data=(*(_139573_r))}), });;
		_1ac7b236e_checkVarValue((*(_self_))._field_s, &(_141617_v));
		(*(_141617_v))._field_Value=nullptr;
		{ jule::Slice<jule::Ptr<_1ac8243ae_Data>> &__jule_push_dest = (*((*(_139451_st))))._field_L; __jule_push_dest.push(jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=(*((*(_141617_v))._field_Kind))._field_Kind, ._field_Mutable=(*(_141617_v))._field_Mutable, ._field_Reference=(*(_141617_v))._field_Reference, ._field_Lvalue=(!((*(_141617_v))._field_Constant)), ._field_Model=jule::Any(_141617_v, &__jule_any_type8), })); };
		{ jule::Slice<jule::Ptr<_1ac7bb015_Var>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Vars; __jule_push_dest.push(_141617_v); };
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_141617_v, &__jule_any_type8)); };
		return;;
	};
	if (((*((*(_139533_lexpr))))._field_Mutable || (*((*(_139533_lexpr))))._field_Reference)) {
		_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*(_139533_lexpr))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_139533_lexpr))))._field_Ident, &__jule_any_type4)}));
		_1ac79ac2b_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if ((!(_1ac755367_checkAssign(&((*(_self_))._field_s), _139558_l, (*(_139573_r)), (*((*(_139533_lexpr))))._field_Token)))) {
		return;;
	};
	;
	_1ac7a7760_checkValidityForInitExpr((*(_self_))._field_s, (*((*(_139558_l))))._field_Mutable, false, &((*((*(_139558_l))))._field_Kind), _139573_r, &((*((*(_139514_a))))._field_Setter));
	_1ac80d08a_assignTypeChecker _145913_checker = _1ac80d08a_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*((*(_139558_l))))._field_Kind, ._field_d=(*(_139573_r)), ._field_errorToken=(*((*(_139514_a))))._field_Setter};;
	_1ac80e058_check(&_145913_checker);
	{ jule::Slice<jule::Ptr<_1ac8243ae_Data>> &__jule_push_dest = (*((*(_139451_st))))._field_L; __jule_push_dest.push((*(_139558_l))); };
}



inline void _1ac769c3e_checkMultiAssign(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac6d712e_AssignSt>* _146941_a) {
	jule::Ptr<_1ac8243ae_Data> _147013_rd = _1ac844313_evalExpr(_1ac7a2d65_eval((*(_self_))._field_s, jule::Trait<_1ac879568_Lookup>(_self_, 0)), (*((*(_146941_a))))._field_Right);;
	if ((_147013_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1ac8243ae_Data>> _147413_right = _1ac7544ba_getDatasFromTupleData(&(_147013_rd));;
	if ((_147413_right.len() == 1LL)) {
		{
			auto &_match_expr{ (*(_147413_right[0LL]))._field_Model };
			
			if (_match_expr.type == &__jule_any_type45) {
				_case_begin_1bc74b947:;
				{
					jule::Ptr<_1ac708d65_IndexingExprModel> _147821_iem = (*(_147413_right[0LL]))._field_Model.cast_ptr<_1ac708d65_IndexingExprModel>(&__jule_any_type45);;
					if ((_1ac85dc23_Map((*((*(_147821_iem))._field_Expr))._field_Kind.ptr()) != nullptr)) {
						_147413_right=jule::Slice<jule::Ptr<_1ac8243ae_Data>>::make({jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=(*(_1ac85dc23_Map((*((*(_147821_iem))._field_Expr))._field_Kind.ptr())))._field_Val, }),jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c63c_primBool, })});
					};
				}
			}
			_match_end_1bc74b89d:;
		};
	};
	{
		
		if (((*((*(_146941_a))))._field_Left.len() > _147413_right.len())) {
			_case_begin_1bc74b419:;
			{
				_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*(_146941_a))))._field_Setter, jule::Str::lit("overflow multi assignment identifers", 36), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*((*(_146941_a))))._field_Left.len() < _147413_right.len())) {
			_case_begin_1bc74bc77:;
			{
				_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*(_146941_a))))._field_Setter, jule::Str::lit("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1bc74b370:;
	};
	jule::Ptr<_1ac759aec_MultiAssign> _149713_st = jule::new_ptr<_1ac759aec_MultiAssign>(_1ac759aec_MultiAssign{._field_R=(*(_147013_rd))._field_Model});;
	{
		auto expr = &((*((*(_146941_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc751908:;
		if (it != expr_end) {
			jule::I64 _150013_i = it - expr->begin();
			{
				jule::Ptr<_1ac6d6a9b_AssignLeft> _150117_lexpr = (*((*(_146941_a))))._field_Left[_150013_i];;
				jule::Ptr<_1ac8243ae_Data> _150221_l = nullptr;;
				if (((!(_1ac6b58c1_IsIgnoreIdent((*(_150117_lexpr))._field_Ident))) && ((!((*((*(_146941_a))))._field_Declarative)) || (!(_1ac7688db_isNewAssignIdent(_self_.ptr(), (*(_150117_lexpr))._field_Ident)))))) {
					_150221_l=_1ac844313_evalExpr(_1ac7a2d65_eval((*(_self_))._field_s, jule::Trait<_1ac879568_Lookup>(_self_, 0)), (*(_150117_lexpr))._field_Expr);
					if ((_150221_l == nullptr)) {
						goto _iter_next_1bc751908;
					};
				};
				jule::Ptr<_1ac8243ae_Data> _151017_r = _147413_right[_150013_i];;
				_1ac768b94_removeInteriorMutRisk(_self_, &(_151017_r));
				_1ac769986_processEndPartOfMultiAssign(_self_.ptr(), &(_149713_st), _146941_a, &(_150117_lexpr), &(_150221_l), &(_151017_r));
			}
			_iter_next_1bc751908:;
			++it;
			_150013_i++;
			goto _iter_begin_1bc751908;
		}
		_iter_end_1bc751908:;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_149713_st, &__jule_any_type46)); };
}



inline void _1ac769ee7_checkAssignSt(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac6d712e_AssignSt> _151737_a) {
	{
		
		if (_1ac6b7b04_IsPostfixOp((*((*(_151737_a))._field_Setter))._field_Id)) {
			_case_begin_1bc756b2d:;
			{
				_1ac76859a_checkPostfix(_self_, _151737_a);
			}
		}
		else if (((*(_151737_a))._field_Left.len() == 1LL)) {
			_case_begin_1bc75616b:;
			{
				_1ac769403_checkSingleAssign(_self_, &(_151737_a));
			}
		}
		else {
			_case_begin_1bc756105:;
			{
				_1ac769c3e_checkMultiAssign(_self_, &(_151737_a));
			}
		}
		_match_end_1bc756039:;
	};
}



inline jule::Ptr<_1ac756126_Scope> _1ac76a3e3_checkCaseScope(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac75ad95_Case>* _152835_c, jule::Ptr<_1ac6d86a2_ScopeTree>* _152850_tree) {
	jule::Ptr<_1ac75d42a_scopeChecker> _152913_ssc = _1ac76edba_newChildChecker(_self_);;
	(*(_152913_ssc))._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_152835_c))));
	return _1ac763a3a_checkChildSc(_self_, _152850_tree, &(_152913_ssc));;
}



inline jule::Ptr<_1ac75ad95_Case> _1ac76a954_checkCase(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac75a25c_Match> _153433_m, jule::I64 _153444_i, jule::Ptr<_1ac6e0654_Case> _153456_c, jule::Ptr<_1ac8243ae_Data> _153475_expr) {
	jule::Ptr<_1ac75ad95_Case> _153513_case = (*(_153433_m))._field_Cases[_153444_i];;
	(*(_153513_case))._field_Exprs=jule::Slice<jule::Ptr<_1ac8243ae_Data>>::alloc(0LL, (*(_153456_c))._field_Exprs.len());
	jule::Bool _153713_constMatched = false;;
	jule::Ptr<_1ac8260a3_Eval> _153813_eval = _1ac7a2d65_eval((*(_self_))._field_s, jule::Trait<_1ac879568_Lookup>(_self_, 0));;
	{
		auto expr = &((*(_153456_c))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc75c44c:;
		if (it != expr_end) {
			jule::Ptr<_1ac6cc9b5_Expr> _153921_e = *it;
			{
				jule::Ptr<_1ac8243ae_Data> _154017_d = _1ac8434ee_evalExprKind(_153813_eval, (*(_153921_e))._field_Kind);;
				if ((_154017_d == nullptr)) {
					goto _iter_next_1bc75c44c;
				};
				if ((*(_153433_m))._field_TypeMatch) {
					{ jule::Slice<jule::Ptr<_1ac8243ae_Data>> &__jule_push_dest = (*(_153513_case))._field_Exprs; __jule_push_dest.push(_154017_d); };
					if ((_1ac754201_countMatchType(&(_153433_m), &((*(_154017_d))._field_Kind)) > 1LL)) {
						_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_153921_e))._field_Token, jule::Str::lit("duplicated pattern: type @ is already matched", 45), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_154017_d))._field_Kind.ptr()), &__jule_any_type4)}));
					};
					if ((*(_153433_m))._field_Comptime) {
						_153713_constMatched=(_153713_constMatched || _1ac85a23b_Equal((*(_153475_expr))._field_Kind, (*(_154017_d))._field_Kind));
					} else {
						if ((_1ac85cbbc_TypeEnum((*(_153475_expr))._field_Kind.ptr()) != nullptr)) {
							_1ac7a3d33_checkTypeCompatibility((*(_self_))._field_s, &((*(_153475_expr))._field_Kind), &((*(_154017_d))._field_Kind), &((*(_153921_e))._field_Token));
						} else {
							jule::Ptr<_1ac727548_Trait> _155925_trt = _1ac85d98c_Trait((*(_153475_expr))._field_Kind.ptr());;
							if ((_155925_trt != nullptr)) {
								_1ac7a3d33_checkTypeCompatibility((*(_self_))._field_s, &((*(_153475_expr))._field_Kind), &((*(_154017_d))._field_Kind), &((*(_153921_e))._field_Token));
							};
						};
					};
					goto _iter_next_1bc75c44c;
				};
				if ((*(_154017_d))._field_Decl) {
					_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_153921_e))._field_Token, jule::Str::lit("expecting expression, found type declaration", 44), jule::Slice<jule::Any>());
					_1ac79ac2b_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("you can use type-match if you want to match types", 49), jule::Slice<jule::Any>());
					goto _iter_next_1bc75c44c;
				};
				if ((*(_153433_m))._field_Comptime) {
					if (((!(_1ac824c83_IsConst(_154017_d.ptr()))) && (_1ac860a49_comptimeTypeInfo((*(_154017_d))._field_Kind.ptr()) == nullptr))) {
						_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_153921_e))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
						_1ac79ac2b_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
						goto _iter_next_1bc75c44c;
					};
					if ((!(_153713_constMatched))) {
						if (_1ac824c83_IsConst(_154017_d.ptr())) {
							_153713_constMatched=(_1ac824c83_IsConst(_153475_expr.ptr()) && _1a6ce548a_Eq((*(_154017_d))._field_Constant.ptr(), (*((*(_153475_expr))._field_Constant))));
						} else {
							jule::Ptr<_1ac73deee_comptimeTypeInfo> _158425_exprCti = _1ac860a49_comptimeTypeInfo((*(_153475_expr))._field_Kind.ptr());;
							_153713_constMatched=((_158425_exprCti != nullptr) && _1ac85a23b_Equal((*(_1ac860a49_comptimeTypeInfo((*(_154017_d))._field_Kind.ptr())))._field_base, (*(_158425_exprCti))._field_base));
						};
					};
				};
				{ jule::Slice<jule::Ptr<_1ac8243ae_Data>> &__jule_push_dest = (*(_153513_case))._field_Exprs; __jule_push_dest.push(_154017_d); };
				if ((((!((*(_153433_m))._field_Comptime)) || (_1ac860a49_comptimeTypeInfo((*(_153475_expr))._field_Kind.ptr()) == nullptr)) || (_1ac860a49_comptimeTypeInfo((*(_154017_d))._field_Kind.ptr()) == nullptr))) {
					_1ac80d08a_assignTypeChecker _159421_checker = _1ac80d08a_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_153475_expr))._field_Kind, ._field_d=_154017_d, ._field_errorToken=(*(_153921_e))._field_Token};;
					_1ac80e058_check(&_159421_checker);
				};
			}
			_iter_next_1bc75c44c:;
			++it;
			goto _iter_begin_1bc75c44c;
		}
		_iter_end_1bc75c44c:;
	};
	if (((!((*(_153433_m))._field_Comptime)) || _153713_constMatched)) {
		(*(_153513_case))._field_Scope=_1ac76a3e3_checkCaseScope(_self_, &(_153513_case), &((*(_153456_c))._field_Scope));
	};
	return _153513_case;;
}



inline void _1ac76ad72_checkCases(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac6e0e6d_MatchCase>* _160935_m, jule::Ptr<_1ac75a25c_Match> _160954_rm, jule::Ptr<_1ac8243ae_Data> _160970_expr) {
	(*(_160954_rm))._field_Cases=jule::Slice<jule::Ptr<_1ac75ad95_Case>>::alloc(0LL, (*((*(_160935_m))))._field_Cases.len());
	{
		auto expr = &((*((*(_160935_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc76ea69:;
		if (it != expr_end) {
			jule::I64 _161113_i = it - expr->begin();
			{
				jule::Ptr<_1ac75ad95_Case> _161217_case = jule::new_ptr<_1ac75ad95_Case>(_1ac75ad95_Case{._field_Owner=_160954_rm, });;
				if ((_161113_i > 0LL)) {
					(*((*(_160954_rm))._field_Cases[(_161113_i - 1LL)]))._field_Next=_161217_case;
				};
				{ jule::Slice<jule::Ptr<_1ac75ad95_Case>> &__jule_push_dest = (*(_160954_rm))._field_Cases; __jule_push_dest.push(_161217_case); };
			}
			_iter_next_1bc76ea69:;
			++it;
			_161113_i++;
			goto _iter_begin_1bc76ea69;
		}
		_iter_end_1bc76ea69:;
	};
	if ((((*(_160954_rm))._field_Default != nullptr) && ((*((*(_160935_m))))._field_Cases.len() > 0LL))) {
		(*((*(_160954_rm))._field_Cases[((*(_160954_rm))._field_Cases.len() - 1LL)]))._field_Next=(*(_160954_rm))._field_Default;
	};
	{
		auto expr = &((*((*(_160935_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc773177:;
		if (it != expr_end) {
			jule::I64 _162514_i = it - expr->begin();
			jule::Ptr<_1ac6e0654_Case> _162521_c = *it;
			{
				_1ac76a954_checkCase(_self_, _160954_rm, _162514_i, _162521_c, _160970_expr);
			}
			_iter_next_1bc773177:;
			++it;
			_162514_i++;
			goto _iter_begin_1bc773177;
		}
		_iter_end_1bc773177:;
	};
}



inline jule::Ptr<_1ac75ad95_Case> _1ac76b26d_checkDefault(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac75a25c_Match> _163036_m, jule::Ptr<_1ac6de4aa_Else> _163051_d) {
	jule::Ptr<_1ac75ad95_Case> _163113_def = jule::new_ptr<_1ac75ad95_Case>(_1ac75ad95_Case{._field_Owner=_163036_m, });;
	(*(_163113_def))._field_Scope=_1ac76a3e3_checkCaseScope(_self_, &(_163113_def), &((*(_163051_d))._field_Scope));
	return _163113_def;;
}



inline void _1ac76b5d1_checkComptimePanic(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac6b2e62_Token> _163842_callToken, jule::Ptr<_1ac756126_Scope>* _163862_s) {
	if (((*((*(_163862_s))))._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _16429_stmt = (*((*(_163862_s))))._field_Stmts[0LL];;
	{
		auto &_match_expr{ _16429_stmt };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1bc7768ea:;
			{
				jule::Ptr<_1ac8243ae_Data> _164513_d = _16429_stmt.cast_ptr<_1ac8243ae_Data>(&__jule_any_type24);;
				{
					auto &_match_expr{ (*(_164513_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type29) {
						_case_begin_1bc777863:;
						{
							jule::Ptr<_1ac70cc59_BuiltinPanicCallExprModel> _164821_m = (*(_164513_d))._field_Model.cast_ptr<_1ac70cc59_BuiltinPanicCallExprModel>(&__jule_any_type29);;
							{
								auto &_match_expr{ (*(_164821_m))._field_Expr };
								
								if (_match_expr.type == &__jule_any_type19) {
									_case_begin_1bc7789b8:;
									{
										jule::Ptr<_1a6cde8d5_Const> _165121_c = (*(_164821_m))._field_Expr.cast_ptr<_1a6cde8d5_Const>(&__jule_any_type19);;
										if ((!(_1a6ce4159_IsStr(_165121_c.ptr())))) {
											goto _match_end_1bc778952;
										};
										if ((_163842_callToken == nullptr)) {
											jule::Ptr<_1ac75d42a_scopeChecker> _165629_root = _1ac7617a2_getHardRoot(_self_);;
											if (((*(_165629_root))._field_calledFrom == nullptr)) {
												_163842_callToken=(*(_164821_m))._field_Token;
											} else {
												_163842_callToken=(*(_165629_root))._field_calledFrom;
											};
										};
										_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), _163842_callToken, jule::Str::lit("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_1a6ce1a5d_ReadStr(_165121_c.ptr()), &__jule_any_type4)}));
										_1ac760c68_stop(_self_.ptr());
									}
								}
								_match_end_1bc778952:;
							};
						}
					}
					_match_end_1bc7777ec:;
				};
			}
		}
		_match_end_1bc7767eb:;
	};
}



inline void _1ac76b944_processConstMatch(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac75a25c_Match>* _167042_tm, jule::Ptr<_1ac6e0e6d_MatchCase>* _167059_m) {
	{
		auto expr = &((*((*(_167042_tm))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc778ac8:;
		if (it != expr_end) {
			jule::I64 _167114_i = it - expr->begin();
			jule::Ptr<_1ac75ad95_Case> _167121_c = *it;
			{
				if (((*(_167121_c))._field_Scope != nullptr)) {
					jule::Ptr<_1ac6b2e62_Token> _167325_token = nullptr;;
					if (((!((*((*(_167042_tm))))._field_TypeMatch)) && ((*((*(_167121_c))._field_Scope))._field_Stmts.len() > 0LL))) {
						_167325_token=(*((*((*((*(_167059_m))))._field_Cases[_167114_i]))._field_Scope))._field_Stmts[0LL]._field_Token;
					};
					_1ac76b5d1_checkComptimePanic(_self_, _167325_token, &((*(_167121_c))._field_Scope));
					(*((*(_167042_tm))))._field_Default=_167121_c;
					(*((*(_167042_tm))))._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1bc778ac8:;
			++it;
			_167114_i++;
			goto _iter_begin_1bc778ac8;
		}
		_iter_end_1bc778ac8:;
	};
	if (((*((*(_167059_m))))._field_Default != nullptr)) {
		(*((*(_167042_tm))))._field_Cases=nullptr;
		(*((*(_167042_tm))))._field_Default=_1ac76b26d_checkDefault(_self_, (*(_167042_tm)), (*((*(_167059_m))))._field_Default);
		if (((*((*(_167042_tm))))._field_Default != nullptr)) {
			jule::Ptr<_1ac6b2e62_Token> _168725_token = nullptr;;
			if ((!((*((*(_167042_tm))))._field_TypeMatch))) {
				_168725_token=(*((*((*((*(_167059_m))))._field_Default))._field_Scope))._field_Stmts[0LL]._field_Token;
			};
			_1ac76b5d1_checkComptimePanic(_self_, _168725_token, &((*((*((*(_167042_tm))))._field_Default))._field_Scope));
		};
	} else {
		(*((*(_167042_tm))))._field_Cases=nullptr;
	};
}



inline void _1ac76bbec_checkTypeMatch(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac6e0e6d_MatchCase>* _169939_m) {
	jule::Ptr<_1ac8243ae_Data> _170013_d = _1ac843840_eval1(_1ac7a2d65_eval((*(_self_))._field_s, jule::Trait<_1ac879568_Lookup>(_self_, 0)), (*((*(_169939_m))))._field_Expr);;
	if ((_170013_d == nullptr)) {
		return;;
	};
	if ((*((*(_169939_m))))._field_Comptime) {
		jule::Ptr<_1ac73deee_comptimeTypeInfo> _170617_cti = _1ac860a49_comptimeTypeInfo((*(_170013_d))._field_Kind.ptr());;
		if ((_170617_cti == nullptr)) {
			if ((!((*(_170013_d))._field_Decl))) {
				_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_169939_m))))._field_Expr))._field_Token, jule::Str::lit("comptime type-match expressions can take only type declarations", 63), jule::Slice<jule::Any>());
				return;;
			};
		} else {
			(*(_170013_d))._field_Kind=(*(_170617_cti))._field_base;
		};
	} else if (((*(_170013_d))._field_Decl || (!(((((_1ac85c183_Prim((*(_170013_d))._field_Kind.ptr()) != nullptr) && _1ac865d29_IsAny(_1ac85c183_Prim((*(_170013_d))._field_Kind.ptr()).ptr())) || (_1ac85d98c_Trait((*(_170013_d))._field_Kind.ptr()) != nullptr)) || (_1ac85cbbc_TypeEnum((*(_170013_d))._field_Kind.ptr()) != nullptr)))))) {
		_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_169939_m))))._field_Expr))._field_Token, jule::Str::lit("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ac75a25c_Match> _172013_tm = jule::new_ptr<_1ac75a25c_Match>(_1ac75a25c_Match{._field_Expr=_170013_d, ._field_TypeMatch=true, ._field_Comptime=(*((*(_169939_m))))._field_Comptime, });;
	if (((!((*(_172013_tm))._field_Comptime)) && ((*((*(_169939_m))))._field_Default != nullptr))) {
		(*(_172013_tm))._field_Default=_1ac76b26d_checkDefault(_self_, _172013_tm, (*((*(_169939_m))))._field_Default);
	};
	_1ac76ad72_checkCases(_self_, _169939_m, _172013_tm, _170013_d);
	if ((*(_172013_tm))._field_Comptime) {
		_1ac76b944_processConstMatch(_self_, &(_172013_tm), _169939_m);
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_172013_tm, &__jule_any_type47)); };
}



inline void _1ac76bea5_checkCommonMatch(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac6e0e6d_MatchCase>* _174141_m) {
	jule::Ptr<_1ac8243ae_Data> _174217_d = nullptr;;
	if (((*((*(_174141_m))))._field_Expr == nullptr)) {
		_174217_d=jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c63c_primBool, ._field_Constant=static__1a6ce03a8_NewBool(true)});
		(*(_174217_d))._field_Model=jule::Any((*(_174217_d))._field_Constant, &__jule_any_type19);
	} else {
		_174217_d=_1ac843ec2_evalExpr1(_1ac7a2d65_eval((*(_self_))._field_s, jule::Trait<_1ac879568_Lookup>(_self_, 0)), (*((*(_174141_m))))._field_Expr);
		if ((_174217_d == nullptr)) {
			return;;
		};
	};
	if ((*((*(_174141_m))))._field_Comptime) {
		if ((!(_1ac77096a_canComptimeMatch(&(_174217_d))))) {
			_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_174141_m))))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			_1ac79ac2b_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
			return;;
		};
	} else if (_1ac85e240_comptime((*(_174217_d))._field_Kind.ptr())) {
		_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_174141_m))))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		_1ac79ac2b_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ac75a25c_Match> _176813_mc = jule::new_ptr<_1ac75a25c_Match>(_1ac75a25c_Match{._field_Expr=_174217_d, ._field_Comptime=(*((*(_174141_m))))._field_Comptime, });;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_176813_mc, &__jule_any_type47)); };
	if (((!((*(_176813_mc))._field_Comptime)) && ((*((*(_174141_m))))._field_Default != nullptr))) {
		(*(_176813_mc))._field_Default=_1ac76b26d_checkDefault(_self_, _176813_mc, (*((*(_174141_m))))._field_Default);
	};
	_1ac76ad72_checkCases(_self_, _174141_m, _176813_mc, _174217_d);
	if ((*(_176813_mc))._field_Comptime) {
		_1ac76b944_processConstMatch(_self_, &(_176813_mc), _174141_m);
	};
}



inline void _1ac76c25d_checkMatch(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac6e0e6d_MatchCase> _179134_m) {
	if ((*(_179134_m))._field_TypeMatch) {
		_1ac76bbec_checkTypeMatch(_self_, &(_179134_m));
		return;;
	};
	_1ac76bea5_checkCommonMatch(_self_, &(_179134_m));
}



inline void _1ac76c516_checkFall(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac6d643b_FallSt> _179929_f) {
	if (((((*(_self_))._field_cse == 0LLU) || (((*((*(_self_))._field_scope))._field_Stmts.len() + 1LL) < (*((*(_self_))._field_scope))._field_Stmts.len())) || _1ac761285_isDeferred(_self_))) {
		_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_179929_f))._field_Token, jule::Str::lit("fall keyword can only useable at end of the case scopes", 55), jule::Slice<jule::Any>());
		return;;
	};
	_1ac75ad95_Case* _180713_case = ((_1ac75ad95_Case*)((*(_self_))._field_cse));;
	if ((*((*(_180713_case))._field_Owner))._field_Comptime) {
		_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_179929_f))._field_Token, jule::Str::lit("the fall statement is not allowed for comptime-matching", 55), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_180713_case))._field_Next == nullptr)) {
		_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_179929_f))._field_Token, jule::Str::lit("fall cannot useable at final case", 33), jule::Slice<jule::Any>());
		_1ac79ac2b_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("remove \"fall\" keyword", 21), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1ac75b48e_FallSt>(_1ac75b48e_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_180713_case))._field_Next))}), &__jule_any_type48)); };
}



inline jule::Ptr<_1ac7586bc_BreakSt> _1ac76c857_checkBreakWithLabel(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac6dd751_BreakSt> _182239_b) {
	jule::Ptr<_1ac7586bc_BreakSt> _182313_brk = _1ac76cb98_checkPlainBreak(_self_, _182239_b);;
	if ((_182313_brk == nullptr)) {
		return nullptr;;
	};
	(*(_182313_brk))._field_It=0LLU;
	(*(_182313_brk))._field_Mtch=0LLU;
	jule::Ptr<_1ac75be84_scopeLabel> _183313_label = _1ac753640_findLabelParent(&((*((*(_182239_b))._field_Label))._field_Kind), (*(_self_))._field_parent);;
	if ((_183313_label == nullptr)) {
		_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_182239_b))._field_Label, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*((*(_182239_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	(*(_183313_label))._field_used=true;
	if ((((*(_183313_label))._field_pos + 1LL) >= (*((*((*(_183313_label))._field_scope))._field_scope))._field_Stmts.len())) {
		_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_182239_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_182239_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _18469_i = ((*(_183313_label))._field_pos + 1LL);;
	if ((_18469_i >= (*((*((*(_183313_label))._field_scope))._field_scope))._field_Stmts.len())) {
		_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_182239_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_182239_b))._field_Label))._field_Kind, &__jule_any_type4)}));
	} else {
		jule::Any _185017_st = (*((*((*(_183313_label))._field_scope))._field_scope))._field_Stmts[_18469_i];;
		{
			auto &_match_expr{ _185017_st };
			
			if (_match_expr.type == &__jule_any_type36) {
				_case_begin_1bc7a7783:;
				{
					(*(_182313_brk))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_185017_st.cast_ptr<_1ac75705b_InfIter>(&__jule_any_type36)));
				}
			}
			else if (_match_expr.type == &__jule_any_type40) {
				_case_begin_1bc7a7992:;
				{
					(*(_182313_brk))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_185017_st.cast_ptr<_1ac757e5d_RangeIter>(&__jule_any_type40)));
				}
			}
			else if (_match_expr.type == &__jule_any_type38) {
				_case_begin_1bc7a7a08:;
				{
					(*(_182313_brk))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_185017_st.cast_ptr<_1ac757512_WhileIter>(&__jule_any_type38)));
				}
			}
			else if (_match_expr.type == &__jule_any_type47) {
				_case_begin_1bc7a7a6e:;
				{
					(*(_182313_brk))._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_185017_st.cast_ptr<_1ac75a25c_Match>(&__jule_any_type47)));
				}
			}
			else {
				_case_begin_1bc7a792b:;
				{
					_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_182239_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_182239_b))._field_Label))._field_Kind, &__jule_any_type4)}));
				}
			}
			_match_end_1bc7a78c6:;
		};
	};
	if (((*(_182313_brk))._field_It != 0LLU)) {
		if ((!(_1ac767687_checkValidBreakLabel(_self_, (*(_182313_brk))._field_It)))) {
			_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_182239_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_182239_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		};
	};
	if (((*(_182313_brk))._field_Mtch != 0LLU)) {
		if ((!(_1ac767687_checkValidBreakLabel(_self_, (*(_182313_brk))._field_Mtch)))) {
			_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_182239_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_182239_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		};
	};
	return _182313_brk;;
}



inline jule::Ptr<_1ac7586bc_BreakSt> _1ac76cb98_checkPlainBreak(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac6dd751_BreakSt> _188035_b) {
	if (_1ac761285_isDeferred(_self_)) {
		_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_188035_b))._field_Token, jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac75d42a_scopeChecker> _188613_scope = _self_;;
	_julec_label_1bc7b05c1:;
	{
		
		if ((((((*(_188613_scope))._field_it == 0LLU) && ((*(_188613_scope))._field_cse == 0LLU)) && ((*(_188613_scope))._field_parent != nullptr)) && ((*(_188613_scope))._field_owner == nullptr))) {
			_case_begin_1bc7b0879:;
			{
				_188613_scope=(*(_188613_scope))._field_parent;
				goto _julec_label_1bc7b05c1;
			}
		}
		else if (((*(_188613_scope))._field_it != 0LLU)) {
			_case_begin_1bc7b0901:;
			{
				return jule::new_ptr<_1ac7586bc_BreakSt>(_1ac7586bc_BreakSt{._field_It=(*(_188613_scope))._field_it, });;
			}
		}
		else if (((*(_188613_scope))._field_cse != 0LLU)) {
			_case_begin_1bc7b0978:;
			{
				return jule::new_ptr<_1ac7586bc_BreakSt>(_1ac7586bc_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(((_1ac75ad95_Case*)((*(_188613_scope))._field_cse))))._field_Owner))});;
			}
		}
		_match_end_1bc7b07ad:;
	};
	_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_188035_b))._field_Token, jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1ac76ce51_checkBreak(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac6dd751_BreakSt> _190230_b) {
	if (((*(_190230_b))._field_Label != nullptr)) {
		jule::Ptr<_1ac7586bc_BreakSt> _190417_brk = _1ac76c857_checkBreakWithLabel(_self_, _190230_b);;
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_190417_brk, &__jule_any_type49)); };
		return;;
	};
	jule::Ptr<_1ac7586bc_BreakSt> _190913_brk = _1ac76cb98_checkPlainBreak(_self_, _190230_b);;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_190913_brk, &__jule_any_type49)); };
}



inline void _1ac76d209_checkRet(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac6db8c5_RetSt> _191332_r) {
	if (_1ac761285_isDeferred(_self_)) {
		_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_191332_r))._field_Token, jule::Str::lit("deferred scopes are not supports return statements", 50), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ac75b824_RetSt> _191813_rt = jule::new_ptr<_1ac75b824_RetSt>(_1ac75b824_RetSt{._field_Func=(*(_1ac76151b_getRoot(_self_)))._field_owner, });;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_191813_rt, &__jule_any_type50)); };
	jule::Ptr<_1ac81bc47_retTypeChecker> _192313_rtc = jule::new_ptr<_1ac81bc47_retTypeChecker>(_1ac81bc47_retTypeChecker{._field_sc=_self_, ._field_f=(*(_191813_rt))._field_Func, ._field_errorToken=(*(_191332_r))._field_Token, });;
	jule::Bool _19289_ok = _1ac81c95c_check(_192313_rtc.ptr(), &((*(_191332_r))._field_Expr));;
	if ((!(_19289_ok))) {
		return;;
	};
	if (((*(_191332_r))._field_Expr != nullptr)) {
		(*(_191813_rt))._field_Expr=(*(_192313_rtc))._field_model;
	};
}



inline void _1ac76d4b2_checkUseExpr(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac6cd389_UseExpr> _193832_ue) {
	if (((*(_self_))._field_result == nullptr)) {
		_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_193832_ue))._field_Token, jule::Str::lit("use expressions cannot useable out of exceptional handler scopes", 64), jule::Slice<jule::Any>());
		return;;
	};
	if (_1ac761285_isDeferred(_self_)) {
		_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_193832_ue))._field_Token, jule::Str::lit("use expressions cannot useable in deferred scopes", 49), jule::Slice<jule::Any>());
	};
	if ((((*(_self_))._field_i + 1LL) < (*((*(_self_))._field_tree))._field_Stmts.len())) {
		_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_193832_ue))._field_Token, jule::Str::lit("use expressions must be last statement of scope", 47), jule::Slice<jule::Any>());
	};
}



inline void _1ac76d76a_checkNode(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Any* _195434_node) {
	{
		auto &_match_expr{ (*(_195434_node)) };
		
		if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1bc7c0d73:;
			{
				_1ac764134_checkAnonScope(_self_, (*(_195434_node)).cast_ptr<_1ac6d86a2_ScopeTree>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1bc7c13d4:;
			{
				_1ac762929_checkVarDecl(_self_, (*(_195434_node)).cast_ptr<_1ac6db4eb_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1bc7c11d6:;
			{
				_1ac762e8a_checkTypeAliasDecl(_self_, (*(_195434_node)).cast_ptr<_1ac6e019d_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1bc7c1615:;
			{
				_1ac764750_checkExpr(_self_, (*(_195434_node)).cast_ptr<_1ac6cc9b5_Expr>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1bc7c167b:;
			{
				_1ac76518a_checkConditional(_self_, (*(_195434_node)).cast_ptr<_1ac6de961_Conditional>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1bc7c16e2:;
			{
				_1ac767005_checkIter(_self_, (*(_195434_node)).cast_ptr<_1ac6dc145_Iter>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1bc7c1758:;
			{
				_1ac767c81_checkCont(_self_, (*(_195434_node)).cast_ptr<_1ac6ddb2a_ContSt>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1bc7c17be:;
			{
				_1ac768039_checkLabel(_self_, (*(_195434_node)).cast_ptr<_1ac6d5c65_LabelSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1bc7c1835:;
			{
				_1ac7682e2_pushGoto(_self_, (*(_195434_node)).cast_ptr<_1ac6d613e_GotoSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1bc7c189b:;
			{
				_1ac769ee7_checkAssignSt(_self_, (*(_195434_node)).cast_ptr<_1ac6d712e_AssignSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1bc7c1912:;
			{
				_1ac76c25d_checkMatch(_self_, (*(_195434_node)).cast_ptr<_1ac6e0e6d_MatchCase>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1bc7c1978:;
			{
				_1ac76c516_checkFall(_self_, (*(_195434_node)).cast_ptr<_1ac6d643b_FallSt>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1bc7c19de:;
			{
				_1ac76ce51_checkBreak(_self_, (*(_195434_node)).cast_ptr<_1ac6dd751_BreakSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1bc7c1a55:;
			{
				_1ac76d209_checkRet(_self_, (*(_195434_node)).cast_ptr<_1ac6db8c5_RetSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1bc7c1abb:;
			{
				_1ac76d4b2_checkUseExpr(_self_, (*(_195434_node)).cast_ptr<_1ac6cd389_UseExpr>(&__jule_any_type63));
			}
		}
		else {
			_case_begin_1bc7c104e:;
			{
				jule::outln(jule::Str::lit("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1bc7c0ee9:;
	};
}



inline void _1ac76d968_checkResult(jule::Ptr<_1ac75d42a_scopeChecker> _self_) {
	_1ac6d8042_Stmt _199213_stmt = (*((*(_self_))._field_tree))._field_Stmts[((*((*(_self_))._field_tree))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _199213_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1bc7c9e9d:;
			{
				jule::Ptr<_1ac6cd389_UseExpr> _199517_ue = _199213_stmt._field_Data.cast_ptr<_1ac6cd389_UseExpr>(&__jule_any_type63);;
				jule::Ptr<_1ac8243ae_Data> _199617_d = _1ac844313_evalExpr(_1ac7a2d65_eval((*(_self_))._field_s, jule::Trait<_1ac879568_Lookup>(_self_, 0)), (*(_199517_ue))._field_Expr);;
				if ((_199617_d == nullptr)) {
					return;;
				};
				{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_199617_d, &__jule_any_type24)); };
				jule::Ptr<_1ac81bc47_retTypeChecker> _200117_rtc = jule::new_ptr<_1ac81bc47_retTypeChecker>(_1ac81bc47_retTypeChecker{._field_sc=_self_, ._field_types=_1ac71836e_Types((*(_self_))._field_result.ptr()), ._field_errorToken=(*((*(_199517_ue))._field_Expr))._field_Token, });;
				_1ac81c95c_check(_200117_rtc.ptr(), &((*(_199517_ue))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1bc7caa5e:;
			{
				jule::Ptr<_1ac6cc9b5_Expr> _200817_expr = _199213_stmt._field_Data.cast_ptr<_1ac6cc9b5_Expr>(&__jule_any_type52);;
				jule::Ptr<_1ac8243ae_Data> _200917_d = _1ac844313_evalExpr(_1ac7a2d65_eval((*(_self_))._field_s, jule::Trait<_1ac879568_Lookup>(_self_, 0)), _200817_expr);;
				if ((_200917_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ (*(_200917_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1bc7d12d4:;
						{
							jule::Ptr<_1ac70ed16_BuiltinErrorCallExprModel> _201521_m = (*(_200917_d))._field_Model.cast_ptr<_1ac70ed16_BuiltinErrorCallExprModel>(&__jule_any_type23);;
							_1ac764497_processErrorCall(_self_, &(_201521_m), (*(_200817_expr))._field_Token);
							{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_200917_d, &__jule_any_type24)); };
						}
					}
					else {
						_case_begin_1bc7d14e3:;
						{
							return;;
						}
					}
					_match_end_1bc7d148d:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type57 || _match_expr.type == &__jule_any_type61 || _match_expr.type == &__jule_any_type55 || _match_expr.type == &__jule_any_type62) {
			_case_begin_1bc7ca223:;
			{
				_1ac76d76a_checkNode(_self_, &(_199213_stmt._field_Data));
			}
		}
		else {
			_case_begin_1bc7ca1ac:;
			{
				_1ac76d76a_checkNode(_self_, &(_199213_stmt._field_Data));
				return;;
			}
		}
		_match_end_1bc7ca157:;
	};
	(*(_self_))._field_result=nullptr;
}



inline void _1ac76db66_checkTree(jule::Ptr<_1ac75d42a_scopeChecker> _self_) {
	(*(_self_))._field_i=0LL;
	jule::I64 _203713_n = (*((*(_self_))._field_tree))._field_Stmts.len();;
	if (((*(_self_))._field_result != nullptr)) {
		(_203713_n)--;
	};
	for (; ((*(_self_))._field_i < _203713_n); ((*(_self_))._field_i)++) {
		{
			_1ac6d8042_Stmt _204517_stmt = (*((*(_self_))._field_tree))._field_Stmts[(*(_self_))._field_i];;
			_1ac76d76a_checkNode(_self_, &(_204517_stmt._field_Data));
			if (_1ac760eee_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1bc7d5184:;
	}
	_iter_end_1bc7d5184:;;
	if ((((*(_self_))._field_result != nullptr) && ((*((*(_self_))._field_tree))._field_Stmts.len() != 0LL))) {
		_1ac76d968_checkResult(_self_);
	};
}



inline void _1ac76dec9_checkGoto(_1ac75d42a_scopeChecker* _self_, jule::Ptr<_1ac75c517_scopeGoto>* _205633_gt, jule::Ptr<_1ac75be84_scopeLabel>* _205654_label) {
	jule::Ptr<_1ac75d42a_scopeChecker> _205713_gtsc = (*((*(_205633_gt))))._field_scope;;
	while ((((*(_205713_gtsc))._field_childIndex - 1LL) > (*((*((*(_205654_label))))._field_scope))._field_childIndex)) {
		{
			_205713_gtsc=(*(_205713_gtsc))._field_parent;
		}
	_iter_next_1bc7d87e7:;
	}
	_iter_end_1bc7d87e7:;;
	jule::I64 _206213_n = 0LL;;
	if (((*(_205713_gtsc))._field_scope == (*((*((*(_205654_label))))._field_scope))._field_scope)) {
		if (((*((*(_205633_gt))))._field_pos > (*((*(_205654_label))))._field_pos)) {
			return;;
		};
		_206213_n=(*((*(_205633_gt))))._field_pos;
	};
	jule::I64 _207513_i = ((*((*(_205654_label))))._field_pos - 1LL);;
	if ((_206213_n == 0LL)) {
		{
			auto expr = &((*((*((*((*(_205654_label))))._field_scope))._field_scope))._field_Stmts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bc7dc2bd:;
			if (it != expr_end) {
				jule::I64 _207817_j = it - expr->begin();
				jule::Any _207820_stmt = *it;
				{
					if (_1ac753d7c_stmtIsGotoScope(&(_207820_stmt), &((*(_205713_gtsc))._field_scope))) {
						_206213_n=_207817_j;
						goto _iter_end_1bc7dc2bd;
					};
				}
				_iter_next_1bc7dc2bd:;
				++it;
				_207817_j++;
				goto _iter_begin_1bc7dc2bd;
			}
			_iter_end_1bc7dc2bd:;
		};
	};
	for (; (_207513_i >= _206213_n); (_207513_i)--) {
		{
			jule::Any _208817_stmt = (*((*((*((*(_205654_label))))._field_scope))._field_scope))._field_Stmts[_207513_i];;
			if (_1ac755bb4_stmtIsDef(&(_208817_stmt))) {
				_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_205633_gt))))._field_gt))._field_Token, jule::Str::lit("goto @ jumps over declaration(s)", 32), jule::Slice<jule::Any>::make({jule::Any((*((*((*((*(_205633_gt))))._field_gt))._field_Label))._field_Kind, &__jule_any_type4)}));
				return;;
			};
		}
	_iter_next_1bc7dcc5d:;
	}
	_iter_end_1bc7dcc5d:;;
}



inline void _1ac76e1c7_checkGotos(_1ac75d42a_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc7dcaa4:;
		if (it != expr_end) {
			jule::Ptr<_1ac75c517_scopeGoto> _209721_gt = *it;
			{
				jule::Ptr<_1ac75be84_scopeLabel> _209817_label = _1ac762275_findLabelAll(_self_, &((*((*((*(_209721_gt))._field_gt))._field_Label))._field_Kind));;
				if ((_209817_label == nullptr)) {
					_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*(_209721_gt))._field_gt))._field_Token, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_209721_gt))._field_gt))._field_Label))._field_Kind, &__jule_any_type4)}));
					goto _iter_next_1bc7dcaa4;
				};
				(*((*(_209721_gt))._field_st))._field_Label=(*(_209817_label))._field_label;
				(*(_209817_label))._field_used=true;
				_1ac76dec9_checkGoto(_self_, &(_209721_gt), &(_209817_label));
			}
			_iter_next_1bc7dcaa4:;
			++it;
			goto _iter_begin_1bc7dcaa4;
		}
		_iter_end_1bc7dcaa4:;
	};
}



inline void _1ac76e3c5_checkLabels(_1ac75d42a_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc7e3aee:;
		if (it != expr_end) {
			jule::Ptr<_1ac75be84_scopeLabel> _211016_l = *it;
			{
				if ((!((*(_211016_l))._field_used))) {
					_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_211016_l))._field_token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_211016_l))._field_label))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1bc7e3aee:;
			++it;
			goto _iter_begin_1bc7e3aee;
		}
		_iter_end_1bc7e3aee:;
	};
}



inline void _1ac76e5c3_checkVars(_1ac75d42a_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc7e567d:;
		if (it != expr_end) {
			jule::Ptr<_1ac7bb015_Var> _211816_v = *it;
			{
				if (((((!((*(_211816_v))._field_Used)) && (!((*(_211816_v))._field_Constant))) && (!(_1ac6b58c1_IsIgnoreIdent((*(_211816_v))._field_Ident)))) && (!(_1ac6b5b8a_IsAnonIdent((*(_211816_v))._field_Ident))))) {
					_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_211816_v))._field_Token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*(_211816_v))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1bc7e567d:;
			++it;
			goto _iter_begin_1bc7e567d;
		}
		_iter_end_1bc7e567d:;
	};
}



inline void _1ac76e7c1_checkAliases(_1ac75d42a_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc7e7c8a:;
		if (it != expr_end) {
			jule::Ptr<_1ac858c40_TypeAlias> _212616_a = *it;
			{
				if ((((!((*(_212616_a))._field_Used)) && (!(_1ac6b58c1_IsIgnoreIdent((*(_212616_a))._field_Ident)))) && (!(_1ac6b5b8a_IsAnonIdent((*(_212616_a))._field_Ident))))) {
					_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_212616_a))._field_Token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*(_212616_a))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1bc7e7c8a:;
			++it;
			goto _iter_begin_1bc7e7c8a;
		}
		_iter_end_1bc7e7c8a:;
	};
}



inline void _1ac76eb34_check(jule::Ptr<_1ac75d42a_scopeChecker> _self_, jule::Ptr<_1ac6d86a2_ScopeTree>* _213430_tree, jule::Ptr<_1ac756126_Scope>* _213453_s) {
	(*((*(_213453_s))))._field_Deferred=(*((*(_213430_tree))))._field_Deferred;
	(*((*(_213453_s))))._field_Unsafety=(*((*(_213430_tree))))._field_Unsafety;
	jule::I64 _21389_errors = (*((*(_self_))._field_s))._field_errors.len();;
	(*(_self_))._field_tree=(*(_213430_tree));
	(*(_self_))._field_scope=(*(_213453_s));
	_1ac76db66_checkTree(_self_);
	if ((_21389_errors == (*((*(_self_))._field_s))._field_errors.len())) {
		_1ac76e5c3_checkVars(_self_.ptr());
		_1ac76e7c1_checkAliases(_self_.ptr());
		if (_1ac760a6a_isRoot(_self_.ptr())) {
			_1ac76e1c7_checkGotos(_self_.ptr());
			_1ac76e3c5_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_1ac75d42a_scopeChecker> _1ac76edba_newChildChecker(jule::Ptr<_1ac75d42a_scopeChecker> _self_) {
	jule::Ptr<_1ac75d42a_scopeChecker> _215813_base = _1ac752e03_newScopeCheckerBase(&((*(_self_))._field_s), nullptr);;
	(*(_215813_base))._field_parent=_self_;
	(*(_215813_base))._field_labels=(*(_self_))._field_labels;
	(*(_215813_base))._field_gotos=(*(_self_))._field_gotos;
	(*(_215813_base))._field_childIndex=static_cast<jule::I64>(((*(_self_))._field_childIndex + 1LL));
	return _215813_base;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac75d42a_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1ac77186c_checkCdef(_1ac771460_directiveChecker* _self_, jule::Ptr<_1ac6c7a9d_Directive>* _1629_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1bc800a51:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_1ac71426b_Fn>(&__jule_any_type64)))._field_Binded) {
					goto _match_end_1bc800c93;
				};
				goto _case_begin_1bc800ce8;
			}
		}
		else {
			_case_begin_1bc800ce8:;
			{
				_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*(_1629_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_1629_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1bc800c93:;
	};
	if (((*((*(_1629_d))))._field_Args.len() > 0LL)) {
		_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*(_1629_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1ac771b25_checkTypedef(_1ac771460_directiveChecker* _self_, jule::Ptr<_1ac6c7a9d_Directive>* _3232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1bc803889:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_1ac6ee377_Struct>(&__jule_any_type65)))._field_Binded) {
					goto _match_end_1bc803acb;
				};
				goto _case_begin_1bc803b31;
			}
		}
		else {
			_case_begin_1bc803b31:;
			{
				_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*(_3232_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_3232_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1bc803acb:;
	};
	if (((*((*(_3232_d))))._field_Args.len() > 0LL)) {
		_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*(_3232_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1ac771dcd_checkNamespace(_1ac771460_directiveChecker* _self_, jule::Ptr<_1ac6c7a9d_Directive>* _4838_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1bc8066c2:;
			{
				if ((!((*((*(_self_))._field_o.cast_ptr<_1ac6ee377_Struct>(&__jule_any_type65)))._field_Binded))) {
					_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1bc8069d0:;
			{
				if ((!((*((*(_self_))._field_o.cast_ptr<_1ac71426b_Fn>(&__jule_any_type64)))._field_Binded))) {
					_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bc806a46:;
			{
				if ((!((*((*(_self_))._field_o.cast_ptr<_1ac7bb015_Var>(&__jule_any_type8)))._field_Binded))) {
					_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else {
			_case_begin_1bc806969:;
			{
				_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1bc806914:;
	};
	if (((*((*(_4838_d))))._field_Args.len() == 0LL)) {
		_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_4838_d))))._field_Args.len() > 1LL)) {
		_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Args[1LL], jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1ac6b2e62_Token> _739_arg = (*((*(_4838_d))))._field_Args[0LL];;
	if (((*(_739_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), _739_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_739_arg))._field_Kind[0LL] != '\"')) {
		_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), _739_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_4838_d))))._field_Args[0LL]))._field_Kind=(*(_739_arg))._field_Kind.slice(1LL, ((*(_739_arg))._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1bc811e6e:;
			{
				if ((_1ac84cc23_findDirective(&((*((*(_self_))._field_d))), jule::Str::lit("typedef", 7)) == nullptr)) {
					jule::Ptr<_1ac6c7a9d_Directive> _9021_typedef = jule::new_ptr<_1ac6c7a9d_Directive>(_1ac6c7a9d_Directive{._field_Tag=(*((*(_4838_d))))._field_Tag, });;
					(*((*(_9021_typedef))._field_Tag))._field_Kind=jule::Str::lit("typedef", 7);
					{ jule::Slice<jule::Ptr<_1ac6c7a9d_Directive>> &__jule_push_dest = (*((*(_self_))._field_d)); __jule_push_dest.push(_9021_typedef); };
				};
			}
		}
		_match_end_1bc811e19:;
	};
}



inline void _1ac772186_checkDeprecated(_1ac771460_directiveChecker* _self_, jule::Ptr<_1ac6c7a9d_Directive>* _9939_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1bc8132b1:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_1ac6ee377_Struct>(&__jule_any_type65)))._field_Binded) {
					_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1bc8144c1:;
			{
				jule::Ptr<_1ac71426b_Fn> _10617_f = (*(_self_))._field_o.cast_ptr<_1ac71426b_Fn>(&__jule_any_type64);;
				if ((((*(_10617_f))._field_Binded || _1ac714c0b_IsEntryPoint(_10617_f.ptr())) || _1ac714e92_IsInit(_10617_f.ptr()))) {
					_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bc814537:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_1ac7bb015_Var>(&__jule_any_type8)))._field_Binded) {
					_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else {
			_case_begin_1bc813eb5:;
			{
				_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1bc813e60:;
	};
	if (((*((*(_9939_d))))._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*((*(_9939_d))))._field_Args.len() > 1LL)) {
		_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Args[1LL], jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1ac6b2e62_Token> _1259_arg = (*((*(_9939_d))))._field_Args[0LL];;
	if (((*(_1259_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), _1259_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_1259_arg))._field_Kind[0LL] != '\"')) {
		_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), _1259_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_9939_d))))._field_Args[0LL]))._field_Kind=(*(_1259_arg))._field_Kind.slice(1LL, ((*(_1259_arg))._field_Kind.len() - 1LL));
}



inline void _1ac77243e_checkTest(_1ac771460_directiveChecker* _self_, jule::Ptr<_1ac6c7a9d_Directive>* _13929_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1bc81a5b5:;
			{
				jule::Ptr<_1ac71426b_Fn> _14213_f = (*(_self_))._field_o.cast_ptr<_1ac71426b_Fn>(&__jule_any_type64);;
				if ((((!((*(_14213_f))._field_Binded)) && (!(_1ac714e92_IsInit(_14213_f.ptr())))) && (!(_1ac714c0b_IsEntryPoint(_14213_f.ptr()))))) {
					goto _match_end_1bc81ee8d;
				};
				if (_1ac714975_IsMethod(_14213_f.ptr())) {
					_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_14213_f))._field_Token, jule::Str::lit("you cannot declare test methods", 31), jule::Slice<jule::Any>());
					goto _match_end_1bc81ee8d;
				};
				goto _case_begin_1bc81eee3;
			}
		}
		else {
			_case_begin_1bc81eee3:;
			{
				_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*(_13929_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_13929_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1bc81ee8d:;
	};
	if (((*((*(_13929_d))))._field_Args.len() > 0LL)) {
		_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*(_13929_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1ac7726e7_checkDirective(_1ac771460_directiveChecker* _self_, jule::Ptr<_1ac6c7a9d_Directive>* _16038_d) {
	{
		auto &_match_expr{ (*((*((*(_16038_d))))._field_Tag))._field_Kind };
		
		if (_match_expr == jule::Str::lit("cdef", 4)) {
			_case_begin_1bc824ab9:;
			{
				_1ac77186c_checkCdef(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("typedef", 7)) {
			_case_begin_1bc824b30:;
			{
				_1ac771b25_checkTypedef(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("namespace", 9)) {
			_case_begin_1bc824b96:;
			{
				_1ac771dcd_checkNamespace(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("deprecated", 10)) {
			_case_begin_1bc824c0c:;
			{
				_1ac772186_checkDeprecated(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("test", 4)) {
			_case_begin_1bc825c0d:;
			{
				_1ac77243e_checkTest(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("build", 5) || _match_expr == jule::Str::lit("pass", 4)) {
			_case_begin_1bc825c74:;
			{
				_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*(_16038_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_16038_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		else {
			_case_begin_1bc824a53:;
			{
				_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*(_16038_d))))._field_Tag, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_16038_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1bc8249a9:;
	};
}



inline void _1ac7728e5_check(_1ac771460_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc8288ae:;
		if (it != expr_end) {
			jule::Ptr<_1ac6c7a9d_Directive> _18121_d = *it;
			{
				_1ac7726e7_checkDirective(_self_, &(_18121_d));
			}
			_iter_next_1bc8288ae:;
			++it;
			goto _iter_begin_1bc8288ae;
		}
		_iter_end_1bc8288ae:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ac771460_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac77790b_ImportInfo> _1ac777de5_SelectPackage(_1ac77790b_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_1ac77790b_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1ac7bb015_Var> _1ac7782e1_FindVar(_1ac77790b_ImportInfo* _self_, jule::Str _18926_ident, jule::Bool ) {
	if ((!(_1ac779e4c_isLookupable(_self_, &(_18926_ident))))) {
		return nullptr;;
	};
	return _1ac774de2_findVarInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_18926_ident), false);;
}



inline jule::Ptr<_1ac858c40_TypeAlias> _1ac7786dc_FindTypeAlias(_1ac77790b_ImportInfo* _self_, jule::Str _20132_ident, jule::Bool ) {
	if ((!(_1ac779e4c_isLookupable(_self_, &(_20132_ident))))) {
		return nullptr;;
	};
	return _1ac775365_findTypeAliasInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_20132_ident), false);;
}



inline jule::Ptr<_1ac6ee377_Struct> _1ac778ad8_FindStruct(_1ac77790b_ImportInfo* _self_, jule::Str _21329_ident, jule::Bool ) {
	if ((!(_1ac779e4c_isLookupable(_self_, &(_21329_ident))))) {
		return nullptr;;
	};
	return _1ac775794_findStructInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_21329_ident), false);;
}



inline jule::Ptr<_1ac71426b_Fn> _1ac778ed4_FindFn(_1ac77790b_ImportInfo* _self_, jule::Str _22525_ident, jule::Bool ) {
	if ((!(_1ac779e4c_isLookupable(_self_, &(_22525_ident))))) {
		return nullptr;;
	};
	return _1ac775c4a_findFnInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_22525_ident), false);;
}



inline jule::Ptr<_1ac727548_Trait> _1ac779325_FindTrait(_1ac77790b_ImportInfo* _self_, jule::Str _23628_ident) {
	if ((!(_1ac779e4c_isLookupable(_self_, &(_23628_ident))))) {
		return nullptr;;
	};
	return _1ac77608b_findTraitInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_23628_ident));;
}



inline jule::Ptr<_1ac729c54_Enum> _1ac779666_FindEnum(_1ac77790b_ImportInfo* _self_, jule::Str _24727_ident) {
	if ((!(_1ac779e4c_isLookupable(_self_, &(_24727_ident))))) {
		return nullptr;;
	};
	return _1ac776410_findEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_24727_ident));;
}



inline jule::Ptr<_1ac72b45e_TypeEnum> _1ac7799a7_FindTypeEnum(_1ac77790b_ImportInfo* _self_, jule::Str _25831_ident) {
	if ((!(_1ac779e4c_isLookupable(_self_, &(_25831_ident))))) {
		return nullptr;;
	};
	return _1ac776784_findTypeEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_25831_ident));;
}



inline jule::Bool _1ac779e4c_isLookupable(_1ac77790b_ImportInfo* _self_, jule::Str* _26728_ident) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _1ac77a28d_existIdent(_self_, jule::Str::lit("self", 4)))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_1ac77a28d_existIdent(_self_, (*(_26728_ident)))))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _1ac77a28d_existIdent(_1ac77790b_ImportInfo* _self_, jule::Str _28725_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc83dd03:;
		if (it != expr_end) {
			jule::Ptr<_1ac6b2e62_Token> *_28816_sident = it;
			{
				if (((*((*(_28816_sident))))._field_Kind == _28725_ident)) {
					return true;;
				};
			}
			_iter_next_1bc83dd03:;
			++it;
			goto _iter_begin_1bc83dd03;
		}
		_iter_end_1bc83dd03:;
	};
	return false;;
}



inline jule::Bool _1ac77a524_isAccessibleViaSelection(_1ac77790b_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _1ac77a28d_existIdent(_self_, jule::Str::lit("self", 4)));;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac77790b_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac77790b_ImportInfo> _1ac77acc7_SelectPackage(_1ac77a832_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_1ac77790b_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1ac7bb015_Var> _1ac77b1c3_FindVar(_1ac77a832_Package* _self_, jule::Str _31426_ident, jule::Bool _31438_binded) {
	return _1ac774de2_findVarInPackage(&((*(_self_))._field_Files), &(_31426_ident), _31438_binded);;
}



inline jule::Ptr<_1ac858c40_TypeAlias> _1ac77b5be_FindTypeAlias(_1ac77a832_Package* _self_, jule::Str _32032_ident, jule::Bool _32044_binded) {
	return _1ac775365_findTypeAliasInPackage(&((*(_self_))._field_Files), &(_32032_ident), _32044_binded);;
}



inline jule::Ptr<_1ac6ee377_Struct> _1ac77b9ba_FindStruct(_1ac77a832_Package* _self_, jule::Str _32629_ident, jule::Bool _32641_binded) {
	return _1ac775794_findStructInPackage(&((*(_self_))._field_Files), &(_32629_ident), _32641_binded);;
}



inline jule::Ptr<_1ac71426b_Fn> _1ac77bdb6_FindFn(_1ac77a832_Package* _self_, jule::Str _33225_ident, jule::Bool _33237_binded) {
	return _1ac775c4a_findFnInPackage(&((*(_self_))._field_Files), &(_33225_ident), _33237_binded);;
}



inline jule::Ptr<_1ac727548_Trait> _1ac77c207_FindTrait(_1ac77a832_Package* _self_, jule::Str _33828_ident) {
	return _1ac77608b_findTraitInPackage(&((*(_self_))._field_Files), &(_33828_ident));;
}



inline jule::Ptr<_1ac729c54_Enum> _1ac77c548_FindEnum(_1ac77a832_Package* _self_, jule::Str _34427_ident) {
	return _1ac776410_findEnumInPackage(&((*(_self_))._field_Files), &(_34427_ident));;
}



inline jule::Ptr<_1ac72b45e_TypeEnum> _1ac77c889_FindTypeEnum(_1ac77a832_Package* _self_, jule::Str _35031_ident) {
	return _1ac776784_findTypeEnumInPackage(&((*(_self_))._field_Files), &(_35031_ident));;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac77a832_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac73deee_comptimeTypeInfo> _1ac7975b8_pushComptimeTypeInfo(_1ac797156_commonSemaMeta* _self_, jule::Ptr<_1ac859a32_TypeKind>* _21744_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc875e06:;
		if (it != expr_end) {
			jule::Ptr<_1ac73deee_comptimeTypeInfo> _21821_t2 = *it;
			{
				if ((((*((*(_21821_t2))._field_base))._field_BindIdent == (*((*(_21744_t))))._field_BindIdent) && _1ac85a23b_Equal((*(_21821_t2))._field_base, (*(_21744_t))))) {
					return _21821_t2;;
				};
			}
			_iter_next_1bc875e06:;
			++it;
			goto _iter_begin_1bc875e06;
		}
		_iter_end_1bc875e06:;
	};
	jule::Ptr<_1ac73deee_comptimeTypeInfo> _22313_t1 = jule::new_ptr<_1ac73deee_comptimeTypeInfo>(_1ac73deee_comptimeTypeInfo{._field_base=(*(_21744_t))});;
	{ jule::Slice<jule::Ptr<_1ac73deee_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_22313_t1); };
	return _22313_t1;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac797156_commonSemaMeta _Src) {
	_Stream << "commonSemaMeta{";
	_Stream << "comptimeTypeInfos:" << _Src._field_comptimeTypeInfos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac77790b_ImportInfo> _1ac798223_SelectPackage(_1ac797c7d_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_1ac77790b_ImportInfo>)> _24632_selector) {
	return _1ac81e4ec_SelectPackage((*(_self_))._field_file.ptr(), _24632_selector);;
}



inline jule::Ptr<_1ac7bb015_Var> _1ac79861e_FindVar(_1ac797c7d_Sema* _self_, jule::Str _25626_ident, jule::Bool _25638_binded) {
	jule::Ptr<_1ac7bb015_Var> _25813_v = _1ac774de2_findVarInPackage(&((*(_self_))._field_files), &(_25626_ident), _25638_binded);;
	if ((_25813_v != nullptr)) {
		return _25813_v;;
	};
	if ((!(_1ac794d79_IsPub(_25626_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc879e2c:;
		if (it != expr_end) {
			jule::Ptr<_1ac77790b_ImportInfo> _26921_imp = *it;
			{
				if ((!(_1ac795cc0_impIsLookupable(&(_26921_imp), &(_25626_ident))))) {
					goto _iter_next_1bc879e2c;
				};
				_25813_v=_1ac7782e1_FindVar(_26921_imp.ptr(), _25626_ident, _25638_binded);
				if (((_25813_v != nullptr) && _1ac79b127_isAccessibleDefine(_self_, (*(_25813_v))._field_Public, (*(_25813_v))._field_Token))) {
					return _25813_v;;
				};
			}
			_iter_next_1bc879e2c:;
			++it;
			goto _iter_begin_1bc879e2c;
		}
		_iter_end_1bc879e2c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac858c40_TypeAlias> _1ac798a1a_FindTypeAlias(_1ac797c7d_Sema* _self_, jule::Str _28832_ident, jule::Bool _28844_binded) {
	jule::Ptr<_1ac858c40_TypeAlias> _29013_ta = _1ac775365_findTypeAliasInPackage(&((*(_self_))._field_files), &(_28832_ident), _28844_binded);;
	if ((_29013_ta != nullptr)) {
		return _29013_ta;;
	};
	if ((!(_1ac794d79_IsPub(_28832_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc87cd86:;
		if (it != expr_end) {
			jule::Ptr<_1ac77790b_ImportInfo> _30121_imp = *it;
			{
				if ((!(_1ac795cc0_impIsLookupable(&(_30121_imp), &(_28832_ident))))) {
					goto _iter_next_1bc87cd86;
				};
				_29013_ta=_1ac7786dc_FindTypeAlias(_30121_imp.ptr(), _28832_ident, _28844_binded);
				if (((_29013_ta != nullptr) && _1ac79b127_isAccessibleDefine(_self_, (*(_29013_ta))._field_Public, (*(_29013_ta))._field_Token))) {
					return _29013_ta;;
				};
			}
			_iter_next_1bc87cd86:;
			++it;
			goto _iter_begin_1bc87cd86;
		}
		_iter_end_1bc87cd86:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac6ee377_Struct> _1ac798e16_FindStruct(_1ac797c7d_Sema* _self_, jule::Str _32029_ident, jule::Bool _32041_binded) {
	jule::Ptr<_1ac6ee377_Struct> _32213_s = _1ac775794_findStructInPackage(&((*(_self_))._field_files), &(_32029_ident), _32041_binded);;
	if ((_32213_s != nullptr)) {
		return _32213_s;;
	};
	if ((!(_1ac794d79_IsPub(_32029_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc880ce0:;
		if (it != expr_end) {
			jule::Ptr<_1ac77790b_ImportInfo> _33321_imp = *it;
			{
				if ((!(_1ac795cc0_impIsLookupable(&(_33321_imp), &(_32029_ident))))) {
					goto _iter_next_1bc880ce0;
				};
				_32213_s=_1ac778ad8_FindStruct(_33321_imp.ptr(), _32029_ident, _32041_binded);
				if (((_32213_s != nullptr) && _1ac79b127_isAccessibleDefine(_self_, (*(_32213_s))._field_Public, (*(_32213_s))._field_Token))) {
					return _32213_s;;
				};
			}
			_iter_next_1bc880ce0:;
			++it;
			goto _iter_begin_1bc880ce0;
		}
		_iter_end_1bc880ce0:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac71426b_Fn> _1ac799312_FindFn(_1ac797c7d_Sema* _self_, jule::Str _35125_ident, jule::Bool _35137_binded) {
	jule::Ptr<_1ac71426b_Fn> _35313_f = _1ac775c4a_findFnInPackage(&((*(_self_))._field_files), &(_35125_ident), _35137_binded);;
	if ((_35313_f != nullptr)) {
		return _35313_f;;
	};
	if ((!(_1ac794d79_IsPub(_35125_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc883c49:;
		if (it != expr_end) {
			jule::Ptr<_1ac77790b_ImportInfo> _36421_imp = *it;
			{
				if ((!(_1ac795cc0_impIsLookupable(&(_36421_imp), &(_35125_ident))))) {
					goto _iter_next_1bc883c49;
				};
				_35313_f=_1ac778ed4_FindFn(_36421_imp.ptr(), _35125_ident, _35137_binded);
				if (((_35313_f != nullptr) && _1ac79b127_isAccessibleDefine(_self_, (*(_35313_f))._field_Public, (*(_35313_f))._field_Token))) {
					return _35313_f;;
				};
			}
			_iter_next_1bc883c49:;
			++it;
			goto _iter_begin_1bc883c49;
		}
		_iter_end_1bc883c49:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac727548_Trait> _1ac799653_FindTrait(_1ac797c7d_Sema* _self_, jule::Str _38328_ident) {
	jule::Ptr<_1ac727548_Trait> _38513_t = _1ac77608b_findTraitInPackage(&((*(_self_))._field_files), &(_38328_ident));;
	if ((_38513_t != nullptr)) {
		return _38513_t;;
	};
	if ((!(_1ac794d79_IsPub(_38328_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc886950:;
		if (it != expr_end) {
			jule::Ptr<_1ac77790b_ImportInfo> _39621_imp = *it;
			{
				if ((!(_1ac795cc0_impIsLookupable(&(_39621_imp), &(_38328_ident))))) {
					goto _iter_next_1bc886950;
				};
				_38513_t=_1ac779325_FindTrait(_39621_imp.ptr(), _38328_ident);
				if (((_38513_t != nullptr) && _1ac79b127_isAccessibleDefine(_self_, (*(_38513_t))._field_Public, (*(_38513_t))._field_Token))) {
					return _38513_t;;
				};
			}
			_iter_next_1bc886950:;
			++it;
			goto _iter_begin_1bc886950;
		}
		_iter_end_1bc886950:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac729c54_Enum> _1ac799994_FindEnum(_1ac797c7d_Sema* _self_, jule::Str _41527_ident) {
	jule::Ptr<_1ac729c54_Enum> _41713_e = _1ac776410_findEnumInPackage(&((*(_self_))._field_files), &(_41527_ident));;
	if ((_41713_e != nullptr)) {
		return _41713_e;;
	};
	if ((!(_1ac794d79_IsPub(_41527_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc889656:;
		if (it != expr_end) {
			jule::Ptr<_1ac77790b_ImportInfo> _42821_imp = *it;
			{
				if ((!(_1ac795cc0_impIsLookupable(&(_42821_imp), &(_41527_ident))))) {
					goto _iter_next_1bc889656;
				};
				_41713_e=_1ac779666_FindEnum(_42821_imp.ptr(), _41527_ident);
				if (((_41713_e != nullptr) && _1ac79b127_isAccessibleDefine(_self_, (*(_41713_e))._field_Public, (*(_41713_e))._field_Token))) {
					return _41713_e;;
				};
			}
			_iter_next_1bc889656:;
			++it;
			goto _iter_begin_1bc889656;
		}
		_iter_end_1bc889656:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac72b45e_TypeEnum> _1ac799cd5_FindTypeEnum(_1ac797c7d_Sema* _self_, jule::Str _44731_ident) {
	jule::Ptr<_1ac72b45e_TypeEnum> _44913_e = _1ac776784_findTypeEnumInPackage(&((*(_self_))._field_files), &(_44731_ident));;
	if ((_44913_e != nullptr)) {
		return _44913_e;;
	};
	if ((!(_1ac794d79_IsPub(_44731_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc88c35c:;
		if (it != expr_end) {
			jule::Ptr<_1ac77790b_ImportInfo> _46021_imp = *it;
			{
				if ((!(_1ac795cc0_impIsLookupable(&(_46021_imp), &(_44731_ident))))) {
					goto _iter_next_1bc88c35c;
				};
				_44913_e=_1ac7799a7_FindTypeEnum(_46021_imp.ptr(), _44731_ident);
				if (((_44913_e != nullptr) && _1ac79b127_isAccessibleDefine(_self_, (*(_44913_e))._field_Public, (*(_44913_e))._field_Token))) {
					return _44913_e;;
				};
			}
			_iter_next_1bc88c35c:;
			++it;
			goto _iter_begin_1bc88c35c;
		}
		_iter_end_1bc88c35c:;
	};
	return nullptr;;
}



inline jule::Bool _1ac79a1e2_isFlag(_1ac797c7d_Sema* _self_, jule::I64 _47621_flags) {
	return (((*(_self_))._field_flags & _47621_flags) == _47621_flags);;
}



inline void _1ac79a49a_setCurrentFile(_1ac797c7d_Sema* _self_, jule::Ptr<_1ac81e013_SymbolTable> _47837_f) {
	(*(_self_))._field_file=_47837_f;
}



inline void _1ac79a8b8_pushErr(_1ac797c7d_Sema* _self_, jule::Ptr<_1ac6b2e62_Token> _48026_token, jule::Str _48041_fmt, jule::Slice<jule::Any> _48054_args) {
	{ jule::Slice<_1a756d63b_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1ac79594b_compilerErr(&(_48026_token), true, _48041_fmt, _48054_args)); };
}



inline void _1ac79ac2b_pushSuggestion(_1ac797c7d_Sema* _self_, jule::Str _48533_fmt, jule::Slice<jule::Any> _48546_args) {
	{
		_1ac796e7a_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _48533_fmt, _48546_args);
	};
}



inline jule::Bool _1ac79b127_isAccessibleDefine(_1ac797c7d_Sema* _self_, jule::Bool _49033_public, jule::Ptr<_1ac6b2e62_Token> _49047_token) {
	return ((_49033_public || ((*(_49047_token))._field_File == nullptr)) || (_1ac6b8d9c_Dir((*((*(_self_))._field_file))._field_File.ptr()) == _1ac6b8d9c_Dir((*(_49047_token))._field_File.ptr())));;
}



inline jule::Bool _1ac79b5cd_isDuplicatedIdent(_1ac797c7d_Sema* _self_, jule::Uintptr _49732_itself, jule::Str* _49750_ident, jule::Bool _49762_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc893bd2:;
		if (it != expr_end) {
			jule::Ptr<_1ac81e013_SymbolTable> *_49816_f = it;
			{
				if (_1ac822533_isDuplicatedIdent((*(_49816_f)).ptr(), _49732_itself, _49750_ident, _49762_binded)) {
					return true;;
				};
				{
					auto expr = &((*((*(_49816_f))))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc894bd3:;
					if (it != expr_end) {
						jule::Ptr<_1ac77790b_ImportInfo> *_50320_imp = it;
						{
							{
								auto expr = &((*((*(_50320_imp))))._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1bc8955c9:;
								if (it != expr_end) {
									jule::Ptr<_1ac6b2e62_Token> *_50424_selected = it;
									{
										if (((*((*(_50424_selected))))._field_Kind == (*(_49750_ident)))) {
											return true;;
										};
									}
									_iter_next_1bc8955c9:;
									++it;
									goto _iter_begin_1bc8955c9;
								}
								_iter_end_1bc8955c9:;
							};
						}
						_iter_next_1bc894bd3:;
						++it;
						goto _iter_begin_1bc894bd3;
					}
					_iter_end_1bc894bd3:;
				};
			}
			_iter_next_1bc893bd2:;
			++it;
			goto _iter_begin_1bc893bd2;
		}
		_iter_end_1bc893bd2:;
	};
	return false;;
}



inline void _1ac79b941_checkDirectives(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Slice<jule::Ptr<_1ac6c7a9d_Directive>>* _51440_d, jule::Any _51466_o) {
	_1ac771460_directiveChecker _51513_dc = _1ac771460_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1ac6c7a9d_Directive>>>)(_51440_d)), ._field_o=_51466_o};;
	_1ac7728e5_check(&_51513_dc);
}



inline jule::Bool _1ac79bde7_checkGenericQuantity(_1ac797c7d_Sema* _self_, jule::I64 _52339_required, jule::I64 _52354_given, jule::Ptr<_1ac6b2e62_Token> _52366_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_52339_required == 0LL) && (_52354_given > 0LL))) {
			_case_begin_1bc897b4d:;
			{
				_1ac79a8b8_pushErr(_self_, _52366_token, jule::Str::lit("type have not generics but instantiate like generics", 52), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_52339_required > 0LL) && (_52354_given == 0LL))) {
			_case_begin_1bc897bc5:;
			{
				_1ac79a8b8_pushErr(_self_, _52366_token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52339_required < _52354_given)) {
			_case_begin_1bc897c4c:;
			{
				_1ac79a8b8_pushErr(_self_, _52366_token, jule::Str::lit("overflow generics", 17), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52339_required > _52354_given)) {
			_case_begin_1bc897e6c:;
			{
				_1ac79a8b8_pushErr(_self_, _52366_token, jule::Str::lit("missing generics", 16), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1bc897a60:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1bc897994:;
	};
}



inline jule::Bool _1ac79c2e3_isDuplicatedImportSelection(_1ac797c7d_Sema* _self_, jule::Uintptr _54242_itself, jule::Str* _54260_ident) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc89a9ca:;
		if (it != expr_end) {
			jule::Ptr<_1ac77790b_ImportInfo> *_54316_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_54316_imp))) == _54242_itself)) {
					goto _iter_end_1bc89a9ca;
				};
				if (_1ac77a28d_existIdent((*(_54316_imp)).ptr(), (*(_54260_ident)))) {
					return true;;
				};
			}
			_iter_next_1bc89a9ca:;
			++it;
			goto _iter_begin_1bc89a9ca;
		}
		_iter_end_1bc89a9ca:;
	};
	return false;;
}



inline jule::Any _1ac79c6de_getImportDef(_1ac797c7d_Sema* _self_, jule::Str* _55528_ident, jule::Ptr<_1ac77790b_ImportInfo>* _55545_imp) {
	if ((_1ac9417ea_findPackageBuiltinDef(&((*((*(_55545_imp))))._field_LinkPath), _55528_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type3);;
	};
	{
		auto expr = &((*((*((*(_55545_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc89caba:;
		if (it != expr_end) {
			jule::Ptr<_1ac81e013_SymbolTable> _55921_f = *it;
			{
				;
				jule::Any _56217_def = _1ac82207c_defByIdent(_55921_f.ptr(), _55528_ident, false);;
				if ((_56217_def != nullptr)) {
					return _56217_def;;
				};
			}
			_iter_next_1bc89caba:;
			++it;
			goto _iter_begin_1bc89caba;
		}
		_iter_end_1bc89caba:;
	};
	return nullptr;;
}



inline jule::Bool _1bc8a3ebc_checkImportSelection(_1ac797c7d_Sema* _self_, jule::Ptr<_1ac6b2e62_Token>* _57043_ident, jule::Ptr<_1ac7bb015_Var>* _57059_s) {
	if ((!(_1ac79b127_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1ac79a8b8_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1ac79ac2b_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ac776cc3_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1ac79a8b8_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1bc8a8114_checkImportSelection(_1ac797c7d_Sema* _self_, jule::Ptr<_1ac6b2e62_Token>* _57043_ident, jule::Ptr<_1ac858c40_TypeAlias>* _57059_s) {
	if ((!(_1ac79b127_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1ac79a8b8_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1ac79ac2b_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ac776cc3_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1ac79a8b8_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1bc8ac217_checkImportSelection(_1ac797c7d_Sema* _self_, jule::Ptr<_1ac6b2e62_Token>* _57043_ident, jule::Ptr<_1ac6ee377_Struct>* _57059_s) {
	if ((!(_1ac79b127_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1ac79a8b8_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1ac79ac2b_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ac776cc3_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1ac79a8b8_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1bc8b14a2_checkImportSelection(_1ac797c7d_Sema* _self_, jule::Ptr<_1ac6b2e62_Token>* _57043_ident, jule::Ptr<_1ac727548_Trait>* _57059_s) {
	if ((!(_1ac79b127_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1ac79a8b8_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1ac79ac2b_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ac776cc3_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1ac79a8b8_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1bc8b55a5_checkImportSelection(_1ac797c7d_Sema* _self_, jule::Ptr<_1ac6b2e62_Token>* _57043_ident, jule::Ptr<_1ac729c54_Enum>* _57059_s) {
	if ((!(_1ac79b127_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1ac79a8b8_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1ac79ac2b_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ac776cc3_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1ac79a8b8_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1bc8b96a8_checkImportSelection(_1ac797c7d_Sema* _self_, jule::Ptr<_1ac6b2e62_Token>* _57043_ident, jule::Ptr<_1ac72b45e_TypeEnum>* _57059_s) {
	if ((!(_1ac79b127_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1ac79a8b8_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1ac79ac2b_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ac776cc3_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1ac79a8b8_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1bc8bd7ab_checkImportSelection(_1ac797c7d_Sema* _self_, jule::Ptr<_1ac6b2e62_Token>* _57043_ident, jule::Ptr<_1ac71426b_Fn>* _57059_s) {
	if ((!(_1ac79b127_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1ac79a8b8_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1ac79ac2b_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ac776cc3_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1ac79a8b8_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}



inline jule::Bool _1ac79ce2b_checkImportSelectedSelections(_1ac797c7d_Sema* _self_, jule::Ptr<_1ac77790b_ImportInfo>* _58453_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_58453_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc89e76a:;
		if (it != expr_end) {
			jule::Ptr<_1ac6b2e62_Token> _58616_ident = *it;
			{
				if ((*(_58616_ident))._field_Kind.equal("self", 4)) {
					goto _iter_next_1bc89e76a;
				};
				if (_1ac79c2e3_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_58453_imp)))), &((*(_58616_ident))._field_Kind))) {
					_1ac79a8b8_pushErr(_self_, _58616_ident, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_58616_ident))._field_Kind, &__jule_any_type4)}));
					_1ac79ac2b_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1bc89e76a;
				};
				jule::Any _59817_def = _1ac79c6de_getImportDef(_self_, &((*(_58616_ident))._field_Kind), _58453_imp);;
				{
					auto &_match_expr{ _59817_def };
					
					if (_match_expr.type == &__jule_any_type3) {
						_case_begin_1bc8a0815:;
						{
							goto _iter_next_1bc89e76a;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1bc8a2196:;
						{
							jule::Ptr<_1ac7bb015_Var> _60421_v = _59817_def.cast_ptr<_1ac7bb015_Var>(&__jule_any_type8);;
							__jule_func_result=(_1bc8a3ebc_checkImportSelection(_self_, &(_58616_ident), &(_60421_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1bc8a220c:;
						{
							jule::Ptr<_1ac858c40_TypeAlias> _60721_ta = _59817_def.cast_ptr<_1ac858c40_TypeAlias>(&__jule_any_type66);;
							__jule_func_result=(_1bc8a8114_checkImportSelection(_self_, &(_58616_ident), &(_60721_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1bc8a2d45:;
						{
							jule::Ptr<_1ac6ee377_Struct> _61021_s = _59817_def.cast_ptr<_1ac6ee377_Struct>(&__jule_any_type65);;
							__jule_func_result=(_1bc8ac217_checkImportSelection(_self_, &(_58616_ident), &(_61021_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1bc8a2dab:;
						{
							jule::Ptr<_1ac727548_Trait> _61321_t = _59817_def.cast_ptr<_1ac727548_Trait>(&__jule_any_type10);;
							__jule_func_result=(_1bc8b14a2_checkImportSelection(_self_, &(_58616_ident), &(_61321_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type67) {
						_case_begin_1bc8a2e22:;
						{
							jule::Ptr<_1ac729c54_Enum> _61621_e = _59817_def.cast_ptr<_1ac729c54_Enum>(&__jule_any_type67);;
							__jule_func_result=(_1bc8b55a5_checkImportSelection(_self_, &(_58616_ident), &(_61621_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type68) {
						_case_begin_1bc8a2e88:;
						{
							jule::Ptr<_1ac72b45e_TypeEnum> _61921_e = _59817_def.cast_ptr<_1ac72b45e_TypeEnum>(&__jule_any_type68);;
							__jule_func_result=(_1bc8b96a8_checkImportSelection(_self_, &(_58616_ident), &(_61921_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type64) {
						_case_begin_1bc8a2eee:;
						{
							jule::Ptr<_1ac71426b_Fn> _62221_f = _59817_def.cast_ptr<_1ac71426b_Fn>(&__jule_any_type64);;
							__jule_func_result=(_1bc8bd7ab_checkImportSelection(_self_, &(_58616_ident), &(_62221_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_1bc8a2086:;
						{
							_1ac79a8b8_pushErr(_self_, _58616_ident, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_58616_ident))._field_Kind, &__jule_any_type4)}));
							__jule_func_result=false;
							goto _iter_next_1bc89e76a;
						}
					}
					_match_end_1bc8a1b68:;
				};
			}
			_iter_next_1bc89e76a:;
			++it;
			goto _iter_begin_1bc89e76a;
		}
		_iter_end_1bc89e76a:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1bc8c2e86_checkImportsAllSelectionsFromCollection(_1ac797c7d_Sema* _self_, jule::Slice<jule::Ptr<_1ac7bb015_Var>>* _63362_s, jule::Ptr<_1ac6b2e62_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc8c4ad1:;
		if (it != expr_end) {
			jule::Ptr<_1ac7bb015_Var> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1bc8a3ebc_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1bc8c4ad1:;
			++it;
			goto _iter_begin_1bc8c4ad1;
		}
		_iter_end_1bc8c4ad1:;
	};
	return _63413_ok;;
}

inline jule::Bool _1bc8c411e_checkImportsAllSelectionsFromCollection(_1ac797c7d_Sema* _self_, jule::Slice<jule::Ptr<_1ac858c40_TypeAlias>>* _63362_s, jule::Ptr<_1ac6b2e62_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc8c7342:;
		if (it != expr_end) {
			jule::Ptr<_1ac858c40_TypeAlias> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1bc8a8114_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1bc8c7342:;
			++it;
			goto _iter_begin_1bc8c7342;
		}
		_iter_end_1bc8c7342:;
	};
	return _63413_ok;;
}

inline jule::Bool _1bc8c68c4_checkImportsAllSelectionsFromCollection(_1ac797c7d_Sema* _self_, jule::Slice<jule::Ptr<_1ac6ee377_Struct>>* _63362_s, jule::Ptr<_1ac6b2e62_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc8c9a92:;
		if (it != expr_end) {
			jule::Ptr<_1ac6ee377_Struct> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1bc8ac217_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1bc8c9a92:;
			++it;
			goto _iter_begin_1bc8c9a92;
		}
		_iter_end_1bc8c9a92:;
	};
	return _63413_ok;;
}

inline jule::Bool _1bc8c9124_checkImportsAllSelectionsFromCollection(_1ac797c7d_Sema* _self_, jule::Slice<jule::Ptr<_1ac71426b_Fn>>* _63362_s, jule::Ptr<_1ac6b2e62_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc8cc314:;
		if (it != expr_end) {
			jule::Ptr<_1ac71426b_Fn> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1bc8bd7ab_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1bc8cc314:;
			++it;
			goto _iter_begin_1bc8cc314;
		}
		_iter_end_1bc8cc314:;
	};
	return _63413_ok;;
}

inline jule::Bool _1bc8cb81e_checkImportsAllSelectionsFromCollection(_1ac797c7d_Sema* _self_, jule::Slice<jule::Ptr<_1ac727548_Trait>>* _63362_s, jule::Ptr<_1ac6b2e62_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc8cea20:;
		if (it != expr_end) {
			jule::Ptr<_1ac727548_Trait> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1bc8b14a2_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1bc8cea20:;
			++it;
			goto _iter_begin_1bc8cea20;
		}
		_iter_end_1bc8cea20:;
	};
	return _63413_ok;;
}

inline jule::Bool _1bc8ce0e6_checkImportsAllSelectionsFromCollection(_1ac797c7d_Sema* _self_, jule::Slice<jule::Ptr<_1ac729c54_Enum>>* _63362_s, jule::Ptr<_1ac6b2e62_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc8d222b:;
		if (it != expr_end) {
			jule::Ptr<_1ac729c54_Enum> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1bc8b55a5_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1bc8d222b:;
			++it;
			goto _iter_begin_1bc8d222b;
		}
		_iter_end_1bc8d222b:;
	};
	return _63413_ok;;
}

inline jule::Bool _1bc8d1802_checkImportsAllSelectionsFromCollection(_1ac797c7d_Sema* _self_, jule::Slice<jule::Ptr<_1ac72b45e_TypeEnum>>* _63362_s, jule::Ptr<_1ac6b2e62_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc8d49c0:;
		if (it != expr_end) {
			jule::Ptr<_1ac72b45e_TypeEnum> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1bc8b96a8_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1bc8d49c0:;
			++it;
			goto _iter_begin_1bc8d49c0;
		}
		_iter_end_1bc8d49c0:;
	};
	return _63413_ok;;
}



inline jule::Bool _1ac79d668_checkImportAllSelections(_1ac797c7d_Sema* _self_, jule::Ptr<_1ac77790b_ImportInfo>* _64344_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*((*(_64344_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc89ebbb:;
		if (it != expr_end) {
			jule::Ptr<_1ac81e013_SymbolTable> *_64516_file = it;
			{
				__jule_func_result=(_1bc8c2e86_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Vars), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1bc8c411e_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_TypeAliases), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1bc8c68c4_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Structs), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1bc8c9124_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Funcs), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1bc8cb81e_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Traits), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1bc8ce0e6_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Enums), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1bc8d1802_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_TypeEnums), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
			}
			_iter_next_1bc89ebbb:;
			++it;
			goto _iter_begin_1bc89ebbb;
		}
		_iter_end_1bc89ebbb:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ac79d9a9_checkImportSelections(_1ac797c7d_Sema* _self_, jule::Ptr<_1ac77790b_ImportInfo>* _65745_imp) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_65745_imp))))._field_Selected.len() > 0LL)) {
		__jule_func_result = _1ac79ce2b_checkImportSelectedSelections(_self_, _65745_imp);
		return __jule_func_result;;
	} else if ((*((*(_65745_imp))))._field_ImportAll) {
		__jule_func_result = _1ac79d668_checkImportAllSelections(_self_, _65745_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ac79dcea_isUseAliasDuplication(_1ac797c7d_Sema* _self_, jule::Ptr<_1ac77790b_ImportInfo>* _66641_imp) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc8d6c36:;
		if (it != expr_end) {
			jule::Ptr<_1ac77790b_ImportInfo> _66721_imp2 = *it;
			{
				if ((_66721_imp2 == (*(_66641_imp)))) {
					goto _iter_end_1bc8d6c36;
				};
				if (((*(_66721_imp2))._field_Alias == (*((*(_66641_imp))))._field_Alias)) {
					return true;;
				};
				if ((((*(_66721_imp2))._field_Ident == (*(_66721_imp2))._field_LinkPath) && ((*(_66721_imp2))._field_Ident == (*((*(_66641_imp))))._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1bc8d6c36:;
			++it;
			goto _iter_begin_1bc8d6c36;
		}
		_iter_end_1bc8d6c36:;
	};
	return false;;
}



inline jule::Bool _1ac79e13b_checkImport(_1ac797c7d_Sema* _self_, jule::Ptr<_1ac77790b_ImportInfo>* _68235_imp) {
	if (((*((*(_68235_imp))))._field_Binded || ((*((*((*(_68235_imp))))._field_Package))._field_Files.len() == 0LL))) {
		return true;;
	};
	if ((*((*(_68235_imp))))._field_LinkPath.equal("std::unsafe", 11)) {
		if ((((*((*(_68235_imp))))._field_ImportAll || !((*((*(_68235_imp))))._field_Alias).empty()) || ((*((*(_68235_imp))))._field_Selected.len() > 0LL))) {
			_1ac79a8b8_pushErr(_self_, (*((*(_68235_imp))))._field_Token, jule::Str::lit("expected plain use declaration for this package like: @", 55), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("use std::unsafe", 15), &__jule_any_type4)}));
			return false;;
		};
	};
	if (((*((*(_68235_imp))))._field_Alias.len() != 0LL)) {
		if (_1ac6b58c1_IsIgnoreIdent((*((*(_68235_imp))))._field_Alias)) {
			_1ac79a8b8_pushErr(_self_, (*((*(_68235_imp))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		} else if (_1ac79dcea_isUseAliasDuplication(_self_, _68235_imp)) {
			_1ac79a8b8_pushErr(_self_, (*((*(_68235_imp))))._field_Token, jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75), jule::Slice<jule::Any>::make({jule::Any((*((*(_68235_imp))))._field_Alias, &__jule_any_type4)}));
			_1ac79ac2b_pushSuggestion(_self_, jule::Str::lit("rename alias for this use declaration to avoid duplication", 58), jule::Slice<jule::Any>());
		};
	};
	if ((!((*((*(_68235_imp))))._field_Duplicate))) {
		jule::Ptr<_1ac797c7d_Sema> _70517_sema = jule::new_ptr<_1ac797c7d_Sema>(_1ac797c7d_Sema{._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_1ac7b751c_check(_70517_sema, &((*((*((*(_68235_imp))))._field_Package))._field_Files));
		if (((*(_70517_sema))._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append((*(_70517_sema))._field_errors);;
			(*(_70517_sema))._field_errors=nullptr;
			return false;;
		};
	};
	return _1ac79d9a9_checkImportSelections(_self_, _68235_imp);;
}



inline void _1ac79e339_checkImports(_1ac797c7d_Sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc8e0e82:;
		if (it != expr_end) {
			jule::Ptr<_1ac81e013_SymbolTable> _72021_file = *it;
			{
				_1ac79a49a_setCurrentFile(_self_, _72021_file);
				{
					auto expr = &((*(_72021_file))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc8e1cb8:;
					if (it != expr_end) {
						jule::Ptr<_1ac77790b_ImportInfo> _72225_imp = *it;
						{
							jule::Bool _72317_ok = _1ac79e13b_checkImport(_self_, &(_72225_imp));;
							if ((!(_72317_ok))) {
								return;;
							};
						}
						_iter_next_1bc8e1cb8:;
						++it;
						goto _iter_begin_1bc8e1cb8;
					}
					_iter_end_1bc8e1cb8:;
				};
			}
			_iter_next_1bc8e0e82:;
			++it;
			goto _iter_begin_1bc8e0e82;
		}
		_iter_end_1bc8e0e82:;
	};
}



inline void _1ac79e537_implFileImpls(jule::Ptr<_1ac797c7d_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc8e1603:;
		if (it != expr_end) {
			jule::Ptr<_1ac750bc0_Impl> _73321_imp = *it;
			{
				_1ac7adac9_implImpl(_self_, &(_73321_imp));
			}
			_iter_next_1bc8e1603:;
			++it;
			goto _iter_begin_1bc8e1603;
		}
		_iter_end_1bc8e1603:;
	};
}



inline void _1ac79e735_implImpls(jule::Ptr<_1ac797c7d_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc8e3b66:;
		if (it != expr_end) {
			jule::Ptr<_1ac81e013_SymbolTable> _73921_file = *it;
			{
				_1ac79a49a_setCurrentFile(_self_.ptr(), _73921_file);
				_1ac79e537_implFileImpls(_self_);
			}
			_iter_next_1bc8e3b66:;
			++it;
			goto _iter_begin_1bc8e3b66;
		}
		_iter_end_1bc8e3b66:;
	};
}



inline void _1ac79e933_checkEnums(jule::Ptr<_1ac797c7d_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc8e4c33:;
		if (it != expr_end) {
			jule::Ptr<_1ac81e013_SymbolTable> _74621_file = *it;
			{
				_1ac79a49a_setCurrentFile(_self_.ptr(), _74621_file);
				{
					
					if ((!(_1ac7aa015_checkEnumDecls(_self_)))) {
						_case_begin_1bc8e5915:;
					}
					else if ((!(_1ac7aa29b_checkTypeEnumDecls(_self_)))) {
						_case_begin_1bc8e598c:;
					}
					_match_end_1bc8e586b:;
				};
			}
			_iter_next_1bc8e4c33:;
			++it;
			goto _iter_begin_1bc8e4c33;
		}
		_iter_end_1bc8e4c33:;
	};
}



inline void _1ac79eb31_checkFileInherits(jule::Ptr<_1ac797c7d_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc8e67b2:;
		if (it != expr_end) {
			jule::Ptr<_1ac727548_Trait> _75621_t = *it;
			{
				jule::Bool _75713_ok = _1ac7abb60__checkTraitDeclInherits(_self_, &(_75621_t));;
				if ((!(_75713_ok))) {
					return;;
				};
			}
			_iter_next_1bc8e67b2:;
			++it;
			goto _iter_begin_1bc8e67b2;
		}
		_iter_end_1bc8e67b2:;
	};
}



inline void _1ac79ed2e_checkInherits(jule::Ptr<_1ac797c7d_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc8e7b15:;
		if (it != expr_end) {
			jule::Ptr<_1ac81e013_SymbolTable> _76521_file = *it;
			{
				_1ac79a49a_setCurrentFile(_self_.ptr(), _76521_file);
				_1ac79eb31_checkFileInherits(_self_);
			}
			_iter_next_1bc8e7b15:;
			++it;
			goto _iter_begin_1bc8e7b15;
		}
		_iter_end_1bc8e7b15:;
	};
}



inline _1ac86b8e0_typeChecker _1ac7a02d5_typeChecker(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Trait<_1ac879568_Lookup> _77135_l, jule::Slice<jule::Ptr<_1ac858c40_TypeAlias>> _77150_generics, jule::Ptr<_1ac86a900_referencer> _77213_referencer) {
	_1ac86b8e0_typeChecker _77313_tc = _1ac86b8e0_typeChecker{._field_s=_self_, ._field_rootLookup=_77135_l, ._field_lookup=_77135_l, ._field_referencer=_77213_referencer, ._field_useGenerics=_77150_generics, };;
	{
		auto &_match_expr{ _77135_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1bc8e9a07:;
			{
				jule::Ptr<_1ac75d42a_scopeChecker> _78217_hard = _1ac7617a2_getHardRoot(_77135_l.cast_ptr<_1ac75d42a_scopeChecker>(0));;
				_77313_tc._field_refers=(*((*(_78217_hard))._field_owner))._field_Refers;
			}
		}
		_match_end_1bc8e9908:;
	};
	if (((_77213_referencer != nullptr) && ((*(_77213_referencer))._field_refs != nullptr))) {
		{
			auto &_match_expr{ (*(_77213_referencer))._field_owner };
			
			if (_match_expr.type == &__jule_any_type66) {
				_case_begin_1bc8eb322:;
				{
					_77313_tc._field_ownerAlias=(*(_77213_referencer))._field_owner.cast_ptr<_1ac858c40_TypeAlias>(&__jule_any_type66);
				}
			}
			_match_end_1bc8eb2bc:;
		};
	};
	return _77313_tc;;
}



inline jule::Ptr<_1ac859a32_TypeKind> _1ac7a0846_buildTypeWithRefers(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac6c8681_TypeDecl>* _79844_t, jule::Trait<_1ac879568_Lookup> _79867_l, jule::Slice<jule::Ptr<_1ac858c40_TypeAlias>> _79913_generics, jule::Ptr<_1ac86a900_referencer> _79941_referencer) {
	return ({ auto _wrap_copy = _1ac7a02d5_typeChecker(_self_, _79867_l, _79913_generics, _79941_referencer); _1ac87408a_checkDecl(&_wrap_copy, _79844_t); });;
}



inline jule::Bool _1ac7a0da7_checkTypeWithRefers(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac861c04_TypeSymbol>* _80544_t, jule::Trait<_1ac879568_Lookup> _80564_l, jule::Slice<jule::Ptr<_1ac858c40_TypeAlias>> _80613_generics, jule::Ptr<_1ac86a900_referencer> _80641_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1ac862078_checked((*(_80544_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_80544_t))))._field_Kind=_1ac7a0846_buildTypeWithRefers(_self_, &((*((*(_80544_t))))._field_Decl), _80564_l, _80613_generics, _80641_referencer);
	__jule_func_result = _1ac862078_checked((*(_80544_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1ac74d86b_constraintChecker> _1ac7a113d_constraintChecker(jule::Ptr<_1ac797c7d_Sema> _self_) {
	return jule::new_ptr<_1ac74d86b_constraintChecker>(_1ac74d86b_constraintChecker{._field_s=_self_, });;
}



inline jule::Bool _1ac7a1539_checkType(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac861c04_TypeSymbol>* _82034_t, jule::Trait<_1ac879568_Lookup> _82054_l) {
	return _1ac7a0da7_checkTypeWithRefers(_self_, _82034_t, _82054_l, nullptr, nullptr);;
}



inline jule::Ptr<_1ac859a32_TypeKind> _1ac7a19e0_buildTypeWithGenerics(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac6c8681_TypeDecl>* _82646_t, jule::Slice<jule::Ptr<_1ac858c40_TypeAlias>> _82713_generics, jule::Ptr<_1ac71a33d_ReferenceStack> _82741_refers) {
	jule::Ptr<_1ac86b8e0_typeChecker> _82813_tc = jule::new_ptr<_1ac86b8e0_typeChecker>(_1ac86b8e0_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1ac879568_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1ac879568_Lookup>(_self_, 3), ._field_refers=_82741_refers, ._field_useGenerics=_82713_generics, });;
	return _1ac87408a_checkDecl(_82813_tc.ptr(), _82646_t);;
}



inline jule::Ptr<_1ac859a32_TypeKind> _1ac7a2172_selectType(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac6c8681_TypeDecl>* _84435_t) {
	jule::Ptr<_1ac86b8e0_typeChecker> _84513_tc = jule::new_ptr<_1ac86b8e0_typeChecker>(_1ac86b8e0_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1ac879568_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1ac879568_Lookup>(_self_, 3), ._field_selection=true, });;
	return _1ac87408a_checkDecl(_84513_tc.ptr(), _84435_t);;
}



inline jule::Ptr<_1ac8260a3_Eval> _1ac7a2628_evalpd(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Trait<_1ac879568_Lookup> _85630_l, jule::Ptr<_1ac859a32_TypeKind> _85645_p, jule::Ptr<_1ac7bb015_Var> _85663_owner) {
	jule::Ptr<_1ac8260a3_Eval> _85713_e = jule::new_ptr<_1ac8260a3_Eval>(_1ac8260a3_Eval{._field_s=_self_, ._field_lookup=_85630_l, ._field_owner=_85663_owner, });;
	{
		auto &_match_expr{ _85630_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1bc90568e:;
			{
				(*(_85713_e))._field_unsafety=_1ac7607d4_isUnsafe(_85630_l.cast_ptr<_1ac75d42a_scopeChecker>(0));
			}
		}
		_match_end_1bc905639:;
	};
	(*(_85713_e))._field_prefix=_85645_p;
	return _85713_e;;
}



inline jule::Ptr<_1ac8260a3_Eval> _1ac7a2a24_evalp(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Trait<_1ac879568_Lookup> _87129_l, jule::Ptr<_1ac859a32_TypeKind> _87144_p) {
	return _1ac7a2628_evalpd(_self_, _87129_l, _87144_p, nullptr);;
}



inline jule::Ptr<_1ac8260a3_Eval> _1ac7a2d65_eval(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Trait<_1ac879568_Lookup> _87628_l) {
	return _1ac7a2a24_evalp(_self_, _87628_l, nullptr);;
}



inline jule::Bool _1ac7a33c6_checkAssignType(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Bool _88035_destIsRef, jule::Ptr<_1ac859a32_TypeKind>* _88057_dest, jule::Ptr<_1ac8243ae_Data>* _88114_d, jule::Ptr<_1ac6b2e62_Token> _88128_errorToken) {
	if ((*((*(_88114_d))))._field_Decl) {
		_1ac79a8b8_pushErr(_self_.ptr(), _88128_errorToken, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return false;;
	};
	if (_88035_destIsRef) {
		if ((!(_1ac85a23b_Equal((*(_88057_dest)), (*((*(_88114_d))))._field_Kind)))) {
			_1ac79a8b8_pushErr(_self_.ptr(), _88128_errorToken, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_88057_dest)).ptr()), &__jule_any_type4),jule::Any(_1ac859dea_Str((*((*(_88114_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
	} else {
		jule::Ptr<_1ac80d08a_assignTypeChecker> _89217_atc = jule::new_ptr<_1ac80d08a_assignTypeChecker>(_1ac80d08a_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_88057_dest)), ._field_d=(*(_88114_d)), ._field_errorToken=_88128_errorToken});;
		jule::Bool _89813_ok = _1ac80e058_check(_89217_atc.ptr());;
		if ((!(_89813_ok))) {
			return false;;
		};
	};
	if (((!(_1ac824c83_IsConst((*(_88114_d)).ptr()))) || (_1ac85c183_Prim((*(_88057_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _90813_kind = (*(_1ac85c183_Prim((*(_88057_dest)).ptr())))._field_Kind;;
	{
		
		if (_1a6cdd609_IsSigInt(_90813_kind)) {
			_case_begin_1bc90cdb1:;
			{
				_1a6ce2850_SetI64((*((*(_88114_d))))._field_Constant.ptr(), static_cast<jule::I64>(_1a6ce207a_AsI64((*((*(_88114_d))))._field_Constant.ptr())));
			}
		}
		else if (_1a6cdd917_IsUnsigInt(_90813_kind)) {
			_case_begin_1bc90ce38:;
			{
				_1a6ce2b08_SetU64((*((*(_88114_d))))._field_Constant.ptr(), static_cast<jule::U64>(_1a6ce2311_AsU64((*((*(_88114_d))))._field_Constant.ptr())));
			}
		}
		else if (_1a6cde022_IsFloat(_90813_kind)) {
			_case_begin_1bc90ceb0:;
			{
				_1a6ce3422_SetF64((*((*(_88114_d))))._field_Constant.ptr(), static_cast<jule::F64>(_1a6ce2597_AsF64((*((*(_88114_d))))._field_Constant.ptr())));
			}
		}
		_match_end_1bc90cce5:;
	};
	return true;;
}



inline jule::Bool _1ac7a387c__checkTypeCompatibility(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac859a32_TypeKind>* _92248_dest, jule::Ptr<_1ac859a32_TypeKind>* _92270_src, jule::Ptr<_1ac6b2e62_Token> _92313_errorToken) {
	if (((*(_92270_src)) == nullptr)) {
		return false;;
	};
	if ((_1ac85dea9_Tup((*(_92270_src)).ptr()) != nullptr)) {
		return false;;
	};
	_1ac80b2db_typeCompatibilityChecker _93113_tcc = _1ac80b2db_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_92248_dest)), ._field_src=(*(_92270_src)), ._field_errorToken=_92313_errorToken};;
	return _1ac80c9a2_check(&_93113_tcc);;
}



inline jule::Bool _1ac7a3d33_checkTypeCompatibility(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac859a32_TypeKind>* _94047_dest, jule::Ptr<_1ac859a32_TypeKind>* _94114_src, jule::Ptr<_1ac6b2e62_Token>* _94135_errorToken) {
	if (_1ac7a387c__checkTypeCompatibility(_self_, _94047_dest, _94114_src, (*(_94135_errorToken)))) {
		return true;;
	};
	_1ac79a8b8_pushErr(_self_.ptr(), (*(_94135_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_94047_dest)).ptr()), &__jule_any_type4),jule::Any(_1ac859dea_Str((*(_94114_src)).ptr()), &__jule_any_type4)}));
	return false;;
}



inline void _1ac7a4251_pushCompatiblityError(_1ac797c7d_Sema* _self_, jule::Ptr<_1ac859a32_TypeKind>* _94945_dest, jule::Ptr<_1ac8243ae_Data>* _94967_src, jule::Ptr<_1ac6b2e62_Token>* _95014_errorToken) {
	if ((*((*(_94967_src))))._field_untyped) {
		{
			
			if (_1a6ce38a6_IsI64((*((*(_94967_src))))._field_Constant.ptr())) {
				_case_begin_1bc915407:;
				{
					_1ac79a8b8_pushErr(_self_, (*(_95014_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_94945_dest)).ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("untyped integer", 15), &__jule_any_type4)}));
					return;;
				}
			}
			else if (_1a6ce3b3c_IsU64((*((*(_94967_src))))._field_Constant.ptr())) {
				_case_begin_1bc91547e:;
				{
					_1ac79a8b8_pushErr(_self_, (*(_95014_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_94945_dest)).ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("untyped unsigned integer", 24), &__jule_any_type4)}));
					return;;
				}
			}
			else if (_1a6ce43e0_IsF64((*((*(_94967_src))))._field_Constant.ptr())) {
				_case_begin_1bc915506:;
				{
					_1ac79a8b8_pushErr(_self_, (*(_95014_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_94945_dest)).ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("untyped float", 13), &__jule_any_type4)}));
					return;;
				}
			}
			_match_end_1bc9152d6:;
		};
	};
	_1ac79a8b8_pushErr(_self_, (*(_95014_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_94945_dest)).ptr()), &__jule_any_type4),jule::Any(_1ac859dea_Str((*((*(_94967_src))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Bool _1ac7a4707_checkTypeCompatibility1(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac859a32_TypeKind>* _96748_dest, jule::Ptr<_1ac8243ae_Data>* _96770_src, jule::Ptr<_1ac6b2e62_Token>* _96814_errorToken) {
	if (_1ac7a387c__checkTypeCompatibility(_self_, _96748_dest, &((*((*(_96770_src))))._field_Kind), (*(_96814_errorToken)))) {
		return true;;
	};
	_1ac7a4251_pushCompatiblityError(_self_.ptr(), _96748_dest, _96770_src, _96814_errorToken);
	return false;;
}



inline jule::Ptr<_1ac859a32_TypeKind> _1ac7a4bad_buildNonGenericTypeKind(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac6c8681_TypeDecl>* _98248_ast, jule::Slice<jule::Ptr<_1ac6d588b_GenericDecl>>* _98314_generics, jule::Slice<jule::Ptr<_1ac859a32_TypeKind>>* _98350_ignored) {
	jule::Ptr<_1ac86b8e0_typeChecker> _98413_tc = jule::new_ptr<_1ac86b8e0_typeChecker>(_1ac86b8e0_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1ac879568_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1ac879568_Lookup>(_self_, 3), ._field_ignoreGenerics=(*(_98314_generics)), ._field_ignoredGenerics=_98350_ignored, });;
	return _1ac87408a_checkDecl(_98413_tc.ptr(), _98248_ast);;
}



inline jule::Bool _1ac7a50a9_buildFnNonGenericTypeKinds(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac717170_FnIns>* _99451_f, jule::Slice<jule::Ptr<_1ac859a32_TypeKind>>* _99467_ignored) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Slice<jule::Ptr<_1ac6d588b_GenericDecl>> _99617_generics = nullptr;;
	if (_1ac714975_IsMethod((*((*(_99451_f))))._field_Decl.ptr())) {
		_99617_generics=jule::append((*((*((*(_99451_f))))._field_Decl))._field_Generics,(*((*((*((*(_99451_f))))._field_Decl))._field_Owner))._field_Generics);
	} else {
		_99617_generics=(*((*((*(_99451_f))))._field_Decl))._field_Generics;
	};
	{
		auto expr = &((*((*(_99451_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc91d6b8:;
		if (it != expr_end) {
			jule::Ptr<_1ac7161c4_ParamIns> _100321_p = *it;
			{
				if ((!(_1ac712db3_IsSelf((*(_100321_p))._field_Decl.ptr())))) {
					(*(_100321_p))._field_Kind=_1ac7a4bad_buildNonGenericTypeKind(_self_, &((*((*((*(_100321_p))._field_Decl))._field_Kind))._field_Decl), &(_99617_generics), _99467_ignored);
					__jule_func_result=(__jule_func_result && ((*(_100321_p))._field_Kind != nullptr));
				};
			}
			_iter_next_1bc91d6b8:;
			++it;
			goto _iter_begin_1bc91d6b8;
		}
		_iter_end_1bc91d6b8:;
	};
	if ((!(_1ac7146de_IsVoid((*((*(_99451_f))))._field_Decl.ptr())))) {
		(*((*(_99451_f))))._field_Result=_1ac7a4bad_buildNonGenericTypeKind(_self_, &((*((*((*((*((*(_99451_f))))._field_Decl))._field_Result))._field_Kind))._field_Decl), &(_99617_generics), _99467_ignored);
		__jule_func_result=(__jule_func_result && ((*((*(_99451_f))))._field_Result != nullptr));
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1ac717170_FnIns> _1ac7a53ea_getTraitCheckFnKind(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac71426b_Fn>* _101644_f) {
	if (((*((*(_101644_f))))._field_Instances.len() == 1LL)) {
		return (*((*(_101644_f))))._field_Instances[0LL];;
	};
	jule::Ptr<_1ac717170_FnIns> _102013_ins = _1ac715745_instanceForce((*(_101644_f)));;
	jule::Ptr<_1ac86b8e0_typeChecker> _102213_tc = jule::new_ptr<_1ac86b8e0_typeChecker>(_1ac86b8e0_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1ac879568_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1ac879568_Lookup>(_self_, 3), });;
	{
		auto expr = &((*(_102013_ins))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc925406:;
		if (it != expr_end) {
			jule::Ptr<_1ac7161c4_ParamIns> _102721_p = *it;
			{
				if ((!(_1ac712db3_IsSelf((*(_102721_p))._field_Decl.ptr())))) {
					(*(_102721_p))._field_Kind=_1ac87408a_checkDecl(_102213_tc.ptr(), &((*((*((*(_102721_p))._field_Decl))._field_Kind))._field_Decl));
				};
			}
			_iter_next_1bc925406:;
			++it;
			goto _iter_begin_1bc925406;
		}
		_iter_end_1bc925406:;
	};
	if ((!(_1ac7146de_IsVoid((*(_101644_f)).ptr())))) {
		(*(_102013_ins))._field_Result=_1ac87408a_checkDecl(_102213_tc.ptr(), &((*((*((*((*(_101644_f))))._field_Result))._field_Kind))._field_Decl));
	};
	return _102013_ins;;
}



inline jule::Bool _1ac7a58a1_checkConstraintsFn(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac717170_FnIns>* _103943_f, jule::Ptr<_1ac6b2e62_Token>* _103959_et, jule::Ptr<_1ac717170_FnIns> _103975_exist) {
	jule::Ptr<_1ac74d86b_constraintChecker> _104013_cc = _1ac7a113d_constraintChecker(_self_);;
	(*(_104013_cc))._field_et=(*(_103959_et));
	(*(_104013_cc))._field_fi=(*(_103943_f));
	if ((_103975_exist != nullptr)) {
		{
			auto expr = &((*(_103975_exist))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bc92997c:;
			if (it != expr_end) {
				jule::I64 _104418_i = it - expr->begin();
				jule::Ptr<_1ac85814b_InsGeneric> _104425_g = *it;
				{
					(*((*((*(_103943_f))))._field_Generics[_104418_i]))._field_Constraint=(*(_104425_g))._field_Constraint;
				}
				_iter_next_1bc92997c:;
				++it;
				_104418_i++;
				goto _iter_begin_1bc92997c;
			}
			_iter_end_1bc92997c:;
		};
	} else {
		(*(_104013_cc))._field_uniq=true;
	};
	return _1ac74e7a1_check(_104013_cc);;
}



inline jule::Bool _1ac7a5d57_checkConstraintsStruct(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac702105_StructIns>* _105347_s, jule::Ptr<_1ac6b2e62_Token>* _105367_et, jule::Ptr<_1ac702105_StructIns> _105383_exist) {
	jule::Ptr<_1ac74d86b_constraintChecker> _105413_cc = _1ac7a113d_constraintChecker(_self_);;
	(*(_105413_cc))._field_et=(*(_105367_et));
	(*(_105413_cc))._field_si=(*(_105347_s));
	if ((_105383_exist != nullptr)) {
		{
			auto expr = &((*(_105383_exist))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bc92cb8e:;
			if (it != expr_end) {
				jule::I64 _105818_i = it - expr->begin();
				jule::Ptr<_1ac85814b_InsGeneric> _105825_g = *it;
				{
					(*((*((*(_105347_s))))._field_Generics[_105818_i]))._field_Constraint=(*(_105825_g))._field_Constraint;
				}
				_iter_next_1bc92cb8e:;
				++it;
				_105818_i++;
				goto _iter_begin_1bc92cb8e;
			}
			_iter_end_1bc92cb8e:;
		};
	} else {
		(*(_105413_cc))._field_uniq=true;
	};
	return _1ac74e7a1_check(_105413_cc);;
}



inline jule::Bool _1ac7a6253_fnEnvironment(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac717170_FnIns>* _107038_f, jule::Fn<jule::Bool(jule::Ptr<_1ac797c7d_Sema>*,jule::Slice<jule::Ptr<_1ac858c40_TypeAlias>>*)> _107049_algo) {
	jule::Ptr<_1ac797c7d_Sema> _107113_sema = (*((*((*(_107038_f))))._field_Decl))._field_sema;;
	jule::Ptr<_1ac81e013_SymbolTable> _107213_old = (*((*((*((*(_107038_f))))._field_Decl))._field_sema))._field_file;;
	__JULE_DEFER({
		_1ac79a49a_setCurrentFile((*((*((*(_107038_f))))._field_Decl))._field_sema.ptr(), _107213_old);
	});;
	jule::Ptr<_1ac81e013_SymbolTable> _107413_file = _1ac7969c4_findFile(&((*((*((*((*(_107038_f))))._field_Decl))._field_sema))._field_files), &((*((*((*((*(_107038_f))))._field_Decl))._field_Token))._field_File));;
	if ((_107413_file != nullptr)) {
		_1ac79a49a_setCurrentFile((*((*((*(_107038_f))))._field_Decl))._field_sema.ptr(), _107413_file);
	};
	jule::I64 _107913_size = (*((*(_107038_f))))._field_Generics.len();;
	if ((((*((*(_107038_f))))._field_Decl != nullptr) && ((*((*((*(_107038_f))))._field_Decl))._field_Owner != nullptr))) {
		_107913_size+=(*((*((*((*(_107038_f))))._field_Decl))._field_Owner))._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1ac858c40_TypeAlias>> _108413_generics = jule::Slice<jule::Ptr<_1ac858c40_TypeAlias>>::alloc(0LL, _107913_size);;
	_1ac796650_appendGenericTypeAliases(&(_108413_generics), _107038_f);
	jule::Bool _10879_ok = _107049_algo(&(_107113_sema), &(_108413_generics));;
	if ((_107113_sema != _self_)) {
		((*(_self_))._field_errors).append((*(_107113_sema))._field_errors);;
		(*(_107113_sema))._field_errors=nullptr;
	};
	return _10879_ok;;
}



inline void _1ac7a650b_checkFnParamKind(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac7161c4_ParamIns>* _109741_p) {
	(*((*((*(_109741_p))))._field_Kind))._field_Variadic=(*((*((*(_109741_p))))._field_Decl))._field_Variadic;
	if (((*((*((*(_109741_p))))._field_Decl))._field_Reference && (!(_1ac876026_isValidForRef(&((*((*(_109741_p))))._field_Kind)))))) {
		_1ac79a8b8_pushErr(_self_.ptr(), (*((*((*(_109741_p))))._field_Decl))._field_Token, jule::Str::lit("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*((*(_109741_p))))._field_Kind.ptr()), &__jule_any_type4)}));
	};
}



inline jule::Bool _1ac7a684c_reloadFnInsTypes(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac717170_FnIns> _110440_f) {
	if ((_1ac718605_IsBuiltin(_110440_f.ptr()) || _1ac71888b_IsAnon(_110440_f.ptr()))) {
		return true;;
	};
	return _1ac7a6253_fnEnvironment(_self_, &(_110440_f), jule::Fn<jule::Bool(jule::Ptr<_1ac797c7d_Sema>*,jule::Slice<jule::Ptr<_1ac858c40_TypeAlias>>*)>([=](jule::Ptr<_1ac797c7d_Sema>* _110843_sema, jule::Slice<jule::Ptr<_1ac858c40_TypeAlias>>* _110861_generics) mutable -> jule::Bool {
		jule::Bool _110917_ok = true;;
		{
			auto expr = &((*(_110440_f))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bc93b8a1:;
			if (it != expr_end) {
				jule::Ptr<_1ac7161c4_ParamIns> _111025_p = *it;
				{
					if (_1ac712db3_IsSelf((*(_111025_p))._field_Decl.ptr())) {
						if (_1ac713149_IsRef((*(_111025_p))._field_Decl.ptr())) {
							(*(_111025_p))._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(jule::new_ptr<_1ac866137_Sptr>(_1ac866137_Sptr{._field_Elem=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>((*(_110440_f))._field_Owner, 0)})}), 21)});
						} else {
							(*(_111025_p))._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>((*(_110440_f))._field_Owner, 0)});
						};
					} else {
						(*(_111025_p))._field_Kind=_1ac7a19e0_buildTypeWithGenerics((*(_110843_sema)), &((*((*((*(_111025_p))._field_Decl))._field_Kind))._field_Decl), (*(_110861_generics)), (*(_110440_f))._field_Refers);
						if (((*(_111025_p))._field_Kind != nullptr)) {
							_1ac7a650b_checkFnParamKind(_self_, &(_111025_p));
						} else {
							_110917_ok=false;
						};
					};
				}
				_iter_next_1bc93b8a1:;
				++it;
				goto _iter_begin_1bc93b8a1;
			}
			_iter_end_1bc93b8a1:;
		};
		if ((!(_1ac7146de_IsVoid((*(_110440_f))._field_Decl.ptr())))) {
			(*(_110440_f))._field_Result=_1ac7a19e0_buildTypeWithGenerics((*(_110843_sema)), &((*((*((*((*(_110440_f))._field_Decl))._field_Result))._field_Kind))._field_Decl), (*(_110861_generics)), (*(_110440_f))._field_Refers);
			_110917_ok=(((*(_110440_f))._field_Result != nullptr) && _110917_ok);
		};
		return _110917_ok;;
	}));;
}



inline jule::Bool _1ac7a6d03_checkRefValidityForInitExpr(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Bool _114047_leftMut, jule::Ptr<_1ac8243ae_Data>* _114067_d, jule::Ptr<_1ac6b2e62_Token>* _114082_errorToken) {
	if ((!(_1ac79541d_isValidModelForRef(&((*((*(_114067_d))))._field_Model))))) {
		_1ac79a8b8_pushErr(_self_.ptr(), (*(_114082_errorToken)), jule::Str::lit("references requires variable based expression for assignment", 60), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_114047_leftMut && (!((*((*(_114067_d))))._field_Mutable)))) {
		_1ac79a8b8_pushErr(_self_.ptr(), (*(_114082_errorToken)), jule::Str::lit("mutable reference cannot point to immutable data", 48), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1ac7a7144_isMutRiskyStruct(_1ac797c7d_Sema* _self_, jule::Ptr<_1ac702105_StructIns>* _115732_s) {
	{
		auto expr = &((*((*(_115732_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc944aeb:;
		if (it != expr_end) {
			jule::Ptr<_1ac701555_FieldIns> *_115816_f = it;
			{
				if ((((*((*((*(_115816_f))))._field_Decl))._field_Mutable && _1ac85b3b3_Mutable((*((*(_115816_f))))._field_Kind.ptr())) && _1ac79b127_isAccessibleDefine(_self_, (*((*((*(_115816_f))))._field_Decl))._field_Public, (*((*((*(_115816_f))))._field_Decl))._field_Token))) {
					return true;;
				};
			}
			_iter_next_1bc944aeb:;
			++it;
			goto _iter_begin_1bc944aeb;
		}
		_iter_end_1bc944aeb:;
	};
	return false;;
}



inline jule::Bool _1ac7a7760_checkValidityForInitExpr(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Bool _118444_leftMut, jule::Bool _118459_leftRef, jule::Ptr<_1ac859a32_TypeKind>* _118510_leftKind, jule::Ptr<_1ac8243ae_Data>* _118536_d, jule::Ptr<_1ac6b2e62_Token>* _118551_errorToken) {
	if ((_118444_leftMut && (!((*((*(_118536_d))))._field_Mutable)))) {
		if (_1ac85b3b3_Mutable((*((*(_118536_d))))._field_Kind.ptr())) {
			_1ac79a8b8_pushErr(_self_.ptr(), (*(_118551_errorToken)), jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*((*(_118536_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
		jule::Ptr<_1ac702105_StructIns> _119313_s = _1ac85d706_Struct((*((*(_118536_d))))._field_Kind.ptr());;
		if (((_119313_s != nullptr) && _1ac7a7144_isMutRiskyStruct(_self_.ptr(), &(_119313_s)))) {
			_1ac79a8b8_pushErr(_self_.ptr(), (*(_118551_errorToken)), jule::Str::lit("struct @ cannot copied due to field which is stores mutable data", 64), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*((*(_118536_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
	};
	if (_118459_leftRef) {
		if ((!(_1ac7a6d03_checkRefValidityForInitExpr(_self_, _118444_leftMut, _118536_d, _118551_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1ac80d08a_assignTypeChecker> _120413_atc = jule::new_ptr<_1ac80d08a_assignTypeChecker>(_1ac80d08a_assignTypeChecker{._field_s=_self_, ._field_d=(*(_118536_d)), ._field_errorToken=(*(_118551_errorToken))});;
	return _1ac80d7a5_checkValidity(_120413_atc.ptr());;
}



inline jule::Bool _1ac7a7b5b_checkTypeAliasDeclKind(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac858c40_TypeAlias>* _121247_ta, jule::Trait<_1ac879568_Lookup> _121267_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ac81e013_SymbolTable> _121313_old = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1ac79a49a_setCurrentFile(_self_.ptr(), _121313_old);
	});;
	if (((*((*(_121247_ta))))._field_Token != nullptr)) {
		jule::Ptr<_1ac81e013_SymbolTable> _121817_file = _1ac7969c4_findFile(&((*(_self_))._field_files), &((*((*((*(_121247_ta))))._field_Token))._field_File));;
		if ((_121817_file != nullptr)) {
			_1ac79a49a_setCurrentFile(_self_.ptr(), _121817_file);
		};
	};
	__jule_func_result=_1ac7a0da7_checkTypeWithRefers(_self_, &((*((*(_121247_ta))))._field_Kind), _121267_l, nullptr, jule::new_ptr<_1ac86a900_referencer>(_1ac86a900_referencer{._field_ident=(*((*(_121247_ta))))._field_Ident, ._field_owner=jule::Any((*(_121247_ta)), &__jule_any_type66), ._field_refs=(&((*((*(_121247_ta))))._field_Refers))}));
	if (((__jule_func_result && (_1ac85ce53_Arr((*((*((*(_121247_ta))))._field_Kind))._field_Kind.ptr()) != nullptr)) && (*(_1ac85ce53_Arr((*((*((*(_121247_ta))))._field_Kind))._field_Kind.ptr())))._field_Auto)) {
		_1ac79a8b8_pushErr(_self_.ptr(), (*((*((*((*(_121247_ta))))._field_Kind))._field_Decl))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1ac7a7ebe_checkTypeAliasDecl(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac858c40_TypeAlias>* _123543_ta, jule::Trait<_1ac879568_Lookup> _123563_l) {
	if (_1ac6b58c1_IsIgnoreIdent((*((*(_123543_ta))))._field_Ident)) {
		_1ac79a8b8_pushErr(_self_.ptr(), (*((*(_123543_ta))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_1ac7a7b5b_checkTypeAliasDeclKind(_self_, _123543_ta, _123563_l);
}



inline void _1ac7a8277_checkTypeAliasDeclDup(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac858c40_TypeAlias>* _124346_ta) {
	if (_1ac6b58c1_IsIgnoreIdent((*((*(_124346_ta))))._field_Ident)) {
		_1ac79a8b8_pushErr(_self_.ptr(), (*((*(_124346_ta))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1ac79b5cd_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_124346_ta)))), &((*((*(_124346_ta))))._field_Ident), (*((*(_124346_ta))))._field_Binded)) {
		_1ac79a8b8_pushErr(_self_.ptr(), (*((*(_124346_ta))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_124346_ta))))._field_Ident, &__jule_any_type4)}));
		_1ac79ac2b_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1ac7a7b5b_checkTypeAliasDeclKind(_self_, _124346_ta, jule::Trait<_1ac879568_Lookup>(_self_, 3));
}



inline jule::Bool _1ac7a850d_checkTypeAliasDecls(jule::Ptr<_1ac797c7d_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc9574d2:;
		if (it != expr_end) {
			jule::Ptr<_1ac858c40_TypeAlias> _125621_ta = *it;
			{
				_1ac7a8277_checkTypeAliasDeclDup(_self_, &(_125621_ta));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bc9574d2:;
			++it;
			goto _iter_begin_1bc9574d2;
		}
		_iter_end_1bc9574d2:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1bc98409c_checkEnumItemsDup(_1ac797c7d_Sema* _self_, jule::Slice<jule::Ptr<_1ac7291d7_EnumItem>> _126739_items) {
	{
		auto expr = &(_126739_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc9853de:;
		if (it != expr_end) {
			jule::Ptr<_1ac7291d7_EnumItem> *_126816_item = it;
			{
				if (((*((*(_126816_item))))._field_Ident).empty()) {
					goto _iter_next_1bc9853de;
				} else if (_1ac6b58c1_IsIgnoreIdent((*((*(_126816_item))))._field_Ident)) {
					_1ac79a8b8_pushErr(_self_, (*((*(_126816_item))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_126739_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bc986e90:;
						if (it != expr_end) {
							jule::Ptr<_1ac7291d7_EnumItem> *_127424_citem = it;
							{
								if (((*(_126816_item)) == (*(_127424_citem)))) {
									goto _iter_end_1bc986e90;
								} else if (((*((*(_126816_item))))._field_Ident == (*((*(_127424_citem))))._field_Ident)) {
									_1ac79a8b8_pushErr(_self_, (*((*(_126816_item))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_126816_item))))._field_Ident, &__jule_any_type4)}));
									_1ac79ac2b_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1bc986e90;
								};
							}
							_iter_next_1bc986e90:;
							++it;
							goto _iter_begin_1bc986e90;
						}
						_iter_end_1bc986e90:;
					};
				};
			}
			_iter_next_1bc9853de:;
			++it;
			goto _iter_begin_1bc9853de;
		}
		_iter_end_1bc9853de:;
	};
}

inline void _1bc991065_checkEnumItemsDup(_1ac797c7d_Sema* _self_, jule::Slice<jule::Ptr<_1ac72ad87_TypeEnumItem>> _126739_items) {
	{
		auto expr = &(_126739_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc992363:;
		if (it != expr_end) {
			jule::Ptr<_1ac72ad87_TypeEnumItem> *_126816_item = it;
			{
				if (((*((*(_126816_item))))._field_Ident).empty()) {
					goto _iter_next_1bc992363;
				} else if (_1ac6b58c1_IsIgnoreIdent((*((*(_126816_item))))._field_Ident)) {
					_1ac79a8b8_pushErr(_self_, (*((*(_126816_item))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_126739_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bc993e14:;
						if (it != expr_end) {
							jule::Ptr<_1ac72ad87_TypeEnumItem> *_127424_citem = it;
							{
								if (((*(_126816_item)) == (*(_127424_citem)))) {
									goto _iter_end_1bc993e14;
								} else if (((*((*(_126816_item))))._field_Ident == (*((*(_127424_citem))))._field_Ident)) {
									_1ac79a8b8_pushErr(_self_, (*((*(_126816_item))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_126816_item))))._field_Ident, &__jule_any_type4)}));
									_1ac79ac2b_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1bc993e14;
								};
							}
							_iter_next_1bc993e14:;
							++it;
							goto _iter_begin_1bc993e14;
						}
						_iter_end_1bc993e14:;
					};
				};
			}
			_iter_next_1bc992363:;
			++it;
			goto _iter_begin_1bc992363;
		}
		_iter_end_1bc992363:;
	};
}



inline void _1ac7a8a6e_checkEnumItemsStr(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac729c54_Enum>* _128742_e) {
	jule::Ptr<_1ac8260a3_Eval> _128813_eval = _1ac7a2d65_eval(_self_, jule::Trait<_1ac879568_Lookup>(_self_, 3));;
	{
		auto expr = &((*((*(_128742_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc95922b:;
		if (it != expr_end) {
			jule::Ptr<_1ac7291d7_EnumItem> _128921_item = *it;
			{
				if (_1ac72958e_AutoExpr(_128921_item.ptr())) {
					(*(_128921_item))._field_Value=jule::new_ptr<_1ac825503_Value>(_1ac825503_Value{._field_Data=jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Constant=static__1a6ce0672_NewStr((*(_128921_item))._field_Ident)})});
					(*((*((*(_128921_item))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*(_128921_item))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
				} else {
					jule::Ptr<_1ac8243ae_Data> _129821_d = _1ac844313_evalExpr(_128813_eval, (*((*(_128921_item))._field_Value))._field_Expr);;
					if ((_129821_d == nullptr)) {
						goto _iter_next_1bc95922b;
					};
					if ((!(_1ac824c83_IsConst(_129821_d.ptr())))) {
						_1ac79a8b8_pushErr(_self_.ptr(), (*((*((*(_128921_item))._field_Value))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
					};
					_1ac7a33c6_checkAssignType(_self_, false, &((*((*((*(_128742_e))))._field_Kind))._field_Kind), &(_129821_d), (*(_128921_item))._field_Token);
					(*((*(_128921_item))._field_Value))._field_Data=_129821_d;
				};
			}
			_iter_next_1bc95922b:;
			++it;
			goto _iter_begin_1bc95922b;
		}
		_iter_end_1bc95922b:;
	};
}



inline void _1bc964951_checkEnumItemInt(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac8260a3_Eval>* _131346_eval, jule::Ptr<_1ac729c54_Enum>* _131364_e, jule::Ptr<_1ac86260b_Prim>* _131375_prim, jule::Ptr<_1ac7291d7_EnumItem>* _131393_item, jule::U64* _1313115_n) {
	if (_1ac72958e_AutoExpr((*(_131393_item)).ptr())) {
		(*((*(_131393_item))))._field_Value=jule::new_ptr<_1ac825503_Value>(_1ac825503_Value{._field_Data=jule::new_ptr<_1ac8243ae_Data>()});
		{
			
{
				_case_begin_1bc9677bc:;
				{
					(*((*((*((*(_131393_item))))._field_Value))._field_Data))._field_Constant=static__1a6ce00de_NewU64((*(_1313115_n)));
				}
			}
			_match_end_1bc9674e2:;
		};
		(*((*((*((*(_131393_item))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_131393_item))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1ac8243ae_Data> _132817_d = _1ac844313_evalExpr((*(_131346_eval)), (*((*((*(_131393_item))))._field_Value))._field_Expr);;
		if ((_132817_d == nullptr)) {
			return;;
		};
		if ((!(_1ac824c83_IsConst(_132817_d.ptr())))) {
			_1ac79a8b8_pushErr(_self_.ptr(), (*((*((*((*(_131393_item))))._field_Value))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1ac7a33c6_checkAssignType(_self_, false, &((*((*((*(_131364_e))))._field_Kind))._field_Kind), &(_132817_d), (*((*(_131393_item))))._field_Token);
		(*((*((*(_131393_item))))._field_Value))._field_Data=_132817_d;
		{
			
{
				_case_begin_1bc96c5d5:;
				{
					(*(_1313115_n))=static_cast<jule::U64>(_1a6ce1541_ReadU64((*((*((*((*(_131393_item))))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_1bc96c3d7:;
		};
	};
}

inline void _1bc974ab5_checkEnumItemInt(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac8260a3_Eval>* _131346_eval, jule::Ptr<_1ac729c54_Enum>* _131364_e, jule::Ptr<_1ac86260b_Prim>* _131375_prim, jule::Ptr<_1ac7291d7_EnumItem>* _131393_item, jule::I64* _1313115_n) {
	if (_1ac72958e_AutoExpr((*(_131393_item)).ptr())) {
		(*((*(_131393_item))))._field_Value=jule::new_ptr<_1ac825503_Value>(_1ac825503_Value{._field_Data=jule::new_ptr<_1ac8243ae_Data>()});
		{
			
{
				_case_begin_1bc977865:;
				{
					(*((*((*((*(_131393_item))))._field_Value))._field_Data))._field_Constant=static__1a6cded25_NewI64((*(_1313115_n)));
				}
			}
			_match_end_1bc977612:;
		};
		(*((*((*((*(_131393_item))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_131393_item))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1ac8243ae_Data> _132817_d = _1ac844313_evalExpr((*(_131346_eval)), (*((*((*(_131393_item))))._field_Value))._field_Expr);;
		if ((_132817_d == nullptr)) {
			return;;
		};
		if ((!(_1ac824c83_IsConst(_132817_d.ptr())))) {
			_1ac79a8b8_pushErr(_self_.ptr(), (*((*((*((*(_131393_item))))._field_Value))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1ac7a33c6_checkAssignType(_self_, false, &((*((*((*(_131364_e))))._field_Kind))._field_Kind), &(_132817_d), (*((*(_131393_item))))._field_Token);
		(*((*((*(_131393_item))))._field_Value))._field_Data=_132817_d;
		{
			
{
				_case_begin_1bc97c815:;
				{
					(*(_1313115_n))=static_cast<jule::I64>(_1a6ce12aa_ReadI64((*((*((*((*(_131393_item))))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_1bc97c68e:;
		};
	};
}



inline void _1bc960b28_checkEnumItemsInt1(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac86260b_Prim>* _134844_prim, jule::Ptr<_1ac729c54_Enum>* _134862_e) {
	jule::U64 _134913_max = static_cast<jule::U64>(0LLU);;
	{
		
{
			_case_begin_1bc962a1a:;
			{
				_134913_max=static_cast<jule::U64>(_1a6cda11c_MaxU(_1ac86294c_Str((*(_134844_prim)).ptr())));
			}
		}
		_match_end_1bc96282d:;
	};
	jule::Ptr<_1ac8260a3_Eval> _135913_eval = _1ac7a2d65_eval(_self_, jule::Trait<_1ac879568_Lookup>(_self_, 3));;
	jule::U64 _136013_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1ac7291d7_EnumItem> _136113_first = (*((*(_134862_e))))._field_Items[0LL];;
	_1bc964951_checkEnumItemInt(_self_, &(_135913_eval), _134862_e, _134844_prim, &(_136113_first), &(_136013_n));
	if (((*((*(_136113_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1bc96cbe0:;
				{
					_136013_n=static_cast<jule::U64>(_1a6ce2311_AsU64((*((*((*(_136113_first))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_1bc965c60:;
		};
	};
	{
		auto expr = (*((*(_134862_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1bc96937e:;
		if (it != expr_end) {
			jule::Ptr<_1ac7291d7_EnumItem> _137321_item = *it;
			{
				if (((_1ac72958e_AutoExpr(_137321_item.ptr()) && (_136013_n > 0LLU)) && ((_134913_max - _136013_n) <= 0LLU))) {
					_1ac79a8b8_pushErr(_self_.ptr(), (*(_137321_item))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1bc96937e;
				};
				(_136013_n)++;
				_1bc964951_checkEnumItemInt(_self_, &(_135913_eval), _134862_e, _134844_prim, &(_137321_item), &(_136013_n));
			}
			_iter_next_1bc96937e:;
			++it;
			goto _iter_begin_1bc96937e;
		}
		_iter_end_1bc96937e:;
	};
}

inline void _1bc971bb1_checkEnumItemsInt1(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac86260b_Prim>* _134844_prim, jule::Ptr<_1ac729c54_Enum>* _134862_e) {
	jule::I64 _134913_max = static_cast<jule::I64>(0LL);;
	{
		
{
			_case_begin_1bc972970:;
			{
				_134913_max=static_cast<jule::I64>(_1a6cd9d53_MaxI(_1ac86294c_Str((*(_134844_prim)).ptr())));
			}
		}
		_match_end_1bc97280a:;
	};
	jule::Ptr<_1ac8260a3_Eval> _135913_eval = _1ac7a2d65_eval(_self_, jule::Trait<_1ac879568_Lookup>(_self_, 3));;
	jule::I64 _136013_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1ac7291d7_EnumItem> _136113_first = (*((*(_134862_e))))._field_Items[0LL];;
	_1bc974ab5_checkEnumItemInt(_self_, &(_135913_eval), _134862_e, _134844_prim, &(_136113_first), &(_136013_n));
	if (((*((*(_136113_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1bc9739e8:;
				{
					_136013_n=static_cast<jule::I64>(_1a6ce207a_AsI64((*((*((*(_136113_first))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_1bc974279:;
		};
	};
	{
		auto expr = (*((*(_134862_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1bc97e4a4:;
		if (it != expr_end) {
			jule::Ptr<_1ac7291d7_EnumItem> _137321_item = *it;
			{
				if (((_1ac72958e_AutoExpr(_137321_item.ptr()) && (_136013_n > 0LL)) && ((_134913_max - _136013_n) <= 0LL))) {
					_1ac79a8b8_pushErr(_self_.ptr(), (*(_137321_item))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1bc97e4a4;
				};
				(_136013_n)++;
				_1bc974ab5_checkEnumItemInt(_self_, &(_135913_eval), _134862_e, _134844_prim, &(_137321_item), &(_136013_n));
			}
			_iter_next_1bc97e4a4:;
			++it;
			goto _iter_begin_1bc97e4a4;
		}
		_iter_end_1bc97e4a4:;
	};
}



inline void _1ac7a971d_checkEnumItemsInt(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac729c54_Enum>* _138342_e) {
	jule::Ptr<_1ac86260b_Prim> _13849_prim = _1ac85c183_Prim((*((*((*(_138342_e))))._field_Kind))._field_Kind.ptr());;
	{
		
		if (_1a6cdd609_IsSigInt((*(_13849_prim))._field_Kind)) {
			_case_begin_1bc96074e:;
			{
				_1bc971bb1_checkEnumItemsInt1(_self_, &(_13849_prim), _138342_e);
			}
		}
		else {
			_case_begin_1bc9603a8:;
			{
				_1bc960b28_checkEnumItemsInt1(_self_, &(_13849_prim), _138342_e);
			}
		}
		_match_end_1bc960342:;
	};
}



inline void _1ac7a99c6_checkEnumDecl(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac729c54_Enum>* _139338_e) {
	if (_1ac6b58c1_IsIgnoreIdent((*((*(_139338_e))))._field_Ident)) {
		_1ac79a8b8_pushErr(_self_.ptr(), (*((*(_139338_e))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1ac79b5cd_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_139338_e)))), &((*((*(_139338_e))))._field_Ident), false)) {
		_1ac79a8b8_pushErr(_self_.ptr(), (*((*(_139338_e))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_139338_e))))._field_Ident, &__jule_any_type4)}));
		_1ac79ac2b_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_139338_e))))._field_Items.len() == 0LL)) {
		_1ac79a8b8_pushErr(_self_.ptr(), (*((*(_139338_e))))._field_Token, jule::Str::lit("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*((*(_139338_e))))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	_1bc98409c_checkEnumItemsDup(_self_.ptr(), (*((*(_139338_e))))._field_Items);
	if (((*((*(_139338_e))))._field_Kind != nullptr)) {
		if ((!(_1ac7a1539_checkType(_self_, &((*((*(_139338_e))))._field_Kind), jule::Trait<_1ac879568_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		(*((*(_139338_e))))._field_Kind=(*(_1ac9404b9_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	jule::Ptr<_1ac86260b_Prim> _141713_t = _1ac85c183_Prim((*((*((*(_139338_e))))._field_Kind))._field_Kind.ptr());;
	if ((_141713_t == nullptr)) {
		_1ac79a8b8_pushErr(_self_.ptr(), (*((*(_139338_e))))._field_Token, jule::Str::lit("invalid type source", 19), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1ac865a93_IsStr(_141713_t.ptr())) {
			_case_begin_1bc98aceb:;
			{
				_1ac7a8a6e_checkEnumItemsStr(_self_, _139338_e);
			}
		}
		else if (_1a6cddbd1_IsInt(_1ac86294c_Str(_141713_t.ptr()))) {
			_case_begin_1bc98a9ee:;
			{
				_1ac7a971d_checkEnumItemsInt(_self_, _139338_e);
			}
		}
		else {
			_case_begin_1bc98a988:;
			{
				_1ac79a8b8_pushErr(_self_.ptr(), (*((*(_139338_e))))._field_Token, jule::Str::lit("invalid type source", 19), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bc98a0c5:;
	};
}



inline void _1ac7a9c7e_checkTypeEnumDecl(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac72b45e_TypeEnum>* _143442_e) {
	if (_1ac6b58c1_IsIgnoreIdent((*((*(_143442_e))))._field_Ident)) {
		_1ac79a8b8_pushErr(_self_.ptr(), (*((*(_143442_e))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1ac79b5cd_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_143442_e)))), &((*((*(_143442_e))))._field_Ident), false)) {
		_1ac79a8b8_pushErr(_self_.ptr(), (*((*(_143442_e))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_143442_e))))._field_Ident, &__jule_any_type4)}));
		_1ac79ac2b_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_143442_e))))._field_Items.len() == 0LL)) {
		_1ac79a8b8_pushErr(_self_.ptr(), (*((*(_143442_e))))._field_Token, jule::Str::lit("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*((*(_143442_e))))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	_1bc991065_checkEnumItemsDup(_self_.ptr(), (*((*(_143442_e))))._field_Items);
	{
		auto expr = &((*((*(_143442_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc992176:;
		if (it != expr_end) {
			jule::Ptr<_1ac72ad87_TypeEnumItem> _144821_item = *it;
			{
				if (((*(_144821_item))._field_Kind == nullptr)) {
					_1ac79a8b8_pushErr(_self_.ptr(), (*(_144821_item))._field_Token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					goto _iter_next_1bc992176;
				};
				jule::Bool _145313_ok = _1ac7a1539_checkType(_self_, &((*(_144821_item))._field_Kind), jule::Trait<_1ac879568_Lookup>(_self_, 3));;
				if ((!(_145313_ok))) {
					goto _iter_next_1bc992176;
				};
				jule::Ptr<_1ac86260b_Prim> _145713_p = _1ac85c183_Prim((*((*(_144821_item))._field_Kind))._field_Kind.ptr());;
				if (((_145713_p != nullptr) && _1ac865d29_IsAny(_145713_p.ptr()))) {
					_1ac79a8b8_pushErr(_self_.ptr(), (*(_144821_item))._field_Token, jule::Str::lit("the <any> type is not allowed for type-enum declarations", 56), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1bc992176:;
			++it;
			goto _iter_begin_1bc992176;
		}
		_iter_end_1bc992176:;
	};
	if (((*((*(_143442_e))))._field_Items.len() == 1LL)) {
		jule::Ptr<_1ac72ad87_TypeEnumItem> _146317_item = (*((*(_143442_e))))._field_Items[0LL];;
		_1ac859a32_TypeKind _146413_tk = _1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>((*(_143442_e)), 4)};;
		if ((((*((*(_146317_item))._field_Kind))._field_Kind != nullptr) && _1ac85a23b_Equal((*((*(_146317_item))._field_Kind))._field_Kind, ((jule::Ptr<_1ac859a32_TypeKind>)((&(_146413_tk))))))) {
			_1ac79a8b8_pushErr(_self_.ptr(), (*(_146317_item))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_1ac72b7a0_Str((*(_143442_e)).ptr()), &__jule_any_type4)}));
		};
	};
}



inline jule::Bool _1ac7aa015_checkEnumDecls(jule::Ptr<_1ac797c7d_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc99beb6:;
		if (it != expr_end) {
			jule::Ptr<_1ac729c54_Enum> _147521_e = *it;
			{
				_1ac7a99c6_checkEnumDecl(_self_, &(_147521_e));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bc99beb6:;
			++it;
			goto _iter_begin_1bc99beb6;
		}
		_iter_end_1bc99beb6:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ac7aa29b_checkTypeEnumDecls(jule::Ptr<_1ac797c7d_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc99d68d:;
		if (it != expr_end) {
			jule::Ptr<_1ac72b45e_TypeEnum> _148721_e = *it;
			{
				_1ac7a9c7e_checkTypeEnumDecl(_self_, &(_148721_e));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bc99d68d:;
			++it;
			goto _iter_begin_1bc99d68d;
		}
		_iter_end_1bc99d68d:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ac7aa5dc_checkDeclGenerics(_1ac797c7d_Sema* _self_, jule::Slice<jule::Ptr<_1ac6d588b_GenericDecl>>* _149737_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _149737_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc99eb67:;
		if (it != expr_end) {
			jule::I64 _149913_i = it - expr->begin();
			jule::Ptr<_1ac6d588b_GenericDecl> *_149916_g = it;
			{
				if (_1ac6b58c1_IsIgnoreIdent((*((*(_149916_g))))._field_Ident)) {
					_1ac79a8b8_pushErr(_self_, (*((*(_149916_g))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1bc99eb67;
				};
				_julec_label_1bc9a12b7:;
				{
					auto expr = _149737_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc9a154d:;
					if (it != expr_end) {
						jule::I64 _150817_j = it - expr->begin();
						jule::Ptr<_1ac6d588b_GenericDecl> *_150820_ct = it;
						{
							{
								
								if ((_150817_j >= _149913_i)) {
									_case_begin_1bc9a2142:;
									{
										goto _iter_end_1bc9a154d;
									}
								}
								else if (((*((*(_149916_g))))._field_Ident == (*((*(_150820_ct))))._field_Ident)) {
									_case_begin_1bc9a21b9:;
									{
										_1ac79a8b8_pushErr(_self_, (*((*(_149916_g))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_149916_g))))._field_Ident, &__jule_any_type4)}));
										_1ac79ac2b_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1bc9a154d;
									}
								}
								_match_end_1bc9a2043:;
							};
						}
						_iter_next_1bc9a154d:;
						++it;
						_150817_j++;
						goto _iter_begin_1bc9a154d;
					}
					_iter_end_1bc9a154d:;
				};
			}
			_iter_next_1bc99eb67:;
			++it;
			_149913_i++;
			goto _iter_begin_1bc99eb67;
		}
		_iter_end_1bc99eb67:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ac7aa92d_checkFnDeclParamsDup(_1ac797c7d_Sema* _self_, jule::Ptr<_1ac71426b_Fn>* _152440_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_1bc9a42a9:;
	{
		auto expr = &((*((*(_152440_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc9a46b6:;
		if (it != expr_end) {
			jule::I64 _152713_i = it - expr->begin();
			jule::Ptr<_1ac712797_Param> *_152716_p = it;
			{
				{
					auto expr = &((*((*(_152440_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc9a53a9:;
					if (it != expr_end) {
						jule::Ptr<_1ac6d588b_GenericDecl> *_152920_g = it;
						{
							if (((*((*(_152716_p))))._field_Ident == (*((*(_152920_g))))._field_Ident)) {
								__jule_func_result=false;
								_1ac79a8b8_pushErr(_self_, (*((*(_152716_p))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_152716_p))))._field_Ident, &__jule_any_type4)}));
								_1ac79ac2b_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								goto _iter_next_1bc9a46b6;
							};
						}
						_iter_next_1bc9a53a9:;
						++it;
						goto _iter_begin_1bc9a53a9;
					}
					_iter_end_1bc9a53a9:;
				};
				_julec_label_1bc9a50e0:;
				{
					auto expr = &((*((*(_152440_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc9a5893:;
					if (it != expr_end) {
						jule::I64 _153917_j = it - expr->begin();
						jule::Ptr<_1ac712797_Param> *_153920_jp = it;
						{
							{
								
								if ((_153917_j >= _152713_i)) {
									_case_begin_1bc9a7ab5:;
									{
										goto _iter_end_1bc9a5893;
									}
								}
								else if (_1ac6b58c1_IsIgnoreIdent((*((*(_152716_p))))._field_Ident) || _1ac6b58c1_IsIgnoreIdent((*((*(_153920_jp))))._field_Ident) || _1ac6b5b8a_IsAnonIdent((*((*(_152716_p))))._field_Ident) || _1ac6b5b8a_IsAnonIdent((*((*(_153920_jp))))._field_Ident)) {
									_case_begin_1bc9a7b3c:;
									{
										goto _iter_end_1bc9a5893;
									}
								}
								else if (((*((*(_152716_p))))._field_Ident == (*((*(_153920_jp))))._field_Ident)) {
									_case_begin_1bc9a7bb4:;
									{
										__jule_func_result=false;
										_1ac79a8b8_pushErr(_self_, (*((*(_152716_p))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_152716_p))))._field_Ident, &__jule_any_type4)}));
										_1ac79ac2b_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_next_1bc9a46b6;
									}
								}
								_match_end_1bc9a79a5:;
							};
						}
						_iter_next_1bc9a5893:;
						++it;
						_153917_j++;
						goto _iter_begin_1bc9a5893;
					}
					_iter_end_1bc9a5893:;
				};
			}
			_iter_next_1bc9a46b6:;
			++it;
			_152713_i++;
			goto _iter_begin_1bc9a46b6;
		}
		_iter_end_1bc9a46b6:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ac7aac6e_checkFnDeclResultDup(_1ac797c7d_Sema* _self_, jule::Ptr<_1ac71426b_Fn>* _156140_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1ac7146de_IsVoid((*(_156140_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*((*((*(_156140_f))))._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc9ab668:;
		if (it != expr_end) {
			jule::I64 _156813_i = it - expr->begin();
			jule::Ptr<_1ac6b2e62_Token> *_156816_v = it;
			{
				if ((_1ac6b58c1_IsIgnoreIdent((*((*(_156816_v))))._field_Kind) || _1ac6b5b8a_IsAnonIdent((*((*(_156816_v))))._field_Kind))) {
					goto _iter_next_1bc9ab668;
				};
				{
					auto expr = &((*((*(_156140_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc9acc1e:;
					if (it != expr_end) {
						jule::Ptr<_1ac6d588b_GenericDecl> *_157320_g = it;
						{
							if (((*((*(_156816_v))))._field_Kind == (*((*(_157320_g))))._field_Ident)) {
								goto _julec_label_1bc9ad824;
							};
						}
						_iter_next_1bc9acc1e:;
						++it;
						goto _iter_begin_1bc9acc1e;
					}
					_iter_end_1bc9acc1e:;
				};
				{
					auto expr = &((*((*(_156140_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc9ae182:;
					if (it != expr_end) {
						jule::Ptr<_1ac712797_Param> *_157920_p = it;
						{
							if (((*((*(_156816_v))))._field_Kind == (*((*(_157920_p))))._field_Ident)) {
								goto _julec_label_1bc9ad824;
							};
						}
						_iter_next_1bc9ae182:;
						++it;
						goto _iter_begin_1bc9ae182;
					}
					_iter_end_1bc9ae182:;
				};
				_julec_label_1bc9aee30:;
				{
					auto expr = &((*((*((*(_156140_f))))._field_Result))._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc9b08ae:;
					if (it != expr_end) {
						jule::I64 _158717_j = it - expr->begin();
						jule::Ptr<_1ac6b2e62_Token> *_158720_jv = it;
						{
							{
								
								if ((_158717_j >= _156813_i)) {
									_case_begin_1bc9b141a:;
									{
										goto _iter_end_1bc9b08ae;
									}
								}
								else if (((*((*(_158720_jv))))._field_Kind == (*((*(_156816_v))))._field_Kind)) {
									_case_begin_1bc9b1492:;
									{
										goto _julec_label_1bc9ad824;
									}
								}
								_match_end_1bc9b130a:;
							};
						}
						_iter_next_1bc9b08ae:;
						++it;
						_158717_j++;
						goto _iter_begin_1bc9b08ae;
					}
					_iter_end_1bc9b08ae:;
				};
				goto _iter_next_1bc9ab668;
				_julec_label_1bc9ad824:;
				_1ac79a8b8_pushErr(_self_, (*(_156816_v)), jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_156816_v))))._field_Kind, &__jule_any_type4)}));
				_1ac79ac2b_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1bc9ab668:;
			++it;
			_156813_i++;
			goto _iter_begin_1bc9ab668;
		}
		_iter_end_1bc9ab668:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ac7ab0b0_checkFnVariadicParam(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac71426b_Fn>* _160645_f) {
	if (((*((*(_160645_f))))._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_1ac712797_Param> _161013_param = (*((*(_160645_f))))._field_Params[((*((*(_160645_f))))._field_Params.len() - 1LL)];;
	if (((*(_161013_param))._field_Variadic && (*(_161013_param))._field_Reference)) {
		_1ac79a8b8_pushErr(_self_.ptr(), (*(_161013_param))._field_Token, jule::Str::lit("variadic storage cannot be reference", 36), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _1ac7ab368_checkFnDeclPrototype(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac71426b_Fn>* _161945_f) {
	if (((*((*(_161945_f))))._field_Exceptional && (*((*(_161945_f))))._field_Binded)) {
		_1ac79a8b8_pushErr(_self_.ptr(), (*((*(_161945_f))))._field_Token, jule::Str::lit("binded defines cannot be exceptional", 36), jule::Slice<jule::Any>());
		return;;
	};
	if ((*((*(_161945_f))))._field_Exceptional) {
		if (_1ac714c0b_IsEntryPoint((*(_161945_f)).ptr())) {
			_1ac79a8b8_pushErr(_self_.ptr(), (*((*(_161945_f))))._field_Token, jule::Str::lit("entry point cannot be exceptional", 33), jule::Slice<jule::Any>());
		} else if (_1ac714e92_IsInit((*(_161945_f)).ptr())) {
			_1ac79a8b8_pushErr(_self_.ptr(), (*((*(_161945_f))))._field_Token, jule::Str::lit("initializer function cannot be exceptional", 42), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1ac7aa5dc_checkDeclGenerics(_self_.ptr(), &((*((*(_161945_f))))._field_Generics))))) {
			_case_begin_1bc9b88d9:;
		}
		else if ((!(_1ac7aa92d_checkFnDeclParamsDup(_self_.ptr(), _161945_f)))) {
			_case_begin_1bc9b8961:;
		}
		else if ((!(_1ac7aac6e_checkFnDeclResultDup(_self_.ptr(), _161945_f)))) {
			_case_begin_1bc9b89d8:;
		}
		else if ((!(_1ac7ab0b0_checkFnVariadicParam(_self_, _161945_f)))) {
			_case_begin_1bc9b8a60:;
		}
		_match_end_1bc9b7003:;
	};
}



inline jule::Bool _1ac7ab81e_catchTraitInheritCycle(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac727548_Trait> _164142_t1, jule::Ptr<_1ac727548_Trait> _164158_t2, _1c164cc40_StrBuilder* _164175_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_164158_t2))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc9bb14a:;
		if (it != expr_end) {
			jule::Ptr<_1ac861c04_TypeSymbol> _164321_i = *it;
			{
				if (((*(_164321_i))._field_Kind == nullptr)) {
					goto _iter_next_1bc9bb14a;
				};
				jule::Ptr<_1ac727548_Trait> _164717_t3 = _1ac85d98c_Trait((*(_164321_i))._field_Kind.ptr());;
				if ((_164142_t1 == _164717_t3)) {
					_1ac7b159e_pushCycleError(_self_.ptr(), &((*(_164158_t2))._field_Ident), &((*(_164717_t3))._field_Ident), _164175_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1ac7ab81e_catchTraitInheritCycle(_self_, _164142_t1, _164717_t3, _164175_message)))) {
					_1ac7b159e_pushCycleError(_self_.ptr(), &((*(_164158_t2))._field_Ident), &((*(_164717_t3))._field_Ident), _164175_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bc9bb14a:;
			++it;
			goto _iter_begin_1bc9bb14a;
		}
		_iter_end_1bc9bb14a:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ac7abb60__checkTraitDeclInherits(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac727548_Trait>* _166048_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_166048_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc9c4780:;
		if (it != expr_end) {
			jule::I64 _166214_i = it - expr->begin();
			jule::Ptr<_1ac861c04_TypeSymbol> _166221_it = *it;
			{
				if ((!(_1ac7a1539_checkType(_self_, &(_166221_it), jule::Trait<_1ac879568_Lookup>(_self_, 3))))) {
					__jule_func_result=false;
					goto _iter_next_1bc9c4780;
				};
				jule::Ptr<_1ac727548_Trait> _166717_t2 = _1ac85d98c_Trait((*(_166221_it))._field_Kind.ptr());;
				if ((_166717_t2 == nullptr)) {
					_1ac79a8b8_pushErr(_self_.ptr(), (*((*(_166221_it))._field_Decl))._field_Token, jule::Str::lit("trait @ cannot implement @, type should be trait", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_166048_t))))._field_Ident, &__jule_any_type4),jule::Any(_1ac859dea_Str((*(_166221_it))._field_Kind.ptr()), &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1bc9c4780;
				};
				{
					auto expr = &((*((*(_166048_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc9c7a80:;
					if (it != expr_end) {
						jule::I64 _167317_j = it - expr->begin();
						jule::Ptr<_1ac861c04_TypeSymbol> _167320_it2 = *it;
						{
							if ((_167317_j >= _166214_i)) {
								goto _iter_end_1bc9c7a80;
							};
							if ((((*(_167320_it2))._field_Kind != nullptr) && _1ac85a23b_Equal((*(_166221_it))._field_Kind, (*(_167320_it2))._field_Kind))) {
								_1ac79a8b8_pushErr(_self_.ptr(), (*((*(_166221_it))._field_Decl))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_166717_t2))._field_Ident, &__jule_any_type4)}));
								__jule_func_result=false;
								goto _iter_end_1bc9c7a80;
							};
						}
						_iter_next_1bc9c7a80:;
						++it;
						_167317_j++;
						goto _iter_begin_1bc9c7a80;
					}
					_iter_end_1bc9c7a80:;
				};
				if (((*(_166048_t)) == _166717_t2)) {
					_1ac79a8b8_pushErr(_self_.ptr(), (*((*(_166221_it))._field_Decl))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_166048_t))))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
				} else {
					_1c164cc40_StrBuilder _168721_message = static__1c164d191_New(64LL);;
					__jule_func_result=(__jule_func_result && _1ac7ab81e_catchTraitInheritCycle(_self_, (*(_166048_t)), _166717_t2, &(_168721_message)));
					if ((_1c164e47d_Len(&_168721_message) > 0LL)) {
						jule::Str _169025_errMsg = _1c164dee9_Str(&_168721_message);;
						_1c164e1e7_Clear(&_168721_message);
						_1ac7b159e_pushCycleError(_self_.ptr(), &((*((*(_166048_t))))._field_Ident), &((*(_166717_t2))._field_Ident), &(_168721_message));
						_169025_errMsg+=_1c164dee9_Str(&_168721_message);
						_1ac79a8b8_pushErr(_self_.ptr(), (*((*(_166221_it))._field_Decl))._field_Token, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_169025_errMsg, &__jule_any_type4)}));
					};
				};
			}
			_iter_next_1bc9c4780:;
			++it;
			_166214_i++;
			goto _iter_begin_1bc9c4780;
		}
		_iter_end_1bc9c4780:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1ac7abe18_checkTraitDeclInherits(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac727548_Trait>* _170147_t) {
	{
		auto expr = &((*((*(_170147_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc9ce24b:;
		if (it != expr_end) {
			jule::I64 _170214_i = it - expr->begin();
			jule::Ptr<_1ac861c04_TypeSymbol> _170221_it = *it;
			{
				jule::Ptr<_1ac727548_Trait> _170317_t1 = _1ac85d98c_Trait((*(_170221_it))._field_Kind.ptr());;
				{
					auto expr = &((*((*(_170147_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc9d07ad:;
					if (it != expr_end) {
						jule::I64 _170418_j = it - expr->begin();
						jule::Ptr<_1ac861c04_TypeSymbol> _170425_it2 = *it;
						{
							if ((_170418_j == _170214_i)) {
								goto _iter_next_1bc9d07ad;
							};
							jule::Ptr<_1ac727548_Trait> _170821_t2 = _1ac85d98c_Trait((*(_170425_it2))._field_Kind.ptr());;
							{
								auto expr = &((*(_170317_t1))._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1bc9d2051:;
								if (it != expr_end) {
									jule::Ptr<_1ac71426b_Fn> _170929_t1m = *it;
									{
										jule::Ptr<_1ac71426b_Fn> _171025_t2m = _1ac7281e7_FindMethod(_170821_t2.ptr(), (*(_170929_t1m))._field_Ident);;
										if ((_171025_t2m == nullptr)) {
											goto _iter_next_1bc9d2051;
										};
										jule::Ptr<_1ac717170_FnIns> _171421_t1f = _1ac7a53ea_getTraitCheckFnKind(_self_, &(_170929_t1m));;
										jule::Ptr<_1ac717170_FnIns> _171521_t2f = _1ac7a53ea_getTraitCheckFnKind(_self_, &(_171025_t2m));;
										if ((!(_1ac7180d8_equalTrait(_171421_t1f, &(_171521_t2f))))) {
											_1ac79a8b8_pushErr(_self_.ptr(), (*((*(_170221_it))._field_Decl))._field_Token, jule::Str::lit("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87), jule::Slice<jule::Any>::make({jule::Any((*((*(_170147_t))))._field_Ident, &__jule_any_type4),jule::Any((*(_170821_t2))._field_Ident, &__jule_any_type4),jule::Any(_1ac71901d_GetKindStr(_171421_t1f.ptr(), true), &__jule_any_type4),jule::Any(_1ac71901d_GetKindStr(_171521_t2f.ptr(), true), &__jule_any_type4)}));
											return;;
										};
									}
									_iter_next_1bc9d2051:;
									++it;
									goto _iter_begin_1bc9d2051;
								}
								_iter_end_1bc9d2051:;
							};
						}
						_iter_next_1bc9d07ad:;
						++it;
						_170418_j++;
						goto _iter_begin_1bc9d07ad;
					}
					_iter_end_1bc9d07ad:;
				};
			}
			_iter_next_1bc9ce24b:;
			++it;
			_170214_i++;
			goto _iter_begin_1bc9ce24b;
		}
		_iter_end_1bc9ce24b:;
	};
}



inline void _1ac7ac1c1_checkTraitDeclMethod(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac71426b_Fn>* _172645_f) {
	if (_1ac6b58c1_IsIgnoreIdent((*((*(_172645_f))))._field_Ident)) {
		_1ac79a8b8_pushErr(_self_.ptr(), (*((*(_172645_f))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1ac6b5b8a_IsAnonIdent((*((*(_172645_f))))._field_Ident)) {
		_1ac79a8b8_pushErr(_self_.ptr(), (*((*(_172645_f))))._field_Token, jule::Str::lit("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	(*((*(_172645_f))))._field_sema=_self_;
	_1ac7ab368_checkFnDeclPrototype(_self_, _172645_f);
	jule::Ptr<_1ac717170_FnIns> _173413_ins = _1ac7159cb_instance((*(_172645_f)));;
	_1ac7a684c_reloadFnInsTypes(_self_, _173413_ins);
	(*(_173413_ins))._field_reloaded=true;
	_1ac715cd9_appendInstance((*(_172645_f)).ptr(), &(_173413_ins));
}



inline void _1ac7ac479_checkTraitDeclMethods(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac727548_Trait>* _174046_t) {
	{
		auto expr = &((*((*(_174046_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc9d9069:;
		if (it != expr_end) {
			jule::I64 _174114_i = it - expr->begin();
			jule::Ptr<_1ac71426b_Fn> _174121_f = *it;
			{
				_1ac7ac1c1_checkTraitDeclMethod(_self_, &(_174121_f));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1ac728879_findMethodInherit((*(_174046_t)).ptr(), &((*(_174121_f))._field_Ident)) != nullptr)) {
					_1ac79a8b8_pushErr(_self_.ptr(), (*(_174121_f))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_174121_f))._field_Ident, &__jule_any_type4)}));
					_1ac79ac2b_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					goto _iter_next_1bc9d9069;
				};
				_julec_label_1bc9dae4a:;
				{
					auto expr = &((*((*(_174046_t))))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc9dbeb2:;
					if (it != expr_end) {
						jule::I64 _175717_j = it - expr->begin();
						jule::Ptr<_1ac71426b_Fn> _175720_jf = *it;
						{
							{
								
								if ((_175717_j >= _174114_i)) {
									_case_begin_1bc9dca1d:;
									{
										goto _iter_end_1bc9dbeb2;
									}
								}
								else if (((*(_174121_f))._field_Ident == (*(_175720_jf))._field_Ident)) {
									_case_begin_1bc9dca95:;
									{
										_1ac79a8b8_pushErr(_self_.ptr(), (*(_174121_f))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_174121_f))._field_Ident, &__jule_any_type4)}));
										_1ac79ac2b_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_end_1bc9dbeb2;
									}
								}
								_match_end_1bc9dc90d:;
							};
						}
						_iter_next_1bc9dbeb2:;
						++it;
						_175717_j++;
						goto _iter_begin_1bc9dbeb2;
					}
					_iter_end_1bc9dbeb2:;
				};
			}
			_iter_next_1bc9d9069:;
			++it;
			_174114_i++;
			goto _iter_begin_1bc9d9069;
		}
		_iter_end_1bc9d9069:;
	};
}



inline void _1ac7ac732_checkTraitDecl(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac727548_Trait>* _177639_t) {
	if (_1ac6b58c1_IsIgnoreIdent((*((*(_177639_t))))._field_Ident)) {
		_1ac79a8b8_pushErr(_self_.ptr(), (*((*(_177639_t))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1ac79b5cd_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_177639_t)))), &((*((*(_177639_t))))._field_Ident), false)) {
		_1ac79a8b8_pushErr(_self_.ptr(), (*((*(_177639_t))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_177639_t))))._field_Ident, &__jule_any_type4)}));
		_1ac79ac2b_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1ac7abe18_checkTraitDeclInherits(_self_, _177639_t);
	_1ac7ac479_checkTraitDeclMethods(_self_, _177639_t);
}



inline jule::Bool _1ac7ac9b8_checkTraitDecls(jule::Ptr<_1ac797c7d_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc9e2ced:;
		if (it != expr_end) {
			jule::Ptr<_1ac727548_Trait> _179021_t = *it;
			{
				_1ac7ac732_checkTraitDecl(_self_, &(_179021_t));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bc9e2ced:;
			++it;
			goto _iter_begin_1bc9e2ced;
		}
		_iter_end_1bc9e2ced:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ac7acdb4_checkTraitImplMethods(_1ac797c7d_Sema* _self_, jule::Ptr<_1ac727548_Trait>* _180045_base, jule::Ptr<_1ac750bc0_Impl>* _180060_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_180060_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc9e4805:;
		if (it != expr_end) {
			jule::Ptr<_1ac71426b_Fn> *_180216_f = it;
			{
				if ((_1ac7281e7_FindMethod((*(_180045_base)).ptr(), (*((*(_180216_f))))._field_Ident) == nullptr)) {
					_1ac79a8b8_pushErr(_self_, (*((*(_180216_f))))._field_Token, jule::Str::lit("undefined identifier: trait @ has no define @", 45), jule::Slice<jule::Any>::make({jule::Any((*((*(_180045_base))))._field_Ident, &__jule_any_type4),jule::Any((*((*(_180216_f))))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1bc9e4805:;
			++it;
			goto _iter_begin_1bc9e4805;
		}
		_iter_end_1bc9e4805:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ac7ad2b0_implToStruct(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac6ee377_Struct>* _181137_dest, jule::Ptr<_1ac750bc0_Impl>* _181157_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_181157_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc9e6e56:;
		if (it != expr_end) {
			jule::Ptr<_1ac71426b_Fn> _181521_f = *it;
			{
				if (((_1ac6eeee3_FindMethod((*(_181137_dest)).ptr(), (*(_181521_f))._field_Ident, (*(_181521_f))._field_Statically) != nullptr) || (_1ac700675_FindField((*(_181137_dest)).ptr(), (*(_181521_f))._field_Ident) != nullptr))) {
					_1ac79a8b8_pushErr(_self_.ptr(), (*(_181521_f))._field_Token, jule::Str::lit("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*((*(_181137_dest))))._field_Ident, &__jule_any_type4),jule::Any((*(_181521_f))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1bc9e6e56;
				};
				if ((((*((*(_181137_dest))))._field_Generics.len() > 0LL) && ((*(_181521_f))._field_Generics.len() > 0LL))) {
					{
						auto expr = &((*(_181521_f))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bc9e9c17:;
						if (it != expr_end) {
							jule::Ptr<_1ac6d588b_GenericDecl> _182324_fg = *it;
							{
								{
									auto expr = &((*((*(_181137_dest))))._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1bc9ea663:;
									if (it != expr_end) {
										jule::Ptr<_1ac6d588b_GenericDecl> _182428_dg = *it;
										{
											if (((*(_182324_fg))._field_Ident == (*(_182428_dg))._field_Ident)) {
												_1ac79a8b8_pushErr(_self_.ptr(), (*(_182324_fg))._field_Token, jule::Str::lit("methods cannot have same generic identifier with owner same time", 64), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1bc9ea663:;
										++it;
										goto _iter_begin_1bc9ea663;
									}
									_iter_end_1bc9ea663:;
								};
							}
							_iter_next_1bc9e9c17:;
							++it;
							goto _iter_begin_1bc9e9c17;
						}
						_iter_end_1bc9e9c17:;
					};
				};
				_1ac79b941_checkDirectives(_self_, &((*(_181521_f))._field_Directives), jule::Any(_181521_f, &__jule_any_type64));
				(*(_181521_f))._field_sema=_self_;
				(*(_181521_f))._field_Owner=(*(_181137_dest));
				{ jule::Slice<jule::Ptr<_1ac71426b_Fn>> &__jule_push_dest = (*((*(_181137_dest))))._field_Methods; __jule_push_dest.push(_181521_f); };
			}
			_iter_next_1bc9e6e56:;
			++it;
			goto _iter_begin_1bc9e6e56;
		}
		_iter_end_1bc9e6e56:;
	};
	{
		auto expr = &((*((*(_181157_ipl))))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc9e73eb:;
		if (it != expr_end) {
			jule::Ptr<_1ac7bb015_Var> _184021_v = *it;
			{
				;
				if (((_1ac6eeee3_FindMethod((*(_181137_dest)).ptr(), (*(_184021_v))._field_Ident, true) != nullptr) || (_1ac700334_FindStatic((*(_181137_dest)).ptr(), (*(_184021_v))._field_Ident) != nullptr))) {
					_1ac79a8b8_pushErr(_self_.ptr(), (*(_184021_v))._field_Token, jule::Str::lit("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*((*(_181137_dest))))._field_Ident, &__jule_any_type4),jule::Any((*(_184021_v))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1bc9e73eb;
				};
				{ jule::Slice<jule::Ptr<_1ac7bb015_Var>> &__jule_push_dest = (*((*(_181137_dest))))._field_Statics; __jule_push_dest.push(_184021_v); };
			}
			_iter_next_1bc9e73eb:;
			++it;
			goto _iter_begin_1bc9e73eb;
		}
		_iter_end_1bc9e73eb:;
	};
	return __jule_func_result;;
}



inline void _1ac7ad568_implTrait(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac750bc0_Impl>* _185334_decl) {
	jule::Ptr<_1ac859a32_TypeKind> _185413_base_t = _1ac7a2172_selectType(_self_, &((*((*(_185334_decl))))._field_Base));;
	if ((_185413_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1ac727548_Trait> _185813_base = _1ac85d98c_Trait(_185413_base_t.ptr());;
	if ((_185813_base == nullptr)) {
		_1ac79a8b8_pushErr(_self_.ptr(), (*((*((*(_185334_decl))))._field_Base))._field_Token, jule::Str::lit("invalid base type for impl: @", 29), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str(_185413_base_t.ptr()), &__jule_any_type4)}));
		_1ac79ac2b_pushSuggestion(_self_.ptr(), jule::Str::lit("expected trait, use a trait", 27), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ac859a32_TypeKind> _186513_destT = _1ac7a2172_selectType(_self_, &((*((*(_185334_decl))))._field_Dest));;
	if ((_186513_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1ac702105_StructIns> _186913_destS = _1ac85d706_Struct(_186513_destT.ptr());;
	if ((_186913_destS == nullptr)) {
		_1ac79a8b8_pushErr(_self_.ptr(), (*((*((*(_185334_decl))))._field_Dest))._field_Token, jule::Str::lit("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str(_186513_destT.ptr()), &__jule_any_type4)}));
		_1ac79ac2b_pushSuggestion(_self_.ptr(), jule::Str::lit("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ac6ee377_Struct> _187613_dest = (*(_186913_destS))._field_Decl;;
	if ((_1ac6b8d9c_Dir((*((*(_187613_dest))._field_Token))._field_File.ptr()) != _1ac6b8d9c_Dir((*((*(_self_))._field_file))._field_File.ptr()))) {
		_1ac79a8b8_pushErr(_self_.ptr(), (*((*((*(_185334_decl))))._field_Dest))._field_Token, jule::Str::lit("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	_1ac7b92cc_pushImplemented(_185813_base, &(_187613_dest));
	_1ac7b95b8_pushImplements(&(_187613_dest), _185813_base);
	if (((*((*(_185334_decl))))._field_Statics.len() > 0LL)) {
		_1ac79a8b8_pushErr(_self_.ptr(), (*((*((*(_185334_decl))))._field_Statics[0LL]))._field_Token, jule::Str::lit("trait implementations cannot implement static field", 51), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1ac7acdb4_checkTraitImplMethods(_self_.ptr(), &(_185813_base), _185334_decl)))) {
			_case_begin_1bca095d9:;
		}
		else if ((!(_1ac7ad2b0_implToStruct(_self_, &(_187613_dest), _185334_decl)))) {
			_case_begin_1bca09661:;
		}
		_match_end_1bca06b25:;
	};
}



inline void _1ac7ad821_implStruct(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac750bc0_Impl>* _189635_decl) {
	jule::Ptr<_1ac859a32_TypeKind> _189713_destT = _1ac7a2172_selectType(_self_, &((*((*(_189635_decl))))._field_Dest));;
	if ((_189713_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1ac702105_StructIns> _190113_destS = _1ac85d706_Struct(_189713_destT.ptr());;
	if ((_190113_destS == nullptr)) {
		_1ac79a8b8_pushErr(_self_.ptr(), (*((*((*(_189635_decl))))._field_Dest))._field_Token, jule::Str::lit("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str(_189713_destT.ptr()), &__jule_any_type4)}));
		_1ac79ac2b_pushSuggestion(_self_.ptr(), jule::Str::lit("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ac6ee377_Struct> _190813_dest = (*(_190113_destS))._field_Decl;;
	if ((_1ac6b8d9c_Dir((*((*(_190813_dest))._field_Token))._field_File.ptr()) != _1ac6b8d9c_Dir((*((*(_self_))._field_file))._field_File.ptr()))) {
		_1ac79a8b8_pushErr(_self_.ptr(), (*((*((*(_189635_decl))))._field_Dest))._field_Token, jule::Str::lit("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1ac7ad2b0_implToStruct(_self_, &(_190813_dest), _189635_decl)))) {
			_case_begin_1bca10117:;
		}
		_match_end_1bca0d7ec:;
	};
}



inline void _1ac7adac9_implImpl(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac750bc0_Impl>* _192033_decl) {
	{
		
		if (_1ac751088_IsTraitImpl((*(_192033_decl)).ptr())) {
			_case_begin_1bca10bea:;
			{
				_1ac7ad568_implTrait(_self_, _192033_decl);
			}
		}
		else if (_1ac75131e_IsStructImpl((*(_192033_decl)).ptr())) {
			_case_begin_1bca10c72:;
			{
				_1ac7ad821_implStruct(_self_, _192033_decl);
			}
		}
		_match_end_1bca10ada:;
	};
}



inline void _1ac7ade3c_checkVarDecl(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac7bb015_Var>* _193137_decl, jule::Trait<_1ac879568_Lookup> _193153_l) {
	if (_1ac6b58c1_IsIgnoreIdent((*((*(_193137_decl))))._field_Ident)) {
		_1ac79a8b8_pushErr(_self_.ptr(), (*((*(_193137_decl))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1ac7bb631_IsTypeInferred((*(_193137_decl)).ptr())) {
		if ((!(_1ac7bb39a_IsInitialized((*(_193137_decl)).ptr())))) {
			_1ac79a8b8_pushErr(_self_.ptr(), (*((*(_193137_decl))))._field_Token, jule::Str::lit("type inferred declarations should have a initializer expression", 63), jule::Slice<jule::Any>());
		};
	} else {
		_1ac7a1539_checkType(_self_, &((*((*(_193137_decl))))._field_Kind), _193153_l);
	};
	if ((*((*(_193137_decl))))._field_Reference) {
		if ((*((*(_193137_decl))))._field_Constant) {
			_1ac79a8b8_pushErr(_self_.ptr(), (*((*(_193137_decl))))._field_Token, jule::Str::lit("references cannot be constant", 29), jule::Slice<jule::Any>());
		};
		if ((*((*(_193137_decl))))._field_Statically) {
			_1ac79a8b8_pushErr(_self_.ptr(), (*((*(_193137_decl))))._field_Token, jule::Str::lit("static variables cannot be reference", 36), jule::Slice<jule::Any>());
		};
	};
	if ((!(_1ac7bb39a_IsInitialized((*(_193137_decl)).ptr())))) {
		if ((*((*(_193137_decl))))._field_Constant) {
			_1ac79a8b8_pushErr(_self_.ptr(), (*((*(_193137_decl))))._field_Token, jule::Str::lit("missing expression for constant variable initialization", 55), jule::Slice<jule::Any>());
		};
		if ((*((*(_193137_decl))))._field_Statically) {
			_1ac79a8b8_pushErr(_self_.ptr(), (*((*(_193137_decl))))._field_Token, jule::Str::lit("static variables must be have initialize expression", 51), jule::Slice<jule::Any>());
		};
		if ((*((*(_193137_decl))))._field_Reference) {
			_1ac79a8b8_pushErr(_self_.ptr(), (*((*(_193137_decl))))._field_Token, jule::Str::lit("reference variables must be have lvalue initialize expression", 61), jule::Slice<jule::Any>());
		};
	};
}



inline void _1ac7ae1e5_checkGlobalVarDecl(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac7bb015_Var>* _196843_decl) {
	if (_1ac79b5cd_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_196843_decl)))), &((*((*(_196843_decl))))._field_Ident), (*((*(_196843_decl))))._field_Binded)) {
		_1ac79a8b8_pushErr(_self_.ptr(), (*((*(_196843_decl))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_196843_decl))))._field_Ident, &__jule_any_type4)}));
		_1ac79ac2b_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_196843_decl))))._field_Binded && (*((*(_196843_decl))))._field_Constant)) {
		_1ac79a8b8_pushErr(_self_.ptr(), (*((*(_196843_decl))))._field_Token, jule::Str::lit("binded variables cannot be constant", 35), jule::Slice<jule::Any>());
	};
	if ((((!((*((*(_196843_decl))))._field_Binded)) && (!((*((*(_196843_decl))))._field_Constant))) && (!((*((*(_196843_decl))))._field_Statically)))) {
		_1ac79a8b8_pushErr(_self_.ptr(), (*((*(_196843_decl))))._field_Token, jule::Str::lit("global variables must be static", 31), jule::Slice<jule::Any>());
		_1ac79ac2b_pushSuggestion(_self_.ptr(), jule::Str::lit("use \"static\" keyword to define", 30), jule::Slice<jule::Any>());
	};
	_1ac79b941_checkDirectives(_self_, &((*((*(_196843_decl))))._field_Directives), jule::Any((*(_196843_decl)), &__jule_any_type8));
	_1ac7ade3c_checkVarDecl(_self_, _196843_decl, jule::Trait<_1ac879568_Lookup>(_self_, 3));
}



inline jule::Bool _1ac7ae47b_checkGlobalDecls(jule::Ptr<_1ac797c7d_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bca1dc91:;
		if (it != expr_end) {
			jule::Ptr<_1ac7bb015_Var> _198621_decl = *it;
			{
				_1ac7ae1e5_checkGlobalVarDecl(_self_, &(_198621_decl));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bca1dc91:;
			++it;
			goto _iter_begin_1bca1dc91;
		}
		_iter_end_1bca1dc91:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ac7ae877_checkStructTraitImpl(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac6ee377_Struct>* _199645_strct, jule::Ptr<_1ac727548_Trait>* _199666_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_199666_trt))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bca20699:;
		if (it != expr_end) {
			jule::Ptr<_1ac71426b_Fn> _199721_tf = *it;
			{
				jule::Bool _199817_exist = false;;
				jule::Ptr<_1ac71426b_Fn> _199917_sf = _1ac6eeee3_FindMethod((*(_199645_strct)).ptr(), (*(_199721_tf))._field_Ident, (*(_199721_tf))._field_Statically);;
				jule::Ptr<_1ac717170_FnIns> _200013_tfK = _1ac7a53ea_getTraitCheckFnKind(_self_, &(_199721_tf));;
				if ((_199917_sf != nullptr)) {
					jule::Ptr<_1ac717170_FnIns> _200221_sfK = _1ac7a53ea_getTraitCheckFnKind(_self_, &(_199917_sf));;
					_199817_exist=_1ac7180d8_equalTrait(_200013_tfK, &(_200221_sfK));
				};
				if (_199817_exist) {
					jule::Ptr<_1ac6c7a9d_Directive> _200617_d = _1ac84cc23_findDirective(&((*(_199917_sf))._field_Directives), jule::Str::lit("deprecated", 10));;
					if ((_200617_d != nullptr)) {
						_1ac79a8b8_pushErr(_self_.ptr(), (*(_200617_d))._field_Tag, jule::Str::lit("trait implementations cannot have deprecated code", 49), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1ac79a8b8_pushErr(_self_.ptr(), (*((*(_199645_strct))))._field_Token, jule::Str::lit("trait @ derived but not implemented define @", 44), jule::Slice<jule::Any>::make({jule::Any((*((*(_199666_trt))))._field_Ident, &__jule_any_type4),jule::Any(_1ac71901d_GetKindStr(_200013_tfK.ptr(), true), &__jule_any_type4)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1bca20699:;
			++it;
			goto _iter_begin_1bca20699;
		}
		_iter_end_1bca20699:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ac7aebb8_checkStructImpls(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac6ee377_Struct>* _202041_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_202041_s))))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bca26370:;
		if (it != expr_end) {
			jule::Ptr<_1ac727548_Trait> _202221_trt = *it;
			{
				__jule_func_result=(_1ac7ae877_checkStructTraitImpl(_self_, _202041_s, &(_202221_trt)) && __jule_func_result);
			}
			_iter_next_1bca26370:;
			++it;
			goto _iter_begin_1bca26370;
		}
		_iter_end_1bca26370:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1ac7b0009_checkStructFields(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac6ee377_Struct>* _202842_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_202842_st))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bca27849:;
		if (it != expr_end) {
			jule::Ptr<_1ac6eb484_Field> _203021_f = *it;
			{
				(*(_203021_f))._field_Owner=(*(_202842_st));
				{
					auto expr = &((*((*(_202842_st))))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bca2855e:;
					if (it != expr_end) {
						jule::Ptr<_1ac6eb484_Field> _203220_cf = *it;
						{
							if ((_203021_f == _203220_cf)) {
								goto _iter_end_1bca2855e;
							} else if (((*(_203021_f))._field_Ident == (*(_203220_cf))._field_Ident)) {
								_1ac79a8b8_pushErr(_self_.ptr(), (*(_203021_f))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_203021_f))._field_Ident, &__jule_any_type4)}));
								_1ac79ac2b_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1bca2855e:;
						++it;
						goto _iter_begin_1bca2855e;
					}
					_iter_end_1bca2855e:;
				};
			}
			_iter_next_1bca27849:;
			++it;
			goto _iter_begin_1bca27849;
		}
		_iter_end_1bca27849:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1ac7b02b2_checkStructDecl(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac6ee377_Struct>* _204540_s) {
	if (_1ac6b58c1_IsIgnoreIdent((*((*(_204540_s))))._field_Ident)) {
		_1ac79a8b8_pushErr(_self_.ptr(), (*((*(_204540_s))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1ac79b5cd_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_204540_s)))), &((*((*(_204540_s))))._field_Ident), (*((*(_204540_s))))._field_Binded)) {
		_1ac79a8b8_pushErr(_self_.ptr(), (*((*(_204540_s))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_204540_s))))._field_Ident, &__jule_any_type4)}));
		_1ac79ac2b_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1ac79b941_checkDirectives(_self_, &((*((*(_204540_s))))._field_Directives), jule::Any((*(_204540_s)), &__jule_any_type65));
	{
		
		if ((!(_1ac7aa5dc_checkDeclGenerics(_self_.ptr(), &((*((*(_204540_s))))._field_Generics))))) {
			_case_begin_1bca2d0e1:;
		}
		else if ((!(_1ac7b0009_checkStructFields(_self_, _204540_s)))) {
			_case_begin_1bca2d157:;
		}
		else if ((!(_1ac7aebb8_checkStructImpls(_self_, _204540_s)))) {
			_case_begin_1bca2d1bd:;
		}
		else if ((!(_1ac7b0dea_checkFuncDeclsBy(_self_, &((*((*(_204540_s))))._field_Methods))))) {
			_case_begin_1bca2d245:;
		}
		_match_end_1bca2cec0:;
	};
}



inline jule::Bool _1ac7b0548_checkStructDecls(jule::Ptr<_1ac797c7d_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bca30467:;
		if (it != expr_end) {
			jule::Ptr<_1ac6ee377_Struct> _206521_s = *it;
			{
				_1ac7b02b2_checkStructDecl(_self_, &(_206521_s));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bca30467:;
			++it;
			goto _iter_begin_1bca30467;
		}
		_iter_end_1bca30467:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1ac7b0801_checkAnonFuncDecl(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac71426b_Fn>* _207542_f) {
	(*((*(_207542_f))))._field_sema=_self_;
	_1ac7ab368_checkFnDeclPrototype(_self_, _207542_f);
}



inline void _1ac7b0aa9_checkFuncDecl(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac71426b_Fn>* _208038_f) {
	if (_1ac6b58c1_IsIgnoreIdent((*((*(_208038_f))))._field_Ident)) {
		_1ac79a8b8_pushErr(_self_.ptr(), (*((*(_208038_f))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1ac715228_IsAnon((*(_208038_f)).ptr())) {
		_1ac79a8b8_pushErr(_self_.ptr(), (*((*(_208038_f))))._field_Token, jule::Str::lit("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	_1ac79b941_checkDirectives(_self_, &((*((*(_208038_f))))._field_Directives), jule::Any((*(_208038_f)), &__jule_any_type64));
	_1ac7b0801_checkAnonFuncDecl(_self_, _208038_f);
	if ((((*((*(_208038_f))))._field_Owner == nullptr) && _1ac79b5cd_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_208038_f)))), &((*((*(_208038_f))))._field_Ident), (*((*(_208038_f))))._field_Binded))) {
		if ((*((*(_208038_f))))._field_Ident.equal("init", 4)) {
			jule::Ptr<_1ac71426b_Fn> _209217_init = _1ac799312_FindFn(_self_.ptr(), jule::Str::lit("init", 4), false);;
			if ((_209217_init != nullptr)) {
				return;;
			};
		};
		_1ac79a8b8_pushErr(_self_.ptr(), (*((*(_208038_f))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_208038_f))))._field_Ident, &__jule_any_type4)}));
		_1ac79ac2b_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1ac7b0dea_checkFuncDeclsBy(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Slice<jule::Ptr<_1ac71426b_Fn>>* _210241_funcs) {
	{
		auto expr = _210241_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bca3764a:;
		if (it != expr_end) {
			jule::Ptr<_1ac71426b_Fn> _210321_f = *it;
			{
				_1ac7b0aa9_checkFuncDecl(_self_, &(_210321_f));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_1bca3764a:;
			++it;
			goto _iter_begin_1bca3764a;
		}
		_iter_end_1bca3764a:;
	};
	return true;;
}



inline jule::Bool _1ac7b1181_checkFuncDecls(jule::Ptr<_1ac797c7d_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1ac7b0dea_checkFuncDeclsBy(_self_, &((*((*(_self_))._field_file))._field_Funcs));
	return __jule_func_result;;
}



inline void _1ac7b159e_pushCycleError(_1ac797c7d_Sema* _self_, jule::Str* _211830_st1, jule::Str* _211841_st2, _1c164cc40_StrBuilder* _211856_message) {
	;
	jule::Str _21209_refersTo = _1a756da9d_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_211830_st1)), &__jule_any_type4),jule::Any((*(_211841_st2)), &__jule_any_type4)}));;
	jule::Str _21219_m = _1c164dee9_Str(_211856_message);;
	_1c164d702_WriteStr(_211856_message, _1a6938c27_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1c164d702_WriteStr(_211856_message, _21209_refersTo);
	_1c164d9aa_WriteByte(_211856_message, '\n');
	_1c164d702_WriteStr(_211856_message, _21219_m);
}



inline void _1ac7b1c53_checkPackageDecls(jule::Ptr<_1ac797c7d_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bca3e278:;
		if (it != expr_end) {
			jule::Ptr<_1ac81e013_SymbolTable> _214521_f = *it;
			{
				_1ac79a49a_setCurrentFile(_self_.ptr(), _214521_f);
				if ((!(_1ac7a850d_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1bca3e278:;
			++it;
			goto _iter_begin_1bca3e278;
		}
		_iter_end_1bca3e278:;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bca3e72e:;
		if (it != expr_end) {
			jule::Ptr<_1ac81e013_SymbolTable> _215221_f = *it;
			{
				_1ac79a49a_setCurrentFile(_self_.ptr(), _215221_f);
				if ((!(_1ac7ac9b8_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1bca3e72e:;
			++it;
			goto _iter_begin_1bca3e72e;
		}
		_iter_end_1bca3e72e:;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bca40752:;
		if (it != expr_end) {
			jule::Ptr<_1ac81e013_SymbolTable> _215921_f = *it;
			{
				_1ac79a49a_setCurrentFile(_self_.ptr(), _215921_f);
				if ((!(_1ac7ae47b_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1bca40752:;
			++it;
			goto _iter_begin_1bca40752;
		}
		_iter_end_1bca40752:;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bca41797:;
		if (it != expr_end) {
			jule::Ptr<_1ac81e013_SymbolTable> _216621_f = *it;
			{
				_1ac79a49a_setCurrentFile(_self_.ptr(), _216621_f);
				{
					
					if ((!(_1ac7b1181_checkFuncDecls(_self_)))) {
						_case_begin_1bca42da3:;
					}
					else if ((!(_1ac7b0548_checkStructDecls(_self_)))) {
						_case_begin_1bca42e19:;
					}
					else {
						_case_begin_1bca42d3c:;
						{
							goto _iter_next_1bca41797;
						}
					}
					_match_end_1bca42cd7:;
				};
				return;;
			}
			_iter_next_1bca41797:;
			++it;
			goto _iter_begin_1bca41797;
		}
		_iter_end_1bca41797:;
	};
}



inline void _1ac7b20b6_checkDataForTypeInference(_1ac797c7d_Sema* _self_, jule::Ptr<_1ac8243ae_Data>* _217845_d, jule::Ptr<_1ac6b2e62_Token>* _217856_err_token) {
	{
		
		if (_1ac824766_IsNil((*(_217845_d)).ptr())) {
			_case_begin_1bca44008:;
			{
				_1ac79a8b8_pushErr(_self_, (*(_217856_err_token)), jule::Str::lit("nil is cannot use with type inferred definitions", 48), jule::Slice<jule::Any>());
			}
		}
		else if (_1ac8249ec_IsVoid((*(_217845_d)).ptr())) {
			_case_begin_1bca44080:;
			{
				_1ac79a8b8_pushErr(_self_, (*(_217856_err_token)), jule::Str::lit("void data is cannot use for type inferred definitions", 53), jule::Slice<jule::Any>());
			}
		}
		else if ((*((*((*(_217845_d))))._field_Kind))._field_Variadic) {
			_case_begin_1bca44107:;
			{
				_1ac79a8b8_pushErr(_self_, (*(_217856_err_token)), jule::Str::lit("invalid expression for type inference", 37), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bca43dd7:;
	};
}



inline void _1ac7b236e_checkVarValue(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac7bb015_Var>* _219038_v) {
	if (_1ac7bb631_IsTypeInferred((*(_219038_v)).ptr())) {
		(*((*(_219038_v))))._field_Kind=jule::new_ptr<_1ac861c04_TypeSymbol>(_1ac861c04_TypeSymbol{._field_Kind=(*((*((*((*(_219038_v))))._field_Value))._field_Data))._field_Kind});
		_1ac7b20b6_checkDataForTypeInference(_self_.ptr(), &((*((*((*(_219038_v))))._field_Value))._field_Data), &((*((*((*((*(_219038_v))))._field_Value))._field_Expr))._field_Token));
		_1ac7a7760_checkValidityForInitExpr(_self_, (*((*(_219038_v))))._field_Mutable, (*((*(_219038_v))))._field_Reference, &((*((*((*(_219038_v))))._field_Kind))._field_Kind), &((*((*((*(_219038_v))))._field_Value))._field_Data), &((*((*((*((*(_219038_v))))._field_Value))._field_Expr))._field_Token));
	} else {
		jule::Ptr<_1ac868e2b_Arr> _220317_arr = _1ac85ce53_Arr((*((*((*(_219038_v))))._field_Kind))._field_Kind.ptr());;
		if ((_220317_arr != nullptr)) {
			if ((*(_220317_arr))._field_Auto) {
				jule::Ptr<_1ac868e2b_Arr> _220621_dataArr = _1ac85ce53_Arr((*((*((*((*(_219038_v))))._field_Value))._field_Data))._field_Kind.ptr());;
				if ((_220621_dataArr != nullptr)) {
					(*(_220317_arr))._field_N=(*(_220621_dataArr))._field_N;
				};
			};
		};
		if (_1ac7a33c6_checkAssignType(_self_, (*((*(_219038_v))))._field_Reference, &((*((*((*(_219038_v))))._field_Kind))._field_Kind), &((*((*((*(_219038_v))))._field_Value))._field_Data), (*((*((*((*(_219038_v))))._field_Value))._field_Expr))._field_Token)) {
			_1ac7a7760_checkValidityForInitExpr(_self_, (*((*(_219038_v))))._field_Mutable, (*((*(_219038_v))))._field_Reference, &((*((*((*(_219038_v))))._field_Kind))._field_Kind), &((*((*((*(_219038_v))))._field_Value))._field_Data), &((*((*((*((*(_219038_v))))._field_Value))._field_Expr))._field_Token));
		};
	};
	if (((*((*(_219038_v))))._field_Reference && (!(_1ac876026_isValidForRef(&((*((*((*(_219038_v))))._field_Kind))._field_Kind)))))) {
		_1ac79a8b8_pushErr(_self_.ptr(), (*((*(_219038_v))))._field_Token, jule::Str::lit("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*((*((*(_219038_v))))._field_Kind))._field_Kind.ptr()), &__jule_any_type4)}));
	};
	if ((*((*(_219038_v))))._field_Constant) {
		if (((!(_1ac824c83_IsConst((*((*((*(_219038_v))))._field_Value))._field_Data.ptr()))) && (!(_1ac85e240_comptime((*((*((*((*(_219038_v))))._field_Value))._field_Data))._field_Kind.ptr()))))) {
			_1ac79a8b8_pushErr(_self_.ptr(), (*((*((*((*(_219038_v))))._field_Value))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
	} else {
		(*((*((*((*(_219038_v))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*((*((*(_219038_v))))._field_Value))._field_Data))._field_untyped=false;
	};
	if ((_1ac85dea9_Tup((*((*((*(_219038_v))))._field_Kind))._field_Kind.ptr()) != nullptr)) {
		(*((*((*(_219038_v))))._field_Kind))._field_Kind=nullptr;
	};
}



inline void _1ac7b26d2_evalVarValue(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac7bb015_Var>* _224337_decl, jule::Trait<_1ac879568_Lookup> _224353_l) {
	if ((!(_1ac7bb39a_IsInitialized((*(_224337_decl)).ptr())))) {
		return;;
	};
	jule::Ptr<_1ac8260a3_Eval> _224817_eval = nullptr;;
	if (((*((*(_224337_decl))))._field_Kind != nullptr)) {
		_224817_eval=_1ac7a2628_evalpd(_self_, _224353_l, (*((*((*(_224337_decl))))._field_Kind))._field_Kind, (*(_224337_decl)));
	} else {
		_224817_eval=_1ac7a2628_evalpd(_self_, _224353_l, nullptr, (*(_224337_decl)));
	};
	(*(_224817_eval))._field_immutable=(!((*((*(_224337_decl))))._field_Mutable));
	(*((*((*(_224337_decl))))._field_Value))._field_Data=_1ac844313_evalExpr(_224817_eval, (*((*((*(_224337_decl))))._field_Value))._field_Expr);
}



inline void _1ac7b2a45_checkVar(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac7bb015_Var>* _226033_decl, jule::Trait<_1ac879568_Lookup> _226049_l) {
	_1ac7b26d2_evalVarValue(_self_, _226033_decl, _226049_l);
	if (((*((*((*(_226033_decl))))._field_Value))._field_Data == nullptr)) {
		return;;
	};
	_1ac7b236e_checkVarValue(_self_, _226033_decl);
}



inline void _1ac7b2c43_checkGlobals(jule::Ptr<_1ac797c7d_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bca5a97b:;
		if (it != expr_end) {
			jule::Ptr<_1ac7bb015_Var> _227021_decl = *it;
			{
				if ((*(_227021_decl))._field_Binded) {
					goto _iter_next_1bca5a97b;
				};
				if (((_1ac7bb39a_IsInitialized(_227021_decl.ptr()) && ((*((*(_227021_decl))._field_Value))._field_Data == nullptr)) || (_1ac7bb631_IsTypeInferred(_227021_decl.ptr()) && ((*((*(_227021_decl))._field_Kind))._field_Kind == nullptr)))) {
					_1ac7b2a45_checkVar(_self_, &(_227021_decl), jule::Trait<_1ac879568_Lookup>(_self_, 3));
				};
			}
			_iter_next_1bca5a97b:;
			++it;
			goto _iter_begin_1bca5a97b;
		}
		_iter_end_1bca5a97b:;
	};
}



inline jule::Ptr<_1ac717170_FnIns> _1ac7b313e_readyToCheckFn(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac702105_StructIns>* _228439_s, jule::Ptr<_1ac71426b_Fn>* _228459_f) {
	jule::Ptr<_1ac717170_FnIns> _228513_ins = _1ac7159cb_instance((*(_228459_f)));;
	if (((*((*(_228459_f))))._field_Instances.len() != 0LL)) {
		return _228513_ins;;
	};
	(*(_228513_ins))._field_Owner=(*(_228439_s));
	_1ac715cd9_appendInstance((*(_228459_f)).ptr(), &(_228513_ins));
	(*(_228513_ins))._field_reloaded=true;
	if (_1ac7a684c_reloadFnInsTypes(_self_, _228513_ins)) {
		return _228513_ins;;
	};
	return nullptr;;
}



inline void _1ac7b34a2_checkTypeMethod(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac702105_StructIns>* _229840_s, jule::Ptr<_1ac71426b_Fn>* _229860_f) {
	if (((*((*(_229860_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1ac717170_FnIns> _230313_ins = (*((*(_229860_f))))._field_Instances[0LL];;
	if (((*((*(_230313_ins))._field_Scope))._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1ac7b5e55_checkFnIns(_self_, &(_230313_ins));
}



inline jule::Ptr<_1ac717170_FnIns> _1ac7b3958_checkStructInsOp(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac702105_StructIns>* _231141_s, jule::Ptr<_1ac71426b_Fn>* _231161_f, jule::Fn<jule::Bool(jule::Ptr<_1ac71426b_Fn>)> _231169_p) {
	if (((((*(_231161_f)) == nullptr) || ((*((*(_231161_f))))._field_Generics.len() > 0LL)) || (!(_231169_p((*(_231161_f))))))) {
		return nullptr;;
	};
	return (*((*(_231161_f))))._field_Instances[0LL];;
}



inline jule::Bool _1ac7b3d54_checkStructEnv(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac702105_StructIns>* _232139_s, jule::Ptr<_1ac6b2e62_Token> _232158_errorToken) {
	jule::Bool __jule_func_result = false;
	_1ac86b8e0_typeChecker _232213_tc = _1ac86b8e0_typeChecker{._field_s=(*((*((*(_232139_s))))._field_Decl))._field_sema, ._field_rootLookup=jule::Trait<_1ac879568_Lookup>((*((*((*(_232139_s))))._field_Decl))._field_sema, 3), ._field_lookup=jule::Trait<_1ac879568_Lookup>((*((*((*(_232139_s))))._field_Decl))._field_sema, 3), ._field_referencer=jule::new_ptr<_1ac86a900_referencer>(_1ac86a900_referencer{._field_ident=(*((*((*(_232139_s))))._field_Decl))._field_Ident, ._field_owner=jule::Any((*((*(_232139_s))))._field_Decl, &__jule_any_type65), }), ._field_refers=(*((*(_232139_s))))._field_Refers, };;
	if (((*((*(_232139_s))))._field_Generics.len() > 0LL)) {
		_232213_tc._field_useGenerics=jule::Slice<jule::Ptr<_1ac858c40_TypeAlias>>::alloc(0LL, (*((*(_232139_s))))._field_Generics.len());
		{
			auto expr = &((*((*(_232139_s))))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bca66e93:;
			if (it != expr_end) {
				jule::I64 _233518_i = it - expr->begin();
				jule::Ptr<_1ac85814b_InsGeneric> _233525_g = *it;
				{
					jule::Ptr<_1ac6d588b_GenericDecl> _233621_decl = (*((*((*(_232139_s))))._field_Decl))._field_Generics[_233518_i];;
					{ jule::Slice<jule::Ptr<_1ac858c40_TypeAlias>> &__jule_push_dest = _232213_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_1ac858c40_TypeAlias>(_1ac858c40_TypeAlias{._field_Token=(*(_233621_decl))._field_Token, ._field_Ident=(*(_233621_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1ac861c04_TypeSymbol>(_1ac861c04_TypeSymbol{._field_Kind=(*(_233525_g))._field_Kind}), })); };
				}
				_iter_next_1bca66e93:;
				++it;
				_233518_i++;
				goto _iter_begin_1bca66e93;
			}
			_iter_end_1bca66e93:;
		};
	};
	jule::Ptr<_1ac81e013_SymbolTable> _234513_oldFile = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1ac79a49a_setCurrentFile(_self_.ptr(), _234513_oldFile);
	});;
	if (((*((*(_self_))._field_file))._field_File != (*((*((*((*(_232139_s))))._field_Decl))._field_Token))._field_File)) {
		jule::Ptr<_1ac81e013_SymbolTable> _234917_file = _1ac7969c4_findFile(&((*(_self_))._field_files), &((*((*((*((*(_232139_s))))._field_Decl))._field_Token))._field_File));;
		if ((_234917_file != nullptr)) {
			_1ac79a49a_setCurrentFile(_self_.ptr(), _234917_file);
		};
	};
	if (((*((*(_232139_s))))._field_Generics.len() > 0LL)) {
		jule::Ptr<_1ac74d86b_constraintChecker> _235617_cc = _1ac7a113d_constraintChecker(_self_);;
		(*(_235617_cc))._field_et=_232158_errorToken;
		(*(_235617_cc))._field_si=(*(_232139_s));
		(*(_235617_cc))._field_genericsA=_232213_tc._field_useGenerics;
		(*(_235617_cc))._field_uniq=true;
		if ((!(_1ac74e7a1_check(_235617_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*((*(_232139_s))))._field_Statics.len() > 0LL)) {
		jule::I64 _236917_n = (*(_self_))._field_errors.len();;
		(*((*(_self_))._field_files[0LL]))._field_TypeAliases=jule::append(_232213_tc._field_useGenerics,(*((*(_self_))._field_files[0LL]))._field_TypeAliases);
		{
			auto expr = &((*((*(_232139_s))))._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bca70023:;
			if (it != expr_end) {
				jule::Ptr<_1ac7bb015_Var> _237125_v = *it;
				{
					_1ac7ade3c_checkVarDecl(_self_, &(_237125_v), jule::Trait<_1ac879568_Lookup>(_self_, 3));
					_1ac7b2a45_checkVar(_self_, &(_237125_v), jule::Trait<_1ac879568_Lookup>(_self_, 3));
					__jule_func_result=((((*(_self_))._field_errors.len() - _236917_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1bca70023:;
				++it;
				goto _iter_begin_1bca70023;
			}
			_iter_end_1bca70023:;
		};
		(*((*(_self_))._field_files[0LL]))._field_TypeAliases=(*((*(_self_))._field_files[0LL]))._field_TypeAliases.slice(_232213_tc._field_useGenerics.len());
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1ac8260a3_Eval> _238213_eval = _1ac7a2d65_eval(_self_, jule::Trait<_1ac879568_Lookup>(_self_, 3));;
	(*((*(_232139_s))))._field_Comparable=(!((*((*((*(_232139_s))))._field_Decl))._field_Binded));
	{
		auto expr = &((*((*(_232139_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bca74368:;
		if (it != expr_end) {
			jule::Ptr<_1ac701555_FieldIns> _238421_f = *it;
			{
				jule::Ptr<_1ac859a32_TypeKind> _238517_kind = _1ac87408a_checkDecl(&_232213_tc, &((*((*((*(_238421_f))._field_Decl))._field_Kind))._field_Decl));;
				__jule_func_result=((_238517_kind != nullptr) && __jule_func_result);
				if ((_238517_kind == nullptr)) {
					if (((_self_ != (*((*((*(_232139_s))))._field_Decl))._field_sema) && ((*((*((*((*(_232139_s))))._field_Decl))._field_sema))._field_errors.len() > 0LL))) {
						((*(_self_))._field_errors).append((*((*((*((*(_232139_s))))._field_Decl))._field_sema))._field_errors);;
						(*((*((*((*(_232139_s))))._field_Decl))._field_sema))._field_errors=nullptr;
					};
					goto _iter_next_1bca74368;
				};
				(*(_238421_f))._field_Kind=_238517_kind;
				(*((*(_232139_s))))._field_Mutable=((*((*(_232139_s))))._field_Mutable || ((!((*((*(_238421_f))._field_Decl))._field_Mutable)) && _1ac85b3b3_Mutable((*(_238421_f))._field_Kind.ptr())));
				(*((*(_232139_s))))._field_Comparable=((*((*(_232139_s))))._field_Comparable && _1ac85b12c_Comparable((*(_238421_f))._field_Kind.ptr()));
				if (((*((*(_238421_f))._field_Decl))._field_Default == nullptr)) {
					goto _iter_next_1bca74368;
				};
				(*(_238213_eval))._field_prefix=(*(_238421_f))._field_Kind;
				(*(_238213_eval))._field_field=_238421_f;
				(*(_238421_f))._field_Default=_1ac844313_evalExpr(_238213_eval, (*((*(_238421_f))._field_Decl))._field_Default);
				if (((*(_238421_f))._field_Default == nullptr)) {
					goto _iter_next_1bca74368;
				};
				;
				_1ac7a33c6_checkAssignType(_self_, false, &((*(_238421_f))._field_Kind), &((*(_238421_f))._field_Default), (*((*((*(_238421_f))._field_Decl))._field_Default))._field_Token);
			}
			_iter_next_1bca74368:;
			++it;
			goto _iter_begin_1bca74368;
		}
		_iter_end_1bca74368:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ac7b4250_precheckStructIns(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac702105_StructIns>* _241842_s, jule::Ptr<_1ac6b2e62_Token> _241861_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1ac7b3d54_checkStructEnv(_self_, _241842_s, _241861_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*((*(_241842_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bca7dedd:;
		if (it != expr_end) {
			jule::Ptr<_1ac71426b_Fn> _242321_f = *it;
			{
				if (((*(_242321_f))._field_Generics.len() == 0LL)) {
					if ((_1ac7b313e_readyToCheckFn(_self_, _241842_s, &(_242321_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1bca7dedd:;
			++it;
			goto _iter_begin_1bca7dedd;
		}
		_iter_end_1bca7dedd:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1ac7b4508_checkStructIns(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac702105_StructIns>* _243339_s) {
	{
		auto expr = &((*((*(_243339_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bca8093a:;
		if (it != expr_end) {
			jule::Ptr<_1ac71426b_Fn> _243421_f = *it;
			{
				_1ac7b34a2_checkTypeMethod(_self_, _243339_s, &(_243421_f));
			}
			_iter_next_1bca8093a:;
			++it;
			goto _iter_begin_1bca8093a;
		}
		_iter_end_1bca8093a:;
	};
}



inline void _1ac7b47b1_checkTypeStruct(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac6ee377_Struct>* _243940_s) {
	if ((*((*(_243940_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_243940_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_243940_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bca82442:;
		if (it != expr_end) {
			jule::Ptr<_1ac702105_StructIns> _245221_ins = *it;
			{
				_1ac7b4508_checkStructIns(_self_, &(_245221_ins));
			}
			_iter_next_1bca82442:;
			++it;
			goto _iter_begin_1bca82442;
		}
		_iter_end_1bca82442:;
	};
}



inline void _1ac7b49ae_checkStructTypes(jule::Ptr<_1ac797c7d_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bca833ee:;
		if (it != expr_end) {
			jule::Ptr<_1ac6ee377_Struct> _245821_s = *it;
			{
				_1ac7b47b1_checkTypeStruct(_self_, &(_245821_s));
			}
			_iter_next_1bca833ee:;
			++it;
			goto _iter_begin_1bca833ee;
		}
		_iter_end_1bca833ee:;
	};
}



inline void _1ac7b4c67_checkStructInsOperators(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac702105_StructIns> _246347_s) {
	{
		auto expr = &((*(_246347_s))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bca843ab:;
		if (it != expr_end) {
			jule::Ptr<_1ac71426b_Fn> _246421_m = *it;
			{
				{
					auto &_match_expr{ (*(_246421_m))._field_Ident };
					
					if (_match_expr == jule::Str::lit("Eq", 2)) {
						_case_begin_1bca850b0:;
						{
							(*(_246347_s))._field_Operators._field_Eq=_1ac7b3958_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1ac7bcd6e_Eq);
							(*(_246347_s))._field_Comparable=((*(_246347_s))._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str::lit("Gt", 2)) {
						_case_begin_1bca85137:;
						{
							(*(_246347_s))._field_Operators._field_Gt=_1ac7b3958_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1ac7bd138_Gt);
						}
					}
					else if (_match_expr == jule::Str::lit("GtEq", 4)) {
						_case_begin_1bca851ae:;
						{
							(*(_246347_s))._field_Operators._field_GtEq=_1ac7b3958_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1ac7bd402_GtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Lt", 2)) {
						_case_begin_1bca85236:;
						{
							(*(_246347_s))._field_Operators._field_Lt=_1ac7b3958_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1ac7bd6bb_Lt);
						}
					}
					else if (_match_expr == jule::Str::lit("LtEq", 4)) {
						_case_begin_1bca852ad:;
						{
							(*(_246347_s))._field_Operators._field_LtEq=_1ac7b3958_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1ac7bd985_LtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Shl", 3)) {
						_case_begin_1bca85335:;
						{
							(*(_246347_s))._field_Operators._field_Shl=_1ac7b3958_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1ac7be0c3_Shl);
						}
					}
					else if (_match_expr == jule::Str::lit("Shr", 3)) {
						_case_begin_1bca853ac:;
						{
							(*(_246347_s))._field_Operators._field_Shr=_1ac7b3958_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1ac7be38c_Shr);
						}
					}
					else if (_match_expr == jule::Str::lit("Add", 3)) {
						_case_begin_1bca85434:;
						{
							(*(_246347_s))._field_Operators._field_Add=_1ac7b3958_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1ac7be656_Add);
						}
					}
					else if (_match_expr == jule::Str::lit("Sub", 3)) {
						_case_begin_1bca854ab:;
						{
							(*(_246347_s))._field_Operators._field_Sub=_1ac7b3958_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1ac7be920_Sub);
						}
					}
					else if (_match_expr == jule::Str::lit("Div", 3)) {
						_case_begin_1bca85533:;
						{
							(*(_246347_s))._field_Operators._field_Div=_1ac7b3958_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1ac7bebd9_Div);
						}
					}
					else if (_match_expr == jule::Str::lit("Mul", 3)) {
						_case_begin_1bca855aa:;
						{
							(*(_246347_s))._field_Operators._field_Mul=_1ac7b3958_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1ac7beea3_Mul);
						}
					}
					else if (_match_expr == jule::Str::lit("Mod", 3)) {
						_case_begin_1bca85632:;
						{
							(*(_246347_s))._field_Operators._field_Mod=_1ac7b3958_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1ac7c026c_Mod);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAnd", 6)) {
						_case_begin_1bca856a9:;
						{
							(*(_246347_s))._field_Operators._field_BitAnd=_1ac7b3958_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1ac7c0536_BitAnd);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOr", 5)) {
						_case_begin_1bca85731:;
						{
							(*(_246347_s))._field_Operators._field_BitOr=_1ac7b3958_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1ac7c0800_BitOr);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXor", 6)) {
						_case_begin_1bca857a8:;
						{
							(*(_246347_s))._field_Operators._field_BitXor=_1ac7b3958_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1ac7c0ab9_BitXor);
						}
					}
					else if (_match_expr == jule::Str::lit("Neg", 3)) {
						_case_begin_1bca85830:;
						{
							(*(_246347_s))._field_Operators._field_Neg=_1ac7b3958_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1ac7c1207_Neg);
						}
					}
					else if (_match_expr == jule::Str::lit("Pos", 3)) {
						_case_begin_1bca858a7:;
						{
							(*(_246347_s))._field_Operators._field_Pos=_1ac7b3958_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1ac7c14c1_Pos);
						}
					}
					else if (_match_expr == jule::Str::lit("BitNot", 6)) {
						_case_begin_1bca8592e:;
						{
							(*(_246347_s))._field_Operators._field_BitNot=_1ac7b3958_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1ac7c178a_BitNot);
						}
					}
					else if (_match_expr == jule::Str::lit("AddAssign", 9)) {
						_case_begin_1bca859a6:;
						{
							(*(_246347_s))._field_Operators._field_AddAssign=_1ac7b3958_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1ac7c1dc8_AddAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("SubAssign", 9)) {
						_case_begin_1bca85a2d:;
						{
							(*(_246347_s))._field_Operators._field_SubAssign=_1ac7b3958_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1ac7c2192_SubAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("DivAssign", 9)) {
						_case_begin_1bca85aa5:;
						{
							(*(_246347_s))._field_Operators._field_DivAssign=_1ac7b3958_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1ac7c245b_DivAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("MulAssign", 9)) {
						_case_begin_1bca85b2c:;
						{
							(*(_246347_s))._field_Operators._field_MulAssign=_1ac7b3958_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1ac7c2725_MulAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ModAssign", 9)) {
						_case_begin_1bca85ba4:;
						{
							(*(_246347_s))._field_Operators._field_ModAssign=_1ac7b3958_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1ac7c29de_ModAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShlAssign", 9)) {
						_case_begin_1bca85c2b:;
						{
							(*(_246347_s))._field_Operators._field_ShlAssign=_1ac7b3958_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1ac7c2ca8_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShrAssign", 9)) {
						_case_begin_1bca85ca3:;
						{
							(*(_246347_s))._field_Operators._field_ShrAssign=_1ac7b3958_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1ac7c3072_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOrAssign", 11)) {
						_case_begin_1bca85d2a:;
						{
							(*(_246347_s))._field_Operators._field_BitOrAssign=_1ac7b3958_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1ac7c333b_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAndAssign", 12)) {
						_case_begin_1bca85da2:;
						{
							(*(_246347_s))._field_Operators._field_BitAndAssign=_1ac7b3958_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1ac7c3605_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXorAssign", 12)) {
						_case_begin_1bca85e29:;
						{
							(*(_246347_s))._field_Operators._field_BitXorAssign=_1ac7b3958_checkStructInsOp(_self_, &(_246347_s), &(_246421_m), static__1ac7c38be_BitXorAssign);
						}
					}
					_match_end_1bca84d07:;
				};
			}
			_iter_next_1bca843ab:;
			++it;
			goto _iter_begin_1bca843ab;
		}
		_iter_end_1bca843ab:;
	};
}



inline void _1ac7b5020_precheckStructType(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac6ee377_Struct>* _252743_s) {
	if ((*((*(_252743_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_252743_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_252743_s))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1ac702105_StructIns> _253817_ins = _1ac6ee7d9_instance((*(_252743_s)));;
		(*(_253817_ins))._field_Checked=true;
		_1ac6eeae7_appendInstance((*(_252743_s)).ptr(), &(_253817_ins));
		_1ac7b4250_precheckStructIns(_self_, &(_253817_ins), nullptr);
	};
	_1ac7b4c67_checkStructInsOperators(_self_, (*((*(_252743_s))))._field_Instances[0LL]);
}



inline void _1ac7b521d_precheckStructTypes(jule::Ptr<_1ac797c7d_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bca9bd30:;
		if (it != expr_end) {
			jule::Ptr<_1ac6ee377_Struct> _254821_s = *it;
			{
				_1ac7b5020_precheckStructType(_self_, &(_254821_s));
			}
			_iter_next_1bca9bd30:;
			++it;
			goto _iter_begin_1bca9bd30;
		}
		_iter_end_1bca9bd30:;
	};
}



inline void _1ac7b54c6_checkRets(_1ac797c7d_Sema* _self_, jule::Ptr<_1ac717170_FnIns>* _255333_f) {
	if (_1ac7146de_IsVoid((*((*(_255333_f))))._field_Decl.ptr())) {
		return;;
	};
	_1ac7b794b_missingRetChecker _25579_mrc = static__1ac7b7d14_new();;
	jule::Bool _25589_ok = _1ac7b8e36_check(&_25579_mrc, (*((*(_255333_f))))._field_Scope);;
	if ((!(_25589_ok))) {
		_1ac79a8b8_pushErr(_self_, (*((*((*(_255333_f))))._field_Decl))._field_Token, jule::Str::lit("missing return at end of function", 33), jule::Slice<jule::Any>());
	};
}



inline void _1ac7b5839_checkFnInsSc(_1ac797c7d_Sema* _self_, jule::Ptr<_1ac717170_FnIns>* _256436_f, jule::Ptr<_1ac75d42a_scopeChecker>* _256452_sc) {
	_1ac796078_appendRetVars(&((*((*((*(_256452_sc))))._field_table))._field_Vars), _256436_f);
	_1ac796364_appendParamVars(&((*((*((*(_256452_sc))))._field_table))._field_Vars), _256436_f);
	_1ac796650_appendGenericTypeAliases(&((*((*((*(_256452_sc))))._field_table))._field_TypeAliases), _256436_f);
	_1ac76eb34_check((*(_256452_sc)), &((*((*((*(_256436_f))))._field_Decl))._field_Scope), &((*((*(_256436_f))))._field_Scope));
	if ((!(_1ac760eee_stopped((*(_256452_sc)).ptr())))) {
		_1ac7b54c6_checkRets(_self_, _256436_f);
	};
}



inline void _1ac7b5b9c_checkFnInsCaller(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac717170_FnIns>* _257741_f, jule::Ptr<_1ac6b2e62_Token> _257756_caller) {
	if ((*((*((*(_257741_f))))._field_Decl))._field_Binded) {
		return;;
	};
	jule::Ptr<_1ac81e013_SymbolTable> _258213_old = (*((*((*((*(_257741_f))))._field_Decl))._field_sema))._field_file;;
	__JULE_DEFER({
		_1ac79a49a_setCurrentFile((*((*((*(_257741_f))))._field_Decl))._field_sema.ptr(), _258213_old);
	});;
	jule::Ptr<_1ac81e013_SymbolTable> _258413_file = _1ac7969c4_findFile(&((*((*((*((*(_257741_f))))._field_Decl))._field_sema))._field_files), &((*((*((*((*(_257741_f))))._field_Decl))._field_Token))._field_File));;
	if ((_258413_file != nullptr)) {
		_1ac79a49a_setCurrentFile((*((*((*(_257741_f))))._field_Decl))._field_sema.ptr(), _258413_file);
	};
	jule::Ptr<_1ac75d42a_scopeChecker> _258913_sc = _1ac7532bb_newScopeChecker(&((*((*((*(_257741_f))))._field_Decl))._field_sema), (*(_257741_f)));;
	(*(_258913_sc))._field_calledFrom=_257756_caller;
	_1ac7b5839_checkFnInsSc(_self_.ptr(), _257741_f, &(_258913_sc));
	if (((*((*((*(_257741_f))))._field_Decl))._field_sema != _self_)) {
		((*(_self_))._field_errors).append((*((*((*((*(_257741_f))))._field_Decl))._field_sema))._field_errors);;
		(*((*((*((*(_257741_f))))._field_Decl))._field_sema))._field_errors=nullptr;
	};
}



inline void _1ac7b5e55_checkFnIns(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac717170_FnIns>* _259935_f) {
	_1ac7b5b9c_checkFnInsCaller(_self_, _259935_f, nullptr);
}



inline void _1ac7b620d_checkFunc(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac71426b_Fn>* _260334_f) {
	if ((*((*(_260334_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_260334_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_260334_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcaaa3c1:;
		if (it != expr_end) {
			jule::Ptr<_1ac717170_FnIns> _261321_ins = *it;
			{
				_1ac7b5e55_checkFnIns(_self_, &(_261321_ins));
			}
			_iter_next_1bcaaa3c1:;
			++it;
			goto _iter_begin_1bcaaa3c1;
		}
		_iter_end_1bcaaa3c1:;
	};
}



inline void _1ac7b64b6_checkTestFn(_1ac797c7d_Sema* _self_, jule::Ptr<_1ac717170_FnIns>* _261835_f) {
	if ((*((*((*(_261835_f))))._field_Decl))._field_Public) {
		_1ac79a8b8_pushErr(_self_, (*((*((*(_261835_f))))._field_Decl))._field_Token, jule::Str::lit("test function cannot be public", 30), jule::Slice<jule::Any>());
		_1ac79ac2b_pushSuggestion(_self_, jule::Str::lit("dont use identifier which is starts with capital letter to avoid define as public", 81), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*((*((*(_261835_f))))._field_Decl))._field_Unsafety || (!(_1ac7146de_IsVoid((*((*(_261835_f))))._field_Decl.ptr())))) || ((*((*((*(_261835_f))))._field_Decl))._field_Generics.len() != 0LL)) || ((*((*(_261835_f))))._field_Params.len() != 1LL)) || (*((*((*((*(_261835_f))))._field_Decl))._field_Params[0LL]))._field_Mutable) || (*((*((*((*(_261835_f))))._field_Decl))._field_Params[0LL]))._field_Reference)) {
		_1ac79a8b8_pushErr(_self_, (*((*((*(_261835_f))))._field_Decl))._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1ac79ac2b_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ac866137_Sptr> _263613_sptr = _1ac85c419_Sptr((*((*((*(_261835_f))))._field_Params[0LL]))._field_Kind.ptr());;
	if ((_263613_sptr == nullptr)) {
		_1ac79a8b8_pushErr(_self_, (*((*((*(_261835_f))))._field_Decl))._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1ac79ac2b_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ac702105_StructIns> _26439_s = _1ac85d706_Struct((*(_263613_sptr))._field_Elem.ptr());;
	if (((_26439_s == nullptr) || (!(_1ac77cd0c_isStdPackage(&((*((*((*((*(_26439_s))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("testing", 7)))))) {
		_1ac79a8b8_pushErr(_self_, (*((*((*(_261835_f))))._field_Decl))._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1ac79ac2b_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1ac7b676e_precheckFunc(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Ptr<_1ac71426b_Fn>* _265137_f) {
	if ((*((*(_265137_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_265137_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_265137_f))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1ac717170_FnIns> _266217_ins = _1ac715745_instanceForce((*(_265137_f)));;
		{ jule::Slice<jule::Ptr<_1ac717170_FnIns>> &__jule_push_dest = (*((*(_265137_f))))._field_Instances; __jule_push_dest.push(_266217_ins); };
		jule::Bool _266413_ok = _1ac7a684c_reloadFnInsTypes(_self_, _266217_ins);;
		(*(_266217_ins))._field_reloaded=true;
		if ((_266413_ok && _1ac875652_hasDirective(&((*((*(_265137_f))))._field_Directives), jule::Str::lit("test", 4)))) {
			_1ac7b64b6_checkTestFn(_self_.ptr(), &(_266217_ins));
		};
	};
}



inline void _1ac7b696c_precheckFuncs(jule::Ptr<_1ac797c7d_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcab8555:;
		if (it != expr_end) {
			jule::Ptr<_1ac727548_Trait> _267521_decl = *it;
			{
				{
					auto expr = &((*(_267521_decl))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bcab8ea1:;
					if (it != expr_end) {
						jule::Ptr<_1ac71426b_Fn> _267625_m = *it;
						{
							_1ac7b676e_precheckFunc(_self_, &(_267625_m));
						}
						_iter_next_1bcab8ea1:;
						++it;
						goto _iter_begin_1bcab8ea1;
					}
					_iter_end_1bcab8ea1:;
				};
			}
			_iter_next_1bcab8555:;
			++it;
			goto _iter_begin_1bcab8555;
		}
		_iter_end_1bcab8555:;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcab9446:;
		if (it != expr_end) {
			jule::Ptr<_1ac71426b_Fn> _268021_decl = *it;
			{
				_1ac7b676e_precheckFunc(_self_, &(_268021_decl));
			}
			_iter_next_1bcab9446:;
			++it;
			goto _iter_begin_1bcab9446;
		}
		_iter_end_1bcab9446:;
	};
}



inline void _1ac7b6b6a_checkFuncs(jule::Ptr<_1ac797c7d_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcaba7aa:;
		if (it != expr_end) {
			jule::Ptr<_1ac71426b_Fn> _268721_decl = *it;
			{
				_1ac7b620d_checkFunc(_self_, &(_268721_decl));
			}
			_iter_next_1bcaba7aa:;
			++it;
			goto _iter_begin_1bcaba7aa;
		}
		_iter_end_1bcaba7aa:;
	};
}



inline void _1ac7b6d68_checkPackageTypes(jule::Ptr<_1ac797c7d_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcabb5ad:;
		if (it != expr_end) {
			jule::Ptr<_1ac81e013_SymbolTable> _269521_f = *it;
			{
				_1ac79a49a_setCurrentFile(_self_.ptr(), _269521_f);
				_1ac7b2c43_checkGlobals(_self_);
				_1ac7b696c_precheckFuncs(_self_);
				_1ac7b521d_precheckStructTypes(_self_);
			}
			_iter_next_1bcabb5ad:;
			++it;
			goto _iter_begin_1bcabb5ad;
		}
		_iter_end_1bcabb5ad:;
	};
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcabd12b:;
		if (it != expr_end) {
			jule::Ptr<_1ac81e013_SymbolTable> _270621_f = *it;
			{
				_1ac79a49a_setCurrentFile(_self_.ptr(), _270621_f);
				_1ac7b6b6a_checkFuncs(_self_);
				_1ac7b49ae_checkStructTypes(_self_);
			}
			_iter_next_1bcabd12b:;
			++it;
			goto _iter_begin_1bcabd12b;
		}
		_iter_end_1bcabd12b:;
	};
}



inline void _1ac7b7066_setFileSemaFields(jule::Ptr<_1ac797c7d_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcabe715:;
		if (it != expr_end) {
			jule::Ptr<_1ac71426b_Fn> _271421_f = *it;
			{
				(*(_271421_f))._field_sema=_self_;
			}
			_iter_next_1bcabe715:;
			++it;
			goto _iter_begin_1bcabe715;
		}
		_iter_end_1bcabe715:;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcac0381:;
		if (it != expr_end) {
			jule::Ptr<_1ac6ee377_Struct> _271721_st = *it;
			{
				(*(_271721_st))._field_sema=_self_;
			}
			_iter_next_1bcac0381:;
			++it;
			goto _iter_begin_1bcac0381;
		}
		_iter_end_1bcac0381:;
	};
}



inline void _1ac7b7264_setSemaFields(jule::Ptr<_1ac797c7d_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcac1063:;
		if (it != expr_end) {
			jule::Ptr<_1ac81e013_SymbolTable> _272321_file = *it;
			{
				_1ac79a49a_setCurrentFile(_self_.ptr(), _272321_file);
				_1ac7b7066_setFileSemaFields(_self_);
			}
			_iter_next_1bcac1063:;
			++it;
			goto _iter_begin_1bcac1063;
		}
		_iter_end_1bcac1063:;
	};
}



inline void _1ac7b751c_check(jule::Ptr<_1ac797c7d_Sema> _self_, jule::Slice<jule::Ptr<_1ac81e013_SymbolTable>>* _272930_files) {
	(*(_self_))._field_files=(*(_272930_files));
	_1ac79e339_checkImports(_self_.ptr());
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1ac7b7264_setSemaFields(_self_);
	_1ac79ed2e_checkInherits(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1ac79e735_implImpls(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1ac79e933_checkEnums(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1ac7b1c53_checkPackageDecls(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1ac7b6d68_checkPackageTypes(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1ac797c7d_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags << ", ";
	_Stream << "meta:" << _Src._field_meta;
	_Stream << "}";
	return _Stream;
}



inline _1ac7b794b_missingRetChecker static__1ac7b7d14_new(void) {
	return _1ac7b794b_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };;
}



inline jule::Bool _1ac7b8122_checkConditional(_1ac7b794b_missingRetChecker* _self_, jule::Ptr<_1ac756c5e_Conditional> _277735_c) {
	{
		auto expr = &((*(_277735_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcac66d9:;
		if (it != expr_end) {
			jule::Ptr<_1ac756544_If> _277821_elif = *it;
			{
				if ((_277821_elif == nullptr)) {
					return false;;
				};
				if ((!(_1ac7b8ae5_checkScope(_self_, (*(_277821_elif))._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1bcac66d9:;
			++it;
			goto _iter_begin_1bcac66d9;
		}
		_iter_end_1bcac66d9:;
	};
	return (((*(_277735_c))._field_Default != nullptr) && _1ac7b8ae5_checkScope(_self_, (*((*(_277735_c))._field_Default))._field_Scope));;
}



inline jule::Bool _1ac7b8463_checkMatch(_1ac7b794b_missingRetChecker* _self_, jule::Ptr<_1ac75a25c_Match> _278929_m) {
	{
		auto expr = &((*(_278929_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcac87a7:;
		if (it != expr_end) {
			jule::Ptr<_1ac75ad95_Case> _279021_c = *it;
			{
				if ((_279021_c == nullptr)) {
					return false;;
				};
				jule::I64 _279413_n = (*(_self_))._field_breaked.len();;
				jule::Bool _279513_ok = _1ac7b8ae5_checkScope(_self_, (*(_279021_c))._field_Scope);;
				{
					
					if ((_279413_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1bcaca215:;
						{
							return false;;
						}
					}
					else if ((!(_279513_ok))) {
						_case_begin_1bcaca28c:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1bcaca314;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1bcaca314:;
						{
							(*(_self_))._field_falled=false;
							if (((*(_279021_c))._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1bcac87a7;
						}
					}
					_match_end_1bcaca15a:;
				};
			}
			_iter_next_1bcac87a7:;
			++it;
			goto _iter_begin_1bcac87a7;
		}
		_iter_end_1bcac87a7:;
	};
	return (((*(_278929_m))._field_Default != nullptr) && _1ac7b8ae5_checkScope(_self_, (*((*(_278929_m))._field_Default))._field_Scope));;
}



inline jule::Bool _1ac7b87a4_checkInfIter(_1ac7b794b_missingRetChecker* _self_, jule::Ptr<_1ac75705b_InfIter> _281531_it) {
	jule::I64 _28169_n = (*(_self_))._field_breaked.len();;
	if (_1ac7b8ae5_checkScope(_self_, (*(_281531_it))._field_Scope)) {
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _28169_n);
		return true;;
	};
	if ((_28169_n != (*(_self_))._field_breaked.len())) {
		jule::Uintptr _282213_itaddr = static_cast<jule::Uintptr>(_281531_it);;
		{
			auto expr = (*(_self_))._field_breaked.slice(_28169_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1bcace109:;
			if (it != expr_end) {
				jule::Uintptr _282320_addr = *it;
				{
					if ((_282213_itaddr == _282320_addr)) {
						(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _28169_n);
						return false;;
					};
				}
				_iter_next_1bcace109:;
				++it;
				goto _iter_begin_1bcace109;
			}
			_iter_end_1bcace109:;
		};
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _28169_n);
	};
	return true;;
}



inline jule::Bool _1ac7b8ae5_checkScope(_1ac7b794b_missingRetChecker* _self_, jule::Ptr<_1ac756126_Scope> _283429_s) {
	if ((_283429_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &((*(_283429_s))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcad0a89:;
		if (it != expr_end) {
			jule::Any _283821_st = *it;
			{
				{
					auto &_match_expr{ _283821_st };
					
					if (_match_expr.type == &__jule_any_type48) {
						_case_begin_1bcad13e7:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type49) {
						_case_begin_1bcad146e:;
						{
							jule::Uintptr _284417_addr = (*(_283821_st.cast_ptr<_1ac7586bc_BreakSt>(&__jule_any_type49)))._field_It;;
							if ((_284417_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_284417_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type41) {
						_case_begin_1bcad14e6:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type36) {
						_case_begin_1bcad156d:;
						{
							if (_1ac7b87a4_checkInfIter(_self_, _283821_st.cast_ptr<_1ac75705b_InfIter>(&__jule_any_type36))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type50) {
						_case_begin_1bcad15e5:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1bcad166c:;
						{
							if (_1ac7b8ae5_checkScope(_self_, _283821_st.cast_ptr<_1ac756126_Scope>(&__jule_any_type22))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type24) {
						_case_begin_1bcad16e4:;
						{
							{
								auto &_match_expr{ (*(_283821_st.cast_ptr<_1ac8243ae_Data>(&__jule_any_type24)))._field_Model };
								
								if (_match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type23) {
									_case_begin_1bcad520e:;
									{
										return true;;
									}
								}
								_match_end_1bcad51a9:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type35) {
						_case_begin_1bcad176b:;
						{
							if (_1ac7b8122_checkConditional(_self_, _283821_st.cast_ptr<_1ac756c5e_Conditional>(&__jule_any_type35))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type47) {
						_case_begin_1bcad17e3:;
						{
							if (_1ac7b8463_checkMatch(_self_, _283821_st.cast_ptr<_1ac75a25c_Match>(&__jule_any_type47))) {
								return true;;
							};
						}
					}
					_match_end_1bcad1260:;
				};
			}
			_iter_next_1bcad0a89:;
			++it;
			goto _iter_begin_1bcad0a89;
		}
		_iter_end_1bcad0a89:;
	};
	return false;;
}



inline jule::Bool _1ac7b8e36_check(_1ac7b794b_missingRetChecker* _self_, jule::Ptr<_1ac756126_Scope> _288024_s) {
	return _1ac7b8ae5_checkScope(_self_, _288024_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac7b794b_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac7b9d5a_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac7bb39a_IsInitialized(_1ac7bb015_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1ac7bb631_IsTypeInferred(_1ac7bb015_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*((*(_self_))._field_Kind))._field_Decl == nullptr));;
}



inline jule::Bool _1ac7bb8b7_untypedConstant(_1ac7bb015_Var* _self_) {
	return (_1ac7bb631_IsTypeInferred(_self_) && (*((*((*(_self_))._field_Value))._field_Data))._field_untyped);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac7bb015_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1ac7bc467_Dispose(jule::Ptr<_1ac71426b_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && ((*(_1023_f))._field_Owner != nullptr)) && (*(_1023_f))._field_Ident.equal("Dispose", 7)) && (!((*(_1023_f))._field_Statically))) && (!((*(_1023_f))._field_Unsafety))) && _1ac7146de_IsVoid(_1023_f.ptr())) && ((*(_1023_f))._field_Generics.len() == 0LL)) && ((*(_1023_f))._field_Params.len() == 1LL)) && (*((*(_1023_f))._field_Params[0LL]))._field_Mutable) && (!(_1ac713149_IsRef((*(_1023_f))._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__1ac7bc731_Str(jule::Ptr<_1ac71426b_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || ((*(_2419_f))._field_Owner == nullptr)) || (!(*(_2419_f))._field_Ident.equal("Str", 3))) || (*(_2419_f))._field_Statically) || (*(_2419_f))._field_Unsafety) || _1ac7146de_IsVoid(_2419_f.ptr())) || ((*(_2419_f))._field_Generics.len() != 0LL)) || ((*(_2419_f))._field_Params.len() != 1LL)) || (*((*(_2419_f))._field_Params[0LL]))._field_Mutable) || _1ac713149_IsRef((*(_2419_f))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1ac717170_FnIns> _3813_ins = (*(_2419_f))._field_Instances[0LL];;
	jule::Ptr<_1ac86260b_Prim> _399_prim = _1ac85c183_Prim((*(_3813_ins))._field_Result.ptr());;
	if ((_399_prim == nullptr)) {
		return false;;
	};
	return _1ac865a93_IsStr(_399_prim.ptr());;
}



inline jule::Bool static__1ac7bcaa5_logical(jule::Ptr<_1ac71426b_Fn>* _4624_f, jule::Str _4632_ident) {
	if (((((((((((((((*(_4624_f)) == nullptr) || ((*((*(_4624_f))))._field_Ident != _4632_ident)) || ((*((*(_4624_f))))._field_Owner == nullptr)) || ((*((*(_4624_f))))._field_Instances.len() == 0LL)) || (*((*(_4624_f))))._field_Statically) || (*((*(_4624_f))))._field_Unsafety) || _1ac7146de_IsVoid((*(_4624_f)).ptr())) || ((*((*(_4624_f))))._field_Generics.len() != 0LL)) || ((*((*(_4624_f))))._field_Params.len() != 2LL)) || (*((*((*(_4624_f))))._field_Params[0LL]))._field_Mutable) || _1ac713149_IsRef((*((*(_4624_f))))._field_Params[0LL].ptr())) || (*((*((*(_4624_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_4624_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1ac717170_FnIns> _6313_ins = (*((*(_4624_f))))._field_Instances[0LL];;
	jule::Ptr<_1ac86260b_Prim> _649_prim = _1ac85c183_Prim((*(_6313_ins))._field_Result.ptr());;
	if (((_649_prim == nullptr) || (!(_1ac86580c_IsBool(_649_prim.ptr()))))) {
		return false;;
	};
	return ((*(_6313_ins))._field_Owner == _1ac85d706_Struct((*((*(_6313_ins))._field_Params[1LL]))._field_Kind.ptr()));;
}



inline jule::Bool static__1ac7bcd6e_Eq(jule::Ptr<_1ac71426b_Fn> _7218_f) {
	return static__1ac7bcaa5_logical(&(_7218_f), jule::Str::lit("Eq", 2));;
}



inline jule::Bool static__1ac7bd138_Gt(jule::Ptr<_1ac71426b_Fn> _7718_f) {
	return static__1ac7bcaa5_logical(&(_7718_f), jule::Str::lit("Gt", 2));;
}



inline jule::Bool static__1ac7bd402_GtEq(jule::Ptr<_1ac71426b_Fn> _8220_f) {
	return static__1ac7bcaa5_logical(&(_8220_f), jule::Str::lit("GtEq", 4));;
}



inline jule::Bool static__1ac7bd6bb_Lt(jule::Ptr<_1ac71426b_Fn> _8718_f) {
	return static__1ac7bcaa5_logical(&(_8718_f), jule::Str::lit("Lt", 2));;
}



inline jule::Bool static__1ac7bd985_LtEq(jule::Ptr<_1ac71426b_Fn> _9220_f) {
	return static__1ac7bcaa5_logical(&(_9220_f), jule::Str::lit("LtEq", 4));;
}



inline jule::Bool static__1ac7bdd09_result(jule::Ptr<_1ac71426b_Fn>* _9623_f, jule::Str _9631_ident) {
	if (((((((((((((((*(_9623_f)) == nullptr) || ((*((*(_9623_f))))._field_Ident != _9631_ident)) || ((*((*(_9623_f))))._field_Owner == nullptr)) || ((*((*(_9623_f))))._field_Instances.len() == 0LL)) || (*((*(_9623_f))))._field_Statically) || (*((*(_9623_f))))._field_Unsafety) || _1ac7146de_IsVoid((*(_9623_f)).ptr())) || ((*((*(_9623_f))))._field_Generics.len() != 0LL)) || ((*((*(_9623_f))))._field_Params.len() != 2LL)) || (*((*((*(_9623_f))))._field_Params[0LL]))._field_Mutable) || _1ac713149_IsRef((*((*(_9623_f))))._field_Params[0LL].ptr())) || (*((*((*(_9623_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_9623_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1ac717170_FnIns> _11313_ins = (*((*(_9623_f))))._field_Instances[0LL];;
	return (_1ac85d706_Struct((*(_11313_ins))._field_Result.ptr()) == (*(_11313_ins))._field_Owner);;
}



inline jule::Bool static__1ac7be0c3_Shl(jule::Ptr<_1ac71426b_Fn> _11819_f) {
	return static__1ac7bdd09_result(&(_11819_f), jule::Str::lit("Shl", 3));;
}



inline jule::Bool static__1ac7be38c_Shr(jule::Ptr<_1ac71426b_Fn> _12319_f) {
	return static__1ac7bdd09_result(&(_12319_f), jule::Str::lit("Shr", 3));;
}



inline jule::Bool static__1ac7be656_Add(jule::Ptr<_1ac71426b_Fn> _12819_f) {
	return static__1ac7bdd09_result(&(_12819_f), jule::Str::lit("Add", 3));;
}



inline jule::Bool static__1ac7be920_Sub(jule::Ptr<_1ac71426b_Fn> _13319_f) {
	return static__1ac7bdd09_result(&(_13319_f), jule::Str::lit("Sub", 3));;
}



inline jule::Bool static__1ac7bebd9_Div(jule::Ptr<_1ac71426b_Fn> _13819_f) {
	return static__1ac7bdd09_result(&(_13819_f), jule::Str::lit("Div", 3));;
}



inline jule::Bool static__1ac7beea3_Mul(jule::Ptr<_1ac71426b_Fn> _14319_f) {
	return static__1ac7bdd09_result(&(_14319_f), jule::Str::lit("Mul", 3));;
}



inline jule::Bool static__1ac7c026c_Mod(jule::Ptr<_1ac71426b_Fn> _14819_f) {
	return static__1ac7bdd09_result(&(_14819_f), jule::Str::lit("Mod", 3));;
}



inline jule::Bool static__1ac7c0536_BitAnd(jule::Ptr<_1ac71426b_Fn> _15322_f) {
	return static__1ac7bdd09_result(&(_15322_f), jule::Str::lit("BitAnd", 6));;
}



inline jule::Bool static__1ac7c0800_BitOr(jule::Ptr<_1ac71426b_Fn> _15821_f) {
	return static__1ac7bdd09_result(&(_15821_f), jule::Str::lit("BitOr", 5));;
}



inline jule::Bool static__1ac7c0ab9_BitXor(jule::Ptr<_1ac71426b_Fn> _16322_f) {
	return static__1ac7bdd09_result(&(_16322_f), jule::Str::lit("BitXor", 6));;
}



inline jule::Bool static__1ac7c0e3d_unary(jule::Ptr<_1ac71426b_Fn>* _16722_f, jule::Str _16730_ident) {
	if (((((((((((((*(_16722_f)) == nullptr) || ((*((*(_16722_f))))._field_Ident != _16730_ident)) || ((*((*(_16722_f))))._field_Owner == nullptr)) || ((*((*(_16722_f))))._field_Instances.len() == 0LL)) || (*((*(_16722_f))))._field_Statically) || (*((*(_16722_f))))._field_Unsafety) || _1ac7146de_IsVoid((*(_16722_f)).ptr())) || ((*((*(_16722_f))))._field_Generics.len() != 0LL)) || ((*((*(_16722_f))))._field_Params.len() != 1LL)) || (*((*((*(_16722_f))))._field_Params[0LL]))._field_Mutable) || _1ac713149_IsRef((*((*(_16722_f))))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1ac717170_FnIns> _18213_ins = (*((*(_16722_f))))._field_Instances[0LL];;
	return (_1ac85d706_Struct((*(_18213_ins))._field_Result.ptr()) == (*(_18213_ins))._field_Owner);;
}



inline jule::Bool static__1ac7c1207_Neg(jule::Ptr<_1ac71426b_Fn> _18719_f) {
	return static__1ac7c0e3d_unary(&(_18719_f), jule::Str::lit("Neg", 3));;
}



inline jule::Bool static__1ac7c14c1_Pos(jule::Ptr<_1ac71426b_Fn> _19219_f) {
	return static__1ac7c0e3d_unary(&(_19219_f), jule::Str::lit("Pos", 3));;
}



inline jule::Bool static__1ac7c178a_BitNot(jule::Ptr<_1ac71426b_Fn> _19722_f) {
	return static__1ac7c0e3d_unary(&(_19722_f), jule::Str::lit("BitNot", 6));;
}



inline jule::Bool static__1ac7c1b0e_assign(jule::Ptr<_1ac71426b_Fn>* _20123_f, jule::Str _20131_ident) {
	if (((((((((((((((*(_20123_f)) == nullptr) || ((*((*(_20123_f))))._field_Ident != _20131_ident)) || ((*((*(_20123_f))))._field_Owner == nullptr)) || ((*((*(_20123_f))))._field_Instances.len() == 0LL)) || (*((*(_20123_f))))._field_Statically) || (*((*(_20123_f))))._field_Unsafety) || (!(_1ac7146de_IsVoid((*(_20123_f)).ptr())))) || ((*((*(_20123_f))))._field_Generics.len() != 0LL)) || ((*((*(_20123_f))))._field_Params.len() != 2LL)) || (!((*((*((*(_20123_f))))._field_Params[0LL]))._field_Mutable))) || _1ac713149_IsRef((*((*(_20123_f))))._field_Params[0LL].ptr())) || (*((*((*(_20123_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_20123_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1ac7c1dc8_AddAssign(jule::Ptr<_1ac71426b_Fn> _22125_f) {
	return static__1ac7c1b0e_assign(&(_22125_f), jule::Str::lit("AddAssign", 9));;
}



inline jule::Bool static__1ac7c2192_SubAssign(jule::Ptr<_1ac71426b_Fn> _22625_f) {
	return static__1ac7c1b0e_assign(&(_22625_f), jule::Str::lit("SubAssign", 9));;
}



inline jule::Bool static__1ac7c245b_DivAssign(jule::Ptr<_1ac71426b_Fn> _23125_f) {
	return static__1ac7c1b0e_assign(&(_23125_f), jule::Str::lit("DivAssign", 9));;
}



inline jule::Bool static__1ac7c2725_MulAssign(jule::Ptr<_1ac71426b_Fn> _23625_f) {
	return static__1ac7c1b0e_assign(&(_23625_f), jule::Str::lit("MulAssign", 9));;
}



inline jule::Bool static__1ac7c29de_ModAssign(jule::Ptr<_1ac71426b_Fn> _24125_f) {
	return static__1ac7c1b0e_assign(&(_24125_f), jule::Str::lit("ModAssign", 9));;
}



inline jule::Bool static__1ac7c2ca8_ShlAssign(jule::Ptr<_1ac71426b_Fn> _24625_f) {
	return static__1ac7c1b0e_assign(&(_24625_f), jule::Str::lit("ShlAssign", 9));;
}



inline jule::Bool static__1ac7c3072_ShrAssign(jule::Ptr<_1ac71426b_Fn> _25125_f) {
	return static__1ac7c1b0e_assign(&(_25125_f), jule::Str::lit("ShrAssign", 9));;
}



inline jule::Bool static__1ac7c333b_BitOrAssign(jule::Ptr<_1ac71426b_Fn> _25627_f) {
	return static__1ac7c1b0e_assign(&(_25627_f), jule::Str::lit("BitOrAssign", 11));;
}



inline jule::Bool static__1ac7c3605_BitAndAssign(jule::Ptr<_1ac71426b_Fn> _26128_f) {
	return static__1ac7c1b0e_assign(&(_26128_f), jule::Str::lit("BitAndAssign", 12));;
}



inline jule::Bool static__1ac7c38be_BitXorAssign(jule::Ptr<_1ac71426b_Fn> _26628_f) {
	return static__1ac7c1b0e_assign(&(_26628_f), jule::Str::lit("BitXorAssign", 12));;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac7bbd29_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1ac80b7d6_pushErr(_1ac80b2db_typeCompatibilityChecker* _self_, jule::Str _11826_fmt, jule::Slice<jule::Any> _11839_args) {
	_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11826_fmt, _11839_args);
}



inline jule::Bool _1ac80ba6c_checkTrait(_1ac80b2db_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1ac85ab10_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac727548_Trait> _12613_trt = _1ac85d98c_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _12713_ref = false;;
	{
		
		if ((_1ac85c419_Sptr((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1bcb26cbc:;
			{
				_12713_ref=true;
				(*(_self_))._field_src=(*(_1ac85c419_Sptr((*(_self_))._field_src.ptr())))._field_Elem;
				if ((_1ac85d706_Struct((*(_self_))._field_src.ptr()) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1bcb26d44;
			}
		}
		else if ((_1ac85d706_Struct((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1bcb26d44:;
			{
				jule::Ptr<_1ac702105_StructIns> _13713_s = _1ac85d706_Struct((*(_self_))._field_src.ptr());;
				if ((!(_1ac7009b6_IsImplements((*(_13713_s))._field_Decl.ptr(), _12613_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_12713_ref)) && _1ac809dab_traitHasReferenceReceiver(&(_12613_trt)))) {
					_1ac80b7d6_pushErr(_self_, jule::Str::lit("trait has reference receiver parameter used method, cannot assign non-reference instance", 88), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ac85d98c_Trait((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1bcb26dbb:;
			{
				jule::Ptr<_1ac727548_Trait> _14717_base = _1ac85d98c_Trait((*(_self_))._field_src.ptr());;
				if ((_12613_trt == _14717_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_1bcb31700:;
				{
					auto expr = &((*(_14717_base))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bcb31e09:;
					if (it != expr_end) {
						jule::Ptr<_1ac6ee377_Struct> _15220_s1 = *it;
						{
							{
								auto expr = &((*(_12613_trt))._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1bcb327cd:;
								if (it != expr_end) {
									jule::Ptr<_1ac6ee377_Struct> _15324_s2 = *it;
									{
										if ((_15220_s1 == _15324_s2)) {
											goto _iter_next_1bcb31e09;
										};
									}
									_iter_next_1bcb327cd:;
									++it;
									goto _iter_begin_1bcb327cd;
								}
								_iter_end_1bcb327cd:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1bcb31e09:;
						++it;
						goto _iter_begin_1bcb31e09;
					}
					_iter_end_1bcb31e09:;
				};
				{
					auto expr = &((*(_12613_trt))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bcb32c95:;
					if (it != expr_end) {
						jule::Ptr<_1ac71426b_Fn> _16025_m1 = *it;
						{
							jule::Ptr<_1ac71426b_Fn> _16121_m2 = _1ac7281e7_FindMethod(_14717_base.ptr(), (*(_16025_m1))._field_Ident);;
							if ((_16121_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1ac717170_FnIns> _16517_m1k = _1ac7a53ea_getTraitCheckFnKind((*(_self_))._field_s, &(_16025_m1));;
							jule::Ptr<_1ac717170_FnIns> _16617_m2k = _1ac7a53ea_getTraitCheckFnKind((*(_self_))._field_s, &(_16121_m2));;
							if ((!(_1ac7180d8_equalTrait(_16517_m1k, &(_16617_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1bcb32c95:;
						++it;
						goto _iter_begin_1bcb32c95;
					}
					_iter_end_1bcb32c95:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1bcb26c12:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1bcb26bac:;
	};
}



inline jule::Bool _1ac80bd03_checkPtr(_1ac80b2db_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1ac85ab10_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac8698ee_Ptr> _18113_dest = _1ac85c6a0_Ptr((*(_self_))._field_dest.ptr());;
	if (_1ac86a438_IsUnsafe(_18113_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1ac85a23b_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1ac80c089_checkPrim(_1ac80b2db_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*((*(_self_))._field_dest))._field_Variadic))) {
		jule::Ptr<_1ac86260b_Prim> _19013_prim = _1ac85c183_Prim((*(_self_))._field_dest.ptr());;
		if (((_19013_prim != nullptr) && _1ac865d29_IsAny(_19013_prim.ptr()))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1ac85a23b_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1ac80c485_typeEnum(_1ac80b2db_typeCompatibilityChecker* _self_, jule::Ptr<_1ac72b45e_TypeEnum>* _19828_e, jule::Ptr<_1ac859a32_TypeKind>* _19847_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_19828_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcb39b6a:;
		if (it != expr_end) {
			jule::Ptr<_1ac72ad87_TypeEnumItem> _19921_item = *it;
			{
				if (_1ac85a23b_Equal((*((*(_19921_item))._field_Kind))._field_Kind, (*(_19847_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1ac72b45e_TypeEnum> _20317_ke = _1ac85cbbc_TypeEnum((*((*(_19921_item))._field_Kind))._field_Kind.ptr());;
				if ((_20317_ke == nullptr)) {
					goto _iter_next_1bcb39b6a;
				};
				if (_1ac80c485_typeEnum(_self_, &(_20317_ke), _19847_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1bcb39b6a:;
			++it;
			goto _iter_begin_1bcb39b6a;
		}
		_iter_end_1bcb39b6a:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ac80c71b_checkTypeEnum(_1ac80b2db_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1ac85a23b_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac72b45e_TypeEnum> _21813_e = _1ac85cbbc_TypeEnum((*(_self_))._field_dest.ptr());;
	__jule_func_result = _1ac80c485_typeEnum(_self_, &(_21813_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1ac80c9a2_check(_1ac80b2db_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1ac85c6a0_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1ac80bd03_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1ac85b8d0_NilCompatible((*(_self_))._field_dest.ptr())) {
		if (_1ac85ab10_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1ac85c183_Prim((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1bcb4049a:;
			{
				__jule_func_result = _1ac80c089_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1ac85cbbc_TypeEnum((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1bcb3e9d8:;
			{
				__jule_func_result = _1ac80c71b_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1ac85d98c_Trait((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1bcb3ea4e:;
			{
				__jule_func_result = _1ac80ba6c_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1bcb3e972:;
			{
				__jule_func_result = _1ac85a23b_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1bcb3e1e1:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ac80b2db_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _1ac80d51e_pushErr(_1ac80d08a_assignTypeChecker* _self_, jule::Str _25426_fmt, jule::Slice<jule::Any> _25439_args) {
	_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _25426_fmt, _25439_args);
}



inline jule::Bool _1ac80d7a5_checkValidity(_1ac80d08a_assignTypeChecker* _self_) {
	jule::Bool _25913_valid = true;;
	{
		
		if ((_1ac85d470_Fn((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcb430d5:;
			{
				jule::Ptr<_1ac717170_FnIns> _26213_f = _1ac85d470_Fn((*((*(_self_))._field_d))._field_Kind.ptr());;
				{
					
					if (_1ac718605_IsBuiltin(_26213_f.ptr())) {
						_case_begin_1bcb44911:;
						{
							_1ac80d51e_pushErr(_self_, jule::Str::lit("builtin define cannot use as anonymous function", 47), jule::Slice<jule::Any>());
							_25913_valid=false;
						}
					}
					else if ((*((*(_26213_f))._field_Decl))._field_Binded) {
						_case_begin_1bcb44988:;
						{
							_1ac80d51e_pushErr(_self_, jule::Str::lit("binded functions cannot use as anonymous function", 49), jule::Slice<jule::Any>());
							_25913_valid=false;
						}
					}
					else if (((!((*((*(_26213_f))._field_Decl))._field_Statically)) && _1ac714975_IsMethod((*(_26213_f))._field_Decl.ptr()))) {
						_case_begin_1bcb44a10:;
						{
							_1ac80d51e_pushErr(_self_, jule::Str::lit("non-static methods cannot use as anonymous function", 51), jule::Slice<jule::Any>());
							_25913_valid=false;
						}
					}
					else if ((((*((*(_26213_f))._field_Decl))._field_Generics.len() > 0LL) && ((*(_26213_f))._field_Generics.len() == 0LL))) {
						_case_begin_1bcb44a87:;
						{
							_1ac80d51e_pushErr(_self_, jule::Str::lit("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
							_1ac79ac2b_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("instantiate generic function to use as anonymous function", 57), jule::Slice<jule::Any>());
							_25913_valid=false;
						}
					}
					_match_end_1bcb44834:;
				};
			}
		}
		else if ((_1ac85dea9_Tup((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcb4315c:;
			{
				_1ac80d51e_pushErr(_self_, jule::Str::lit("tuples cannot assign to single define in same time", 50), jule::Slice<jule::Any>());
				_25913_valid=false;
			}
		}
		_match_end_1bcb4302a:;
	};
	return _25913_valid;;
}



inline jule::Bool _1ac80da3b_checkConst(_1ac80d08a_assignTypeChecker* _self_) {
	if (((!((*((*(_self_))._field_d))._field_untyped)) || (_1ac85c183_Prim((*(_self_))._field_dest.ptr()) == nullptr))) {
		return false;;
	};
	jule::Str _2919_kind = (*(_1ac85c183_Prim((*(_self_))._field_dest.ptr())))._field_Kind;;
	{
		
		if (_1a6cde022_IsFloat(_2919_kind)) {
			_case_begin_1bcb4aa7c:;
			{
				if ((!(_1ac80a241_floatAssignable(&(_2919_kind), &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*((*(_self_))._field_d))._field_Constant))._field_Kind=_2919_kind;
			}
		}
		else if (_1a6cddbd1_IsInt(_2919_kind)) {
			_case_begin_1bcb4ab04:;
			{
				if ((!(_1ac80ad02_intAssignable(_2919_kind, &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*((*(_self_))._field_d))._field_Constant))._field_Kind=_2919_kind;
			}
		}
		else {
			_case_begin_1bcb4a9b1:;
			{
				return false;;
			}
		}
		_match_end_1bcb4a890:;
	};
	return true;;
}



inline jule::Bool _1ac80dcc2_checkCompatibility(_1ac80d08a_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1bcb4cd15:;
			{
				return false;;
			}
		}
		else if ((!(_1ac80d7a5_checkValidity(_self_)))) {
			_case_begin_1bcb4cd7b:;
			{
				return false;;
			}
		}
		else if (_1ac80da3b_checkConst(_self_)) {
			_case_begin_1bcb4cde2:;
			{
				return true;;
			}
		}
		else if ((_1ac85c936_Enum((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcb4ce58:;
			{
				jule::Ptr<_1ac859a32_TypeKind> _32017_dkind = (*(_self_))._field_dest;;
				if ((_1ac85c936_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_32017_dkind=(*((*(_1ac85c936_Enum((*(_self_))._field_dest.ptr())))._field_Kind))._field_Kind;
				};
				jule::Ptr<_1ac86260b_Prim> _32413_prim = _1ac85c183_Prim((*(_self_))._field_dest.ptr());;
				if (((_32413_prim == nullptr) || _1ac865d29_IsAny(_32413_prim.ptr()))) {
					goto _match_end_1bcb4b330;
				};
				jule::Ptr<_1ac859a32_TypeKind> _32917_dest = (*((*(_1ac85c936_Enum((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Kind))._field_Kind;;
				return _1ac7a3d33_checkTypeCompatibility((*(_self_))._field_s, &(_32917_dest), &(_32017_dkind), &((*(_self_))._field_errorToken));;
			}
		}
		_match_end_1bcb4b330:;
	};
	return _1ac7a4707_checkTypeCompatibility1((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1ac80e058_check(_1ac80d08a_assignTypeChecker* _self_) {
	jule::Bool _3369_ok = _1ac80dcc2_checkCompatibility(_self_);;
	if ((_3369_ok && (!((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic)))) {
		_1ac877005_applyImplicitCast(&((*(_self_))._field_dest), &((*(_self_))._field_d));
	};
	return _3369_ok;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac80d08a_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1bcb671c5_annotateConstraintElem(_1ac80e960_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac859a32_TypeKind>* _35649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1bcb688d0:;
			{
				jule::Ptr<_1ac859a32_TypeKind> _35921_elem = nullptr;;
				{
					
{
						_case_begin_1bcb696e4:;
						{
							_35921_elem=(*(_1ac85ce53_Arr((*(_35649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1bcb6956d:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_1ac6ca94c_ArrTypeDecl>(&__jule_any_type69)))._field_Elem;
				return _1ac81116a_annotateConstraint(_self_, &(_35921_elem));;
			}
		}
		_match_end_1bcb68869:;
	};
	return false;;
}

inline jule::Bool _1bcb675e3_annotateConstraintElem(_1ac80e960_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac859a32_TypeKind>* _35649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1bcb6c340:;
			{
				jule::Ptr<_1ac859a32_TypeKind> _35921_elem = nullptr;;
				{
					
{
						_case_begin_1bcb6d1cb:;
						{
							_35921_elem=(*(_1ac85d1d9_Slc((*(_35649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1bcb6cecd:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_1ac6c9ab1_SlcTypeDecl>(&__jule_any_type70)))._field_Elem;
				return _1ac81116a_annotateConstraint(_self_, &(_35921_elem));;
			}
		}
		_match_end_1bcb6c2c9:;
	};
	return false;;
}

inline jule::Bool _1bcb68bbb_annotateConstraintElem(_1ac80e960_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac859a32_TypeKind>* _35649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1bcb70ca0:;
			{
				jule::Ptr<_1ac859a32_TypeKind> _35921_elem = nullptr;;
				{
					
{
						_case_begin_1bcb71bb3:;
						{
							_35921_elem=(*(_1ac85c6a0_Ptr((*(_35649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1bcb7193d:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_1ac6ca1aa_PtrTypeDecl>(&__jule_any_type71)))._field_Elem;
				return _1ac81116a_annotateConstraint(_self_, &(_35921_elem));;
			}
		}
		_match_end_1bcb70c39:;
	};
	return false;;
}

inline jule::Bool _1bcb70222_annotateConstraintElem(_1ac80e960_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac859a32_TypeKind>* _35649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1bcb743e1:;
			{
				jule::Ptr<_1ac859a32_TypeKind> _35921_elem = nullptr;;
				{
					
{
						_case_begin_1bcb7537b:;
						{
							_35921_elem=(*(_1ac85c419_Sptr((*(_35649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1bcb7507e:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_1ac6c972b_SptrTypeDecl>(&__jule_any_type72)))._field_Elem;
				return _1ac81116a_annotateConstraint(_self_, &(_35921_elem));;
			}
		}
		_match_end_1bcb7437a:;
	};
	return false;;
}



inline jule::Bool _1ac810356_annotateConstraintMap(_1ac80e960_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac859a32_TypeKind>* _37645_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1bcb55191:;
			{
				jule::Ptr<_1ac86829e_Map> _37917_m = _1ac85dc23_Map((*(_37645_k)).ptr());;
				jule::Ptr<_1ac6cb19a_MapTypeDecl> _38017_m2 = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1ac6cb19a_MapTypeDecl>(&__jule_any_type73);;
				(*(_self_))._field_c=(*(_38017_m2))._field_Key;
				if ((!(_1ac81116a_annotateConstraint(_self_, &((*(_37917_m))._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=(*(_38017_m2))._field_Val;
				__jule_func_result = _1ac81116a_annotateConstraint(_self_, &((*(_37917_m))._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1bcb5512a:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ac810697_annotateConstraintTup(_1ac80e960_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac859a32_TypeKind>* _39145_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1bcb58073:;
			{
				jule::Ptr<_1ac6c9dad_TupleTypeDecl> _39417_tup = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1ac6c9dad_TupleTypeDecl>(&__jule_any_type74);;
				jule::Ptr<_1ac8676ee_Tuple> _39517_tup2 = _1ac85dea9_Tup((*(_39145_k)).ptr());;
				{
					auto expr = &((*(_39517_tup2))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bcb59838:;
					if (it != expr_end) {
						jule::Ptr<_1ac859a32_TypeKind> _39625_t2 = *it;
						{
							{
								auto expr = &((*(_39417_tup))._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1bcb5a295:;
								if (it != expr_end) {
									jule::Ptr<_1ac6c8681_TypeDecl> _39729_t = *it;
									{
										(*(_self_))._field_c=_39729_t;
										if (_1ac81116a_annotateConstraint(_self_, &(_39625_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1bcb5a295:;
									++it;
									goto _iter_begin_1bcb5a295;
								}
								_iter_end_1bcb5a295:;
							};
						}
						_iter_next_1bcb59838:;
						++it;
						goto _iter_begin_1bcb59838;
					}
					_iter_end_1bcb59838:;
				};
			}
		}
		_match_end_1bcb5800c:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ac8109d8_annotateConstraintFn(_1ac80e960_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac859a32_TypeKind>* _40844_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1bcb59e54:;
			{
				jule::Ptr<_1ac6da341_FnDecl> _41117_pf = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1ac6da341_FnDecl>(&__jule_any_type14);;
				jule::Ptr<_1ac717170_FnIns> _41217_f = _1ac85d470_Fn((*(_40844_k)).ptr());;
				{
					auto expr = &((*(_41217_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bcb5c74d:;
					if (it != expr_end) {
						jule::I64 _41318_i = it - expr->begin();
						jule::Ptr<_1ac7161c4_ParamIns> _41325_fp = *it;
						{
							(*(_self_))._field_c=(*((*(_41117_pf))._field_Params[_41318_i]))._field_Kind;
							if (_1ac81116a_annotateConstraint(_self_, &((*(_41325_fp))._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1bcb5c74d:;
						++it;
						_41318_i++;
						goto _iter_begin_1bcb5c74d;
					}
					_iter_end_1bcb5c74d:;
				};
				if (((*(_41117_pf))._field_Result != nullptr)) {
					(*(_self_))._field_c=(*((*(_41117_pf))._field_Result))._field_Kind;
					if (_1ac81116a_annotateConstraint(_self_, &((*(_41217_f))._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1bcb59ddd:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ac810d29_annotateConstraintIdent(_1ac80e960_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac859a32_TypeKind>* _42947_k) {
	jule::Ptr<_1ac6c8c8b_IdentTypeDecl> _43013_ident = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1ac6c8c8b_IdentTypeDecl>(&__jule_any_type20);;
	jule::Ptr<_1ac702105_StructIns> _43113_s = _1ac85d706_Struct((*(_42947_k)).ptr());;
	{
		auto expr = &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcb6119c:;
		if (it != expr_end) {
			jule::I64 _43213_i = it - expr->begin();
			jule::Ptr<_1ac6d588b_GenericDecl> _43216_g = *it;
			{
				if (((*(_43216_g))._field_Ident == (*(_43013_ident))._field_Ident)) {
					jule::Ptr<_1ac85814b_InsGeneric> _43421_fg = (*((*(_self_))._field_f))._field_Generics[_43213_i];;
					if ((_43421_fg != nullptr)) {
						return false;;
					};
					_1ac8114cd_pushGeneric(_self_, _42947_k, _43213_i);
					return true;;
				};
				if ((_43113_s == nullptr)) {
					goto _iter_next_1bcb6119c;
				};
				jule::Ptr<_1ac6c8681_TypeDecl> _44417_c = (*(_self_))._field_c;;
				{
					auto expr = &((*(_43013_ident))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bcb61ac6:;
					if (it != expr_end) {
						jule::Ptr<_1ac6c8681_TypeDecl> _44525_ig = *it;
						{
							(*(_self_))._field_c=_44525_ig;
							{
								auto expr = &((*(_43113_s))._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1bcb64832:;
								if (it != expr_end) {
									jule::Ptr<_1ac85814b_InsGeneric> _44729_sg = *it;
									{
										if (_1ac81116a_annotateConstraint(_self_, &((*(_44729_sg))._field_Kind))) {
											return true;;
										};
									}
									_iter_next_1bcb64832:;
									++it;
									goto _iter_begin_1bcb64832;
								}
								_iter_end_1bcb64832:;
							};
						}
						_iter_next_1bcb61ac6:;
						++it;
						goto _iter_begin_1bcb61ac6;
					}
					_iter_end_1bcb61ac6:;
				};
				(*(_self_))._field_c=_44417_c;
			}
			_iter_next_1bcb6119c:;
			++it;
			_43213_i++;
			goto _iter_begin_1bcb6119c;
		}
		_iter_end_1bcb6119c:;
	};
	return false;;
}



inline jule::Bool _1ac81116a_annotateConstraint(_1ac80e960_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac859a32_TypeKind>* _45842_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1bcb6425a:;
			{
				return _1ac810d29_annotateConstraintIdent(_self_, _45842_k);;
			}
		}
		_match_end_1bcb641e4:;
	};
	{
		
		if ((_1ac85ce53_Arr((*(_45842_k)).ptr()) != nullptr)) {
			_case_begin_1bcb65943:;
			{
				return _1bcb671c5_annotateConstraintElem(_self_, _45842_k);;
			}
		}
		else if ((_1ac85d1d9_Slc((*(_45842_k)).ptr()) != nullptr)) {
			_case_begin_1bcb659ba:;
			{
				return _1bcb675e3_annotateConstraintElem(_self_, _45842_k);;
			}
		}
		else if ((_1ac85c6a0_Ptr((*(_45842_k)).ptr()) != nullptr)) {
			_case_begin_1bcb65a42:;
			{
				return _1bcb68bbb_annotateConstraintElem(_self_, _45842_k);;
			}
		}
		else if ((_1ac85c419_Sptr((*(_45842_k)).ptr()) != nullptr)) {
			_case_begin_1bcb65ab9:;
			{
				return _1bcb70222_annotateConstraintElem(_self_, _45842_k);;
			}
		}
		else if ((_1ac85dc23_Map((*(_45842_k)).ptr()) != nullptr)) {
			_case_begin_1bcb6627e:;
			{
				return _1ac810356_annotateConstraintMap(_self_, _45842_k);;
			}
		}
		else if ((_1ac85d470_Fn((*(_45842_k)).ptr()) != nullptr)) {
			_case_begin_1bcb66306:;
			{
				return _1ac8109d8_annotateConstraintFn(_self_, _45842_k);;
			}
		}
		else if ((_1ac85dea9_Tup((*(_45842_k)).ptr()) != nullptr)) {
			_case_begin_1bcb6637d:;
			{
				return _1ac810697_annotateConstraintTup(_self_, _45842_k);;
			}
		}
		else {
			_case_begin_1bcb65d2d:;
			{
				return false;;
			}
		}
		_match_end_1bcb65cc8:;
	};
}



inline void _1ac8114cd_pushGeneric(_1ac80e960_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac859a32_TypeKind>* _48335_k, jule::I64 _48349_i) {
	(*((*(_self_))._field_f))._field_Generics[_48349_i]=jule::new_ptr<_1ac85814b_InsGeneric>(_1ac85814b_InsGeneric{._field_Kind=(*(_48335_k)), });
	jule::Ptr<_1ac6d588b_GenericDecl> _48513_gd = (*((*((*(_self_))._field_f))._field_Decl))._field_Generics[_48349_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcb7846c:;
		if (it != expr_end) {
			jule::Ptr<_1ac859a32_TypeKind> _48621_ignored = *it;
			{
				if (((*(_48513_gd))._field_Ident == _1ac859dea_Str(_48621_ignored.ptr()))) {
					(*(_48621_ignored))._field_Kind=(*((*(_48335_k))))._field_Kind;
				};
			}
			_iter_next_1bcb7846c:;
			++it;
			goto _iter_begin_1bcb7846c;
		}
		_iter_end_1bcb7846c:;
	};
	if ((((*(_48513_gd))._field_Constraint == nullptr) || ((*((*(_48513_gd))._field_Constraint))._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=(*((*(_48513_gd))._field_Constraint))._field_Mask[0LL];
	_1ac81116a_annotateConstraint(_self_, _48335_k);
}



inline jule::Bool _1ac81181e_annotatePrim(_1ac80e960_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac859a32_TypeKind>* _49843_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1ac813843_annotateAny(_self_, _49843_k);
	return __jule_func_result;;
}



inline jule::Bool _1ac811b60_annotateArr(_1ac80e960_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac859a32_TypeKind>* _50242_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ac868e2b_Arr> _50313_parr = _1ac85ce53_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_50313_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac868e2b_Arr> _50713_arr = _1ac85ce53_Arr((*(_50242_k)).ptr());;
	(*(_self_))._field_k=(&((*(_50313_parr))._field_Elem));
	__jule_func_result = _1ac813b84_annotateKind(_self_, &((*(_50713_arr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1ac811ea1_annotateSlc(_1ac80e960_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac859a32_TypeKind>* _51242_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ac866b0a_Slc> _51313_pslc = _1ac85d1d9_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_51313_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac866b0a_Slc> _51713_slc = _1ac85d1d9_Slc((*(_51242_k)).ptr());;
	(*(_self_))._field_k=(&((*(_51313_pslc))._field_Elem));
	__jule_func_result = _1ac813b84_annotateKind(_self_, &((*(_51713_slc))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1ac81239c_checkMapKey(_1ac80e960_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac859a32_TypeKind>* _52241_k, jule::Ptr<_1ac859a32_TypeKind>* _52261_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ac859a32_TypeKind>* _52313_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_52241_k;
	__jule_func_result=_1ac813b84_annotateKind(_self_, _52261_ck);
	(*(_self_))._field_k=_52313_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1ac8126dd_annotateMap(_1ac80e960_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac859a32_TypeKind>* _53042_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ac86829e_Map> _53113_pmap = _1ac85dc23_Map((*((*(_self_))._field_k)).ptr());;
	if ((_53113_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac86829e_Map> _53513_m = _1ac85dc23_Map((*(_53042_k)).ptr());;
	__jule_func_result = (_1ac81239c_checkMapKey(_self_, (&((*(_53113_pmap))._field_Key)), &((*(_53513_m))._field_Key)) && _1ac81239c_checkMapKey(_self_, (&((*(_53113_pmap))._field_Val)), &((*(_53513_m))._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1ac812a2e_annotateFn(_1ac80e960_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac859a32_TypeKind>* _54041_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ac717170_FnIns> _54113_pf = _1ac85d470_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_54113_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac717170_FnIns> _54513_f = _1ac85d470_Fn((*(_54041_k)).ptr());;
	{
		
		if (((*(_54113_pf))._field_Params.len() != (*(_54513_f))._field_Params.len())) {
			_case_begin_1bcb85c71:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1ac7146de_IsVoid((*(_54113_pf))._field_Decl.ptr()) != _1ac7146de_IsVoid((*(_54513_f))._field_Decl.ptr()))) {
			_case_begin_1bcb85ce8:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1bcb85c0a:;
	};
	__jule_func_result=true;
	jule::Ptr<_1ac859a32_TypeKind>* _55413_old = (*(_self_))._field_k;;
	{
		auto expr = &((*(_54513_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcb87ba7:;
		if (it != expr_end) {
			jule::I64 _55514_i = it - expr->begin();
			jule::Ptr<_1ac7161c4_ParamIns> _55521_fp = *it;
			{
				(*(_self_))._field_k=(&((*((*(_54113_pf))._field_Params[_55514_i]))._field_Kind));
				__jule_func_result=(_1ac813b84_annotateKind(_self_, &((*(_55521_fp))._field_Kind)) && __jule_func_result);
			}
			_iter_next_1bcb87ba7:;
			++it;
			_55514_i++;
			goto _iter_begin_1bcb87ba7;
		}
		_iter_end_1bcb87ba7:;
	};
	if ((!(_1ac7146de_IsVoid((*(_54113_pf))._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&((*(_54113_pf))._field_Result));
		__jule_func_result=(_1ac813b84_annotateKind(_self_, &((*(_54513_f))._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_55413_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1ac812d70_annotatePtr(_1ac80e960_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac859a32_TypeKind>* _56942_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ac8698ee_Ptr> _57013_pptr = _1ac85c6a0_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_57013_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac8698ee_Ptr> _57413_ptr = _1ac85c6a0_Ptr((*(_56942_k)).ptr());;
	(*(_self_))._field_k=(&((*(_57013_pptr))._field_Elem));
	__jule_func_result = _1ac813b84_annotateKind(_self_, &((*(_57413_ptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1ac8131b1_annotateSptr(_1ac80e960_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac859a32_TypeKind>* _57943_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ac866137_Sptr> _58013_ssptr = _1ac85c419_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_58013_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac866137_Sptr> _58413_sptr = _1ac85c419_Sptr((*(_57943_k)).ptr());;
	(*(_self_))._field_k=(&((*(_58013_ssptr))._field_Elem));
	__jule_func_result = _1ac813b84_annotateKind(_self_, &((*(_58413_sptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1ac813502_annotateStruct(_1ac80e960_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac859a32_TypeKind>* _58945_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ac702105_StructIns> _59013_s = _1ac85d706_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_59013_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac702105_StructIns> _59413_s2 = _1ac85d706_Struct((*(_58945_k)).ptr());;
	if (((*(_59013_s))._field_Generics.len() != (*(_59413_s2))._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_59013_s))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcb91c27:;
		if (it != expr_end) {
			jule::I64 _59814_i = it - expr->begin();
			jule::Ptr<_1ac85814b_InsGeneric> _59821_g = *it;
			{
				jule::Ptr<_1ac85814b_InsGeneric> _59917_g2 = (*(_59413_s2))._field_Generics[_59814_i];;
				if (_1ac85a23b_Equal((*(_59821_g))._field_Kind, (*(_59917_g2))._field_Kind)) {
					goto _iter_next_1bcb91c27;
				};
				(*(_self_))._field_k=(&((*(_59821_g))._field_Kind));
				if ((!(_1ac813b84_annotateKind(_self_, &((*(_59917_g2))._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bcb91c27:;
			++it;
			_59814_i++;
			goto _iter_begin_1bcb91c27;
		}
		_iter_end_1bcb91c27:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ac813843_annotateAny(_1ac80e960_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac859a32_TypeKind>* _61142_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _6129_kind = _1ac859dea_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcb95324:;
		if (it != expr_end) {
			jule::I64 _61313_i = it - expr->begin();
			jule::Ptr<_1ac6d588b_GenericDecl> _61316_g = *it;
			{
				if ((_6129_kind != (*(_61316_g))._field_Ident)) {
					goto _iter_next_1bcb95324;
				};
				jule::Ptr<_1ac85814b_InsGeneric> _61713_t = (*((*(_self_))._field_f))._field_Generics[_61313_i];;
				{
					
					if ((_61713_t == nullptr) || ((*(_61713_t))._field_Kind == nullptr)) {
						_case_begin_1bcb96b50:;
						{
							_1ac8114cd_pushGeneric(_self_, _61142_k, _61313_i);
						}
					}
					else if ((!(_1ac85a23b_Equal((*(_61713_t))._field_Kind, (*(_61142_k)))))) {
						_case_begin_1bcb96bc7:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1bcb96a2e:;
				};
				(*((*((*(_self_))._field_k))))._field_Kind=(*((*(_61142_k))))._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1bcb95324:;
			++it;
			_61313_i++;
			goto _iter_begin_1bcb95324;
		}
		_iter_end_1bcb95324:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ac813b84_annotateKind(_1ac80e960_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac859a32_TypeKind>* _63243_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1ac813843_annotateAny(_self_, _63243_k)) {
			_case_begin_1bcb9923a:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ac85c183_Prim((*(_63243_k)).ptr()) != nullptr)) {
			_case_begin_1bcb992b2:;
			{
				__jule_func_result = _1ac81181e_annotatePrim(_self_, _63243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ac85ce53_Arr((*(_63243_k)).ptr()) != nullptr)) {
			_case_begin_1bcb99526:;
			{
				__jule_func_result = _1ac811b60_annotateArr(_self_, _63243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ac85d1d9_Slc((*(_63243_k)).ptr()) != nullptr)) {
			_case_begin_1bcb9958c:;
			{
				__jule_func_result = _1ac811ea1_annotateSlc(_self_, _63243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ac85dc23_Map((*(_63243_k)).ptr()) != nullptr)) {
			_case_begin_1bcb99603:;
			{
				__jule_func_result = _1ac8126dd_annotateMap(_self_, _63243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ac85d470_Fn((*(_63243_k)).ptr()) != nullptr)) {
			_case_begin_1bcb9967a:;
			{
				__jule_func_result = _1ac812a2e_annotateFn(_self_, _63243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ac85c6a0_Ptr((*(_63243_k)).ptr()) != nullptr)) {
			_case_begin_1bcb99702:;
			{
				__jule_func_result = _1ac812d70_annotatePtr(_self_, _63243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ac85c419_Sptr((*(_63243_k)).ptr()) != nullptr)) {
			_case_begin_1bcb99812:;
			{
				__jule_func_result = _1ac8131b1_annotateSptr(_self_, _63243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ac85d706_Struct((*(_63243_k)).ptr()) != nullptr)) {
			_case_begin_1bcb99878:;
			{
				__jule_func_result = _1ac813502_annotateStruct(_self_, _63243_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1bcb99119:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1bcb98b63:;
	};
}



inline jule::Bool _1ac813e1a_annotate(_1ac80e960_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*((*(_self_))._field_p))._field_Kind));
	__jule_func_result = _1ac813b84_annotateKind(_self_, &((*((*(_self_))._field_a))._field_Kind));
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac80e960_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1ac814d61_pushErrToken(_1ac8147bc_fnCallArgChecker* _self_, jule::Ptr<_1ac6b2e62_Token> _67731_token, jule::Str _67746_fmt, jule::Slice<jule::Any> _67759_args) {
	_1ac79a8b8_pushErr((*((*(_self_))._field_e))._field_s.ptr(), _67731_token, _67746_fmt, _67759_args);
}



inline void _1ac8151c4_pushErr(_1ac8147bc_fnCallArgChecker* _self_, jule::Str _68126_fmt, jule::Slice<jule::Any> _68139_args) {
	_1ac814d61_pushErrToken(_self_, (*(_self_))._field_errorToken, _68126_fmt, _68139_args);
}



inline jule::Slice<jule::Ptr<_1ac7161c4_ParamIns>> _1ac81545a_getParams(_1ac8147bc_fnCallArgChecker* _self_) {
	if (((((*((*(_self_))._field_f))._field_Params.len() > 0LL) && ((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl != nullptr)) && _1ac712db3_IsSelf((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl.ptr()))) {
		return (*((*(_self_))._field_f))._field_Params.slice(1LL);;
	};
	return (*((*(_self_))._field_f))._field_Params;;
}



inline jule::Bool _1ac815768_checkCounts(_1ac8147bc_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1ac7161c4_ParamIns>>* _69431_params) {
	jule::Bool __jule_func_result = false;
	jule::I64 _69513_n = (*(_69431_params)).len();;
	if (((_69513_n > 0LL) && _1ac712db3_IsSelf((*((*(_69431_params))[0LL]))._field_Decl.ptr()))) {
		(_69513_n)--;
	};
	jule::I64 _70013_diff = (_69513_n - (*(_self_))._field_args.len());;
	jule::Str _70113_log = jule::Str();;
	{
		
		if ((_70013_diff == 0LL)) {
			_case_begin_1bcba61c0:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_69513_n > 0LL) && (*((*((*(_69431_params))[(_69513_n - 1LL)]))._field_Decl))._field_Variadic)) {
			_case_begin_1bcba60b0:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_70013_diff < 0LL) || (_70013_diff > (*(_69431_params)).len()))) {
			_case_begin_1bcba5cb3:;
			{
				_70113_log=jule::Str::lit("argument overflow: passed more argument than expected to call @", 63);
			}
		}
		else {
			_case_begin_1bcba5c4c:;
			{
				_70113_log=jule::Str::lit("missing arguments to call @", 27);
			}
		}
		_match_end_1bcba5be7:;
	};
	_1c164cc40_StrBuilder _71213_err = static__1c164d191_New(32LL);;
	_1c164d702_WriteStr(&_71213_err, (*((*((*(_self_))._field_f))._field_Decl))._field_Ident);
	_1c164d702_WriteStr(&_71213_err, jule::Str::lit("\n       wanted (", 16));
	{
		auto expr = _69431_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcba4014:;
		if (it != expr_end) {
			jule::I64 _71513_i = it - expr->begin();
			jule::Ptr<_1ac7161c4_ParamIns> *_71516_p = it;
			{
				_1c164d702_WriteStr(&_71213_err, _1ac859dea_Str((*((*(_71516_p))))._field_Kind.ptr()));
				if ((((*(_69431_params)).len() - _71513_i) > 1LL)) {
					_1c164d702_WriteStr(&_71213_err, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1bcba4014:;
			++it;
			_71513_i++;
			goto _iter_begin_1bcba4014;
		}
		_iter_end_1bcba4014:;
	};
	_1c164d9aa_WriteByte(&_71213_err, ')');
	_1ac8151c4_pushErr(_self_, _70113_log, jule::Slice<jule::Any>::make({jule::Any(_1c164dee9_Str(&_71213_err), &__jule_any_type4)}));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ac815c1e_checkArg(_1ac8147bc_fnCallArgChecker* _self_, jule::Ptr<_1ac7161c4_ParamIns>* _72632_p, jule::Ptr<_1ac8243ae_Data>* _72651_arg, jule::Ptr<_1ac6b2e62_Token>* _72668_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1ac71944c_parameterUsesGenerics(_72632_p, &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics)))) {
		__jule_func_result=((!((*((*((*(_72632_p))))._field_Decl))._field_Variadic)) && _1ac81d111_isGoodValueToInfer(_72651_arg));
		if (__jule_func_result) {
			_1ac80e960_dynamicTypeAnnotation _73121_dta = _1ac80e960_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_72632_p)), ._field_a=(*(_72651_arg)), ._field_errorToken=(*(_72668_errorToken)), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1ac813e1a_annotate(&_73121_dta);
		};
		if ((!(__jule_func_result))) {
			_1ac814d61_pushErrToken(_self_, (*(_72668_errorToken)), jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1ac7a7760_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, (*((*((*(_72632_p))))._field_Decl))._field_Mutable, (*((*((*(_72632_p))))._field_Decl))._field_Reference, &((*((*(_72632_p))))._field_Kind), _72651_arg, _72668_errorToken)) {
		_1ac7a33c6_checkAssignType((*((*(_self_))._field_e))._field_s, (*((*((*(_72632_p))))._field_Decl))._field_Reference, &((*((*(_72632_p))))._field_Kind), _72651_arg, (*(_72668_errorToken)));
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ac81611a_push(_1ac8147bc_fnCallArgChecker* _self_, jule::Ptr<_1ac7161c4_ParamIns>* _75528_p, jule::Ptr<_1ac6cc9b5_Expr> _75546_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ac859a32_TypeKind> _75613_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _7579_oldImmut = (*((*(_self_))._field_e))._field_immutable;;
	(*((*(_self_))._field_e))._field_immutable=(!((*((*((*(_75528_p))))._field_Decl))._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*((*((*(_75528_p))))._field_Decl))._field_Variadic)))) {
		(*((*(_self_))._field_e))._field_prefix=(*((*(_75528_p))))._field_Kind;
	} else {
		(*((*(_self_))._field_e))._field_prefix=nullptr;
	};
	jule::Ptr<_1ac8243ae_Data> _76513_d = _1ac844313_evalExpr((*(_self_))._field_e, _75546_arg);;
	(*((*(_self_))._field_e))._field_prefix=_75613_old;
	(*((*(_self_))._field_e))._field_immutable=_7579_oldImmut;
	if ((_76513_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1ac815c1e_checkArg(_self_, _75528_p, &(_76513_d), &((*(_75546_arg))._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_76513_d))._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _1ac816516_pushVariadic(_1ac8147bc_fnCallArgChecker* _self_, jule::Ptr<_1ac7161c4_ParamIns>* _77936_p, jule::I64 _77954_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _78113_variadiced = false;;
	jule::Bool _7829_more = ((_77954_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1ac7088ae_SliceExprModel> _78313_model = jule::new_ptr<_1ac7088ae_SliceExprModel>(_1ac7088ae_SliceExprModel{._field_ElemKind=(*((*(_77936_p))))._field_Kind, });;
	jule::Ptr<_1ac859a32_TypeKind> _78713_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _7929_variadic = (*((*((*(_77936_p))))._field_Kind))._field_Variadic;;
	(*((*((*(_77936_p))))._field_Kind))._field_Variadic=false;
	__JULE_DEFER({
		(*((*((*(_77936_p))))._field_Kind))._field_Variadic=_7929_variadic;
	});;
	for (; (_77954_i < (*(_self_))._field_args.len()); (_77954_i)++) {
		{
			jule::Ptr<_1ac6cc9b5_Expr> _79917_arg = (*(_self_))._field_args[_77954_i];;
			{
				auto &_match_expr{ (*(_79917_arg))._field_Kind };
				
				if (_match_expr.type == &__jule_any_type75) {
					_case_begin_1bcbba3e3:;
					{
						(*((*(_self_))._field_e))._field_prefix=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(jule::new_ptr<_1ac866b0a_Slc>(_1ac866b0a_Slc{._field_Elem=(*((*(_77936_p))))._field_Kind}), 22)});
					}
				}
				else {
					_case_begin_1bcbba734:;
					{
						(*((*(_self_))._field_e))._field_prefix=(*((*(_77936_p))))._field_Kind;
					}
				}
				_match_end_1bcbba6ce:;
			};
			jule::Ptr<_1ac8243ae_Data> _81217_d = _1ac843b81_eval((*(_self_))._field_e, _79917_arg);;
			if ((_81217_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1bcbb8dd6;
			};
			if ((*((*(_81217_d))._field_Kind))._field_Variadic) {
				_78113_variadiced=true;
				(*((*((*(_77936_p))))._field_Kind))._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1ac815c1e_checkArg(_self_, _77936_p, &(_81217_d), &((*(_79917_arg))._field_Token)));
				{
					auto &_match_expr{ (*(_81217_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type76) {
						_case_begin_1bcbbcd74:;
						{
							_78313_model=(*(_81217_d))._field_Model.cast_ptr<_1ac7088ae_SliceExprModel>(&__jule_any_type76);
							(*(_78313_model))._field_ElemKind=(*((*(_77936_p))))._field_Kind;
						}
					}
					else {
						_case_begin_1bcbbde30:;
						{
							_78313_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_81217_d))._field_Model); };
						}
					}
					_match_end_1bcbbddca:;
				};
				(_77954_i)++;
				goto _iter_end_1bcbb8dd6;
			};
			__jule_func_result=(__jule_func_result && _1ac815c1e_checkArg(_self_, _77936_p, &(_81217_d), &((*(_79917_arg))._field_Token)));
			{ jule::Slice<jule::Any> &__jule_push_dest = (*(_78313_model))._field_Elems; __jule_push_dest.push((*(_81217_d))._field_Model); };
		}
	_iter_next_1bcbb8dd6:;
	}
	_iter_end_1bcbb8dd6:;;
	(*((*(_self_))._field_e))._field_prefix=_78713_old;
	if ((_78113_variadiced && _7829_more)) {
		_1ac814d61_pushErrToken(_self_, (*((*(_self_))._field_args[_77954_i]))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
	};
	if ((_78313_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_78313_model, &__jule_any_type76)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1ac816857_checkArgs(_1ac8147bc_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1ac7161c4_ParamIns>>* _85533_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _8569_arg = (*((*(_self_))._field_e))._field_arg;;
	(*((*(_self_))._field_e))._field_arg=true;
	__jule_func_result=true;
	jule::I64 _86013_i = 0LL;;
	if ((((*(_85533_params)).len() > 0LL) && _1ac712db3_IsSelf((*((*(_85533_params))[0LL]))._field_Decl.ptr()))) {
		(_86013_i)++;
	};
	_julec_label_1bcbc4221:;
	while ((_86013_i < (*(_85533_params)).len())) {
		{
			jule::Ptr<_1ac7161c4_ParamIns> _86717_p = (*(_85533_params))[_86013_i];;
			{
				
				if ((*((*(_86717_p))._field_Decl))._field_Variadic) {
					_case_begin_1bcbc5cb1:;
					{
						__jule_func_result=(_1ac816516_pushVariadic(_self_, &(_86717_p), _86013_i) && __jule_func_result);
						goto _iter_end_1bcbc452e;
					}
				}
				else if (((*(_self_))._field_args.len() <= _86013_i)) {
					_case_begin_1bcbc5de3:;
					{
						__jule_func_result=false;
						goto _iter_end_1bcbc452e;
					}
				}
				else {
					_case_begin_1bcbc591a:;
					{
						__jule_func_result=(_1ac81611a_push(_self_, &(_86717_p), (*(_self_))._field_args[_86013_i]) && __jule_func_result);
					}
				}
				_match_end_1bcbc58a4:;
			};
			(_86013_i)++;
		}
	_iter_next_1bcbc452e:;
	}
	_iter_end_1bcbc452e:;;
	(*((*(_self_))._field_e))._field_arg=_8569_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1ac816add_checkDynamicTypeAnnotation(_1ac8147bc_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_f))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcbc80e3:;
		if (it != expr_end) {
			jule::Ptr<_1ac85814b_InsGeneric> _88716_g = *it;
			{
				if ((_88716_g == nullptr)) {
					_1ac8151c4_pushErr(_self_, jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bcbc80e3:;
			++it;
			goto _iter_begin_1bcbc80e3;
		}
		_iter_end_1bcbc80e3:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ac816d74_check(_1ac8147bc_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1ac7161c4_ParamIns>> _89713_params = _1ac81545a_getParams(_self_);;
	__jule_func_result=_1ac815768_checkCounts(_self_, &(_89713_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1ac816857_checkArgs(_self_, &(_89713_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1ac816add_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac8147bc_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1ac817c54_pushErr(_1ac817704_structLitChecker* _self_, jule::Ptr<_1ac6b2e62_Token> _93526_token, jule::Str _93541_fmt, jule::Slice<jule::Any> _93554_args) {
	_1ac826603_pushErr((*(_self_))._field_e.ptr(), _93526_token, _93541_fmt, _93554_args);
}



inline void _1ac8180b7_pushSuggestion(_1ac817704_structLitChecker* _self_, jule::Str _94033_fmt, jule::Slice<jule::Any> _94046_args) {
	_1ac826966_pushSuggestion((*(_self_))._field_e.ptr(), _94033_fmt, _94046_args);
}



inline void _1ac8184d5_pushMatch(_1ac817704_structLitChecker* _self_, jule::Ptr<_1ac701555_FieldIns>* _94433_f, jule::Ptr<_1ac8243ae_Data>* _94452_d, jule::Ptr<_1ac6b2e62_Token>* _94467_errorToken) {
	;
	jule::Bool _9509_mutable = ((!((*((*(_self_))._field_e))._field_immutable)) || ((*((*((*(_94433_f))))._field_Decl))._field_Mutable && ((*((*(_self_))._field_s))._field_Methods.len() > 0LL)));;
	if (_1ac7a7760_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, _9509_mutable, false, &((*((*(_94433_f))))._field_Kind), _94452_d, _94467_errorToken)) {
		_1ac7a33c6_checkAssignType((*((*(_self_))._field_e))._field_s, false, &((*((*(_94433_f))))._field_Kind), _94452_d, (*(_94467_errorToken)));
	};
	{ jule::Slice<jule::Ptr<_1ac706e0c_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_1ac706e0c_StructArgExprModel>(_1ac706e0c_StructArgExprModel{._field_Token=(*(_94467_errorToken)), ._field_Field=(*(_94433_f)), ._field_Expr=(*(_94452_d))})); };
}



inline void _1ac818848_checkPair(_1ac817704_structLitChecker* _self_, jule::Ptr<_1ac6d21d4_FieldExprPair>* _96333_pair, jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>>* _96360_exprs) {
	jule::Ptr<_1ac701555_FieldIns> _96513_f = _1ac7034ad_FindField((*(_self_))._field_s.ptr(), (*((*((*(_96333_pair))))._field_Field))._field_Kind);;
	if ((_96513_f == nullptr)) {
		_1ac817c54_pushErr(_self_, (*((*(_96333_pair))))._field_Field, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_96333_pair))))._field_Field))._field_Kind, &__jule_any_type4)}));
		return;;
	};
	if ((!(_1ac79b127_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_96513_f))._field_Decl))._field_Public, (*((*(_96513_f))._field_Decl))._field_Token)))) {
		_1ac817c54_pushErr(_self_, (*((*(_96333_pair))))._field_Field, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_96333_pair))))._field_Field))._field_Kind, &__jule_any_type4)}));
		_1ac8180b7_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	_julec_label_1bcbd4275:;
	{
		auto expr = _96360_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcbd4be3:;
		if (it != expr_end) {
			jule::Ptr<_1ac6cc9b5_Expr> _97721_expr = *it;
			{
				{
					auto &_match_expr{ (*(_97721_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type77) {
						_case_begin_1bcbd5650:;
						{
							jule::Ptr<_1ac6d21d4_FieldExprPair> _98021_dpair = (*(_97721_expr))._field_Kind.cast_ptr<_1ac6d21d4_FieldExprPair>(&__jule_any_type77);;
							{
								
								if (((*(_96333_pair)) == _98021_dpair)) {
									_case_begin_1bcbd65b8:;
									{
										goto _iter_end_1bcbd4be3;
									}
								}
								else if (((*((*((*(_96333_pair))))._field_Field))._field_Kind == (*((*(_98021_dpair))._field_Field))._field_Kind)) {
									_case_begin_1bcbd6640:;
									{
										_1ac817c54_pushErr(_self_, (*((*(_96333_pair))))._field_Field, jule::Str::lit("@ already has expression", 24), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_96333_pair))))._field_Field))._field_Kind, &__jule_any_type4)}));
										goto _iter_end_1bcbd4be3;
									}
								}
								_match_end_1bcbd650d:;
							};
						}
					}
					_match_end_1bcbd55d9:;
				};
			}
			_iter_next_1bcbd4be3:;
			++it;
			goto _iter_begin_1bcbd4be3;
		}
		_iter_end_1bcbd4be3:;
	};
	jule::Ptr<_1ac859a32_TypeKind> _99113_prefix = (*((*(_self_))._field_e))._field_prefix;;
	__JULE_DEFER({
		(*((*(_self_))._field_e))._field_prefix=_99113_prefix;
	});;
	(*((*(_self_))._field_e))._field_prefix=(*(_96513_f))._field_Kind;
	jule::Ptr<_1ac8243ae_Data> _99513_d = _1ac844313_evalExpr((*(_self_))._field_e, (*((*(_96333_pair))))._field_Expr);;
	if ((_99513_d == nullptr)) {
		return;;
	};
	_1ac8184d5_pushMatch(_self_, &(_96513_f), &(_99513_d), &((*((*(_96333_pair))))._field_Field));
}



inline jule::Bool _1ac818b89_readyExprs(_1ac817704_structLitChecker* _self_, jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>>* _100234_exprs) {
	jule::Bool _100313_ok = true;;
	{
		auto expr = _100234_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcbda974:;
		if (it != expr_end) {
			jule::I64 _100414_i = it - expr->begin();
			jule::Ptr<_1ac6cc9b5_Expr> _100421_expr = *it;
			{
				{
					auto &_match_expr{ (*(_100421_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type78) {
						_case_begin_1bcbdb6de:;
						{
							jule::Ptr<_1ac6d37e0_KeyValPair> _100721_pair = (*(_100421_expr))._field_Kind.cast_ptr<_1ac6d37e0_KeyValPair>(&__jule_any_type78);;
							{
								auto &_match_expr{ (*((*(_100721_pair))._field_Key))._field_Kind };
								
								if (_match_expr.type == &__jule_any_type79) {
									_case_begin_1bcbdc525:;
									{
										goto _match_end_1bcbdc9ba;
									}
								}
								else {
									_case_begin_1bcbdca20:;
									{
										_1ac817c54_pushErr(_self_, (*(_100721_pair))._field_Colon, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
										_100313_ok=false;
										goto _iter_next_1bcbda974;
									}
								}
								_match_end_1bcbdc9ba:;
							};
							(*((*(_100234_exprs))[_100414_i]))._field_Kind=jule::Any(jule::new_ptr<_1ac6d21d4_FieldExprPair>(_1ac6d21d4_FieldExprPair{._field_Field=(*((*(_100721_pair))._field_Key))._field_Token, ._field_Expr=(*(_100721_pair))._field_Val}), &__jule_any_type77);
						}
					}
					_match_end_1bcbdb678:;
				};
			}
			_iter_next_1bcbda974:;
			++it;
			_100414_i++;
			goto _iter_begin_1bcbda974;
		}
		_iter_end_1bcbda974:;
	};
	return _100313_ok;;
}



inline void _1ac818e42_check(_1ac817704_structLitChecker* _self_, jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>>* _102629_exprs) {
	if (((*(_102629_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1ac818b89_readyExprs(_self_, _102629_exprs)))) {
		return;;
	};
	jule::Bool _103313_paired = false;;
	{
		auto expr = _102629_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcbe0292:;
		if (it != expr_end) {
			jule::I64 _103414_i = it - expr->begin();
			jule::Ptr<_1ac6cc9b5_Expr> _103421_expr = *it;
			{
				{
					auto &_match_expr{ (*(_103421_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type77) {
						_case_begin_1bcbe6463:;
						{
							jule::Ptr<_1ac6d21d4_FieldExprPair> _103721_pair = (*(_103421_expr))._field_Kind.cast_ptr<_1ac6d21d4_FieldExprPair>(&__jule_any_type77);;
							if (((_103414_i > 0LL) && (!(_103313_paired)))) {
								_1ac817c54_pushErr(_self_, (*(_103721_pair))._field_Field, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							_103313_paired=true;
							_1ac818848_checkPair(_self_, &(_103721_pair), _102629_exprs);
						}
					}
					else {
						_case_begin_1bcbe0e63:;
						{
							if (_103313_paired) {
								_1ac817c54_pushErr(_self_, (*(_103421_expr))._field_Token, jule::Str::lit("argument must target to field", 29), jule::Slice<jule::Any>());
							};
							if ((_103414_i >= (*((*(_self_))._field_s))._field_Fields.len())) {
								_1ac817c54_pushErr(_self_, (*(_103421_expr))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>());
								goto _iter_next_1bcbe0292;
							};
							jule::Ptr<_1ac701555_FieldIns> _105221_field = (*((*(_self_))._field_s))._field_Fields[_103414_i];;
							if ((!(_1ac79b127_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_105221_field))._field_Decl))._field_Public, (*((*(_105221_field))._field_Decl))._field_Token)))) {
								_1ac817c54_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("structure cannot instantiating because it has non-public fields", 63), jule::Slice<jule::Any>());
								_1ac8180b7_pushSuggestion(_self_, jule::Str::lit("use field:expression pairs to instantiate", 41), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1ac859a32_TypeKind> _106021_prefix = (*((*(_self_))._field_e))._field_prefix;;
							__JULE_DEFER({
								(*((*(_self_))._field_e))._field_prefix=_106021_prefix;
							});;
							(*((*(_self_))._field_e))._field_prefix=(*(_105221_field))._field_Kind;
							jule::Ptr<_1ac8243ae_Data> _106421_d = _1ac844313_evalExpr((*(_self_))._field_e, _103421_expr);;
							if ((_106421_d == nullptr)) {
								goto _iter_next_1bcbe0292;
							};
							_1ac8184d5_pushMatch(_self_, &(_105221_field), &(_106421_d), &((*(_103421_expr))._field_Token));
						}
					}
					_match_end_1bcbe0e0d:;
				};
			}
			_iter_next_1bcbe0292:;
			++it;
			_103414_i++;
			goto _iter_begin_1bcbe0292;
		}
		_iter_end_1bcbe0292:;
	};
	if ((!(_103313_paired))) {
		jule::I64 _107513_n = (*((*(_self_))._field_s))._field_Fields.len();;
		jule::I64 _107617_diff = (_107513_n - (*(_102629_exprs)).len());;
		{
			
			if ((_107617_diff <= 0LL)) {
				_case_begin_1bcbe9059:;
				{
					return;;
				}
			}
			_match_end_1bcbe8e38:;
		};
		_1c164cc40_StrBuilder _108217_idents = static__1c164d191_New(32LL);;
		for (; (_107617_diff > 0LL); (_107617_diff)--) {
			{
				_1c164d702_WriteStr(&_108217_idents, jule::Str::lit(", ", 2));
				_1c164d702_WriteStr(&_108217_idents, (*((*((*((*(_self_))._field_s))._field_Fields[(_107513_n - _107617_diff)]))._field_Decl))._field_Ident);
			}
		_iter_next_1bcbe97c9:;
		}
		_iter_end_1bcbe97c9:;;
		_1ac817c54_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(static_cast<jule::Str>(_1c164e99a_Buf(&_108217_idents).slice(2LL)), &__jule_any_type4)}));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ac817704_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac7bb015_Var> _1ac8199c0_buildVar(_1ac8194d6_rangeChecker* _self_, jule::Ptr<_1ac6db4eb_VarDecl>* _110228_decl) {
	jule::Ptr<_1ac7bb015_Var> _110313_v = _1ac7207c7_buildVar((*(_110228_decl)));;
	return _110313_v;;
}



inline void _1ac819bbd_setSizeKey(_1ac8194d6_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1ac6b58c1_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyA=_1ac8199c0_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyA));
	(*((*((*(_self_))._field_Kind))._field_KeyA))._field_Kind=(*(_1ac9404b9_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bcbee24b:;
			{
				(*((*((*(_self_))._field_Kind))._field_KeyA))._field_IterRelation=jule::new_ptr<_1ac7b9d5a_IterRelation>(_1ac7b9d5a_IterRelation{._field_Range=(*((*(_self_))._field_d))._field_Model.cast_ptr<_1ac7bb015_Var>(&__jule_any_type8)});
			}
		}
		_match_end_1bcbee1d5:;
	};
}



inline void _1ac81a0db_checkRangeExprValidity(_1ac8194d6_rangeChecker* _self_, jule::Ptr<_1ac8243ae_Data>* _112946_d, jule::Ptr<_1ac7bb015_Var>* _112957_key, jule::Ptr<_1ac859a32_TypeKind>* _112973_k) {
	jule::Bool _113013__mut = (*((*(_112957_key))))._field_Mutable;;
	if ((_113013__mut && (!(_1ac85b3b3_Mutable((*(_112973_k)).ptr()))))) {
		_113013__mut=false;
	};
	_1ac7a7760_checkValidityForInitExpr((*((*(_self_))._field_sc))._field_s, _113013__mut, (*((*(_112957_key))))._field_Reference, &((*((*((*(_112957_key))))._field_Kind))._field_Kind), _112946_d, &((*((*(_self_))._field_rang))._field_InToken));
}



inline void _1ac81a2d9_checkSlice(_1ac8194d6_rangeChecker* _self_) {
	_1ac819bbd_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1ac6b58c1_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1ac866b0a_Slc> _114813_slc = _1ac85d1d9_Slc((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1ac8199c0_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=jule::new_ptr<_1ac861c04_TypeSymbol>(_1ac861c04_TypeSymbol{._field_Kind=(*(_114813_slc))._field_Elem});
	_1ac81a0db_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*((*(_self_))._field_Kind))._field_KeyB), &((*(_114813_slc))._field_Elem));
}



inline void _1ac81a4d7_checkArray(_1ac8194d6_rangeChecker* _self_) {
	_1ac819bbd_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1ac6b58c1_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1ac868e2b_Arr> _116113_arr = _1ac85ce53_Arr((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1ac8199c0_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=jule::new_ptr<_1ac861c04_TypeSymbol>(_1ac861c04_TypeSymbol{._field_Kind=(*(_116113_arr))._field_Elem});
	_1ac81a0db_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*((*(_self_))._field_Kind))._field_KeyB), &((*(_116113_arr))._field_Elem));
}



inline void _1ac81a6d5_checkMapKeyA(_1ac8194d6_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1ac6b58c1_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1ac86829e_Map> _117313_m = _1ac85dc23_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyA=_1ac8199c0_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyA));
	(*((*((*(_self_))._field_Kind))._field_KeyA))._field_Kind=jule::new_ptr<_1ac861c04_TypeSymbol>(_1ac861c04_TypeSymbol{._field_Kind=(*(_117313_m))._field_Key});
	jule::Ptr<_1ac8243ae_Data> _117713_d = jule::new_ptr<_1ac8243ae_Data>((*((*(_self_))._field_d)));;
	(*(_117713_d))._field_Kind=(*(_117313_m))._field_Key;
	_1ac81a0db_checkRangeExprValidity(_self_, &(_117713_d), &((*((*(_self_))._field_Kind))._field_KeyA), &((*(_117313_m))._field_Key));
}



inline void _1ac81a8d3_checkMapKeyB(_1ac8194d6_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1ac6b58c1_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1ac86829e_Map> _118813_m = _1ac85dc23_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1ac8199c0_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=jule::new_ptr<_1ac861c04_TypeSymbol>(_1ac861c04_TypeSymbol{._field_Kind=(*(_118813_m))._field_Val});
	jule::Ptr<_1ac8243ae_Data> _119213_d = jule::new_ptr<_1ac8243ae_Data>((*((*(_self_))._field_d)));;
	(*(_119213_d))._field_Kind=(*(_118813_m))._field_Val;
	_1ac81a0db_checkRangeExprValidity(_self_, &(_119213_d), &((*((*(_self_))._field_Kind))._field_KeyB), &((*(_118813_m))._field_Val));
}



inline void _1ac81aad1_checkMap(_1ac8194d6_rangeChecker* _self_) {
	_1ac81a6d5_checkMapKeyA(_self_);
	_1ac81a8d3_checkMapKeyB(_self_);
}



inline void _1ac81acce_checkStr(_1ac8194d6_rangeChecker* _self_) {
	_1ac819bbd_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1ac6b58c1_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1ac8199c0_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=(*(_1ac9404b9_findBuiltinTypeAlias(jule::Str::lit("u8", 2))))._field_Kind;
}



inline void _1ac81aecc_checkComptime(_1ac8194d6_rangeChecker* _self_) {
	_1ac819bbd_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyA != nullptr) && (*((*((*(_self_))._field_rang))._field_KeyA))._field_Mutable)) {
		_1ac79a8b8_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*((*(_self_))._field_rang))._field_KeyA))._field_Token, jule::Str::lit("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident, &__jule_any_type4)}));
	};
	if ((((*((*(_self_))._field_rang))._field_KeyB != nullptr) && (*((*((*(_self_))._field_rang))._field_KeyB))._field_Mutable)) {
		_1ac79a8b8_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*((*(_self_))._field_rang))._field_KeyB))._field_Token, jule::Str::lit("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident, &__jule_any_type4)}));
	};
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1ac6b58c1_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1ac8199c0_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
}



inline jule::Bool _1ac81b263_checkComptimeRange(_1ac8194d6_rangeChecker* _self_) {
	jule::Ptr<_1ac72e5b6_comptimeRange> _122713_range = _1ac86052c_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_122713_range))._field_kind };
		
		if (_match_expr.type_is(true, 0) || _match_expr.type_is(true, 2) || _match_expr.type_is(true, 3) || _match_expr.type_is(true, 4) || _match_expr.type_is(true, 1) || _match_expr.type_is(true, 5)) {
			_case_begin_1bcc1b543:;
			{
				_1ac81aecc_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1bcc1c038:;
			{
				_1ac79a8b8_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str::lit("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1bcc1bed3:;
	};
}



inline jule::Bool _1ac81b4e9_check(_1ac8194d6_rangeChecker* _self_) {
	{
		
		if ((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic) {
			_case_begin_1bcc2002a:;
		}
		else if ((_1ac85d1d9_Slc((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcc1e03a:;
			{
				_1ac81a2d9_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1ac85ce53_Arr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcc1e0a1:;
			{
				_1ac81a4d7_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1ac85dc23_Map((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcc1e117:;
			{
				_1ac81aad1_checkMap(_self_);
				return true;;
			}
		}
		else if ((_1ac86052c_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcc1e17d:;
			{
				return _1ac81b263_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1bcc1d798:;
			{
				jule::Ptr<_1ac86260b_Prim> _125913_prim = _1ac85c183_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (((_125913_prim != nullptr) && _1ac865a93_IsStr(_125913_prim.ptr()))) {
					_1ac81acce_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1bcc1d523:;
	};
	_1ac79a8b8_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str::lit("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac8194d6_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1ac81c165_prepareTypes(_1ac81bc47_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1ac71836e_Types((*(_self_))._field_f.ptr());
	};
}



inline void _1ac81c41d_prepareExprs(_1ac81bc47_retTypeChecker* _self_, jule::Ptr<_1ac6cc9b5_Expr>* _128736_e) {
	if (((*(_128736_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_128736_e))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1bcc2598c:;
			{
				(*(_self_))._field_exprs=(*((*((*(_128736_e))))._field_Kind.cast_ptr<_1ac6cd686_TupleExpr>(&__jule_any_type80)))._field_Expr;
			}
		}
		else {
			_case_begin_1bcc25bac:;
			{
				{ jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_128736_e))); };
			}
		}
		_match_end_1bcc25b57:;
	};
}



inline void _1ac81c61b_checkExprs(_1ac81bc47_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1ac8243ae_Data>> _130313_datas = jule::Slice<jule::Ptr<_1ac8243ae_Data>>::alloc(0LL, (*(_self_))._field_exprs.len());;
	jule::Ptr<_1ac8260a3_Eval> _130413_eval = _1ac7a2d65_eval((*((*(_self_))._field_sc))._field_s, jule::Trait<_1ac879568_Lookup>((*(_self_))._field_sc, 0));;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc25d11:;
		if (it != expr_end) {
			jule::I64 _130514_i = it - expr->begin();
			jule::Ptr<_1ac6cc9b5_Expr> _130521_expr = *it;
			{
				if ((_130514_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1bcc25d11;
				};
				jule::Ptr<_1ac859a32_TypeKind> _131017_t = (*(_self_))._field_types[_130514_i];;
				(*(_130413_eval))._field_prefix=_131017_t;
				jule::Ptr<_1ac8243ae_Data> _131317_d = _1ac844313_evalExpr(_130413_eval, _130521_expr);;
				if ((_131317_d == nullptr)) {
					goto _iter_next_1bcc25d11;
				};
				{ jule::Slice<jule::Ptr<_1ac8243ae_Data>> &__jule_push_dest = _130313_datas; __jule_push_dest.push(_131317_d); };
				if (((!((*(_131317_d))._field_Mutable)) && _1ac85b3b3_Mutable((*(_131317_d))._field_Kind.ptr()))) {
					_1ac79a8b8_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("mutable typed return expressions should be mutable", 50), jule::Slice<jule::Any>());
					return;;
				};
				_1ac80d08a_assignTypeChecker _132517_ac = _1ac80d08a_assignTypeChecker{._field_s=(*((*(_self_))._field_sc))._field_s, ._field_dest=_131017_t, ._field_d=_131317_d, ._field_errorToken=(*(_self_))._field_errorToken};;
				_1ac80e058_check(&_132517_ac);
			}
			_iter_next_1bcc25d11:;
			++it;
			_130514_i++;
			goto _iter_begin_1bcc25d11;
		}
		_iter_end_1bcc25d11:;
	};
	if ((_130313_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1ac70bc03_TupleExprModel>(_1ac70bc03_TupleExprModel{._field_Datas=_130313_datas}), &__jule_any_type81);
	} else if ((_130313_datas.len() == 1LL)) {
		(*(_self_))._field_model=(*(_130313_datas[0LL]))._field_Model;
	};
}



inline jule::Bool _1ac81c95c_check(_1ac81bc47_retTypeChecker* _self_, jule::Ptr<_1ac6cc9b5_Expr>* _134429_e) {
	_1ac81c165_prepareTypes(_self_);
	_1ac81c41d_prepareExprs(_self_, _134429_e);
	jule::I64 _13489_n = (*(_self_))._field_exprs.len();;
	if (((_13489_n == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
		if ((!(_1ac7154ae_AnyVar((*((*(_self_))._field_f))._field_Decl.ptr())))) {
			_1ac79a8b8_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("return statements of non-void functions should have return expression", 69), jule::Slice<jule::Any>());
			return false;;
		};
		return true;;
	};
	if ((((_13489_n > 0LL) && ((*(_self_))._field_f != nullptr)) && _1ac7146de_IsVoid((*((*(_self_))._field_f))._field_Decl.ptr()))) {
		_1ac79a8b8_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("void functions is cannot returns any value", 42), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_13489_n > (*(_self_))._field_types.len())) {
		_1ac79a8b8_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("overflow return expressions", 27), jule::Slice<jule::Any>());
	} else if ((_13489_n < (*(_self_))._field_types.len())) {
		_1ac79a8b8_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
	};
	_1ac81c61b_checkExprs(_self_);
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac81bc47_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac77790b_ImportInfo> _1ac81e4ec_SelectPackage(_1ac81e013_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_1ac77790b_ImportInfo>)> _2732_selector) {
	if ((_2732_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc3535e:;
		if (it != expr_end) {
			jule::Ptr<_1ac77790b_ImportInfo> _3121_pkg = *it;
			{
				if (_2732_selector(_3121_pkg)) {
					return _3121_pkg;;
				};
			}
			_iter_next_1bcc3535e:;
			++it;
			goto _iter_begin_1bcc3535e;
		}
		_iter_end_1bcc3535e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac7bb015_Var> _1ac81e8e8_FindVar(_1ac81e013_SymbolTable* _self_, jule::Str _4126_ident, jule::Bool _4138_binded) {
	return _1ac8216ca_findVar(_self_, &(_4126_ident), _4138_binded, false);;
}



inline jule::Ptr<_1ac858c40_TypeAlias> _1ac81ece4_FindTypeAlias(_1ac81e013_SymbolTable* _self_, jule::Str _4732_ident, jule::Bool _4744_binded) {
	return _1ac821b81_findTypeAlias(_self_, &(_4732_ident), _4744_binded, false);;
}



inline jule::Ptr<_1ac6ee377_Struct> _1ac8201e0_FindStruct(_1ac81e013_SymbolTable* _self_, jule::Str _5329_ident, jule::Bool _5341_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc3785b:;
		if (it != expr_end) {
			jule::Ptr<_1ac6ee377_Struct> _5421_s = *it;
			{
				if ((((*(_5421_s))._field_Ident == _5329_ident) && ((*(_5421_s))._field_Binded == _5341_binded))) {
					return _5421_s;;
				};
			}
			_iter_next_1bcc3785b:;
			++it;
			goto _iter_begin_1bcc3785b;
		}
		_iter_end_1bcc3785b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac71426b_Fn> _1ac8205db_FindFn(_1ac81e013_SymbolTable* _self_, jule::Str _6425_ident, jule::Bool _6437_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc38de0:;
		if (it != expr_end) {
			jule::Ptr<_1ac71426b_Fn> _6521_f = *it;
			{
				if ((((*(_6521_f))._field_Ident == _6425_ident) && ((*(_6521_f))._field_Binded == _6437_binded))) {
					return _6521_f;;
				};
			}
			_iter_next_1bcc38de0:;
			++it;
			goto _iter_begin_1bcc38de0;
		}
		_iter_end_1bcc38de0:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac727548_Trait> _1ac82092c_FindTrait(_1ac81e013_SymbolTable* _self_, jule::Str _7528_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc3a243:;
		if (it != expr_end) {
			jule::Ptr<_1ac727548_Trait> _7621_t = *it;
			{
				if (((*(_7621_t))._field_Ident == _7528_ident)) {
					return _7621_t;;
				};
			}
			_iter_next_1bcc3a243:;
			++it;
			goto _iter_begin_1bcc3a243;
		}
		_iter_end_1bcc3a243:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac729c54_Enum> _1ac820c6d_FindEnum(_1ac81e013_SymbolTable* _self_, jule::Str _8627_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc3b255:;
		if (it != expr_end) {
			jule::Ptr<_1ac729c54_Enum> _8721_e = *it;
			{
				if (((*(_8721_e))._field_Ident == _8627_ident)) {
					return _8721_e;;
				};
			}
			_iter_next_1bcc3b255:;
			++it;
			goto _iter_begin_1bcc3b255;
		}
		_iter_end_1bcc3b255:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac72b45e_TypeEnum> _1ac8210ae_FindTypeEnum(_1ac81e013_SymbolTable* _self_, jule::Str _9731_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc3c256:;
		if (it != expr_end) {
			jule::Ptr<_1ac72b45e_TypeEnum> _9821_e = *it;
			{
				if (((*(_9821_e))._field_Ident == _9731_ident)) {
					return _9821_e;;
				};
			}
			_iter_next_1bcc3c256:;
			++it;
			goto _iter_begin_1bcc3c256;
		}
		_iter_end_1bcc3c256:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac7bb015_Var> _1ac8216ca_findVar(_1ac81e013_SymbolTable* _self_, jule::Str* _10827_ident, jule::Bool _10839_binded, jule::Bool _10853_reverse) {
	if (_10853_reverse) {
		jule::I64 _11017_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_11017_i >= 0LL); (_11017_i)--) {
			{
				jule::Ptr<_1ac7bb015_Var> _11221_v = (*(_self_))._field_Vars[_11017_i];;
				if ((((*(_11221_v))._field_Ident == (*(_10827_ident))) && ((*(_11221_v))._field_Binded == _10839_binded))) {
					return _11221_v;;
				};
			}
		_iter_next_1bcc3db3c:;
		}
		_iter_end_1bcc3db3c:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bcc40545:;
			if (it != expr_end) {
				jule::Ptr<_1ac7bb015_Var> _11825_v = *it;
				{
					if ((((*(_11825_v))._field_Ident == (*(_10827_ident))) && ((*(_11825_v))._field_Binded == _10839_binded))) {
						return _11825_v;;
					};
				}
				_iter_next_1bcc40545:;
				++it;
				goto _iter_begin_1bcc40545;
			}
			_iter_end_1bcc40545:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1ac858c40_TypeAlias> _1ac821b81_findTypeAlias(_1ac81e013_SymbolTable* _self_, jule::Str* _12733_ident, jule::Bool _12745_binded, jule::Bool _12759_reverse) {
	if (_12759_reverse) {
		jule::I64 _12917_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_12917_i >= 0LL); (_12917_i)--) {
			{
				jule::Ptr<_1ac858c40_TypeAlias> _13121_ta = (*(_self_))._field_TypeAliases[_12917_i];;
				if ((((*(_13121_ta))._field_Ident == (*(_12733_ident))) && ((*(_13121_ta))._field_Binded == _12745_binded))) {
					return _13121_ta;;
				};
			}
		_iter_next_1bcc42008:;
		}
		_iter_end_1bcc42008:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bcc43911:;
			if (it != expr_end) {
				jule::Ptr<_1ac858c40_TypeAlias> _13725_ta = *it;
				{
					if ((((*(_13725_ta))._field_Ident == (*(_12733_ident))) && ((*(_13725_ta))._field_Binded == _12745_binded))) {
						return _13725_ta;;
					};
				}
				_iter_next_1bcc43911:;
				++it;
				goto _iter_begin_1bcc43911;
			}
			_iter_end_1bcc43911:;
		};
	};
	return nullptr;;
}



inline jule::Any _1ac82207c_defByIdent(_1ac81e013_SymbolTable* _self_, jule::Str* _14830_ident, jule::Bool _14842_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc44c0e:;
		if (it != expr_end) {
			jule::Ptr<_1ac7bb015_Var> _14921_v = *it;
			{
				if ((((*(_14921_v))._field_Ident == (*(_14830_ident))) && ((*(_14921_v))._field_Binded == _14842_binded))) {
					return jule::Any(_14921_v, &__jule_any_type8);;
				};
			}
			_iter_next_1bcc44c0e:;
			++it;
			goto _iter_begin_1bcc44c0e;
		}
		_iter_end_1bcc44c0e:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc45072:;
		if (it != expr_end) {
			jule::Ptr<_1ac858c40_TypeAlias> _15521_ta = *it;
			{
				if ((((*(_15521_ta))._field_Ident == (*(_14830_ident))) && ((*(_15521_ta))._field_Binded == _14842_binded))) {
					return jule::Any(_15521_ta, &__jule_any_type66);;
				};
			}
			_iter_next_1bcc45072:;
			++it;
			goto _iter_begin_1bcc45072;
		}
		_iter_end_1bcc45072:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc45eeb:;
		if (it != expr_end) {
			jule::Ptr<_1ac6ee377_Struct> _16121_s = *it;
			{
				if ((((*(_16121_s))._field_Ident == (*(_14830_ident))) && ((*(_16121_s))._field_Binded == _14842_binded))) {
					return jule::Any(_16121_s, &__jule_any_type65);;
				};
			}
			_iter_next_1bcc45eeb:;
			++it;
			goto _iter_begin_1bcc45eeb;
		}
		_iter_end_1bcc45eeb:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc46e75:;
		if (it != expr_end) {
			jule::Ptr<_1ac71426b_Fn> _16721_f = *it;
			{
				if ((((*(_16721_f))._field_Ident == (*(_14830_ident))) && ((*(_16721_f))._field_Binded == _14842_binded))) {
					return jule::Any(_16721_f, &__jule_any_type64);;
				};
			}
			_iter_next_1bcc46e75:;
			++it;
			goto _iter_begin_1bcc46e75;
		}
		_iter_end_1bcc46e75:;
	};
	if (_14842_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc47e98:;
		if (it != expr_end) {
			jule::Ptr<_1ac727548_Trait> _17721_t = *it;
			{
				if (((*(_17721_t))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_17721_t, &__jule_any_type10);;
				};
			}
			_iter_next_1bcc47e98:;
			++it;
			goto _iter_begin_1bcc47e98;
		}
		_iter_end_1bcc47e98:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc4973b:;
		if (it != expr_end) {
			jule::Ptr<_1ac729c54_Enum> _18321_e = *it;
			{
				if (((*(_18321_e))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_18321_e, &__jule_any_type67);;
				};
			}
			_iter_next_1bcc4973b:;
			++it;
			goto _iter_begin_1bcc4973b;
		}
		_iter_end_1bcc4973b:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc4a088:;
		if (it != expr_end) {
			jule::Ptr<_1ac72b45e_TypeEnum> _18921_te = *it;
			{
				if (((*(_18921_te))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_18921_te, &__jule_any_type68);;
				};
			}
			_iter_next_1bcc4a088:;
			++it;
			goto _iter_begin_1bcc4a088;
		}
		_iter_end_1bcc4a088:;
	};
	return nullptr;;
}



inline jule::Bool _1ac822533_isDuplicatedIdent(_1ac81e013_SymbolTable* _self_, jule::Uintptr _20132_itself, jule::Str* _20150_ident, jule::Bool _20162_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc4b551:;
		if (it != expr_end) {
			jule::Ptr<_1ac7bb015_Var> *_20216_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20216_v))) != _20132_itself) && ((*((*(_20216_v))))._field_Ident == (*(_20150_ident)))) && ((*((*(_20216_v))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1bcc4b551:;
			++it;
			goto _iter_begin_1bcc4b551;
		}
		_iter_end_1bcc4b551:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc4b8b4:;
		if (it != expr_end) {
			jule::Ptr<_1ac858c40_TypeAlias> *_20816_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20816_ta))) != _20132_itself) && ((*((*(_20816_ta))))._field_Ident == (*(_20150_ident)))) && ((*((*(_20816_ta))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1bcc4b8b4:;
			++it;
			goto _iter_begin_1bcc4b8b4;
		}
		_iter_end_1bcc4b8b4:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc4cab3:;
		if (it != expr_end) {
			jule::Ptr<_1ac6ee377_Struct> *_21416_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21416_s))) != _20132_itself) && ((*((*(_21416_s))))._field_Ident == (*(_20150_ident)))) && ((*((*(_21416_s))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1bcc4cab3:;
			++it;
			goto _iter_begin_1bcc4cab3;
		}
		_iter_end_1bcc4cab3:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc4dcb2:;
		if (it != expr_end) {
			jule::Ptr<_1ac71426b_Fn> *_22016_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22016_f))) != _20132_itself) && ((*((*(_22016_f))))._field_Ident == (*(_20150_ident)))) && ((*((*(_22016_f))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1bcc4dcb2:;
			++it;
			goto _iter_begin_1bcc4dcb2;
		}
		_iter_end_1bcc4dcb2:;
	};
	if (_20162_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc5005a:;
		if (it != expr_end) {
			jule::Ptr<_1ac727548_Trait> *_23016_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23016_t))) != _20132_itself) && ((*((*(_23016_t))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1bcc5005a:;
			++it;
			goto _iter_begin_1bcc5005a;
		}
		_iter_end_1bcc5005a:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc511e3:;
		if (it != expr_end) {
			jule::Ptr<_1ac729c54_Enum> *_23616_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23616_e))) != _20132_itself) && ((*((*(_23616_e))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1bcc511e3:;
			++it;
			goto _iter_begin_1bcc511e3;
		}
		_iter_end_1bcc511e3:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc5217d:;
		if (it != expr_end) {
			jule::Ptr<_1ac72b45e_TypeEnum> *_24216_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24216_te))) != _20132_itself) && ((*((*(_24216_te))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1bcc5217d:;
			++it;
			goto _iter_begin_1bcc5217d;
		}
		_iter_end_1bcc5217d:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac81e013_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac824766_IsNil(_1ac8243ae_Data* _self_) {
	return _1ac85ab10_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1ac8249ec_IsVoid(_1ac8243ae_Data* _self_) {
	return _1ac85ad96_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1ac824c83_IsConst(_1ac8243ae_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1ac8250c4_GoodOperand(_1ac8243ae_Data* _self_, jule::Ptr<_1ac8243ae_Data>* _10531_other) {
	if ((_1ac85cbbc_TypeEnum((*((*(_10531_other))))._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1ac85c183_Prim((*((*(_10531_other))))._field_Kind.ptr()) == nullptr) || (!(_1ac865d29_IsAny(_1ac85c183_Prim((*((*(_10531_other))))._field_Kind.ptr()).ptr())))) && (_1ac85d98c_Trait((*((*(_10531_other))))._field_Kind.ptr()) == nullptr)) && (!(_1ac85ab10_IsNil((*(_self_))._field_Kind.ptr()))));;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac8243ae_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac825503_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _1ac826603_pushErr(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac6b2e62_Token> _13626_token, jule::Str _13641_fmt, jule::Slice<jule::Any> _13654_args) {
	_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), _13626_token, _13641_fmt, _13654_args);
}



inline void _1ac826966_pushSuggestion(_1ac8260a3_Eval* _self_, jule::Str _14133_fmt, jule::Slice<jule::Any> _14146_args) {
	_1ac79ac2b_pushSuggestion((*(_self_))._field_s.ptr(), _14133_fmt, _14146_args);
}



inline void _1ac826b64_allowBuiltin(_1ac8260a3_Eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1ac826d62_disallowBuiltin(_1ac8260a3_Eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1ac8270e8_isUnsafe(_1ac8260a3_Eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1ac82737e_isGlobal(_1ac8260a3_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1bcc9b7c1:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bcc9bbab:;
			{
				return false;;
			}
		}
		_match_end_1bcc9bb56:;
	};
}



inline jule::Bool _1ac82768c_applyNumericPrefix(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac8243ae_Data>* _16842_d) {
	if ((((((*(_16842_d)) == nullptr) || (!(_1ac824c83_IsConst((*(_16842_d)).ptr())))) || (_1ac85c183_Prim((*((*(_16842_d))))._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1ac86260b_Prim> _1759_prim = _1ac85c183_Prim((*(_self_))._field_prefix.ptr());;
	if ((_1759_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1a6cde022_IsFloat(_1ac86294c_Str(_1759_prim.ptr()))) {
			_case_begin_1bcc9e5a4:;
			{
				(*((*(_16842_d))))._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>((*((*(_self_))._field_prefix)));
				_1a6ce3422_SetF64((*((*(_16842_d))))._field_Constant.ptr(), static_cast<jule::F64>(_1a6ce2597_AsF64((*((*(_16842_d))))._field_Constant.ptr())));
				(*((*((*(_16842_d))))._field_Constant))._field_Kind=(*(_1759_prim))._field_Kind;
			}
		}
		else if (_1a6cdd609_IsSigInt(_1ac86294c_Str(_1759_prim.ptr()))) {
			_case_begin_1bcc9e61a:;
			{
				if ((!(_1ac80a5b5_sigAssignable(_1ac86294c_Str(_1759_prim.ptr()), _16842_d)))) {
					return false;;
				};
				(*((*(_16842_d))))._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>((*((*(_self_))._field_prefix)));
				_1a6ce2850_SetI64((*((*(_16842_d))))._field_Constant.ptr(), static_cast<jule::I64>(_1a6ce207a_AsI64((*((*(_16842_d))))._field_Constant.ptr())));
				(*((*((*(_16842_d))))._field_Constant))._field_Kind=(*(_1759_prim))._field_Kind;
			}
		}
		else if (_1a6cdd917_IsUnsigInt(_1ac86294c_Str(_1759_prim.ptr()))) {
			_case_begin_1bcc9e681:;
			{
				if ((!(_1ac80a97d_unsigAssignable(_1ac86294c_Str(_1759_prim.ptr()), _16842_d)))) {
					return false;;
				};
				(*((*(_16842_d))))._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>((*((*(_self_))._field_prefix)));
				_1a6ce2b08_SetU64((*((*(_16842_d))))._field_Constant.ptr(), static_cast<jule::U64>(_1a6ce2311_AsU64((*((*(_16842_d))))._field_Constant.ptr())));
				(*((*((*(_16842_d))))._field_Constant))._field_Kind=(*(_1759_prim))._field_Kind;
			}
		}
		_match_end_1bcc9e2a7:;
	};
	return true;;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac8279cd_litStr(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac6cda60_LitExpr>* _20322_l) {
	jule::Str _20413_s = jule::Str();;
	if (_1ac6b4381_IsRawStr((*((*(_20322_l))))._field_Value)) {
		_20413_s=_1ac808816_ToRawStr((*((*(_20322_l))))._field_Value);
	} else {
		_20413_s=_1ac808b57_ToStr((*((*(_20322_l))))._field_Value);
	};
	jule::Ptr<_1a6cde8d5_Const> _21013_constant = static__1a6ce0672_NewStr(_20413_s);;
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c373_primStr, ._field_Mutable=true, ._field_Model=jule::Any(_21013_constant, &__jule_any_type19), ._field_Constant=_21013_constant});;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac827d1e_litRune(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac6cda60_LitExpr>* _22023_l) {
	jule::I32 _2219_r = _1ac8085e6_ToRune((*((*(_22023_l))))._field_Value);;
	jule::Ptr<_1ac8243ae_Data> _22213_data = jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Constant=static__1a6cded25_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_2219_r)))});;
	jule::Bool _2269_isAscii = _1ac7dcd7d_IsAscii(_2219_r);;
	if (_2269_isAscii) {
		(*(_22213_data))._field_Kind=_1ac93de79_primU8;
	} else {
		(*(_22213_data))._field_Kind=_1ac93d8e6_primI32;
	};
	(*(_22213_data))._field_Model=jule::Any(jule::new_ptr<_1ac71083e_RuneExprModel>(_1ac71083e_RuneExprModel{._field_Code=_2219_r}), &__jule_any_type82);
	(*(_22213_data))._field_Mutable=true;
	(*(_22213_data))._field_IsRune=true;
	(*(_22213_data))._field_untyped=true;
	return _22213_data;;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac828160_litFloat(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac6cda60_LitExpr>* _24024_l) {
	jule::F64 _2419_f = ({
		auto except = _1dbb106d2_ParseFloat((*((*(_24024_l))))._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1a6cde8d5_Const> _24213_constant = static__1a6ce093b_NewF64(_2419_f);;
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_untyped=true, ._field_Kind=_1ac940013_primF64, ._field_Mutable=true, ._field_Model=jule::Any(_24213_constant, &__jule_any_type19), ._field_Constant=_24213_constant});;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac8284a1_litInt(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac6cda60_LitExpr>* _25226_l) {
	;
	jule::Str _25513_lit = (*((*(_25226_l))))._field_Value;;
	jule::I64 _25613_base = 0LL;;
	{
		
		if (_1a693951e_HasPrefix(_25513_lit, jule::Str::lit("0x", 2))) {
			_case_begin_1bccae1da:;
			{
				(_25513_lit).mut_slice(2LL);;
				_25613_base=16LLU;
			}
		}
		else if (_1a693951e_HasPrefix(_25513_lit, jule::Str::lit("0b", 2))) {
			_case_begin_1bccae0a8:;
			{
				(_25513_lit).mut_slice(2LL);;
				_25613_base=2LLU;
			}
		}
		else if (_1a693951e_HasPrefix(_25513_lit, jule::Str::lit("0o", 2))) {
			_case_begin_1bccae11e:;
			{
				(_25513_lit).mut_slice(2LL);;
				_25613_base=8LLU;
			}
		}
		else if (((_25513_lit[0LL] == '0') && (_25513_lit.len() > 1LL))) {
			_case_begin_1bccadc9a:;
			{
				(_25513_lit).mut_slice(1LL);;
				_25613_base=8LLU;
			}
		}
		else {
			_case_begin_1bccadc34:;
			{
				_25613_base=10LLU;
			}
		}
		_match_end_1bccadbce:;
	};
	jule::Ptr<_1ac8243ae_Data> _27613_d = jule::new_ptr<_1ac8243ae_Data>();;
	jule::Bool _27813_ok = true;;
	jule::I64 _2799_sig = ({
		auto except = _1dbb08c91_ParseInt(_25513_lit, _25613_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_27813_ok=false;

			0LL;
		});
	});;
	if (_27813_ok) {
		(*(_27613_d))._field_Constant=static__1a6cded25_NewI64(_2799_sig);
		(*(_27613_d))._field_Kind=_1ac93d099_primInt;
	} else {
		jule::U64 _28713_unsig = ({
			auto except = _1dbb087da_ParseUint(_25513_lit, _25613_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1ac826603_pushErr(_self_, (*((*(_25226_l))))._field_Token, jule::Str::lit("arithmetic value overflow: this value too big", 45), jule::Slice<jule::Any>());
				_1ac826966_pushSuggestion(_self_, jule::Str::lit("floating-point literals may solve your problem", 46), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		(*(_27613_d))._field_Constant=static__1a6ce00de_NewU64(_28713_unsig);
		(*(_27613_d))._field_Kind=_1ac93cbc0_primUint;
	};
	(*(_27613_d))._field_Model=jule::Any((*(_27613_d))._field_Constant, &__jule_any_type19);
	(*(_27613_d))._field_untyped=true;
	if ((!(_1ac82768c_applyNumericPrefix(_self_, &(_27613_d))))) {
		_1ac84d31c_fitBitsize(&(_27613_d));
	};
	return _27613_d;;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac8287e2_litNum(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac6cda60_LitExpr>* _30726_l) {
	{
		
		if (_1ac6b5074_IsFloat((*((*(_30726_l))))._field_Value)) {
			_case_begin_1bccb5e28:;
			{
				return _1ac828160_litFloat(_self_, _30726_l);;
			}
		}
		else {
			_case_begin_1bccb5db2:;
			{
				return _1ac8284a1_litInt(_self_, _30726_l);;
			}
		}
		_match_end_1bccb5ce6:;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac828b33_evalLit(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac6cda60_LitExpr> _31626_lit) {
	{
		
		if (_1ac6b40b7_IsStr((*(_31626_lit))._field_Value)) {
			_case_begin_1bccb7116:;
			{
				return _1ac8279cd_litStr(_self_, &(_31626_lit));;
			}
		}
		else if (_1ac6b464a_IsRune((*(_31626_lit))._field_Value)) {
			_case_begin_1bccb718d:;
			{
				return _1ac827d1e_litRune(_self_, &(_31626_lit));;
			}
		}
		else if (_1ac6b533d_IsNum((*(_31626_lit))._field_Value)) {
			_case_begin_1bccb7215:;
			{
				return _1ac8287e2_litNum(_self_, &(_31626_lit));;
			}
		}
		else {
			_case_begin_1bccb6a1c:;
			{
				return nullptr;;
			}
		}
		_match_end_1bccb6962:;
	};
}



inline jule::Any _1ac828e74_findBuiltins(_1ac8260a3_Eval* _self_, jule::Str* _32932_ident) {
	if (_1ac794d79_IsPub((*(_32932_ident)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 1)) {
				_case_begin_1bccb9459:;
				{
					jule::Any _33321_def = _1ac84d0db_findBuiltinsImport(_32932_ident, (*(_self_))._field_lookup.cast_ptr<_1ac77790b_ImportInfo>(1));;
					if ((_33321_def != nullptr)) {
						return _33321_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, 3)) {
				_case_begin_1bccb94c0:;
				{
					jule::Any _33821_def = _1ac84dd45_findBuiltinsSema(_32932_ident, (*(_self_))._field_lookup.cast_ptr<_1ac797c7d_Sema>(3));;
					if ((_33821_def != nullptr)) {
						return _33821_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, 0)) {
				_case_begin_1bccb9536:;
				{
					jule::Any _34321_def = _1ac84dd45_findBuiltinsSema(_32932_ident, (*((*(_self_))._field_lookup.cast_ptr<_1ac75d42a_scopeChecker>(0)))._field_s);;
					if ((_34321_def != nullptr)) {
						return _34321_def;;
					};
				}
			}
			_match_end_1bccb93b0:;
		};
		return nullptr;;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1ac940783_findBuiltinDef(_32932_ident);;
}



inline jule::Any _1ac829370_getDef(_1ac8260a3_Eval* _self_, jule::Str* _35626_ident, jule::Bool _35638_binded) {
	jule::Ptr<_1ac7bb015_Var> _36113_v = _1ac879568_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ac877c4d_FindVar((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_36113_v != nullptr)) {
		return jule::Any(_36113_v, &__jule_any_type8);;
	};
	jule::Ptr<_1ac858c40_TypeAlias> _36613_ta = _1ac879568_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ac878149_FindTypeAlias((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_36613_ta != nullptr)) {
		return jule::Any(_36613_ta, &__jule_any_type66);;
	};
	if ((!(_35638_binded))) {
		jule::Ptr<_1ac729c54_Enum> _37217_enm = _1ac879568_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ac8790c3_FindEnum((*(_self_))._field_lookup, (*(_35626_ident)));;
		if ((_37217_enm != nullptr)) {
			return jule::Any(_37217_enm, &__jule_any_type67);;
		};
		jule::Ptr<_1ac72b45e_TypeEnum> _37717_tenm = _1ac879568_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ac879414_FindTypeEnum((*(_self_))._field_lookup, (*(_35626_ident)));;
		if ((_37717_tenm != nullptr)) {
			return jule::Any(_37717_tenm, &__jule_any_type68);;
		};
	};
	jule::Ptr<_1ac71426b_Fn> _38313_f = _1ac879568_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ac878941_FindFn((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_38313_f != nullptr)) {
		return jule::Any(_38313_f, &__jule_any_type64);;
	};
	jule::Ptr<_1ac6ee377_Struct> _38813_s = _1ac879568_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ac878545_FindStruct((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_38813_s != nullptr)) {
		return jule::Any(_38813_s, &__jule_any_type65);;
	};
	return _1ac828e74_findBuiltins(_self_, _35626_ident);;
}



inline jule::Ptr<_1ac71a33d_ReferenceStack> _1ac829606_getOwnerRefers(_1ac8260a3_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1bccc2eac:;
			{
				jule::Ptr<_1ac75d42a_scopeChecker> _39917_sc = _1ac7617a2_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1ac75d42a_scopeChecker>(0));;
				return (*((*(_39917_sc))._field_owner))._field_Refers;;
			}
		}
		else {
			_case_begin_1bccc1ebc:;
			{
				if ((((*(_self_))._field_owner != nullptr) && ((*((*(_self_))._field_owner))._field_Scope == nullptr))) {
					return (*((*(_self_))._field_owner))._field_Refers;;
				};
			}
		}
		_match_end_1bccc1e67:;
	};
	return nullptr;;
}



inline void _1bccd4a29_pushReference(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac717170_FnIns>* _41140_ref) {
	jule::Ptr<_1ac71a33d_ReferenceStack> _41213_refers = _1ac829606_getOwnerRefers(_self_);;
	if (((_41213_refers != nullptr) && (!(_1bccd6d5b_Exist(_41213_refers.ptr(), (*(_41140_ref))))))) {
		_1ac71b130_Push(_41213_refers.ptr(), jule::Any((*(_41140_ref)), &__jule_any_type7));
	};
}

inline void _1bcce92ad_pushReference(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac7bb015_Var>* _41140_ref) {
	jule::Ptr<_1ac71a33d_ReferenceStack> _41213_refers = _1ac829606_getOwnerRefers(_self_);;
	if (((_41213_refers != nullptr) && (!(_1bcceb58a_Exist(_41213_refers.ptr(), (*(_41140_ref))))))) {
		_1ac71b130_Push(_41213_refers.ptr(), jule::Any((*(_41140_ref)), &__jule_any_type8));
	};
}

inline void _1bcda9deb_pushReference(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac702105_StructIns>* _41140_ref) {
	jule::Ptr<_1ac71a33d_ReferenceStack> _41213_refers = _1ac829606_getOwnerRefers(_self_);;
	if (((_41213_refers != nullptr) && (!(_1bcdac22d_Exist(_41213_refers.ptr(), (*(_41140_ref))))))) {
		_1ac71b130_Push(_41213_refers.ptr(), jule::Any((*(_41140_ref)), &__jule_any_type9));
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac829c00__evalEnum(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac729c54_Enum> _41828_enm) {
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(_41828_enm, 3)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac82a0eb_evalEnum(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac729c54_Enum> _42731_enm, jule::Ptr<_1ac6b2e62_Token> _42743_errorToken) {
	if ((!(_1ac79b127_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_42731_enm))._field_Public, (*(_42731_enm))._field_Token)))) {
		_1ac826603_pushErr(_self_, _42743_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_42731_enm))._field_Ident, &__jule_any_type4)}));
		_1ac826966_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1ac829c00__evalEnum(_self_, _42731_enm);;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac82a43c__evalTypeEnum(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac72b45e_TypeEnum> _43632_enm) {
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(_43632_enm, 4)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac82a838_evalTypeEnum(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac72b45e_TypeEnum> _44535_enm, jule::Ptr<_1ac6b2e62_Token> _44551_errorToken) {
	if ((!(_1ac79b127_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_44535_enm))._field_Public, (*(_44535_enm))._field_Token)))) {
		_1ac826603_pushErr(_self_, _44551_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_44535_enm))._field_Ident, &__jule_any_type4)}));
		_1ac826966_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1ac82a43c__evalTypeEnum(_self_, _44535_enm);;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac82ab79__evalStruct(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac702105_StructIns> _45430_s) {
	jule::Ptr<_1ac8243ae_Data> _45513_d = jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(_45430_s, 0)}), ._field_Model=jule::Any(_45430_s, &__jule_any_type9), ._field_Decl=true, });;
	if ((((*(_45430_s))._field_Decl != nullptr) && (*((*(_45430_s))._field_Decl))._field_Binded)) {
		(*((*(_45513_d))._field_Kind))._field_BindIdent=(*((*(_45430_s))._field_Decl))._field_Ident;
	};
	return _45513_d;;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac82b075_evalStruct(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac702105_StructIns> _46833_s, jule::Ptr<_1ac6b2e62_Token> _46848_errorToken) {
	if ((!(_1ac79b127_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_46833_s))._field_Decl))._field_Public, (*((*(_46833_s))._field_Decl))._field_Token)))) {
		_1ac826603_pushErr(_self_, _46848_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_46833_s))._field_Decl))._field_Ident, &__jule_any_type4)}));
		_1ac826966_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1ac82b729_checkDeprecated(_self_, &((*((*(_46833_s))._field_Decl))._field_Directives), _46848_errorToken);
	return _1ac82ab79__evalStruct(_self_, _46833_s);;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac82b3b6_evalFnIns(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac717170_FnIns> _47828_f) {
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(_47828_f, 1)}), ._field_Model=jule::Any(_47828_f, &__jule_any_type7), });;
}



inline void _1ac82b729_checkDeprecated(_1ac8260a3_Eval* _self_, jule::Slice<jule::Ptr<_1ac6c7a9d_Directive>>* _48739_directives, jule::Ptr<_1ac6b2e62_Token> _48770_tok) {
	if (_1ac8270e8_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1ac6c7a9d_Directive> _4929_d = _1ac84cc23_findDirective(_48739_directives, jule::Str::lit("deprecated", 10));;
	if ((_4929_d != nullptr)) {
		if (((*(_4929_d))._field_Args.len() == 0LL)) {
			_1ac826603_pushErr(_self_, _48770_tok, jule::Str::lit("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("this code is deprecated", 23), &__jule_any_type4)}));
		} else {
			_1ac826603_pushErr(_self_, _48770_tok, jule::Str::lit("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any((*((*(_4929_d))._field_Args[0LL]))._field_Kind, &__jule_any_type4)}));
		};
		_1ac826966_pushSuggestion(_self_, jule::Str::lit("use Unsafe Jule for deprecated codes or replace to successor", 60), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac82bb25_evalFn(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac71426b_Fn> _50329_f, jule::Ptr<_1ac6b2e62_Token> _50337_errorToken) {
	if ((!(_1ac79b127_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_50329_f))._field_Public, (*(_50329_f))._field_Token)))) {
		_1ac826603_pushErr(_self_, _50337_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_50329_f))._field_Ident, &__jule_any_type4)}));
		_1ac826966_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1ac82b729_checkDeprecated(_self_, &((*(_50329_f))._field_Directives), _50337_errorToken);
	jule::Ptr<_1ac717170_FnIns> _51213_ins = _1ac7159cb_instance(_50329_f);;
	_1bccd4a29_pushReference(_self_, &(_51213_ins));
	return _1ac82b3b6_evalFnIns(_self_, _51213_ins);;
}



inline void _1ac82c043_pushIllegalCycleError(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac7bb015_Var>* _51741_v1, jule::Ptr<_1ac7bb015_Var>* _51752_v2, _1c164cc40_StrBuilder* _51767_message) {
	;
	jule::Str _5199_refers_to = _1a756da9d_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*((*(_51741_v1))))._field_Ident, &__jule_any_type4),jule::Any((*((*(_51752_v2))))._field_Ident, &__jule_any_type4)}));;
	jule::Slice<jule::U8> _5209_buf = _1c164e99a_Buf(_51767_message);;
	_1c164d702_WriteStr(_51767_message, _1a6938c27_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1c164d702_WriteStr(_51767_message, _5199_refers_to);
	_1c164d9aa_WriteByte(_51767_message, '\n');
	_1c164d449_Write(_51767_message, _5209_buf);
}



inline jule::Bool _1ac82c43e_checkCrossCycle(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac7bb015_Var>* _52735_v, _1c164cc40_StrBuilder* _52749_message) {
	{
		auto expr = &((*((*(_52735_v))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bccdb15c:;
		if (it != expr_end) {
			jule::Ptr<_1ac7bb015_Var> *_52816_d = it;
			{
				if (((*(_52816_d)) == (*(_self_))._field_owner)) {
					_1ac82c043_pushIllegalCycleError(_self_, _52735_v, _52816_d, _52749_message);
					return false;;
				};
				if ((!(_1ac82c43e_checkCrossCycle(_self_, _52816_d, _52749_message)))) {
					_1ac82c043_pushIllegalCycleError(_self_, _52735_v, _52816_d, _52749_message);
					return false;;
				};
			}
			_iter_next_1bccdb15c:;
			++it;
			goto _iter_begin_1bccdb15c;
		}
		_iter_end_1bccdb15c:;
	};
	return true;;
}



inline jule::Bool _1ac82c83a_checkIllegalCycles(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac7bb015_Var>* _54442_v, jule::Ptr<_1ac6b2e62_Token> _54451_declToken) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*((*(_self_))._field_owner))._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_54442_v)))) {
		_1ac826603_pushErr(_self_, (*((*(_self_))._field_owner))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_owner))._field_Ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1c164cc40_StrBuilder _55713_message = static__1c164d191_New(32LL);;
	if ((!(_1ac82c43e_checkCrossCycle(_self_, _54442_v, &(_55713_message))))) {
		jule::Str _56017_errMsg = _1c164dee9_Str(&_55713_message);;
		_1c164e1e7_Clear(&_55713_message);
		_1ac82c043_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _54442_v, &(_55713_message));
		_56017_errMsg+=_1c164dee9_Str(&_55713_message);
		_1ac826603_pushErr(_self_, _54451_declToken, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_56017_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{ jule::Slice<jule::Ptr<_1ac7bb015_Var>> &__jule_push_dest = (*((*(_self_))._field_owner))._field_Depends; __jule_push_dest.push((*(_54442_v))); };
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac82cc36_evalVar(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac7bb015_Var> _57230_v, jule::Ptr<_1ac6b2e62_Token> _57239_errorToken) {
	if ((!(_1ac79b127_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_57230_v))._field_Public, (*(_57230_v))._field_Token)))) {
		_1ac826603_pushErr(_self_, _57239_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_57230_v))._field_Ident, &__jule_any_type4)}));
		_1ac826966_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1ac82b729_checkDeprecated(_self_, &((*(_57230_v))._field_Directives), _57239_errorToken);
	if (((*(_57230_v))._field_Token == nullptr)) {
		goto _julec_label_1bcd0154b;
	};
	(*(_57230_v))._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1bcce49e5:;
			{
				jule::Bool _59113_ok = _1ac82c83a_checkIllegalCycles(_self_, &(_57230_v), _57239_errorToken);;
				if ((!(_59113_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1bcce4a5b:;
			{
				if (((!((*(_57230_v))._field_Reference)) || _1ac8270e8_isUnsafe(_self_))) {
					goto _match_end_1bcce4990;
				};
				jule::Ptr<_1ac75d42a_scopeChecker> _59917_s = (*(_self_))._field_lookup.cast_ptr<_1ac75d42a_scopeChecker>(0);;
				while ((((*(_59917_s))._field_owner == nullptr) && ((*(_59917_s))._field_parent != nullptr))) {
					{
						_59917_s=(*(_59917_s))._field_parent;
					}
				_iter_next_1bcce5dd1:;
				}
				_iter_end_1bcce5dd1:;;
				if (((((*(_59917_s))._field_owner != nullptr) && (*((*(_59917_s))._field_owner))._field_Anon) && ((*(_57230_v))._field_Scope != (*((*(_59917_s))._field_owner))._field_Scope))) {
					_1ac826603_pushErr(_self_, _57239_errorToken, jule::Str::lit("anonymous functions cannot access to reference definition @ of parent scope", 75), jule::Slice<jule::Any>::make({jule::Any((*(_57230_v))._field_Ident, &__jule_any_type4)}));
				};
			}
		}
		_match_end_1bcce4990:;
	};
	if (((*(_57230_v))._field_Scope == nullptr)) {
		_1bcce92ad_pushReference(_self_, &(_57230_v));
	};
	if (((!((*(_57230_v))._field_Binded)) && (((*(_57230_v))._field_Value == nullptr) || ((*((*(_57230_v))._field_Value))._field_Data == nullptr)))) {
		if ((*(_57230_v))._field_Constant) {
			_1ac7b2a45_checkVar((*(_self_))._field_s, &(_57230_v), jule::Trait<_1ac879568_Lookup>((*(_self_))._field_s, 3));
			if ((((*(_57230_v))._field_Value == nullptr) || ((*((*(_57230_v))._field_Value))._field_Data == nullptr))) {
				return nullptr;;
			};
		};
	};
	if ((((*(_57230_v))._field_Kind == nullptr) || ((*((*(_57230_v))._field_Kind))._field_Kind == nullptr))) {
		if (((*(_57230_v))._field_Scope != nullptr)) {
			return nullptr;;
		};
		_1ac7b2a45_checkVar((*(_self_))._field_s, &(_57230_v), (*(_self_))._field_lookup);
		if ((((*(_57230_v))._field_Kind == nullptr) || ((*((*(_57230_v))._field_Kind))._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	_julec_label_1bcd0154b:;
	jule::Ptr<_1ac8243ae_Data> _64313_d = jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=(*((*(_57230_v))._field_Kind))._field_Kind, ._field_Mutable=(*(_57230_v))._field_Mutable, ._field_Reference=(*(_57230_v))._field_Reference, ._field_Lvalue=(!((*(_57230_v))._field_Constant)), ._field_Model=jule::Any(_57230_v, &__jule_any_type8), });;
	if ((((!((*(_57230_v))._field_Binded)) && _1ac7bb39a_IsInitialized(_57230_v.ptr())) && ((*((*(_57230_v))._field_Value))._field_Data != nullptr))) {
		(*(_64313_d))._field_IsRune=(*((*((*(_57230_v))._field_Value))._field_Data))._field_IsRune;
	};
	if (((*(_57230_v))._field_Constant && ((*((*((*(_57230_v))._field_Value))._field_Data))._field_Constant != nullptr))) {
		(*(_64313_d))._field_Constant=jule::new_ptr<_1a6cde8d5_Const>((*((*((*((*(_57230_v))._field_Value))._field_Data))._field_Constant)));
		(*(_64313_d))._field_Model=jule::Any((*(_64313_d))._field_Constant, &__jule_any_type19);
		if (_1ac7bb8b7_untypedConstant(_57230_v.ptr())) {
			_1ac82768c_applyNumericPrefix(_self_, &(_64313_d));
			(*(_64313_d))._field_untyped=true;
		};
	};
	return _64313_d;;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac82d132_evalTypeAlias(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac858c40_TypeAlias> _66736_ta, jule::Ptr<_1ac6b2e62_Token> _66752_errorToken) {
	if ((!(_1ac79b127_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_66736_ta))._field_Public, (*(_66736_ta))._field_Token)))) {
		_1ac826603_pushErr(_self_, _66752_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_66736_ta))._field_Ident, &__jule_any_type4)}));
		_1ac826966_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_66736_ta))._field_Used=true;
	jule::Trait<_1ac85957b_Kind> _67613_kind = (*((*((*(_66736_ta))._field_Kind))._field_Kind))._field_Kind;;
	jule::Ptr<_1ac8243ae_Data> _67717_d = nullptr;;
	{
		auto &_match_expr{ _67613_kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1bcd0c546:;
			{
				_67717_d=_1ac82ab79__evalStruct(_self_, _67613_kind.cast_ptr<_1ac702105_StructIns>(0));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1bcd0c3d1:;
			{
				_67717_d=_1ac829c00__evalEnum(_self_, _67613_kind.cast_ptr<_1ac729c54_Enum>(3));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1bcd0a5ee:;
			{
				_67717_d=_1ac82a43c__evalTypeEnum(_self_, _67613_kind.cast_ptr<_1ac72b45e_TypeEnum>(4));
			}
		}
		else {
			_case_begin_1bcd0a588:;
			{
				_67717_d=jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=(*((*((*(_66736_ta))._field_Kind))._field_Kind))._field_Kind}), ._field_Decl=true, });
				if ((*(_66736_ta))._field_Binded) {
					(*((*(_67717_d))._field_Kind))._field_BindIdent=(*(_66736_ta))._field_Ident;
				} else {
					(*((*(_67717_d))._field_Kind))._field_BindIdent=(*((*((*(_66736_ta))._field_Kind))._field_Kind))._field_BindIdent;
				};
				(*(_67717_d))._field_Model=jule::Any((*(_67717_d))._field_Kind, &__jule_any_type83);
			}
		}
		_match_end_1bcd0a2be:;
	};
	(*((*(_67717_d))._field_Kind))._field_Generic=(*(_66736_ta))._field_Generic;
	return _67717_d;;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac82d52d_evalDef(_1ac8260a3_Eval* _self_, jule::Any* _70331_def, jule::Ptr<_1ac6b2e62_Token> _70341_ident) {
	{
		auto &_match_expr{ (*(_70331_def)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bcd10923:;
			{
				return _1ac82cc36_evalVar(_self_, (*(_70331_def)).cast_ptr<_1ac7bb015_Var>(&__jule_any_type8), _70341_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1bcd10989:;
			{
				return _1ac82a0eb_evalEnum(_self_, (*(_70331_def)).cast_ptr<_1ac729c54_Enum>(&__jule_any_type67), _70341_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1bcd10a00:;
			{
				return _1ac82a838_evalTypeEnum(_self_, (*(_70331_def)).cast_ptr<_1ac72b45e_TypeEnum>(&__jule_any_type68), _70341_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1bcd10a66:;
			{
				return _1ac82b075_evalStruct(_self_, _1ac6ee7d9_instance((*(_70331_def)).cast_ptr<_1ac6ee377_Struct>(&__jule_any_type65)), _70341_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1bcd10acc:;
			{
				jule::Ptr<_1ac71426b_Fn> _71417_f = (*(_70331_def)).cast_ptr<_1ac71426b_Fn>(&__jule_any_type64);;
				if ((!(*(_71417_f))._field_Ident.equal("init", 4))) {
					return _1ac82bb25_evalFn(_self_, _71417_f, _70341_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bcd10b43:;
			{
				return _1ac82b3b6_evalFnIns(_self_, (*(_70331_def)).cast_ptr<_1ac717170_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1bcd10bba:;
			{
				return _1ac82d132_evalTypeAlias(_self_, (*(_70331_def)).cast_ptr<_1ac858c40_TypeAlias>(&__jule_any_type66), _70341_ident);;
			}
		}
		_match_end_1bcd108bd:;
	};
	_1ac826603_pushErr(_self_, _70341_ident, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_70341_ident))._field_Kind, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac82d86e_evalIdent(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac6ce3e0_IdentExpr> _72728_ident) {
	jule::Any _72813_def = _1ac829370_getDef(_self_, &((*(_72728_ident))._field_Ident), (*(_72728_ident))._field_Binded);;
	return _1ac82d52d_evalDef(_self_, &(_72813_def), (*(_72728_ident))._field_Token);;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac82dbb0_evalUnary(jule::Ptr<_1ac8260a3_Eval> _self_, jule::Ptr<_1ac6cea72_UnaryExpr> _73233_u) {
	_1ac8447ca_unaryEval _73313_unary = static__1ac844c1a_new(_self_);;
	return _1ac84614a_eval(&_73313_unary, _73233_u);;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac82e001_evalVariadic(jule::Ptr<_1ac8260a3_Eval> _self_, jule::Ptr<_1ac6cee4b_VariadicExpr> _73736_v) {
	if (((*(_73736_v))._field_Expr == nullptr)) {
		_1ac826603_pushErr(_self_.ptr(), (*(_73736_v))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac859a32_TypeKind> _74313_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_74313_prefix;
	});;
	jule::Ptr<_1ac8243ae_Data> _74713_d = _1ac844313_evalExpr(_self_, (*(_73736_v))._field_Expr);;
	if ((_74713_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ac85bdec_Variadicable((*(_74713_d))._field_Kind.ptr())))) {
		_1ac826603_pushErr(_self_.ptr(), (*(_73736_v))._field_Token, jule::Str::lit("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_74713_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ac866b0a_Slc> _75713_slc = _1ac85d1d9_Slc((*(_74713_d))._field_Kind.ptr());;
	(*(_74713_d))._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_BindIdent=(*((*(_75713_slc))._field_Elem))._field_BindIdent, ._field_Generic=(*((*(_75713_slc))._field_Elem))._field_Generic, ._field_Variadic=true, ._field_Kind=(*((*(_75713_slc))._field_Elem))._field_Kind});
	return _74713_d;;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac82e342_evalUnsafe(jule::Ptr<_1ac8260a3_Eval> _self_, jule::Ptr<_1ac6cde39_UnsafeExpr> _76734_u) {
	jule::Bool _7689_unsafety = (*(_self_))._field_unsafety;;
	(*(_self_))._field_unsafety=true;
	jule::Ptr<_1ac8243ae_Data> _77013_d = _1ac844313_evalExpr(_self_, (*(_76734_u))._field_Expr);;
	(*(_self_))._field_unsafety=_7689_unsafety;
	return _77013_d;;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac82e683_evalArr(jule::Ptr<_1ac8260a3_Eval> _self_, jule::Ptr<_1ac6d3ed8_SliceExpr> _77531_s) {
	jule::Ptr<_1ac868e2b_Arr> _77713_pt = _1ac85ce53_Arr((*(_self_))._field_prefix.ptr());;
	jule::Ptr<_1ac868e2b_Arr> _77913_arr = jule::new_ptr<_1ac868e2b_Arr>(_1ac868e2b_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=(*(_77713_pt))._field_Elem});;
	jule::Bool _78513_filled = false;;
	if (((*(_77531_s))._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ (*((*(_77531_s))._field_Exprs[1LL]))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type75) {
				_case_begin_1bcd220c7:;
				{
					if (((*((*((*(_77531_s))._field_Exprs[1LL]))._field_Kind.cast_ptr<_1ac6cee4b_VariadicExpr>(&__jule_any_type75)))._field_Expr != nullptr)) {
						goto _match_end_1bcd2202d;
					};
					if ((*(_77713_pt))._field_Auto) {
						_1ac826603_pushErr(_self_.ptr(), (*(_77531_s))._field_Token, jule::Str::lit("auto-sized arrays cannot filled", 31), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_78513_filled=true;
					(*(_77531_s))._field_Exprs=(*(_77531_s))._field_Exprs.slice(0LL, 1LL);
				}
			}
			_match_end_1bcd2202d:;
		};
	};
	(*(_77913_arr))._field_N=static_cast<jule::I64>((*(_77531_s))._field_Exprs.len());
	if ((!((*(_77713_pt))._field_Auto))) {
		if (((*(_77913_arr))._field_N > (*(_77713_pt))._field_N)) {
			_1ac826603_pushErr(_self_.ptr(), (*(_77531_s))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else if (((*(_77913_arr))._field_N < (*(_77713_pt))._field_N)) {
			(*(_77913_arr))._field_N=(*(_77713_pt))._field_N;
		};
	};
	jule::Ptr<_1ac70b906_ArrayExprModel> _81413_model = jule::new_ptr<_1ac70b906_ArrayExprModel>(_1ac70b906_ArrayExprModel{._field_Kind=_77913_arr, });;
	if (_78513_filled) {
		(*(_81413_model))._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		(*(_81413_model))._field_Elems=jule::Slice<jule::Any>::alloc(0LL, (*(_77531_s))._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_1ac859a32_TypeKind> _82313_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=(*(_77913_arr))._field_Elem;
	{
		auto expr = &((*(_77531_s))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcd28d48:;
		if (it != expr_end) {
			jule::Ptr<_1ac6cc9b5_Expr> _82521_elem = *it;
			{
				jule::Ptr<_1ac8243ae_Data> _82617_d = _1ac844313_evalExpr(_self_, _82521_elem);;
				if ((_82617_d == nullptr)) {
					goto _iter_next_1bcd28d48;
				};
				_1ac7a33c6_checkAssignType((*(_self_))._field_s, false, &((*(_77913_arr))._field_Elem), &(_82617_d), (*(_77531_s))._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = (*(_81413_model))._field_Elems; __jule_push_dest.push((*(_82617_d))._field_Model); };
			}
			_iter_next_1bcd28d48:;
			++it;
			goto _iter_begin_1bcd28d48;
		}
		_iter_end_1bcd28d48:;
	};
	(*(_self_))._field_prefix=_82313_prefix;
	if (_78513_filled) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_81413_model))._field_Elems; __jule_push_dest.push(nullptr); };
	};
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(_77913_arr, 25)}), ._field_Mutable=true, ._field_Model=jule::Any(_81413_model, &__jule_any_type84), });;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac82eb39_evalExpSlc(jule::Ptr<_1ac8260a3_Eval> _self_, jule::Ptr<_1ac6d3ed8_SliceExpr> _84934_s, jule::Ptr<_1ac859a32_TypeKind> _84953_t, jule::Any _84971_first) {
	jule::Ptr<_1ac866b0a_Slc> _85013_slc = jule::new_ptr<_1ac866b0a_Slc>(_1ac866b0a_Slc{._field_Elem=_84953_t});;
	jule::I64 _85413_i = 0LL;;
	jule::Ptr<_1ac7088ae_SliceExprModel> _85513_model = jule::new_ptr<_1ac7088ae_SliceExprModel>(_1ac7088ae_SliceExprModel{._field_ElemKind=_84953_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, (*(_84934_s))._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_84971_first != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_85513_model))._field_Elems; __jule_push_dest.push(_84971_first); };
		_85413_i=1LL;
	};
	jule::Ptr<_1ac859a32_TypeKind> _86413_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=(*(_85013_slc))._field_Elem;
	{
		auto expr = (*(_84934_s))._field_Exprs.slice(_85413_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1bcd309cb:;
		if (it != expr_end) {
			jule::Ptr<_1ac6cc9b5_Expr> _86621_elem = *it;
			{
				jule::Ptr<_1ac8243ae_Data> _86717_d = _1ac844313_evalExpr(_self_, _86621_elem);;
				if ((_86717_d == nullptr)) {
					goto _iter_next_1bcd309cb;
				};
				_1ac7a33c6_checkAssignType((*(_self_))._field_s, false, &((*(_85013_slc))._field_Elem), &(_86717_d), (*(_84934_s))._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = (*(_85513_model))._field_Elems; __jule_push_dest.push((*(_86717_d))._field_Model); };
			}
			_iter_next_1bcd309cb:;
			++it;
			goto _iter_begin_1bcd309cb;
		}
		_iter_end_1bcd309cb:;
	};
	(*(_self_))._field_prefix=_86413_prefix;
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(_85013_slc, 22)}), ._field_Mutable=true, ._field_Model=jule::Any(_85513_model, &__jule_any_type76), });;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac82ee7a_evalSliceExpr(jule::Ptr<_1ac8260a3_Eval> _self_, jule::Ptr<_1ac6d3ed8_SliceExpr> _88537_s) {
	if (((*(_self_))._field_prefix != nullptr)) {
		{
			
			if ((_1ac85ce53_Arr((*(_self_))._field_prefix.ptr()) != nullptr)) {
				_case_begin_1bcd34150:;
				{
					return _1ac82e683_evalArr(_self_, _88537_s);;
				}
			}
			else if ((_1ac85d1d9_Slc((*(_self_))._field_prefix.ptr()) != nullptr)) {
				_case_begin_1bcd341c7:;
				{
					jule::Ptr<_1ac866b0a_Slc> _89121_pt = _1ac85d1d9_Slc((*(_self_))._field_prefix.ptr());;
					return _1ac82eb39_evalExpSlc(_self_, _88537_s, (*(_89121_pt))._field_Elem, nullptr);;
				}
			}
			_match_end_1bcd34040:;
		};
	};
	jule::Ptr<_1ac859a32_TypeKind> _89613_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	if (((*(_88537_s))._field_Exprs.len() == 0LL)) {
		_1ac826603_pushErr(_self_.ptr(), (*(_88537_s))._field_Token, jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac8243ae_Data> _90413_firstElem = _1ac844313_evalExpr(_self_, (*(_88537_s))._field_Exprs[0LL]);;
	if ((_90413_firstElem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ac8243ae_Data> _90913_d = _1ac82eb39_evalExpSlc(_self_, _88537_s, (*(_90413_firstElem))._field_Kind, (*(_90413_firstElem))._field_Model);;
	(*(_self_))._field_prefix=_89613_prefix;
	return _90913_d;;
}



inline void _1ac8302dd_checkIntegerIndexingByData(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac8243ae_Data>* _91550_d, jule::Ptr<_1ac6b2e62_Token> _91560_token) {
	jule::Str _9169_err_key = _1ac85040c_checkDataForIntegerIndexing(_91550_d);;
	{
		auto &_match_expr{ _9169_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1bcd3ac4a:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str::lit("type @ is invalid for indexing", 30)) {
			_case_begin_1bcd3a2bb:;
			{
				_1ac826603_pushErr(_self_, _91560_token, _9169_err_key, jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*((*(_91550_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			}
		}
		else {
			_case_begin_1bcd3a640:;
			{
				_1ac826603_pushErr(_self_, _91560_token, _9169_err_key, jule::Slice<jule::Any>());
			}
		}
		_match_end_1bcd3a574:;
	};
}



inline void _1ac83070b_indexingPtr(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac8243ae_Data>* _92735_d, jule::Ptr<_1ac8243ae_Data>* _92750_index, jule::Ptr<_1ac6d4978_IndexingExpr>* _92765_i) {
	_1ac8302dd_checkIntegerIndexingByData(_self_, _92750_index, (*((*(_92765_i))))._field_Token);
	(*((*(_92735_d))))._field_Lvalue=true;
	jule::Ptr<_1ac8698ee_Ptr> _93113_ptr = _1ac85c6a0_Ptr((*((*(_92735_d))))._field_Kind.ptr());;
	{
		
		if (_1ac86a438_IsUnsafe(_93113_ptr.ptr())) {
			_case_begin_1bcd3d4bc:;
			{
				_1ac826603_pushErr(_self_, (*((*(_92765_i))))._field_Token, jule::Str::lit("unsafe pointers are not supports indexing", 41), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1ac8270e8_isUnsafe(_self_)))) {
			_case_begin_1bcd3d544:;
			{
				_1ac826603_pushErr(_self_, (*((*(_92765_i))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bcd3d456:;
	};
	(*((*(_92735_d))))._field_Kind=(*(_93113_ptr))._field_Elem;
}



inline void _1ac830b29_indexingArr(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac8243ae_Data>* _94335_d, jule::Ptr<_1ac8243ae_Data>* _94350_index, jule::Ptr<_1ac6d4978_IndexingExpr>* _94365_i) {
	jule::Ptr<_1ac868e2b_Arr> _94413_arr = _1ac85ce53_Arr((*((*(_94335_d))))._field_Kind.ptr());;
	(*((*(_94335_d))))._field_Kind=(*(_94413_arr))._field_Elem;
	_1ac8302dd_checkIntegerIndexingByData(_self_, _94350_index, (*((*(_94365_i))))._field_Token);
	(*((*(_94335_d))))._field_Lvalue=true;
	if ((_1ac824c83_IsConst((*(_94350_index)).ptr()) && (_1a6ce2597_AsF64((*((*(_94350_index))))._field_Constant.ptr()) >= static_cast<jule::F64>((*(_94413_arr))._field_N)))) {
		_1ac826603_pushErr(_self_, (*((*(_94365_i))))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
	};
}



inline void _1ac831047_indexingSlc(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac8243ae_Data>* _95335_d, jule::Ptr<_1ac8243ae_Data>* _95350_index, jule::Ptr<_1ac6d4978_IndexingExpr>* _95365_i) {
	jule::Ptr<_1ac866b0a_Slc> _95413_slc = _1ac85d1d9_Slc((*((*(_95335_d))))._field_Kind.ptr());;
	(*((*(_95335_d))))._field_Kind=(*(_95413_slc))._field_Elem;
	_1ac8302dd_checkIntegerIndexingByData(_self_, _95350_index, (*((*(_95365_i))))._field_Token);
	(*((*(_95335_d))))._field_Lvalue=true;
	if ((!(_1ac824c83_IsConst((*(_95350_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_95335_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1bcd4586a:;
			{
				jule::Ptr<_1ac7088ae_SliceExprModel> _96517_m = (*((*(_95335_d))))._field_Model.cast_ptr<_1ac7088ae_SliceExprModel>(&__jule_any_type76);;
				jule::F64 _96613_indx = _1a6ce2597_AsF64((*((*(_95350_index))))._field_Constant.ptr());;
				if ((_96613_indx >= static_cast<jule::F64>((*(_96517_m))._field_Elems.len()))) {
					_1ac826603_pushErr(_self_, (*((*(_95365_i))))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
				} else {
					(*((*(_95335_d))))._field_Model=(*(_96517_m))._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_96613_indx))];
					(*((*(_95335_d))))._field_Decl=true;
				};
			}
		}
		_match_end_1bcd45804:;
	};
}



inline void _1ac831465_indexingMap(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac8243ae_Data>* _97635_d, jule::Ptr<_1ac8243ae_Data>* _97650_index, jule::Ptr<_1ac6d4978_IndexingExpr>* _97669_i) {
	(*((*(_97635_d))))._field_Lvalue=true;
	if (((*(_97650_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1ac86829e_Map> _98113_m = _1ac85dc23_Map((*((*(_97635_d))))._field_Kind.ptr());;
	_1ac80d08a_assignTypeChecker _98213_atc = _1ac80d08a_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_98113_m))._field_Key, ._field_d=(*(_97650_index)), ._field_errorToken=(*((*(_97669_i))))._field_Token};;
	_1ac80e058_check(&_98213_atc);
	(*((*(_97635_d))))._field_Kind=(*(_98113_m))._field_Val;
}



inline void _1ac831883_indexingStr(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac8243ae_Data>* _99235_d, jule::Ptr<_1ac8243ae_Data>* _99250_index, jule::Ptr<_1ac6d4978_IndexingExpr>* _99265_i) {
	(*((*(_99235_d))))._field_Kind=_1ac93de79_primU8;
	(*((*(_99235_d))))._field_Mutable=false;
	(*((*(_99235_d))))._field_Lvalue=true;
	if (((*(_99250_index)) == nullptr)) {
		return;;
	};
	_1ac8302dd_checkIntegerIndexingByData(_self_, _99250_index, (*((*(_99265_i))))._field_Token);
	if ((!(_1ac824c83_IsConst((*(_99250_index)).ptr())))) {
		(*((*(_99235_d))))._field_Constant=nullptr;
		(*((*(_99235_d))))._field_untyped=false;
		return;;
	};
	if (_1ac824c83_IsConst((*(_99235_d)).ptr())) {
		jule::Ptr<_1ac6b2e62_Token> _101013_errorToken = (*((*(_99265_i))))._field_Token;;
		jule::I64 _101113_j = _1a6ce207a_AsI64((*((*(_99250_index))))._field_Constant.ptr());;
		jule::Str _101213_s = _1a6ce1a5d_ReadStr((*((*(_99235_d))))._field_Constant.ptr());;
		if ((static_cast<jule::I64>(_101113_j) >= _101213_s.len())) {
			_1ac826603_pushErr(_self_, _101013_errorToken, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else {
			_1a6ce2b08_SetU64((*((*(_99235_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_101213_s[_101113_j])));
		};
	};
}



inline void _1ac831ca1_toIndexing(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac8243ae_Data>* _102134_d, jule::Ptr<_1ac8243ae_Data>* _102149_index, jule::Ptr<_1ac6d4978_IndexingExpr>* _102168_i) {
	{
		
		if ((_1ac85c6a0_Ptr((*((*(_102134_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcd51e92:;
			{
				_1ac83070b_indexingPtr(_self_, _102134_d, _102149_index, _102168_i);
				return;;
			}
		}
		else if ((_1ac85ce53_Arr((*((*(_102134_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcd52019:;
			{
				_1ac830b29_indexingArr(_self_, _102134_d, _102149_index, _102168_i);
				return;;
			}
		}
		else if ((_1ac85d1d9_Slc((*((*(_102134_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcd52091:;
			{
				_1ac831047_indexingSlc(_self_, _102134_d, _102149_index, _102168_i);
				return;;
			}
		}
		else if ((_1ac85dc23_Map((*((*(_102134_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcd52118:;
			{
				_1ac831465_indexingMap(_self_, _102134_d, _102149_index, _102168_i);
				return;;
			}
		}
		else if ((_1ac85c183_Prim((*((*(_102134_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcd52190:;
			{
				jule::Ptr<_1ac86260b_Prim> _103613_prim = _1ac85c183_Prim((*((*(_102134_d))))._field_Kind.ptr());;
				{
					
					if (_1ac865a93_IsStr(_103613_prim.ptr())) {
						_case_begin_1bcd56381:;
						{
							_1ac831883_indexingStr(_self_, _102134_d, _102149_index, _102168_i);
							return;;
						}
					}
					_match_end_1bcd562d7:;
				};
			}
		}
		_match_end_1bcd51d4e:;
	};
	_1ac826603_pushErr(_self_, (*((*(_102168_i))))._field_Token, jule::Str::lit("type @ is not support indexing", 30), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*((*(_102134_d))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Bool _1ac832257_pushGenericsFromExprSubIdent(jule::Ptr<_1ac8260a3_Eval> _self_, jule::Ptr<_1ac6d0ac8_SubIdentExpr>* _104653_sexpr, jule::Slice<jule::Ptr<_1ac6c8681_TypeDecl>>* _104714_generics, jule::Ptr<_1ac6cc9b5_Expr>* _104742_expr) {
	jule::Ptr<_1ac6c9088_SubIdentTypeDecl> _104813_t = jule::new_ptr<_1ac6c9088_SubIdentTypeDecl>();;
	if ((!(_1ac8512ed_pushSubIdentFromExpr(jule::Any((*(_104653_sexpr)), &__jule_any_type85), &(_104813_t))))) {
		_1ac826603_pushErr(_self_.ptr(), (*((*(_104742_expr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_1ac6c8681_TypeDecl>> &__jule_push_dest = (*(_104714_generics)); __jule_push_dest.push(jule::new_ptr<_1ac6c8681_TypeDecl>(_1ac6c8681_TypeDecl{._field_Kind=jule::Any(_104813_t, &__jule_any_type86)})); };
	return true;;
}



inline jule::Bool _1ac832653_pushGenericsFromData(jule::Ptr<_1ac8260a3_Eval> _self_, jule::Slice<jule::Ptr<_1ac6c8681_TypeDecl>>* _105745_generics, jule::Ptr<_1ac6cc9b5_Expr>* _105773_expr) {
	{
		auto &_match_expr{ (*((*(_105773_expr))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1bcd5a86e:;
			{
				jule::Ptr<_1ac6cea72_UnaryExpr> _106017_u = (*((*(_105773_expr))))._field_Kind.cast_ptr<_1ac6cea72_UnaryExpr>(&__jule_any_type87);;
				{
					auto &_match_expr{ (*((*(_106017_u))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(62LLU)) {
						_case_begin_1bcd5b694:;
						{
							jule::Ptr<_1ac6ca1aa_PtrTypeDecl> _106321_kind = jule::new_ptr<_1ac6ca1aa_PtrTypeDecl>();;
							jule::Slice<jule::Ptr<_1ac6c8681_TypeDecl>> _106421__generics = jule::Slice<jule::Ptr<_1ac6c8681_TypeDecl>>::alloc(0LL, 1LL);;
							_1ac832653_pushGenericsFromData(_self_, &(_106421__generics), &((*(_106017_u))._field_Expr));
							(*(_106321_kind))._field_Elem=_106421__generics[0LL];
							{ jule::Slice<jule::Ptr<_1ac6c8681_TypeDecl>> &__jule_push_dest = (*(_105745_generics)); __jule_push_dest.push(jule::new_ptr<_1ac6c8681_TypeDecl>(_1ac6c8681_TypeDecl{._field_Token=(*((*(_105773_expr))))._field_Token, ._field_Kind=jule::Any(_106321_kind, &__jule_any_type71)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(65LLU)) {
						_case_begin_1bcd5c7c7:;
						{
							jule::Ptr<_1ac6c972b_SptrTypeDecl> _107221_kind = jule::new_ptr<_1ac6c972b_SptrTypeDecl>();;
							jule::Slice<jule::Ptr<_1ac6c8681_TypeDecl>> _107321__generics = jule::Slice<jule::Ptr<_1ac6c8681_TypeDecl>>::alloc(0LL, 1LL);;
							_1ac832653_pushGenericsFromData(_self_, &(_107321__generics), &((*(_106017_u))._field_Expr));
							(*(_107221_kind))._field_Elem=_107321__generics[0LL];
							{ jule::Slice<jule::Ptr<_1ac6c8681_TypeDecl>> &__jule_push_dest = (*(_105745_generics)); __jule_push_dest.push(jule::new_ptr<_1ac6c8681_TypeDecl>(_1ac6c8681_TypeDecl{._field_Token=(*((*(_105773_expr))))._field_Token, ._field_Kind=jule::Any(_107221_kind, &__jule_any_type72)})); };
						}
					}
					else {
						_case_begin_1bcd5bb8e:;
						{
							_1ac826603_pushErr(_self_.ptr(), (*(_106017_u))._field_Op, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1bcd5bb39:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1bcd5a8d5:;
			{
				{ jule::Slice<jule::Ptr<_1ac6c8681_TypeDecl>> &__jule_push_dest = (*(_105745_generics)); __jule_push_dest.push((*((*(_105773_expr))))._field_Kind.cast_ptr<_1ac6c8681_TypeDecl>(&__jule_any_type88)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1bcd5a94b:;
			{
				jule::Ptr<_1ac6d0ac8_SubIdentExpr> _108717_sexpr = (*((*(_105773_expr))))._field_Kind.cast_ptr<_1ac6d0ac8_SubIdentExpr>(&__jule_any_type85);;
				return _1ac832257_pushGenericsFromExprSubIdent(_self_, &(_108717_sexpr), _105745_generics, _105773_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1bcd59c9c:;
			{
				jule::Ptr<_1ac6ce3e0_IdentExpr> _109017_ident = (*((*(_105773_expr))))._field_Kind.cast_ptr<_1ac6ce3e0_IdentExpr>(&__jule_any_type79);;
				{ jule::Slice<jule::Ptr<_1ac6c8681_TypeDecl>> &__jule_push_dest = (*(_105745_generics)); __jule_push_dest.push(jule::new_ptr<_1ac6c8681_TypeDecl>(_1ac6c8681_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1ac6c8c8b_IdentTypeDecl>(_1ac6c8c8b_IdentTypeDecl{._field_Token=(*(_109017_ident))._field_Token, ._field_Ident=(*(_109017_ident))._field_Ident, ._field_Binded=(*(_109017_ident))._field_Binded, }), &__jule_any_type20)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1bcd59d13:;
			{
				{
					auto expr = &((*((*((*(_105773_expr))))._field_Kind.cast_ptr<_1ac6cd686_TupleExpr>(&__jule_any_type80)))._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bcd64ba8:;
					if (it != expr_end) {
						jule::Ptr<_1ac6cc9b5_Expr> _109925_texpr = *it;
						{
							if ((!(_1ac832653_pushGenericsFromData(_self_, _105745_generics, &(_109925_texpr))))) {
								return false;;
							};
						}
						_iter_next_1bcd64ba8:;
						++it;
						goto _iter_begin_1bcd64ba8;
					}
					_iter_end_1bcd64ba8:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1bcd59d79:;
			{
				jule::Ptr<_1ac6d06ee_NsSelectionExpr> _110517_ns = (*((*(_105773_expr))))._field_Kind.cast_ptr<_1ac6d06ee_NsSelectionExpr>(&__jule_any_type89);;
				jule::Ptr<_1ac6c8c8b_IdentTypeDecl> _110617_decl = jule::new_ptr<_1ac6c8c8b_IdentTypeDecl>(_1ac6c8c8b_IdentTypeDecl{._field_Token=(*(_110517_ns))._field_Ident, ._field_Ident=(*((*(_110517_ns))._field_Ident))._field_Kind, });;
				{ jule::Slice<jule::Ptr<_1ac6c8681_TypeDecl>> &__jule_push_dest = (*(_105745_generics)); __jule_push_dest.push(jule::new_ptr<_1ac6c8681_TypeDecl>(_1ac6c8681_TypeDecl{._field_Token=(*(_110617_decl))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1ac6c942e_NamespaceTypeDecl>(_1ac6c942e_NamespaceTypeDecl{._field_Idents=(*(_110517_ns))._field_Ns, ._field_Kind=jule::new_ptr<_1ac6c8681_TypeDecl>(_1ac6c8681_TypeDecl{._field_Token=(*(_110617_decl))._field_Token, ._field_Kind=jule::Any(_110617_decl, &__jule_any_type20)})}), &__jule_any_type90)})); };
			}
		}
		else {
			_case_begin_1bcd59c36:;
			{
				_1ac826603_pushErr(_self_.ptr(), (*((*(_105773_expr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1bcd59bd1:;
	};
	return true;;
}



inline void _1ac8329b6_evalIdentDeclFromIndexing(jule::Ptr<_1ac8260a3_Eval> _self_, jule::Ptr<_1ac8243ae_Data>* _112750_d, jule::Ptr<_1ac6d4978_IndexingExpr>* _112765_i) {
	jule::Ptr<_1ac702105_StructIns> _112813_s = _1ac85d706_Struct((*((*(_112750_d))))._field_Kind.ptr());;
	if ((_112813_s == nullptr)) {
		_1ac826603_pushErr(_self_.ptr(), (*((*((*(_112765_i))))._field_Expr))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*((*(_112750_d))))._field_Kind.ptr()), &__jule_any_type4)}));
		(*(_112750_d))=nullptr;
		return;;
	};
	jule::Ptr<_1ac6c8c8b_IdentTypeDecl> _113517_decl = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_112765_i))))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1bcd6a83a:;
			{
				jule::Ptr<_1ac6ce3e0_IdentExpr> _113817_expr = (*((*((*(_112765_i))))._field_Expr))._field_Kind.cast_ptr<_1ac6ce3e0_IdentExpr>(&__jule_any_type79);;
				_113517_decl=jule::new_ptr<_1ac6c8c8b_IdentTypeDecl>(_1ac6c8c8b_IdentTypeDecl{._field_Token=(*(_113817_expr))._field_Token, ._field_Ident=(*(_113817_expr))._field_Ident, ._field_Binded=(*(_113817_expr))._field_Binded, });
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1bcd6bab1:;
			{
				jule::Ptr<_1ac6d06ee_NsSelectionExpr> _114517_expr = (*((*((*(_112765_i))))._field_Expr))._field_Kind.cast_ptr<_1ac6d06ee_NsSelectionExpr>(&__jule_any_type89);;
				_113517_decl=jule::new_ptr<_1ac6c8c8b_IdentTypeDecl>(_1ac6c8c8b_IdentTypeDecl{._field_Token=(*(_114517_expr))._field_Ident, ._field_Ident=(*((*(_114517_expr))._field_Ident))._field_Kind, });
			}
		}
		else {
			_case_begin_1bcd6ac9c:;
			{
				_1ac826603_pushErr(_self_.ptr(), (*((*(_112765_i))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				(*(_112750_d))=nullptr;
				return;;
			}
		}
		_match_end_1bcd6ac47:;
	};
	if ((!(_1ac832653_pushGenericsFromData(_self_, &((*(_113517_decl))._field_Generics), &((*((*(_112765_i))))._field_Index))))) {
		(*(_112750_d))=nullptr;
		return;;
	};
	_112813_s=({ auto _wrap_copy = _1ac8394b2_typeChecker(_self_.ptr()); _1ac870839_fromStruct(&_wrap_copy, &(_113517_decl), &((*(_112813_s))._field_Decl)); });
	if ((_112813_s == nullptr)) {
		(*(_112750_d))=nullptr;
		return;;
	};
	(*((*((*(_112750_d))))._field_Kind))._field_Kind=jule::Trait<_1ac85957b_Kind>(_112813_s, 0);
}



inline jule::Bool _1ac832e6c_checkGenericFn(jule::Ptr<_1ac8260a3_Eval> _self_, jule::Ptr<_1ac717170_FnIns>* _117039_f, jule::Ptr<_1ac6b2e62_Token>* _117055_et, jule::Any* _117072_model) {
	jule::Bool _11719_ok = _1ac7a684c_reloadFnInsTypes((*(_self_))._field_s, (*(_117039_f)));;
	(*((*(_117039_f))))._field_reloaded=true;
	if ((!(_11719_ok))) {
		return false;;
	};
	jule::Ptr<_1ac717170_FnIns> _117613_existInstance = _1ac715cd9_appendInstance((*((*(_117039_f))))._field_Decl.ptr(), _117039_f);;
	if ((!(_1ac7a58a1_checkConstraintsFn((*(_self_))._field_s, _117039_f, _117055_et, _117613_existInstance)))) {
		return false;;
	};
	if ((_117613_existInstance != nullptr)) {
		_1ac850e79_updateModelToGenericIns(_117072_model, &(_117613_existInstance));
		_1bcd74811_updateRefer(_1ac829606_getOwnerRefers(_self_.ptr()), _117039_f, &(_117613_existInstance));
		(*(_117039_f))=_117613_existInstance;
	} else {
		_1ac7b5b9c_checkFnInsCaller((*(_self_))._field_s, _117039_f, (*(_117055_et)));
	};
	return true;;
}



inline void _1ac8332d0_evalFnGenericFromIndexing(jule::Ptr<_1ac8260a3_Eval> _self_, jule::Ptr<_1ac8243ae_Data>* _119950_d, jule::Ptr<_1ac6d4978_IndexingExpr>* _119965_i) {
	jule::Slice<jule::Ptr<_1ac6c8681_TypeDecl>> _120013_generics = jule::Slice<jule::Ptr<_1ac6c8681_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_1ac832653_pushGenericsFromData(_self_, &(_120013_generics), &((*((*(_119965_i))))._field_Index))))) {
		(*(_119950_d))=nullptr;
		return;;
	};
	jule::Ptr<_1ac717170_FnIns> _120613_f = _1ac85d470_Fn((*((*(_119950_d))))._field_Kind.ptr());;
	jule::I64 _120713_genericsLen = 0LL;;
	if (((*(_120613_f))._field_Decl != nullptr)) {
		_120713_genericsLen=static_cast<jule::I64>((*((*(_120613_f))._field_Decl))._field_Generics.len());
	};
	if ((!(_1ac79bde7_checkGenericQuantity((*(_self_))._field_s.ptr(), _120713_genericsLen, static_cast<jule::I64>(_120013_generics.len()), (*((*((*(_119965_i))))._field_Expr))._field_Token)))) {
		(*(_119950_d))=nullptr;
		return;;
	};
	(*(_120613_f))._field_Generics=jule::Slice<jule::Ptr<_1ac85814b_InsGeneric>>::alloc(0LL, (*((*(_120613_f))._field_Decl))._field_Generics.len());
	{
		auto expr = &(_120013_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcd7b52c:;
		if (it != expr_end) {
			jule::Ptr<_1ac6c8681_TypeDecl> _121821_g = *it;
			{
				jule::Ptr<_1ac8243ae_Data> _121917_k = _1ac839803_evalType(_self_.ptr(), _121821_g);;
				if ((_121917_k == nullptr)) {
					(*(_119950_d))=nullptr;
					return;;
				};
				{ jule::Slice<jule::Ptr<_1ac85814b_InsGeneric>> &__jule_push_dest = (*(_120613_f))._field_Generics; __jule_push_dest.push(jule::new_ptr<_1ac85814b_InsGeneric>(_1ac85814b_InsGeneric{._field_Kind=(*(_121917_k))._field_Kind, })); };
			}
			_iter_next_1bcd7b52c:;
			++it;
			goto _iter_begin_1bcd7b52c;
		}
		_iter_end_1bcd7b52c:;
	};
	if (_1ac718605_IsBuiltin(_120613_f.ptr())) {
		return;;
	};
	if (_1ac832e6c_checkGenericFn(_self_, &(_120613_f), &((*((*((*(_119965_i))))._field_Expr))._field_Token), &((*((*(_119950_d))))._field_Model))) {
		(*((*((*(_119950_d))))._field_Kind))._field_Kind=jule::Trait<_1ac85957b_Kind>(_120613_f, 1);
	} else {
		(*(_119950_d))=nullptr;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac833621_evalIndexing(jule::Ptr<_1ac8260a3_Eval> _self_, jule::Ptr<_1ac6d4978_IndexingExpr> _123836_i) {
	jule::Ptr<_1ac859a32_TypeKind> _123913_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_123913_prefix;
	});;
	jule::Ptr<_1ac8243ae_Data> _124313_d = _1ac8434ee_evalExprKind(_self_, (*((*(_123836_i))._field_Expr))._field_Kind);;
	if ((_124313_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_124313_d))._field_Decl) {
		_1ac8329b6_evalIdentDeclFromIndexing(_self_, &(_124313_d), &(_123836_i));
		return _124313_d;;
	};
	if ((_1ac85d470_Fn((*(_124313_d))._field_Kind.ptr()) != nullptr)) {
		_1ac8332d0_evalFnGenericFromIndexing(_self_, &(_124313_d), &(_123836_i));
		return _124313_d;;
	};
	_1ac8243ae_Data _125913_oldData = (*(_124313_d));;
	jule::Ptr<_1ac8243ae_Data> _126113_index = _1ac844313_evalExpr(_self_, (*(_123836_i))._field_Index);;
	if ((_126113_index == nullptr)) {
		return nullptr;;
	};
	(*(_124313_d))._field_Decl=false;
	_1ac831ca1_toIndexing(_self_.ptr(), &(_124313_d), &(_126113_index), &(_123836_i));
	if (_1ac824c83_IsConst(_124313_d.ptr())) {
		(*(_124313_d))._field_Decl=false;
		(*(_124313_d))._field_Model=jule::Any((*(_124313_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_124313_d))._field_Decl) {
		(*(_124313_d))._field_Decl=false;
	} else {
		(*(_124313_d))._field_Model=jule::Any(jule::new_ptr<_1ac708d65_IndexingExprModel>(_1ac708d65_IndexingExprModel{._field_Token=(*(_123836_i))._field_Token, ._field_Expr=jule::new_ptr<_1ac8243ae_Data>(_125913_oldData), ._field_Index=_126113_index}), &__jule_any_type45);
	};
	return _124313_d;;
}



inline __jule_tuple_x_1ac8243ae_Data__jule_tuple_x_1ac8243ae_Data _1ac833962_evalSlicingExprs(jule::Ptr<_1ac8260a3_Eval> _self_, jule::Ptr<_1ac6d50d8_SlicingExpr>* _129241_s) {
	__jule_tuple_x_1ac8243ae_Data__jule_tuple_x_1ac8243ae_Data __jule_func_result;
	jule::Ptr<_1ac859a32_TypeKind> _129313_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_129313_prefix;
	});;
	jule::Ptr<_1ac8243ae_Data> _129717_l = nullptr;;
	jule::Ptr<_1ac8243ae_Data> _129817_r = nullptr;;
	if (((*((*(_129241_s))))._field_Start != nullptr)) {
		_129717_l=_1ac844313_evalExpr(_self_, (*((*(_129241_s))))._field_Start);
		if ((_129717_l != nullptr)) {
			_1ac8302dd_checkIntegerIndexingByData(_self_.ptr(), &(_129717_l), (*((*(_129241_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_129717_l=jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93d099_primInt, ._field_Constant=static__1a6cded25_NewI64(0LL)});
		(*((*(_129717_l))._field_Constant))._field_Kind=jule::Str::lit("int", 3);
		(*(_129717_l))._field_Model=jule::Any((*(_129717_l))._field_Constant, &__jule_any_type19);
	};
	if (((*((*(_129241_s))))._field_To != nullptr)) {
		_129817_r=_1ac844313_evalExpr(_self_, (*((*(_129241_s))))._field_To);
		if ((_129817_r != nullptr)) {
			_1ac8302dd_checkIntegerIndexingByData(_self_.ptr(), &(_129817_r), (*((*(_129241_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _129717_l;
	__jule_func_result.__jule_result_arg1 = _129817_r;
	return __jule_func_result;;
}



inline void _1ac833c1a_slicingArr(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac8243ae_Data>* _132830_d) {
	jule::Ptr<_1ac859a32_TypeKind> _132913_elemType = (*(_1ac85ce53_Arr((*((*(_132830_d))))._field_Kind.ptr())))._field_Elem;;
	(*((*(_132830_d))))._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(jule::new_ptr<_1ac866b0a_Slc>(_1ac866b0a_Slc{._field_Elem=_132913_elemType}), 22)});
	(*((*(_132830_d))))._field_Lvalue=false;
	(*((*(_132830_d))))._field_Mutable=((*((*(_132830_d))))._field_Mutable || (!(_1ac85b3b3_Mutable(_132913_elemType.ptr()))));
}



inline void _1ac834138_slicingStr(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac8243ae_Data>* _134330_d, jule::Ptr<_1ac8243ae_Data>* _134341_l, jule::Ptr<_1ac8243ae_Data>* _134352_r) {
	(*((*(_134330_d))))._field_Lvalue=false;
	(*((*(_134330_d))))._field_Mutable=true;
	if ((!(_1ac824c83_IsConst((*(_134330_d)).ptr())))) {
		return;;
	};
	if ((((*(_134341_l)) == nullptr) || ((*(_134352_r)) == nullptr))) {
		(*((*(_134330_d))))._field_Constant=nullptr;
		(*((*(_134330_d))))._field_untyped=false;
		return;;
	};
	if ((_1ac824c83_IsConst((*(_134341_l)).ptr()) && _1ac824c83_IsConst((*(_134352_r)).ptr()))) {
		jule::I64 _135713_left = _1a6ce207a_AsI64((*((*(_134341_l))))._field_Constant.ptr());;
		if ((_135713_left < 0LL)) {
			return;;
		};
		jule::Str _136213_s = _1a6ce1a5d_ReadStr((*((*(_134330_d))))._field_Constant.ptr());;
		jule::I64 _136317_right = static_cast<jule::I64>(0LL);;
		if (((*(_134352_r)) == nullptr)) {
			_136317_right=static_cast<jule::I64>(static_cast<jule::I64>(_136213_s.len()));
		} else {
			_136317_right=static_cast<jule::I64>(_1a6ce207a_AsI64((*((*(_134352_r))))._field_Constant.ptr()));
		};
		if ((_135713_left > _136317_right)) {
			return;;
		};
		_1a6ce3169_SetStr((*((*(_134330_d))))._field_Constant.ptr(), _136213_s.slice(_135713_left, _136317_right));
		(*((*(_134330_d))))._field_Decl=true;
	} else {
		(*((*(_134330_d))))._field_Constant=nullptr;
		(*((*(_134330_d))))._field_untyped=false;
	};
}



inline void _1ac834611_checkSlicing(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac8243ae_Data>* _138136_d, jule::Ptr<_1ac8243ae_Data>* _138147_l, jule::Ptr<_1ac8243ae_Data>* _138158_r, jule::Ptr<_1ac6d50d8_SlicingExpr>* _138169_s) {
	{
		
		if ((_1ac85ce53_Arr((*((*(_138136_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcd96cb7:;
			{
				_1ac833c1a_slicingArr(_self_, _138136_d);
				return;;
			}
		}
		else if ((_1ac85d1d9_Slc((*((*(_138136_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcd96d3e:;
			{
				return;;
			}
		}
		else if ((_1ac85c183_Prim((*((*(_138136_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcd96db6:;
			{
				jule::Ptr<_1ac86260b_Prim> _138913_prim = _1ac85c183_Prim((*((*(_138136_d))))._field_Kind.ptr());;
				{
					
					if (_1ac865a93_IsStr(_138913_prim.ptr())) {
						_case_begin_1bcd99638:;
						{
							_1ac834138_slicingStr(_self_, _138136_d, _138147_l, _138158_r);
							return;;
						}
					}
					_match_end_1bcd9958e:;
				};
			}
		}
		_match_end_1bcd96b96:;
	};
	_1ac826603_pushErr(_self_, (*((*(_138169_s))))._field_Token, jule::Str::lit("type @ is not support slicing", 29), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*((*(_138136_d))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Ptr<_1ac8243ae_Data> _1ac834952_evalSlicing(jule::Ptr<_1ac8260a3_Eval> _self_, jule::Ptr<_1ac6d50d8_SlicingExpr> _140035_s) {
	jule::Ptr<_1ac8243ae_Data> _140113_d = _1ac844313_evalExpr(_self_, (*(_140035_s))._field_Expr);;
	if ((_140113_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ac8243ae_Data> _140613_l;;
	jule::Ptr<_1ac8243ae_Data> _140620_r;;
	({
		__jule_tuple_x_1ac8243ae_Data__jule_tuple_x_1ac8243ae_Data __jule_assign_result = _1ac833962_evalSlicingExprs(_self_, &(_140035_s));
		_140613_l = __jule_assign_result.__jule_result_arg0;
		_140620_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_140613_l == nullptr)) {
		return _140113_d;;
	};
	(*(_140113_d))._field_Decl=false;
	_1ac834611_checkSlicing(_self_.ptr(), &(_140113_d), &(_140613_l), &(_140620_r), &(_140035_s));
	if (_1ac824c83_IsConst(_140113_d.ptr())) {
		(*(_140113_d))._field_Decl=false;
		(*(_140113_d))._field_Model=jule::Any((*(_140113_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_140113_d))._field_Decl) {
		(*(_140113_d))._field_Decl=false;
	} else {
		jule::Ptr<_1ac70a152_SlicingExprModel> _142417_model = jule::new_ptr<_1ac70a152_SlicingExprModel>(_1ac70a152_SlicingExprModel{._field_Token=(*(_140035_s))._field_Token, ._field_Expr=(*(_140113_d))._field_Model, ._field_Left=(*(_140613_l))._field_Model, });;
		if ((_140620_r != nullptr)) {
			(*(_142417_model))._field_Right=(*(_140620_r))._field_Model;
		};
		(*(_140113_d))._field_Model=jule::Any(_142417_model, &__jule_any_type91);
	};
	return _140113_d;;
}



inline void _1ac834d70_castPtr(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac859a32_TypeKind> _143730_t, jule::Ptr<_1ac8243ae_Data> _143748_d, jule::Ptr<_1ac6b2e62_Token> _143758_errorToken) {
	(*(_143748_d))._field_Constant=nullptr;
	(*(_143748_d))._field_untyped=false;
	jule::Ptr<_1ac866137_Sptr> _14409_sptr = _1ac85c419_Sptr((*(_143748_d))._field_Kind.ptr());;
	if ((_14409_sptr != nullptr)) {
		if ((!(_1ac85a23b_Equal((*(_1ac85c6a0_Ptr(_143730_t.ptr())))._field_Elem, (*(_14409_sptr))._field_Elem)))) {
			_1ac826603_pushErr(_self_, _143758_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_143748_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ac859dea_Str(_143730_t.ptr()), &__jule_any_type4)}));
		};
		return;;
	};
	if ((!(_1ac8270e8_isUnsafe(_self_)))) {
		_1ac826603_pushErr(_self_, _143758_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ac86260b_Prim> _14539_prim = _1ac85c183_Prim((*(_143748_d))._field_Kind.ptr());;
	if (((_1ac85c6a0_Ptr((*(_143748_d))._field_Kind.ptr()) == nullptr) && ((_14539_prim == nullptr) || (!(_1a6cddbd1_IsInt(_1ac86294c_Str(_14539_prim.ptr()))))))) {
		_1ac826603_pushErr(_self_, _143758_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_143748_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ac859dea_Str(_143730_t.ptr()), &__jule_any_type4)}));
	};
}



inline void _1ac83528d_castStruct(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac859a32_TypeKind> _145933_t, jule::Ptr<_1ac8243ae_Data> _145951_d, jule::Ptr<_1ac6b2e62_Token> _145961_errorToken) {
	(*(_145951_d))._field_Constant=nullptr;
	(*(_145951_d))._field_untyped=false;
	jule::Ptr<_1ac727548_Trait> _146213_tr = _1ac85d98c_Trait((*(_145951_d))._field_Kind.ptr());;
	if ((_146213_tr == nullptr)) {
		_1ac826603_pushErr(_self_, _145961_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_145951_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ac859dea_Str(_145933_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1ac702105_StructIns> _146813_s = _1ac85d706_Struct(_145933_t.ptr());;
	_1bcda9deb_pushReference(_self_, &(_146813_s));
	if ((!(_1ac7009b6_IsImplements((*(_146813_s))._field_Decl.ptr(), _146213_tr)))) {
		_1ac826603_pushErr(_self_, _145961_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_145951_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ac859dea_Str(_145933_t.ptr()), &__jule_any_type4)}));
	};
}



inline void _1ac8356ab_castRef(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac859a32_TypeKind> _147630_t, jule::Ptr<_1ac8243ae_Data> _147648_d, jule::Ptr<_1ac6b2e62_Token> _147658_errorToken) {
	(*(_147648_d))._field_Constant=nullptr;
	(*(_147648_d))._field_untyped=false;
	jule::Ptr<_1ac866137_Sptr> _147913_sptr = _1ac85c419_Sptr(_147630_t.ptr());;
	jule::Ptr<_1ac8698ee_Ptr> _148113_ptr = _1ac85c6a0_Ptr((*(_147648_d))._field_Kind.ptr());;
	if (((_148113_ptr != nullptr) && _1ac85a23b_Equal((*(_147913_sptr))._field_Elem, (*(_148113_ptr))._field_Elem))) {
		if ((!(_1ac8270e8_isUnsafe(_self_)))) {
			_1ac826603_pushErr(_self_, _147658_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1ac85d706_Struct((*(_147913_sptr))._field_Elem.ptr()) != nullptr)) {
		_1ac83528d_castStruct(_self_, (*(_147913_sptr))._field_Elem, _147648_d, _147658_errorToken);
		return;;
	};
	_1ac826603_pushErr(_self_, _147658_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_147648_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ac859dea_Str(_147630_t.ptr()), &__jule_any_type4)}));
}



inline void _1ac835ac9_castSlc(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac859a32_TypeKind> _149930_t, jule::Ptr<_1ac8243ae_Data> _149948_d, jule::Ptr<_1ac6b2e62_Token> _149958_errorToken) {
	jule::Ptr<_1a6cde8d5_Const> _15009_c = (*(_149948_d))._field_Constant;;
	(*(_149948_d))._field_Constant=nullptr;
	(*(_149948_d))._field_untyped=false;
	if ((_1ac85c936_Enum((*(_149948_d))._field_Kind.ptr()) != nullptr)) {
		if (((_1ac85c183_Prim((*((*(_1ac85c936_Enum((*(_149948_d))._field_Kind.ptr())))._field_Kind))._field_Kind.ptr()) == nullptr) || (!(_1ac865a93_IsStr(_1ac85c183_Prim((*((*(_1ac85c936_Enum((*(_149948_d))._field_Kind.ptr())))._field_Kind))._field_Kind.ptr()).ptr()))))) {
			_1ac826603_pushErr(_self_, _149958_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_149948_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ac859dea_Str(_149930_t.ptr()), &__jule_any_type4)}));
			return;;
		};
	} else if (((_1ac85c183_Prim((*(_149948_d))._field_Kind.ptr()) == nullptr) || (!(_1ac865a93_IsStr(_1ac85c183_Prim((*(_149948_d))._field_Kind.ptr()).ptr()))))) {
		_1ac826603_pushErr(_self_, _149958_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_149948_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ac859dea_Str(_149930_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	_149930_t=(*(_1ac85d1d9_Slc(_149930_t.ptr())))._field_Elem;
	jule::Ptr<_1ac86260b_Prim> _15159_prim = _1ac85c183_Prim(_149930_t.ptr());;
	if (((_15159_prim == nullptr) || ((!(_1ac864003_IsU8(_15159_prim.ptr()))) && (!(_1ac8639d6_IsI32(_15159_prim.ptr())))))) {
		_1ac826603_pushErr(_self_, _149958_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_149948_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ac859dea_Str(_149930_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	if ((_15009_c != nullptr)) {
		{
			
			if (_1ac864003_IsU8(_15159_prim.ptr())) {
				_case_begin_1bcdbd492:;
				{
					jule::Str _152517_s = _1a6ce1a5d_ReadStr(_15009_c.ptr());;
					jule::Ptr<_1ac7088ae_SliceExprModel> _152621_model = jule::new_ptr<_1ac7088ae_SliceExprModel>(_1ac7088ae_SliceExprModel{._field_ElemKind=_149930_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _152517_s.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_152517_s);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bcdbed34:;
						if (it != expr_end) {
							jule::U8 *_153024_b = it;
							{
								jule::Ptr<_1a6cde8d5_Const> _153125_bc = static__1a6ce00de_NewU64(static_cast<jule::U64>(static_cast<jule::U64>((*(_153024_b)))));;
								(*(_153125_bc))._field_Kind=(*(_15159_prim))._field_Kind;
								{ jule::Slice<jule::Any> &__jule_push_dest = (*(_152621_model))._field_Elems; __jule_push_dest.push(jule::Any(_153125_bc, &__jule_any_type19)); };
							}
							_iter_next_1bcdbed34:;
							++it;
							goto _iter_begin_1bcdbed34;
						}
						_iter_end_1bcdbed34:;
					};
					(*(_149948_d))._field_Model=jule::Any(_152621_model, &__jule_any_type76);
					(*(_149948_d))._field_Decl=true;
				}
			}
			else if (_1ac8639d6_IsI32(_15159_prim.ptr())) {
				_case_begin_1bcdbd519:;
				{
					jule::Slice<jule::I32> _153817_runes = static_cast<jule::Slice<jule::I32>>(_1a6ce1a5d_ReadStr(_15009_c.ptr()));;
					jule::Ptr<_1ac7088ae_SliceExprModel> _153921_model = jule::new_ptr<_1ac7088ae_SliceExprModel>(_1ac7088ae_SliceExprModel{._field_ElemKind=_149930_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _153817_runes.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_153817_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bcdc319a:;
						if (it != expr_end) {
							jule::I32 *_154324_r = it;
							{
								jule::Ptr<_1a6cde8d5_Const> _154425_rc = static__1a6cded25_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_154324_r)))));;
								(*(_154425_rc))._field_Kind=(*(_15159_prim))._field_Kind;
								{ jule::Slice<jule::Any> &__jule_push_dest = (*(_153921_model))._field_Elems; __jule_push_dest.push(jule::Any(_154425_rc, &__jule_any_type19)); };
							}
							_iter_next_1bcdc319a:;
							++it;
							goto _iter_begin_1bcdc319a;
						}
						_iter_end_1bcdc319a:;
					};
					(*(_149948_d))._field_Model=jule::Any(_153921_model, &__jule_any_type76);
					(*(_149948_d))._field_Decl=true;
				}
			}
			_match_end_1bcdbd382:;
		};
	};
}



inline void _1ac835e3c_castStr(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac8243ae_Data> _155430_d, jule::Ptr<_1ac6b2e62_Token> _155440_errorToken) {
	if ((_1ac85c936_Enum((*(_155430_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ac729c54_Enum> _155617_e = _1ac85c936_Enum((*(_155430_d))._field_Kind.ptr());;
		if (((_1ac85c183_Prim((*((*(_155617_e))._field_Kind))._field_Kind.ptr()) != nullptr) && _1ac865a93_IsStr(_1ac85c183_Prim((*((*(_155617_e))._field_Kind))._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1a6cde8d5_Const> _15629_c = (*(_155430_d))._field_Constant;;
	(*(_155430_d))._field_Constant=nullptr;
	(*(_155430_d))._field_untyped=false;
	if ((_1ac85c183_Prim((*(_155430_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ac86260b_Prim> _156613_prim = _1ac85c183_Prim((*(_155430_d))._field_Kind.ptr());;
		if (((!(_1ac864003_IsU8(_156613_prim.ptr()))) && (!(_1ac8639d6_IsI32(_156613_prim.ptr()))))) {
			_1ac826603_pushErr(_self_, _155440_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1ac859dea_Str((*(_155430_d))._field_Kind.ptr()), &__jule_any_type4)}));
			return;;
		};
		if ((_15629_c != nullptr)) {
			{
				
				if (_1ac864003_IsU8(_156613_prim.ptr())) {
					_case_begin_1bcdcaa54:;
					{
						(*(_155430_d))._field_Constant=static__1a6ce0672_NewStr(jule::Str::from_byte(static_cast<jule::U8>(_1a6ce2311_AsU64(_15629_c.ptr()))));
						(*(_155430_d))._field_Model=jule::Any((*(_155430_d))._field_Constant, &__jule_any_type19);
						(*(_155430_d))._field_Decl=true;
					}
				}
				else if (_1ac8639d6_IsI32(_156613_prim.ptr())) {
					_case_begin_1bcdcaacb:;
					{
						(*(_155430_d))._field_Constant=static__1a6ce0672_NewStr(jule::Str::from_rune(static_cast<jule::I32>(_1a6ce207a_AsI64(_15629_c.ptr()))));
						(*(_155430_d))._field_Model=jule::Any((*(_155430_d))._field_Constant, &__jule_any_type19);
						(*(_155430_d))._field_Decl=true;
					}
				}
				_match_end_1bcdca955:;
			};
		};
		return;;
	};
	jule::Ptr<_1ac866b0a_Slc> _158713_s = _1ac85d1d9_Slc((*(_155430_d))._field_Kind.ptr());;
	if ((_158713_s == nullptr)) {
		_1ac826603_pushErr(_self_, _155440_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1ac859dea_Str((*(_155430_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1ac859a32_TypeKind> _159313_t = (*(_158713_s))._field_Elem;;
	jule::Ptr<_1ac86260b_Prim> _15949_prim = _1ac85c183_Prim(_159313_t.ptr());;
	if (((_15949_prim == nullptr) || ((!(_1ac864003_IsU8(_15949_prim.ptr()))) && (!(_1ac8639d6_IsI32(_15949_prim.ptr())))))) {
		_1ac826603_pushErr(_self_, _155440_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1ac859dea_Str((*(_155430_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return;;
	};
}



inline void _1ac83635a_castInt(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac859a32_TypeKind> _160130_t, jule::Ptr<_1ac8243ae_Data> _160148_d, jule::Ptr<_1ac6b2e62_Token> _160158_errorToken) {
	if (_1ac824c83_IsConst(_160148_d.ptr())) {
		jule::Ptr<_1ac86260b_Prim> _160313_prim = _1ac85c183_Prim(_160130_t.ptr());;
		{
			
			if (_1a6cdd609_IsSigInt((*(_160313_prim))._field_Kind)) {
				_case_begin_1bcdd3ad4:;
				{
					_1a6ce2850_SetI64((*(_160148_d))._field_Constant.ptr(), static_cast<jule::I64>(_1a6ce207a_AsI64((*(_160148_d))._field_Constant.ptr())));
				}
			}
			else if (_1a6cdd917_IsUnsigInt((*(_160313_prim))._field_Kind)) {
				_case_begin_1bcdd3b5b:;
				{
					_1a6ce2b08_SetU64((*(_160148_d))._field_Constant.ptr(), static_cast<jule::U64>(_1a6ce2311_AsU64((*(_160148_d))._field_Constant.ptr())));
				}
			}
			_match_end_1bcdd3a29:;
		};
	} else {
		(*(_160148_d))._field_Constant=nullptr;
		(*(_160148_d))._field_untyped=false;
	};
	if ((_1ac85c936_Enum((*(_160148_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ac729c54_Enum> _161613_e = _1ac85c936_Enum((*(_160148_d))._field_Kind.ptr());;
		if (_1a6cde2db_IsNum(_1ac859dea_Str((*((*(_161613_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1ac85c419_Sptr((*(_160148_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ac86260b_Prim> _162313_prim = _1ac85c183_Prim(_160130_t.ptr());;
		if ((!(_1ac865576_IsUintptr(_162313_prim.ptr())))) {
			_1ac826603_pushErr(_self_, _160158_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_160148_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ac859dea_Str(_160130_t.ptr()), &__jule_any_type4)}));
		};
		return;;
	};
	if ((_1ac85c6a0_Ptr((*(_160148_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ac86260b_Prim> _163013_prim = _1ac85c183_Prim(_160130_t.ptr());;
		if (_1ac865576_IsUintptr(_163013_prim.ptr())) {
		} else if ((!(_1ac8270e8_isUnsafe(_self_)))) {
			_1ac826603_pushErr(_self_, _160158_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1ac86260b_Prim> _16399_prim = _1ac85c183_Prim((*(_160148_d))._field_Kind.ptr());;
	if (((_16399_prim != nullptr) && _1a6cde2db_IsNum(_1ac86294c_Str(_16399_prim.ptr())))) {
		return;;
	};
	_1ac826603_pushErr(_self_, _160158_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_160148_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ac859dea_Str(_160130_t.ptr()), &__jule_any_type4)}));
}



inline void _1ac836778_castNum(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac859a32_TypeKind> _164730_t, jule::Ptr<_1ac8243ae_Data> _164748_d, jule::Ptr<_1ac6b2e62_Token> _164758_errorToken) {
	if (_1ac824c83_IsConst(_164748_d.ptr())) {
		jule::Ptr<_1ac86260b_Prim> _164913_prim = _1ac85c183_Prim(_164730_t.ptr());;
		{
			
			if (_1a6cde022_IsFloat((*(_164913_prim))._field_Kind)) {
				_case_begin_1bcddebbc:;
				{
					_1a6ce3422_SetF64((*(_164748_d))._field_Constant.ptr(), static_cast<jule::F64>(_1a6ce2597_AsF64((*(_164748_d))._field_Constant.ptr())));
				}
			}
			else if (_1a6cdd609_IsSigInt((*(_164913_prim))._field_Kind)) {
				_case_begin_1bcddec44:;
				{
					_1a6ce2850_SetI64((*(_164748_d))._field_Constant.ptr(), static_cast<jule::I64>(_1a6ce207a_AsI64((*(_164748_d))._field_Constant.ptr())));
				}
			}
			else if (_1a6cdd917_IsUnsigInt((*(_164913_prim))._field_Kind)) {
				_case_begin_1bcddecbb:;
				{
					_1a6ce2b08_SetU64((*(_164748_d))._field_Constant.ptr(), static_cast<jule::U64>(_1a6ce2311_AsU64((*(_164748_d))._field_Constant.ptr())));
				}
			}
			_match_end_1bcddeb01:;
		};
	} else {
		(*(_164748_d))._field_Constant=nullptr;
		(*(_164748_d))._field_untyped=false;
	};
	if ((_1ac85c936_Enum((*(_164748_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ac729c54_Enum> _166413_e = _1ac85c936_Enum((*(_164748_d))._field_Kind.ptr());;
		if (_1a6cde2db_IsNum(_1ac859dea_Str((*((*(_166413_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1ac86260b_Prim> _16709_prim = _1ac85c183_Prim((*(_164748_d))._field_Kind.ptr());;
	if (((_16709_prim != nullptr) && _1a6cde2db_IsNum(_1ac86294c_Str(_16709_prim.ptr())))) {
		return;;
	};
	_1ac826603_pushErr(_self_, _164758_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_164748_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ac859dea_Str(_164730_t.ptr()), &__jule_any_type4)}));
}



inline void _1ac836b96_castPrim(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac859a32_TypeKind> _167831_t, jule::Ptr<_1ac8243ae_Data> _167849_d, jule::Ptr<_1ac6b2e62_Token> _167859_errorToken) {
	jule::Ptr<_1ac86260b_Prim> _16799_prim = _1ac85c183_Prim(_167831_t.ptr());;
	{
		
		if (_1ac865d29_IsAny(_16799_prim.ptr())) {
			_case_begin_1bcdece50:;
			{
				(*(_167849_d))._field_Constant=nullptr;
				(*(_167849_d))._field_untyped=false;
			}
		}
		else if (_1ac865a93_IsStr(_16799_prim.ptr())) {
			_case_begin_1bcdecb20:;
			{
				_1ac835e3c_castStr(_self_, _167849_d, _167859_errorToken);
			}
		}
		else if (_1a6cddbd1_IsInt(_1ac86294c_Str(_16799_prim.ptr()))) {
			_case_begin_1bcdecb86:;
			{
				_1ac83635a_castInt(_self_, _167831_t, _167849_d, _167859_errorToken);
			}
		}
		else if (_1a6cde2db_IsNum(_1ac86294c_Str(_16799_prim.ptr()))) {
			_case_begin_1bcdecbec:;
			{
				_1ac836778_castNum(_self_, _167831_t, _167849_d, _167859_errorToken);
			}
		}
		else {
			_case_begin_1bcdecaa9:;
			{
				_1ac826603_pushErr(_self_, _167859_errorToken, jule::Str::lit("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str(_167831_t.ptr()), &__jule_any_type4)}));
			}
		}
		_match_end_1bcdeca43:;
	};
}



inline void _1ac837009_castConstant(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac859a32_TypeKind>* _169636_t, jule::Ptr<_1ac8243ae_Data>* _169655_d) {
	if ((((*(_169655_d)) == nullptr) || (!(_1ac824c83_IsConst((*(_169655_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1ac86260b_Prim> _17009_prim = _1ac85c183_Prim((*(_169636_t)).ptr());;
	_1ac8509d4_castConstByType(&((*(_17009_prim))._field_Kind), _169655_d);
	(*((*(_169655_d))))._field_Model=jule::Any((*((*(_169655_d))))._field_Constant, &__jule_any_type19);
}



inline void _1ac837427_castTypeEnum(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac859a32_TypeKind>* _170536_t, jule::Ptr<_1ac8243ae_Data>* _170555_d, jule::Ptr<_1ac6b2e62_Token>* _170570_errorToken) {
	jule::I64 _17069_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1ac7a3d33_checkTypeCompatibility((*(_self_))._field_s, &((*((*(_170555_d))))._field_Kind), _170536_t, _170570_errorToken)))) {
		(*((*(_self_))._field_s))._field_errors=(*((*(_self_))._field_s))._field_errors.slice(0LL, _17069_n);
		_1ac826603_pushErr(_self_, (*(_170570_errorToken)), jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*((*(_170555_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ac859dea_Str((*(_170536_t)).ptr()), &__jule_any_type4)}));
	};
	(*((*(_170555_d))))._field_Constant=nullptr;
	(*((*(_170555_d))))._field_untyped=false;
}



inline void _1ac837845_castTypeEnumT(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac859a32_TypeKind>* _171537_t, jule::Ptr<_1ac8243ae_Data>* _171556_d, jule::Ptr<_1ac6b2e62_Token>* _171571_errorToken) {
	jule::I64 _17169_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1ac7a3d33_checkTypeCompatibility((*(_self_))._field_s, _171537_t, &((*((*(_171556_d))))._field_Kind), _171571_errorToken)))) {
		(*((*(_self_))._field_s))._field_errors=(*((*(_self_))._field_s))._field_errors.slice(0LL, _17169_n);
		_1ac826603_pushErr(_self_, (*(_171571_errorToken)), jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*((*(_171556_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ac859dea_Str((*(_171537_t)).ptr()), &__jule_any_type4)}));
	};
	(*((*(_171556_d))))._field_Constant=nullptr;
	(*((*(_171556_d))))._field_untyped=false;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac837ceb_evalCastByTypeNData(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac859a32_TypeKind> _172542_t, jule::Ptr<_1ac8243ae_Data> _172560_d, jule::Ptr<_1ac6b2e62_Token> _172574_errorToken) {
	if (((_172560_d != nullptr) && (*(_172560_d))._field_Decl)) {
		_1ac826603_pushErr(_self_, _172574_errorToken, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1ac824766_IsNil(_172560_d.ptr())) {
			_case_begin_1bce0a6bb:;
			{
				if ((!(_1ac85b8d0_NilCompatible(_172542_t.ptr())))) {
					_1ac826603_pushErr(_self_, _172574_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("<nil>", 5), &__jule_any_type4),jule::Any(_1ac859dea_Str(_172542_t.ptr()), &__jule_any_type4)}));
				};
				(*(_172560_d))._field_Constant=nullptr;
				(*(_172560_d))._field_untyped=false;
			}
		}
		else if (((_1ac85c183_Prim((*(_172560_d))._field_Kind.ptr()) != nullptr) && _1ac865d29_IsAny(_1ac85c183_Prim((*(_172560_d))._field_Kind.ptr()).ptr()))) {
			_case_begin_1bce0a479:;
			{
				if ((_1ac85c936_Enum(_172542_t.ptr()) != nullptr)) {
					_1ac826603_pushErr(_self_, _172574_errorToken, jule::Str::lit("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
					_1ac826966_pushSuggestion(_self_, jule::Str::lit("try cast to type of enum fields instead of enum", 47), jule::Slice<jule::Any>());
				} else if ((_1ac85cbbc_TypeEnum(_172542_t.ptr()) != nullptr)) {
					_1ac826603_pushErr(_self_, _172574_errorToken, jule::Str::lit("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
				};
				(*(_172560_d))._field_Constant=nullptr;
				(*(_172560_d))._field_untyped=false;
			}
		}
		else if ((_1ac85cbbc_TypeEnum((*(_172560_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bce0a4e0:;
			{
				_1ac837427_castTypeEnum(_self_, &(_172542_t), &(_172560_d), &(_172574_errorToken));
			}
		}
		else if ((_1ac85cbbc_TypeEnum(_172542_t.ptr()) != nullptr)) {
			_case_begin_1bce0b17d:;
			{
				_1ac837845_castTypeEnumT(_self_, &(_172542_t), &(_172560_d), &(_172574_errorToken));
			}
		}
		else if ((_1ac85c6a0_Ptr(_172542_t.ptr()) != nullptr)) {
			_case_begin_1bce0b1e4:;
			{
				_1ac834d70_castPtr(_self_, _172542_t, _172560_d, _172574_errorToken);
			}
		}
		else if ((_1ac85c419_Sptr(_172542_t.ptr()) != nullptr)) {
			_case_begin_1bce0b25a:;
			{
				_1ac8356ab_castRef(_self_, _172542_t, _172560_d, _172574_errorToken);
			}
		}
		else if ((_1ac85d1d9_Slc(_172542_t.ptr()) != nullptr)) {
			_case_begin_1bce0b2c1:;
			{
				_1ac835ac9_castSlc(_self_, _172542_t, _172560_d, _172574_errorToken);
			}
		}
		else if ((_1ac85d706_Struct(_172542_t.ptr()) != nullptr)) {
			_case_begin_1bce0b337:;
			{
				_1ac83528d_castStruct(_self_, _172542_t, _172560_d, _172574_errorToken);
			}
		}
		else if ((_1ac85c183_Prim(_172542_t.ptr()) != nullptr)) {
			_case_begin_1bce0b39d:;
			{
				_1ac836b96_castPrim(_self_, _172542_t, _172560_d, _172574_errorToken);
				_1ac837009_castConstant(_self_, &(_172542_t), &(_172560_d));
			}
		}
		else {
			_case_begin_1bce0a358:;
			{
				_1ac826603_pushErr(_self_, _172574_errorToken, jule::Str::lit("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str(_172542_t.ptr()), &__jule_any_type4)}));
				_172560_d=nullptr;
			}
		}
		_match_end_1bce0a303:;
	};
	if ((_172560_d == nullptr)) {
		return nullptr;;
	};
	(*(_172560_d))._field_Mutable=((*(_172560_d))._field_Mutable || (!(_1ac85b3b3_Mutable((*(_172560_d))._field_Kind.ptr()))));
	if (((!((*(_172560_d))._field_Decl)) && ((_1ac85c936_Enum((*(_172560_d))._field_Kind.ptr()) == nullptr) || (!(_1ac85a23b_Equal((*((*(_1ac85c936_Enum((*(_172560_d))._field_Kind.ptr())))._field_Kind))._field_Kind, _172542_t)))))) {
		_1ac84ee34_applyCastKind(&(_172560_d), &(_172542_t));
		(*((*(_172560_d))._field_Model.cast_ptr<_1ac707b33_CastingExprModel>(&__jule_any_type92)))._field_Token=_172574_errorToken;
	} else {
		(*(_172560_d))._field_Kind=_172542_t;
	};
	(*(_172560_d))._field_Decl=false;
	(*(_172560_d))._field_Lvalue=false;
	(*(_172560_d))._field_untyped=false;
	if (_1ac824c83_IsConst(_172560_d.ptr())) {
		(*((*(_172560_d))._field_Constant))._field_Kind=(*(_1ac85c183_Prim(_172542_t.ptr())))._field_Kind;
	};
	return _172560_d;;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac8382a2_evalCastT(jule::Ptr<_1ac8260a3_Eval> _self_, jule::Ptr<_1ac859a32_TypeKind>* _179834_t, jule::Ptr<_1ac6cc9b5_Expr>* _179853_e, jule::Ptr<_1ac6b2e62_Token>* _179868_et) {
	jule::Ptr<_1ac859a32_TypeKind> _179913_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_179913_prefix;
	});;
	if ((_1ac85d1d9_Slc((*(_179834_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_179853_e))))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type93) {
				_case_begin_1bce1b19e:;
				{
					(*(_self_))._field_prefix=(*(_179834_t));
				}
			}
			_match_end_1bce1b138:;
		};
	};
	jule::Ptr<_1ac8243ae_Data> _180813_d = _1ac844313_evalExpr(_self_, (*(_179853_e)));;
	if (((_180813_d == nullptr) || ((*(_self_))._field_prefix != nullptr))) {
		return _180813_d;;
	};
	return _1ac837ceb_evalCastByTypeNData(_self_.ptr(), (*(_179834_t)), _180813_d, (*(_179868_et)));;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac8385e3_evalCast(jule::Ptr<_1ac8260a3_Eval> _self_, jule::Ptr<_1ac6d0325_CastExpr> _181532_c) {
	jule::Ptr<_1ac861c04_TypeSymbol> _181613_t = _1ac71bbbe_buildType((*(_181532_c))._field_Kind);;
	jule::Bool _18179_ok = _1ac7a1539_checkType((*(_self_))._field_s, &(_181613_t), (*(_self_))._field_lookup);;
	if ((!(_18179_ok))) {
		return nullptr;;
	};
	return _1ac8382a2_evalCastT(_self_, &((*(_181613_t))._field_Kind), &((*(_181532_c))._field_Expr), &((*((*(_181532_c))._field_Kind))._field_Token));;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac838934_evalNsSelection(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac6d06ee_NsSelectionExpr> _182434_s) {
	jule::Str _18259_path = _1ac8765a9_buildLinkPathByTokens(&((*(_182434_s))._field_Ns));;
	jule::Ptr<_1ac77790b_ImportInfo> _182613_imp = _1ac879568_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ac877852_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1ac77790b_ImportInfo>)>([=](jule::Ptr<_1ac77790b_ImportInfo> _182649_imp) mutable -> jule::Bool {
		if ((((*(_182434_s))._field_Ns.len() == 1LL) && ((*(_182649_imp))._field_Alias == _18259_path))) {
			return true;;
		};
		return (((*(_182649_imp))._field_LinkPath == _18259_path) && _1ac77a524_isAccessibleViaSelection(_182649_imp.ptr()));;
	}));;
	if ((_182613_imp == nullptr)) {
		_1ac826603_pushErr(_self_, (*(_182434_s))._field_Ns[0LL], jule::Str::lit("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_18259_path, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Trait<_1ac879568_Lookup> _183813_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1ac879568_Lookup>(_182613_imp, 1);
	;
	_1ac826d62_disallowBuiltin(_self_);
	jule::Any _184313_def = _1ac829370_getDef(_self_, &((*((*(_182434_s))._field_Ident))._field_Kind), false);;
	_1ac826b64_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_183813_lookup;
	jule::Ptr<_1ac8243ae_Data> _184613_d = _1ac82d52d_evalDef(_self_, &(_184313_def), (*(_182434_s))._field_Ident);;
	return _184613_d;;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac838dda_evalStructLitExplicit(jule::Ptr<_1ac8260a3_Eval> _self_, jule::Ptr<_1ac702105_StructIns> _185045_s, jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>> _185113_exprs, jule::Ptr<_1ac6b2e62_Token> _185133_errorToken) {
	jule::Bool _18529_ok = _1ac79bde7_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I64>((*((*(_185045_s))._field_Decl))._field_Generics.len()), static_cast<jule::I64>((*(_185045_s))._field_Generics.len()), _185133_errorToken);;
	if ((!(_18529_ok))) {
		return nullptr;;
	};
	if ((((*(_self_))._field_field != nullptr) && ((*((*((*(_self_))._field_field))._field_Decl))._field_Owner == (*(_185045_s))._field_Decl))) {
		_1ac826603_pushErr(_self_.ptr(), _185133_errorToken, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_185045_s))._field_Decl))._field_Ident, &__jule_any_type4)}));
	};
	_1bcda9deb_pushReference(_self_.ptr(), &(_185045_s));
	_1ac82b729_checkDeprecated(_self_.ptr(), &((*((*(_185045_s))._field_Decl))._field_Directives), _185133_errorToken);
	_1ac817704_structLitChecker _186513_slc = _1ac817704_structLitChecker{._field_e=_self_, ._field_errorToken=_185133_errorToken, ._field_s=_185045_s, };;
	_1ac818e42_check(&_186513_slc, &(_185113_exprs));
	jule::Ptr<_1ac8243ae_Data> _187213_d = jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(_185045_s, 0)}), ._field_Mutable=(!((*(_self_))._field_immutable)), ._field_Model=jule::Any(jule::new_ptr<_1ac7072a3_StructLitExprModel>(_1ac7072a3_StructLitExprModel{._field_Strct=_185045_s, ._field_Args=_186513_slc._field_args}), &__jule_any_type94), });;
	if ((*((*(_185045_s))._field_Decl))._field_Binded) {
		(*((*(_187213_d))._field_Kind))._field_BindIdent=(*((*(_185045_s))._field_Decl))._field_Ident;
	};
	return _187213_d;;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac83922b_evalStructLit(jule::Ptr<_1ac8260a3_Eval> _self_, jule::Ptr<_1ac6d2a0e_StructLit> _188837_lit) {
	jule::Ptr<_1ac861c04_TypeSymbol> _188913_t = _1ac71bbbe_buildType((*(_188837_lit))._field_Kind);;
	jule::Bool _18909_ok = _1ac7a1539_checkType((*(_self_))._field_s, &(_188913_t), (*(_self_))._field_lookup);;
	if ((!(_18909_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1ac702105_StructIns> _189513_s = _1ac85d706_Struct((*(_188913_t))._field_Kind.ptr());;
	if ((_189513_s == nullptr)) {
		if ((_1ac85c419_Sptr((*(_188913_t))._field_Kind.ptr()) != nullptr)) {
			_189513_s=_1ac85d706_Struct((*(_1ac85c419_Sptr((*(_188913_t))._field_Kind.ptr())))._field_Elem.ptr());
			if ((_189513_s != nullptr)) {
				goto _julec_label_1bce3255b;
			};
		};
		_1ac826603_pushErr(_self_.ptr(), (*((*(_188837_lit))._field_Kind))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1bce3255b:;
	jule::Ptr<_1ac8243ae_Data> _190813_d = _1ac838dda_evalStructLitExplicit(_self_, _189513_s, (*(_188837_lit))._field_Exprs, (*((*(_188837_lit))._field_Kind))._field_Token);;
	if ((_1ac85c419_Sptr((*(_188913_t))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ac7072a3_StructLitExprModel> _191017_model = (*(_190813_d))._field_Model.cast_ptr<_1ac7072a3_StructLitExprModel>(&__jule_any_type94);;
		_1ac84d64c_makeStructLitAlloc(&(_190813_d), &(_191017_model));
	};
	return _190813_d;;
}



inline _1ac86b8e0_typeChecker _1ac8394b2_typeChecker(_1ac8260a3_Eval* _self_) {
	return _1ac7a02d5_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac839803_evalType(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac6c8681_TypeDecl> _192031_t) {
	jule::Ptr<_1ac861c04_TypeSymbol> _192113_tk = _1ac71bbbe_buildType(_192031_t);;
	jule::Bool _19229_ok = _1ac7a1539_checkType((*(_self_))._field_s, &(_192113_tk), (*(_self_))._field_lookup);;
	if ((!(_19229_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=(*(_192113_tk))._field_Kind, ._field_Model=jule::Any((*(_192113_tk))._field_Kind, &__jule_any_type83), ._field_Decl=true, });;
}



inline void _1ac839b66_callTypeFn(jule::Ptr<_1ac8260a3_Eval> _self_, jule::Ptr<_1ac6d16de_FnCallExpr>* _193335_fc, jule::Ptr<_1ac8243ae_Data>* _193357_d) {
	if (((*((*(_193335_fc))))._field_Args.len() < 1LL)) {
		_1ac826603_pushErr(_self_.ptr(), (*((*(_193335_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("v", 1), &__jule_any_type4)}));
	} else if (((*((*(_193335_fc))))._field_Args.len() > 1LL)) {
		_1ac826603_pushErr(_self_.ptr(), (*((*((*(_193335_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*((*(_193357_d))))._field_Kind.ptr()), &__jule_any_type4)}));
	} else if ((*((*(_193335_fc))))._field_IsCo) {
		_1ac826603_pushErr(_self_.ptr(), (*((*(_193335_fc))))._field_Token, jule::Str::lit("concurrent calls are not allowed for type-cast calls", 52), jule::Slice<jule::Any>());
		(*(_193357_d))=nullptr;
		return;;
	} else if (((*((*(_193335_fc))))._field_Exception != nullptr)) {
		_1ac826603_pushErr(_self_.ptr(), (*((*(_193335_fc))))._field_Token, jule::Str::lit("exceptionals are not supported for type-cast call", 49), jule::Slice<jule::Any>());
		(*(_193357_d))=nullptr;
		return;;
	};
	if (((*((*(_193335_fc))))._field_Args.len() > 0LL)) {
		jule::Ptr<_1ac6cc9b5_Expr> _194917_arg = (*((*(_193335_fc))))._field_Args[0LL];;
		(*(_193357_d))=_1ac8382a2_evalCastT(_self_, &((*((*(_193357_d))))._field_Kind), &(_194917_arg), &((*(_194917_arg))._field_Token));
		return;;
	};
	if (((*(_193357_d)) != nullptr)) {
		(*((*(_193357_d))))._field_Decl=false;
	};
}



inline void _1ac839ec9_callBuiltinFn(jule::Ptr<_1ac8260a3_Eval> _self_, jule::Ptr<_1ac6d16de_FnCallExpr>* _195938_fc, jule::Ptr<_1ac8243ae_Data>* _195960_d) {
	if ((!(_1ac6d1a63_Unhandled((*(_195938_fc)).ptr())))) {
		_1ac826603_pushErr(_self_.ptr(), (*((*(_195938_fc))))._field_Token, jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	(*(_195960_d))=(*(_1ac85d470_Fn((*((*(_195960_d))))._field_Kind.ptr())))._field_caller(&(_self_), _195938_fc, _195960_d);
	if (((*(_195960_d)) == nullptr)) {
		return;;
	};
	(*((*(_195960_d))))._field_Mutable=true;
}



inline void _1ac83a33c_checkFnOfConcurrentCall(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac717170_FnIns>* _197143_f, jule::Ptr<_1ac6b2e62_Token> _197154_errorToken) {
	if (_1ac8270e8_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*((*(_197143_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bce42192:;
		if (it != expr_end) {
			jule::Ptr<_1ac7161c4_ParamIns> *_197516_p = it;
			{
				if (_1ac712db3_IsSelf((*((*(_197516_p))))._field_Decl.ptr())) {
					if ((!(_1ac713149_IsRef((*((*(_197516_p))))._field_Decl.ptr())))) {
						_1ac826603_pushErr(_self_, _197154_errorToken, jule::Str::lit("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97), jule::Slice<jule::Any>());
						_1ac826966_pushSuggestion(_self_, jule::Str::lit("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99), jule::Slice<jule::Any>());
					};
				};
				if ((*((*((*(_197516_p))))._field_Decl))._field_Reference) {
					_1ac826603_pushErr(_self_, _197154_errorToken, jule::Str::lit("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96), jule::Slice<jule::Any>());
					_1ac826966_pushSuggestion(_self_, jule::Str::lit("use Unsafe Jule with unsafe {} scope to make concurrent call", 60), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1bce42192:;
			++it;
			goto _iter_begin_1bce42192;
		}
		_iter_end_1bce42192:;
	};
}



inline void _1ac83a75a_processExceptionalHandler(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac717170_FnIns>* _199049_f, jule::Ptr<_1ac6d16de_FnCallExpr>* _199065_fc, jule::Ptr<_1ac8243ae_Data>* _199087_d) {
	jule::Bool _19919_resultNeeded = ((!(_1ac7146de_IsVoid((*((*(_199049_f))))._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_1ac75d42a_scopeChecker> _199217_csc = nullptr;;
	jule::Ptr<_1ac756126_Scope> _199317_ch = nullptr;;
	jule::Ptr<_1ac7084d5_FnCallExprModel> _199513_model = (*((*(_199087_d))))._field_Model.cast_ptr<_1ac7084d5_FnCallExprModel>(&__jule_any_type34);;
	jule::Ptr<_1ac75d42a_scopeChecker> _199913_sc = (*(_self_))._field_lookup.cast_ptr<_1ac75d42a_scopeChecker>(0);;
	_199217_csc=_1ac76edba_newChildChecker(_199913_sc);
	if (_19919_resultNeeded) {
		(*(_199217_csc))._field_result=(*(_199049_f));
	};
	_199317_ch=_1ac763221_getChild(_199913_sc.ptr());
	(*((*((*(_199065_fc))))._field_Exception))._field_Parent=(*(_199913_sc))._field_tree;
	{ jule::Slice<jule::Ptr<_1ac7bb015_Var>> &__jule_push_dest = (*((*(_199217_csc))._field_table))._field_Vars; __jule_push_dest.push(_1ac84d9c1_buildErrorVar(&(_199317_ch), _199065_fc)); };
	_1ac76363e_checkChildSsc(_199913_sc, &((*((*(_199065_fc))))._field_Exception), &(_199317_ch), &(_199217_csc));
	(*(_199513_model))._field_Assigned=_19919_resultNeeded;
	(*(_199513_model))._field_Except=_199317_ch;
	if ((_19919_resultNeeded && ((*(_199217_csc))._field_result != nullptr))) {
		_1ac826603_pushErr(_self_, (*((*(_199065_fc))))._field_Token, jule::Str::lit("exceptional returns an expression, therefore else block should return expression", 80), jule::Slice<jule::Any>());
	};
}



inline void _1ac83aabd_callFn(jule::Ptr<_1ac8260a3_Eval> _self_, jule::Ptr<_1ac6d16de_FnCallExpr>* _201731_fc, jule::Ptr<_1ac8243ae_Data>* _201753_d) {
	jule::Ptr<_1ac717170_FnIns> _201813_f = _1ac85d470_Fn((*((*(_201753_d))))._field_Kind.ptr());;
	if (_1ac718605_IsBuiltin(_201813_f.ptr())) {
		_1ac839ec9_callBuiltinFn(_self_, _201731_fc, _201753_d);
		return;;
	};
	if ((_1ac82737e_isGlobal(_self_.ptr()) && (*((*(_201813_f))._field_Decl))._field_Exceptional)) {
		_1ac826603_pushErr(_self_.ptr(), (*((*(_201731_fc))))._field_Token, jule::Str::lit("exceptionals are not allowed in global scope", 44), jule::Slice<jule::Any>());
		_1ac826966_pushSuggestion(_self_.ptr(), jule::Str::lit("wrap exceptional with a non-exceptional function", 48), jule::Slice<jule::Any>());
		(*(_201753_d))=nullptr;
		return;;
	};
	if (((!(_1ac714975_IsMethod((*(_201813_f))._field_Decl.ptr()))) && _1ac875652_hasDirective(&((*((*(_201813_f))._field_Decl))._field_Directives), jule::Str::lit("test", 4)))) {
		_1ac826603_pushErr(_self_.ptr(), (*((*(_201731_fc))))._field_Token, jule::Str::lit("you cannot call test functions", 30), jule::Slice<jule::Any>());
		(*(_201753_d))=nullptr;
		return;;
	};
	if (((((!((*((*(_201753_d))))._field_Mutable)) && _1ac714975_IsMethod((*(_201813_f))._field_Decl.ptr())) && (!((*((*(_201813_f))._field_Decl))._field_Statically))) && (*((*((*(_201813_f))._field_Decl))._field_Params[0LL]))._field_Mutable)) {
		if ((!((*(_self_))._field_immutable))) {
			_1ac826603_pushErr(_self_.ptr(), (*((*(_201731_fc))))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_1ac7072a3_StructLitExprModel> _204417_lit = _1ac856a62_isLitBased(&((*((*(_201753_d))))._field_Model));;
			if ((_204417_lit == nullptr)) {
				_1ac826603_pushErr(_self_.ptr(), (*((*(_201731_fc))))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
			} else {
				_1ac81721a_checkMutRiskOfStructLit(&((*(_self_))._field_s), &(_204417_lit));
			};
		};
	} else if (((!(_1ac8270e8_isUnsafe(_self_.ptr()))) && (*((*(_201813_f))._field_Decl))._field_Unsafety)) {
		_1ac826603_pushErr(_self_.ptr(), (*((*(_201731_fc))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	jule::Bool _205613_dynamicAnnotation = ((((*((*(_201813_f))._field_Decl))._field_Generics.len() > 0LL) && ((*(_201813_f))._field_Generics.len() == 0LL)) && ((*(_201813_f))._field_Params.len() > 0LL));;
	if (_205613_dynamicAnnotation) {
		(*(_201813_f))._field_Generics=jule::Slice<jule::Ptr<_1ac85814b_InsGeneric>>::alloc((*((*(_201813_f))._field_Decl))._field_Generics.len(), (*((*(_201813_f))._field_Decl))._field_Generics.len());
	} else if (((*(_201813_f))._field_Generics.len() != (*((*(_201813_f))._field_Decl))._field_Generics.len())) {
		_1ac79bde7_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I64>((*((*(_201813_f))._field_Decl))._field_Generics.len()), static_cast<jule::I64>((*(_201813_f))._field_Generics.len()), (*((*(_201731_fc))))._field_Token);
		(*(_201753_d))=nullptr;
		return;;
	};
	jule::Ptr<_1ac797c7d_Sema> _206513_old = (*(_self_))._field_s;;
	if (((*((*(_201813_f))._field_Decl))._field_Owner != nullptr)) {
		(*(_self_))._field_s=(*((*((*(_201813_f))._field_Decl))._field_Owner))._field_sema;
	};
	__JULE_DEFER({
		if ((_206513_old != (*(_self_))._field_s)) {
			((*(_206513_old))._field_errors).append((*((*(_self_))._field_s))._field_errors);;
			(*((*(_self_))._field_s))._field_errors=nullptr;
		};
		(*(_self_))._field_s=_206513_old;
	});;
	_1ac8147bc_fnCallArgChecker _207813_fcac = _1ac8147bc_fnCallArgChecker{._field_e=_self_, ._field_args=(*((*(_201731_fc))))._field_Args, ._field_errorToken=(*((*(_201731_fc))))._field_Token, ._field_dynamicAnnotation=_205613_dynamicAnnotation, };;
	if ((!(_205613_dynamicAnnotation))) {
		if ((!((*(_201813_f))._field_reloaded))) {
			jule::Bool _208717_ok = _1ac7a684c_reloadFnInsTypes((*(_self_))._field_s, _201813_f);;
			(*(_201813_f))._field_reloaded=true;
			if ((!(_208717_ok))) {
				(*(_201753_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1ac717170_FnIns> _209417_existInstance = _1ac715cd9_appendInstance((*(_201813_f))._field_Decl.ptr(), &(_201813_f));;
		if ((_209417_existInstance != nullptr)) {
			_201813_f=_209417_existInstance;
		};
	} else if ((!(_1ac7a50a9_buildFnNonGenericTypeKinds((*(_self_))._field_s, &(_201813_f), &(_207813_fcac._field_ignored))))) {
		(*(_201753_d))=nullptr;
		return;;
	};
	_207813_fcac._field_f=_201813_f;
	jule::Bool _210513_ok = false;;
	if (((*((*(_201813_f))._field_Decl))._field_Owner != nullptr)) {
		std::swap(_206513_old, (*(_self_))._field_s);
		_210513_ok=_1ac816d74_check(&_207813_fcac);
		std::swap(_206513_old, (*(_self_))._field_s);
	} else {
		_210513_ok=_1ac816d74_check(&_207813_fcac);
	};
	if (_205613_dynamicAnnotation) {
		if ((!(_210513_ok))) {
			(*(_201753_d))=nullptr;
			return;;
		};
		if ((!(_1ac832e6c_checkGenericFn(_self_, &(_201813_f), &((*((*(_201731_fc))))._field_Token), &((*((*(_201753_d))))._field_Model))))) {
			(*(_201753_d))=nullptr;
			return;;
		};
	};
	jule::Any _212513_callModel = (*((*(_201753_d))))._field_Model;;
	if (_1ac7146de_IsVoid((*(_201813_f))._field_Decl.ptr())) {
		(*(_201753_d))=_1ac850143_buildVoidData();
	} else {
		(*((*(_201753_d))))._field_Kind=(*(_201813_f))._field_Result;
		(*((*(_201753_d))))._field_Lvalue=false;
	};
	jule::Ptr<_1ac7084d5_FnCallExprModel> _213413_model = jule::new_ptr<_1ac7084d5_FnCallExprModel>(_1ac7084d5_FnCallExprModel{._field_Token=(*((*(_201731_fc))))._field_Token, ._field_Func=_201813_f, ._field_IsCo=(*((*(_201731_fc))))._field_IsCo, ._field_Expr=_212513_callModel, ._field_Args=_207813_fcac._field_argModels, });;
	(*((*(_201753_d))))._field_Model=jule::Any(_213413_model, &__jule_any_type34);
	(*((*(_201753_d))))._field_Mutable=true;
	if ((*((*(_201813_f))._field_Decl))._field_Exceptional) {
		if ((*((*(_201731_fc))))._field_IsCo) {
			_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*((*(_201731_fc))))._field_Token, jule::Str::lit("concurrent calls not supports exceptionals", 42), jule::Slice<jule::Any>());
			_1ac79ac2b_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("handle exceptional in a separate function or anonymous function", 63), jule::Slice<jule::Any>());
		};
		{
			
			if (_1ac6d1a63_Unhandled((*(_201731_fc)).ptr())) {
				_case_begin_1bce67e10:;
				{
					_1ac826603_pushErr(_self_.ptr(), (*((*(_201731_fc))))._field_Token, jule::Str::lit("exceptionals must be handled", 28), jule::Slice<jule::Any>());
					_1ac826966_pushSuggestion(_self_.ptr(), jule::Str::lit("use \"!\" operator after exceptional to handle it", 47), jule::Slice<jule::Any>());
				}
			}
			else if (_1ac6d1ce9_Ignored((*(_201731_fc)).ptr())) {
				_case_begin_1bce67b13:;
				{
					goto _match_end_1bce6687b;
				}
			}
			else {
				_case_begin_1bce668e2:;
				{
					_1ac83a75a_processExceptionalHandler(_self_.ptr(), &(_201813_f), _201731_fc, _201753_d);
				}
			}
			_match_end_1bce6687b:;
		};
	} else if ((!(_1ac6d1a63_Unhandled((*(_201731_fc)).ptr())))) {
		_1ac826603_pushErr(_self_.ptr(), (*((*(_201731_fc))))._field_Token, jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	if ((*((*(_201731_fc))))._field_IsCo) {
		_1ac83a33c_checkFnOfConcurrentCall(_self_.ptr(), &((*(_213413_model))._field_Func), (*((*(_201731_fc))))._field_Token);
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac83ae0e_evalFnCall(jule::Ptr<_1ac8260a3_Eval> _self_, jule::Ptr<_1ac6d16de_FnCallExpr> _216934_fc) {
	jule::Ptr<_1ac859a32_TypeKind> _217013_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_217013_prefix;
	});;
	{
		auto &_match_expr{ (*((*(_216934_fc))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1bce6c4db:;
			{
				if ((*((*((*(_216934_fc))._field_Expr))._field_Token))._field_Kind.equal("error", 5)) {
					return _1ac94209d_builtinCallerError(&(_self_), &(_216934_fc));;
				};
			}
		}
		_match_end_1bce6c475:;
	};
	jule::Ptr<_1ac8243ae_Data> _218313_d = _1ac8434ee_evalExprKind(_self_, (*((*(_216934_fc))._field_Expr))._field_Kind);;
	if ((_218313_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_218313_d))._field_Decl) {
		_1ac839b66_callTypeFn(_self_, &(_216934_fc), &(_218313_d));
		return _218313_d;;
	};
	if ((_1ac85d470_Fn((*(_218313_d))._field_Kind.ptr()) == nullptr)) {
		_1ac826603_pushErr(_self_.ptr(), (*(_216934_fc))._field_Token, jule::Str::lit("attempting to call a non-function", 33), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1ac83aabd_callFn(_self_, &(_216934_fc), &(_218313_d));
	return _218313_d;;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac83b30a_evalEnumStatic(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac729c54_Enum> _220237_enm, jule::Ptr<_1ac6b2e62_Token> _220249_ident) {
	jule::Ptr<_1ac7291d7_EnumItem> _220313_item = _1ac72a848_FindItem(_220237_enm.ptr(), (*(_220249_ident))._field_Kind);;
	if ((_220313_item == nullptr)) {
		_1ac826603_pushErr(_self_, _220249_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_220237_enm))._field_Ident, &__jule_any_type4),jule::Any((*(_220249_ident))._field_Kind, &__jule_any_type4)}));
	};
	return _1ac856798_evalEnumStatic(&(_220237_enm), &(_220313_item));;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac83b706_evalTypeEnumStatic(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac72b45e_TypeEnum> _221041_enm, jule::Ptr<_1ac6b2e62_Token> _221057_ident) {
	jule::Ptr<_1ac72ad87_TypeEnumItem> _221113_item = _1ac72c020_FindItem(_221041_enm.ptr(), (*(_221057_ident))._field_Kind);;
	if ((_221113_item == nullptr)) {
		_1ac826603_pushErr(_self_, _221057_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_221041_enm))._field_Ident, &__jule_any_type4),jule::Any((*(_221057_ident))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		
		if ((_1ac85c936_Enum((*((*(_221113_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bce756e2:;
			{
				return _1ac829c00__evalEnum(_self_, _1ac85c936_Enum((*((*(_221113_item))._field_Kind))._field_Kind.ptr()));;
			}
		}
		else if ((_1ac85cbbc_TypeEnum((*((*(_221113_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bce75879:;
			{
				return _1ac82a43c__evalTypeEnum(_self_, _1ac85cbbc_TypeEnum((*((*(_221113_item))._field_Kind))._field_Kind.ptr()));;
			}
		}
		else if ((_1ac85d706_Struct((*((*(_221113_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bce74a21:;
			{
				return _1ac82ab79__evalStruct(_self_, _1ac85d706_Struct((*((*(_221113_item))._field_Kind))._field_Kind.ptr()));;
			}
		}
		else {
			_case_begin_1bce73b85:;
			{
				jule::Ptr<_1ac8243ae_Data> _222417_d = jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=(*((*(_221113_item))._field_Kind))._field_Kind, ._field_Decl=true, });;
				(*(_222417_d))._field_Model=jule::Any((*(_222417_d))._field_Kind, &__jule_any_type83);
				return _222417_d;;
			}
		}
		_match_end_1bce73d2d:;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac83bb02_evalStructStatic(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac702105_StructIns> _223339_s, jule::Ptr<_1ac6b2e62_Token> _223354_ident) {
	jule::Ptr<_1ac8243ae_Data> _223413_d = jule::new_ptr<_1ac8243ae_Data>();;
	;
	jule::Ptr<_1ac71426b_Fn> _223813_method = _1ac70316c_FindMethod(_223339_s.ptr(), (*(_223354_ident))._field_Kind, true);;
	if ((_223813_method != nullptr)) {
		if ((!(_1ac79b127_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_223813_method))._field_Public, (*(_223813_method))._field_Token)))) {
			_1ac826603_pushErr(_self_, _223354_ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_223354_ident))._field_Kind, &__jule_any_type4)}));
			_1ac826966_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1ac717170_FnIns> _224517_ins = _1ac7159cb_instance(_223813_method);;
		(*(_224517_ins))._field_Owner=_223339_s;
		_1bccd4a29_pushReference(_self_, &(_224517_ins));
		(*(_223413_d))._field_Model=jule::Any(jule::new_ptr<_1ac70b52c_StructStaticIdentExprModel>(_1ac70b52c_StructStaticIdentExprModel{._field_Structure=_223339_s, ._field_Expr=(*(_223413_d))._field_Model, ._field_Method=_224517_ins}), &__jule_any_type95);
		(*(_223413_d))._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(_224517_ins, 1)});
		return _223413_d;;
	};
	jule::Ptr<_1ac7bb015_Var> _225913_sttc = _1ac7037ee_FindStatic(_223339_s.ptr(), (*(_223354_ident))._field_Kind);;
	if ((_225913_sttc != nullptr)) {
		return _1ac82cc36_evalVar(_self_, _225913_sttc, _223354_ident);;
	};
	_1ac826603_pushErr(_self_, _223354_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_223339_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any((*(_223354_ident))._field_Kind, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac83c0a8_evalTraitSubIdent(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac8243ae_Data> _226840_d, jule::Ptr<_1ac727548_Trait> _226854_trt, jule::Ptr<_1ac6b2e62_Token> _226871_ident) {
	jule::Ptr<_1ac71426b_Fn> _226913_f = _1ac7281e7_FindMethod(_226854_trt.ptr(), (*(_226871_ident))._field_Kind);;
	if ((_226913_f == nullptr)) {
		_1ac826603_pushErr(_self_, _226871_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_226854_trt))._field_Ident, &__jule_any_type4),jule::Any((*(_226871_ident))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(_1ac7159cb_instance(_226913_f), 1)}), ._field_Model=jule::Any(jule::new_ptr<_1ac70a6d5_TraitSubIdentExprModel>(_1ac70a6d5_TraitSubIdentExprModel{._field_Token=_226871_ident, ._field_Expr=(*(_226840_d))._field_Model, ._field_Method=_226913_f, ._field_Trt=_226854_trt}), &__jule_any_type96), });;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac83c619_evalStructSubIdentField(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac8243ae_Data>* _228847_d, jule::Ptr<_1ac702105_StructIns>* _228862_s, jule::Ptr<_1ac6b2e62_Token>* _228882_tok, jule::Ptr<_1ac701555_FieldIns>* _2288100_f) {
	jule::Ptr<_1ac70b076_StructSubIdentExprModel> _228913_model = jule::new_ptr<_1ac70b076_StructSubIdentExprModel>(_1ac70b076_StructSubIdentExprModel{._field_Token=(*(_228882_tok)), ._field_Expr=jule::new_ptr<_1ac8243ae_Data>((*((*(_228847_d))))), ._field_Field=(*(_2288100_f)), ._field_Owner=(*(_228862_s))});;
	(*((*(_228847_d))))._field_Model=jule::Any(_228913_model, &__jule_any_type97);
	(*((*(_228847_d))))._field_Kind=(*((*(_2288100_f))))._field_Kind;
	(*((*(_228847_d))))._field_Lvalue=true;
	if (((*((*((*(_2288100_f))))._field_Decl))._field_Mutable && (!((*((*(_228847_d))))._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1bce868ce:;
				{
					jule::Ptr<_1ac75d42a_scopeChecker> _230317_scope = _1ac76151b_getRoot((*(_self_))._field_lookup.cast_ptr<_1ac75d42a_scopeChecker>(0));;
					(*((*(_228847_d))))._field_Mutable=(((*(_230317_scope))._field_owner != nullptr) && ((*((*(_230317_scope))._field_owner))._field_Owner == (*(_228862_s))));
				}
			}
			_match_end_1bce86879:;
		};
	};
	return (*(_228847_d));;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac83cb7a_evalStructSubIdent(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac8243ae_Data> _231141_d, jule::Ptr<_1ac702105_StructIns> _231155_s, jule::Ptr<_1ac6d0ac8_SubIdentExpr> _231174_si, jule::Bool _231193_ref) {
	jule::Ptr<_1ac701555_FieldIns> _231213_f = _1ac7034ad_FindField(_231155_s.ptr(), (*((*(_231174_si))._field_Ident))._field_Kind);;
	if ((_231213_f != nullptr)) {
		if ((!(_1ac79b127_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_231213_f))._field_Decl))._field_Public, (*((*(_231213_f))._field_Decl))._field_Token)))) {
			_1ac826603_pushErr(_self_, (*(_231174_si))._field_Ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_231213_f))._field_Decl))._field_Ident, &__jule_any_type4)}));
			_1ac826966_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		return _1ac83c619_evalStructSubIdentField(_self_, &(_231141_d), &(_231155_s), &((*(_231174_si))._field_Ident), &(_231213_f));;
	};
	;
	jule::Ptr<_1ac71426b_Fn> _232213_m = _1ac70316c_FindMethod(_231155_s.ptr(), (*((*(_231174_si))._field_Ident))._field_Kind, false);;
	if ((_232213_m == nullptr)) {
		_1ac826603_pushErr(_self_, (*(_231174_si))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_231155_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any((*((*(_231174_si))._field_Ident))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	if ((!(_1ac79b127_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_232213_m))._field_Public, (*(_232213_m))._field_Token)))) {
		_1ac826603_pushErr(_self_, (*(_231174_si))._field_Ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_232213_m))._field_Ident, &__jule_any_type4)}));
		_1ac826966_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	if ((_1ac713149_IsRef((*(_232213_m))._field_Params[0LL].ptr()) && (!(_231193_ref)))) {
		_1ac826603_pushErr(_self_, (*(_231174_si))._field_Ident, jule::Str::lit("reference method cannot use with non-reference instance", 55), jule::Slice<jule::Any>());
	};
	_1ac82b729_checkDeprecated(_self_, &((*(_232213_m))._field_Directives), (*(_231174_si))._field_Ident);
	jule::Ptr<_1ac717170_FnIns> _233813_ins = _1ac7159cb_instance(_232213_m);;
	(*(_233813_ins))._field_Owner=_231155_s;
	_1bccd4a29_pushReference(_self_, &(_233813_ins));
	jule::Ptr<_1ac8243ae_Data> _234113_model = jule::new_ptr<_1ac8243ae_Data>((*(_231141_d)));;
	(*(_231141_d))._field_Model=jule::Any(jule::new_ptr<_1ac70b076_StructSubIdentExprModel>(_1ac70b076_StructSubIdentExprModel{._field_Token=(*(_231174_si))._field_Ident, ._field_Expr=_234113_model, ._field_Method=_233813_ins, ._field_Owner=_231155_s}), &__jule_any_type97);
	(*(_231141_d))._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(_233813_ins, 1)});
	return _231141_d;;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac83cebb_evalIntTypeStatic(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac6b2e62_Token> _235236_ident) {
	;
	{
		auto &_match_expr{ (*(_235236_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bce94d1b:;
			{
				jule::Ptr<_1a6cde8d5_Const> _235617_c = static__1a6cded25_NewI64(static_cast<jule::I64>(_1a6cd9d53_MaxI(jule::Str::lit("int", 3))));;
				(*(_235617_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_untyped=true, ._field_Kind=_1ac93d099_primInt, ._field_Model=jule::Any(_235617_c, &__jule_any_type19), ._field_Constant=_235617_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1bce9602b:;
			{
				jule::Ptr<_1a6cde8d5_Const> _236517_c = static__1a6cded25_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1a6cda34d_Min(jule::Str::lit("int", 3)))));;
				(*(_236517_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_untyped=true, ._field_Kind=_1ac93d099_primInt, ._field_Model=jule::Any(_236517_c, &__jule_any_type19), ._field_Constant=_236517_c});;
			}
		}
		else {
			_case_begin_1bce95327:;
			{
				_1ac826603_pushErr(_self_, _235236_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("int", 3), &__jule_any_type4),jule::Any((*(_235236_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bce952c2:;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac83d30c_evalUintTypeStatic(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac6b2e62_Token> _237937_ident) {
	;
	{
		auto &_match_expr{ (*(_237937_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bce95569:;
			{
				jule::Ptr<_1a6cde8d5_Const> _238317_c = static__1a6ce00de_NewU64(static_cast<jule::U64>(_1a6cda11c_MaxU(jule::Str::lit("uint", 4))));;
				(*(_238317_c))._field_Kind=jule::Str::lit("uint", 4);
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_untyped=true, ._field_Kind=_1ac93cbc0_primUint, ._field_Model=jule::Any(_238317_c, &__jule_any_type19), ._field_Constant=_238317_c});;
			}
		}
		else {
			_case_begin_1bce9900c:;
			{
				_1ac826603_pushErr(_self_, _237937_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("uint", 4), &__jule_any_type4),jule::Any((*(_237937_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bce98ea7:;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac83d64d_evalI8TypeStatic(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac6b2e62_Token> _239735_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_239735_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bce9bc35:;
			{
				jule::Ptr<_1a6cde8d5_Const> _240317_c = static__1a6cded25_NewI64(127LL);;
				(*(_240317_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_untyped=true, ._field_Kind=_1ac93d363_primI8, ._field_Model=jule::Any(_240317_c, &__jule_any_type19), ._field_Constant=_240317_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1bce9cd79:;
			{
				jule::Ptr<_1a6cde8d5_Const> _241217_c = static__1a6cded25_NewI64(-128LL);;
				(*(_241217_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_untyped=true, ._field_Kind=_1ac93d363_primI8, ._field_Model=jule::Any(_241217_c, &__jule_any_type19), ._field_Constant=_241217_c});;
			}
		}
		else {
			_case_begin_1bce9c175:;
			{
				_1ac826603_pushErr(_self_, _239735_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i8", 2), &__jule_any_type4),jule::Any((*(_239735_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bce9c120:;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac83d98e_evalI16TypeStatic(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac6b2e62_Token> _242636_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_242636_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bcea0db0:;
			{
				jule::Ptr<_1a6cde8d5_Const> _243217_c = static__1a6cded25_NewI64(32767LL);;
				(*(_243217_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_untyped=true, ._field_Kind=_1ac93d62c_primI16, ._field_Model=jule::Any(_243217_c, &__jule_any_type19), ._field_Constant=_243217_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1bcea1ee3:;
			{
				jule::Ptr<_1a6cde8d5_Const> _244117_c = static__1a6cded25_NewI64(-32768LL);;
				(*(_244117_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_untyped=true, ._field_Kind=_1ac93d62c_primI16, ._field_Model=jule::Any(_244117_c, &__jule_any_type19), ._field_Constant=_244117_c});;
			}
		}
		else {
			_case_begin_1bcea1300:;
			{
				_1ac826603_pushErr(_self_, _242636_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i16", 3), &__jule_any_type4),jule::Any((*(_242636_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bcea129a:;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac83dcd0_evalI32TypeStatic(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac6b2e62_Token> _245536_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_245536_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bcea5029:;
			{
				jule::Ptr<_1a6cde8d5_Const> _246117_c = static__1a6cded25_NewI64(2147483647LL);;
				(*(_246117_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_untyped=true, ._field_Kind=_1ac93d8e6_primI32, ._field_Model=jule::Any(_246117_c, &__jule_any_type19), ._field_Constant=_246117_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1bcea615c:;
			{
				jule::Ptr<_1a6cde8d5_Const> _247017_c = static__1a6cded25_NewI64(-2147483648LL);;
				(*(_247017_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_untyped=true, ._field_Kind=_1ac93d8e6_primI32, ._field_Model=jule::Any(_247017_c, &__jule_any_type19), ._field_Constant=_247017_c});;
			}
		}
		else {
			_case_begin_1bcea5469:;
			{
				_1ac826603_pushErr(_self_, _245536_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i32", 3), &__jule_any_type4),jule::Any((*(_245536_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bcea5414:;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac83e121_evalI64TypeStatic(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac6b2e62_Token> _248436_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_248436_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bcea9193:;
			{
				jule::Ptr<_1a6cde8d5_Const> _249017_c = static__1a6cded25_NewI64(jule::MAX_I64);;
				(*(_249017_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_untyped=true, ._field_Kind=_1ac93dbb0_primI64, ._field_Model=jule::Any(_249017_c, &__jule_any_type19), ._field_Constant=_249017_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1bceaa2c6:;
			{
				jule::Ptr<_1a6cde8d5_Const> _249917_c = static__1a6cded25_NewI64(jule::MIN_I64);;
				(*(_249917_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_untyped=true, ._field_Kind=_1ac93dbb0_primI64, ._field_Model=jule::Any(_249917_c, &__jule_any_type19), ._field_Constant=_249917_c});;
			}
		}
		else {
			_case_begin_1bcea95d3:;
			{
				_1ac826603_pushErr(_self_, _248436_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i64", 3), &__jule_any_type4),jule::Any((*(_248436_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bcea957d:;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac83e462_evalU8TypeStatic(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac6b2e62_Token> _251335_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_251335_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bcead670:;
			{
				jule::Ptr<_1a6cde8d5_Const> _251817_c = static__1a6ce00de_NewU64(255LLU);;
				(*(_251817_c))._field_Kind=jule::Str::lit("u8", 2);
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_untyped=true, ._field_Kind=_1ac93de79_primU8, ._field_Model=jule::Any(_251817_c, &__jule_any_type19), ._field_Constant=_251817_c});;
			}
		}
		else {
			_case_begin_1bceacdde:;
			{
				_1ac826603_pushErr(_self_, _251335_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u8", 2), &__jule_any_type4),jule::Any((*(_251335_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bcead2a7:;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac83e7a3_evalU16TypeStatic(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac6b2e62_Token> _253236_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_253236_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bceb12cc:;
			{
				jule::Ptr<_1a6cde8d5_Const> _253717_c = static__1a6ce00de_NewU64(65535LLU);;
				(*(_253717_c))._field_Kind=jule::Str::lit("u16", 3);
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_untyped=true, ._field_Kind=_1ac93e243_primU16, ._field_Model=jule::Any(_253717_c, &__jule_any_type19), ._field_Constant=_253717_c});;
			}
		}
		else {
			_case_begin_1bceb0a3a:;
			{
				_1ac826603_pushErr(_self_, _253236_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u16", 3), &__jule_any_type4),jule::Any((*(_253236_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bceb0e14:;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac83eae4_evalU32TypeStatic(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac6b2e62_Token> _255136_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_255136_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bceb3e39:;
			{
				jule::Ptr<_1a6cde8d5_Const> _255617_c = static__1a6ce00de_NewU64(4294967295LLU);;
				(*(_255617_c))._field_Kind=jule::Str::lit("u32", 3);
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_untyped=true, ._field_Kind=_1ac93e50c_primU32, ._field_Model=jule::Any(_255617_c, &__jule_any_type19), ._field_Constant=_255617_c});;
			}
		}
		else {
			_case_begin_1bceb3697:;
			{
				_1ac826603_pushErr(_self_, _255136_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u32", 3), &__jule_any_type4),jule::Any((*(_255136_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bceb3a71:;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac83ee35_evalU64TypeStatic(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac6b2e62_Token> _257036_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_257036_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bceb6a96:;
			{
				jule::Ptr<_1a6cde8d5_Const> _257517_c = static__1a6ce00de_NewU64(jule::MAX_U64);;
				(*(_257517_c))._field_Kind=jule::Str::lit("u64", 3);
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_untyped=true, ._field_Kind=_1ac93e980_primU64, ._field_Model=jule::Any(_257517_c, &__jule_any_type19), ._field_Constant=_257517_c});;
			}
		}
		else {
			_case_begin_1bceb6304:;
			{
				_1ac826603_pushErr(_self_, _257036_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u64", 3), &__jule_any_type4),jule::Any((*(_257036_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bceb66cd:;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac840276_evalF32TypeStatic(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac6b2e62_Token> _258936_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_258936_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bceb9417:;
			{
				jule::Ptr<_1a6cde8d5_Const> _259617_c = static__1a6ce093b_NewF64(340282346638528860000000000000000000000.0);;
				(*(_259617_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_untyped=true, ._field_Kind=_1ac93ec49_primF32, ._field_Model=jule::Any(_259617_c, &__jule_any_type19), ._field_Constant=_259617_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1bceba825:;
			{
				jule::Ptr<_1a6cde8d5_Const> _260517_c = static__1a6ce093b_NewF64(-340282346638528860000000000000000000000.0);;
				(*(_260517_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_untyped=true, ._field_Kind=_1ac93ec49_primF32, ._field_Model=jule::Any(_260517_c, &__jule_any_type19), ._field_Constant=_260517_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1bceba88b:;
			{
				jule::Ptr<_1a6cde8d5_Const> _261417_c = static__1a6ce093b_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				(*(_261417_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_untyped=true, ._field_Kind=_1ac93ec49_primF32, ._field_Model=jule::Any(_261417_c, &__jule_any_type19), ._field_Constant=_261417_c});;
			}
		}
		else {
			_case_begin_1bceb9b21:;
			{
				_1ac826603_pushErr(_self_, _258936_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("f32", 3), &__jule_any_type4),jule::Any((*(_258936_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bceb9abb:;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac8405b7_evalF64TypeStatic(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac6b2e62_Token> _262836_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_262836_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bcebea27:;
			{
				jule::Ptr<_1a6cde8d5_Const> _263517_c = static__1a6ce093b_NewF64(jule::MAX_F64);;
				(*(_263517_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_untyped=true, ._field_Kind=_1ac940013_primF64, ._field_Model=jule::Any(_263517_c, &__jule_any_type19), ._field_Constant=_263517_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1bcec0e35:;
			{
				jule::Ptr<_1a6cde8d5_Const> _264417_c = static__1a6ce093b_NewF64(jule::MIN_F64);;
				(*(_264417_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_untyped=true, ._field_Kind=_1ac940013_primF64, ._field_Model=jule::Any(_264417_c, &__jule_any_type19), ._field_Constant=_264417_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1bcec0e9b:;
			{
				jule::Ptr<_1a6cde8d5_Const> _265317_c = static__1a6ce093b_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				(*(_265317_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_untyped=true, ._field_Kind=_1ac940013_primF64, ._field_Model=jule::Any(_265317_c, &__jule_any_type19), ._field_Constant=_265317_c});;
			}
		}
		else {
			_case_begin_1bcec0242:;
			{
				_1ac826603_pushErr(_self_, _262836_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("f64", 3), &__jule_any_type4),jule::Any((*(_262836_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bcec01dc:;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac8409b3_evalPrimStatic(_1ac8260a3_Eval* _self_, jule::Str _266733_kind, jule::Ptr<_1ac6b2e62_Token> _266744_ident) {
	{
		auto &_match_expr{ _266733_kind };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1bcec0484:;
			{
				return _1ac83cebb_evalIntTypeStatic(_self_, _266744_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1bcec480c:;
			{
				return _1ac83d30c_evalUintTypeStatic(_self_, _266744_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1bcec4873:;
			{
				return _1ac83d64d_evalI8TypeStatic(_self_, _266744_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1bcec48d9:;
			{
				return _1ac83d98e_evalI16TypeStatic(_self_, _266744_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1bcec4950:;
			{
				return _1ac83dcd0_evalI32TypeStatic(_self_, _266744_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1bcec5555:;
			{
				return _1ac83e121_evalI64TypeStatic(_self_, _266744_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1bcec55bb:;
			{
				return _1ac83e462_evalU8TypeStatic(_self_, _266744_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1bcec5632:;
			{
				return _1ac83e7a3_evalU16TypeStatic(_self_, _266744_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1bcec5698:;
			{
				return _1ac83eae4_evalU32TypeStatic(_self_, _266744_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1bcec570e:;
			{
				return _1ac83ee35_evalU64TypeStatic(_self_, _266744_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1bcec5775:;
			{
				return _1ac840276_evalF32TypeStatic(_self_, _266744_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1bcec57db:;
			{
				return _1ac8405b7_evalF64TypeStatic(_self_, _266744_ident);;
			}
		}
		else {
			_case_begin_1bcec4653:;
			{
				_1ac826603_pushErr(_self_, _266744_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_266733_kind, &__jule_any_type4),jule::Any((*(_266744_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bcec45ed:;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac840dae_evalTypeStatic(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac8243ae_Data> _269937_d, jule::Ptr<_1ac6d0ac8_SubIdentExpr> _269951_si) {
	{
		
		if ((_1ac85c183_Prim((*(_269937_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcec9b42:;
			{
				return _1ac8409b3_evalPrimStatic(_self_, _1ac86294c_Str(_1ac85c183_Prim((*(_269937_d))._field_Kind.ptr()).ptr()), (*(_269951_si))._field_Ident);;
			}
		}
		else if ((_1ac85c936_Enum((*(_269937_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bceca857:;
			{
				return _1ac83b30a_evalEnumStatic(_self_, _1ac85c936_Enum((*(_269937_d))._field_Kind.ptr()), (*(_269951_si))._field_Ident);;
			}
		}
		else if ((_1ac85cbbc_TypeEnum((*(_269937_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bceca8bd:;
			{
				return _1ac83b706_evalTypeEnumStatic(_self_, _1ac85cbbc_TypeEnum((*(_269937_d))._field_Kind.ptr()), (*(_269951_si))._field_Ident);;
			}
		}
		else if ((_1ac85d706_Struct((*(_269937_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bceca934:;
			{
				return _1ac83bb02_evalStructStatic(_self_, _1ac85d706_Struct((*(_269937_d))._field_Kind.ptr()), (*(_269951_si))._field_Ident);;
			}
		}
		else {
			_case_begin_1bcec978a:;
			{
				_1ac826603_pushErr(_self_, (*(_269951_si))._field_Ident, jule::Str::lit("type @ is not supports sub-defines", 34), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_269937_d))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bcec96be:;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1bced26e9_comptimeObjSubIdent(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac73deee_comptimeTypeInfo>* _271557_ct, jule::Ptr<_1ac8243ae_Data>* _271577_d, jule::Ptr<_1ac6d0ac8_SubIdentExpr>* _271588_si) {
	jule::Ptr<_1ac8243ae_Data> _271613_cd = _1ac745203_subIdent((*(_271557_ct)), &((*((*((*(_271588_si))))._field_Ident))._field_Kind));;
	if ((_271613_cd == nullptr)) {
		_1ac826603_pushErr(_self_, (*((*(_271588_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*((*(_271577_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_271588_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _271613_cd;;
}

inline jule::Ptr<_1ac8243ae_Data> _1bced6ca3_comptimeObjSubIdent(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac730089_comptimeStructField>* _271557_ct, jule::Ptr<_1ac8243ae_Data>* _271577_d, jule::Ptr<_1ac6d0ac8_SubIdentExpr>* _271588_si) {
	jule::Ptr<_1ac8243ae_Data> _271613_cd = _1ac73193c_subIdent((*(_271557_ct)), &((*((*((*(_271588_si))))._field_Ident))._field_Kind));;
	if ((_271613_cd == nullptr)) {
		_1ac826603_pushErr(_self_, (*((*(_271588_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*((*(_271577_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_271588_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _271613_cd;;
}

inline jule::Ptr<_1ac8243ae_Data> _1bcedb318_comptimeObjSubIdent(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac736601_comptimeEnumField>* _271557_ct, jule::Ptr<_1ac8243ae_Data>* _271577_d, jule::Ptr<_1ac6d0ac8_SubIdentExpr>* _271588_si) {
	jule::Ptr<_1ac8243ae_Data> _271613_cd = _1ac73768a_subIdent((*(_271557_ct)), &((*((*((*(_271588_si))))._field_Ident))._field_Kind));;
	if ((_271613_cd == nullptr)) {
		_1ac826603_pushErr(_self_, (*((*(_271588_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*((*(_271577_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_271588_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _271613_cd;;
}

inline jule::Ptr<_1ac8243ae_Data> _1bcee08c2_comptimeObjSubIdent(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac739093_comptimeParam>* _271557_ct, jule::Ptr<_1ac8243ae_Data>* _271577_d, jule::Ptr<_1ac6d0ac8_SubIdentExpr>* _271588_si) {
	jule::Ptr<_1ac8243ae_Data> _271613_cd = _1ac73aeeb_subIdent((*(_271557_ct)), &((*((*((*(_271588_si))))._field_Ident))._field_Kind));;
	if ((_271613_cd == nullptr)) {
		_1ac826603_pushErr(_self_, (*((*(_271588_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*((*(_271577_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_271588_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _271613_cd;;
}

inline jule::Ptr<_1ac8243ae_Data> _1bcee507a_comptimeObjSubIdent(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac733345_comptimeStatic>* _271557_ct, jule::Ptr<_1ac8243ae_Data>* _271577_d, jule::Ptr<_1ac6d0ac8_SubIdentExpr>* _271588_si) {
	jule::Ptr<_1ac8243ae_Data> _271613_cd = _1ac734c70_subIdent((*(_271557_ct)), &((*((*((*(_271588_si))))._field_Ident))._field_Kind));;
	if ((_271613_cd == nullptr)) {
		_1ac826603_pushErr(_self_, (*((*(_271588_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*((*(_271577_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_271588_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _271613_cd;;
}

inline jule::Ptr<_1ac8243ae_Data> _1bcee95e0_comptimeObjSubIdent(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac745511_comptimeValue>* _271557_ct, jule::Ptr<_1ac8243ae_Data>* _271577_d, jule::Ptr<_1ac6d0ac8_SubIdentExpr>* _271588_si) {
	jule::Ptr<_1ac8243ae_Data> _271613_cd = _1ac747a52_subIdent((*(_271557_ct)), &((*((*((*(_271588_si))))._field_Ident))._field_Kind));;
	if ((_271613_cd == nullptr)) {
		_1ac826603_pushErr(_self_, (*((*(_271588_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*((*(_271577_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_271588_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _271613_cd;;
}

inline jule::Ptr<_1ac8243ae_Data> _1bceedb55_comptimeObjSubIdent(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac74945a_comptimeFile>* _271557_ct, jule::Ptr<_1ac8243ae_Data>* _271577_d, jule::Ptr<_1ac6d0ac8_SubIdentExpr>* _271588_si) {
	jule::Ptr<_1ac8243ae_Data> _271613_cd = _1ac74ad96_subIdent((*(_271557_ct)), &((*((*((*(_271588_si))))._field_Ident))._field_Kind));;
	if ((_271613_cd == nullptr)) {
		_1ac826603_pushErr(_self_, (*((*(_271588_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*((*(_271577_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_271588_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _271613_cd;;
}



inline __jule_tuple_x_1ac8243ae_Data__jule_tuple_bool _1ac841761_tryComptimeObjSubIdent(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac8243ae_Data>* _272346_d, jule::Ptr<_1ac6d0ac8_SubIdentExpr> _272360_si) {
	__jule_tuple_x_1ac8243ae_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((_1ac860a49_comptimeTypeInfo((*((*(_272346_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bced0a8d:;
			{
				jule::Ptr<_1ac73deee_comptimeTypeInfo> _272617_ct = _1ac860a49_comptimeTypeInfo((*((*(_272346_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1bced26e9_comptimeObjSubIdent(_self_, &(_272617_ct), _272346_d, &(_272360_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ac85e75c_comptimeStructField((*((*(_272346_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bced06d6:;
			{
				jule::Ptr<_1ac730089_comptimeStructField> _272917_ct = _1ac85e75c_comptimeStructField((*((*(_272346_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1bced6ca3_comptimeObjSubIdent(_self_, &(_272917_ct), _272346_d, &(_272360_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ac85ec79_comptimeEnumField((*((*(_272346_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bced074c:;
			{
				jule::Ptr<_1ac736601_comptimeEnumField> _273217_ct = _1ac85ec79_comptimeEnumField((*((*(_272346_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1bcedb318_comptimeObjSubIdent(_self_, &(_273217_ct), _272346_d, &(_272360_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ac860296_comptimeParam((*((*(_272346_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bced07b3:;
			{
				jule::Ptr<_1ac739093_comptimeParam> _273517_ct = _1ac860296_comptimeParam((*((*(_272346_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1bcee08c2_comptimeObjSubIdent(_self_, &(_273517_ct), _272346_d, &(_272360_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ac861066_comptimeStatic((*((*(_272346_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bced0829:;
			{
				jule::Ptr<_1ac733345_comptimeStatic> _273817_ct = _1ac861066_comptimeStatic((*((*(_272346_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1bcee507a_comptimeObjSubIdent(_self_, &(_273817_ct), _272346_d, &(_272360_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ac8612ec_comptimeValue((*((*(_272346_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bced0e12:;
			{
				jule::Ptr<_1ac745511_comptimeValue> _274117_ct = _1ac8612ec_comptimeValue((*((*(_272346_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1bcee95e0_comptimeObjSubIdent(_self_, &(_274117_ct), _272346_d, &(_272360_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ac861583_comptimeFile((*((*(_272346_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bced0e78:;
			{
				jule::Ptr<_1ac74945a_comptimeFile> _274417_ct = _1ac861583_comptimeFile((*((*(_272346_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1bceedb55_comptimeObjSubIdent(_self_, &(_274417_ct), _272346_d, &(_272360_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1bced0670:;
			{
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		_match_end_1bced05a4:;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac841b5c_evalObjSubIdent(_1ac8260a3_Eval* _self_, jule::Ptr<_1ac8243ae_Data> _275138_d, jule::Ptr<_1ac6d0ac8_SubIdentExpr> _275152_si) {
	if (_1ac6b58c1_IsIgnoreIdent((*((*(_275152_si))._field_Ident))._field_Kind)) {
		_1ac826603_pushErr(_self_, (*(_275152_si))._field_Ident, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		jule::Ptr<_1ac8243ae_Data> _275817_compData;;
		jule::Bool _275827_ok = false;;
		({
			__jule_tuple_x_1ac8243ae_Data__jule_tuple_bool __jule_assign_result = _1ac841761_tryComptimeObjSubIdent(_self_, &(_275138_d), _275152_si);
			_275817_compData = __jule_assign_result.__jule_result_arg0;
			_275827_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_275827_ok) {
			return _275817_compData;;
		};
	};
	jule::Ptr<_1ac859a32_TypeKind> _276413_kind = (*(_275138_d))._field_Kind;;
	{
		
		if ((_1ac85c6a0_Ptr((*(_275138_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd003e8a:;
			{
				jule::Ptr<_1ac8698ee_Ptr> _276713_ptr = _1ac85c6a0_Ptr((*(_275138_d))._field_Kind.ptr());;
				if (_1ac86a438_IsUnsafe(_276713_ptr.ptr())) {
					goto _match_end_1bd003e13;
				};
				if ((!(_1ac8270e8_isUnsafe(_self_)))) {
					_1ac826603_pushErr(_self_, (*(_275152_si))._field_Ident, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				_276413_kind=(*(_1ac85c6a0_Ptr((*(_275138_d))._field_Kind.ptr())))._field_Elem;
				_1ac856d4d_makeImplicitDeref(&(_275138_d), (*(_275152_si))._field_Ident);
			}
		}
		else if ((_1ac85c419_Sptr((*(_275138_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd004012:;
			{
				_276413_kind=(*(_1ac85c419_Sptr((*(_275138_d))._field_Kind.ptr())))._field_Elem;
				_1ac856d4d_makeImplicitDeref(&(_275138_d), (*(_275152_si))._field_Ident);
			}
		}
		_match_end_1bd003e13:;
	};
	{
		
		if ((_1ac85d98c_Trait((*(_275138_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd00729b:;
			{
				return _1ac83c0a8_evalTraitSubIdent(_self_, _275138_d, _1ac85d98c_Trait((*(_275138_d))._field_Kind.ptr()), (*(_275152_si))._field_Ident);;
			}
		}
		else if ((_1ac85d706_Struct(_276413_kind.ptr()) != nullptr)) {
			_case_begin_1bd007323:;
			{
				jule::Ptr<_1ac702105_StructIns> _278513_s = _1ac85d706_Struct(_276413_kind.ptr());;
				if (_1ac84e4d8_isInstancedStruct(_278513_s)) {
					jule::Bool _278721_usedReferenceElem = (_1ac85c419_Sptr((*(_275138_d))._field_Kind.ptr()) != nullptr);;
					return _1ac83cb7a_evalStructSubIdent(_self_, _275138_d, _1ac85d706_Struct(_276413_kind.ptr()), _275152_si, _278721_usedReferenceElem);;
				};
			}
		}
		_match_end_1bd007e06:;
	};
	_1ac826603_pushErr(_self_, (*(_275152_si))._field_Ident, jule::Str::lit("object @ is not supports sub-defines", 36), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_275138_d))._field_Kind.ptr()), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac841e9d_evalSubIdent(jule::Ptr<_1ac8260a3_Eval> _self_, jule::Ptr<_1ac6d0ac8_SubIdentExpr> _279536_si) {
	jule::Ptr<_1ac859a32_TypeKind> _279613_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_279613_prefix;
	});;
	jule::Ptr<_1ac8243ae_Data> _279913_d = _1ac8434ee_evalExprKind(_self_, (*((*(_279536_si))._field_Expr))._field_Kind);;
	if ((_279913_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_279913_d))._field_Decl) {
		return _1ac840dae_evalTypeStatic(_self_.ptr(), _279913_d, _279536_si);;
	};
	return _1ac841b5c_evalObjSubIdent(_self_.ptr(), _279913_d, _279536_si);;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac8422de_evalTuple(jule::Ptr<_1ac8260a3_Eval> _self_, jule::Ptr<_1ac6cd686_TupleExpr> _280933_tup) {
	jule::Ptr<_1ac8676ee_Tuple> _281013_tupT = jule::new_ptr<_1ac8676ee_Tuple>();;
	(*(_281013_tupT))._field_Types=jule::Slice<jule::Ptr<_1ac859a32_TypeKind>>::alloc(0LL, (*(_280933_tup))._field_Expr.len());
	jule::Ptr<_1ac70bc03_TupleExprModel> _281313_model = jule::new_ptr<_1ac70bc03_TupleExprModel>(_1ac70bc03_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_1ac8243ae_Data>>::alloc(0LL, (*(_280933_tup))._field_Expr.len())});;
	jule::Bool _281713_ok = true;;
	{
		auto expr = &((*(_280933_tup))._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd011edc:;
		if (it != expr_end) {
			jule::Ptr<_1ac6cc9b5_Expr> _281821_expr = *it;
			{
				jule::Ptr<_1ac8243ae_Data> _281917_d = _1ac844313_evalExpr(_self_, _281821_expr);;
				if ((_281917_d == nullptr)) {
					_281713_ok=false;
					goto _iter_next_1bd011edc;
				};
				{ jule::Slice<jule::Ptr<_1ac859a32_TypeKind>> &__jule_push_dest = (*(_281013_tupT))._field_Types; __jule_push_dest.push((*(_281917_d))._field_Kind); };
				{ jule::Slice<jule::Ptr<_1ac8243ae_Data>> &__jule_push_dest = (*(_281313_model))._field_Datas; __jule_push_dest.push(_281917_d); };
			}
			_iter_next_1bd011edc:;
			++it;
			goto _iter_begin_1bd011edc;
		}
		_iter_end_1bd011edc:;
	};
	if ((!(_281713_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(_281013_tupT, 23)}), ._field_Model=jule::Any(_281313_model, &__jule_any_type81), });;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac8426da_evalMap(jule::Ptr<_1ac8260a3_Eval> _self_, jule::Ptr<_1ac86829e_Map> _283831_m, jule::Ptr<_1ac6d2eb5_BraceLit> _283844_lit) {
	jule::Ptr<_1ac709abe_MapExprModel> _283913_model = jule::new_ptr<_1ac709abe_MapExprModel>(_1ac709abe_MapExprModel{._field_KeyKind=(*(_283831_m))._field_Key, ._field_ValKind=(*(_283831_m))._field_Val, });;
	{
		auto expr = &((*(_283844_lit))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd015c5a:;
		if (it != expr_end) {
			jule::Ptr<_1ac6cc9b5_Expr> _284421_expr = *it;
			{
				{
					auto &_match_expr{ (*(_284421_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type78) {
						_case_begin_1bd016343:;
						{
							goto _match_end_1bd016651;
						}
					}
					else {
						_case_begin_1bd0166a6:;
						{
							_1ac826603_pushErr(_self_.ptr(), (*(_283844_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1bd016651:;
				};
				jule::Ptr<_1ac6d37e0_KeyValPair> _285417_pair = (*(_284421_expr))._field_Kind.cast_ptr<_1ac6d37e0_KeyValPair>(&__jule_any_type78);;
				jule::Ptr<_1ac8243ae_Data> _285617_key = _1ac844313_evalExpr(_self_, (*(_285417_pair))._field_Key);;
				if ((_285617_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1ac8243ae_Data> _286117_val = _1ac844313_evalExpr(_self_, (*(_285417_pair))._field_Val);;
				if ((_286117_val == nullptr)) {
					return nullptr;;
				};
				_1ac7a33c6_checkAssignType((*(_self_))._field_s, false, &((*(_283831_m))._field_Key), &(_285617_key), (*(_285417_pair))._field_Colon);
				_1ac7a33c6_checkAssignType((*(_self_))._field_s, false, &((*(_283831_m))._field_Val), &(_286117_val), (*(_285417_pair))._field_Colon);
				{ jule::Slice<jule::Ptr<_1ac709618_KeyValPairExprModel>> &__jule_push_dest = (*(_283913_model))._field_Entries; __jule_push_dest.push(jule::new_ptr<_1ac709618_KeyValPairExprModel>(_1ac709618_KeyValPairExprModel{._field_Key=(*(_285617_key))._field_Model, ._field_Val=(*(_286117_val))._field_Model})); };
			}
			_iter_next_1bd015c5a:;
			++it;
			goto _iter_begin_1bd015c5a;
		}
		_iter_end_1bd015c5a:;
	};
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(_283831_m, 24)}), ._field_Mutable=true, ._field_Model=jule::Any(_283913_model, &__jule_any_type98), });;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac842a2b_evalBraceLit(jule::Ptr<_1ac8260a3_Eval> _self_, jule::Ptr<_1ac6d2eb5_BraceLit> _288236_lit) {
	{
		
		if (((*(_self_))._field_prefix == nullptr)) {
			_case_begin_1bd01c514:;
			{
				_1ac826603_pushErr(_self_.ptr(), (*(_288236_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1ac85dc23_Map((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1bd01cd50:;
			{
				return _1ac8426da_evalMap(_self_, _1ac85dc23_Map((*(_self_))._field_prefix.ptr()), _288236_lit);;
			}
		}
		else if ((_1ac85d706_Struct((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1bd01cdb6:;
			{
				return _1ac838dda_evalStructLitExplicit(_self_, _1ac85d706_Struct((*(_self_))._field_prefix.ptr()), (*(_288236_lit))._field_Exprs, (*(_288236_lit))._field_Token);;
			}
		}
		else {
			_case_begin_1bd01c16d:;
			{
				_1ac826603_pushErr(_self_.ptr(), (*(_288236_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bd01b27c:;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac842d6c_evalAnonFunc(jule::Ptr<_1ac8260a3_Eval> _self_, jule::Ptr<_1ac6da341_FnDecl> _289736_decl) {
	_1ac86b8e0_typeChecker _289813_tc = _1ac86b8e0_typeChecker{._field_s=(*(_self_))._field_s, ._field_rootLookup=(*(_self_))._field_lookup, ._field_lookup=(*(_self_))._field_lookup, };;
	jule::Ptr<_1ac717170_FnIns> _290313_ins = _1ac8735b7_buildFunc(&_289813_tc, _289736_decl);;
	if ((_290313_ins == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1bd0226c3:;
			{
				jule::Ptr<_1ac75d42a_scopeChecker> _290917_sc = (*(_self_))._field_lookup.cast_ptr<_1ac75d42a_scopeChecker>(0);;
				jule::Ptr<_1ac75d42a_scopeChecker> _291017_scc = _1ac76edba_newChildChecker(_290917_sc);;
				(*(_291017_scc))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1ac75be84_scopeLabel>>>(nullptr);
				(*(_291017_scc))._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1ac75c517_scopeGoto>>>(nullptr);
				(*(_291017_scc))._field_owner=nullptr;
				(*(_291017_scc))._field_childIndex=0LL;
				(*(_291017_scc))._field_it=0LLU;
				(*(_291017_scc))._field_cse=0LLU;
				(*(_291017_scc))._field_owner=_290313_ins;
				_1ac7b5839_checkFnInsSc((*(_self_))._field_s.ptr(), &(_290313_ins), &(_291017_scc));
			}
		}
		else {
			_case_begin_1bd022cbc:;
			{
				_1ac7b5e55_checkFnIns((*(_self_))._field_s, &(_290313_ins));
			}
		}
		_match_end_1bd022bac:;
	};
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(_290313_ins, 1)}), ._field_Model=jule::Any(jule::new_ptr<_1ac70923e_AnonFnExprModel>(_1ac70923e_AnonFnExprModel{._field_Func=_290313_ins, ._field_Global=_1ac82737e_isGlobal(_self_.ptr())}), &__jule_any_type99), });;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac8431ad_evalBinary(jule::Ptr<_1ac8260a3_Eval> _self_, jule::Ptr<_1ac6d107e_BinaryExpr> _293234_op) {
	_1ac846766_binaryEval _293313_bs = static__1ac846d4e_newPlain(_self_);;
	if (((*(_self_))._field_prefix != nullptr)) {
		jule::Ptr<_1ac86260b_Prim> _293613_prim = _1ac85c183_Prim((*(_self_))._field_prefix.ptr());;
		if (((_293613_prim == nullptr) || (!(_1a6cde2db_IsNum(_1ac86294c_Str(_293613_prim.ptr())))))) {
			jule::Ptr<_1ac859a32_TypeKind> _293821_prefix = (*(_self_))._field_prefix;;
			(*(_self_))._field_prefix=nullptr;
			__JULE_DEFER({
				(*(_self_))._field_prefix=_293821_prefix;
			});;
			return _1ac84c7e4_eval(&_293313_bs, &(_293234_op));;
		};
	};
	return _1ac84c7e4_eval(&_293313_bs, &(_293234_op));;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac8434ee_evalExprKind(jule::Ptr<_1ac8260a3_Eval> _self_, jule::Any _294736_kind) {
	{
		auto &_match_expr{ _294736_kind };
		
		if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1bd02b1d2:;
			{
				jule::Ptr<_1ac6cccb2_RangeExpr> _295017_e = _294736_kind.cast_ptr<_1ac6cccb2_RangeExpr>(&__jule_any_type100);;
				return _1ac8434ee_evalExprKind(_self_, (*((*(_295017_e))._field_Expr))._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1bd02ada2:;
			{
				return _1ac828b33_evalLit(_self_.ptr(), _294736_kind.cast_ptr<_1ac6cda60_LitExpr>(&__jule_any_type101));;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1bd02b424:;
			{
				return _1ac82d86e_evalIdent(_self_.ptr(), _294736_kind.cast_ptr<_1ac6ce3e0_IdentExpr>(&__jule_any_type79));;
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1bd02b49b:;
			{
				return _1ac82dbb0_evalUnary(_self_, _294736_kind.cast_ptr<_1ac6cea72_UnaryExpr>(&__jule_any_type87));;
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1bd02b523:;
			{
				return _1ac82e001_evalVariadic(_self_, _294736_kind.cast_ptr<_1ac6cee4b_VariadicExpr>(&__jule_any_type75));;
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1bd02b59a:;
			{
				return _1ac82e342_evalUnsafe(_self_, _294736_kind.cast_ptr<_1ac6cde39_UnsafeExpr>(&__jule_any_type102));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1bd02b677:;
			{
				return _1ac82ee7a_evalSliceExpr(_self_, _294736_kind.cast_ptr<_1ac6d3ed8_SliceExpr>(&__jule_any_type93));;
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1bd02b6ee:;
			{
				return _1ac833621_evalIndexing(_self_, _294736_kind.cast_ptr<_1ac6d4978_IndexingExpr>(&__jule_any_type103));;
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1bd02b776:;
			{
				return _1ac834952_evalSlicing(_self_, _294736_kind.cast_ptr<_1ac6d50d8_SlicingExpr>(&__jule_any_type104));;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1bd02b7ed:;
			{
				return _1ac8385e3_evalCast(_self_, _294736_kind.cast_ptr<_1ac6d0325_CastExpr>(&__jule_any_type105));;
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1bd02b875:;
			{
				return _1ac838934_evalNsSelection(_self_.ptr(), _294736_kind.cast_ptr<_1ac6d06ee_NsSelectionExpr>(&__jule_any_type89));;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1bd02b8ec:;
			{
				return _1ac83922b_evalStructLit(_self_, _294736_kind.cast_ptr<_1ac6d2a0e_StructLit>(&__jule_any_type106));;
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1bd02b974:;
			{
				return _1ac839803_evalType(_self_.ptr(), _294736_kind.cast_ptr<_1ac6c8681_TypeDecl>(&__jule_any_type88));;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1bd02b9eb:;
			{
				return _1ac83ae0e_evalFnCall(_self_, _294736_kind.cast_ptr<_1ac6d16de_FnCallExpr>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1bd02ba73:;
			{
				return _1ac841e9d_evalSubIdent(_self_, _294736_kind.cast_ptr<_1ac6d0ac8_SubIdentExpr>(&__jule_any_type85));;
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1bd02baea:;
			{
				return _1ac8422de_evalTuple(_self_, _294736_kind.cast_ptr<_1ac6cd686_TupleExpr>(&__jule_any_type80));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1bd02bb72:;
			{
				return _1ac842a2b_evalBraceLit(_self_, _294736_kind.cast_ptr<_1ac6d2eb5_BraceLit>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1bd02bbe9:;
			{
				return _1ac842d6c_evalAnonFunc(_self_, _294736_kind.cast_ptr<_1ac6da341_FnDecl>(&__jule_any_type14));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1bd02bc71:;
			{
				return _1ac8431ad_evalBinary(_self_, _294736_kind.cast_ptr<_1ac6d107e_BinaryExpr>(&__jule_any_type109));;
			}
		}
		else {
			_case_begin_1bd02aee5:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd02ae29:;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac843840_eval1(jule::Ptr<_1ac8260a3_Eval> _self_, jule::Ptr<_1ac6cc9b5_Expr> _299529_expr) {
	jule::Ptr<_1ac8243ae_Data> _299613_d = _1ac8434ee_evalExprKind(_self_, (*(_299529_expr))._field_Kind);;
	if (((_299613_d == nullptr) || ((*(_299613_d))._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1ac85d470_Fn((*(_299613_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd03795d:;
			{
				jule::Ptr<_1ac717170_FnIns> _300317_f = _1ac85d470_Fn((*(_299613_d))._field_Kind.ptr());;
				if (_1ac718605_IsBuiltin(_300317_f.ptr())) {
					_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_299529_expr))._field_Token, jule::Str::lit("built-in functions should be invoked", 36), jule::Slice<jule::Any>());
					goto _match_end_1bd037089;
				};
				if (((*(_300317_f))._field_Generics.len() != (*((*(_300317_f))._field_Decl))._field_Generics.len())) {
					_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_299529_expr))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				};
				if (((!((*((*(_300317_f))._field_Decl))._field_Statically)) && _1ac714975_IsMethod((*(_300317_f))._field_Decl.ptr()))) {
					_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_299529_expr))._field_Token, jule::Str::lit("methods should be invoked", 25), jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1bd037089:;
	};
	return _299613_d;;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac843b81_eval(jule::Ptr<_1ac8260a3_Eval> _self_, jule::Ptr<_1ac6cc9b5_Expr> _302228_expr) {
	jule::Ptr<_1ac8243ae_Data> _302313_d = _1ac843840_eval1(_self_, _302228_expr);;
	if ((_302313_d == nullptr)) {
		return nullptr;;
	};
	if (((((*(_self_))._field_owner == nullptr) || (!((*((*(_self_))._field_owner))._field_Constant))) && _1ac85e240_comptime((*(_302313_d))._field_Kind.ptr()))) {
		_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), (*(_302228_expr))._field_Token, jule::Str::lit("compile-time evaluations cannot used as expression", 50), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _302313_d;;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac843ec2_evalExpr1(jule::Ptr<_1ac8260a3_Eval> _self_, jule::Ptr<_1ac6cc9b5_Expr> _303733_expr) {
	jule::Ptr<_1ac8243ae_Data> _303813_d = _1ac843840_eval1(_self_, _303733_expr);;
	{
		
		if ((_303813_d == nullptr)) {
			_case_begin_1bd040900:;
			{
				return nullptr;;
			}
		}
		else if ((*(_303813_d))._field_Decl) {
			_case_begin_1bd040977:;
			{
				_1ac826603_pushErr(_self_.ptr(), (*(_303733_expr))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1bd040834:;
			{
				return _303813_d;;
			}
		}
		_match_end_1bd0407bd:;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac844313_evalExpr(jule::Ptr<_1ac8260a3_Eval> _self_, jule::Ptr<_1ac6cc9b5_Expr> _305332_expr) {
	jule::Ptr<_1ac8243ae_Data> _305413_d = _1ac843b81_eval(_self_, _305332_expr);;
	{
		
		if ((_305413_d == nullptr)) {
			_case_begin_1bd042825:;
			{
				return nullptr;;
			}
		}
		else if ((*(_305413_d))._field_Decl) {
			_case_begin_1bd04289c:;
			{
				_1ac826603_pushErr(_self_.ptr(), (*(_305332_expr))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1bd042759:;
			{
				return _305413_d;;
			}
		}
		_match_end_1bd0426e3:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ac8260a3_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1ac8447ca_unaryEval static__1ac844c1a_new(jule::Ptr<_1ac8260a3_Eval> _307423_e) {
	return _1ac8447ca_unaryEval{._field_e=_307423_e, };;
}



inline void _1ac844e18_minus(_1ac8447ca_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1bd0444b4:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1ac85c183_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd044184:;
			{
				if ((!(_1a6cde2db_IsNum(_1ac859dea_Str((*((*(_self_))._field_d))._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1ac85d706_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd0441ea:;
			{
				if (((*(_1ac85d706_Struct((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1bd04411d:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1bd044096:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_1ac824c83_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1a6ce43e0_IsF64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1bd048be4:;
				{
					_1a6ce3422_SetF64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::F64>((-(_1a6ce1ce4_ReadF64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_1a6ce38a6_IsI64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1bd048c6b:;
				{
					_1a6ce2850_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((-(_1a6ce12aa_ReadI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_1a6ce3b3c_IsU64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1bd04885e:;
				{
					_1a6ce2850_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((-(_1a6ce207a_AsI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1bd0487e8:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.minus, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3112:17"));;
				}
			}
			_match_end_1bd04873d:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1ac7068ce_UnaryExprModel>(_1ac7068ce_UnaryExprModel{._field_Expr=jule::new_ptr<_1ac8243ae_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1ac845116_plus(_1ac8447ca_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1bd05412d:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1ac85c183_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd053ced:;
			{
				if ((!(_1a6cde2db_IsNum(_1ac859dea_Str((*((*(_self_))._field_d))._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1ac85d706_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd053d64:;
			{
				if (((*(_1ac85d706_Struct((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1bd053c87:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1bd053bbb:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_1ac824c83_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1a6ce43e0_IsF64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1bd05885d:;
				{
					_1a6ce3422_SetF64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::F64>((+(_1a6ce1ce4_ReadF64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_1a6ce38a6_IsI64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1bd0588d5:;
				{
					_1a6ce2850_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((+(_1a6ce12aa_ReadI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_1a6ce3b3c_IsU64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1bd0584c8:;
				{
					_1a6ce2850_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((+(_1a6ce207a_AsI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1bd058462:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.plus, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3157:17"));;
				}
			}
			_match_end_1bd0583a7:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1ac7068ce_UnaryExprModel>(_1ac7068ce_UnaryExprModel{._field_Expr=jule::new_ptr<_1ac8243ae_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1ac845314_caret(_1ac8447ca_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1bd05de3a:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1ac85c183_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd05db0a:;
			{
				if ((!(_1a6cddbd1_IsInt(_1ac859dea_Str((*((*(_self_))._field_d))._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1ac85d706_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd05db71:;
			{
				if (((*(_1ac85d706_Struct((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1bd05da94:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1bd05d9c8:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_1ac824c83_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1a6ce38a6_IsI64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1bd063659:;
				{
					_1a6ce2850_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((~(_1a6ce12aa_ReadI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_1a6ce3b3c_IsU64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1bd0636d1:;
				{
					_1a6ce2b08_SetU64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::U64>((~(_1a6ce1541_ReadU64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1bd06326e:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.caret, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3200:17"));;
				}
			}
			_match_end_1bd0631b4:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1ac7068ce_UnaryExprModel>(_1ac7068ce_UnaryExprModel{._field_Expr=jule::new_ptr<_1ac8243ae_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1ac845512_excl(_1ac8447ca_unaryEval* _self_) {
	jule::Ptr<_1ac86260b_Prim> _32149_t = _1ac85c183_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
	if (((_32149_t == nullptr) || (!(_1ac86580c_IsBool(_32149_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_1ac824c83_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1a6ce3dc3_IsBool((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1bd06982a:;
				{
					_1a6ce2db1_SetBool((*((*(_self_))._field_d))._field_Constant.ptr(), (!(_1a6ce17c7_ReadBool((*((*(_self_))._field_d))._field_Constant.ptr()))));
				}
			}
			else {
				_case_begin_1bd069451:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.excl, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3228:17"));;
				}
			}
			_match_end_1bd069385:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1ac7068ce_UnaryExprModel>(_1ac7068ce_UnaryExprModel{._field_Expr=jule::new_ptr<_1ac8243ae_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1ac845710_star(_1ac8447ca_unaryEval* _self_) {
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1ac7068ce_UnaryExprModel>(_1ac7068ce_UnaryExprModel{._field_Expr=jule::new_ptr<_1ac8243ae_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
	{
		
		if ((_1ac85c6a0_Ptr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd06d0ae:;
			{
				if ((!(_1ac8270e8_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1ac8698ee_Ptr> _325317_t = _1ac85c6a0_Ptr((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (_1ac86a438_IsUnsafe(_325317_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*((*(_self_))._field_d))._field_Kind=(*(_325317_t))._field_Elem;
				(*((*(_self_))._field_d))._field_Mutable=true;
			}
		}
		else if ((_1ac85c419_Sptr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd06cc90:;
			{
				(*((*(_self_))._field_d))._field_Kind=(*(_1ac85c419_Sptr((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Elem;
			}
		}
		else {
			_case_begin_1bd06cc29:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1bd06bcb1:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*((*(_self_))._field_d))._field_untyped=false;
	(*((*(_self_))._field_d))._field_Lvalue=true;
}



inline void _1ac84590d_amper(_1ac8447ca_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1bd07666c:;
			{
				jule::Ptr<_1ac7072a3_StructLitExprModel> _327517_lit = (*((*(_self_))._field_d))._field_Model.cast_ptr<_1ac7072a3_StructLitExprModel>(&__jule_any_type94);;
				_1ac84d64c_makeStructLitAlloc(&((*(_self_))._field_d), &(_327517_lit));
			}
		}
		else {
			_case_begin_1bd073b86:;
			{
				{
					
					if (_1ac87591b_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1bd073746:;
						{
							(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(jule::new_ptr<_1ac8698ee_Ptr>(_1ac8698ee_Ptr{._field_Elem=(*((*(_self_))._field_d))._field_Kind}), 26)});
							(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1ac7068ce_UnaryExprModel>(_1ac7068ce_UnaryExprModel{._field_Expr=jule::new_ptr<_1ac8243ae_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
						}
					}
					else {
						_case_begin_1bd0741c5:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_1bd074109:;
				};
			}
		}
		_match_end_1bd073b31:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*((*(_self_))._field_d))._field_untyped=false;
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
}



inline void _1ac845b0b_typeDecl(_1ac8447ca_unaryEval* _self_) {
	_1ac86b8e0_typeChecker _330013_tc = _1ac86b8e0_typeChecker{._field_s=(*((*(_self_))._field_e))._field_s, ._field_rootLookup=(*((*(_self_))._field_e))._field_lookup, ._field_lookup=(*((*(_self_))._field_e))._field_lookup, ._field_errorToken=(*((*(_self_))._field_u))._field_Op, };;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1bd07853c:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(_1ac871cd0_buildPtrFromType(&_330013_tc, &((*((*(_self_))._field_d))._field_Kind)), 26)});
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Kind, &__jule_any_type83);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1bd07b9a2:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(_1ac87164d_buildSptrFromType(&_330013_tc, &((*((*(_self_))._field_d))._field_Kind)), 21)});
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Kind, &__jule_any_type83);
			}
		}
		else {
			_case_begin_1bd079cbe:;
			{
				_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str::lit("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_u))._field_Op))._field_Kind, &__jule_any_type4),jule::Any(_1ac859dea_Str((*((*(_self_))._field_d))._field_Kind.ptr()), &__jule_any_type4)}));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1bd079c69:;
	};
	(*((*(_self_))._field_d))._field_Decl=true;
}



inline void _1ac845d09_evalData(_1ac8447ca_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1bd07e9e9:;
			{
				jule::Ptr<_1ac859a32_TypeKind> _332517_prefix = (*((*(_self_))._field_e))._field_prefix;;
				(*((*(_self_))._field_e))._field_prefix=nullptr;
				(*(_self_))._field_d=_1ac843b81_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
				(*((*(_self_))._field_e))._field_prefix=_332517_prefix;
			}
		}
		else {
			_case_begin_1bd080115:;
			{
				(*(_self_))._field_d=_1ac843b81_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
			}
		}
		_match_end_1bd08006b:;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac84614a_eval(_1ac8447ca_unaryEval* _self_, jule::Ptr<_1ac6cea72_UnaryExpr> _333427_u) {
	(*(_self_))._field_u=_333427_u;
	_1ac845d09_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*((*(_self_))._field_d))._field_Decl) {
		_1ac845b0b_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1ac859a32_TypeKind> _33459_kind = (*((*(_self_))._field_d))._field_Kind;;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1bd084acb:;
			{
				_1ac844e18_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1bd084b42:;
			{
				_1ac845116_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1bd084ba8:;
			{
				_1ac845314_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1bd084c1e:;
			{
				_1ac845512_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1bd08523b:;
			{
				_1ac845710_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1bd0852a2:;
			{
				_1ac84590d_amper(_self_);
			}
		}
		else {
			_case_begin_1bd084a65:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1bd084a10:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1bd085329:;
			{
				_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str::lit("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_u))._field_Op))._field_Kind, &__jule_any_type4),jule::Any(_1ac859dea_Str(_33459_kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		else if (_1ac824c83_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1bd086a01:;
			{
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Constant, &__jule_any_type19);
			}
		}
		_match_end_1bd08699b:;
	};
	return (*(_self_))._field_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac8447ca_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1ac846766_binaryEval static__1ac846d4e_newPlain(jule::Ptr<_1ac8260a3_Eval> _338228_e) {
	return _1ac846766_binaryEval{._field_e=_338228_e, };;
}



inline _1ac846766_binaryEval static__1ac847190_new(jule::Ptr<_1ac8260a3_Eval> _338823_e, jule::Ptr<_1ac6b2e62_Token> _338837_op) {
	return _1ac846766_binaryEval{._field_e=_338823_e, ._field_op=_338837_op};;
}



inline jule::Bool _1ac847426_checkTypeCompatibility(_1ac846766_binaryEval* _self_) {
	return _1ac7a4707_checkTypeCompatibility1((*((*(_self_))._field_e))._field_s, &((*((*(_self_))._field_l))._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));;
}



inline jule::Bool _1ac8476ac_checkStructCommonOperatorCompatibility(_1ac846766_binaryEval* _self_) {
	jule::Ptr<_1ac717170_FnIns> _340217_overload = nullptr;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1bd08b7b4:;
			{
				_340217_overload=(*(_1ac85d706_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1bd08bc7b:;
			{
				_340217_overload=(*(_1ac85d706_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1bd08bce2:;
			{
				_340217_overload=(*(_1ac85d706_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Add;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1bd08bd58:;
			{
				_340217_overload=(*(_1ac85d706_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1bd08bdbe:;
			{
				_340217_overload=(*(_1ac85d706_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Div;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1bd08d40e:;
			{
				_340217_overload=(*(_1ac85d706_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1bd08d475:;
			{
				_340217_overload=(*(_1ac85d706_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1bd08d4db:;
			{
				_340217_overload=(*(_1ac85d706_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1bd08d552:;
			{
				_340217_overload=(*(_1ac85d706_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1bd08d5b8:;
			{
				_340217_overload=(*(_1ac85d706_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1bd08bc15:;
			{
				_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ac859dea_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return false;;
			}
		}
		_match_end_1bd08bbb0:;
	};
	if ((_340217_overload == nullptr)) {
		_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ac859dea_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
		return false;;
	};
	jule::Ptr<_1ac7161c4_ParamIns> _343413_p = (*(_340217_overload))._field_Params[1LL];;
	return _1ac7a33c6_checkAssignType((*((*(_self_))._field_e))._field_s, (*((*(_343413_p))._field_Decl))._field_Reference, &((*(_343413_p))._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op);;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac847943_evalComptimeTypeInfo(_1ac846766_binaryEval* _self_) {
	jule::Ptr<_1ac73deee_comptimeTypeInfo> _343913_r = _1ac860a49_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((_343913_r == nullptr)) {
		_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("comptimeTypeInfo", 16), &__jule_any_type4),jule::Any(_1ac859dea_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ac73deee_comptimeTypeInfo> _344413_l = _1ac860a49_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1bd09b395:;
			{
				jule::Ptr<_1a6cde8d5_Const> _344717_constant = static__1a6ce03a8_NewBool(_1ac85a23b_Equal((*(_344413_l))._field_base, (*(_343913_r))._field_base));;
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c63c_primBool, ._field_Model=jule::Any(_344717_constant, &__jule_any_type19), ._field_Constant=_344717_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bd09cc6a:;
			{
				jule::Ptr<_1a6cde8d5_Const> _345417_constant = static__1a6ce03a8_NewBool((!(_1ac85a23b_Equal((*(_344413_l))._field_base, (*(_343913_r))._field_base))));;
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c63c_primBool, ._field_Model=jule::Any(_345417_constant, &__jule_any_type19), ._field_Constant=_345417_constant});;
			}
		}
		else {
			_case_begin_1bd09b6d6:;
			{
				_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ac859dea_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bd09b681:;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac847bc9_evalNil(_1ac846766_binaryEval* _self_) {
	if ((!(_1ac85b8d0_NilCompatible((*((*(_self_))._field_r))._field_Kind.ptr())))) {
		_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4),jule::Any(_1ac859dea_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bd0a0894:;
			{
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c63c_primBool, });;
			}
		}
		else {
			_case_begin_1bd0a1ea0:;
			{
				_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bd0a1e4a:;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac847e60_evalEnum(_1ac846766_binaryEval* _self_) {
	jule::Ptr<_1ac729c54_Enum> _348513_enm = _1ac85c936_Enum((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bd0a4425:;
			{
				jule::Ptr<_1ac859a32_TypeKind> _348917_rkind = (*((*(_self_))._field_r))._field_Kind;;
				if ((_1ac85c936_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
					_348917_rkind=(*((*(_1ac85c936_Enum((*((*(_self_))._field_r))._field_Kind.ptr())))._field_Kind))._field_Kind;
				};
				if ((!(_1ac7a3d33_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*((*(_348513_enm))._field_Kind))._field_Kind), &(_348917_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c63c_primBool, });;
			}
		}
		_match_end_1bd0a43ae:;
	};
	if (((_1ac85c936_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) == nullptr) || (_348513_enm != _1ac85c936_Enum((*((*(_self_))._field_r))._field_Kind.ptr())))) {
		_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any((*(_348513_enm))._field_Ident, &__jule_any_type4),jule::Any(_1ac859dea_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1bd0a3732:;
			{
				if ((!(_1a6cde2db_IsNum(_1ac859dea_Str((*((*(_348513_enm))._field_Kind))._field_Kind.ptr()))))) {
					_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*(_348513_enm))._field_Ident, &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c63c_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1bd0aaae1:;
			{
				jule::Ptr<_1ac7291d7_EnumItem> _351913_first = (*(_348513_enm))._field_Items[0LL];;
				{
					
					if (_1a6ce38a6_IsI64((*((*((*(_351913_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1bd0ade24:;
						{
							if ((_1a6ce12aa_ReadI64((*((*((*(_351913_first))._field_Value))._field_Data))._field_Constant.ptr()) == 0LL)) {
								goto _julec_label_1bd0b34ab;
							};
							goto _julec_label_1bd0b0244;
						}
					}
					else if (_1a6ce3b3c_IsU64((*((*((*(_351913_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1bd0ade9b:;
						{
							if ((_1a6ce1541_ReadU64((*((*((*(_351913_first))._field_Value))._field_Data))._field_Constant.ptr()) == 0LLU)) {
								goto _julec_label_1bd0b34ab;
							};
							goto _julec_label_1bd0b0244;
						}
					}
					else {
						_case_begin_1bd0ada39:;
						{
							jule::panic(jule::Str::lit("unimplemented enum type, this panic call should be unreachable", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:3532:17"));;
						}
					}
					_match_end_1bd0ad9c3:;
				};
				_julec_label_1bd0b0244:;
				_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("the @ enum type is not supports @ operator", 42), jule::Slice<jule::Any>::make({jule::Any((*(_348513_enm))._field_Ident, &__jule_any_type4),jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				_1ac826966_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str::lit("define default enum field (the first one is default) with zero value to use & operator", 86), jule::Slice<jule::Any>());
				_julec_label_1bd0b34ab:;
				goto _case_begin_1bd0aab57;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1bd0aab57:;
			{
				if (((_1ac85c183_Prim((*((*(_348513_enm))._field_Kind))._field_Kind.ptr()) == nullptr) || (!(_1a6cddbd1_IsInt(_1ac86294c_Str(_1ac85c183_Prim((*((*(_348513_enm))._field_Kind))._field_Kind.ptr()).ptr())))))) {
					_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*(_348513_enm))._field_Ident, &__jule_any_type4)}));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1bd0a98ae:;
			{
				_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*(_348513_enm))._field_Ident, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bd0a9859:;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac8481e6_evalTypeEnum(_1ac846766_binaryEval* _self_) {
	jule::Ptr<_1ac72b45e_TypeEnum> _355213_enm = _1ac85cbbc_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr());;
	if ((!(_1ac847426_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bd0b8703:;
			{
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c63c_primBool, });;
			}
		}
		else {
			_case_begin_1bd0b7a76:;
			{
				_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ac72b7a0_Str(_355213_enm.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bd0b833a:;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac84847c_evalSptr(_1ac846766_binaryEval* _self_) {
	if ((!(_1ac847426_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bd0b988b:;
			{
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c63c_primBool, });;
			}
		}
		else {
			_case_begin_1bd0ba606:;
			{
				_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ac859dea_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bd0ba5a1:;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac848713_evalPtr(_1ac846766_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1bd0bc1a7:;
			{
				if ((!(_1ac847426_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c63c_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1bd0bdc03:;
			{
				if ((_1ac85c6a0_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) == nullptr)) {
					std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				};
				if (_1ac86a438_IsUnsafe(_1ac85c6a0_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()).ptr())) {
					_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ac859dea_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				};
				if ((!(_1ac84e85c_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is incompatible to use for pointer arithmetic", 52), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1bd0bc075:;
			{
				_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ac859dea_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bd0bbecb:;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac848999_evalArr(_1ac846766_binaryEval* _self_) {
	if ((!(_1ac847426_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bd0be682:;
			{
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c63c_primBool, });;
			}
		}
		else {
			_case_begin_1bd0c4b0a:;
			{
				_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ac859dea_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bd0c4aa5:;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac848c30_evalSlc(_1ac846766_binaryEval* _self_) {
	if ((!(_1ac847426_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bd0c6359:;
			{
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c63c_primBool, });;
			}
		}
		else {
			_case_begin_1bd0c70c4:;
			{
				_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ac859dea_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bd0c706e:;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac848eb6_evalStruct(_1ac846766_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1bd0c91b4:;
			{
				if (((*(_1ac85d706_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Gt == nullptr)) {
					_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ac859dea_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c63c_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1bd0c922a:;
			{
				if (((*(_1ac85d706_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_GtEq == nullptr)) {
					_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ac859dea_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c63c_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1bd0c9291:;
			{
				if (((*(_1ac85d706_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Lt == nullptr)) {
					_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ac859dea_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c63c_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1bd0c9318:;
			{
				if (((*(_1ac85d706_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_LtEq == nullptr)) {
					_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ac859dea_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c63c_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bd0c9390:;
			{
				if ((!(_1ac847426_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c63c_primBool, });;
			}
		}
		_match_end_1bd0c8999:;
	};
	if ((!(_1ac8476ac_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac84924c_evalTrait(_1ac846766_binaryEval* _self_) {
	if ((!(_1ac847426_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bd0d3d7d:;
			{
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c63c_primBool, });;
			}
		}
		else {
			_case_begin_1bd0d4697:;
			{
				_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ac859dea_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bd0d4642:;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac8494d3_evalAny(_1ac846766_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bd0d6248:;
			{
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c63c_primBool, });;
			}
		}
		else {
			_case_begin_1bd0d6116:;
			{
				_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("any", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bd0d606c:;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac849769_evalBool(_1ac846766_binaryEval* _self_) {
	if ((!(_1ac847426_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(54LLU) || _match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1bd0d79ca:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1bd0d8745:;
			{
				_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ac859dea_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bd0d86e0:;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac849a00_evalStr(_1ac846766_binaryEval* _self_) {
	jule::Str _375113_rk = _1ac859dea_Str((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((!_375113_rk.equal("str", 3))) {
		_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_375113_rk, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1bd0dd21c:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1bd0dd283:;
			{
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c63c_primBool, });;
			}
		}
		else {
			_case_begin_1bd0db3a2:;
			{
				_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("str", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bd0dc10b:;
	};
}



inline void _1ac849bed_setTypeToGreater(_1ac846766_binaryEval* _self_) {
	jule::Ptr<_1ac86260b_Prim> _37769_lp = _1ac85c183_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	jule::Ptr<_1ac86260b_Prim> _37779_rp = _1ac85c183_Prim((*((*(_self_))._field_r))._field_Kind.ptr());;
	if (_1ac824c83_IsConst((*(_self_))._field_l.ptr())) {
		if ((!(_1ac824c83_IsConst((*(_self_))._field_r.ptr())))) {
			(*((*(_self_))._field_l))._field_Kind=(*((*(_self_))._field_r))._field_Kind;
			(*((*((*(_self_))._field_l))._field_Constant))._field_Kind=(*(_37779_rp))._field_Kind;
			return;;
		};
		goto _julec_label_1bd0e2ab2;
	};
	if (_1ac824c83_IsConst((*(_self_))._field_r.ptr())) {
		(*((*((*(_self_))._field_r))._field_Constant))._field_Kind=(*(_37769_lp))._field_Kind;
		return;;
	};
	_julec_label_1bd0e2ab2:;
	if (((*((*(_self_))._field_l))._field_untyped && (!((*((*(_self_))._field_r))._field_untyped)))) {
		(*((*(_self_))._field_l))._field_Kind=(*((*(_self_))._field_r))._field_Kind;
		if (_1ac824c83_IsConst((*(_self_))._field_l.ptr())) {
			(*((*((*(_self_))._field_l))._field_Constant))._field_Kind=(*(_37779_rp))._field_Kind;
		};
		(*((*(_self_))._field_l))._field_untyped=false;
		return;;
	} else if (((!((*((*(_self_))._field_l))._field_untyped)) && (*((*(_self_))._field_r))._field_untyped)) {
		return;;
	};
	if (_1a6cdc51a_IsGreater((*(_37779_rp))._field_Kind, (*(_37769_lp))._field_Kind)) {
		(*((*(_self_))._field_l))._field_Kind=(*((*(_self_))._field_r))._field_Kind;
		if (_1ac824c83_IsConst((*(_self_))._field_l.ptr())) {
			(*((*((*(_self_))._field_l))._field_Constant))._field_Kind=(*(_37779_rp))._field_Kind;
		};
	};
}



inline void _1ac849ea6_checkModData(_1ac846766_binaryEval* _self_, jule::Ptr<_1ac8243ae_Data>* _380936_d) {
	if ((!(_1ac824c83_IsConst((*(_380936_d)).ptr())))) {
		if (((_1ac85c183_Prim((*((*(_380936_d))))._field_Kind.ptr()) == nullptr) || (!(_1a6cddbd1_IsInt((*(_1ac85c183_Prim((*((*(_380936_d))))._field_Kind.ptr())))._field_Kind))))) {
			_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1ac80a5b5_sigAssignable(jule::Str::lit("i64", 3), _380936_d)) {
			_case_begin_1bd0ea757:;
			{
				_1a6ce2850_SetI64((*((*(_380936_d))))._field_Constant.ptr(), static_cast<jule::I64>(_1a6ce207a_AsI64((*((*(_380936_d))))._field_Constant.ptr())));
			}
		}
		else if (_1ac80a97d_unsigAssignable(jule::Str::lit("u64", 3), _380936_d)) {
			_case_begin_1bd0ea449:;
			{
				_1a6ce2b08_SetU64((*((*(_380936_d))))._field_Constant.ptr(), static_cast<jule::U64>(_1a6ce2311_AsU64((*((*(_380936_d))))._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_1bd0ea3d3:;
			{
				_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bd0ea37d:;
	};
}



inline void _1ac84a1a4_mod(_1ac846766_binaryEval* _self_) {
	_1ac849ea6_checkModData(_self_, &((*(_self_))._field_l));
	_1ac849ea6_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1ac84a5a0_numbersAreCompatibile(_1ac846766_binaryEval* _self_, jule::Str* _383137_lk, jule::Str* _383147_rk) {
	if ((!(_1a6cde2db_IsNum((*(_383147_rk)))))) {
		return false;;
	};
	if ((_1ac824c83_IsConst((*(_self_))._field_l.ptr()) && (*((*(_self_))._field_l))._field_untyped)) {
		return true;;
	};
	if ((*(_383137_lk)).equal("f32", 3)) {
		if ((_1ac824c83_IsConst((*(_self_))._field_r.ptr()) && (*((*(_self_))._field_r))._field_untyped)) {
			return _1ac80a241_floatAssignable(_383137_lk, &((*(_self_))._field_r));;
		};
		return (*(_383147_rk)).equal("f32", 3);;
	};
	if ((*(_383137_lk)).equal("f64", 3)) {
		if ((_1ac824c83_IsConst((*(_self_))._field_r.ptr()) && (*((*(_self_))._field_r))._field_untyped)) {
			return _1ac80a241_floatAssignable(_383137_lk, &((*(_self_))._field_r));;
		};
		return (*(_383147_rk)).equal("f64", 3);;
	};
	if ((_1ac824c83_IsConst((*(_self_))._field_r.ptr()) && (*((*(_self_))._field_r))._field_untyped)) {
		return _1ac80ad02_intAssignable((*(_383137_lk)), &((*(_self_))._field_r));;
	};
	return ((*(_383137_lk)) == (*(_383147_rk)));;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac84a836_evalFloat(_1ac846766_binaryEval* _self_) {
	jule::Str _38579_lk = (*(_1ac85c183_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _38589_rk = (*(_1ac85c183_Prim((*((*(_self_))._field_r))._field_Kind.ptr())))._field_Kind;;
	if ((!(_1ac84a5a0_numbersAreCompatibile(_self_, &(_38579_lk), &(_38589_rk))))) {
		_1ac7a4251_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*((*(_self_))._field_l))._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1bd1056da:;
			{
				if (((!(_1ac824c83_IsConst((*(_self_))._field_l.ptr()))) || (!(_1ac80ad02_intAssignable(jule::Str::lit("i64", 3), &((*(_self_))._field_l)))))) {
					_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38579_lk, &__jule_any_type4),jule::Any(_38589_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				if (((!(_1ac824c83_IsConst((*(_self_))._field_r.ptr()))) || (!(_1ac80ad02_intAssignable(jule::Str::lit("u64", 3), &((*(_self_))._field_r)))))) {
					_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38579_lk, &__jule_any_type4),jule::Any(_38589_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				_1a6ce2850_SetI64((*((*(_self_))._field_l))._field_Constant.ptr(), static_cast<jule::I64>(_1a6ce207a_AsI64((*((*(_self_))._field_l))._field_Constant.ptr())));
				_1a6ce2b08_SetU64((*((*(_self_))._field_r))._field_Constant.ptr(), static_cast<jule::U64>(_1a6ce2311_AsU64((*((*(_self_))._field_r))._field_Constant.ptr())));
				if ((!(_1ac84e10e_isOkForShifting(&((*(_self_))._field_r))))) {
					_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1bd105674:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1bd105c7e:;
			{
				_1ac849bed_setTypeToGreater(_self_);
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c63c_primBool, });;
			}
		}
		_match_end_1bd105c29:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1bd104585:;
			{
				_1ac849bed_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1bd10d13d:;
			{
				if ((!(_1a6cddbd1_IsInt(_38589_rk)))) {
					_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38579_lk, &__jule_any_type4),jule::Any(_38589_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				_1ac84a1a4_mod(_self_);
				_1ac849bed_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1bd10c44a:;
			{
				_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for floating-point type(s)", 52), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bd10c3e5:;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac84aabc_evalInt(_1ac846766_binaryEval* _self_) {
	jule::Str _39219_lk = (*(_1ac85c183_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _39229_rk = (*(_1ac85c183_Prim((*((*(_self_))._field_r))._field_Kind.ptr())))._field_Kind;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1bd11187d:;
			{
				if (((!(_1a6cddbd1_IsInt(_39219_lk))) || (!(_1a6cddbd1_IsInt(_39229_rk))))) {
					_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_39219_lk, &__jule_any_type4),jule::Any(_39229_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				if ((!(_1ac84e10e_isOkForShifting(&((*(_self_))._field_r))))) {
					_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1bd111bd0:;
	};
	if ((!(_1ac84a5a0_numbersAreCompatibile(_self_, &(_39219_lk), &(_39229_rk))))) {
		_1ac7a4251_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*((*(_self_))._field_l))._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1bd115332:;
			{
				return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c63c_primBool, });;
			}
		}
		_match_end_1bd1152bb:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(65LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1bd111d34:;
			{
				_1ac849bed_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1bd1174cc:;
			{
				_1ac84a1a4_mod(_self_);
				_1ac849bed_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1bd116520:;
			{
				_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for integer type(s)", 45), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bd1164ba:;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac84ad53_evalPrim(_1ac846766_binaryEval* _self_) {
	jule::Ptr<_1ac86260b_Prim> _39789_prim = _1ac85c183_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		
		if (_1ac86580c_IsBool(_39789_prim.ptr())) {
			_case_begin_1bd11991e:;
			{
				return _1ac849769_evalBool(_self_);;
			}
		}
		else if (_1ac865a93_IsStr(_39789_prim.ptr())) {
			_case_begin_1bd119996:;
			{
				return _1ac849a00_evalStr(_self_);;
			}
		}
		_match_end_1bd119864:;
	};
	if ((_1ac85c183_Prim((*((*(_self_))._field_r))._field_Kind.ptr()) == nullptr)) {
		_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1ac86294c_Str(_39789_prim.ptr()), &__jule_any_type4),jule::Any(_1ac859dea_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		
		if (_1a6cde022_IsFloat((*(_39789_prim))._field_Kind)) {
			_case_begin_1bd11c328:;
			{
				return _1ac84a836_evalFloat(_self_);;
			}
		}
		else if (_1a6cddbd1_IsInt((*(_39789_prim))._field_Kind)) {
			_case_begin_1bd11c3a0:;
			{
				return _1ac84aabc_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1bd11c27e:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd119a51:;
	};
}



inline void _1ac84b051_checkSpecialCases(_1ac846766_binaryEval* _self_) {
	if (((!(_1ac85b12c_Comparable((*((*(_self_))._field_l))._field_Kind.ptr()))) && (!(_1ac85ab10_IsNil((*((*(_self_))._field_r))._field_Kind.ptr()))))) {
		_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
	} else if (((!(_1ac85b12c_Comparable((*((*(_self_))._field_r))._field_Kind.ptr()))) && (!(_1ac85ab10_IsNil((*((*(_self_))._field_l))._field_Kind.ptr()))))) {
		_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac84b2d7_evalOp(_1ac846766_binaryEval* _self_) {
	_1ac84b051_checkSpecialCases(_self_);
	{
		
		if (_1ac85ad96_Void((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_1bd1221a7:;
			{
				_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("void", 4), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		else if ((_1ac860a49_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd123b8c:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1bd123c03;
			}
		}
		else if ((_1ac860a49_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd123c03:;
			{
				return _1ac847943_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_1ac85c183_Prim((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr) && _1ac865d29_IsAny(_1ac85c183_Prim((*((*(_self_))._field_r))._field_Kind.ptr()).ptr()))) {
			_case_begin_1bd123d02:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1bd123d68;
			}
		}
		else if (_1ac85ab10_IsNil((*((*(_self_))._field_r))._field_Kind.ptr())) {
			_case_begin_1bd123d68:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1bd123dce;
			}
		}
		else if (_1ac85ab10_IsNil((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_1bd123dce:;
			{
				return _1ac847bc9_evalNil(_self_);;
			}
		}
		else if (((_1ac85c183_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr) && _1ac865d29_IsAny(_1ac85c183_Prim((*((*(_self_))._field_l))._field_Kind.ptr()).ptr()))) {
			_case_begin_1bd123e45:;
			{
				return _1ac8494d3_evalAny(_self_);;
			}
		}
		else if ((_1ac85cbbc_TypeEnum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd123eab:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1bd124022;
			}
		}
		else if ((_1ac85cbbc_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd124022:;
			{
				return _1ac8481e6_evalTypeEnum(_self_);;
			}
		}
		else if ((_1ac85c936_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd124088:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1bd1240ee;
			}
		}
		else if ((_1ac85c936_Enum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd1240ee:;
			{
				return _1ac847e60_evalEnum(_self_);;
			}
		}
		else if ((_1ac85c419_Sptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd124165:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1bd1241cb;
			}
		}
		else if ((_1ac85c419_Sptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd1241cb:;
			{
				return _1ac84847c_evalSptr(_self_);;
			}
		}
		else if ((_1ac85c6a0_Ptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd124242:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1bd1242a8;
			}
		}
		else if ((_1ac85c6a0_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd1242a8:;
			{
				return _1ac848713_evalPtr(_self_);;
			}
		}
		else if ((_1ac85ce53_Arr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd12431e:;
			{
				return _1ac848999_evalArr(_self_);;
			}
		}
		else if ((_1ac85d1d9_Slc((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd124385:;
			{
				return _1ac848c30_evalSlc(_self_);;
			}
		}
		else if ((_1ac85d98c_Trait((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd1243eb:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1bd124462;
			}
		}
		else if ((_1ac85d98c_Trait((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd124462:;
			{
				return _1ac84924c_evalTrait(_self_);;
			}
		}
		else if ((_1ac85d706_Struct((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd1244c8:;
			{
				return _1ac848eb6_evalStruct(_self_);;
			}
		}
		else if ((_1ac85c183_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd12453e:;
			{
				return _1ac84ad53_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1bd1225e7:;
			{
				_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ac859dea_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bd122592:;
	};
}



inline void _1ac84b590_evalConst(_1ac846766_binaryEval* _self_, jule::Ptr<_1ac8243ae_Data>* _406933_d) {
	{
		
		if (((*(_406933_d)) == nullptr) || ((*((*(_self_))._field_l))._field_Model == nullptr) || ((*((*(_self_))._field_r))._field_Model == nullptr)) {
			_case_begin_1bd136de2:;
			{
				return;;
			}
		}
		else if ((!(_1ac824c83_IsConst((*(_self_))._field_l.ptr()))) || (!(_1ac824c83_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1bd137475:;
			{
				(*((*(_406933_d))))._field_Constant=nullptr;
				(*((*(_406933_d))))._field_untyped=false;
				return;;
			}
		}
		_match_end_1bd136d04:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1bd138d28:;
			{
				(*((*(_406933_d))))._field_Constant=static__1a6ce03a8_NewBool(_1a6ce548a_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bd138d8e:;
			{
				(*((*(_406933_d))))._field_Constant=static__1a6ce03a8_NewBool((!(_1a6ce548a_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1bd139aa4:;
			{
				(*((*(_406933_d))))._field_Constant=static__1a6ce03a8_NewBool(_1a6ce5149_Or((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1bd139b1a:;
			{
				(*((*(_406933_d))))._field_Constant=static__1a6ce03a8_NewBool(_1a6ce4d08_And((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1bd139b81:;
			{
				(*((*(_406933_d))))._field_Constant=static__1a6ce03a8_NewBool(_1a6ce5e5d_Gt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1bd139be7:;
			{
				(*((*(_406933_d))))._field_Constant=static__1a6ce03a8_NewBool(_1a6ce57cb_Lt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1bd139c5d:;
			{
				(*((*(_406933_d))))._field_Constant=static__1a6ce03a8_NewBool(_1a6ce629e_GtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1bd139cc4:;
			{
				(*((*(_406933_d))))._field_Constant=static__1a6ce03a8_NewBool(_1a6ce5b1c_LtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1bd139d4b:;
			{
				_1a6ce65e0_Add((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_406933_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1bd139dc3:;
			{
				_1a6ce6931_Sub((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_406933_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1bd139e4a:;
			{
				_1a6ce6c72_Mul((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_406933_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1bd139ec2:;
			{
				jule::Bool _410913_ok = _1a6ce70b3_Div((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_410913_ok)) && (_1a6ce2597_AsF64((*((*(_self_))._field_r))._field_Constant.ptr()) == 0LL))) {
					_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_406933_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
				jule::Ptr<_1ac86260b_Prim> _411417_prim = _1ac85c183_Prim((*((*(_406933_d))))._field_Kind.ptr());;
				{
					
					if (_1a6cdd609_IsSigInt((*(_411417_prim))._field_Kind)) {
						_case_begin_1bd14a983:;
						{
							_1a6ce2850_SetI64((*((*(_406933_d))))._field_Constant.ptr(), static_cast<jule::I64>(_1a6ce207a_AsI64((*((*(_406933_d))))._field_Constant.ptr())));
						}
					}
					else if (_1a6cdd917_IsUnsigInt((*(_411417_prim))._field_Kind)) {
						_case_begin_1bd14aa0a:;
						{
							_1a6ce2b08_SetU64((*((*(_406933_d))))._field_Constant.ptr(), static_cast<jule::U64>(_1a6ce2311_AsU64((*((*(_406933_d))))._field_Constant.ptr())));
						}
					}
					_match_end_1bd14a8c8:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1bd13a049:;
			{
				jule::Bool _412213_ok = _1a6ce7404_Mod((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_412213_ok)) && (_1a6ce2597_AsF64((*((*(_self_))._field_r))._field_Constant.ptr()) == 0LL))) {
					_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_406933_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1bd13a0c1:;
			{
				_1a6ce7a86_BitwiseOr((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_406933_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1bd13a148:;
			{
				_1a6ce7745_BitwiseAnd((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_406933_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1bd13a1c0:;
			{
				_1a6ce7dc7_Xor((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_406933_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1bd13a247:;
			{
				_1a6ce8218_Lshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_406933_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1bd13a2be:;
			{
				_1a6ce8559_Rshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_406933_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		_match_end_1bd138cc3:;
	};
	(*((*(_406933_d))))._field_Model=jule::Any((*((*(_406933_d))))._field_Constant, &__jule_any_type19);
	_1ac8506e8_applyCastModelByEnum(_406933_d, _1ac85c936_Enum((*((*(_406933_d))))._field_Kind.ptr()));
}



inline void _1ac84b848_checkData(_1ac846766_binaryEval* _self_, jule::Ptr<_1ac8243ae_Data>* _414733_d) {
	jule::Ptr<_1ac717170_FnIns> _41489_f = _1ac85d470_Fn((*((*(_414733_d))))._field_Kind.ptr());;
	if ((((_41489_f != nullptr) && ((*(_41489_f))._field_Decl != nullptr)) && _1ac714975_IsMethod((*(_41489_f))._field_Decl.ptr()))) {
		_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("invalid expression used for binary operation", 44), jule::Slice<jule::Any>());
	};
}



inline void _1ac84ba46_checkDatas(_1ac846766_binaryEval* _self_) {
	_1ac84b848_checkData(_self_, &((*(_self_))._field_l));
	_1ac84b848_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1ac84bcee_setModel(_1ac846766_binaryEval* _self_, jule::Ptr<_1ac8243ae_Data>* _415932_d) {
	if (_1ac824c83_IsConst((*(_415932_d)).ptr())) {
		if (((_1ac824c83_IsConst((*(_self_))._field_l.ptr()) && _1ac824c83_IsConst((*(_self_))._field_r.ptr())) || (((*((*(_self_))._field_l))._field_Model == nullptr) && ((*((*(_self_))._field_r))._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_1ac8243ae_Data> _416813_l;;
	jule::Ptr<_1ac8243ae_Data> _416820_r;;
	({
		jule::Ptr<_1ac8243ae_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1ac8243ae_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_416813_l = ___jule_assign_arg;
		_416820_r = _1___jule_assign_arg;
	});
	if ((!(_1ac8250c4_GoodOperand(_416813_l.ptr(), &(_416820_r))))) {
		std::swap(_416813_l, _416820_r);
	};
	(*((*(_415932_d))))._field_Model=jule::Any(jule::new_ptr<_1ac706505_BinaryExprModel>(_1ac706505_BinaryExprModel{._field_Left=jule::new_ptr<_1ac70600a_OperandExprModel>(_1ac70600a_OperandExprModel{._field_Kind=(*(_416813_l))._field_Kind, ._field_Model=(*(_416813_l))._field_Model}), ._field_Right=jule::new_ptr<_1ac70600a_OperandExprModel>(_1ac70600a_OperandExprModel{._field_Kind=(*(_416820_r))._field_Kind, ._field_Model=(*(_416820_r))._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type111);
}



inline void _1ac84c0a7_postEval(_1ac846766_binaryEval* _self_, jule::Ptr<_1ac8243ae_Data>* _418632_d) {
	(*((*(_418632_d))))._field_Lvalue=false;
	_1ac84bcee_setModel(_self_, _418632_d);
}



inline jule::Ptr<_1ac8243ae_Data> _1ac84c4a3_solveExplicit(_1ac846766_binaryEval* _self_, jule::Ptr<_1ac8243ae_Data>* _419137_l, jule::Ptr<_1ac8243ae_Data>* _419152_r) {
	({
		jule::Ptr<_1ac8243ae_Data> ___jule_assign_arg = (*(_419137_l));
		jule::Ptr<_1ac8243ae_Data> _1___jule_assign_arg = (*(_419152_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1ac84ba46_checkDatas(_self_);
	jule::Ptr<_1ac8243ae_Data> _419613_d = _1ac84b2d7_evalOp(_self_);;
	({
		jule::Ptr<_1ac8243ae_Data> ___jule_assign_arg = (*(_419137_l));
		jule::Ptr<_1ac8243ae_Data> _1___jule_assign_arg = (*(_419152_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1ac84b590_evalConst(_self_, &(_419613_d));
	if ((_419613_d != nullptr)) {
		(*(_419613_d))._field_Mutable=true;
		_1ac84c0a7_postEval(_self_, &(_419613_d));
	};
	return _419613_d;;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac84c7e4_eval(_1ac846766_binaryEval* _self_, jule::Ptr<_1ac6d107e_BinaryExpr>* _421128_op) {
	if (((*((*((*(_421128_op))))._field_Op))._field_Id == static_cast<jule::U64>(71LLU))) {
		_1ac826603_pushErr((*(_self_))._field_e.ptr(), (*((*(_421128_op))))._field_Op, jule::Str::lit("assignments not available for expressions", 41), jule::Slice<jule::Any>());
		_1ac826966_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str::lit("use clear imperative approach, comes relevant assignment statement before the expression", 88), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac8243ae_Data> _421813_l = _1ac843ec2_evalExpr1((*(_self_))._field_e, (*((*(_421128_op))))._field_Left);;
	if (((_421813_l == nullptr) || ((*(_421813_l))._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1ac859a32_TypeKind> _422313_prefix = (*((*(_self_))._field_e))._field_prefix;;
	(*((*(_self_))._field_e))._field_prefix=(*(_421813_l))._field_Kind;
	__JULE_DEFER({
		(*((*(_self_))._field_e))._field_prefix=_422313_prefix;
	});;
	jule::Ptr<_1ac8243ae_Data> _422613_r = _1ac843ec2_evalExpr1((*(_self_))._field_e, (*((*(_421128_op))))._field_Right);;
	if (((_422613_r == nullptr) || ((*(_422613_r))._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*((*(_421128_op))))._field_Op;
	jule::Ptr<_1ac8243ae_Data> _423313_d = _1ac84c4a3_solveExplicit(_self_, &(_421813_l), &(_422613_r));;
	if ((((_423313_d != nullptr) && (*(_421813_l))._field_IsRune) && (*(_422613_r))._field_IsRune)) {
		(*(_423313_d))._field_IsRune=true;
	};
	return _423313_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac846766_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac85814b_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac858c40_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ac859dea_Str(_1ac859a32_TypeKind* _self_) {
	if (_1ac85ab10_IsNil(_self_)) {
		return jule::Str::lit("nil", 3);;
	};
	_1c164cc40_StrBuilder _7413_kind = static__1c164d191_New(16LL);;
	if ((*(_self_))._field_Variadic) {
		_1c164d702_WriteStr(&_7413_kind, jule::Str::lit("...", 3));
	};
	if (_1ac85a879_Binded(_self_)) {
		_1c164d702_WriteStr(&_7413_kind, jule::Str::lit("cpp.", 4));
		_1c164d702_WriteStr(&_7413_kind, (*(_self_))._field_BindIdent);
	} else {
		_1c164d702_WriteStr(&_7413_kind, _1ac85957b_Kind_mptr_data[((*(_self_))._field_Kind).type_offset]._1ac8590d6_Str((*(_self_))._field_Kind));
	};
	return _1c164dee9_Str(&_7413_kind);;
}



inline jule::Bool _1ac85a23b_Equal(jule::Ptr<_1ac859a32_TypeKind> _self_, jule::Ptr<_1ac859a32_TypeKind> _9021_other) {
	if (_1ac85ab10_IsNil(_self_.ptr())) {
		return _1ac85ab10_IsNil(_9021_other.ptr());;
	};
	if (_1ac85a879_Binded(_self_.ptr())) {
		return (_1ac85a879_Binded(_9021_other.ptr()) && ((*(_self_))._field_BindIdent == (*(_9021_other))._field_BindIdent));;
	};
	return _1ac85957b_Kind_mptr_data[((*(_self_))._field_Kind).type_offset]._1ac859427_Equal((*(_self_))._field_Kind, _9021_other);;
}



inline jule::Bool _1ac85a879_Binded(_1ac859a32_TypeKind* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _1ac85ab10_IsNil(_1ac859a32_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1ac85ad96_Void(_1ac859a32_TypeKind* _self_) {
	jule::Ptr<_1ac86260b_Prim> _1109_prim = _1ac85c183_Prim(&(*(_self_)));;
	return ((_1109_prim != nullptr) && (*(_1109_prim))._field_Kind.equal("void", 4));;
}



inline jule::Bool _1ac85b12c_Comparable(_1ac859a32_TypeKind* _self_) {
	{
		_1ac859a32_TypeKind* _11717__self = _self_;;
		if ((_1ac85d706_Struct(_11717__self) != nullptr)) {
			return (*(_1ac85d706_Struct(_11717__self)))._field_Comparable;;
		};
		return (((_1ac85dc23_Map(_11717__self) == nullptr) && (_1ac85d1d9_Slc(_11717__self) == nullptr)) && (_1ac85d470_Fn(_11717__self) == nullptr));;
	};
}



inline jule::Bool _1ac85b3b3_Mutable(_1ac859a32_TypeKind* _self_) {
	{
		_1ac859a32_TypeKind* _12817__self = _self_;;
		if ((_1ac85d706_Struct(_12817__self) != nullptr)) {
			return (*(_1ac85d706_Struct(_12817__self)))._field_Mutable;;
		};
		if ((_1ac85d98c_Trait(_12817__self) != nullptr)) {
			return true;;
		};
		if ((_1ac85c183_Prim(_12817__self) != nullptr)) {
			jule::Ptr<_1ac86260b_Prim> _13617_p = _1ac85c183_Prim(_12817__self);;
			return _1ac865d29_IsAny(_13617_p.ptr());;
		};
		if ((_1ac85ce53_Arr(_12817__self) != nullptr)) {
			return _1ac85b3b3_Mutable((*(_1ac85ce53_Arr(_12817__self)))._field_Elem.ptr());;
		};
		return (((_1ac85d1d9_Slc(_12817__self) != nullptr) || (_1ac85c6a0_Ptr(_12817__self) != nullptr)) || (_1ac85c419_Sptr(_12817__self) != nullptr));;
	};
}



inline jule::Bool _1ac85b649_Ordered(_1ac859a32_TypeKind* _self_) {
	{
		_1ac859a32_TypeKind* _15117__self = _self_;;
		jule::Ptr<_1ac86260b_Prim> _15213_prim = _1ac85c183_Prim(_15117__self);;
		if ((_15213_prim != nullptr)) {
			return (_1a6cde2db_IsNum((*(_15213_prim))._field_Kind) || _1ac865a93_IsStr(_15213_prim.ptr()));;
		};
		if ((_1ac85c6a0_Ptr(_15117__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_1ac702105_StructIns> _15913_s = _1ac85d706_Struct(_15117__self);;
		if ((_15913_s != nullptr)) {
			return (((((*(_15913_s))._field_Operators._field_Gt != nullptr) && ((*(_15913_s))._field_Operators._field_GtEq != nullptr)) && ((*(_15913_s))._field_Operators._field_Lt != nullptr)) && ((*(_15913_s))._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_1ac729c54_Enum> _16613_enm = _1ac85c936_Enum(_15117__self);;
		if ((_16613_enm != nullptr)) {
			return _1a6cde2db_IsNum(_1ac859dea_Str((*((*(_16613_enm))._field_Kind))._field_Kind.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _1ac85b8d0_NilCompatible(_1ac859a32_TypeKind* _self_) {
	{
		_1ac859a32_TypeKind* _17717__self = _self_;;
		jule::Ptr<_1ac86260b_Prim> _17913_prim = _1ac85c183_Prim(_17717__self);;
		if (((_17913_prim != nullptr) && _1ac865d29_IsAny(_17913_prim.ptr()))) {
			return true;;
		};
		return (((((((_1ac85ab10_IsNil(_17717__self) || (_1ac85d470_Fn(_17717__self) != nullptr)) || (_1ac85c419_Sptr(_17717__self) != nullptr)) || (_1ac85c6a0_Ptr(_17717__self) != nullptr)) || (_1ac85d98c_Trait(_17717__self) != nullptr)) || (_1ac85d1d9_Slc(_17717__self) != nullptr)) || (_1ac85dc23_Map(_17717__self) != nullptr)) || (_1ac85cbbc_TypeEnum(_17717__self) != nullptr));;
	};
}



inline jule::Bool _1ac85bb66_PerformsRC(_1ac859a32_TypeKind* _self_) {
	{
		_1ac859a32_TypeKind* _19817__self = _self_;;
		jule::Ptr<_1ac86260b_Prim> _19913_prim = _1ac85c183_Prim(_19817__self);;
		if ((_19913_prim != nullptr)) {
			return (_1ac865d29_IsAny(_19913_prim.ptr()) || _1ac865a93_IsStr(_19913_prim.ptr()));;
		};
		return (((_1ac85c419_Sptr(_19817__self) != nullptr) || (_1ac85d1d9_Slc(_19817__self) != nullptr)) || (_1ac85d98c_Trait(_19817__self) != nullptr));;
	};
}



inline jule::Bool _1ac85bdec_Variadicable(_1ac859a32_TypeKind* _self_) {
	{
		_1ac859a32_TypeKind* _21017__self = _self_;;
		return (_1ac85d1d9_Slc(_21017__self) != nullptr);;
	};
}



inline jule::Ptr<_1ac86260b_Prim> _1ac85c183_Prim(_1ac859a32_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 20)) {
			_case_begin_1bd1996e6:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac86260b_Prim>(20);;
			}
		}
		else {
			_case_begin_1bd199bbe:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd199b69:;
	};
}



inline jule::Ptr<_1ac866137_Sptr> _1ac85c419_Sptr(_1ac859a32_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 21)) {
			_case_begin_1bd19a31d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac866137_Sptr>(21);;
			}
		}
		else {
			_case_begin_1bd19aa6b:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd19aa16:;
	};
}



inline jule::Ptr<_1ac8698ee_Ptr> _1ac85c6a0_Ptr(_1ac859a32_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_1bd19ab15:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac8698ee_Ptr>(26);;
			}
		}
		else {
			_case_begin_1bd19b74d:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd19b6e8:;
	};
}



inline jule::Ptr<_1ac729c54_Enum> _1ac85c936_Enum(_1ac859a32_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1bd19b7e7:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac729c54_Enum>(3);;
			}
		}
		else {
			_case_begin_1bd19c430:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd19c3ca:;
	};
}



inline jule::Ptr<_1ac72b45e_TypeEnum> _1ac85cbbc_TypeEnum(_1ac859a32_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1bd19c4c9:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac72b45e_TypeEnum>(4);;
			}
		}
		else {
			_case_begin_1bd19d112:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd19d0ac:;
	};
}



inline jule::Ptr<_1ac868e2b_Arr> _1ac85ce53_Arr(_1ac859a32_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 25)) {
			_case_begin_1bd19d1ab:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac868e2b_Arr>(25);;
			}
		}
		else {
			_case_begin_1bd19dce4:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd19dc8e:;
	};
}



inline jule::Ptr<_1ac866b0a_Slc> _1ac85d1d9_Slc(_1ac859a32_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 22)) {
			_case_begin_1bd19dd8d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac866b0a_Slc>(22);;
			}
		}
		else {
			_case_begin_1bd19e9c6:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd19e971:;
	};
}



inline jule::Ptr<_1ac717170_FnIns> _1ac85d470_Fn(_1ac859a32_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_1bd19ea70:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac717170_FnIns>(1);;
			}
		}
		else {
			_case_begin_1bd1a06a8:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd1a0653:;
	};
}



inline jule::Ptr<_1ac702105_StructIns> _1ac85d706_Struct(_1ac859a32_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1bd1a0752:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac702105_StructIns>(0);;
			}
		}
		else {
			_case_begin_1bd1a138a:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd1a1335:;
	};
}



inline jule::Ptr<_1ac727548_Trait> _1ac85d98c_Trait(_1ac859a32_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 2)) {
			_case_begin_1bd1a1434:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac727548_Trait>(2);;
			}
		}
		else {
			_case_begin_1bd1a206c:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd1a2017:;
	};
}



inline jule::Ptr<_1ac86829e_Map> _1ac85dc23_Map(_1ac859a32_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 24)) {
			_case_begin_1bd1a2116:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac86829e_Map>(24);;
			}
		}
		else {
			_case_begin_1bd1a2c4e:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd1a2be9:;
	};
}



inline jule::Ptr<_1ac8676ee_Tuple> _1ac85dea9_Tup(_1ac859a32_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 23)) {
			_case_begin_1bd1a2ce8:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac8676ee_Tuple>(23);;
			}
		}
		else {
			_case_begin_1bd1a3931:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd1a38cb:;
	};
}



inline jule::Bool _1ac85e240_comptime(_1ac859a32_TypeKind* _self_) {
	return (((((((((((((_1ac8607b3_comptimeTypeInfos(_self_) != nullptr) || (_1ac860a49_comptimeTypeInfo(_self_) != nullptr)) || (_1ac85e4c6_comptimeStructFields(_self_) != nullptr)) || (_1ac85e75c_comptimeStructField(_self_) != nullptr)) || (_1ac85e9e3_comptimeEnumFields(_self_) != nullptr)) || (_1ac85ec79_comptimeEnumField(_self_) != nullptr)) || (_1ac860cd0_comptimeStatics(_self_) != nullptr)) || (_1ac861066_comptimeStatic(_self_) != nullptr)) || (_1ac860010_comptimeParams(_self_) != nullptr)) || (_1ac860296_comptimeParam(_self_) != nullptr)) || (_1ac8612ec_comptimeValue(_self_) != nullptr)) || (_1ac861819_comptimeFiles(_self_) != nullptr)) || (_1ac861583_comptimeFile(_self_) != nullptr));;
}



inline jule::Ptr<_1ac731c4a_comptimeStructFields> _1ac85e4c6_comptimeStructFields(_1ac859a32_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 7)) {
			_case_begin_1bd1a3a0d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac731c4a_comptimeStructFields>(7);;
			}
		}
		else {
			_case_begin_1bd1acc7b:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd1a7d86:;
	};
}



inline jule::Ptr<_1ac730089_comptimeStructField> _1ac85e75c_comptimeStructField(_1ac859a32_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 6)) {
			_case_begin_1bd1ad221:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac730089_comptimeStructField>(6);;
			}
		}
		else {
			_case_begin_1bd1ad5ea:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd1ad595:;
	};
}



inline jule::Ptr<_1ac737998_comptimeEnumFields> _1ac85e9e3_comptimeEnumFields(_1ac859a32_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 11)) {
			_case_begin_1bd1ade03:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac737998_comptimeEnumFields>(11);;
			}
		}
		else {
			_case_begin_1bd1ae2cc:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd1ae277:;
	};
}



inline jule::Ptr<_1ac736601_comptimeEnumField> _1ac85ec79_comptimeEnumField(_1ac859a32_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 10)) {
			_case_begin_1bd1aead5:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac736601_comptimeEnumField>(10);;
			}
		}
		else {
			_case_begin_1bd1aeeae:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd1aee59:;
	};
}



inline jule::Ptr<_1ac73b309_comptimeParams> _1ac860010_comptimeParams(_1ac859a32_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 13)) {
			_case_begin_1bd1b07b7:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac73b309_comptimeParams>(13);;
			}
		}
		else {
			_case_begin_1bd1b0b91:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd1b0b3b:;
	};
}



inline jule::Ptr<_1ac739093_comptimeParam> _1ac860296_comptimeParam(_1ac859a32_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 12)) {
			_case_begin_1bd1b0c3a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac739093_comptimeParam>(12);;
			}
		}
		else {
			_case_begin_1bd1b1873:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd1b181d:;
	};
}



inline jule::Ptr<_1ac72e5b6_comptimeRange> _1ac86052c_comptimeRange(_1ac859a32_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 5)) {
			_case_begin_1bd1b191c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac72e5b6_comptimeRange>(5);;
			}
		}
		else {
			_case_begin_1bd1b2555:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd1b2500:;
	};
}



inline jule::Ptr<_1ac73c904_comptimeTypeInfos> _1ac8607b3_comptimeTypeInfos(_1ac859a32_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 14)) {
			_case_begin_1bd1b25ee:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac73c904_comptimeTypeInfos>(14);;
			}
		}
		else {
			_case_begin_1bd1b3237:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd1b31d2:;
	};
}



inline jule::Ptr<_1ac73deee_comptimeTypeInfo> _1ac860a49_comptimeTypeInfo(_1ac859a32_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 15)) {
			_case_begin_1bd1b3a40:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac73deee_comptimeTypeInfo>(15);;
			}
		}
		else {
			_case_begin_1bd1b3e19:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd1b3db4:;
	};
}



inline jule::Ptr<_1ac735006_comptimeStatics> _1ac860cd0_comptimeStatics(_1ac859a32_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 9)) {
			_case_begin_1bd1b4722:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac735006_comptimeStatics>(9);;
			}
		}
		else {
			_case_begin_1bd1b4aeb:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd1b4a96:;
	};
}



inline jule::Ptr<_1ac733345_comptimeStatic> _1ac861066_comptimeStatic(_1ac859a32_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 8)) {
			_case_begin_1bd1b4b95:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac733345_comptimeStatic>(8);;
			}
		}
		else {
			_case_begin_1bd1b57cd:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd1b5778:;
	};
}



inline jule::Ptr<_1ac745511_comptimeValue> _1ac8612ec_comptimeValue(_1ac859a32_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 16)) {
			_case_begin_1bd1b5877:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac745511_comptimeValue>(16);;
			}
		}
		else {
			_case_begin_1bd1b64b0:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd1b645a:;
	};
}



inline jule::Ptr<_1ac74945a_comptimeFile> _1ac861583_comptimeFile(_1ac859a32_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 18)) {
			_case_begin_1bd1b6559:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac74945a_comptimeFile>(18);;
			}
		}
		else {
			_case_begin_1bd1b7192:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd1b713c:;
	};
}



inline jule::Ptr<_1ac747d60_comptimeFiles> _1ac861819_comptimeFiles(_1ac859a32_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 17)) {
			_case_begin_1bd1b723b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac747d60_comptimeFiles>(17);;
			}
		}
		else {
			_case_begin_1bd1b7d74:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd1b7d1e:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ac859a32_TypeKind _Src) {
	_Stream << _1ac859dea_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1ac862078_checked(_1ac861c04_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac861c04_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ac86294c_Str(_1ac86260b_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1ac862c8d_Equal(jule::Ptr<_1ac86260b_Prim> _self_, jule::Ptr<_1ac859a32_TypeKind> _50821_other) {
	jule::Ptr<_1ac86260b_Prim> _5099_prim = _1ac85c183_Prim(_50821_other.ptr());;
	if ((_5099_prim == nullptr)) {
		return false;;
	};
	return ((*(_self_))._field_Kind == (*(_5099_prim))._field_Kind);;
}



inline jule::Bool _1ac863233_IsConstraint(_1ac86260b_Prim* _self_) {
	return ((((!(_1ac865a93_IsStr(_self_))) && (!(_1ac865d29_IsAny(_self_)))) && (!(_1ac86580c_IsBool(_self_)))) && (!(_1a6cde2db_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1ac8634b9_IsI8(_1ac86260b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i8", 2);;
}



inline jule::Bool _1ac863750_IsI16(_1ac86260b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i16", 3);;
}



inline jule::Bool _1ac8639d6_IsI32(_1ac86260b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i32", 3);;
}



inline jule::Bool _1ac863c6c_IsI64(_1ac86260b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i64", 3);;
}



inline jule::Bool _1ac864003_IsU8(_1ac86260b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u8", 2);;
}



inline jule::Bool _1ac864289_IsU16(_1ac86260b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u16", 3);;
}



inline jule::Bool _1ac864520_IsU32(_1ac86260b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u32", 3);;
}



inline jule::Bool _1ac8647a6_IsU64(_1ac86260b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u64", 3);;
}



inline jule::Bool _1ac864a3c_IsF32(_1ac86260b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f32", 3);;
}



inline jule::Bool _1ac864cc3_IsF64(_1ac86260b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f64", 3);;
}



inline jule::Bool _1ac865059_IsInt(_1ac86260b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("int", 3);;
}



inline jule::Bool _1ac8652e0_IsUint(_1ac86260b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uint", 4);;
}



inline jule::Bool _1ac865576_IsUintptr(_1ac86260b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uintptr", 7);;
}



inline jule::Bool _1ac86580c_IsBool(_1ac86260b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("bool", 4);;
}



inline jule::Bool _1ac865a93_IsStr(_1ac86260b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("str", 3);;
}



inline jule::Bool _1ac865d29_IsAny(_1ac86260b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("any", 3);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac86260b_Prim _Src) {
	_Stream << _1ac86294c_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ac8664ab_Str(_1ac866137_Sptr* _self_) {
	return (jule::Str::lit("&", 1) + _1ac859dea_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1ac8667ec_Equal(jule::Ptr<_1ac866137_Sptr> _self_, jule::Ptr<_1ac859a32_TypeKind> _58521_other) {
	jule::Ptr<_1ac866137_Sptr> _5869_sptr = _1ac85c419_Sptr(_58521_other.ptr());;
	if ((_5869_sptr == nullptr)) {
		return false;;
	};
	return _1ac85a23b_Equal((*(_self_))._field_Elem, (*(_5869_sptr))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac866137_Sptr _Src) {
	_Stream << _1ac8664ab_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ac86708e_Str(_1ac866b0a_Slc* _self_) {
	return (jule::Str::lit("[]", 2) + _1ac859dea_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1ac8673d0_Equal(jule::Ptr<_1ac866b0a_Slc> _self_, jule::Ptr<_1ac859a32_TypeKind> _60421_other) {
	jule::Ptr<_1ac866b0a_Slc> _6059_slc = _1ac85d1d9_Slc(_60421_other.ptr());;
	if ((_6059_slc == nullptr)) {
		return false;;
	};
	return _1ac85a23b_Equal((*(_self_))._field_Elem, (*(_6059_slc))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac866b0a_Slc _Src) {
	_Stream << _1ac86708e_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ac867a73_Str(_1ac8676ee_Tuple* _self_) {
	_1c164cc40_StrBuilder _62113_s = static__1c164d191_New(16LL);;
	_1c164d9aa_WriteByte(&_62113_s, '(');
	_1c164d702_WriteStr(&_62113_s, _1ac859dea_Str((*(_self_))._field_Types[0LL].ptr()));
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1bd1c8505:;
		if (it != expr_end) {
			jule::Ptr<_1ac859a32_TypeKind> *_62416_t = it;
			{
				_1c164d9aa_WriteByte(&_62113_s, ',');
				_1c164d702_WriteStr(&_62113_s, _1ac859dea_Str((*(_62416_t)).ptr()));
			}
			_iter_next_1bd1c8505:;
			++it;
			goto _iter_begin_1bd1c8505;
		}
		_iter_end_1bd1c8505:;
	};
	_1c164d9aa_WriteByte(&_62113_s, ')');
	return _1c164dee9_Str(&_62113_s);;
}



inline jule::Bool _1ac867db4_Equal(jule::Ptr<_1ac8676ee_Tuple> _self_, jule::Ptr<_1ac859a32_TypeKind> _63321_other) {
	jule::Ptr<_1ac8676ee_Tuple> _6349_tup = _1ac85dea9_Tup(_63321_other.ptr());;
	if ((_6349_tup == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Types.len() != (*(_6349_tup))._field_Types.len())) {
		return false;;
	};
	jule::I64 _64113_i = 0LL;;
	for (; (_64113_i < (*(_self_))._field_Types.len()); (_64113_i)++) {
		{
			if ((!(_1ac85a23b_Equal((*(_self_))._field_Types[_64113_i], (*(_6349_tup))._field_Types[_64113_i])))) {
				return false;;
			};
		}
	_iter_next_1bd1cb4d6:;
	}
	_iter_end_1bd1cb4d6:;;
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac8676ee_Tuple _Src) {
	_Stream << _1ac867a73_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ac868623_Str(_1ac86829e_Map* _self_) {
	_1c164cc40_StrBuilder _66113_s = static__1c164d191_New(16LL);;
	_1c164d702_WriteStr(&_66113_s, jule::Str::lit("map[", 4));
	_1c164d702_WriteStr(&_66113_s, _1ac859dea_Str((*(_self_))._field_Key.ptr()));
	_1c164d9aa_WriteByte(&_66113_s, ']');
	_1c164d702_WriteStr(&_66113_s, _1ac859dea_Str((*(_self_))._field_Val.ptr()));
	return _1c164dee9_Str(&_66113_s);;
}



inline jule::Bool _1ac868964_Equal(jule::Ptr<_1ac86829e_Map> _self_, jule::Ptr<_1ac859a32_TypeKind> _67021_other) {
	jule::Ptr<_1ac86829e_Map> _6719_m = _1ac85dc23_Map(_67021_other.ptr());;
	if ((_6719_m == nullptr)) {
		return false;;
	};
	return (_1ac85a23b_Equal((*(_self_))._field_Key, (*(_6719_m))._field_Key) && _1ac85a23b_Equal((*(_self_))._field_Val, (*(_6719_m))._field_Val));;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac86829e_Map _Src) {
	_Stream << _1ac868623_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ac8692a0_Str(_1ac868e2b_Arr* _self_) {
	_1c164cc40_StrBuilder _68913_s = static__1c164d191_New(16LL);;
	_1c164d9aa_WriteByte(&_68913_s, '[');
	_1c164d702_WriteStr(&_68913_s, _1dbba39c8_Itoa((*(_self_))._field_N));
	_1c164d9aa_WriteByte(&_68913_s, ']');
	_1c164d702_WriteStr(&_68913_s, _1ac859dea_Str((*(_self_))._field_Elem.ptr()));
	return _1c164dee9_Str(&_68913_s);;
}



inline jule::Bool _1ac8695e1_Equal(jule::Ptr<_1ac868e2b_Arr> _self_, jule::Ptr<_1ac859a32_TypeKind> _69821_other) {
	jule::Ptr<_1ac868e2b_Arr> _6999_arr = _1ac85ce53_Arr(_69821_other.ptr());;
	if ((_6999_arr == nullptr)) {
		return false;;
	};
	return (((*(_self_))._field_N == (*(_6999_arr))._field_N) && _1ac85a23b_Equal((*(_self_))._field_Elem, (*(_6999_arr))._field_Elem));;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac868e2b_Arr _Src) {
	_Stream << _1ac8692a0_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ac869c73_Str(_1ac8698ee_Ptr* _self_) {
	if (_1ac86a438_IsUnsafe(_self_)) {
		return jule::Str::lit("*unsafe", 7);;
	};
	return (jule::Str::lit("*", 1) + _1ac859dea_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1ac86a0b4_Equal(jule::Ptr<_1ac8698ee_Ptr> _self_, jule::Ptr<_1ac859a32_TypeKind> _72221_other) {
	jule::Ptr<_1ac8698ee_Ptr> _7239_ptr = _1ac85c6a0_Ptr(_72221_other.ptr());;
	if ((_7239_ptr == nullptr)) {
		return false;;
	};
	return _1ac85a23b_Equal((*(_self_))._field_Elem, (*(_7239_ptr))._field_Elem);;
}



inline jule::Bool _1ac86a438_IsUnsafe(_1ac8698ee_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac8698ee_Ptr _Src) {
	_Stream << _1ac869c73_Str(&_Src);
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac86a900_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1ac86c12c_pushErr(_1ac86b8e0_typeChecker* _self_, jule::Ptr<_1ac6b2e62_Token> _80826_token, jule::Str _80841_fmt, jule::Slice<jule::Any> _80854_args) {
	_1ac79a8b8_pushErr((*(_self_))._field_s.ptr(), _80826_token, _80841_fmt, _80854_args);
}



inline void _1ac86c32a_allowBuiltin(_1ac86b8e0_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1ac86c528_disallowBuiltin(_1ac86b8e0_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _1bd1dad31_pushReference(_1ac86b8e0_typeChecker* _self_, jule::Ptr<_1ac702105_StructIns>* _82040_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1bcdac22d_Exist((*(_self_))._field_refers.ptr(), (*(_82040_t)))) {
		return;;
	};
	_1ac71b130_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_82040_t)), &__jule_any_type9));
}

inline void _1bd1dd718_pushReference(_1ac86b8e0_typeChecker* _self_, jule::Ptr<_1ac727548_Trait>* _82040_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1bd1e04a6_Exist((*(_self_))._field_refers.ptr(), (*(_82040_t)))) {
		return;;
	};
	_1ac71b130_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_82040_t)), &__jule_any_type10));
}



inline void _1ac86ca89_pushReferenceByKind(_1ac86b8e0_typeChecker* _self_, jule::Ptr<_1ac859a32_TypeKind>* _83043_k) {
	{
		
		if ((_1ac85d706_Struct((*(_83043_k)).ptr()) != nullptr)) {
			_case_begin_1bd1d9967:;
			{
				jule::Ptr<_1ac702105_StructIns> _83317_t = _1ac85d706_Struct((*(_83043_k)).ptr());;
				_1bd1dad31_pushReference(_self_, &(_83317_t));
			}
		}
		else if ((_1ac85d98c_Trait((*(_83043_k)).ptr()) != nullptr)) {
			_case_begin_1bd1d99de:;
			{
				jule::Ptr<_1ac727548_Trait> _83617_t = _1ac85d98c_Trait((*(_83043_k)).ptr());;
				_1bd1dd718_pushReference(_self_, &(_83617_t));
			}
		}
		_match_end_1bd1d9857:;
	};
}



inline void _1ac86cea7_pushCycleError(_1ac86b8e0_typeChecker* _self_, jule::Any _84129_def1, jule::Any _84140_def2, _1c164cc40_StrBuilder* _84156_message) {
	;
	jule::Fn<jule::Str(jule::Any*)> _8439_getIdent = jule::Fn<jule::Str(jule::Any*)>([=](jule::Any* _84325_def) mutable -> jule::Str {
		{
			auto &_match_expr{ (*(_84325_def)) };
			
			if (_match_expr.type == &__jule_any_type66) {
				_case_begin_1bd1e30e1:;
				{
					return (*((*(_84325_def)).cast_ptr<_1ac858c40_TypeAlias>(&__jule_any_type66)))._field_Ident;;
				}
			}
			else if (_match_expr.type == &__jule_any_type65) {
				_case_begin_1bd1e36a7:;
				{
					return (*((*(_84325_def)).cast_ptr<_1ac6ee377_Struct>(&__jule_any_type65)))._field_Ident;;
				}
			}
			else {
				_case_begin_1bd1e32bc:;
				{
					return jule::Str();;
				}
			}
			_match_end_1bd1e3267:;
		};
	});;
	jule::Str _8539_m = _1c164dee9_Str(_84156_message);;
	jule::Str _8549_def1Ident = _8439_getIdent(&(_84129_def1));;
	jule::Str _8559_def2Ident = _8439_getIdent(&(_84140_def2));;
	jule::Str _8569_refersTo = _1a756da9d_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_8549_def1Ident, &__jule_any_type4),jule::Any(_8559_def2Ident, &__jule_any_type4)}));;
	_1c164d702_WriteStr(_84156_message, _1a6938c27_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1c164d702_WriteStr(_84156_message, _8569_refersTo);
	_1c164d9aa_WriteByte(_84156_message, '\n');
	_1c164d702_WriteStr(_84156_message, _8539_m);
}



inline jule::Bool _1ac86d3a3_checkCrossCycle(_1ac86b8e0_typeChecker* _self_, jule::Any _86330_decl, _1c164cc40_StrBuilder* _86346_message) {
	{
		auto &_match_expr{ _86330_decl };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1bd1e67ed:;
			{
				jule::Ptr<_1ac858c40_TypeAlias> _86613_ta = _86330_decl.cast_ptr<_1ac858c40_TypeAlias>(&__jule_any_type66);;
				{
					auto expr = &((*(_86613_ta))._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd1e7755:;
					if (it != expr_end) {
						jule::Any *_86720_d = it;
						{
							{
								
								if (((*(_86720_d)) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1bd1e802a:;
									{
										_1ac86cea7_pushCycleError(_self_, jule::Any(_86613_ta, &__jule_any_type66), (*(_86720_d)), _86346_message);
										return false;;
									}
								}
								else if ((!(_1ac86d3a3_checkCrossCycle(_self_, (*(_86720_d)), _86346_message)))) {
									_case_begin_1bd1e80a2:;
									{
										_1ac86cea7_pushCycleError(_self_, jule::Any(_86613_ta, &__jule_any_type66), (*(_86720_d)), _86346_message);
										return false;;
									}
								}
								_match_end_1bd1e7e1a:;
							};
						}
						_iter_next_1bd1e7755:;
						++it;
						goto _iter_begin_1bd1e7755;
					}
					_iter_end_1bd1e7755:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1bd1e6864:;
			{
				jule::Ptr<_1ac6ee377_Struct> _87813_s = _86330_decl.cast_ptr<_1ac6ee377_Struct>(&__jule_any_type65);;
				{
					auto expr = &((*(_87813_s))._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd1e99aa:;
					if (it != expr_end) {
						jule::Ptr<_1ac6ee377_Struct> *_87920_d = it;
						{
							{
								
								if ((__jule_any_type65_compare((*((*(_self_))._field_referencer))._field_owner, (*(_87920_d))))) {
									_case_begin_1bd1ea280:;
									{
										_1ac86cea7_pushCycleError(_self_, jule::Any(_87813_s, &__jule_any_type65), jule::Any((*(_87920_d)), &__jule_any_type65), _86346_message);
										return false;;
									}
								}
								else if ((!(_1ac86d3a3_checkCrossCycle(_self_, jule::Any((*(_87920_d)), &__jule_any_type65), _86346_message)))) {
									_case_begin_1bd1ea307:;
									{
										_1ac86cea7_pushCycleError(_self_, jule::Any(_87813_s, &__jule_any_type65), jule::Any((*(_87920_d)), &__jule_any_type65), _86346_message);
										return false;;
									}
								}
								_match_end_1bd1ea170:;
							};
						}
						_iter_next_1bd1e99aa:;
						++it;
						goto _iter_begin_1bd1e99aa;
					}
					_iter_end_1bd1e99aa:;
				};
			}
		}
		_match_end_1bd1e6798:;
	};
	return true;;
}



inline jule::Bool _1ac86d79e_checkIllegalCycles(_1ac86b8e0_typeChecker* _self_, jule::Ptr<_1ac6c8c8b_IdentTypeDecl>* _89738_ident, jule::Any _89765_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _89765_decl };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1bd1ec21b:;
			{
				if ((*(_89765_decl.cast_ptr<_1ac6ee377_Struct>(&__jule_any_type65)))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1bd1ec282:;
			{
				if ((*(_89765_decl.cast_ptr<_1ac858c40_TypeAlias>(&__jule_any_type66)))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1bd1ec172:;
	};
	if ((_89765_decl == (*((*(_self_))._field_referencer))._field_owner)) {
		_1ac86c12c_pushErr(_self_, (*((*(_89738_ident))))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_referencer))._field_ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1c164cc40_StrBuilder _92013_message = static__1c164d191_New(32LL);;
	if ((!(_1ac86d3a3_checkCrossCycle(_self_, _89765_decl, &(_92013_message))))) {
		jule::Str _92317_errMsg = _1c164dee9_Str(&_92013_message);;
		_1c164e1e7_Clear(&_92013_message);
		_1ac86cea7_pushCycleError(_self_, (*((*(_self_))._field_referencer))._field_owner, _89765_decl, &(_92013_message));
		_92317_errMsg+=_1c164dee9_Str(&_92013_message);
		_1ac86c12c_pushErr(_self_, (*((*(_89738_ident))))._field_Token, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_92317_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1bd201918:;
			{
				{
					{ jule::Slice<jule::Any> *__jule_push_dest = (*((*(_self_))._field_referencer))._field_refs; __jule_push_dest->push(_89765_decl); };
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1bd20197e:;
			{
				{
					auto &_match_expr{ _89765_decl };
					
					if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1bd201e02:;
						{
							jule::Ptr<_1ac6ee377_Struct> _93921_s = (*((*(_self_))._field_referencer))._field_owner.cast_ptr<_1ac6ee377_Struct>(&__jule_any_type65);;
							{ jule::Slice<jule::Ptr<_1ac6ee377_Struct>> &__jule_push_dest = (*(_93921_s))._field_Depends; __jule_push_dest.push(_89765_decl.cast_ptr<_1ac6ee377_Struct>(&__jule_any_type65)); };
						}
					}
					_match_end_1bd201d9c:;
				};
			}
		}
		_match_end_1bd2018b3:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait<_1ac85957b_Kind> _1ac86db9a_fromTypeAlias(_1ac86b8e0_typeChecker* _self_, jule::Ptr<_1ac6c8c8b_IdentTypeDecl>* _94733_decl, jule::Ptr<_1ac858c40_TypeAlias>* _94760_ta) {
	if ((!(_1ac79b127_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_94760_ta))))._field_Public, (*((*(_94760_ta))))._field_Token)))) {
		_1ac86c12c_pushErr(_self_, (*((*(_94733_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_94733_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	(*((*(_94760_ta))))._field_Used=true;
	if (((*((*(_94733_decl))))._field_Generics.len() > 0LL)) {
		_1ac86c12c_pushErr(_self_, (*((*(_94733_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_94733_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd207358:;
			if (it != expr_end) {
				jule::Ptr<_1ac858c40_TypeAlias> _96420_bg = *it;
				{
					if (((_96420_bg == (*(_94760_ta))) || (((*((*((*(_94760_ta))))._field_Kind))._field_Kind != nullptr) && _1ac85a23b_Equal((*((*((*(_94760_ta))))._field_Kind))._field_Kind, (*((*(_96420_bg))._field_Kind))._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1bd207358;
					};
				}
				_iter_next_1bd207358:;
				++it;
				goto _iter_begin_1bd207358;
			}
			_iter_end_1bd207358:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd207ce8:;
			if (it != expr_end) {
				jule::Ptr<_1ac858c40_TypeAlias> _97520_bg = *it;
				{
					if ((_97520_bg == (*(_94760_ta)))) {
						_1ac86c12c_pushErr(_self_, (*((*(_94733_decl))))._field_Token, jule::Str::lit("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*((*(_94733_decl))))._field_Ident, &__jule_any_type4)}));
						return nullptr;;
					};
					{
						auto expr = &((*((*(_94760_ta))))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bd209e93:;
						if (it != expr_end) {
							jule::Ptr<_1ac858c40_TypeAlias> _98024_dg = *it;
							{
								if ((_97520_bg == _98024_dg)) {
									_1ac86c12c_pushErr(_self_, (*((*(_94733_decl))))._field_Token, jule::Str::lit("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*((*(_94733_decl))))._field_Ident, &__jule_any_type4)}));
									return nullptr;;
								};
							}
							_iter_next_1bd209e93:;
							++it;
							goto _iter_begin_1bd209e93;
						}
						_iter_end_1bd209e93:;
					};
				}
				_iter_next_1bd207ce8:;
				++it;
				goto _iter_begin_1bd207ce8;
			}
			_iter_end_1bd207ce8:;
		};
	};
	jule::Bool _98913_ok = _1ac86d79e_checkIllegalCycles(_self_, _94733_decl, jule::Any((*(_94760_ta)), &__jule_any_type66));;
	if ((!(_98913_ok))) {
		return nullptr;;
	};
	if (((*((*((*(_94760_ta))))._field_Kind))._field_Kind == nullptr)) {
		_98913_ok=_1ac7a7b5b_checkTypeAliasDeclKind((*(_self_))._field_s, _94760_ta, (*(_self_))._field_lookup);
		if ((!(_98913_ok))) {
			return nullptr;;
		};
	};
	if (((*((*(_94760_ta))))._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		{ jule::Slice<jule::Ptr<_1ac858c40_TypeAlias>> &__jule_push_dest = (*((*(_self_))._field_ownerAlias))._field_Generics; __jule_push_dest.push((*(_94760_ta))); };
	};
	jule::Ptr<_1ac859a32_TypeKind> _100813_tk = jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Generic=(*((*(_94760_ta))))._field_Generic, ._field_Kind=(*((*((*((*(_94760_ta))))._field_Kind))._field_Kind))._field_Kind});;
	_1ac86ca89_pushReferenceByKind(_self_, &(_100813_tk));
	if ((*((*(_94760_ta))))._field_Binded) {
		(*(_100813_tk))._field_BindIdent=(*((*(_94760_ta))))._field_Ident;
	} else {
		(*(_100813_tk))._field_BindIdent=(*((*((*((*(_94760_ta))))._field_Kind))._field_Kind))._field_BindIdent;
	};
	return jule::Trait<_1ac85957b_Kind>(_100813_tk, 19);;
}



inline jule::Ptr<_1ac729c54_Enum> _1ac86e096_fromEnum(_1ac86b8e0_typeChecker* _self_, jule::Ptr<_1ac6c8c8b_IdentTypeDecl>* _102128_decl, jule::Ptr<_1ac729c54_Enum>* _102155_e) {
	if ((!(_1ac79b127_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_102155_e))))._field_Public, (*((*(_102155_e))))._field_Token)))) {
		_1ac86c12c_pushErr(_self_, (*((*(_102128_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_102128_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_102128_decl))))._field_Generics.len() > 0LL)) {
		_1ac86c12c_pushErr(_self_, (*((*(_102128_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_102128_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_102155_e));;
}



inline jule::Ptr<_1ac72b45e_TypeEnum> _1ac86e492_fromTypeEnum(_1ac86b8e0_typeChecker* _self_, jule::Ptr<_1ac6c8c8b_IdentTypeDecl>* _103332_decl, jule::Ptr<_1ac72b45e_TypeEnum>* _103359_e) {
	if ((!(_1ac79b127_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_103359_e))))._field_Public, (*((*(_103359_e))))._field_Token)))) {
		_1ac86c12c_pushErr(_self_, (*((*(_103332_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_103332_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_103332_decl))))._field_Generics.len() > 0LL)) {
		_1ac86c12c_pushErr(_self_, (*((*(_103332_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_103332_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_103359_e));;
}



inline jule::Ptr<_1ac727548_Trait> _1ac86e88d_fromTrait(_1ac86b8e0_typeChecker* _self_, jule::Ptr<_1ac6c8c8b_IdentTypeDecl>* _104529_decl, jule::Ptr<_1ac727548_Trait>* _104556_t) {
	if ((!(_1ac79b127_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_104556_t))))._field_Public, (*((*(_104556_t))))._field_Token)))) {
		_1ac86c12c_pushErr(_self_, (*((*(_104529_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_104529_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_104529_decl))))._field_Generics.len() > 0LL)) {
		_1ac86c12c_pushErr(_self_, (*((*(_104529_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_104529_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	_1bd1dd718_pushReference(_self_, _104556_t);
	return (*(_104556_t));;
}



inline jule::Bool _1ac86ec89_checkStructIns(_1ac86b8e0_typeChecker* _self_, jule::Ptr<_1ac702105_StructIns>* _105838_ins, jule::Ptr<_1ac6b2e62_Token>* _105860_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_105838_ins))))._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_105838_ins))))._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (__jule_any_type65_compare((*((*(_self_))._field_referencer))._field_owner, (*((*(_105838_ins))))._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1ac7b4250_precheckStructIns((*(_self_))._field_s, _105838_ins, (*(_105860_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*((*(_105838_ins))))._field_Generics.len() > 0LL)) {
		_1ac7b4c67_checkStructInsOperators((*(_self_))._field_s, (*(_105838_ins)));
		_1ac7b4508_checkStructIns((*(_self_))._field_s, _105838_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1ac870042_appendUsedStructReference(_1ac86b8e0_typeChecker* _self_, jule::Ptr<_1ac6ee377_Struct>* _107949_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1bd21d605:;
			{
				jule::Ptr<_1ac6ee377_Struct> _108517_refS = (*((*(_self_))._field_referencer))._field_owner.cast_ptr<_1ac6ee377_Struct>(&__jule_any_type65);;
				if ((!(_1ac700d07_IsUses(_108517_refS.ptr(), (*(_107949_s)))))) {
					{ jule::Slice<jule::Ptr<_1ac6ee377_Struct>> &__jule_push_dest = (*(_108517_refS))._field_Uses; __jule_push_dest.push((*(_107949_s))); };
				};
			}
		}
		_match_end_1bd21d5a0:;
	};
}



inline jule::Ptr<_1ac702105_StructIns> _1ac87043d_buildStructInstance(_1ac86b8e0_typeChecker* _self_, jule::Ptr<_1ac6c8c8b_IdentTypeDecl>* _109243_decl, jule::Ptr<_1ac6ee377_Struct>* _109270_s) {
	jule::Ptr<_1ac86a900_referencer> _109413_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1ac858c40_TypeAlias>> _109613_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1bd2215c5:;
				{
					jule::Ptr<_1ac75d42a_scopeChecker> _110321_sc = (*(_self_))._field_lookup.cast_ptr<_1ac75d42a_scopeChecker>(0);;
					jule::Ptr<_1ac75d42a_scopeChecker> _110421_hard = _1ac7617a2_getHardRoot(_110321_sc);;
					if ((((*((*(_110421_hard))._field_owner))._field_Owner == nullptr) || ((*((*((*(_110421_hard))._field_owner))._field_Owner))._field_Decl != (*(_109270_s))))) {
						goto _match_end_1bd221570;
					};
					jule::I64 _110817_n = ((*((*(_110421_hard))._field_owner))._field_Generics.len() + (*((*((*(_110421_hard))._field_owner))._field_Owner))._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=(*((*(_110421_hard))._field_table))._field_TypeAliases.slice(0LL, _110817_n);
				}
			}
			_match_end_1bd221570:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait<_1ac879568_Lookup> _111813_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1ac702105_StructIns> _112213_ins = _1ac6ee7d9_instance((*(_109270_s)));;
	(*(_112213_ins))._field_Generics=jule::Slice<jule::Ptr<_1ac85814b_InsGeneric>>::alloc(0LL, (*((*(_109243_decl))))._field_Generics.len());
	{
		auto expr = &((*((*(_109243_decl))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd2268c7:;
		if (it != expr_end) {
			jule::Ptr<_1ac6c8681_TypeDecl> _112421_g = *it;
			{
				jule::Ptr<_1ac859a32_TypeKind> _112517_kind = _1ac873c49_build(_self_, &((*(_112421_g))._field_Kind));;
				if ((_112517_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1ac85814b_InsGeneric>> &__jule_push_dest = (*(_112213_ins))._field_Generics; __jule_push_dest.push(jule::new_ptr<_1ac85814b_InsGeneric>(_1ac85814b_InsGeneric{._field_Kind=_112517_kind, })); };
			}
			_iter_next_1bd2268c7:;
			++it;
			goto _iter_begin_1bd2268c7;
		}
		_iter_end_1bd2268c7:;
	};
	(*(_self_))._field_lookup=_111813_lookup;
	(*(_self_))._field_bannedGenerics=_109613_bannedGenerics;
	(*(_self_))._field_referencer=_109413_referencer;
	return _112213_ins;;
}



inline jule::Ptr<_1ac702105_StructIns> _1ac870839_fromStruct(_1ac86b8e0_typeChecker* _self_, jule::Ptr<_1ac6c8c8b_IdentTypeDecl>* _114034_decl, jule::Ptr<_1ac6ee377_Struct>* _114061_s) {
	if ((!(_1ac79b127_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_114061_s))))._field_Public, (*((*(_114061_s))))._field_Token)))) {
		_1ac86c12c_pushErr(_self_, (*((*(_114034_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_114034_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*((*(_114034_decl))))._field_Generics.len() > 0LL)) {
			_1ac86c12c_pushErr(_self_, (*((*(_114034_decl))))._field_Token, jule::Str::lit("generics are not allowed in this scope", 38), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1ac702105_StructIns>(_1ac702105_StructIns{._field_Decl=(*(_114061_s)), });;
	};
	jule::Bool _115813_ok = _1ac86d79e_checkIllegalCycles(_self_, _114034_decl, jule::Any((*(_114061_s)), &__jule_any_type65));;
	if ((!(_115813_ok))) {
		return nullptr;;
	};
	_1ac870042_appendUsedStructReference(_self_, _114061_s);
	jule::Ptr<_1ac702105_StructIns> _116413_ins = _1ac87043d_buildStructInstance(_self_, _114034_decl, _114061_s);;
	if ((_116413_ins == nullptr)) {
		return nullptr;;
	};
	_115813_ok=_1ac79bde7_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I64>((*((*(_116413_ins))._field_Decl))._field_Generics.len()), static_cast<jule::I64>((*(_116413_ins))._field_Generics.len()), (*((*(_114034_decl))))._field_Token);
	if ((!(_115813_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1ac702105_StructIns> _117413_existInstance = _1ac6eeae7_appendInstance((*(_114061_s)).ptr(), &(_116413_ins));;
	if ((_117413_existInstance != nullptr)) {
		if ((!(_1ac7a5d57_checkConstraintsStruct((*(_self_))._field_s, &(_116413_ins), &((*((*(_114034_decl))))._field_Token), _117413_existInstance)))) {
			return nullptr;;
		};
		_1bd1dad31_pushReference(_self_, &(_117413_existInstance));
		return _117413_existInstance;;
	};
	if ((!(_1ac86ec89_checkStructIns(_self_, &(_116413_ins), &((*((*(_114034_decl))))._field_Token))))) {
		return nullptr;;
	};
	_1bd1dad31_pushReference(_self_, &(_116413_ins));
	return _116413_ins;;
}



inline jule::Trait<_1ac85957b_Kind> _1ac870b7a_getDef(_1ac86b8e0_typeChecker* _self_, jule::Ptr<_1ac6c8c8b_IdentTypeDecl>* _119830_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd2311b7:;
		if (it != expr_end) {
			jule::Ptr<_1ac6d588b_GenericDecl> _119916_g = *it;
			{
				if (((*(_119916_g))._field_Ident == (*((*(_119830_decl))))._field_Ident)) {
					return jule::Trait<_1ac85957b_Kind>(_1ac876950_buildPrimType((*(_119916_g))._field_Ident), 20);;
				};
			}
			_iter_next_1bd2311b7:;
			++it;
			goto _iter_begin_1bd2311b7;
		}
		_iter_end_1bd2311b7:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd23152a:;
		if (it != expr_end) {
			jule::Ptr<_1ac858c40_TypeAlias> _120521_g = *it;
			{
				if (((*(_120521_g))._field_Ident == (*((*(_119830_decl))))._field_Ident)) {
					if (((*((*(_119830_decl))))._field_Generics.len() > 0LL)) {
						_1ac86c12c_pushErr(_self_, (*((*(_119830_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_119830_decl))))._field_Ident, &__jule_any_type4)}));
						return nullptr;;
					};
					jule::Ptr<_1ac702105_StructIns> _121121_st = _1ac85d706_Struct((*((*(_120521_g))._field_Kind))._field_Kind.ptr());;
					if ((_121121_st != nullptr)) {
						jule::Bool _121321_ok = _1ac86d79e_checkIllegalCycles(_self_, _119830_decl, jule::Any((*(_121121_st))._field_Decl, &__jule_any_type65));;
						if ((!(_121321_ok))) {
							return nullptr;;
						};
					};
					return (*((*((*(_120521_g))._field_Kind))._field_Kind))._field_Kind;;
				};
			}
			_iter_next_1bd23152a:;
			++it;
			goto _iter_begin_1bd23152a;
		}
		_iter_end_1bd23152a:;
	};
	if ((!((*((*(_119830_decl))))._field_Binded))) {
		jule::Ptr<_1ac729c54_Enum> _122317_e = _1ac879568_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ac8790c3_FindEnum((*(_self_))._field_lookup, (*((*(_119830_decl))))._field_Ident);;
		if ((_122317_e != nullptr)) {
			return jule::Trait<_1ac85957b_Kind>(_1ac86e096_fromEnum(_self_, _119830_decl, &(_122317_e)), 3);;
		};
		jule::Ptr<_1ac72b45e_TypeEnum> _122817_te = _1ac879568_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ac879414_FindTypeEnum((*(_self_))._field_lookup, (*((*(_119830_decl))))._field_Ident);;
		if ((_122817_te != nullptr)) {
			return jule::Trait<_1ac85957b_Kind>(_1ac86e492_fromTypeEnum(_self_, _119830_decl, &(_122817_te)), 4);;
		};
		jule::Ptr<_1ac727548_Trait> _123317_t = _1ac879568_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ac878c82_FindTrait((*(_self_))._field_lookup, (*((*(_119830_decl))))._field_Ident);;
		if ((_123317_t != nullptr)) {
			return jule::Trait<_1ac85957b_Kind>(_1ac86e88d_fromTrait(_self_, _119830_decl, &(_123317_t)), 2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1ac86c12c_pushErr(_self_, (*((*(_119830_decl))))._field_Token, jule::Str::lit("binded definitions are not allowed in this scope", 48), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac6ee377_Struct> _124213_s = _1ac879568_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ac878545_FindStruct((*(_self_))._field_lookup, (*((*(_119830_decl))))._field_Ident, (*((*(_119830_decl))))._field_Binded);;
	if ((_124213_s != nullptr)) {
		return jule::Trait<_1ac85957b_Kind>(_1ac870839_fromStruct(_self_, _119830_decl, &(_124213_s)), 0);;
	};
	jule::Ptr<_1ac858c40_TypeAlias> _124713_ta = _1ac879568_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ac878149_FindTypeAlias((*(_self_))._field_lookup, (*((*(_119830_decl))))._field_Ident, (*((*(_119830_decl))))._field_Binded);;
	if (((_124713_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_124713_ta=_1ac9404b9_findBuiltinTypeAlias((*((*(_119830_decl))))._field_Ident);
	};
	if ((_124713_ta != nullptr)) {
		return _1ac86db9a_fromTypeAlias(_self_, _119830_decl, &(_124713_ta));;
	};
	_1ac86c12c_pushErr(_self_, (*((*(_119830_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_119830_decl))))._field_Ident, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Trait<_1ac85957b_Kind> _1ac870ebb_buildIdent(_1ac86b8e0_typeChecker* _self_, jule::Ptr<_1ac6c8c8b_IdentTypeDecl> _125933_decl) {
	return _1ac870b7a_getDef(_self_, &(_125933_decl));;
}



inline jule::Trait<_1ac85957b_Kind> _1ac87130c_buildSubIdent(_1ac86b8e0_typeChecker* _self_, jule::Ptr<_1ac6c9088_SubIdentTypeDecl> _126336_decl) {
	jule::Trait<_1ac85957b_Kind> _126413_ident = _1ac870ebb_buildIdent(_self_, (*(_126336_decl))._field_Idents[0LL]);;
	if ((_126413_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _126413_ident };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1bd23dc41:;
			{
				goto _match_end_1bd23e11a;
			}
		}
		else {
			_case_begin_1bd23e170:;
			{
				_1ac86c12c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bd23e11a:;
	};
	jule::Ptr<_1ac72b45e_TypeEnum> _127513_t = _126413_ident.cast_ptr<_1ac72b45e_TypeEnum>(4);;
	jule::Slice<jule::Ptr<_1ac6c8c8b_IdentTypeDecl>> _127613_idents = (*(_126336_decl))._field_Idents.slice(1LL);;
	{
		auto expr = &(_127613_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd240814:;
		if (it != expr_end) {
			jule::I64 _127713_i = it - expr->begin();
			jule::Ptr<_1ac6c8c8b_IdentTypeDecl> _127716_id = *it;
			{
				jule::Ptr<_1ac72ad87_TypeEnumItem> _127817_item = _1ac72c020_FindItem(_127513_t.ptr(), (*(_127716_id))._field_Ident);;
				if ((_127817_item == nullptr)) {
					_1ac86c12c_pushErr(_self_, (*(_127716_id))._field_Token, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_127513_t))._field_Ident, &__jule_any_type4),jule::Any((*(_127716_id))._field_Ident, &__jule_any_type4)}));
					return nullptr;;
				};
				if (((_127613_idents.len() - _127713_i) == 1LL)) {
					_1ac86ca89_pushReferenceByKind(_self_, &((*((*(_127817_item))._field_Kind))._field_Kind));
					return jule::Trait<_1ac85957b_Kind>((*((*(_127817_item))._field_Kind))._field_Kind, 19);;
				};
				_127513_t=_1ac85cbbc_TypeEnum((*((*(_127817_item))._field_Kind))._field_Kind.ptr());
				if ((_127513_t == nullptr)) {
					_1ac86c12c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1bd240814:;
			++it;
			_127713_i++;
			goto _iter_begin_1bd240814;
		}
		_iter_end_1bd240814:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac866137_Sptr> _1ac87164d_buildSptrFromType(_1ac86b8e0_typeChecker* _self_, jule::Ptr<_1ac859a32_TypeKind>* _129741_elem) {
	{
		
		if (((*(_129741_elem)) == nullptr)) {
			_case_begin_1bd244e01:;
			{
				return nullptr;;
			}
		}
		else if ((_1ac85d706_Struct((*(_129741_elem)).ptr()) != nullptr)) {
			_case_begin_1bd244e78:;
			{
				jule::Ptr<_1ac702105_StructIns> _130313_s = _1ac85d706_Struct((*(_129741_elem)).ptr());;
				if ((((*(_130313_s))._field_Decl != nullptr) && (*((*(_130313_s))._field_Decl))._field_Binded)) {
					_1ac86c12c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1ac85ce53_Arr((*(_129741_elem)).ptr()) != nullptr) && (*(_1ac85ce53_Arr((*(_129741_elem)).ptr())))._field_Auto)) {
			_case_begin_1bd245000:;
			{
				_1ac86c12c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bd24465e:;
	};
	return jule::new_ptr<_1ac866137_Sptr>(_1ac866137_Sptr{._field_Elem=(*(_129741_elem))});;
}



inline jule::Ptr<_1ac866137_Sptr> _1ac87198e_buildSptr(_1ac86b8e0_typeChecker* _self_, jule::Ptr<_1ac6c972b_SptrTypeDecl> _131732_decl) {
	jule::Bool _13189_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13189_cycleRisk;
	});;
	jule::Ptr<_1ac859a32_TypeKind> _132213_elem = _1ac87408a_checkDecl(_self_, &((*(_131732_decl))._field_Elem));;
	return _1ac87164d_buildSptrFromType(_self_, &(_132213_elem));;
}



inline jule::Ptr<_1ac8698ee_Ptr> _1ac871cd0_buildPtrFromType(_1ac86b8e0_typeChecker* _self_, jule::Ptr<_1ac859a32_TypeKind>* _132640_elem) {
	{
		
		if (((*(_132640_elem)) == nullptr)) {
			_case_begin_1bd24a08d:;
			{
				return nullptr;;
			}
		}
		else if (((_1ac85ce53_Arr((*(_132640_elem)).ptr()) != nullptr) && (*(_1ac85ce53_Arr((*(_132640_elem)).ptr())))._field_Auto)) {
			_case_begin_1bd24a115:;
			{
				_1ac86c12c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return jule::new_ptr<_1ac8698ee_Ptr>();;
			}
		}
		_match_end_1bd249e7d:;
	};
	return jule::new_ptr<_1ac8698ee_Ptr>(_1ac8698ee_Ptr{._field_Elem=(*(_132640_elem))});;
}



inline jule::Ptr<_1ac8698ee_Ptr> _1ac872121_buildPtr(_1ac86b8e0_typeChecker* _self_, jule::Ptr<_1ac6ca1aa_PtrTypeDecl> _134131_decl) {
	jule::Bool _13429_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13429_cycleRisk;
	});;
	jule::Ptr<_1ac859a32_TypeKind> _134617_elem = nullptr;;
	if ((!(_1ac6ca51d_IsUnsafe(_134131_decl.ptr())))) {
		_134617_elem=_1ac87408a_checkDecl(_self_, &((*(_134131_decl))._field_Elem));
		return _1ac871cd0_buildPtrFromType(_self_, &(_134617_elem));;
	};
	return jule::new_ptr<_1ac8698ee_Ptr>(_1ac8698ee_Ptr{._field_Elem=_134617_elem});;
}



inline jule::Ptr<_1ac866b0a_Slc> _1ac872462_buildSlc(_1ac86b8e0_typeChecker* _self_, jule::Ptr<_1ac6c9ab1_SlcTypeDecl> _135831_decl) {
	jule::Bool _13599_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13599_cycleRisk;
	});;
	jule::Ptr<_1ac859a32_TypeKind> _136313_elem = _1ac87408a_checkDecl(_self_, &((*(_135831_decl))._field_Elem));;
	{
		
		if ((_136313_elem == nullptr)) {
			_case_begin_1bd250219:;
			{
				return nullptr;;
			}
		}
		else if (((_1ac85ce53_Arr(_136313_elem.ptr()) != nullptr) && (*(_1ac85ce53_Arr(_136313_elem.ptr())))._field_Auto)) {
			_case_begin_1bd250280:;
			{
				_1ac86c12c_pushErr(_self_, (*((*(_135831_decl))._field_Elem))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bd2501b4:;
	};
	return jule::new_ptr<_1ac866b0a_Slc>(_1ac866b0a_Slc{._field_Elem=_136313_elem});;
}



inline jule::Ptr<_1ac868e2b_Arr> _1ac8727a3_buildArr(_1ac86b8e0_typeChecker* _self_, jule::Ptr<_1ac6ca94c_ArrTypeDecl> _137931_decl) {
	jule::I64 _138013_n = 0LL;;
	if ((!(_1ac6cacb0_AutoSized(_137931_decl.ptr())))) {
		jule::Ptr<_1ac8243ae_Data> _138317_size = _1ac844313_evalExpr(_1ac7a2d65_eval((*(_self_))._field_s, (*(_self_))._field_lookup), (*(_137931_decl))._field_Size);;
		if ((_138317_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1ac824c83_IsConst(_138317_size.ptr())))) {
			_1ac86c12c_pushErr(_self_, (*((*(_137931_decl))._field_Size))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1ac85c183_Prim((*(_138317_size))._field_Kind.ptr()) == nullptr) || (!(_1a6cddbd1_IsInt((*(_1ac85c183_Prim((*(_138317_size))._field_Kind.ptr())))._field_Kind))))) {
			_1ac86c12c_pushErr(_self_, (*((*(_137931_decl))._field_Size))._field_Token, jule::Str::lit("array size must be integer", 26), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138013_n=static_cast<jule::I64>(static_cast<jule::I64>(_1a6ce207a_AsI64((*(_138317_size))._field_Constant.ptr())));
		if ((_138013_n < 0LL)) {
			_1ac86c12c_pushErr(_self_, (*((*(_137931_decl))._field_Elem))._field_Token, jule::Str::lit("array size must be positive integer", 35), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _140117_max = _1a6cd9d53_MaxI(jule::Str::lit("int", 3));;
			if (((_1dbba4e08_BitSize != 64LL) && (static_cast<jule::I64>(_138013_n) > _140117_max))) {
				_1ac86c12c_pushErr(_self_, (*((*(_137931_decl))._field_Size))._field_Token, jule::Str::lit("array with size @ overflows limit (@) of the system", 51), jule::Slice<jule::Any>::make({jule::Any(_1ac8515b7_constoa(&((*(_138317_size))._field_Constant)), &__jule_any_type4),jule::Any(_1dbba370e_FmtInt(_140117_max, 10LL), &__jule_any_type4)}));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_1ac859a32_TypeKind> _141013_elem = _1ac87408a_checkDecl(_self_, &((*(_137931_decl))._field_Elem));;
	{
		
		if ((_141013_elem == nullptr)) {
			_case_begin_1bd259ae7:;
			{
				return nullptr;;
			}
		}
		else if (((_1ac85ce53_Arr(_141013_elem.ptr()) != nullptr) && (*(_1ac85ce53_Arr(_141013_elem.ptr())))._field_Auto)) {
			_case_begin_1bd259b6e:;
			{
				_1ac86c12c_pushErr(_self_, (*((*(_137931_decl))._field_Elem))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bd2527b0:;
	};
	return jule::new_ptr<_1ac868e2b_Arr>(_1ac868e2b_Arr{._field_Auto=_1ac6cacb0_AutoSized(_137931_decl.ptr()), ._field_N=_138013_n, ._field_Elem=_141013_elem});;
}



inline jule::Ptr<_1ac86829e_Map> _1ac872ae4_buildMap(_1ac86b8e0_typeChecker* _self_, jule::Ptr<_1ac6cb19a_MapTypeDecl> _142831_decl) {
	jule::Bool _14299_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14299_cycleRisk;
	});;
	jule::Ptr<_1ac859a32_TypeKind> _143313_key = _1ac87408a_checkDecl(_self_, &((*(_142831_decl))._field_Key));;
	if ((_143313_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ac859a32_TypeKind> _143813_val = _1ac87408a_checkDecl(_self_, &((*(_142831_decl))._field_Val));;
	if ((_143813_val == nullptr)) {
		return nullptr;;
	};
	if ((_1ac85c936_Enum(_143813_val.ptr()) != nullptr)) {
		_1ac86c12c_pushErr(_self_, (*((*(_142831_decl))._field_Val))._field_Token, jule::Str::lit("maps do not support enums as map key type", 41), jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1ac86829e_Map>(_1ac86829e_Map{._field_Key=_143313_key, ._field_Val=_143813_val});;
}



inline jule::Ptr<_1ac8676ee_Tuple> _1ac872e35_buildTuple(_1ac86b8e0_typeChecker* _self_, jule::Ptr<_1ac6c9dad_TupleTypeDecl> _145233_decl) {
	jule::Slice<jule::Ptr<_1ac859a32_TypeKind>> _145313_types = jule::Slice<jule::Ptr<_1ac859a32_TypeKind>>::alloc(0LL, (*(_145233_decl))._field_Types.len());;
	{
		auto expr = &((*(_145233_decl))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd261181:;
		if (it != expr_end) {
			jule::Ptr<_1ac6c8681_TypeDecl> _145421_t = *it;
			{
				jule::Ptr<_1ac859a32_TypeKind> _145517_kind = _1ac87408a_checkDecl(_self_, &(_145421_t));;
				if ((_145517_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1ac859a32_TypeKind>> &__jule_push_dest = _145313_types; __jule_push_dest.push(_145517_kind); };
			}
			_iter_next_1bd261181:;
			++it;
			goto _iter_begin_1bd261181;
		}
		_iter_end_1bd261181:;
	};
	return jule::new_ptr<_1ac8676ee_Tuple>(_1ac8676ee_Tuple{._field_Types=_145313_types});;
}



inline jule::Bool _1ac873276_checkFuncTypes(_1ac86b8e0_typeChecker* _self_, jule::Ptr<_1ac717170_FnIns>* _146538_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_146538_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd262c10:;
		if (it != expr_end) {
			jule::Ptr<_1ac7161c4_ParamIns> _146621_p = *it;
			{
				(*(_146621_p))._field_Kind=_1ac873c49_build(_self_, &((*((*((*((*(_146621_p))._field_Decl))._field_Kind))._field_Decl))._field_Kind));
				__jule_func_result=((*(_146621_p))._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1ac7a650b_checkFnParamKind((*(_self_))._field_s, &(_146621_p));
			}
			_iter_next_1bd262c10:;
			++it;
			goto _iter_begin_1bd262c10;
		}
		_iter_end_1bd262c10:;
	};
	if ((!(_1ac7146de_IsVoid((*((*(_146538_f))))._field_Decl.ptr())))) {
		(*((*(_146538_f))))._field_Result=_1ac873c49_build(_self_, &((*((*((*((*((*((*(_146538_f))))._field_Decl))._field_Result))._field_Kind))._field_Decl))._field_Kind));
		__jule_func_result = ((*((*(_146538_f))))._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1ac717170_FnIns> _1ac8735b7_buildFunc(_1ac86b8e0_typeChecker* _self_, jule::Ptr<_1ac6da341_FnDecl> _148332_decl) {
	jule::Bool _14849_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14849_cycleRisk;
	});;
	if (((*(_148332_decl))._field_Generics.len() > 0LL)) {
		_1ac86c12c_pushErr(_self_, (*(_148332_decl))._field_Token, jule::Str::lit("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac71426b_Fn> _149313_f = _1ac71d85d_buildFunc(_148332_decl);;
	jule::I64 _14959_n = (*((*(_self_))._field_s))._field_errors.len();;
	_1ac7b0801_checkAnonFuncDecl((*(_self_))._field_s, &(_149313_f));
	if ((_14959_n != (*((*(_self_))._field_s))._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1ac717170_FnIns> _150113_ins = _1ac715745_instanceForce(_149313_f);;
	(*(_150113_ins))._field_Anon=true;
	jule::Bool _15049_ok = _1ac873276_checkFuncTypes(_self_, &(_150113_ins));;
	if ((!(_15049_ok))) {
		return nullptr;;
	};
	return _150113_ins;;
}



inline jule::Trait<_1ac85957b_Kind> _1ac873908_buildByNamespace(_1ac86b8e0_typeChecker* _self_, jule::Ptr<_1ac6c942e_NamespaceTypeDecl> _151239_decl) {
	jule::Str _15139_path = _1ac8765a9_buildLinkPathByTokens(&((*(_151239_decl))._field_Idents));;
	jule::Ptr<_1ac77790b_ImportInfo> _151413_imp = _1ac879568_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ac877852_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1ac77790b_ImportInfo>)>([=](jule::Ptr<_1ac77790b_ImportInfo> _151449_imp) mutable -> jule::Bool {
		if ((((*(_151239_decl))._field_Idents.len() == 1LL) && ((*(_151449_imp))._field_Alias == _15139_path))) {
			return true;;
		};
		return (((*(_151449_imp))._field_LinkPath == _15139_path) && _1ac77a524_isAccessibleViaSelection(_151449_imp.ptr()));;
	}));;
	jule::Str _15219_selfIdent = jule::Str::lit("self", 4);;
	if (((_151413_imp == nullptr) || (!(_1ac779e4c_isLookupable(_151413_imp.ptr(), &(_15219_selfIdent)))))) {
		_1ac86c12c_pushErr(_self_, (*(_151239_decl))._field_Idents[0LL], jule::Str::lit("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_15139_path, &__jule_any_type4)}));
		return nullptr;;
	};
	_1ac86c528_disallowBuiltin(_self_);
	jule::Trait<_1ac879568_Lookup> _152813_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1ac879568_Lookup>(_151413_imp, 1);
	jule::Ptr<_1ac859a32_TypeKind> _153013_kind = _1ac87408a_checkDecl(_self_, &((*(_151239_decl))._field_Kind));;
	(*(_self_))._field_lookup=_152813_lookup;
	_1ac86c32a_allowBuiltin(_self_);
	return jule::Trait<_1ac85957b_Kind>(_153013_kind, 19);;
}



inline jule::Ptr<_1ac859a32_TypeKind> _1ac873c49_build(_1ac86b8e0_typeChecker* _self_, jule::Any* _153629_declKind) {
	jule::Trait<_1ac85957b_Kind> _153717_kind = nullptr;;
	{
		auto &_match_expr{ (*(_153629_declKind)) };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1bd2729bc:;
			{
				jule::Trait<_1ac85957b_Kind> _154017_t = _1ac870ebb_buildIdent(_self_, (*(_153629_declKind)).cast_ptr<_1ac6c8c8b_IdentTypeDecl>(&__jule_any_type20));;
				if ((_154017_t != nullptr)) {
					_153717_kind=_154017_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1bd271d73:;
			{
				jule::Trait<_1ac85957b_Kind> _154517_t = _1ac87130c_buildSubIdent(_self_, (*(_153629_declKind)).cast_ptr<_1ac6c9088_SubIdentTypeDecl>(&__jule_any_type86));;
				if ((_154517_t != nullptr)) {
					_153717_kind=_154517_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1bd272082:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ac866137_Sptr> _155117_t = _1ac87198e_buildSptr(_self_, (*(_153629_declKind)).cast_ptr<_1ac6c972b_SptrTypeDecl>(&__jule_any_type72));;
				if ((_155117_t != nullptr)) {
					_153717_kind=jule::Trait<_1ac85957b_Kind>(_155117_t, 21);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1bd2720e8:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ac8698ee_Ptr> _155717_t = _1ac872121_buildPtr(_self_, (*(_153629_declKind)).cast_ptr<_1ac6ca1aa_PtrTypeDecl>(&__jule_any_type71));;
				if ((_155717_t != nullptr)) {
					_153717_kind=jule::Trait<_1ac85957b_Kind>(_155717_t, 26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1bd27215e:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ac866b0a_Slc> _156317_t = _1ac872462_buildSlc(_self_, (*(_153629_declKind)).cast_ptr<_1ac6c9ab1_SlcTypeDecl>(&__jule_any_type70));;
				if ((_156317_t != nullptr)) {
					_153717_kind=jule::Trait<_1ac85957b_Kind>(_156317_t, 22);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1bd2721c5:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ac868e2b_Arr> _156917_t = _1ac8727a3_buildArr(_self_, (*(_153629_declKind)).cast_ptr<_1ac6ca94c_ArrTypeDecl>(&__jule_any_type69));;
				if ((_156917_t != nullptr)) {
					_153717_kind=jule::Trait<_1ac85957b_Kind>(_156917_t, 25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1bd272a88:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ac86829e_Map> _157517_t = _1ac872ae4_buildMap(_self_, (*(_153629_declKind)).cast_ptr<_1ac6cb19a_MapTypeDecl>(&__jule_any_type73));;
				if ((_157517_t != nullptr)) {
					_153717_kind=jule::Trait<_1ac85957b_Kind>(_157517_t, 24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1bd272aee:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ac8676ee_Tuple> _158117_t = _1ac872e35_buildTuple(_self_, (*(_153629_declKind)).cast_ptr<_1ac6c9dad_TupleTypeDecl>(&__jule_any_type74));;
				if ((_158117_t != nullptr)) {
					_153717_kind=jule::Trait<_1ac85957b_Kind>(_158117_t, 23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1bd272b65:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ac717170_FnIns> _158717_t = _1ac8735b7_buildFunc(_self_, (*(_153629_declKind)).cast_ptr<_1ac6da341_FnDecl>(&__jule_any_type14));;
				if ((_158717_t != nullptr)) {
					_153717_kind=jule::Trait<_1ac85957b_Kind>(_158717_t, 1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1bd272bcb:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait<_1ac85957b_Kind> _159317_t = _1ac873908_buildByNamespace(_self_, (*(_153629_declKind)).cast_ptr<_1ac6c942e_NamespaceTypeDecl>(&__jule_any_type90));;
				if ((_159317_t != nullptr)) {
					_153717_kind=_159317_t;
				};
			}
		}
		else {
			_case_begin_1bd27201b:;
			{
				_1ac86c12c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bd271eb6:;
	};
	if ((_153717_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _153717_kind };
		
		if (_match_expr.type_is(true, 19)) {
			_case_begin_1bd280623:;
			{
				return _153717_kind.cast_ptr<_1ac859a32_TypeKind>(19);;
			}
		}
		else {
			_case_begin_1bd27d159:;
			{
				jule::Ptr<_1ac859a32_TypeKind> _160817_tk = jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=_153717_kind});;
				{
					auto &_match_expr{ _153717_kind };
					
					if (_match_expr.type_is(true, 20)) {
						_case_begin_1bd27db2c:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_1ac859a32_TypeKind>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_160817_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, 0)) {
						_case_begin_1bd27db93:;
						{
							jule::Ptr<_1ac702105_StructIns> _161517_s = _153717_kind.cast_ptr<_1ac702105_StructIns>(0);;
							if ((((*(_161517_s))._field_Decl != nullptr) && (*((*(_161517_s))._field_Decl))._field_Binded)) {
								(*(_160817_tk))._field_BindIdent=(*((*(_161517_s))._field_Decl))._field_Ident;
							};
						}
					}
					_match_end_1bd27dac7:;
				};
				return _160817_tk;;
			}
		}
		_match_end_1bd272c42:;
	};
}



inline jule::Ptr<_1ac859a32_TypeKind> _1ac87408a_checkDecl(_1ac86b8e0_typeChecker* _self_, jule::Ptr<_1ac6c8681_TypeDecl>* _162433_decl) {
	jule::Ptr<_1ac6b2e62_Token> _162613_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*((*(_162433_decl))))._field_Token;
	jule::Ptr<_1ac859a32_TypeKind> _162913_kind = _1ac873c49_build(_self_, &((*((*(_162433_decl))))._field_Kind));;
	(*(_self_))._field_errorToken=_162613_errorToken;
	return _162913_kind;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac86b8e0_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "cycleRisk:" << _Src._field_cycleRisk << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1ac8749d6_prim(jule::Str* _165121_ident, jule::Ptr<_1ac86260b_Prim> _165133_t) {
	return ((*(_165133_t))._field_Kind == (*(_165121_ident)));;
}



inline jule::Bool static__1ac874d5a_exist(jule::Str* _165522_ident, jule::Ptr<_1ac859a32_TypeKind>* _165539_k) {
	{
		
		if ((_1ac85c183_Prim((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1bd28556d:;
			{
				return static__1ac8749d6_prim(_165522_ident, _1ac85c183_Prim((*(_165539_k)).ptr()));;
			}
		}
		else if ((_1ac85c419_Sptr((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1bd2855e5:;
			{
				jule::Ptr<_1ac866137_Sptr> _166017_sptr = _1ac85c419_Sptr((*(_165539_k)).ptr());;
				return static__1ac874d5a_exist(_165522_ident, &((*(_166017_sptr))._field_Elem));;
			}
		}
		else if ((_1ac85c6a0_Ptr((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1bd28586a:;
			{
				jule::Ptr<_1ac8698ee_Ptr> _166317_ptr = _1ac85c6a0_Ptr((*(_165539_k)).ptr());;
				return static__1ac874d5a_exist(_165522_ident, &((*(_166317_ptr))._field_Elem));;
			}
		}
		else if ((_1ac85d1d9_Slc((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1bd2858d1:;
			{
				jule::Ptr<_1ac866b0a_Slc> _166617_slc = _1ac85d1d9_Slc((*(_165539_k)).ptr());;
				return static__1ac874d5a_exist(_165522_ident, &((*(_166617_slc))._field_Elem));;
			}
		}
		else if ((_1ac85ce53_Arr((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1bd285947:;
			{
				jule::Ptr<_1ac868e2b_Arr> _166917_arr = _1ac85ce53_Arr((*(_165539_k)).ptr());;
				return static__1ac874d5a_exist(_165522_ident, &((*(_166917_arr))._field_Elem));;
			}
		}
		else if ((_1ac85dc23_Map((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1bd2859be:;
			{
				jule::Ptr<_1ac86829e_Map> _167217_m = _1ac85dc23_Map((*(_165539_k)).ptr());;
				return (static__1ac874d5a_exist(_165522_ident, &((*(_167217_m))._field_Key)) || static__1ac874d5a_exist(_165522_ident, &((*(_167217_m))._field_Val)));;
			}
		}
		else if ((_1ac85d706_Struct((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1bd285a46:;
			{
				jule::Ptr<_1ac702105_StructIns> _167617_s = _1ac85d706_Struct((*(_165539_k)).ptr());;
				{
					auto expr = &((*(_167617_s))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd28cae7:;
					if (it != expr_end) {
						jule::Ptr<_1ac85814b_InsGeneric> _167725_g = *it;
						{
							if (static__1ac874d5a_exist(_165522_ident, &((*(_167725_g))._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1bd28cae7:;
						++it;
						goto _iter_begin_1bd28cae7;
					}
					_iter_end_1bd28cae7:;
				};
				return false;;
			}
		}
		else if ((_1ac85d470_Fn((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1bd285b56:;
			{
				jule::Ptr<_1ac717170_FnIns> _168417_f = _1ac85d470_Fn((*(_165539_k)).ptr());;
				{
					auto expr = &((*(_168417_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd28e610:;
					if (it != expr_end) {
						jule::Ptr<_1ac7161c4_ParamIns> _168525_p = *it;
						{
							if (_1ac712db3_IsSelf((*(_168525_p))._field_Decl.ptr())) {
								goto _iter_next_1bd28e610;
							};
							if (static__1ac874d5a_exist(_165522_ident, &((*(_168525_p))._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1bd28e610:;
						++it;
						goto _iter_begin_1bd28e610;
					}
					_iter_end_1bd28e610:;
				};
				if (((*(_168417_f))._field_Result != nullptr)) {
					return static__1ac874d5a_exist(_165522_ident, &((*(_168417_f))._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1ac85dea9_Tup((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1bd285bbc:;
			{
				jule::Ptr<_1ac8676ee_Tuple> _169817_tup = _1ac85dea9_Tup((*(_165539_k)).ptr());;
				{
					auto expr = &((*(_169817_tup))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd291e4d:;
					if (it != expr_end) {
						jule::Ptr<_1ac859a32_TypeKind> _169925_t = *it;
						{
							if (static__1ac874d5a_exist(_165522_ident, &(_169925_t))) {
								return true;;
							};
						}
						_iter_next_1bd291e4d:;
						++it;
						goto _iter_begin_1bd291e4d;
					}
					_iter_end_1bd291e4d:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1bd28542a:;
			{
				return false;;
			}
		}
		_match_end_1bd28535e:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ac874574_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ad036351_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ad1dc98b_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1ad1dd99d_stop(_1ad1dd32c_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1ad1ddc34_stopped(_1ad1dd32c_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1ad1ddeba_finished(_1ad1dd32c_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1ad1de251_isLastSt(_1ad1dd32c_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1ad1de5b4_pushErr(_1ad1dd32c_scopeParser* _self_, jule::Ptr<_1ac6b2e62_Token> _18926_token, jule::Str _18941_fmt) {
	_1ad20c093_pushErr((*(_self_))._field_p.ptr(), _18926_token, _18941_fmt, jule::Slice<jule::Any>());
}



inline void _1ad1de927_pushSuggestion(_1ad1dd32c_scopeParser* _self_, jule::Str _19433_fmt, jule::Slice<jule::Any> _19446_args) {
	_1ad20c406_pushSuggestion((*(_self_))._field_p.ptr(), _19433_fmt, _19446_args);
}



inline void _1ad1debd0_insertAsNext(_1ad1dd32c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _19836_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1ad1dc98b_stmt>(_1ad1dc98b_stmt{._field_tokens=(*(_19836_tokens)), });
}



inline jule::Ptr<_1ad1dc98b_stmt> _1ad1dee66_next(_1ad1dd32c_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1ac6d86a2_ScopeTree> _1ad1e0362_buildScope(_1ad1dd32c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _20834_tokens, jule::Ptr<_1ac6b2e62_Token> _20856_end) {
	jule::Ptr<_1ac6d86a2_ScopeTree> _20913_s = _1ad1db715_newScope();;
	(*(_20913_s))._field_Parent=(*(_self_))._field_s;
	(*(_20913_s))._field_End=_20856_end;
	_1ad1dd32c_scopeParser _21213_ssp = _1ad1dd32c_scopeParser{._field_p=(*(_self_))._field_p, };;
	_1ad1ea1d5_build(&_21213_ssp, _20834_tokens, &(_20913_s));
	return _20913_s;;
}



inline jule::Ptr<_1ac6db4eb_VarDecl> _1ad1e06a3_buildVarSt(_1ad1dd32c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _21934_tokens) {
	jule::Ptr<_1ac6db4eb_VarDecl> _22013_v = _1ad20ee20_buildVar((*(_self_))._field_p, (*(_21934_tokens)));;
	(*(_22013_v))._field_Scope=(*(_self_))._field_s;
	return _22013_v;;
}



inline jule::Ptr<_1ac6db8c5_RetSt> _1ad1e09e4_buildRetSt(_1ad1dd32c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _22533_tokens) {
	jule::Ptr<_1ac6db8c5_RetSt> _22613_st = jule::new_ptr<_1ac6db8c5_RetSt>(_1ac6db8c5_RetSt{._field_Token=_22533_tokens[0LL], });;
	if ((_22533_tokens.len() > 1LL)) {
		(_22533_tokens).mut_slice(1LL);;
		(*(_22613_st))._field_Expr=_1ad20c747_buildExpr((*(_self_))._field_p, &(_22533_tokens));
	};
	return _22613_st;;
}



inline jule::Ptr<_1ac6dc145_Iter> _1ad1e0d35_buildWhileNextIter(_1ad1dd32c_scopeParser* _self_, jule::Ptr<_1ad1dc98b_stmt>* _23642_s) {
	jule::Ptr<_1ac6dc145_Iter> _23713_it = jule::new_ptr<_1ac6dc145_Iter>(_1ac6dc145_Iter{._field_Token=(*((*(_23642_s))))._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _24013_tokens = (*((*(_23642_s))))._field_tokens.slice(1LL);;
	jule::Ptr<_1ac6dc970_WhileKind> _24113_kind = jule::new_ptr<_1ac6dc970_WhileKind>();;
	if ((_24013_tokens.len() > 0LL)) {
		(*(_24113_kind))._field_Expr=_1ad20c747_buildExpr((*(_self_))._field_p, &(_24013_tokens));
	};
	if (_1ad1de251_isLastSt(_self_)) {
		_1ad1de5b4_pushErr(_self_, (*(_23713_it))._field_Token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	_24013_tokens=(*(_1ad1dee66_next(_self_)))._field_tokens;
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _25313_stTokens = _1ad206a71_getBlockExpr(&(_24013_tokens));;
	if ((_25313_stTokens.len() > 0LL)) {
		jule::Ptr<_1ad1dc98b_stmt> _25517_stmt = jule::new_ptr<_1ad1dc98b_stmt>(_1ad1dc98b_stmt{._field_tokens=_25313_stTokens, ._field_terminated=(*((*(_23642_s))))._field_terminated});;
		(*(_24113_kind))._field_NextToken=_25313_stTokens[0LL];
		(*(_24113_kind))._field_Next=_1ad1e9d72_buildSt(_self_, &(_25517_stmt));
	};
	jule::I64 _26313_i = _25313_stTokens.len();;
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _26413_blockTokens = _1ad209c94_range(&(_26313_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_24013_tokens));;
	if ((_26413_blockTokens == nullptr)) {
		_1ad1dd99d_stop(_self_);
		_1ad1de5b4_pushErr(_self_, (*(_23713_it))._field_Token, jule::Str::lit("body is not exist", 17));
		_1ad1de927_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_26313_i < _24013_tokens.len())) {
		_1ad1de5b4_pushErr(_self_, _24013_tokens[_26313_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_23713_it))._field_Scope=_1ad1e0362_buildScope(_self_, &(_26413_blockTokens), _24013_tokens[(_26313_i - 1LL)]);
	(*(_23713_it))._field_Kind=jule::Any(_24113_kind, &__jule_any_type37);
	return _23713_it;;
}



inline jule::Ptr<_1ac6dc970_WhileKind> _1ad1e1176_buildWhileIterKind(_1ad1dd32c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _28142_tokens) {
	return jule::new_ptr<_1ac6dc970_WhileKind>(_1ac6dc970_WhileKind{._field_Expr=_1ad20c747_buildExpr((*(_self_))._field_p, _28142_tokens), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>> _1ad1e14b7_getRangeKindKeysTokens(_1ad1dd32c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _28746_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>> _28813_vars;;
	jule::Slice<_1a756d63b_Log> _28819_errs;;
	({
		__jule_tuple_ssx_1ac6b2e62_Token__jule_tuple_s_1a756d63b_Log __jule_assign_result = _1ad20a514_parts(_28746_toks, static_cast<jule::U64>(5LLU), true);
		_28813_vars = __jule_assign_result.__jule_result_arg0;
		_28819_errs = __jule_assign_result.__jule_result_arg1;
	});
	((*((*(_self_))._field_p))._field_errors).append(_28819_errs);;
	return _28813_vars;;
}



inline jule::Ptr<_1ac6db4eb_VarDecl> _1ad1e1808_buildRangeKindKey(_1ad1dd32c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _29341_tokens) {
	if (((*(_29341_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1ac6db4eb_VarDecl> _29713_key = jule::new_ptr<_1ac6db4eb_VarDecl>(_1ac6db4eb_VarDecl{._field_Token=(*(_29341_tokens))[0LL], ._field_Setter=(*(_29341_tokens))[0LL], });;
	if (((*((*(_29713_key))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*(_29713_key))._field_Mutable=true;
		if (((*(_29341_tokens)).len() == 1LL)) {
			_1ad1de5b4_pushErr(_self_, (*(_29713_key))._field_Token, jule::Str::lit("invalid syntax", 14));
		};
		(*(_29713_key))._field_Token=(*(_29341_tokens))[1LL];
	} else if (((*(_29341_tokens)).len() > 1LL)) {
		_1ad1de5b4_pushErr(_self_, (*(_29341_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
	};
	if (((*((*(_29713_key))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1ad1de5b4_pushErr(_self_, (*(_29713_key))._field_Token, jule::Str::lit("invalid syntax", 14));
		_1ad1de927_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_29713_key))._field_Ident=(*((*(_29713_key))._field_Token))._field_Kind;
	return _29713_key;;
}



inline jule::Slice<jule::Ptr<_1ac6db4eb_VarDecl>> _1ad1e1b49_buildRangeKindKeys(_1ad1dd32c_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>>* _31942_parts) {
	jule::Slice<jule::Ptr<_1ac6db4eb_VarDecl>> _32017_keys = nullptr;;
	{
		auto expr = _31942_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd458026:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _32121_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_1ac6db4eb_VarDecl>> &__jule_push_dest = _32017_keys; __jule_push_dest.push(_1ad1e1808_buildRangeKindKey(_self_, &(_32121_tokens))); };
			}
			_iter_next_1bd458026:;
			++it;
			goto _iter_begin_1bd458026;
		}
		_iter_end_1bd458026:;
	};
	return _32017_keys;;
}



inline void _1ad1e1eac_setupRangeKindKeysPlain(_1ad1dd32c_scopeParser* _self_, jule::Ptr<_1ac6dd377_RangeKind>* _32747_rng, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _32769_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>> _32813_keyTokens = _1ad1e14b7_getRangeKindKeysTokens(_self_, _32769_tokens);;
	if ((_32813_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_32813_keyTokens.len() > 2LL)) {
		_1ad1de5b4_pushErr(_self_, (*((*(_32747_rng))))._field_InToken, jule::Str::lit("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1ac6db4eb_VarDecl>> _33513_keys = _1ad1e1b49_buildRangeKindKeys(_self_, &(_32813_keyTokens));;
	(*((*(_32747_rng))))._field_KeyA=_33513_keys[0LL];
	if ((_33513_keys.len() > 1LL)) {
		(*((*(_32747_rng))))._field_KeyB=_33513_keys[1LL];
	};
}



inline void _1ad1e2320_setupRangeKindKeysExplicit(_1ad1dd32c_scopeParser* _self_, jule::Ptr<_1ac6dd377_RangeKind>* _34250_rng, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _34272_tokens) {
	jule::I64 _34313_i = 0LL;;
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _34413_rang = _1ad209c94_range(&(_34313_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _34272_tokens);;
	if ((_34313_i < (*(_34272_tokens)).len())) {
		_1ad1de5b4_pushErr(_self_, (*((*(_34250_rng))))._field_InToken, jule::Str::lit("invalid syntax", 14));
	};
	_1ad1e1eac_setupRangeKindKeysPlain(_self_, _34250_rng, &(_34413_rang));
}



inline void _1ad1e2683_setupRangeKindKeys(_1ad1dd32c_scopeParser* _self_, jule::Ptr<_1ac6dd377_RangeKind>* _35142_rng, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _35164_tokens) {
	if (((*((*(_35164_tokens))[0LL]))._field_Id == static_cast<jule::U64>(74LLU))) {
		_1ad1e2320_setupRangeKindKeysExplicit(_self_, _35142_rng, _35164_tokens);
		return;;
	};
	_1ad1e1eac_setupRangeKindKeysPlain(_self_, _35142_rng, _35164_tokens);
}



inline jule::Ptr<_1ac6dd377_RangeKind> _1ad1e2b39_buildRangeIterKind(_1ad1dd32c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _35942_var_tokens, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _36014_exprTokens, jule::Ptr<_1ac6b2e62_Token>* _36041_inToken) {
	jule::Ptr<_1ac6dd377_RangeKind> _36113_rng = jule::new_ptr<_1ac6dd377_RangeKind>(_1ac6dd377_RangeKind{._field_InToken=(*(_36041_inToken)), });;
	if (((*(_36014_exprTokens)).len() == 0LL)) {
		_1ad1de5b4_pushErr(_self_, (*(_36113_rng))._field_InToken, jule::Str::lit("expression missing", 18));
		return _36113_rng;;
	};
	(*(_36113_rng))._field_Expr=_1ad20c747_buildExpr((*(_self_))._field_p, _36014_exprTokens);
	if (((*(_35942_var_tokens)).len() > 0LL)) {
		_1ad1e2683_setupRangeKindKeys(_self_, &(_36113_rng), _35942_var_tokens);
	};
	return _36113_rng;;
}



inline jule::Any _1ad1e3035_buildCommonIterKind(_1ad1dd32c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _37543_tokens, jule::Ptr<_1ac6b2e62_Token>* _37562_err_tok) {
	jule::I64 _37613_braceN = 0LL;;
	{
		auto expr = _37543_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd462a7a:;
		if (it != expr_end) {
			jule::I64 _37714_i = it - expr->begin();
			jule::Ptr<_1ac6b2e62_Token> _37721_tok = *it;
			{
				{
					auto &_match_expr{ (*(_37721_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1bd463828:;
						{
							(_37613_braceN)++;
							goto _iter_next_1bd462a7a;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1bd4638a0:;
						{
							(_37613_braceN)--;
						}
					}
					_match_end_1bd46375c:;
				};
				if ((_37613_braceN != 0LL)) {
					goto _iter_next_1bd462a7a;
				};
				{
					auto &_match_expr{ (*(_37721_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(12LLU)) {
						_case_begin_1bd46343d:;
						{
							jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _39421_declTokens = (*(_37543_tokens)).slice(0LL, _37714_i);;
							jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _39521_exprTokens = (*(_37543_tokens)).slice((_37714_i + 1LL));;
							return jule::Any(_1ad1e2b39_buildRangeIterKind(_self_, &(_39421_declTokens), &(_39521_exprTokens), &(_37721_tok)), &__jule_any_type39);;
						}
					}
					_match_end_1bd464d13:;
				};
			}
			_iter_next_1bd462a7a:;
			++it;
			_37714_i++;
			goto _iter_begin_1bd462a7a;
		}
		_iter_end_1bd462a7a:;
	};
	return jule::Any(_1ad1e1176_buildWhileIterKind(_self_, _37543_tokens), &__jule_any_type37);;
}



inline jule::Ptr<_1ac6dc145_Iter> _1ad1e3376_buildCommonIter(_1ad1dd32c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _40238_tokens) {
	jule::Ptr<_1ac6dc145_Iter> _40313_it = jule::new_ptr<_1ac6dc145_Iter>(_1ac6dc145_Iter{._field_Token=_40238_tokens[0LL], });;
	(_40238_tokens).mut_slice(1LL);;
	if ((_40238_tokens.len() == 0LL)) {
		_1ad1dd99d_stop(_self_);
		_1ad1de5b4_pushErr(_self_, (*(_40313_it))._field_Token, jule::Str::lit("body is not exist", 17));
		_1ad1de927_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _41313_exprTokens = _1ad206a71_getBlockExpr(&(_40238_tokens));;
	if ((_41313_exprTokens.len() > 0LL)) {
		(*(_40313_it))._field_Kind=_1ad1e3035_buildCommonIterKind(_self_, &(_41313_exprTokens), &((*(_40313_it))._field_Token));
	};
	jule::I64 _41713_i = _41313_exprTokens.len();;
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _41813_scopeTokens = _1ad209c94_range(&(_41713_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_40238_tokens));;
	if ((_41813_scopeTokens == nullptr)) {
		_1ad1dd99d_stop(_self_);
		_1ad1de5b4_pushErr(_self_, (*(_40313_it))._field_Token, jule::Str::lit("body is not exist", 17));
		_1ad1de927_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_41713_i < _40238_tokens.len())) {
		_1ad1de5b4_pushErr(_self_, _40238_tokens[_41713_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_40313_it))._field_Scope=_1ad1e0362_buildScope(_self_, &(_41813_scopeTokens), _40238_tokens[(_41713_i - 1LL)]);
	return _40313_it;;
}



inline jule::Ptr<_1ac6dc145_Iter> _1ad1e36b7_buildIterSt(_1ad1dd32c_scopeParser* _self_, jule::Ptr<_1ad1dc98b_stmt>* _43235_st) {
	if ((*((*(_43235_st))))._field_terminated) {
		return _1ad1e0d35_buildWhileNextIter(_self_, _43235_st);;
	};
	return _1ad1e3376_buildCommonIter(_self_, (*((*(_43235_st))))._field_tokens);;
}



inline jule::Ptr<_1ac6dd751_BreakSt> _1ad1e3a08_buildBreakSt(_1ad1dd32c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _43936_tokens) {
	jule::Ptr<_1ac6dd751_BreakSt> _44013_brk = jule::new_ptr<_1ac6dd751_BreakSt>(_1ac6dd751_BreakSt{._field_Token=(*(_43936_tokens))[0LL], });;
	if (((*(_43936_tokens)).len() > 1LL)) {
		if (((*((*(_43936_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1ad1de5b4_pushErr(_self_, (*(_43936_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			_1ad1de927_pushSuggestion(_self_, jule::Str::lit("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_44013_brk))._field_Label=(*(_43936_tokens))[1LL];
			if (((*(_43936_tokens)).len() > 2LL)) {
				_1ad1de5b4_pushErr(_self_, (*(_43936_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			};
		};
	};
	return _44013_brk;;
}



inline jule::Ptr<_1ac6ddb2a_ContSt> _1ad1e3d49_buildContSt(_1ad1dd32c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _45735_tokens) {
	jule::Ptr<_1ac6ddb2a_ContSt> _45813_cont = jule::new_ptr<_1ac6ddb2a_ContSt>(_1ac6ddb2a_ContSt{._field_Token=(*(_45735_tokens))[0LL], });;
	if (((*(_45735_tokens)).len() > 1LL)) {
		if (((*((*(_45735_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1ad1de5b4_pushErr(_self_, (*(_45735_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			_1ad1de927_pushSuggestion(_self_, jule::Str::lit("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_45813_cont))._field_Label=(*(_45735_tokens))[1LL];
			if (((*(_45735_tokens)).len() > 2LL)) {
				_1ad1de5b4_pushErr(_self_, (*(_45735_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			};
		};
	};
	return _45813_cont;;
}



inline jule::Ptr<_1ac6de0d1_If> _1ad1e418a_buildIf(_1ad1dd32c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _47531_tokens) {
	jule::Ptr<_1ac6de0d1_If> _47613_model = jule::new_ptr<_1ac6de0d1_If>(_1ac6de0d1_If{._field_Token=(*(_47531_tokens))[0LL], });;
	((*(_47531_tokens))).mut_slice(1LL);;
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _48013_exprTokens = _1ad206a71_getBlockExpr(_47531_tokens);;
	jule::I64 _48113_i = 0LL;;
	if ((_48013_exprTokens.len() == 0LL)) {
		_1ad1de5b4_pushErr(_self_, (*(_47613_model))._field_Token, jule::Str::lit("expression missing", 18));
	} else {
		_48113_i=static_cast<jule::I64>(_48013_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _48713_scopeTokens = _1ad209c94_range(&(_48113_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _47531_tokens);;
	if ((_48713_scopeTokens == nullptr)) {
		_1ad1dd99d_stop(_self_);
		_1ad1de5b4_pushErr(_self_, (*(_47613_model))._field_Token, jule::Str::lit("body is not exist", 17));
		_1ad1de927_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac6b2e62_Token> _49413_end = (*(_47531_tokens))[(_48113_i - 1LL)];;
	if ((_48113_i < (*(_47531_tokens)).len())) {
		if (((*((*(_47531_tokens))[_48113_i]))._field_Id == static_cast<jule::U64>(14LLU))) {
			((*(_47531_tokens))).mut_slice(_48113_i);;
		} else {
			_1ad1de5b4_pushErr(_self_, (*(_47531_tokens))[_48113_i], jule::Str::lit("invalid syntax", 14));
			(*(_47531_tokens))=nullptr;
		};
	};
	(*(_47613_model))._field_Expr=_1ad20c747_buildExpr((*(_self_))._field_p, &(_48013_exprTokens));
	(*(_47613_model))._field_Scope=_1ad1e0362_buildScope(_self_, &(_48713_scopeTokens), _49413_end);
	return _47613_model;;
}



inline jule::Ptr<_1ac6de4aa_Else> _1ad1e44cb_buildElse(_1ad1dd32c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _50833_tokens) {
	jule::Ptr<_1ac6de4aa_Else> _50913_els = jule::new_ptr<_1ac6de4aa_Else>(_1ac6de4aa_Else{._field_Token=(*(_50833_tokens))[0LL], });;
	((*(_50833_tokens))).mut_slice(1LL);;
	jule::I64 _51313_i = 0LL;;
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _51413_scopeTokens = _1ad209c94_range(&(_51313_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _50833_tokens);;
	if ((_51413_scopeTokens == nullptr)) {
		if ((_51313_i < (*(_50833_tokens)).len())) {
			_1ad1de5b4_pushErr(_self_, (*(_50913_els))._field_Token, jule::Str::lit("else's cannot have any expression", 33));
		} else {
			_1ad1dd99d_stop(_self_);
			_1ad1de5b4_pushErr(_self_, (*(_50913_els))._field_Token, jule::Str::lit("body is not exist", 17));
			_1ad1de927_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_51313_i < (*(_50833_tokens)).len())) {
		_1ad1de5b4_pushErr(_self_, (*(_50833_tokens))[_51313_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_50913_els))._field_Scope=_1ad1e0362_buildScope(_self_, &(_51413_scopeTokens), (*(_50833_tokens))[(_51313_i - 1LL)]);
	return _50913_els;;
}



inline jule::Ptr<_1ac6de961_Conditional> _1ad1e481c_buildIfElseChain(_1ad1dd32c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _53239_tokens) {
	jule::Ptr<_1ac6de961_Conditional> _53313_chain = jule::new_ptr<_1ac6de961_Conditional>(_1ac6de961_Conditional{._field_Head=_1ad1e418a_buildIf(_self_, &(_53239_tokens)), });;
	if (((*(_53313_chain))._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53239_tokens.len() != 0LL)) {
		{
			if (((*(_53239_tokens[0LL]))._field_Id != static_cast<jule::U64>(14LLU))) {
				goto _iter_end_1bd48452a;
			};
			if (((_53239_tokens.len() > 1LL) && ((*(_53239_tokens[1LL]))._field_Id == static_cast<jule::U64>(13LLU)))) {
				(_53239_tokens).mut_slice(1LL);;
				jule::Ptr<_1ac6de0d1_If> _54521_elif = _1ad1e418a_buildIf(_self_, &(_53239_tokens));;
				{ jule::Slice<jule::Ptr<_1ac6de0d1_If>> &__jule_push_dest = (*(_53313_chain))._field_Tail; __jule_push_dest.push(_54521_elif); };
				goto _iter_next_1bd48452a;
			};
			(*(_53313_chain))._field_Default=_1ad1e44cb_buildElse(_self_, &(_53239_tokens));
			goto _iter_end_1bd48452a;
		}
	_iter_next_1bd48452a:;
	}
	_iter_end_1bd48452a:;;
	return _53313_chain;;
}



inline jule::Ptr<_1ac6cc9b5_Expr> _1ad1e4b5d_buildCoCallSt(_1ad1dd32c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _55536_tokens) {
	jule::Ptr<_1ac6b2e62_Token> _5569_token = _55536_tokens[0LL];;
	(_55536_tokens).mut_slice(1LL);;
	jule::Ptr<_1ac6cc9b5_Expr> _55813_e = _1ad20c747_buildExpr((*(_self_))._field_p, &(_55536_tokens));;
	if ((_55813_e == nullptr)) {
		return _55813_e;;
	};
	{
		auto &_match_expr{ (*(_55813_e))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1bd48950d:;
			{
				(*((*(_55813_e))._field_Kind.cast_ptr<_1ac6d16de_FnCallExpr>(&__jule_any_type107)))._field_IsCo=true;
			}
		}
		else {
			_case_begin_1bd489002:;
			{
				_1ad1de5b4_pushErr(_self_, _5569_token, jule::Str::lit("statement must have function call expression", 44));
			}
		}
		_match_end_1bd488e9c:;
	};
	return _55813_e;;
}



inline jule::Ptr<_1ac6d613e_GotoSt> _1ad1e4e9e_buildGotoSt(_1ad1dd32c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _57135_tokens) {
	jule::Ptr<_1ac6d613e_GotoSt> _57213_gt = jule::new_ptr<_1ac6d613e_GotoSt>(_1ac6d613e_GotoSt{._field_Token=(*(_57135_tokens))[0LL], });;
	if (((*(_57135_tokens)).len() == 1LL)) {
		_1ad1de5b4_pushErr(_self_, (*(_57213_gt))._field_Token, jule::Str::lit("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if (((*(_57135_tokens)).len() > 2LL)) {
		_1ad1de5b4_pushErr(_self_, (*(_57135_tokens))[2LL], jule::Str::lit("invalid syntax", 14));
	};
	jule::Ptr<_1ac6b2e62_Token> _58113_identToken = (*(_57135_tokens))[1LL];;
	if (((*(_58113_identToken))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1ad1de5b4_pushErr(_self_, _58113_identToken, jule::Str::lit("invalid syntax", 14));
		_1ad1de927_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return _57213_gt;;
	};
	(*(_57213_gt))._field_Label=_58113_identToken;
	return _57213_gt;;
}



inline jule::Ptr<_1ac6d643b_FallSt> _1ad1e52e0_buildFallSt(_1ad1dd32c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _59135_tokens) {
	jule::Ptr<_1ac6d643b_FallSt> _59213_fll = jule::new_ptr<_1ac6d643b_FallSt>(_1ac6d643b_FallSt{._field_Token=(*(_59135_tokens))[0LL]});;
	if (((*(_59135_tokens)).len() > 1LL)) {
		_1ad1de5b4_pushErr(_self_, (*(_59135_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
	};
	return _59213_fll;;
}



inline jule::Ptr<_1ac6e019d_TypeAliasDecl> _1ad1e5631_buildTypeAliasSt(_1ad1dd32c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _60140_tokens) {
	jule::Ptr<_1ac6e019d_TypeAliasDecl> _60213_tad = _1ad20deda_buildTypeAliasDecl((*(_self_))._field_p, _60140_tokens);;
	(*(_60213_tad))._field_Scope=(*(_self_))._field_s;
	return _60213_tad;;
}



inline void _1ad1e5b09_pushCaseExpr(_1ad1dd32c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _60735_tokens, jule::Ptr<_1ac6b2e62_Token> _60757_token, jule::Bool _6089_typeMatch, jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>>* _60831_exprs) {
	if ((_60735_tokens.len() == 0LL)) {
		return;;
	};
	if (_6089_typeMatch) {
		jule::I64 _61317_i = 0LL;;
		jule::Ptr<_1ac6c8681_TypeDecl> _61417_t;;
		jule::Bool _61420_ok = false;;
		({
			__jule_tuple_x_1ac6c8681_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad20db99_buildType((*(_self_))._field_p, &(_60735_tokens), (&(_61317_i)), true);
			_61417_t = __jule_assign_result.__jule_result_arg0;
			_61420_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_61420_ok) {
			{ jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>> &__jule_push_dest = (*(_60831_exprs)); __jule_push_dest.push(jule::new_ptr<_1ac6cc9b5_Expr>(_1ac6cc9b5_Expr{._field_Token=_60735_tokens[0LL], ._field_End=_60735_tokens[(_60735_tokens.len() - 1LL)], ._field_Kind=jule::Any(_61417_t, &__jule_any_type88)})); };
			if ((_61317_i < _60735_tokens.len())) {
				_1ad1de5b4_pushErr(_self_, _60735_tokens[_61317_i], jule::Str::lit("invalid syntax", 14));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>> &__jule_push_dest = (*(_60831_exprs)); __jule_push_dest.push(_1ad20c747_buildExpr((*(_self_))._field_p, &(_60735_tokens))); };
}



inline __jule_tuple_sx_1ac6cc9b5_Expr__jule_tuple_bool _1ad1e60b0_buildCaseExprs(_1ad1dd32c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _63038_tokens, jule::Ptr<_1ac6b2e62_Token>* _63061_colon, jule::Bool _63076_typeMatch) {
	__jule_tuple_sx_1ac6cc9b5_Expr__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>> _63113_exprs = jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>>::alloc(0LL, 1LL);;
	jule::I64 _63213_braceN = 0LL;;
	jule::I64 _63313_j = 0LL;;
	{
		auto expr = _63038_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd494e86:;
		if (it != expr_end) {
			jule::I64 _63414_i = it - expr->begin();
			jule::Ptr<_1ac6b2e62_Token> _63421_tok = *it;
			{
				{
					auto &_match_expr{ (*(_63421_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1bd496a59:;
						{
							(_63213_braceN)++;
							goto _iter_next_1bd494e86;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1bd496ad1:;
						{
							(_63213_braceN)--;
							goto _iter_next_1bd494e86;
						}
					}
					_match_end_1bd49698d:;
				};
				if ((_63213_braceN != 0LL)) {
					goto _iter_next_1bd494e86;
				};
				{
					
					if (((*(_63421_tok))._field_Id == static_cast<jule::U64>(66LLU))) {
						_case_begin_1bd497e89:;
						{
							jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _65317_exprTokens = (*(_63038_tokens)).slice(_63313_j, _63414_i);;
							if ((_65317_exprTokens.len() == 0LL)) {
								_1ad1de5b4_pushErr(_self_, _63421_tok, jule::Str::lit("expression missing", 18));
							} else {
								_1ad1e5b09_pushCaseExpr(_self_, (*(_63038_tokens)).slice(_63313_j, _63414_i), _63421_tok, _63076_typeMatch, &(_63113_exprs));
							};
							_63313_j=static_cast<jule::I64>((_63414_i + 1LL));
						}
					}
					else if (((*(_63421_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
						_case_begin_1bd498011:;
						{
							(*(_63061_colon))=_63421_tok;
							_1ad1e5b09_pushCaseExpr(_self_, (*(_63038_tokens)).slice(_63313_j, _63414_i), _63421_tok, _63076_typeMatch, &(_63113_exprs));
							((*(_63038_tokens))).mut_slice((_63414_i + 1LL));;
							__jule_func_result.__jule_result_arg0 = _63113_exprs;
							__jule_func_result.__jule_result_arg1 = (((_63414_i - _63313_j) == 0LL) || (_63113_exprs.len() != 0LL));
							return __jule_func_result;;
						}
					}
					_match_end_1bd49796c:;
				};
			}
			_iter_next_1bd494e86:;
			++it;
			_63414_i++;
			goto _iter_begin_1bd494e86;
		}
		_iter_end_1bd494e86:;
	};
	_1ad1de5b4_pushErr(_self_, (*(_63038_tokens))[0LL], jule::Str::lit("invalid syntax", 14));
	(*(_63038_tokens))=nullptr;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline jule::Ptr<_1ac6d86a2_ScopeTree> _1ad1e6401_buildCaseScope(_1ad1dd32c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _67238_tokens) {
	jule::I64 _67313_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67517_i = 0LL;;
			jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _67617_next;;
			({
				__jule_tuple_sx_1ac6b2e62_Token__jule_tuple_bool __jule_assign_result = _1ad1dc65b_skipSt(&(_67517_i), (*(_67238_tokens)).slice(_67313_n));
				_67617_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_67617_next.len() == 0LL)) {
				goto _iter_end_1bd49bcd4;
			};
			jule::Ptr<_1ac6b2e62_Token> _68013_tok = _67617_next[0LL];;
			if (((*(_68013_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_67313_n+=_67517_i;
				goto _iter_next_1bd49bcd4;
			};
			jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _68517_scopeTokens = (*(_67238_tokens)).slice(0LL, _67313_n);;
			jule::Ptr<_1ac6d86a2_ScopeTree> _68617_scope = _1ad1e0362_buildScope(_self_, &(_68517_scopeTokens), (*(_67238_tokens))[_67313_n]);;
			((*(_67238_tokens))).mut_slice(_67313_n);;
			return _68617_scope;;
		}
	_iter_next_1bd49bcd4:;
	}
	_iter_end_1bd49bcd4:;;
	jule::Ptr<_1ac6b2e62_Token> _69017_end;;
	if (((*(_67238_tokens)).len() > 0LL)) {
		_69017_end=(*(_67238_tokens))[((*(_67238_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1ac6d86a2_ScopeTree> _69413_scope = _1ad1e0362_buildScope(_self_, _67238_tokens, _69017_end);;
	(*(_67238_tokens))=nullptr;
	return _69413_scope;;
}



inline __jule_tuple_x_1ac6e0654_Case__jule_tuple_bool _1ad1e67ec_buildCase(_1ad1dd32c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _69933_tokens, jule::Bool _69951_typeMatch) {
	__jule_tuple_x_1ac6e0654_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1ac6e0654_Case> _70013_c = jule::new_ptr<_1ac6e0654_Case>(_1ac6e0654_Case{._field_Token=(*(_69933_tokens))[0LL], });;
	((*(_69933_tokens))).mut_slice(1LL);;
	jule::Ptr<_1ac6b2e62_Token> _70417_colon = nullptr;;
	jule::Bool _70518_ok = false;;
	({
		__jule_tuple_sx_1ac6cc9b5_Expr__jule_tuple_bool __jule_assign_result = _1ad1e60b0_buildCaseExprs(_self_, _69933_tokens, &(_70417_colon), _69951_typeMatch);
		(*(_70013_c))._field_Exprs = __jule_assign_result.__jule_result_arg0;
		_70518_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_70013_c))._field_Scope=_1ad1e6401_buildCaseScope(_self_, _69933_tokens);
	if (((*((*(_70013_c))._field_Scope))._field_End == nullptr)) {
		(*((*(_70013_c))._field_Scope))._field_End=_70417_colon;
	};
	jule::Bool _7109_isDefault = (_70518_ok && ((*(_70013_c))._field_Exprs.len() == 0LL));;
	__jule_func_result.__jule_result_arg0 = _70013_c;
	__jule_func_result.__jule_result_arg1 = _7109_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1ac6e0654_Case__jule_tuple_x_1ac6de4aa_Else _1ad1e6be8_buildCases(_1ad1dd32c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _71433_tokens, jule::Bool _71451_typeMatch) {
	__jule_tuple_sx_1ac6e0654_Case__jule_tuple_x_1ac6de4aa_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1ac6e0654_Case>> _71517_cases = nullptr;;
	jule::Ptr<_1ac6de4aa_Else> _71617_def = nullptr;;
	jule::Bool _71713_defNotLast = false;;
	while ((_71433_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1ac6b2e62_Token> _71917_tok = _71433_tokens[0LL];;
			if (((*(_71917_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_1ad1de5b4_pushErr(_self_, _71917_tok, jule::Str::lit("invalid syntax", 14));
				goto _iter_end_1bd4a500c;
			};
			jule::Ptr<_1ac6e0654_Case> _72417_c;;
			jule::Bool _72420_isDefault = false;;
			({
				__jule_tuple_x_1ac6e0654_Case__jule_tuple_bool __jule_assign_result = _1ad1e67ec_buildCase(_self_, &(_71433_tokens), _71451_typeMatch);
				_72417_c = __jule_assign_result.__jule_result_arg0;
				_72420_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72420_isDefault) {
				(*(_72417_c))._field_Token=_71917_tok;
				if ((_71617_def == nullptr)) {
					_71617_def=jule::new_ptr<_1ac6de4aa_Else>(_1ac6de4aa_Else{._field_Token=(*(_72417_c))._field_Token, ._field_Scope=(*(_72417_c))._field_Scope});
				} else {
					_1ad1de5b4_pushErr(_self_, _71917_tok, jule::Str::lit("invalid syntax", 14));
				};
			} else {
				_71713_defNotLast=(_71713_defNotLast || (_71617_def != nullptr));
				{ jule::Slice<jule::Ptr<_1ac6e0654_Case>> &__jule_push_dest = _71517_cases; __jule_push_dest.push(_72417_c); };
			};
		}
	_iter_next_1bd4a500c:;
	}
	_iter_end_1bd4a500c:;;
	if (_71713_defNotLast) {
		_1ad1de5b4_pushErr(_self_, (*(_71617_def))._field_Token, jule::Str::lit("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71517_cases;
	__jule_func_result.__jule_result_arg1 = _71617_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1ac6e0e6d_MatchCase> _1ad1e7039_buildMatchCase(_1ad1dd32c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _74837_tokens) {
	jule::Ptr<_1ac6e0e6d_MatchCase> _74913_m = jule::new_ptr<_1ac6e0e6d_MatchCase>(_1ac6e0e6d_MatchCase{._field_Token=_74837_tokens[0LL], });;
	(_74837_tokens).mut_slice(1LL);;
	if (((_74837_tokens.len() > 0LL) && ((*(_74837_tokens[0LL]))._field_Id == static_cast<jule::U64>(7LLU)))) {
		(*(_74913_m))._field_TypeMatch=true;
		(_74837_tokens).mut_slice(1LL);;
	};
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _75913_exprTokens = _1ad206a71_getBlockExpr(&(_74837_tokens));;
	if ((_75913_exprTokens.len() > 0LL)) {
		(*(_74913_m))._field_Expr=_1ad20c747_buildExpr((*(_self_))._field_p, &(_75913_exprTokens));
	} else if ((*(_74913_m))._field_TypeMatch) {
		_1ad1de5b4_pushErr(_self_, (*(_74913_m))._field_Token, jule::Str::lit("expression missing", 18));
	};
	jule::I64 _76613_i = _75913_exprTokens.len();;
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _76713_blockToks = _1ad209c94_range(&(_76613_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_74837_tokens));;
	if ((_76713_blockToks == nullptr)) {
		_1ad1dd99d_stop(_self_);
		_1ad1de5b4_pushErr(_self_, (*(_74913_m))._field_Token, jule::Str::lit("body is not exist", 17));
		_1ad1de927_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_76613_i < _74837_tokens.len())) {
		_1ad1de5b4_pushErr(_self_, _74837_tokens[_76613_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_74913_m))._field_End=_74837_tokens[(_76613_i - 1LL)];
	({
		__jule_tuple_sx_1ac6e0654_Case__jule_tuple_x_1ac6de4aa_Else __jule_assign_result = _1ad1e6be8_buildCases(_self_, _76713_blockToks, (*(_74913_m))._field_TypeMatch);
		(*(_74913_m))._field_Cases = __jule_assign_result.__jule_result_arg0;
		(*(_74913_m))._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _74913_m;;
}



inline jule::Ptr<_1ac6d86a2_ScopeTree> _1ad1e737a_buildScopeSt(_1ad1dd32c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _78135_tokens) {
	jule::Bool _78213_isUnsafe = false;;
	jule::Bool _78313_isDeferred = false;;
	jule::Ptr<_1ac6b2e62_Token> _78413_token = _78135_tokens[0LL];;
	if (((*(_78413_token))._field_Id == static_cast<jule::U64>(31LLU))) {
		_78213_isUnsafe=true;
		(_78135_tokens).mut_slice(1LL);;
		if ((_78135_tokens.len() == 0LL)) {
			_1ad1de5b4_pushErr(_self_, _78413_token, jule::Str::lit("invalid syntax", 14));
			return nullptr;;
		};
		_78413_token=_78135_tokens[0LL];
		if (((*(_78413_token))._field_Id == static_cast<jule::U64>(33LLU))) {
			_78313_isDeferred=true;
			(_78135_tokens).mut_slice(1LL);;
			if ((_78135_tokens.len() == 0LL)) {
				_1ad1de5b4_pushErr(_self_, _78413_token, jule::Str::lit("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if (((*(_78413_token))._field_Id == static_cast<jule::U64>(33LLU))) {
		_78313_isDeferred=true;
		(_78135_tokens).mut_slice(1LL);;
		if ((_78135_tokens.len() == 0LL)) {
			_1ad1de5b4_pushErr(_self_, _78413_token, jule::Str::lit("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I64 _81013_i = 0LL;;
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _81113_scopeTokens = _1ad209c94_range(&(_81013_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_78135_tokens));;
	if ((_81113_scopeTokens == nullptr)) {
		_1ad1de5b4_pushErr(_self_, _78413_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	} else if ((_81013_i < _78135_tokens.len())) {
		_1ad1de5b4_pushErr(_self_, _78135_tokens[_81013_i], jule::Str::lit("invalid syntax", 14));
	};
	jule::Ptr<_1ac6d86a2_ScopeTree> _81813_scope = _1ad1e0362_buildScope(_self_, &(_81113_scopeTokens), _78135_tokens[(_81013_i - 1LL)]);;
	(*(_81813_scope))._field_Unsafety=_78213_isUnsafe;
	(*(_81813_scope))._field_Deferred=_78313_isDeferred;
	return _81813_scope;;
}



inline jule::Ptr<_1ac6d5c65_LabelSt> _1ad1e76bb_buildLabelSt(_1ad1dd32c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _82436_tokens) {
	jule::Ptr<_1ac6d5c65_LabelSt> _82513_lbl = jule::new_ptr<_1ac6d5c65_LabelSt>(_1ac6d5c65_LabelSt{._field_Token=(*(_82436_tokens))[0LL], ._field_Ident=(*((*(_82436_tokens))[0LL]))._field_Kind});;
	if (((*(_82436_tokens)).len() > 2LL)) {
		((*(_82436_tokens))).mut_slice(2LL);;
		_1ad1debd0_insertAsNext(_self_, _82436_tokens);
	};
	return _82513_lbl;;
}



inline __jule_tuple__1ac6d7cde_StmtData__jule_tuple_bool _1ad1e7a0c_buildIdSt(_1ad1dd32c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _83933_tokens) {
	__jule_tuple__1ac6d7cde_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_83933_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_1ac6b2e62_Token> _84413_token = (*(_83933_tokens))[1LL];;
	{
		auto &_match_expr{ (*(_84413_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1bd4ba84c:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1ad1e76bb_buildLabelSt(_self_, _83933_tokens), &__jule_any_type56);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1bd4bb155:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1ad2081e3_assignInfo> _1ad1e7d4d_buildAssignInfo(_1ad1dd32c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _85339_tokens) {
	jule::Ptr<_1ad2081e3_assignInfo> _85413_info = jule::new_ptr<_1ad2081e3_assignInfo>(_1ad2081e3_assignInfo{._field_ok=true});;
	jule::I64 _85713_braceN = 0LL;;
	{
		auto expr = _85339_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd4bc7a5:;
		if (it != expr_end) {
			jule::I64 _85814_i = it - expr->begin();
			jule::Ptr<_1ac6b2e62_Token> _85821_token = *it;
			{
				{
					auto &_match_expr{ (*(_85821_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1bd4bd641:;
						{
							(_85713_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1bd4bd6b8:;
						{
							(_85713_braceN)--;
						}
					}
					_match_end_1bd4bd575:;
				};
				{
					
					if ((_85713_braceN > 0LL)) {
						_case_begin_1bd4be532:;
						{
							goto _iter_next_1bd4bc7a5;
						}
					}
					else if (((!(_1ac6b7dbd_IsAssignOp((*(_85821_token))._field_Id))) && ((*(_85821_token))._field_Id != static_cast<jule::U64>(38LLU)))) {
						_case_begin_1bd4be5a9:;
						{
							goto _iter_next_1bd4bc7a5;
						}
					}
					_match_end_1bd4be4aa:;
				};
				(*(_85413_info))._field_l=(*(_85339_tokens)).slice(0LL, _85814_i);
				if (((*(_85413_info))._field_l.len() == 0LL)) {
					(*(_85413_info))._field_ok=false;
				};
				(*(_85413_info))._field_setter=_85821_token;
				if (((_85814_i + 1LL) >= (*(_85339_tokens)).len())) {
					(*(_85413_info))._field_r=nullptr;
					(*(_85413_info))._field_ok=_1ac6b7b04_IsPostfixOp((*((*(_85413_info))._field_setter))._field_Id);
					goto _iter_end_1bd4bc7a5;
				};
				(*(_85413_info))._field_r=(*(_85339_tokens)).slice((_85814_i + 1LL));
				if (_1ac6b7b04_IsPostfixOp((*((*(_85413_info))._field_setter))._field_Id)) {
					if (((*(_85413_info))._field_r.len() > 0LL)) {
						_1ad1de5b4_pushErr(_self_, (*(_85413_info))._field_r[0LL], jule::Str::lit("invalid syntax", 14));
						(*(_85413_info))._field_r=nullptr;
					};
				};
				goto _iter_end_1bd4bc7a5;
			}
			_iter_next_1bd4bc7a5:;
			++it;
			_85814_i++;
			goto _iter_begin_1bd4bc7a5;
		}
		_iter_end_1bd4bc7a5:;
	};
	return _85413_info;;
}



inline jule::Ptr<_1ac6d6a9b_AssignLeft> _1ad1e818e_buildAssignL(_1ad1dd32c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _89836_tokens) {
	jule::Ptr<_1ac6d6a9b_AssignLeft> _89913_l = jule::new_ptr<_1ac6d6a9b_AssignLeft>(_1ac6d6a9b_AssignLeft{._field_Token=(*(_89836_tokens))[0LL], });;
	if (((*((*(_89836_tokens))[0LL]))._field_Id == static_cast<jule::U64>(1LLU))) {
		(*(_89913_l))._field_Ident=(*((*(_89913_l))._field_Token))._field_Kind;
	};
	(*(_89913_l))._field_Expr=_1ad20c747_buildExpr((*(_self_))._field_p, _89836_tokens);
	return _89913_l;;
}



inline jule::Slice<jule::Ptr<_1ac6d6a9b_AssignLeft>> _1ad1e84d0_buildAssignLs(_1ad1dd32c_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>>* _90937_parts) {
	jule::Slice<jule::Ptr<_1ac6d6a9b_AssignLeft>> _91017_lefts = nullptr;;
	{
		auto expr = _90937_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd4c70c8:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _91121_part = *it;
			{
				jule::Ptr<_1ac6d6a9b_AssignLeft> _91217_l = _1ad1e818e_buildAssignL(_self_, &(_91121_part));;
				{ jule::Slice<jule::Ptr<_1ac6d6a9b_AssignLeft>> &__jule_push_dest = _91017_lefts; __jule_push_dest.push(_91217_l); };
			}
			_iter_next_1bd4c70c8:;
			++it;
			goto _iter_begin_1bd4c70c8;
		}
		_iter_end_1bd4c70c8:;
	};
	return _91017_lefts;;
}



inline __jule_tuple__1ac6d7cde_StmtData__jule_tuple_bool _1ad1e8821_buildPlainAssign(_1ad1dd32c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _91840_tokens) {
	__jule_tuple__1ac6d7cde_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1ad2081e3_assignInfo> _91913_info = _1ad1e7d4d_buildAssignInfo(_self_, _91840_tokens);;
	if ((!((*(_91913_info))._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac6d712e_AssignSt> _92413_assign = jule::new_ptr<_1ac6d712e_AssignSt>(_1ac6d712e_AssignSt{._field_Setter=(*(_91913_info))._field_setter, });;
	if (((*((*(_91913_info))._field_setter))._field_Id == static_cast<jule::U64>(38LLU))) {
		(*(_92413_assign))._field_Declarative=true;
		(*(_92413_assign))._field_Right=_1ad20c747_buildExpr((*(_self_))._field_p, &((*(_91913_info))._field_r));
		jule::Bool _93213_ok = _1ad1e8c1c_buildDeclAssign1(_self_, &((*(_91913_info))._field_l), &(_92413_assign));;
		if ((!(_93213_ok))) {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		if (((*(_92413_assign))._field_Left.len() > 1LL)) {
			__jule_func_result.__jule_result_arg0 = jule::Any(_92413_assign, &__jule_any_type58);
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		jule::Ptr<_1ac6d6a9b_AssignLeft> _94017_left = (*(_92413_assign))._field_Left[0LL];;
		jule::Ptr<_1ac6db4eb_VarDecl> _94117_decl = jule::new_ptr<_1ac6db4eb_VarDecl>(_1ac6db4eb_VarDecl{._field_Scope=(*(_self_))._field_s, ._field_Token=(*(_94017_left))._field_Token, ._field_Setter=(*(_92413_assign))._field_Setter, ._field_Ident=(*(_94017_left))._field_Ident, ._field_Mutable=(*(_94017_left))._field_Mutable, ._field_Reference=(*(_94017_left))._field_Reference, ._field_Expr=(*(_92413_assign))._field_Right});;
		__jule_func_result.__jule_result_arg0 = jule::Any(_94117_decl, &__jule_any_type16);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>> _95313_parts;;
	jule::Slice<_1a756d63b_Log> _95320_errs;;
	({
		__jule_tuple_ssx_1ac6b2e62_Token__jule_tuple_s_1a756d63b_Log __jule_assign_result = _1ad20a514_parts(&((*(_91913_info))._field_l), static_cast<jule::U64>(5LLU), true);
		_95313_parts = __jule_assign_result.__jule_result_arg0;
		_95320_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_95320_errs.len() > 0LL)) {
		((*((*(_self_))._field_p))._field_errors).append(_95320_errs);;
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(*(_92413_assign))._field_Left=_1ad1e84d0_buildAssignLs(_self_, &(_95313_parts));
	if (((*(_91913_info))._field_r != nullptr)) {
		(*(_92413_assign))._field_Right=_1ad20c747_buildExpr((*(_self_))._field_p, &((*(_91913_info))._field_r));
	};
	__jule_func_result.__jule_result_arg0 = jule::Any(_92413_assign, &__jule_any_type58);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _1ad1e8c1c_buildDeclAssign1(_1ad1dd32c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _96740_lefts, jule::Ptr<_1ac6d712e_AssignSt>* _96762_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>> _96913_parts;;
	jule::Slice<_1a756d63b_Log> _96920_errs;;
	({
		__jule_tuple_ssx_1ac6b2e62_Token__jule_tuple_s_1a756d63b_Log __jule_assign_result = _1ad20a514_parts(_96740_lefts, static_cast<jule::U64>(5LLU), true);
		_96913_parts = __jule_assign_result.__jule_result_arg0;
		_96920_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_96920_errs.len() > 0LL)) {
		((*((*(_self_))._field_p))._field_errors).append(_96920_errs);;
		return false;;
	};
	{
		auto expr = &(_96913_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd4d3733:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _97521_part = *it;
			{
				jule::Bool _97617_isMut = false;;
				jule::Bool _97717_isRef = false;;
				jule::Ptr<_1ac6b2e62_Token> _97913_token = _97521_part[0LL];;
				if (((*(_97913_token))._field_Id == static_cast<jule::U64>(32LLU))) {
					_97617_isMut=true;
					(_97521_part).mut_slice(1LL);;
					if ((_97521_part.len() == 0LL)) {
						_1ad1de5b4_pushErr(_self_, _97913_token, jule::Str::lit("invalid syntax", 14));
						goto _iter_next_1bd4d3733;
					};
				};
				if (((*(_97521_part[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
					_97717_isRef=true;
					(_97521_part).mut_slice(1LL);;
					if ((_97521_part.len() == 0LL)) {
						_1ad1de5b4_pushErr(_self_, _97913_token, jule::Str::lit("invalid syntax", 14));
						goto _iter_next_1bd4d3733;
					};
				};
				if ((((*(_97521_part[0LL]))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(_97521_part[0LL]))._field_Id != static_cast<jule::U64>(74LLU)))) {
					_1ad1de5b4_pushErr(_self_, _97913_token, jule::Str::lit("invalid syntax", 14));
					goto _iter_next_1bd4d3733;
				};
				jule::Ptr<_1ac6d6a9b_AssignLeft> _100317_l = _1ad1e818e_buildAssignL(_self_, &(_97521_part));;
				(*(_100317_l))._field_Mutable=_97617_isMut;
				(*(_100317_l))._field_Reference=_97717_isRef;
				{ jule::Slice<jule::Ptr<_1ac6d6a9b_AssignLeft>> &__jule_push_dest = (*((*(_96762_assign))))._field_Left; __jule_push_dest.push(_100317_l); };
			}
			_iter_next_1bd4d3733:;
			++it;
			goto _iter_begin_1bd4d3733;
		}
		_iter_end_1bd4d3733:;
	};
	return true;;
}



inline __jule_tuple_x_1ac6d712e_AssignSt__jule_tuple_bool _1ad1e905d_buildDeclAssign(_1ad1dd32c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _101238_tokens) {
	__jule_tuple_x_1ac6d712e_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_101238_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(_101238_tokens).mut_slice(1LL);;
	jule::Ptr<_1ac6b2e62_Token> _101813_token = _101238_tokens[0LL];;
	if (((*(_101813_token))._field_Id != static_cast<jule::U64>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac6d712e_AssignSt> _102313_assign = jule::new_ptr<_1ac6d712e_AssignSt>(_1ac6d712e_AssignSt{._field_Declarative=true, });;
	jule::I64 _102713_i = 0LL;;
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _102813_rang = _1ad209c94_range(&(_102713_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_101238_tokens));;
	if ((_102813_rang == nullptr)) {
		_1ad1de5b4_pushErr(_self_, _101813_token, jule::Str::lit("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_102713_i + 1LL) < _101238_tokens.len())) {
		(*(_102313_assign))._field_Setter=_101238_tokens[_102713_i];
		if (((*((*(_102313_assign))._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1ad1de5b4_pushErr(_self_, (*(_102313_assign))._field_Setter, jule::Str::lit("invalid syntax", 14));
		};
		(_102713_i)++;
		jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _103817_exprTokens = _101238_tokens.slice(_102713_i);;
		(*(_102313_assign))._field_Right=_1ad20c747_buildExpr((*(_self_))._field_p, &(_103817_exprTokens));
	};
	jule::Bool _10429_ok = _1ad1e8c1c_buildDeclAssign1(_self_, &(_102813_rang), &(_102313_assign));;
	__jule_func_result.__jule_result_arg0 = _102313_assign;
	__jule_func_result.__jule_result_arg1 = _10429_ok;
	return __jule_func_result;;
}



inline __jule_tuple__1ac6d7cde_StmtData__jule_tuple_bool _1ad1e939e_buildAssignSt(_1ad1dd32c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _104637_tokens) {
	__jule_tuple__1ac6d7cde_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1ad20859a_checkAssignTokens(_104637_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_104637_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1bd4e2203:;
			{
				({
					__jule_tuple_x_1ac6d712e_AssignSt__jule_tuple_bool __jule_assign_result = _1ad1e905d_buildDeclAssign(_self_, (*(_104637_tokens)));
					__jule_func_result.__jule_result_arg0 = jule::Any(__jule_assign_result.__jule_result_arg0, &__jule_any_type58);
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1bd4e1d07:;
			{
				({
					__jule_tuple__1ac6d7cde_StmtData__jule_tuple_bool __jule_assign_result = _1ad1e8821_buildPlainAssign(_self_, _104637_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1bd4e1c91:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1ac6cd389_UseExpr> _1ad1e96e0_buildUseExpr(_1ad1dd32c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _105936_tokens) {
	if (((*(_105936_tokens)).len() == 1LL)) {
		_1ad1de5b4_pushErr(_self_, (*(_105936_tokens))[0LL], jule::Str::lit("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_1ac6cd389_UseExpr> _106413_ue = jule::new_ptr<_1ac6cd389_UseExpr>(_1ac6cd389_UseExpr{._field_Token=(*(_105936_tokens))[0LL], });;
	((*(_105936_tokens))).mut_slice(1LL);;
	(*(_106413_ue))._field_Expr=_1ad20c747_buildExpr((*(_self_))._field_p, _105936_tokens);
	return _106413_ue;;
}



inline jule::Any _1ad1e9a31_buildConstSt(_1ad1dd32c_scopeParser* _self_, jule::Ptr<_1ad1dc98b_stmt>* _107236_st) {
	if (((*((*(_107236_st))))._field_tokens.len() == 1LL)) {
		_1ad1de5b4_pushErr(_self_, (*((*(_107236_st))))._field_tokens[0LL], jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_107236_st))))._field_tokens[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1bd4e6966:;
			{
				(*((*(_107236_st))))._field_tokens=(*((*(_107236_st))))._field_tokens.slice(1LL);
				jule::Ptr<_1ac6dc145_Iter> _108017_iter = _1ad1e36b7_buildIterSt(_self_, _107236_st);;
				if ((_108017_iter != nullptr)) {
					(*(_108017_iter))._field_Comptime=true;
				};
				return jule::Any(_108017_iter, &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1bd4e528e:;
			{
				(*((*(_107236_st))))._field_tokens=(*((*(_107236_st))))._field_tokens.slice(1LL);
				jule::Ptr<_1ac6e0e6d_MatchCase> _108717_mt = _1ad1e7039_buildMatchCase(_self_, (*((*(_107236_st))))._field_tokens);;
				if ((_108717_mt != nullptr)) {
					(*(_108717_mt))._field_Comptime=true;
				};
				return jule::Any(_108717_mt, &__jule_any_type59);;
			}
		}
		else {
			_case_begin_1bd4e634a:;
			{
				return jule::Any(_1ad1e06a3_buildVarSt(_self_, &((*((*(_107236_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		_match_end_1bd4e62d4:;
	};
}



inline jule::Any _1ad1e9d72_buildSt(_1ad1dd32c_scopeParser* _self_, jule::Ptr<_1ad1dc98b_stmt>* _109731_st) {
	jule::Ptr<_1ac6b2e62_Token> _109813_token = (*((*(_109731_st))))._field_tokens[0LL];;
	if (((*(_109813_token))._field_Id == static_cast<jule::U64>(1LLU))) {
		jule::Any _110017_s = jule::Any(nullptr);;
		jule::Bool _110020_ok = false;;
		({
			__jule_tuple__1ac6d7cde_StmtData__jule_tuple_bool __jule_assign_result = _1ad1e7a0c_buildIdSt(_self_, &((*((*(_109731_st))))._field_tokens));
			_110017_s = __jule_assign_result.__jule_result_arg0;
			_110020_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_110020_ok) {
			return _110017_s;;
		};
	};
	jule::Any _110613_s = jule::Any(nullptr);;
	jule::Bool _110616_ok = false;;
	({
		__jule_tuple__1ac6d7cde_StmtData__jule_tuple_bool __jule_assign_result = _1ad1e939e_buildAssignSt(_self_, &((*((*(_109731_st))))._field_tokens));
		_110613_s = __jule_assign_result.__jule_result_arg0;
		_110616_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_110616_ok) {
		return _110613_s;;
	};
	{
		auto &_match_expr{ (*(_109813_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1bd4ec021:;
			{
				return jule::Any(_1ad1e96e0_buildUseExpr(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1bd4ec571:;
			{
				return _1ad1e9a31_buildConstSt(_self_, _109731_st);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1bd4ec73b:;
			{
				return jule::Any(_1ad1e06a3_buildVarSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1bd4ec7a2:;
			{
				return jule::Any(_1ad1e09e4_buildRetSt(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1bd4ec818:;
			{
				return jule::Any(_1ad1e36b7_buildIterSt(_self_, _109731_st), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1bd4ec87e:;
			{
				return jule::Any(_1ad1e3a08_buildBreakSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1bd4ec8e5:;
			{
				return jule::Any(_1ad1e3d49_buildContSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1bd4ec96c:;
			{
				return jule::Any(_1ad1e481c_buildIfElseChain(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1bd4ec9e4:;
			{
				return jule::Any(_1ad1e4b5d_buildCoCallSt(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(18LLU)) {
			_case_begin_1bd4eca6b:;
			{
				return jule::Any(_1ad1e4e9e_buildGotoSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type57);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_1bd4ecae3:;
			{
				return jule::Any(_1ad1e52e0_buildFallSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1bd4ecb6a:;
			{
				return jule::Any(_1ad1e5631_buildTypeAliasSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1bd4ecbe2:;
			{
				return jule::Any(_1ad1e7039_buildMatchCase(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type59);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1bd4ecc69:;
			{
				if (((*((*(_109731_st))))._field_tokens.len() < 1LL)) {
					goto _match_end_1bd4ec384;
				};
				if ((((*((*((*(_109731_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(33LLU)) || ((*((*((*(_109731_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(72LLU)))) {
					return jule::Any(_1ad1e737a_buildScopeSt(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type51);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1bd4ecce1:;
			{
				return jule::Any(_1ad1e737a_buildScopeSt(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type51);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1bd4ecd68:;
			{
				return jule::Any(_1ad1e737a_buildScopeSt(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type51);;
			}
		}
		_match_end_1bd4ec384:;
	};
	jule::Ptr<_1ac6cc9b5_Expr> _115313_expr = _1ad20c747_buildExpr((*(_self_))._field_p, &((*((*(_109731_st))))._field_tokens));;
	if ((_115313_expr != nullptr)) {
		return jule::Any(_115313_expr, &__jule_any_type52);;
	};
	_1ad1de5b4_pushErr(_self_, _109813_token, jule::Str::lit("invalid syntax", 14));
	return nullptr;;
}



inline void _1ad1ea1d5_build(_1ad1dd32c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _116129_tokens, jule::Ptr<_1ac6d86a2_ScopeTree>* _116152_s) {
	if (((*(_116152_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1ad1dcd43_splitStmts(_116129_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_116152_s));
	while (((!(_1ad1de251_isLastSt(_self_))) && (!(_1ad1ddeba_finished(_self_))))) {
		{
			jule::Ptr<_1ad1dc98b_stmt> _116917_st = _1ad1dee66_next(_self_);;
			jule::Any _117017_data = _1ad1e9d72_buildSt(_self_, &(_116917_st));;
			if ((_117017_data != nullptr)) {
				{ jule::Slice<_1ac6d8042_Stmt> &__jule_push_dest = (*((*(_self_))._field_s))._field_Stmts; __jule_push_dest.push(_1ac6d8042_Stmt{._field_Token=(*(_116917_st))._field_tokens[0LL], ._field_Data=_117017_data}); };
			};
			if (_1ad1ddc34_stopped(_self_)) {
				goto _iter_end_1bd50901c;
			};
		}
	_iter_next_1bd50901c:;
	}
	_iter_end_1bd50901c:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ad1dd32c_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _1ad1eb538_pushErr(_1ad1eac52_exprBuilder* _self_, jule::Ptr<_1ac6b2e62_Token> _4526_token, jule::Str _4541_fmt, jule::Slice<jule::Any> _4554_args) {
	_1ad20c093_pushErr((*(_self_))._field_p.ptr(), _4526_token, _4541_fmt, _4554_args);
}



inline void _1ad1eb89b_pushSuggestion(_1ad1eac52_exprBuilder* _self_, jule::Str _5033_fmt, jule::Slice<jule::Any> _5046_args) {
	_1ad20c406_pushSuggestion((*(_self_))._field_p.ptr(), _5033_fmt, _5046_args);
}



inline jule::Ptr<_1ac6cd686_TupleExpr> _1ad1ebbdc_buildTuple(_1ad1eac52_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>>* _5434_parts) {
	jule::Ptr<_1ac6cd686_TupleExpr> _5513_tuple = jule::new_ptr<_1ac6cd686_TupleExpr>(_1ac6cd686_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>>::alloc(0LL, (*(_5434_parts)).len())});;
	{
		auto expr = _5434_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd5289ed:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _5821_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>> &__jule_push_dest = (*(_5513_tuple))._field_Expr; __jule_push_dest.push(_1ad2060d1_buildFromTokens(_self_, _5821_part)); };
			}
			_iter_next_1bd5289ed:;
			++it;
			goto _iter_begin_1bd5289ed;
		}
		_iter_end_1bd5289ed:;
	};
	return _5513_tuple;;
}



inline jule::Ptr<_1ac6cda60_LitExpr> _1ad1ec02d_buildLit(_1ad1eac52_exprBuilder* _self_, jule::Ptr<_1ac6b2e62_Token> _6427_token) {
	return jule::new_ptr<_1ac6cda60_LitExpr>(_1ac6cda60_LitExpr{._field_Token=_6427_token, ._field_Value=(*(_6427_token))._field_Kind});;
}



inline jule::Any _1ad1ec6b0_buildSingle(_1ad1eac52_exprBuilder* _self_, jule::Ptr<_1ac6b2e62_Token> _7534_token) {
	{
		auto &_match_expr{ (*(_7534_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1bd52a9cd:;
			{
				return jule::Any(_1ad1ec02d_buildLit(_self_, _7534_token), &__jule_any_type101);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1bd52aa55:;
			{
				return jule::Any(jule::new_ptr<_1ac6cee4b_VariadicExpr>(_1ac6cee4b_VariadicExpr{._field_Token=_7534_token, }), &__jule_any_type75);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(24LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1bd52aacc:;
			{
				return jule::Any(_1ad2074bc_buildIdentExpr(&(_7534_token)), &__jule_any_type79);;
			}
		}
		_match_end_1bd52a901:;
	};
	_1ad1eb538_pushErr(_self_, _7534_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1ac6ce3e0_IdentExpr> _1ad1eca01_buildBindIdent(_1ad1eac52_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _9238_tokens) {
	if (((*((*(_9238_tokens))[0LL]))._field_Id != static_cast<jule::U64>(27LLU))) {
		return nullptr;;
	} else if (((*((*(_9238_tokens))[1LL]))._field_Id != static_cast<jule::U64>(17LLU))) {
		_1ad1eb538_pushErr(_self_, (*(_9238_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ad1eb89b_pushSuggestion(_self_, jule::Str::lit("use dot (.) to access binded defines", 36), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac6b2e62_Token> _10013_token = (*(_9238_tokens))[2LL];;
	if (((*(_10013_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1ad1eb538_pushErr(_self_, (*(_9238_tokens))[2LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ad1eb89b_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac6ce3e0_IdentExpr> _10613_expr = _1ad2074bc_buildIdentExpr(&(_10013_token));;
	(*(_10613_expr))._field_Binded=true;
	return _10613_expr;;
}



inline jule::Ptr<_1ac6cea72_UnaryExpr> _1ad1ecd42_buildUnary(_1ad1eac52_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _11133_tokens) {
	jule::Ptr<_1ac6b2e62_Token> _11213_op = _11133_tokens[0LL];;
	if ((_11133_tokens.len() == 1LL)) {
		_1ad1eb538_pushErr(_self_, _11213_op, jule::Str::lit("missing expression for unary operator", 37), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1ac6b369e_IsUnaryOp((*(_11213_op))._field_Id)))) {
		_1ad1eb538_pushErr(_self_, _11213_op, jule::Str::lit("invalid unary operator: @", 25), jule::Slice<jule::Any>::make({jule::Any((*(_11213_op))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	(_11133_tokens).mut_slice(1LL);;
	return jule::new_ptr<_1ac6cea72_UnaryExpr>(_1ac6cea72_UnaryExpr{._field_Op=_11213_op, ._field_Expr=_1ad2060d1_buildFromTokens(_self_, _11133_tokens)});;
}



inline jule::Ptr<_1ac6d0ac8_SubIdentExpr> _1ad1ed183_buildObjSubIdent(_1ad1eac52_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _13239_tokens) {
	jule::I64 _13313_i = (_13239_tokens.len() - 1LL);;
	jule::Ptr<_1ac6b2e62_Token> _13413_identToken = _13239_tokens[_13313_i];;
	(_13313_i)--;
	(_13239_tokens).mut_slice(0LL, _13313_i);;
	if ((_13239_tokens.len() == 0LL)) {
		_1ad1eb538_pushErr(_self_, _13413_identToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ac6d0ac8_SubIdentExpr>(_1ac6d0ac8_SubIdentExpr{._field_Expr=_1ad2060d1_buildFromTokens(_self_, _13239_tokens), ._field_Ident=_13413_identToken});;
}



inline jule::Ptr<_1ac6d06ee_NsSelectionExpr> _1ad1ed4c4_buildNsSubIdent(_1ad1eac52_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _14739_tokens) {
	jule::Ptr<_1ac6d06ee_NsSelectionExpr> _14813_ns = jule::new_ptr<_1ac6d06ee_NsSelectionExpr>();;
	if ((((*(_14739_tokens)).len() == 3LL) && ((*((*(_14739_tokens))[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		(*(_14813_ns))._field_Ns=(*(_14739_tokens)).slice(0LL, 1LL);
		(*(_14813_ns))._field_Ident=(*(_14739_tokens))[2LL];
	} else {
		{
			auto expr = _14739_tokens;
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd537864:;
			if (it != expr_end) {
				jule::I64 _15418_i = it - expr->begin();
				jule::Ptr<_1ac6b2e62_Token> _15425_token = *it;
				{
					if (((_15418_i & 1LL) == 0LL)) {
						if (((*(_15425_token))._field_Id != static_cast<jule::U64>(1LLU))) {
							_1ad1eb538_pushErr(_self_, _15425_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							_1ad1eb89b_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
						};
						{ jule::Slice<jule::Ptr<_1ac6b2e62_Token>> &__jule_push_dest = (*(_14813_ns))._field_Ns; __jule_push_dest.push(_15425_token); };
					} else if (((*(_15425_token))._field_Id != static_cast<jule::U64>(19LLU))) {
						_1ad1eb538_pushErr(_self_, _15425_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						_1ad1eb89b_pushSuggestion(_self_, jule::Str::lit("expected double colon \"::\"", 26), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1bd537864:;
				++it;
				_15418_i++;
				goto _iter_begin_1bd537864;
			}
			_iter_end_1bd537864:;
		};
		(*(_14813_ns))._field_Ident=(*(_14813_ns))._field_Ns[((*(_14813_ns))._field_Ns.len() - 1LL)];
		(*(_14813_ns))._field_Ns=(*(_14813_ns))._field_Ns.slice(0LL, ((*(_14813_ns))._field_Ns.len() - 1LL));
	};
	return _14813_ns;;
}



inline jule::Ptr<_1ac6c8681_TypeDecl> _1ad1ed815_buildType(_1ad1eac52_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _17233_tokens) {
	jule::I64 _17313_i = 0LL;;
	jule::Ptr<_1ac6c8681_TypeDecl> _17413_t;;
	jule::Bool _17416_ok = false;;
	({
		__jule_tuple_x_1ac6c8681_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad20db99_buildType((*(_self_))._field_p, _17233_tokens, (&(_17313_i)), false);
		_17413_t = __jule_assign_result.__jule_result_arg0;
		_17416_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_17416_ok))) {
		_1ad1eb538_pushErr(_self_, (*(_17233_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_17313_i < (*(_17233_tokens)).len())) {
		_1ad1eb538_pushErr(_self_, (*(_17233_tokens))[_17313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _17413_t;;
}



inline jule::Any _1ad1edb56_buildSubIdent(_1ad1eac52_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _18637_tokens) {
	jule::I64 _1879_i = ((*(_18637_tokens)).len() - 2LL);;
	jule::Ptr<_1ac6b2e62_Token> _1889_token = (*(_18637_tokens))[_1879_i];;
	{
		auto &_match_expr{ (*(_1889_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(17LLU)) {
			_case_begin_1bd53ead0:;
			{
				return jule::Any(_1ad1ed183_buildObjSubIdent(_self_, (*(_18637_tokens))), &__jule_any_type85);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1bd5401da:;
			{
				return jule::Any(_1ad1ed4c4_buildNsSubIdent(_self_, _18637_tokens), &__jule_any_type89);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1bd540251:;
			{
				return jule::Any(_1ad1ed815_buildType(_self_, _18637_tokens), &__jule_any_type88);;
			}
		}
		_match_end_1bd5400ca:;
	};
	_1ad1eb538_pushErr(_self_, _1889_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1ac6cee4b_VariadicExpr> _1ad1ede97_buildVariadic(_1ad1eac52_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _20236_tokens) {
	jule::Ptr<_1ac6b2e62_Token> _20313_token = _20236_tokens[(_20236_tokens.len() - 1LL)];;
	(_20236_tokens).mut_slice(0LL, (_20236_tokens.len() - 1LL));;
	return jule::new_ptr<_1ac6cee4b_VariadicExpr>(_1ac6cee4b_VariadicExpr{._field_Token=_20313_token, ._field_Expr=_1ad2060d1_buildFromTokens(_self_, _20236_tokens)});;
}



inline jule::Ptr<_1ac6cccb2_RangeExpr> _1ad1ee2d8_buildBetweenParentheses(_1ad1eac52_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _21146_tokens) {
	if ((_21146_tokens.len() == 2LL)) {
		_1ad1eb538_pushErr(_self_, _21146_tokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		_1ad1eb89b_pushSuggestion(_self_, jule::Str::lit("empty parentheses are not valid expression, must include an expression in range", 79), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_21146_tokens).mut_slice(1LL, (_21146_tokens.len() - 1LL));;
	return jule::new_ptr<_1ac6cccb2_RangeExpr>(_1ac6cccb2_RangeExpr{._field_Expr=_1ad2060d1_buildFromTokens(_self_, _21146_tokens)});;
}



inline jule::Ptr<_1ac6d0325_CastExpr> _1ad1ee629_tryBuildCast(_1ad1eac52_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _22336_tokens) {
	jule::I64 _22413_rangeN = 0LL;;
	{
		auto expr = _22336_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd5452bc:;
		if (it != expr_end) {
			jule::I64 _22513_i = it - expr->begin();
			jule::Ptr<_1ac6b2e62_Token> _22516_token = *it;
			{
				{
					auto &_match_expr{ (*(_22516_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1bd5460ae:;
						{
							(_22413_rangeN)++;
							goto _iter_next_1bd5452bc;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1bd546136:;
						{
							(_22413_rangeN)--;
						}
					}
					_match_end_1bd545ee3:;
				};
				if ((_22413_rangeN > 0LL)) {
					goto _iter_next_1bd5452bc;
				} else if (((_22513_i + 1LL) == (*(_22336_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _24417_typeTokens = (*(_22336_tokens)).slice(0LL, (_22513_i + 1LL));;
				jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _24517_exprTokens = (*(_22336_tokens)).slice((_22513_i + 1LL));;
				if ((_24517_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_1ac6b2e62_Token> _25213_tok = _24517_exprTokens[0LL];;
				if (((*(_25213_tok))._field_Id != static_cast<jule::U64>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_1ac6d0325_CastExpr> _25717_cast = jule::new_ptr<_1ac6d0325_CastExpr>(_1ac6d0325_CastExpr{});;
				if ((_24517_exprTokens.len() == 2LL)) {
					_1ad1eb538_pushErr(_self_, _24517_exprTokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
					_1ad1eb89b_pushSuggestion(_self_, jule::Str::lit("give an expression for casting", 30), jule::Slice<jule::Any>());
				};
				if ((_24417_typeTokens.len() == 2LL)) {
					_1ad1eb538_pushErr(_self_, _24417_typeTokens[0LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					_1ad1eb89b_pushSuggestion(_self_, jule::Str::lit("type declaration expected for casting", 37), jule::Slice<jule::Any>());
				} else {
					(_24417_typeTokens).mut_slice(1LL, (_24417_typeTokens.len() - 1LL));;
					jule::I64 _27121_typeIndex = 0LL;;
					jule::Ptr<_1ac6c8681_TypeDecl> _27221_t;;
					jule::Bool _27224_ok = false;;
					({
						__jule_tuple_x_1ac6c8681_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad20db99_buildType((*(_self_))._field_p, &(_24417_typeTokens), (&(_27121_typeIndex)), true);
						_27221_t = __jule_assign_result.__jule_result_arg0;
						_27224_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_27224_ok && (_27121_typeIndex < _24417_typeTokens.len()))) {
						_1ad1eb538_pushErr(_self_, _24417_typeTokens[_27121_typeIndex], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					} else if ((!(_27224_ok))) {
						return _25717_cast;;
					};
					(*(_25717_cast))._field_Kind=_27221_t;
					if ((_24517_exprTokens.len() > 2LL)) {
						jule::I64 _28225_j = 0LL;;
						_1ad209c94_range(&(_28225_j), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_24517_exprTokens));
						if ((_28225_j < _24517_exprTokens.len())) {
							return nullptr;;
						};
						(_24517_exprTokens).mut_slice(0LL, _28225_j);;
						(*(_25717_cast))._field_Expr=_1ad2060d1_buildFromTokens(_self_, _24517_exprTokens);
					};
				};
				return _25717_cast;;
			}
			_iter_next_1bd5452bc:;
			++it;
			_22513_i++;
			goto _iter_begin_1bd5452bc;
		}
		_iter_end_1bd5452bc:;
	};
	return nullptr;;
}



inline void _1ad1eea47_pushArg(_1ad1eac52_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>>* _29731_args, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _29750_tokens, jule::Ptr<_1ac6b2e62_Token> _29768_err_token) {
	if ((_29750_tokens.len() == 0LL)) {
		_1ad1eb538_pushErr(_self_, _29768_err_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ad1eb89b_pushSuggestion(_self_, jule::Str::lit("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>> &__jule_push_dest = (*(_29731_args)); __jule_push_dest.push(_1ad2060d1_buildFromTokens(_self_, _29750_tokens)); };
}



inline jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>> _1ad1eed88_buildArgs(_1ad1eac52_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _30632_tokens) {
	if ((_30632_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>> _31217_args = nullptr;;
	jule::I64 _31313_last = 0LL;;
	jule::I64 _31413_rangeN = 0LL;;
	(_30632_tokens).mut_slice(1LL, (_30632_tokens.len() - 1LL));;
	{
		auto expr = &(_30632_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd5531cb:;
		if (it != expr_end) {
			jule::I64 _31613_i = it - expr->begin();
			jule::Ptr<_1ac6b2e62_Token> _31616_token = *it;
			{
				{
					auto &_match_expr{ (*(_31616_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1bd5542ed:;
						{
							(_31413_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1bd554375:;
						{
							(_31413_rangeN)--;
						}
					}
					_match_end_1bd554232:;
				};
				if (((_31413_rangeN > 0LL) || ((*(_31616_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1bd5531cb;
				};
				_1ad1eea47_pushArg(_self_, &(_31217_args), _30632_tokens.slice(_31313_last, _31613_i), _31616_token);
				_31313_last=static_cast<jule::I64>((_31613_i + 1LL));
			}
			_iter_next_1bd5531cb:;
			++it;
			_31613_i++;
			goto _iter_begin_1bd5531cb;
		}
		_iter_end_1bd5531cb:;
	};
	if ((_31313_last < _30632_tokens.len())) {
		if ((_31313_last == 0LL)) {
			if ((_30632_tokens.len() > 0LL)) {
				_1ad1eea47_pushArg(_self_, &(_31217_args), _30632_tokens.slice(_31313_last), _30632_tokens[_31313_last]);
			};
		} else {
			_1ad1eea47_pushArg(_self_, &(_31217_args), _30632_tokens.slice(_31313_last), _30632_tokens[(_31313_last - 1LL)]);
		};
	};
	return _31217_args;;
}



inline jule::Ptr<_1ac6d16de_FnCallExpr> _1ad200680_buildFnCall(_1ad1eac52_exprBuilder* _self_, jule::Ptr<_1ac6b2e62_Token>* _37235_token, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _37255_expr, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _37276_args) {
	return jule::new_ptr<_1ac6d16de_FnCallExpr>(_1ac6d16de_FnCallExpr{._field_Token=(*(_37235_token)), ._field_Expr=_1ad2060d1_buildFromTokens(_self_, (*(_37255_expr))), ._field_Args=_1ad1eed88_buildArgs(_self_, (*(_37276_args))), });;
}



inline jule::Any _1ad2009c1_buildParenthesesRange(_1ad1eac52_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _38045_tokens) {
	jule::Ptr<_1ac6b2e62_Token> _38113_token = (*(_38045_tokens))[0LL];;
	if (((*(_38113_token))._field_Id == static_cast<jule::U64>(74LLU))) {
		jule::Ptr<_1ac6d0325_CastExpr> _38317_expr = _1ad1ee629_tryBuildCast(_self_, _38045_tokens);;
		if ((_38317_expr != nullptr)) {
			return jule::Any(_38317_expr, &__jule_any_type105);;
		};
	};
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _38813_exprTokens;;
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _38829_args_tokens;;
	({
		__jule_tuple_sx_1ac6b2e62_Token__jule_tuple_sx_1ac6b2e62_Token __jule_assign_result = _1ad20a05d_rangeLast(_38045_tokens);
		_38813_exprTokens = __jule_assign_result.__jule_result_arg0;
		_38829_args_tokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_38813_exprTokens.len() == 0LL)) {
		return jule::Any(_1ad1ee2d8_buildBetweenParentheses(_self_, _38829_args_tokens), &__jule_any_type100);;
	};
	return jule::Any(_1ad200680_buildFnCall(_self_, &(_38113_token), &(_38813_exprTokens), &(_38829_args_tokens)), &__jule_any_type107);;
}



inline jule::Ptr<_1ac6cde39_UnsafeExpr> _1ad200d12_buildUnsafeExpr(_1ad1eac52_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _39738_tokens) {
	jule::Ptr<_1ac6b2e62_Token> _39813_token = _39738_tokens[0LL];;
	(_39738_tokens).mut_slice(1LL);;
	jule::I64 _40013_i = 0LL;;
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _40113_rangeTokens = _1ad209c94_range(&(_40013_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_39738_tokens));;
	if ((_40113_rangeTokens.len() == 0LL)) {
		_1ad1eb538_pushErr(_self_, _39738_tokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ac6cde39_UnsafeExpr>(_1ac6cde39_UnsafeExpr{._field_Token=_39813_token, ._field_Expr=_1ad2060d1_buildFromTokens(_self_, _40113_rangeTokens)});;
}



inline jule::Ptr<_1ac6da341_FnDecl> _1ad201153_buildAnonFn(_1ad1eac52_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _41235_tokens) {
	jule::Ptr<_1ac6da341_FnDecl> _41313_f = _1ad2132db_buildFn((*(_self_))._field_p, _41235_tokens, false, false);;
	if ((!(_1ac6da6a4_IsAnon(_41313_f.ptr())))) {
		_1ad1eb538_pushErr(_self_, (*(_41313_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ad1eb89b_pushSuggestion(_self_, jule::Str::lit("anonymous function expected, remove identifier of function", 58), jule::Slice<jule::Any>());
	};
	return _41313_f;;
}



inline jule::Any _1ad201494_buildUnsafe(_1ad1eac52_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _42135_tokens) {
	{
		auto &_match_expr{ (*((*(_42135_tokens))[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1bd565a6d:;
			{
				return jule::Any(_1ad201153_buildAnonFn(_self_, _42135_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_1bd565452:;
			{
				return jule::Any(_1ad200d12_buildUnsafeExpr(_self_, (*(_42135_tokens))), &__jule_any_type102);;
			}
		}
		_match_end_1bd565386:;
	};
}



inline void _1ad2018b2_pushRangeLitPart(_1ad1eac52_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _43139_part, jule::Ptr<_1ac6b2e62_Token> _4329_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>>* _43234_parts) {
	if ((_43139_part.len() == 0LL)) {
		_1ad1eb538_pushErr(_self_, _4329_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ad1eb89b_pushSuggestion(_self_, jule::Str::lit("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>> &__jule_push_dest = (*(_43234_parts)); __jule_push_dest.push(_43139_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>> _1ad201c03_getBraceRangeLitExprParts(_1ad1eac52_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _44248_tokens) {
	if ((_44248_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>> _44817_parts = nullptr;;
	jule::I64 _45013_last = 0LL;;
	jule::I64 _45113_rangeN = 0LL;;
	(_44248_tokens).mut_slice(1LL, (_44248_tokens.len() - 1LL));;
	{
		auto expr = &(_44248_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd569016:;
		if (it != expr_end) {
			jule::I64 _45313_i = it - expr->begin();
			jule::Ptr<_1ac6b2e62_Token> _45316_token = *it;
			{
				{
					auto &_match_expr{ (*(_45316_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1bd56a138:;
						{
							(_45113_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1bd56a1b0:;
						{
							(_45113_rangeN)--;
						}
					}
					_match_end_1bd56a06c:;
				};
				if (((_45113_rangeN > 0LL) || ((*(_45316_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1bd569016;
				};
				_1ad2018b2_pushRangeLitPart(_self_, _44248_tokens.slice(_45013_last, _45313_i), _45316_token, &(_44817_parts));
				_45013_last=static_cast<jule::I64>((_45313_i + 1LL));
			}
			_iter_next_1bd569016:;
			++it;
			_45313_i++;
			goto _iter_begin_1bd569016;
		}
		_iter_end_1bd569016:;
	};
	if ((_45013_last < _44248_tokens.len())) {
		if ((_45013_last == 0LL)) {
			if ((_44248_tokens.len() > 0LL)) {
				_1ad2018b2_pushRangeLitPart(_self_, _44248_tokens.slice(_45013_last), _44248_tokens[_45013_last], &(_44817_parts));
			};
		} else {
			_1ad2018b2_pushRangeLitPart(_self_, _44248_tokens.slice(_45013_last), _44248_tokens[(_45013_last - 1LL)], &(_44817_parts));
		};
	};
	return _44817_parts;;
}



inline jule::Ptr<_1ac6d21d4_FieldExprPair> _1ad202044_buildFieldExprPair(_1ad1eac52_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _48441_tokens) {
	if (((_48441_tokens.len() - 2LL) == 0LL)) {
		_1ad1eb538_pushErr(_self_, _48441_tokens[1LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac6d21d4_FieldExprPair> _48913_pair = jule::new_ptr<_1ac6d21d4_FieldExprPair>(_1ac6d21d4_FieldExprPair{._field_Field=_48441_tokens[0LL], });;
	(_48441_tokens).mut_slice(2LL);;
	(*(_48913_pair))._field_Expr=_1ad2060d1_buildFromTokens(_self_, _48441_tokens);
	return _48913_pair;;
}



inline jule::Ptr<_1ac6cc9b5_Expr> _1ad202385_buildStructLitExpr(_1ad1eac52_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _49742_tokens) {
	jule::Ptr<_1ac6b2e62_Token> _49813_token = (*(_49742_tokens))[0LL];;
	if ((((*(_49813_token))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_49742_tokens)).len() > 1LL))) {
		_49813_token=(*(_49742_tokens))[1LL];
		if (((*(_49813_token))._field_Id == static_cast<jule::U64>(8LLU))) {
			return jule::new_ptr<_1ac6cc9b5_Expr>(_1ac6cc9b5_Expr{._field_Token=_49813_token, ._field_End=(*(_49742_tokens))[((*(_49742_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1ad202044_buildFieldExprPair(_self_, (*(_49742_tokens))), &__jule_any_type77)});;
		};
	};
	return _1ad2060d1_buildFromTokens(_self_, (*(_49742_tokens)));;
}



inline jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>> _1ad2026c6_buildStructLitExprs(_1ad1eac52_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _51243_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>> _51313_parts = _1ad201c03_getBraceRangeLitExprParts(_self_, (*(_51243_tokens)));;
	if ((_51313_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>> _51813_pairs = jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>>::alloc(0LL, _51313_parts.len());;
	{
		auto expr = &(_51313_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd5736e6:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _51921_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>> &__jule_push_dest = _51813_pairs; __jule_push_dest.push(_1ad202385_buildStructLitExpr(_self_, &(_51921_part))); };
			}
			_iter_next_1bd5736e6:;
			++it;
			goto _iter_begin_1bd5736e6;
		}
		_iter_end_1bd5736e6:;
	};
	return _51813_pairs;;
}



inline jule::Ptr<_1ac6d2a0e_StructLit> _1ad202a17_buildTypedStructLiteral(_1ad1eac52_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _52546_tokens) {
	jule::I64 _52613_i = 0LL;;
	jule::Ptr<_1ac6c8681_TypeDecl> _52713_t;;
	jule::Bool _52716_ok = false;;
	({
		__jule_tuple_x_1ac6c8681_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad20db99_buildType((*(_self_))._field_p, &(_52546_tokens), (&(_52613_i)), true);
		_52713_t = __jule_assign_result.__jule_result_arg0;
		_52716_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_52716_ok))) {
		return nullptr;;
	} else if ((_52613_i >= _52546_tokens.len())) {
		_1ad1eb538_pushErr(_self_, _52546_tokens[_52613_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_52546_tokens).mut_slice(_52613_i);;
	jule::Ptr<_1ac6b2e62_Token> _5369_token = _52546_tokens[0LL];;
	if (((*(_5369_token))._field_Id != static_cast<jule::U64>(72LLU))) {
		_1ad1eb538_pushErr(_self_, _5369_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ac6d2a0e_StructLit>(_1ac6d2a0e_StructLit{._field_End=_52546_tokens[(_52546_tokens.len() - 1LL)], ._field_Kind=_52713_t, ._field_Exprs=_1ad2026c6_buildStructLitExprs(_self_, &(_52546_tokens))});;
}



inline jule::Ptr<_1ac6cc9b5_Expr> _1ad202d58_buildBraceLitPart(_1ad1eac52_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _54941_tokens) {
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _55013_l;;
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _55020_r;;
	({
		__jule_tuple_sx_1ac6b2e62_Token__jule_tuple_sx_1ac6b2e62_Token __jule_assign_result = _1ad206e39_splitDelim(_54941_tokens, static_cast<jule::U64>(8LLU));
		_55013_l = __jule_assign_result.__jule_result_arg0;
		_55020_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_55013_l != nullptr)) {
		return jule::new_ptr<_1ac6cc9b5_Expr>(_1ac6cc9b5_Expr{._field_Token=(*(_54941_tokens))[0LL], ._field_End=(*(_54941_tokens))[((*(_54941_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1ac6d37e0_KeyValPair>(_1ac6d37e0_KeyValPair{._field_Key=_1ad2060d1_buildFromTokens(_self_, _55013_l), ._field_Val=_1ad2060d1_buildFromTokens(_self_, _55020_r), ._field_Colon=(*(_54941_tokens))[_55013_l.len()]}), &__jule_any_type78)});;
	};
	return _1ad2060d1_buildFromTokens(_self_, (*(_54941_tokens)));;
}



inline jule::Ptr<_1ac6d2eb5_BraceLit> _1ad203199_buildBraceLit(_1ad1eac52_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _56637_tokens) {
	jule::Ptr<_1ac6d2eb5_BraceLit> _56713_lit = jule::new_ptr<_1ac6d2eb5_BraceLit>(_1ac6d2eb5_BraceLit{._field_Token=(*(_56637_tokens))[0LL], ._field_End=(*(_56637_tokens))[((*(_56637_tokens)).len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>> _57213_parts = _1ad201c03_getBraceRangeLitExprParts(_self_, (*(_56637_tokens)));;
	if ((_57213_parts == nullptr)) {
		return _56713_lit;;
	};
	(*(_56713_lit))._field_Exprs=jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>>::alloc(0LL, _57213_parts.len());
	{
		auto expr = &(_57213_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd57cdb5:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _57821_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>> &__jule_push_dest = (*(_56713_lit))._field_Exprs; __jule_push_dest.push(_1ad202d58_buildBraceLitPart(_self_, &(_57821_part))); };
			}
			_iter_next_1bd57cdb5:;
			++it;
			goto _iter_begin_1bd57cdb5;
		}
		_iter_end_1bd57cdb5:;
	};
	return _56713_lit;;
}



inline jule::Any _1ad2034da_buildBraceRange(_1ad1eac52_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _58539_tokens) {
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _58613_exprTokens;;
	jule::I64 _58625_rangeN = 0;;
	({
		__jule_tuple_sx_1ac6b2e62_Token__jule_tuple_int __jule_assign_result = _1ad207786_getRangeExprTokens(_58539_tokens);
		_58613_exprTokens = __jule_assign_result.__jule_result_arg0;
		_58625_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_58613_exprTokens.len() == 0LL)) {
			_case_begin_1bd57de2c:;
			{
				return jule::Any(_1ad203199_buildBraceLit(_self_, _58539_tokens), &__jule_any_type108);;
			}
		}
		else if ((_58625_rangeN > 0LL)) {
			_case_begin_1bd57e757:;
			{
				_1ad1eb538_pushErr(_self_, (*(_58539_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bd57da64:;
	};
	jule::Ptr<_1ac6b2e62_Token> _5979_elseToken = _58613_exprTokens[(_58613_exprTokens.len() - 1LL)];;
	if (((*(_58613_exprTokens[(_58613_exprTokens.len() - 1LL)]))._field_Id == static_cast<jule::U64>(14LLU))) {
		(_58613_exprTokens).mut_slice(0LL, (_58613_exprTokens.len() - 1LL));;
		jule::Any _60017_d = _1ad20594e_build(_self_, &(_58613_exprTokens));;
		if ((_60017_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _60017_d };
			
			if (_match_expr.type == &__jule_any_type107) {
				_case_begin_1bd582936:;
				{
					((*(_58539_tokens))).mut_slice((_58613_exprTokens.len() + 1LL));;
					jule::I64 _60721_i = 0LL;;
					jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _60821_rangeTokens = _1ad209c94_range(&(_60721_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _58539_tokens);;
					jule::Ptr<_1ac6d16de_FnCallExpr> _60921_model = _60017_d.cast_ptr<_1ac6d16de_FnCallExpr>(&__jule_any_type107);;
					if (_1ac6d1ce9_Ignored(_60921_model.ptr())) {
						_1ad1eb538_pushErr(_self_, _5979_elseToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						_1ad1eb89b_pushSuggestion(_self_, jule::Str::lit("just ignore exceptional or handle it but you cannot do both at same time", 72), jule::Slice<jule::Any>());
					};
					(*(_60921_model))._field_Exception=_1ad20d23c_buildScope((*(_self_))._field_p, &(_60821_rangeTokens), (*(_58539_tokens))[(_60721_i - 1LL)]);
					return _60017_d;;
				}
			}
			else {
				_case_begin_1bd5823b4:;
				{
					_1ad1eb538_pushErr(_self_, _58613_exprTokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1bd58211c:;
		};
	};
	{
		auto &_match_expr{ (*(_58613_exprTokens[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1bd5868d5:;
			{
				return _1ad201494_buildUnsafe(_self_, _58539_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1bd587012:;
			{
				return jule::Any(_1ad201153_buildAnonFn(_self_, _58539_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1bd587078:;
			{
				return jule::Any(_1ad202a17_buildTypedStructLiteral(_self_, (*(_58539_tokens))), &__jule_any_type106);;
			}
		}
		else {
			_case_begin_1bd582ded:;
			{
				_1ad1eb538_pushErr(_self_, _58613_exprTokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bd5863b8:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>> _1ad20382b_getEnumerableParts(_1ad1eac52_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _63741_tokens) {
	(_63741_tokens).mut_slice(1LL, (_63741_tokens.len() - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>> _63913_parts;;
	jule::Slice<_1a756d63b_Log> _63920_errors;;
	({
		__jule_tuple_ssx_1ac6b2e62_Token__jule_tuple_s_1a756d63b_Log __jule_assign_result = _1ad20a514_parts(&(_63741_tokens), static_cast<jule::U64>(5LLU), true);
		_63913_parts = __jule_assign_result.__jule_result_arg0;
		_63920_errors = __jule_assign_result.__jule_result_arg1;
	});
	((*((*(_self_))._field_p))._field_errors).append(_63920_errors);;
	return _63913_parts;;
}



inline jule::Ptr<_1ac6d3ed8_SliceExpr> _1ad203b6c_buildSlice(_1ad1eac52_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _64433_tokens) {
	jule::Ptr<_1ac6d3ed8_SliceExpr> _64513_slc = jule::new_ptr<_1ac6d3ed8_SliceExpr>(_1ac6d3ed8_SliceExpr{._field_Token=_64433_tokens[0LL], ._field_End=_64433_tokens[(_64433_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>> _65013_parts = _1ad20382b_getEnumerableParts(_self_, _64433_tokens);;
	if ((_65013_parts.len() == 0LL)) {
		return _64513_slc;;
	};
	(*(_64513_slc))._field_Exprs=jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>>::alloc(0LL, _65013_parts.len());
	{
		auto expr = &(_65013_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd58bc1a:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _65621_p = *it;
			{
				if ((_65621_p.len() == 0LL)) {
					goto _iter_next_1bd58bc1a;
				};
				{ jule::Slice<jule::Ptr<_1ac6cc9b5_Expr>> &__jule_push_dest = (*(_64513_slc))._field_Exprs; __jule_push_dest.push(_1ad2060d1_buildFromTokens(_self_, _65621_p)); };
			}
			_iter_next_1bd58bc1a:;
			++it;
			goto _iter_begin_1bd58bc1a;
		}
		_iter_end_1bd58bc1a:;
	};
	return _64513_slc;;
}



inline jule::Ptr<_1ac6d4978_IndexingExpr> _1ad204123_buildIndexing(_1ad1eac52_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _66636_exprTokens, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _66713_tokens, jule::Ptr<_1ac6b2e62_Token> _66735_errorToken) {
	jule::Ptr<_1ac6b2e62_Token> _66813_end = _66713_tokens[(_66713_tokens.len() - 1LL)];;
	(_66713_tokens).mut_slice(1LL, (_66713_tokens.len() - 1LL));;
	if ((_66713_tokens.len() == 0LL)) {
		_1ad1eb538_pushErr(_self_, _66735_errorToken, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac6cc9b5_Expr> _67413_expr = _1ad2060d1_buildFromTokens(_self_, _66636_exprTokens);;
	if ((_67413_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ac6cc9b5_Expr> _67813_index = _1ad2060d1_buildFromTokens(_self_, _66713_tokens);;
	if ((_67813_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ac6d4978_IndexingExpr>(_1ac6d4978_IndexingExpr{._field_Token=_66735_errorToken, ._field_End=_66813_end, ._field_Expr=_67413_expr, ._field_Index=_67813_index});;
}



inline jule::Ptr<_1ac6d50d8_SlicingExpr> _1ad20473e_buildSlicing(_1ad1eac52_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _69036_exprTokens, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _69063_start, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _69114_to, jule::Ptr<_1ac6b2e62_Token>* _69133_errorToken, jule::Ptr<_1ac6b2e62_Token> _69157_end) {
	jule::Ptr<_1ac6d50d8_SlicingExpr> _69213_slc = jule::new_ptr<_1ac6d50d8_SlicingExpr>(_1ac6d50d8_SlicingExpr{._field_Token=(*(_69133_errorToken)), ._field_End=_69157_end, ._field_Expr=_1ad2060d1_buildFromTokens(_self_, (*(_69036_exprTokens))), });;
	if (((*(_69063_start)).len() > 0LL)) {
		(*(_69213_slc))._field_Start=_1ad2060d1_buildFromTokens(_self_, (*(_69063_start)));
	};
	if (((*(_69114_to)).len() > 0LL)) {
		(*(_69213_slc))._field_To=_1ad2060d1_buildFromTokens(_self_, (*(_69114_to)));
	};
	return _69213_slc;;
}



inline jule::Any _1ad204a80_buildBracketRange(_1ad1eac52_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _70640_tokens) {
	jule::Ptr<_1ac6b2e62_Token> _70713_errorToken = _70640_tokens[0LL];;
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _70813_exprTokens;;
	jule::I64 _70825_rangeN = 0;;
	({
		__jule_tuple_sx_1ac6b2e62_Token__jule_tuple_int __jule_assign_result = _1ad207786_getRangeExprTokens(&(_70640_tokens));
		_70813_exprTokens = __jule_assign_result.__jule_result_arg0;
		_70825_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_70813_exprTokens.len() == 0LL)) {
		return jule::Any(_1ad203b6c_buildSlice(_self_, _70640_tokens), &__jule_any_type93);;
	} else if ((_70825_rangeN > 0LL)) {
		_1ad1eb538_pushErr(_self_, _70713_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_70640_tokens).mut_slice(_70813_exprTokens.len());;
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _72313_splitTokens = _70640_tokens.slice(1LL, (_70640_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _72413_start;;
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _72424_to;;
	({
		__jule_tuple_sx_1ac6b2e62_Token__jule_tuple_sx_1ac6b2e62_Token __jule_assign_result = _1ad206e39_splitDelim(&(_72313_splitTokens), static_cast<jule::U64>(8LLU));
		_72413_start = __jule_assign_result.__jule_result_arg0;
		_72424_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_72413_start != nullptr) || (_72424_to != nullptr))) {
		return jule::Any(_1ad20473e_buildSlicing(_self_, &(_70813_exprTokens), &(_72413_start), &(_72424_to), &(_70713_errorToken), _70640_tokens[(_70640_tokens.len() - 1LL)]), &__jule_any_type104);;
	};
	return jule::Any(_1ad204123_buildIndexing(_self_, _70813_exprTokens, _70640_tokens, _70713_errorToken), &__jule_any_type103);;
}



inline jule::Any _1ad204dc1_buildExclRight(_1ad1eac52_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _73138_tokens) {
	jule::Ptr<_1ac6b2e62_Token> _7329_token = (*(_73138_tokens))[((*(_73138_tokens)).len() - 1LL)];;
	((*(_73138_tokens))).mut_slice(0LL, ((*(_73138_tokens)).len() - 1LL));;
	jule::Any _73413_d = _1ad20594e_build(_self_, _73138_tokens);;
	if ((_73413_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _73413_d };
		
		if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1bd59971c:;
			{
				(*(_73413_d.cast_ptr<_1ac6d16de_FnCallExpr>(&__jule_any_type107)))._field_Exception=jule::new_ptr<_1ac6d86a2_ScopeTree>(_1ac6d86a2_ScopeTree{._field_Deferred=true, });
				return _73413_d;;
			}
		}
		_match_end_1bd5994a8:;
	};
	_1ad1eb538_pushErr(_self_, _7329_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1ad205212_buildData(_1ad1eac52_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _74933_tokens) {
	{
		auto _match_expr{ (*(_74933_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1bd59adb1:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1bd59ae27:;
			{
				return _1ad1ec6b0_buildSingle(_self_, (*(_74933_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1bd59ae9e:;
			{
				if (((*((*(_74933_tokens))[0LL]))._field_Id == static_cast<jule::U64>(27LLU))) {
					return jule::Any(_1ad1eca01_buildBindIdent(_self_, _74933_tokens), &__jule_any_type79);;
				};
			}
		}
		_match_end_1bd59abc4:;
	};
	jule::Ptr<_1ac6b2e62_Token> _76113_token = (*(_74933_tokens))[((*(_74933_tokens)).len() - 1LL)];;
	if (((*(_76113_token))._field_Id == static_cast<jule::U64>(39LLU))) {
		return jule::Any(_1ad1ede97_buildVariadic(_self_, (*(_74933_tokens))), &__jule_any_type75);;
	};
	_76113_token=(*(_74933_tokens))[0LL];
	if (_1ac6b369e_IsUnaryOp((*(_76113_token))._field_Id)) {
		if (((*(_74933_tokens)).len() > 1LL)) {
			_76113_token=(*(_74933_tokens))[1LL];
			if (((*(_76113_token))._field_Id == static_cast<jule::U64>(31LLU))) {
				return jule::Any(_1ad1ed815_buildType(_self_, _74933_tokens), &__jule_any_type88);;
			};
		};
		return jule::Any(_1ad1ecd42_buildUnary(_self_, (*(_74933_tokens))), &__jule_any_type87);;
	};
	if (((*(_74933_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ (*(_76113_token))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
				_case_begin_1bd5a06ac:;
				{
					if (((*(_74933_tokens)).len() > 3LL)) {
						jule::Ptr<_1ac6b2e62_Token> _78721_t = (*(_74933_tokens))[((*(_74933_tokens)).len() - 1LL)];;
						if (((*(_78721_t))._field_Id == static_cast<jule::U64>(75LLU))) {
							goto _match_end_1bd5a0602;
						};
					};
					jule::Ptr<_1ac6b2e62_Token> _79317_next = (*(_74933_tokens))[1LL];;
					if (((*(_79317_next))._field_Id != static_cast<jule::U64>(77LLU))) {
						goto _match_end_1bd5a0602;
					};
					return jule::Any(_1ad1ed815_buildType(_self_, _74933_tokens), &__jule_any_type88);;
				}
			}
			_match_end_1bd5a0602:;
		};
	};
	_76113_token=(*(_74933_tokens))[((*(_74933_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ (*(_76113_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1bd5a36d2:;
			{
				return _1ad1edb56_buildSubIdent(_self_, _74933_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1bd5a3748:;
			{
				return _1ad204dc1_buildExclRight(_self_, _74933_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1bd5a37ae:;
			{
				return _1ad2009c1_buildParenthesesRange(_self_, _74933_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1bd5a3836:;
			{
				return _1ad2034da_buildBraceRange(_self_, _74933_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1bd5a38ad:;
			{
				return _1ad204a80_buildBracketRange(_self_, (*(_74933_tokens)));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1bd5a3935:;
			{
				return jule::Any(_1ad1ed815_buildType(_self_, _74933_tokens), &__jule_any_type88);;
			}
		}
		_match_end_1bd5a3605:;
	};
	_1ad1eb538_pushErr(_self_, _76113_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1ad20560d_buildBinary(_1ad1eac52_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _82135_tokens, jule::I64 _82153_i) {
	jule::Ptr<_1ac6b2e62_Token> _82213_op = (*(_82135_tokens))[_82153_i];;
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _82313_leftTokens = (*(_82135_tokens)).slice(0LL, _82153_i);;
	if ((_1ad206499_isTypeOp(&((*(_82213_op))._field_Id)) && _1ad2067a7_isTypeRange(&(_82313_leftTokens)))) {
		return jule::Any(_1ad1ed815_buildType(_self_, _82135_tokens), &__jule_any_type88);;
	};
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _82813_rightTokens = (*(_82135_tokens)).slice((_82153_i + 1LL));;
	if ((_82313_leftTokens.len() == 0LL)) {
		_1ad1eb538_pushErr(_self_, (*(_82135_tokens))[_82153_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ad1eb89b_pushSuggestion(_self_, jule::Str::lit("left operand expected for binary operator", 41), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_82813_rightTokens.len() == 0LL)) {
		_1ad1eb538_pushErr(_self_, (*(_82135_tokens))[_82153_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ad1eb89b_pushSuggestion(_self_, jule::Str::lit("right operand expected for binary operator", 42), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1ac6d107e_BinaryExpr>(_1ac6d107e_BinaryExpr{._field_Left=_1ad2060d1_buildFromTokens(_self_, _82313_leftTokens), ._field_Right=_1ad2060d1_buildFromTokens(_self_, _82813_rightTokens), ._field_Op=_82213_op}), &__jule_any_type109);;
}



inline jule::Any _1ad20594e_build(_1ad1eac52_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _84629_tokens) {
	if (((*((*(_84629_tokens))[0LL]))._field_Id == static_cast<jule::U64>(37LLU))) {
		return jule::Any(_1ad1ed815_buildType(_self_, _84629_tokens), &__jule_any_type88);;
	};
	jule::I64 _8509_i = _1ad207203_findLowestPrecOp(_84629_tokens);;
	if ((_8509_i == -1LL)) {
		return _1ad205212_buildData(_self_, _84629_tokens);;
	};
	return _1ad20560d_buildBinary(_self_, _84629_tokens, _8509_i);;
}



inline jule::Any _1ad205c90_buildKind(_1ad1eac52_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _85733_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>> _85813_parts;;
	jule::Slice<_1a756d63b_Log> _85820_errors;;
	({
		__jule_tuple_ssx_1ac6b2e62_Token__jule_tuple_s_1a756d63b_Log __jule_assign_result = _1ad20a514_parts(_85733_tokens, static_cast<jule::U64>(5LLU), true);
		_85813_parts = __jule_assign_result.__jule_result_arg0;
		_85820_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_85820_errors != nullptr)) {
		((*((*(_self_))._field_p))._field_errors).append(_85820_errors);;
		return nullptr;;
	} else if ((_85813_parts.len() > 1LL)) {
		return jule::Any(_1ad1ebbdc_buildTuple(_self_, &(_85813_parts)), &__jule_any_type80);;
	};
	return _1ad20594e_build(_self_, _85733_tokens);;
}



inline jule::Ptr<_1ac6cc9b5_Expr> _1ad2060d1_buildFromTokens(_1ad1eac52_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _86838_tokens) {
	if ((_86838_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _87213_kind = _1ad205c90_buildKind(_self_, &(_86838_tokens));;
	if ((_87213_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ac6cc9b5_Expr>(_1ac6cc9b5_Expr{._field_Token=_86838_tokens[0LL], ._field_End=_86838_tokens[(_86838_tokens.len() - 1LL)], ._field_Kind=_87213_kind});;
}





std::ostream &operator<<(std::ostream &_Stream, _1ad1eac52_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ad2081e3_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1ad20b8de_stop(_1ad20b5e2_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1ad20bb75_stopped(_1ad20b5e2_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1ad20c093_pushErr(_1ad20b5e2_parser* _self_, jule::Ptr<_1ac6b2e62_Token> _22426_token, jule::Str _22441_fmt, jule::Slice<jule::Any> _22454_args) {
	{ jule::Slice<_1a756d63b_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1ad20ac0c_compilerErr(&(_22426_token), &(_22441_fmt), _22454_args)); };
}



inline void _1ad20c406_pushSuggestion(_1ad20b5e2_parser* _self_, jule::Str _22933_fmt, jule::Slice<jule::Any> _22946_args) {
	{
		_1ad20b0a3_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _22933_fmt, _22946_args);
	};
}



inline jule::Ptr<_1ac6cc9b5_Expr> _1ad20c747_buildExpr(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _23334_tokens) {
	return _1ad2060d1_buildFromTokens((*(_self_))._field_ep.ptr(), (*(_23334_tokens)));;
}



inline jule::Ptr<_1ac6c7a9d_Directive> _1ad20ca88_buildDirective(_1ad20b5e2_parser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _23737_tokens) {
	if ((_23737_tokens.len() == 1LL)) {
		_1ad20c093_pushErr(_self_, _23737_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_23737_tokens[1LL]))._field_Column != ((*(_23737_tokens[0LL]))._field_Column + 1LL))) {
		_1ad20c093_pushErr(_self_, _23737_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ac6c7a9d_Directive>(_1ac6c7a9d_Directive{._field_Tag=_23737_tokens[1LL], ._field_Args=_23737_tokens.slice(2LL)});;
}



inline void _1ad20cd41_pushDirective(_1ad20b5e2_parser* _self_, jule::Ptr<_1ac6c7a9d_Directive> _25236_d) {
	if ((_25236_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd5d6072:;
		if (it != expr_end) {
			jule::Ptr<_1ac6c7a9d_Directive> _25716_pd = *it;
			{
				if (((*((*(_25236_d))._field_Tag))._field_Kind == (*((*(_25716_pd))._field_Tag))._field_Kind)) {
					return;;
				};
			}
			_iter_next_1bd5d6072:;
			++it;
			goto _iter_begin_1bd5d6072;
		}
		_iter_end_1bd5d6072:;
	};
	{ jule::Slice<jule::Ptr<_1ac6c7a9d_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_25236_d); };
}



inline jule::Ptr<_1ac6d86a2_ScopeTree> _1ad20d23c_buildScope(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _26535_tokens, jule::Ptr<_1ac6b2e62_Token> _26557_end) {
	jule::Ptr<_1ac6d86a2_ScopeTree> _26613_s = _1ad1db715_newScope();;
	(*(_26613_s))._field_End=_26557_end;
	_1ad1dd32c_scopeParser _26813_sp = _1ad1dd32c_scopeParser{._field_p=_self_, };;
	_1ad1ea1d5_build(&_26813_sp, _26535_tokens, &(_26613_s));
	return _26613_s;;
}



inline __jule_tuple_x_1ac6c8681_TypeDecl__jule_tuple_bool _1ad20d6e3__buildType(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _27542_tokens, jule::I64* _27613_i, jule::Bool _27622_err) {
	__jule_tuple_x_1ac6c8681_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1ad21d7be_typeBuilder _27713_tb = _1ad21d7be_typeBuilder{._field_p=_self_, ._field_tokens=(*(_27542_tokens)), ._field_i=_27613_i, ._field_err=_27622_err};;
	jule::Ptr<_1ac6c8681_TypeDecl> _28313_decl;;
	jule::Bool _28319_ok = false;;
	({
		__jule_tuple_x_1ac6c8681_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad2217a0_build(&_27713_tb);
		_28313_decl = __jule_assign_result.__jule_result_arg0;
		_28319_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _28313_decl;
	__jule_func_result.__jule_result_arg1 = _28319_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_1ac6c8681_TypeDecl__jule_tuple_bool _1ad20db99_buildType(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _28841_tokens, jule::I64* _28913_i, jule::Bool _28922_err) {
	__jule_tuple_x_1ac6c8681_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1ac6b2e62_Token> _2909_token = (*(_28841_tokens))[(*(_28913_i))];;
	jule::Ptr<_1ac6c8681_TypeDecl> _29113_t;;
	jule::Bool _29116_ok = false;;
	({
		__jule_tuple_x_1ac6c8681_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad20d6e3__buildType(_self_, _28841_tokens, _28913_i, _28922_err);
		_29113_t = __jule_assign_result.__jule_result_arg0;
		_29116_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_28922_err && (!(_29116_ok)))) {
		_1ad20c093_pushErr(_self_.ptr(), _2909_token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _29113_t;
	__jule_func_result.__jule_result_arg1 = _29116_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1ac6e019d_TypeAliasDecl> _1ad20deda_buildTypeAliasDecl(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _29843_tokens) {
	jule::I64 _29913_i = 1LL;;
	if ((_29913_i >= (*(_29843_tokens)).len())) {
		_1ad20c093_pushErr(_self_.ptr(), (*(_29843_tokens))[(_29913_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac6e019d_TypeAliasDecl> _30413_tad = jule::new_ptr<_1ac6e019d_TypeAliasDecl>(_1ac6e019d_TypeAliasDecl{._field_Token=(*(_29843_tokens))[1LL], ._field_Ident=(*((*(_29843_tokens))[1LL]))._field_Kind, });;
	jule::Ptr<_1ac6b2e62_Token> _30813_token = (*(_29843_tokens))[_29913_i];;
	if (((*(_30813_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1ad20c093_pushErr(_self_.ptr(), _30813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ad20c406_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_29913_i)++;
	if ((_29913_i >= (*(_29843_tokens)).len())) {
		_1ad20c093_pushErr(_self_.ptr(), (*(_29843_tokens))[(_29913_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return _30413_tad;;
	};
	_30813_token=(*(_29843_tokens))[_29913_i];
	if (((*(_30813_token))._field_Id != static_cast<jule::U64>(8LLU))) {
		_1ad20c093_pushErr(_self_.ptr(), (*(_29843_tokens))[(_29913_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ad20c406_pushSuggestion(_self_.ptr(), jule::Str::lit("expected colon \":\"", 18), jule::Slice<jule::Any>());
		return _30413_tad;;
	};
	(_29913_i)++;
	if ((_29913_i >= (*(_29843_tokens)).len())) {
		_1ad20c093_pushErr(_self_.ptr(), (*(_29843_tokens))[(_29913_i - 1LL)], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return _30413_tad;;
	};
	jule::Ptr<_1ac6c8681_TypeDecl> _32913_t;;
	jule::Bool _32916_ok = false;;
	({
		__jule_tuple_x_1ac6c8681_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad20db99_buildType(_self_, _29843_tokens, (&(_29913_i)), true);
		_32913_t = __jule_assign_result.__jule_result_arg0;
		_32916_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_30413_tad))._field_Kind=_32913_t;
	if ((_32916_ok && (_29913_i < (*(_29843_tokens)).len()))) {
		_1ad20c093_pushErr(_self_.ptr(), (*(_29843_tokens))[_29913_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_30413_tad))._field_Public=_1ac794d79_IsPub((*(_30413_tad))._field_Ident);
	return _30413_tad;;
}



inline void _1ad20e34d_buildVarTypeAndExpr(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Ptr<_1ac6db4eb_VarDecl>* _33844_v, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _33862_tokens) {
	jule::I64 _33913_i = 0LL;;
	jule::Ptr<_1ac6b2e62_Token> _34013_tok = (*(_33862_tokens))[_33913_i];;
	if (((*(_34013_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_33913_i)++;
		if (((_33913_i >= (*(_33862_tokens)).len()) || ((*((*(_33862_tokens))[_33913_i]))._field_Id == static_cast<jule::U64>(71LLU)))) {
			_1ad20c093_pushErr(_self_.ptr(), _34013_tok, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1ac6c8681_TypeDecl> _34717_t;;
		jule::Bool _34720_ok = false;;
		({
			__jule_tuple_x_1ac6c8681_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad20db99_buildType(_self_, _33862_tokens, (&(_33913_i)), true);
			_34717_t = __jule_assign_result.__jule_result_arg0;
			_34720_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_34720_ok) {
			(*((*(_33844_v))))._field_Kind=_34717_t;
			if ((_33913_i >= (*(_33862_tokens)).len())) {
				return;;
			};
			_34013_tok=(*(_33862_tokens))[_33913_i];
		};
	};
	if (((*(_34013_tok))._field_Id != static_cast<jule::U64>(71LLU))) {
		_1ad20c093_pushErr(_self_.ptr(), _34013_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_33844_v))))._field_Setter=_34013_tok;
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _36313_exprTokens = (*(_33862_tokens)).slice((_33913_i + 1LL));;
	if ((_36313_exprTokens.len() == 0LL)) {
		_1ad20c093_pushErr(_self_.ptr(), _34013_tok, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_33844_v))))._field_Expr=_1ad20c747_buildExpr(_self_, &(_36313_exprTokens));
}



inline void _1ad20e6b1_buildVarCommon(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Ptr<_1ac6db4eb_VarDecl>* _37139_v, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _37156_tokens) {
	(*((*(_37139_v))))._field_Token=_37156_tokens[0LL];
	if (((*((*((*(_37139_v))))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1ad20c093_pushErr(_self_.ptr(), (*((*(_37139_v))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ad20c406_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_37139_v))))._field_Ident=(*((*((*(_37139_v))))._field_Token))._field_Kind;
	(*((*(_37139_v))))._field_Public=_1ac794d79_IsPub((*((*(_37139_v))))._field_Ident);
	(*((*(_37139_v))))._field_Kind=nullptr;
	if ((_37156_tokens.len() > 1LL)) {
		(_37156_tokens).mut_slice(1LL);;
		_1ad20e34d_buildVarTypeAndExpr(_self_, _37139_v, &(_37156_tokens));
	};
}



inline void _1ad20eace_buildVarBegin(_1ad20b5e2_parser* _self_, jule::Ptr<_1ac6db4eb_VarDecl>* _38737_v, jule::I64* _38755_i, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _38764_tokens) {
	jule::Ptr<_1ac6b2e62_Token> _3889_tok = (*(_38764_tokens))[(*(_38755_i))];;
	{
		auto &_match_expr{ (*(_3889_tok))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1bd60108c:;
			{
				(*((*(_38737_v))))._field_Statically=true;
				goto _case_begin_1bd601e6c;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1bd601e6c:;
			{
				((*(_38755_i)))++;
				if (((*(_38755_i)) >= (*(_38764_tokens)).len())) {
					_1ad20c093_pushErr(_self_, _3889_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				if (((*((*(_38764_tokens))[(*(_38755_i))]))._field_Id == static_cast<jule::U64>(32LLU))) {
					(*((*(_38737_v))))._field_Mutable=true;
					((*(_38755_i)))++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1bd6016a8:;
			{
				((*(_38755_i)))++;
				(*((*(_38737_v))))._field_Constant=true;
			}
		}
		else {
			_case_begin_1bd601642:;
			{
				_1ad20c093_pushErr(_self_, _3889_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1bd6015dc:;
	};
	if (((*(_38755_i)) >= (*(_38764_tokens)).len())) {
		_1ad20c093_pushErr(_self_, _3889_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1ac6db4eb_VarDecl> _1ad20ee20_buildVar(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _41732_tokens) {
	jule::I64 _41813_i = 0LL;;
	jule::Ptr<_1ac6db4eb_VarDecl> _41913_v = jule::new_ptr<_1ac6db4eb_VarDecl>(_1ac6db4eb_VarDecl{._field_Token=_41732_tokens[0LL], });;
	_1ad20eace_buildVarBegin(_self_.ptr(), &(_41913_v), &(_41813_i), &(_41732_tokens));
	if ((_41813_i >= _41732_tokens.len())) {
		return nullptr;;
	};
	(_41732_tokens).mut_slice(_41813_i);;
	if (((*(_41732_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		(*(_41913_v))._field_Reference=true;
		if ((_41732_tokens.len() == 1LL)) {
			return nullptr;;
		};
		(_41732_tokens).mut_slice(1LL);;
	};
	_1ad20e6b1_buildVarCommon(_self_, &(_41913_v), _41732_tokens);
	return _41913_v;;
}



inline jule::Ptr<_1ac6d588b_GenericDecl> _1ad210261_buildGeneric(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _43937_tokens) {
	jule::Ptr<_1ac6d588b_GenericDecl> _44013_g = jule::new_ptr<_1ac6d588b_GenericDecl>(_1ac6d588b_GenericDecl{._field_Token=(*(_43937_tokens))[0LL], });;
	if (((*((*(_44013_g))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1ad20c093_pushErr(_self_.ptr(), (*(_44013_g))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ad20c406_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_44013_g))._field_Ident=(*((*(_44013_g))._field_Token))._field_Kind;
	if (((*(_43937_tokens)).len() > 1LL)) {
		if (((*((*(_43937_tokens))[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
			_1ad20c093_pushErr(_self_.ptr(), (*(_43937_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_43937_tokens)).len() == 2LL)) {
			_1ad20c093_pushErr(_self_.ptr(), (*(_43937_tokens))[1LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _45717_constraintTokens = (*(_43937_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>> _45817_parts;;
		jule::Slice<_1a756d63b_Log> _45824_errors;;
		({
			__jule_tuple_ssx_1ac6b2e62_Token__jule_tuple_s_1a756d63b_Log __jule_assign_result = _1ad20a514_parts(&(_45717_constraintTokens), static_cast<jule::U64>(66LLU), true);
			_45817_parts = __jule_assign_result.__jule_result_arg0;
			_45824_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_45824_errors.len() > 0LL)) {
			((*(_self_))._field_errors).append(_45824_errors);;
			return nullptr;;
		};
		(*(_44013_g))._field_Constraint=jule::new_ptr<_1ac6d53d5_Constraint>(_1ac6d53d5_Constraint{._field_Mask=jule::Slice<jule::Ptr<_1ac6c8681_TypeDecl>>::alloc(0LL, _45817_parts.len())});
		{
			auto expr = &(_45817_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd60e0cd:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _46425_part = *it;
				{
					jule::I64 _46521_i = 0LL;;
					jule::Ptr<_1ac6c8681_TypeDecl> _46621_kind;;
					({
						__jule_tuple_x_1ac6c8681_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad20db99_buildType(_self_, &(_46425_part), (&(_46521_i)), true);
						_46621_kind = __jule_assign_result.__jule_result_arg0;
					});
					{ jule::Slice<jule::Ptr<_1ac6c8681_TypeDecl>> &__jule_push_dest = (*((*(_44013_g))._field_Constraint))._field_Mask; __jule_push_dest.push(_46621_kind); };
					if ((_46521_i < _46425_part.len())) {
						_1ad20c093_pushErr(_self_.ptr(), _46425_part[_46521_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1bd60e0cd:;
				++it;
				goto _iter_begin_1bd60e0cd;
			}
			_iter_end_1bd60e0cd:;
		};
	};
	return _44013_g;;
}



inline jule::Slice<jule::Ptr<_1ac6d588b_GenericDecl>> _1ad21065c_buildGenerics(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _47638_tokens, jule::Ptr<_1ac6b2e62_Token>* _47657_errorToken) {
	if (((*(_47638_tokens)).len() == 0LL)) {
		_1ad20c093_pushErr(_self_.ptr(), (*(_47657_errorToken)), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>> _48213_parts;;
	jule::Slice<_1a756d63b_Log> _48220_errors;;
	({
		__jule_tuple_ssx_1ac6b2e62_Token__jule_tuple_s_1a756d63b_Log __jule_assign_result = _1ad20a514_parts(_47638_tokens, static_cast<jule::U64>(5LLU), true);
		_48213_parts = __jule_assign_result.__jule_result_arg0;
		_48220_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_48220_errors.len() > 0LL)) {
		((*(_self_))._field_errors).append(_48220_errors);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ac6d588b_GenericDecl>> _48813_generics = jule::Slice<jule::Ptr<_1ac6d588b_GenericDecl>>::alloc(0LL, _48213_parts.len());;
	{
		auto expr = &(_48213_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd61317b:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _48921_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1ac6d588b_GenericDecl>> &__jule_push_dest = _48813_generics; __jule_push_dest.push(_1ad210261_buildGeneric(_self_, &(_48921_part))); };
			}
			_iter_next_1bd61317b:;
			++it;
			goto _iter_begin_1bd61317b;
		}
		_iter_end_1bd61317b:;
	};
	return _48813_generics;;
}



inline jule::Ptr<_1ac6d8dde_ParamDecl> _1ad21099d_buildSelfParam(_1ad20b5e2_parser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _49637_tokens) {
	if ((_49637_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1ac6d8dde_ParamDecl> _50113_param = jule::new_ptr<_1ac6d8dde_ParamDecl>();;
	jule::I64 _50413_i = 0LL;;
	if (((*(_49637_tokens[_50413_i]))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*(_50113_param))._field_Mutable=true;
		(_50413_i)++;
		if ((_50413_i >= _49637_tokens.len())) {
			_1ad20c093_pushErr(_self_, _49637_tokens[(_50413_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	_1c164cc40_StrBuilder _51413_ident = static__1c164d191_New(5LL);;
	if (((*(_49637_tokens[_50413_i]))._field_Id == static_cast<jule::U64>(65LLU))) {
		_1c164d702_WriteStr(&_51413_ident, jule::Str::lit("&", 1));
		(_50413_i)++;
		if ((_50413_i >= _49637_tokens.len())) {
			_1ad20c093_pushErr(_self_, _49637_tokens[(_50413_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if (((*(_49637_tokens[_50413_i]))._field_Id == static_cast<jule::U64>(24LLU))) {
		_1c164d702_WriteStr(&_51413_ident, jule::Str::lit("self", 4));
		(*(_50113_param))._field_Token=_49637_tokens[_50413_i];
		(_50413_i)++;
		if ((_50413_i < _49637_tokens.len())) {
			_1ad20c093_pushErr(_self_, _49637_tokens[_50413_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	};
	(*(_50113_param))._field_Ident=_1c164dee9_Str(&_51413_ident);
	return _50113_param;;
}



inline void _1ad210dbb_paramTypeBegin(_1ad20b5e2_parser* _self_, jule::Ptr<_1ac6d8dde_ParamDecl>* _53838_param, jule::I64* _53862_i, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _53871_tokens) {
	for (; ((*(_53862_i)) < (*(_53871_tokens)).len()); ((*(_53862_i)))++) {
		{
			jule::Ptr<_1ac6b2e62_Token> _54013_token = (*(_53871_tokens))[(*(_53862_i))];;
			if (((*(_54013_token))._field_Id != static_cast<jule::U64>(39LLU))) {
				return;;
			};
			if ((*((*(_53838_param))))._field_Variadic) {
				_1ad20c093_pushErr(_self_, _54013_token, jule::Str::lit("define is already variadic", 26), jule::Slice<jule::Any>());
				goto _iter_next_1bd61b393;
			};
			(*((*(_53838_param))))._field_Variadic=true;
		}
	_iter_next_1bd61b393:;
	}
	_iter_end_1bd61b393:;;
}



inline void _1ad21122e_buildParamType(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Ptr<_1ac6d8dde_ParamDecl>* _55339_param, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _55363_tokens) {
	jule::I64 _55413_i = 0LL;;
	_1ad210dbb_paramTypeBegin(_self_.ptr(), _55339_param, &(_55413_i), _55363_tokens);
	if ((_55413_i >= (*(_55363_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1ac6c8681_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad20db99_buildType(_self_, _55363_tokens, (&(_55413_i)), true);
		(*((*(_55339_param))))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_55413_i < (*(_55363_tokens)).len())) {
		_1ad20c093_pushErr(_self_.ptr(), (*(_55363_tokens))[_55413_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1ad211592_buildParamBody(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Ptr<_1ac6d8dde_ParamDecl>* _56639_param, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _56662_tokens) {
	jule::Ptr<_1ac6b2e62_Token> _56713_tok = _56662_tokens[0LL];;
	if ((_56662_tokens.len() == 1LL)) {
		(*((*(_56639_param))))._field_Ident=(*(_56713_tok))._field_Kind;
		return;;
	} else if ((_56662_tokens.len() < 3LL)) {
		_1ad20c093_pushErr(_self_.ptr(), _56713_tok, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_56662_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
		(*((*(_56639_param))))._field_Ident=jule::Str::lit("<anonymous>", 11);
		_1ad21122e_buildParamType(_self_, _56639_param, &(_56662_tokens));
		return;;
	};
	(*((*(_56639_param))))._field_Ident=(*(_56713_tok))._field_Kind;
	(_56662_tokens).mut_slice(2LL);;
	_1ad21122e_buildParamType(_self_, _56639_param, &(_56662_tokens));
}



inline jule::Ptr<_1ac6d8dde_ParamDecl> _1ad2118d3_buildParam(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _58634_tokens) {
	jule::Ptr<_1ac6d8dde_ParamDecl> _58713_param = jule::new_ptr<_1ac6d8dde_ParamDecl>(_1ac6d8dde_ParamDecl{._field_Token=_58634_tokens[0LL], });;
	if (((*((*(_58713_param))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*(_58713_param))._field_Mutable=true;
		if ((_58634_tokens.len() == 1LL)) {
			_1ad20c093_pushErr(_self_.ptr(), _58634_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_58634_tokens).mut_slice(1LL);;
		(*(_58713_param))._field_Token=_58634_tokens[0LL];
	};
	if ((_58634_tokens.len() >= 3LL)) {
		if (((*((*(_58713_param))._field_Token))._field_Id == static_cast<jule::U64>(65LLU))) {
			if ((_58634_tokens.len() == 1LL)) {
				_1ad20c093_pushErr(_self_.ptr(), _58634_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if ((((*(_58634_tokens[1LL]))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_58634_tokens[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
				(*(_58713_param))._field_Reference=true;
				(_58634_tokens).mut_slice(1LL);;
				(*(_58713_param))._field_Token=_58634_tokens[0LL];
			};
		};
	};
	if (((*((*(_58713_param))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		(*(_58713_param))._field_Ident=jule::Str::lit("<anonymous>", 11);
		_1ad21122e_buildParamType(_self_, &(_58713_param), &(_58634_tokens));
	} else {
		_1ad211592_buildParamBody(_self_, &(_58713_param), _58634_tokens);
	};
	return _58713_param;;
}



inline void _1ad211b8b_checkParams(_1ad20b5e2_parser* _self_, jule::Slice<jule::Ptr<_1ac6d8dde_ParamDecl>>* _62935_params) {
	{
		auto expr = _62935_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd62b21b:;
		if (it != expr_end) {
			jule::Ptr<_1ac6d8dde_ParamDecl> _63021_param = *it;
			{
				if ((_1ac6d9263_IsSelf(_63021_param.ptr()) || ((*(_63021_param))._field_Kind != nullptr))) {
					goto _iter_next_1bd62b21b;
				};
				if (((*(_63021_param))._field_Token == nullptr)) {
					_1ad20c093_pushErr(_self_, (*(_63021_param))._field_Token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
				} else {
					(*(_63021_param))._field_Kind=jule::new_ptr<_1ac6c8681_TypeDecl>(_1ac6c8681_TypeDecl{._field_Token=(*(_63021_param))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1ac6c8c8b_IdentTypeDecl>(_1ac6c8c8b_IdentTypeDecl{._field_Token=(*(_63021_param))._field_Token, ._field_Ident=(*((*(_63021_param))._field_Token))._field_Kind, }), &__jule_any_type20)});
					(*(_63021_param))._field_Ident=jule::Str::lit("<anonymous>", 11);
				};
			}
			_iter_next_1bd62b21b:;
			++it;
			goto _iter_begin_1bd62b21b;
		}
		_iter_end_1bd62b21b:;
	};
}



inline jule::Slice<jule::Ptr<_1ac6d8dde_ParamDecl>> _1ad212087_buildParams(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _64936_tokens, jule::Bool _64954_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>> _65013_parts;;
	jule::Slice<_1a756d63b_Log> _65020_errs;;
	({
		__jule_tuple_ssx_1ac6b2e62_Token__jule_tuple_s_1a756d63b_Log __jule_assign_result = _1ad20a514_parts(_64936_tokens, static_cast<jule::U64>(5LLU), true);
		_65013_parts = __jule_assign_result.__jule_result_arg0;
		_65020_errs = __jule_assign_result.__jule_result_arg1;
	});
	((*(_self_))._field_errors).append(_65020_errs);;
	if ((_65013_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ac6d8dde_ParamDecl>> _65617_params = nullptr;;
	if ((_64954_method && (_65013_parts.len() > 0LL))) {
		jule::Ptr<_1ac6d8dde_ParamDecl> _65817_param = _1ad21099d_buildSelfParam(_self_.ptr(), _65013_parts[0LL]);;
		if (((_65817_param != nullptr) && _1ac6d9263_IsSelf(_65817_param.ptr()))) {
			{ jule::Slice<jule::Ptr<_1ac6d8dde_ParamDecl>> &__jule_push_dest = _65617_params; __jule_push_dest.push(_65817_param); };
			(_65013_parts).mut_slice(1LL);;
		};
	};
	{
		auto expr = &(_65013_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd631397:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _66521_part = *it;
			{
				jule::Ptr<_1ac6d8dde_ParamDecl> _66617_param = _1ad2118d3_buildParam(_self_, _66521_part);;
				if ((_66617_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_1ac6d8dde_ParamDecl>> &__jule_push_dest = _65617_params; __jule_push_dest.push(_66617_param); };
				};
			}
			_iter_next_1bd631397:;
			++it;
			goto _iter_begin_1bd631397;
		}
		_iter_end_1bd631397:;
	};
	_1ad211b8b_checkParams(_self_.ptr(), &(_65617_params));
	return _65617_params;;
}



inline __jule_tuple_x_1ac6cb574_RetTypeDecl__jule_tuple_bool _1ad212483_buildMultiRetType(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _67642_tokens, jule::I64* _67665_i) {
	__jule_tuple_x_1ac6cb574_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1ac6cb574_RetTypeDecl>();
	((*(_67665_i)))++;
	if (((*(_67665_i)) >= (*(_67642_tokens)).len())) {
		((*(_67665_i)))--;
		({
			__jule_tuple_x_1ac6c8681_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad20db99_buildType(_self_, _67642_tokens, _67665_i, false);
			(*(__jule_func_result.__jule_result_arg0))._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_67665_i)))--;
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _68613_rangeTokens = _1ad209c94_range(_67665_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _67642_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>> _68813_parts;;
	jule::Slice<_1a756d63b_Log> _68820_errs;;
	({
		__jule_tuple_ssx_1ac6b2e62_Token__jule_tuple_s_1a756d63b_Log __jule_assign_result = _1ad20a514_parts(&(_68613_rangeTokens), static_cast<jule::U64>(5LLU), true);
		_68813_parts = __jule_assign_result.__jule_result_arg0;
		_68820_errs = __jule_assign_result.__jule_result_arg1;
	});
	((*(_self_))._field_errors).append(_68820_errs);;
	if ((_68813_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1ac6c8681_TypeDecl>> _69413_types = jule::Slice<jule::Ptr<_1ac6c8681_TypeDecl>>::alloc(0LL, _68813_parts.len());;
	(*(__jule_func_result.__jule_result_arg0))._field_Idents=jule::Slice<jule::Ptr<_1ac6b2e62_Token>>::alloc(0LL, _68813_parts.len());
	{
		auto expr = &(_68813_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd63824a:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _69621_part = *it;
			{
				jule::Ptr<_1ac6b2e62_Token> _69717_token = _69621_part[0LL];;
				jule::I64 _69817_offset = 0LL;;
				if ((_69621_part.len() > 1LL)) {
					_69717_token=_69621_part[1LL];
					if (((*(_69717_token))._field_Id == static_cast<jule::U64>(8LLU))) {
						_69817_offset=2LL;
						if ((_69621_part.len() < 3LL)) {
							_1ad20c093_pushErr(_self_.ptr(), _69717_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
							goto _iter_next_1bd63824a;
						};
					};
				};
				_69717_token=_69621_part[0LL];
				if ((_69817_offset != 2LL)) {
					jule::Ptr<_1ac6b2e62_Token> _71421_newToken = jule::new_ptr<_1ac6b2e62_Token>((*(_69717_token)));;
					(*(_71421_newToken))._field_Kind=jule::Str::lit("<anonymous>", 11);
					{ jule::Slice<jule::Ptr<_1ac6b2e62_Token>> &__jule_push_dest = (*(__jule_func_result.__jule_result_arg0))._field_Idents; __jule_push_dest.push(_71421_newToken); };
				} else {
					{ jule::Slice<jule::Ptr<_1ac6b2e62_Token>> &__jule_push_dest = (*(__jule_func_result.__jule_result_arg0))._field_Idents; __jule_push_dest.push(_69717_token); };
				};
				jule::Ptr<_1ac6c8681_TypeDecl> _72117_tk;;
				({
					__jule_tuple_x_1ac6c8681_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad20db99_buildType(_self_, &(_69621_part), (&(_69817_offset)), true);
					_72117_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_69817_offset < _69621_part.len())) {
					_1ad20c093_pushErr(_self_.ptr(), _69621_part[_69817_offset], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1ac6c8681_TypeDecl>> &__jule_push_dest = _69413_types; __jule_push_dest.push(_72117_tk); };
			}
			_iter_next_1bd63824a:;
			++it;
			goto _iter_begin_1bd63824a;
		}
		_iter_end_1bd63824a:;
	};
	if ((_69413_types.len() > 1LL)) {
		(*(__jule_func_result.__jule_result_arg0))._field_Kind=jule::new_ptr<_1ac6c8681_TypeDecl>(_1ac6c8681_TypeDecl{._field_Token=(*(_67642_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1ac6c9dad_TupleTypeDecl>(_1ac6c9dad_TupleTypeDecl{._field_Types=_69413_types}), &__jule_any_type74)});
	} else {
		(*(__jule_func_result.__jule_result_arg0))._field_Kind=_69413_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1ac6cb574_RetTypeDecl__jule_tuple_bool _1ad21287e_buildRetType(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _74437_tokens, jule::I64* _74460_i) {
	__jule_tuple_x_1ac6cb574_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1ac6cb574_RetTypeDecl>();
	if (((*(_74460_i)) >= (*(_74437_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_1ac6b2e62_Token> _75013_token = (*(_74437_tokens))[(*(_74460_i))];;
	{
		auto &_match_expr{ (*(_75013_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1bd641ac2:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(71LLU)) {
			_case_begin_1bd641b49:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1bd641bc1:;
			{
				if ((((*(_74460_i)) + 1LL) >= (*(_74437_tokens)).len())) {
					_1ad20c093_pushErr(_self_.ptr(), _75013_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_74460_i)))++;
				_75013_token=(*(_74437_tokens))[(*(_74460_i))];
				{
					auto &_match_expr{ (*(_75013_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1bd64395e:;
						{
							({
								__jule_tuple_x_1ac6cb574_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1ad212483_buildMultiRetType(_self_, _74437_tokens, _74460_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1bd6439d6:;
						{
							_1ad20c093_pushErr(_self_.ptr(), _75013_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_1bd6438e8:;
				};
				({
					__jule_tuple_x_1ac6c8681_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad20db99_buildType(_self_, _74437_tokens, _74460_i, true);
					(*(__jule_func_result.__jule_result_arg0))._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1bd641a4a:;
	};
	((*(_74460_i)))++;
	_1ad20c093_pushErr(_self_.ptr(), _75013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1ac6da341_FnDecl> _1ad212d35_buildFnPrototype(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _78341_tokens, jule::I64* _78364_i, jule::Bool _78372_method) {
	jule::Ptr<_1ac6da341_FnDecl> _78413_f = jule::new_ptr<_1ac6da341_FnDecl>(_1ac6da341_FnDecl{._field_Token=(*(_78341_tokens))[(*(_78364_i))], });;
	if (((*((*(_78413_f))._field_Token))._field_Id == static_cast<jule::U64>(34LLU))) {
		(*(_78413_f))._field_Statically=true;
		((*(_78364_i)))++;
		if (((*(_78364_i)) >= (*(_78341_tokens)).len())) {
			_1ad20c093_pushErr(_self_.ptr(), (*(_78413_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*(_78413_f))._field_Token=(*(_78341_tokens))[(*(_78364_i))];
	};
	if (((*((*(_78413_f))._field_Token))._field_Id == static_cast<jule::U64>(31LLU))) {
		(*(_78413_f))._field_Unsafety=true;
		((*(_78364_i)))++;
		if (((*(_78364_i)) >= (*(_78341_tokens)).len())) {
			_1ad20c093_pushErr(_self_.ptr(), (*(_78413_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*(_78413_f))._field_Token=(*(_78341_tokens))[(*(_78364_i))];
	};
	((*(_78364_i)))++;
	if (((*(_78364_i)) >= (*(_78341_tokens)).len())) {
		_1ad20c093_pushErr(_self_.ptr(), (*(_78413_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac6b2e62_Token> _8179_tok = (*(_78341_tokens))[(*(_78364_i))];;
	if (((*(_8179_tok))._field_Id == static_cast<jule::U64>(1LLU))) {
		((*(_78364_i)))++;
		if (((*(_78364_i)) >= (*(_78341_tokens)).len())) {
			_1ad20c093_pushErr(_self_.ptr(), (*(_78413_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*(_78413_f))._field_Ident=(*(_8179_tok))._field_Kind;
	} else {
		(*(_78413_f))._field_Ident=jule::Str::lit("<anonymous>", 11);
	};
	jule::Ptr<_1ac6b2e62_Token> _8299_errorToken = (*(_78341_tokens))[(*(_78364_i))];;
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _83013_genericsTokens = _1ad209c94_range(_78364_i, static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _78341_tokens);;
	if ((_83013_genericsTokens != nullptr)) {
		(*(_78413_f))._field_Generics=_1ad21065c_buildGenerics(_self_, &(_83013_genericsTokens), &(_8299_errorToken));
	};
	if (((*((*(_78341_tokens))[(*(_78364_i))]))._field_Id != static_cast<jule::U64>(74LLU))) {
		_1ad20c093_pushErr(_self_.ptr(), (*(_78341_tokens))[(*(_78364_i))], jule::Str::lit("missing function parentheses", 28), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _84013_paramsToks = _1ad209c94_range(_78364_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _78341_tokens);;
	if ((_84013_paramsToks.len() > 0LL)) {
		(*(_78413_f))._field_Params=_1ad212087_buildParams(_self_, &(_84013_paramsToks), _78372_method);
	};
	if (((*(_78364_i)) < (*(_78341_tokens)).len())) {
		jule::Ptr<_1ac6b2e62_Token> _84613_token = (*(_78341_tokens))[(*(_78364_i))];;
		if (((*(_84613_token))._field_Id == static_cast<jule::U64>(68LLU))) {
			(*(_78413_f))._field_Exceptional=true;
			((*(_78364_i)))++;
		};
	};
	(*(_78413_f))._field_Public=_1ac794d79_IsPub((*(_78413_f))._field_Ident);
	({
		__jule_tuple_x_1ac6cb574_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1ad21287e_buildRetType(_self_, _78341_tokens, _78364_i);
		(*(_78413_f))._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _78413_f;;
}



inline jule::Ptr<_1ac6da341_FnDecl> _1ad2132db_buildFn(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _86032_tokens, jule::Bool _86050_method, jule::Bool _86064_prototype) {
	jule::I64 _86113_i = 0LL;;
	jule::Ptr<_1ac6da341_FnDecl> _86213_f = _1ad212d35_buildFnPrototype(_self_, _86032_tokens, &(_86113_i), _86050_method);;
	if (_86064_prototype) {
		if ((_86113_i < (*(_86032_tokens)).len())) {
			_1ad20c093_pushErr(_self_.ptr(), (*(_86032_tokens))[(_86113_i + 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		return _86213_f;;
	} else if ((_86213_f == nullptr)) {
		return _86213_f;;
	};
	if ((_86113_i >= (*(_86032_tokens)).len())) {
		_1ad20b8de_stop(_self_.ptr());
		_1ad20c093_pushErr(_self_.ptr(), (*(_86213_f))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1ad20c406_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _87813_blockTokens = _1ad209c94_range(&(_86113_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _86032_tokens);;
	if ((_87813_blockTokens != nullptr)) {
		(*(_86213_f))._field_Scope=_1ad20d23c_buildScope(_self_, &(_87813_blockTokens), (*(_86032_tokens))[(_86113_i - 1LL)]);
		(*((*(_86213_f))._field_Scope))._field_Unsafety=(*(_86213_f))._field_Unsafety;
		if ((_86113_i < (*(_86032_tokens)).len())) {
			_1ad20c093_pushErr(_self_.ptr(), (*(_86032_tokens))[_86113_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	} else {
		_1ad20b8de_stop(_self_.ptr());
		_1ad20c093_pushErr(_self_.ptr(), (*(_86213_f))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1ad20c406_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _86213_f;;
}



inline jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _1ad21362c_getUseDeclSelectors(_1ad20b5e2_parser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _89442_tokens) {
	jule::I64 _89513_i = 0LL;;
	_89442_tokens=_1ad209c94_range(&(_89513_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_89442_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>> _89713_parts;;
	jule::Slice<_1a756d63b_Log> _89720_errs;;
	({
		__jule_tuple_ssx_1ac6b2e62_Token__jule_tuple_s_1a756d63b_Log __jule_assign_result = _1ad20a514_parts(&(_89442_tokens), static_cast<jule::U64>(5LLU), true);
		_89713_parts = __jule_assign_result.__jule_result_arg0;
		_89720_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_89720_errs.len() > 0LL)) {
		((*(_self_))._field_errors).append(_89720_errs);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _90313_selectors = jule::Slice<jule::Ptr<_1ac6b2e62_Token>>::alloc(0LL, _89713_parts.len());;
	{
		auto expr = &(_89713_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd65b58c:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _90421_part = *it;
			{
				if ((_90421_part.len() > 1LL)) {
					_1ad20c093_pushErr(_self_, _90421_part[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1ac6b2e62_Token> _90817_tok = _90421_part[0LL];;
				if ((((*(_90817_tok))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(_90817_tok))._field_Id != static_cast<jule::U64>(24LLU)))) {
					_1ad20c093_pushErr(_self_, _90817_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					_1ad20c406_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					goto _iter_next_1bd65b58c;
				};
				{ jule::Slice<jule::Ptr<_1ac6b2e62_Token>> &__jule_push_dest = _90313_selectors; __jule_push_dest.push(_90817_tok); };
			}
			_iter_next_1bd65b58c:;
			++it;
			goto _iter_begin_1bd65b58c;
		}
		_iter_end_1bd65b58c:;
	};
	return _90313_selectors;;
}



inline void _1ad213990_buildBindUseDecl(_1ad20b5e2_parser* _self_, jule::Ptr<_1ac6e1787_UseDecl>* _91940_decl, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _91957_tokens) {
	if (((*(_91957_tokens)).len() > 1LL)) {
		_1ad20c093_pushErr(_self_, (*(_91957_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ac6b2e62_Token> _9239_token = (*(_91957_tokens))[0LL];;
	if ((((*(_9239_token))._field_Id != static_cast<jule::U64>(4LLU)) || (((*(_9239_token))._field_Kind[0LL] != '`') && ((*(_9239_token))._field_Kind[0LL] != '\"')))) {
		_1ad20c093_pushErr(_self_, _9239_token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_91940_decl))))._field_Binded=true;
	(*((*(_91940_decl))))._field_LinkPath=(*(_9239_token))._field_Kind.slice(1LL, ((*(_9239_token))._field_Kind.len() - 1LL));
}



inline jule::Str _1ad213cd1_useDeclTokstoa(_1ad20b5e2_parser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _93234_tokens) {
	jule::I64 _93313_n = 0LL;;
	{
		auto expr = _93234_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd663e35:;
		if (it != expr_end) {
			jule::Ptr<_1ac6b2e62_Token> *_93416_token = it;
			{
				if ((((*((*(_93416_token))))._field_Id != static_cast<jule::U64>(1LLU)) && ((*((*(_93416_token))))._field_Id != static_cast<jule::U64>(19LLU)))) {
					_1ad20c093_pushErr(_self_, (*(_93416_token)), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				_93313_n+=(*((*(_93416_token))))._field_Kind.len();
			}
			_iter_next_1bd663e35:;
			++it;
			goto _iter_begin_1bd663e35;
		}
		_iter_end_1bd663e35:;
	};
	_1c164cc40_StrBuilder _94013_s = static__1c164d191_New(_93313_n);;
	{
		auto expr = _93234_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd663d47:;
		if (it != expr_end) {
			jule::Ptr<_1ac6b2e62_Token> *_94116_token = it;
			{
				_1c164d702_WriteStr(&_94013_s, (*((*(_94116_token))))._field_Kind);
			}
			_iter_next_1bd663d47:;
			++it;
			goto _iter_begin_1bd663d47;
		}
		_iter_end_1bd663d47:;
	};
	return _1c164dee9_Str(&_94013_s);;
}



inline void _1ad214144_buildStdUseDecl(_1ad20b5e2_parser* _self_, jule::Ptr<_1ac6e1787_UseDecl>* _94739_decl, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _94759_tokens) {
	(*((*(_94739_decl))))._field_Std=true;
	jule::Ptr<_1ac6b2e62_Token> _95013_token = _94759_tokens[0LL];;
	if ((_94759_tokens.len() < 3LL)) {
		_1ad20c093_pushErr(_self_, _95013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(_94759_tokens).mut_slice(2LL);;
	_95013_token=_94759_tokens[(_94759_tokens.len() - 1LL)];
	{
		auto &_match_expr{ (*(_95013_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1bd6687db:;
			{
				_1ad20c093_pushErr(_self_, _95013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1bd668863:;
			{
				jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _96321_selectors = nullptr;;
				({
					__jule_tuple_sx_1ac6b2e62_Token__jule_tuple_sx_1ac6b2e62_Token __jule_assign_result = _1ad20a05d_rangeLast(&(_94759_tokens));
					_94759_tokens = __jule_assign_result.__jule_result_arg0;
					_96321_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_94739_decl))))._field_Selected=_1ad21362c_getUseDeclSelectors(_self_, _96321_selectors);
				if ((_94759_tokens.len() == 0LL)) {
					_1ad20c093_pushErr(_self_, _95013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_95013_token=_94759_tokens[(_94759_tokens.len() - 1LL)];
				if (((*(_95013_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1ad20c093_pushErr(_self_, _95013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_94759_tokens).mut_slice(0LL, (_94759_tokens.len() - 1LL));;
				if ((_94759_tokens.len() == 0LL)) {
					_1ad20c093_pushErr(_self_, _95013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1bd6688da:;
			{
				(_94759_tokens).mut_slice(0LL, (_94759_tokens.len() - 1LL));;
				if ((_94759_tokens.len() == 0LL)) {
					_1ad20c093_pushErr(_self_, _95013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_95013_token=_94759_tokens[(_94759_tokens.len() - 1LL)];
				if (((*(_95013_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1ad20c093_pushErr(_self_, _95013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_94759_tokens).mut_slice(0LL, (_94759_tokens.len() - 1LL));;
				if ((_94759_tokens.len() == 0LL)) {
					_1ad20c093_pushErr(_self_, _95013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_94739_decl))))._field_Full=true;
			}
		}
		_match_end_1bd668764:;
	};
	if (((_94759_tokens.len() == 1LL) && ((*(_94759_tokens[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		(*((*(_94739_decl))))._field_LinkPath=jule::Str::lit("std::unsafe", 11);
	} else {
		(*((*(_94739_decl))))._field_LinkPath=(jule::Str::lit("std::", 5) + _1ad213cd1_useDeclTokstoa(_self_, &(_94759_tokens)));
	};
}



inline void _1ad2144a7_buildIdentUseDecl(_1ad20b5e2_parser* _self_, jule::Ptr<_1ac6e1787_UseDecl>* _100541_decl, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _100561_tokens) {
	(*((*(_100541_decl))))._field_Std=false;
	jule::Ptr<_1ac6b2e62_Token> _100813_token = _100561_tokens[(_100561_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ (*(_100813_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1bd672839:;
			{
				_1ad20c093_pushErr(_self_, _100813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1bd6730cb:;
			{
				jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _101421_selectors = nullptr;;
				({
					__jule_tuple_sx_1ac6b2e62_Token__jule_tuple_sx_1ac6b2e62_Token __jule_assign_result = _1ad20a05d_rangeLast(&(_100561_tokens));
					_100561_tokens = __jule_assign_result.__jule_result_arg0;
					_101421_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_100541_decl))))._field_Selected=_1ad21362c_getUseDeclSelectors(_self_, _101421_selectors);
				if ((_100561_tokens.len() == 0LL)) {
					_1ad20c093_pushErr(_self_, _100813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100813_token=_100561_tokens[(_100561_tokens.len() - 1LL)];
				if (((*(_100813_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1ad20c093_pushErr(_self_, _100813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_100561_tokens).mut_slice(0LL, (_100561_tokens.len() - 1LL));;
				if ((_100561_tokens.len() == 0LL)) {
					_1ad20c093_pushErr(_self_, _100813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1bd673142:;
			{
				(_100561_tokens).mut_slice(0LL, (_100561_tokens.len() - 1LL));;
				if ((_100561_tokens.len() == 0LL)) {
					_1ad20c093_pushErr(_self_, _100813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100813_token=_100561_tokens[(_100561_tokens.len() - 1LL)];
				if (((*(_100813_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1ad20c093_pushErr(_self_, _100813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_100561_tokens).mut_slice(0LL, (_100561_tokens.len() - 1LL));;
				if ((_100561_tokens.len() == 0LL)) {
					_1ad20c093_pushErr(_self_, _100813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_100541_decl))))._field_Full=true;
			}
		}
		_match_end_1bd672ebb:;
	};
	(*((*(_100541_decl))))._field_LinkPath=_1ad213cd1_useDeclTokstoa(_self_, &(_100561_tokens));
}



inline void _1ad21481a_parseUseDecl(_1ad20b5e2_parser* _self_, jule::Ptr<_1ac6e1787_UseDecl>* _105336_decl, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _105356_tokens) {
	if ((*((*(_105336_decl))))._field_Binded) {
		_1ad213990_buildBindUseDecl(_self_, _105336_decl, &(_105356_tokens));
		return;;
	};
	jule::Ptr<_1ac6b2e62_Token> _105913_token = _105356_tokens[0LL];;
	if (((*(_105913_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1ad20c093_pushErr(_self_, _105913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ad20c406_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	if (((_105356_tokens.len() > 2LL) && ((*(_105356_tokens[1LL]))._field_Id == static_cast<jule::U64>(9LLU)))) {
		(*((*(_105336_decl))))._field_Alias=(*(_105913_token))._field_Kind;
		if (((*(_105356_tokens[2LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1ad20c093_pushErr(_self_, _105913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			_1ad20c406_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			return;;
		};
		(_105356_tokens).mut_slice(2LL);;
		_105913_token=_105356_tokens[0LL];
	};
	;
	{
		
		if ((*(_105913_token))._field_Kind.equal("std", 3)) {
			_case_begin_1bd67eeb7:;
			{
				_1ad214144_buildStdUseDecl(_self_, _105336_decl, _105356_tokens);
			}
		}
		else {
			_case_begin_1bd67eb21:;
			{
				_1ad2144a7_buildIdentUseDecl(_self_, _105336_decl, _105356_tokens);
			}
		}
		_match_end_1bd67eaaa:;
	};
}



inline jule::Ptr<_1ac6e1787_UseDecl> _1ad214c16_buildUseDecl(_1ad20b5e2_parser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _108735_tokens, jule::Bool _108753_binded) {
	jule::Ptr<_1ac6e1787_UseDecl> _108813_decl = jule::new_ptr<_1ac6e1787_UseDecl>(_1ac6e1787_UseDecl{._field_Token=_108735_tokens[0LL], ._field_Binded=_108753_binded, });;
	if ((_108735_tokens.len() < 2LL)) {
		_1ad20c093_pushErr(_self_, (*(_108813_decl))._field_Token, jule::Str::lit("missing path of use statement", 29), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_108735_tokens).mut_slice(1LL);;
	_1ad21481a_parseUseDecl(_self_, &(_108813_decl), _108735_tokens);
	return _108813_decl;;
}



inline jule::Ptr<_1ac6c8681_TypeDecl> _1ad215112_buildTypeEnumItemKind(jule::Ptr<_1ad20b5e2_parser> _self_, jule::I64* _110146_i, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _110159_tokens) {
	jule::I64 _110213_braceN = 0LL;;
	jule::I64 _11039_exprStart = (*(_110146_i));;
	for (; ((*(_110146_i)) < (*(_110159_tokens)).len()); ((*(_110146_i)))++) {
		{
			jule::Ptr<_1ac6b2e62_Token> _110513_t = (*(_110159_tokens))[(*(_110146_i))];;
			{
				auto &_match_expr{ (*(_110513_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1bd6843c8:;
					{
						(_110213_braceN)++;
						goto _iter_next_1bd6836a2;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1bd684450:;
					{
						(_110213_braceN)--;
					}
				}
				_match_end_1bd684362:;
			};
			if ((_110213_braceN > 0LL)) {
				goto _iter_next_1bd6836a2;
			};
			if ((((*(_110513_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_110146_i)) + 1LL) >= (*(_110159_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _112125_kindTokens = nullptr;;
				if (((*(_110513_t))._field_Id == static_cast<jule::U64>(5LLU))) {
					_112125_kindTokens=(*(_110159_tokens)).slice(_11039_exprStart, (*(_110146_i)));
				} else {
					_112125_kindTokens=(*(_110159_tokens)).slice(_11039_exprStart);
				};
				jule::I64 _112721_j = 0LL;;
				jule::Ptr<_1ac6c8681_TypeDecl> _112821_kind;;
				({
					__jule_tuple_x_1ac6c8681_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad20db99_buildType(_self_, &(_112125_kindTokens), (&(_112721_j)), true);
					_112821_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_112721_j < _112125_kindTokens.len())) {
					_1ad20c093_pushErr(_self_.ptr(), _112125_kindTokens[_112721_j], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				return _112821_kind;;
			};
		}
	_iter_next_1bd6836a2:;
	}
	_iter_end_1bd6836a2:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1ac6e3129_TypeEnumItemDecl>> _1ad215453_buildTypeEnumItems(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _113843_tokens) {
	jule::Slice<jule::Ptr<_1ac6e3129_TypeEnumItemDecl>> _113913_items = jule::Slice<jule::Ptr<_1ac6e3129_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _114013_i = 0LL;;
	for (; (_114013_i < (*(_113843_tokens)).len()); (_114013_i)++) {
		{
			jule::Ptr<_1ac6b2e62_Token> _114217_t = (*(_113843_tokens))[_114013_i];;
			jule::Ptr<_1ac6e3129_TypeEnumItemDecl> _114317_item = jule::new_ptr<_1ac6e3129_TypeEnumItemDecl>();;
			(*(_114317_item))._field_Token=_114217_t;
			if ((((*((*(_114317_item))._field_Token))._field_Id == static_cast<jule::U64>(1LLU)) && (((*(_113843_tokens)).len() - _114013_i) > 2LL))) {
				_114217_t=(*(_113843_tokens))[(_114013_i + 1LL)];
				if (((*(_114217_t))._field_Id == static_cast<jule::U64>(8LLU))) {
					(*(_114317_item))._field_Ident=(*((*(_114317_item))._field_Token))._field_Kind;
					_114013_i+=2LL;
					if (((_114013_i >= (*(_113843_tokens)).len()) || ((*((*(_113843_tokens))[_114013_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
						_1ad20c093_pushErr(_self_.ptr(), _114217_t, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
						goto _iter_next_1bd689697;
					};
				};
			};
			(*(_114317_item))._field_Kind=_1ad215112_buildTypeEnumItemKind(_self_, &(_114013_i), _113843_tokens);
			{ jule::Slice<jule::Ptr<_1ac6e3129_TypeEnumItemDecl>> &__jule_push_dest = _113913_items; __jule_push_dest.push(_114317_item); };
		}
	_iter_next_1bd689697:;
	}
	_iter_end_1bd689697:;;
	return _113913_items;;
}



inline jule::Ptr<_1ac6e3789_TypeEnumDecl> _1ad215794_buildTypeEnumDecl(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _116242_tokens) {
	jule::I64 _116313_i = 1LL;;
	jule::Ptr<_1ac6e3789_TypeEnumDecl> _116413_e = jule::new_ptr<_1ac6e3789_TypeEnumDecl>(_1ac6e3789_TypeEnumDecl{._field_Token=(*(_116242_tokens))[_116313_i], });;
	if (((*((*(_116413_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1ad20c093_pushErr(_self_.ptr(), (*(_116413_e))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ad20c406_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_116413_e))._field_Ident=(*((*(_116413_e))._field_Token))._field_Kind;
	_116313_i+=3LL;
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _117413_itemTokens = _1ad209c94_range(&(_116313_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _116242_tokens);;
	if ((_117413_itemTokens == nullptr)) {
		_1ad20b8de_stop(_self_.ptr());
		_1ad20c093_pushErr(_self_.ptr(), (*(_116413_e))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1ad20c406_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _116413_e;;
	} else if ((_116313_i < (*(_116242_tokens)).len())) {
		_1ad20c093_pushErr(_self_.ptr(), (*(_116242_tokens))[_116313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_116413_e))._field_Public=_1ac794d79_IsPub((*(_116413_e))._field_Ident);
	(*(_116413_e))._field_End=(*(_116242_tokens))[(_116313_i - 1LL)];
	(*(_116413_e))._field_Items=_1ad215453_buildTypeEnumItems(_self_, &(_117413_itemTokens));
	return _116413_e;;
}



inline jule::Ptr<_1ac6cc9b5_Expr> _1ad215b90_buildEnumItemExpr(jule::Ptr<_1ad20b5e2_parser> _self_, jule::I64* _118942_i, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _118955_tokens) {
	jule::I64 _119013_braceN = 0LL;;
	jule::I64 _11919_exprStart = (*(_118942_i));;
	for (; ((*(_118942_i)) < (*(_118955_tokens)).len()); ((*(_118942_i)))++) {
		{
			jule::Ptr<_1ac6b2e62_Token> _119313_t = (*(_118955_tokens))[(*(_118942_i))];;
			{
				auto &_match_expr{ (*(_119313_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1bd696d69:;
					{
						(_119013_braceN)++;
						goto _iter_next_1bd696143;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1bd696de1:;
					{
						(_119013_braceN)--;
					}
				}
				_match_end_1bd696d03:;
			};
			if ((_119013_braceN > 0LL)) {
				goto _iter_next_1bd696143;
			};
			if ((((*(_119313_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_118942_i)) + 1LL) >= (*(_118955_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _120925_exprTokens = nullptr;;
				if (((*(_119313_t))._field_Id == static_cast<jule::U64>(5LLU))) {
					_120925_exprTokens=(*(_118955_tokens)).slice(_11919_exprStart, (*(_118942_i)));
				} else {
					_120925_exprTokens=(*(_118955_tokens)).slice(_11919_exprStart);
				};
				return _1ad20c747_buildExpr(_self_, &(_120925_exprTokens));;
			};
		}
	_iter_next_1bd696143:;
	}
	_iter_end_1bd696143:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1ac6e1c3d_EnumItemDecl>> _1ad215ed1_buildEnumItems(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _122139_tokens) {
	jule::Slice<jule::Ptr<_1ac6e1c3d_EnumItemDecl>> _122213_items = jule::Slice<jule::Ptr<_1ac6e1c3d_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _122313_i = 0LL;;
	for (; (_122313_i < (*(_122139_tokens)).len()); (_122313_i)++) {
		{
			jule::Ptr<_1ac6b2e62_Token> _122517_t = (*(_122139_tokens))[_122313_i];;
			jule::Ptr<_1ac6e1c3d_EnumItemDecl> _122617_item = jule::new_ptr<_1ac6e1c3d_EnumItemDecl>();;
			(*(_122617_item))._field_Token=_122517_t;
			if (((*((*(_122617_item))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
				_1ad20c093_pushErr(_self_.ptr(), (*(_122617_item))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1ad20c406_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			};
			(*(_122617_item))._field_Ident=(*((*(_122617_item))._field_Token))._field_Kind;
			if ((((_122313_i + 1LL) >= (*(_122139_tokens)).len()) || ((*((*(_122139_tokens))[(_122313_i + 1LL)]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				if (((_122313_i + 1LL) < (*(_122139_tokens)).len())) {
					(_122313_i)++;
				};
				{ jule::Slice<jule::Ptr<_1ac6e1c3d_EnumItemDecl>> &__jule_push_dest = _122213_items; __jule_push_dest.push(_122617_item); };
				goto _iter_next_1bd69ad7e;
			};
			(_122313_i)++;
			_122517_t=(*(_122139_tokens))[_122313_i];
			(_122313_i)++;
			if (((*(_122517_t))._field_Id != static_cast<jule::U64>(8LLU))) {
				_1ad20c093_pushErr(_self_.ptr(), _122517_t, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1ad20c406_pushSuggestion(_self_.ptr(), jule::Str::lit("expected colon \":\" for assignment", 33), jule::Slice<jule::Any>());
				goto _iter_next_1bd69ad7e;
			};
			if (((_122313_i >= (*(_122139_tokens)).len()) || ((*((*(_122139_tokens))[_122313_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				_1ad20c093_pushErr(_self_.ptr(), _122517_t, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
				goto _iter_next_1bd69ad7e;
			};
			(*(_122617_item))._field_Expr=_1ad215b90_buildEnumItemExpr(_self_, &(_122313_i), _122139_tokens);
			{ jule::Slice<jule::Ptr<_1ac6e1c3d_EnumItemDecl>> &__jule_push_dest = _122213_items; __jule_push_dest.push(_122617_item); };
		}
	_iter_next_1bd69ad7e:;
	}
	_iter_end_1bd69ad7e:;;
	return _122213_items;;
}



inline jule::Ptr<_1ac6e27ee_EnumDecl> _1ad216322_buildEnumDecl(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _125838_tokens) {
	if (((*(_125838_tokens)).len() < 3LL)) {
		_1ad20c093_pushErr(_self_.ptr(), (*(_125838_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac6e27ee_EnumDecl> _126313_e = jule::new_ptr<_1ac6e27ee_EnumDecl>(_1ac6e27ee_EnumDecl{._field_Token=(*(_125838_tokens))[1LL], });;
	if (((*((*(_126313_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1ad20c093_pushErr(_self_.ptr(), (*(_126313_e))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ad20c406_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_126313_e))._field_Ident=(*((*(_126313_e))._field_Token))._field_Kind;
	jule::I64 _127113_i = 2LL;;
	if (((*((*(_125838_tokens))[_127113_i]))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_127113_i)++;
		if ((_127113_i >= (*(_125838_tokens)).len())) {
			_1ad20c093_pushErr(_self_.ptr(), (*(_125838_tokens))[(_127113_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return _126313_e;;
		};
		({
			__jule_tuple_x_1ac6c8681_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad20db99_buildType(_self_, _125838_tokens, (&(_127113_i)), true);
			(*(_126313_e))._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_127113_i >= (*(_125838_tokens)).len())) {
			_1ad20b8de_stop(_self_.ptr());
			_1ad20c093_pushErr(_self_.ptr(), (*(_126313_e))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
			_1ad20c406_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
			return _126313_e;;
		};
	} else {
		(*(_126313_e))._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _128813_itemTokens = _1ad209c94_range(&(_127113_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _125838_tokens);;
	if ((_128813_itemTokens == nullptr)) {
		_1ad20b8de_stop(_self_.ptr());
		_1ad20c093_pushErr(_self_.ptr(), (*(_126313_e))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1ad20c406_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _126313_e;;
	} else if ((_127113_i < (*(_125838_tokens)).len())) {
		_1ad20c093_pushErr(_self_.ptr(), (*(_125838_tokens))[_127113_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_126313_e))._field_Public=_1ac794d79_IsPub((*(_126313_e))._field_Ident);
	(*(_126313_e))._field_End=(*(_125838_tokens))[(_127113_i - 1LL)];
	(*(_126313_e))._field_Items=_1ad215ed1_buildEnumItems(_self_, &(_128813_itemTokens));
	return _126313_e;;
}



inline jule::Any _1ad216663_buildNodeEnumDecl(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _130342_tokens) {
	if ((((*(_130342_tokens)).len() > 3LL) && ((*((*(_130342_tokens))[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
		if (((*((*(_130342_tokens))[3LL]))._field_Id == static_cast<jule::U64>(7LLU))) {
			return jule::Any(_1ad215794_buildTypeEnumDecl(_self_, _130342_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_1ad216322_buildEnumDecl(_self_, _130342_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_1ac6e3a53_FieldDecl> _1ad2169a4_buildField(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _131234_tokens) {
	jule::Ptr<_1ac6e3a53_FieldDecl> _131313_f = jule::new_ptr<_1ac6e3a53_FieldDecl>();;
	(*(_131313_f))._field_Mutable=((*(_131234_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU));
	if ((*(_131313_f))._field_Mutable) {
		if ((_131234_tokens.len() == 1LL)) {
			_1ad20c093_pushErr(_self_.ptr(), _131234_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_131234_tokens).mut_slice(1LL);;
	};
	(*(_131313_f))._field_Token=_131234_tokens[0LL];
	if (((*((*(_131313_f))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1ad20c093_pushErr(_self_.ptr(), (*(_131313_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ad20c406_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_131313_f))._field_Ident=(*((*(_131313_f))._field_Token))._field_Kind;
	if ((_131234_tokens.len() == 1LL)) {
		_1ad20c093_pushErr(_self_.ptr(), _131234_tokens[0LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_131234_tokens.len() < 3LL) || ((*(_131234_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU)))) {
		_1ad20c093_pushErr(_self_.ptr(), _131234_tokens[1LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_131234_tokens).mut_slice(2LL);;
	jule::I64 _134113_i = 0LL;;
	({
		__jule_tuple_x_1ac6c8681_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad20db99_buildType(_self_, &(_131234_tokens), (&(_134113_i)), true);
		(*(_131313_f))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_134113_i < _131234_tokens.len())) {
		jule::Ptr<_1ac6b2e62_Token> _134413_token = _131234_tokens[_134113_i];;
		if (((*(_134413_token))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1ad20c093_pushErr(_self_.ptr(), _131234_tokens[_134113_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_134113_i)++;
		if ((_134113_i >= _131234_tokens.len())) {
			_1ad20c093_pushErr(_self_.ptr(), _134413_token, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_131234_tokens).mut_slice(_134113_i);;
		(*(_131313_f))._field_Default=_1ad20c747_buildExpr(_self_, &(_131234_tokens));
	};
	(*(_131313_f))._field_Public=_1ac794d79_IsPub((*(_131313_f))._field_Ident);
	return _131313_f;;
}



inline jule::Slice<jule::Ptr<_1ac6e3a53_FieldDecl>> _1ad216ce5_buildStructDeclFields(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _136145_tokens) {
	jule::Slice<jule::Ptr<_1ac6e3a53_FieldDecl>> _136217_fields = nullptr;;
	jule::Slice<jule::Ptr<_1ad1dc98b_stmt>> _136313_stmts = _1ad1dcd43_splitStmts(&(_136145_tokens));;
	{
		auto expr = &(_136313_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd6ba51e:;
		if (it != expr_end) {
			jule::Ptr<_1ad1dc98b_stmt> _136421_stmt = *it;
			{
				_136145_tokens=(*(_136421_stmt))._field_tokens;
				jule::Ptr<_1ac6e3a53_FieldDecl> _136617_f = _1ad2169a4_buildField(_self_, _136145_tokens);;
				{ jule::Slice<jule::Ptr<_1ac6e3a53_FieldDecl>> &__jule_push_dest = _136217_fields; __jule_push_dest.push(_136617_f); };
			}
			_iter_next_1bd6ba51e:;
			++it;
			goto _iter_begin_1bd6ba51e;
		}
		_iter_end_1bd6ba51e:;
	};
	return _136217_fields;;
}



inline jule::Ptr<_1ac6e4449_StructDecl> _1ad217136_buildStructDecl(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _137240_tokens) {
	if (((*(_137240_tokens)).len() < 3LL)) {
		_1ad20c093_pushErr(_self_.ptr(), (*(_137240_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _137813_i = 1LL;;
	jule::Ptr<_1ac6e4449_StructDecl> _137913_s = jule::new_ptr<_1ac6e4449_StructDecl>(_1ac6e4449_StructDecl{._field_Token=(*(_137240_tokens))[_137813_i], });;
	if (((*((*(_137913_s))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1ad20c093_pushErr(_self_.ptr(), (*(_137913_s))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ad20c406_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_137813_i)++;
	if ((_137813_i >= (*(_137240_tokens)).len())) {
		_1ad20c093_pushErr(_self_.ptr(), (*(_137240_tokens))[_137813_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return _137913_s;;
	};
	(*(_137913_s))._field_Ident=(*((*(_137913_s))._field_Token))._field_Kind;
	jule::Ptr<_1ac6b2e62_Token> _13939_errorToken = (*(_137240_tokens))[_137813_i];;
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _139413_genericsTokens = _1ad209c94_range(&(_137813_i), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _137240_tokens);;
	if ((_139413_genericsTokens != nullptr)) {
		(*(_137913_s))._field_Generics=_1ad21065c_buildGenerics(_self_, &(_139413_genericsTokens), &(_13939_errorToken));
	};
	if ((_137813_i >= (*(_137240_tokens)).len())) {
		_1ad20c093_pushErr(_self_.ptr(), (*(_137240_tokens))[(_137813_i - 1LL)], jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1ad20c406_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _137913_s;;
	};
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _140413_bodyTokens = _1ad209c94_range(&(_137813_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _137240_tokens);;
	if ((_140413_bodyTokens == nullptr)) {
		_1ad20b8de_stop(_self_.ptr());
		_1ad20c093_pushErr(_self_.ptr(), (*(_137913_s))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1ad20c406_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _137913_s;;
	};
	if ((_137813_i < (*(_137240_tokens)).len())) {
		_1ad20c093_pushErr(_self_.ptr(), (*(_137240_tokens))[_137813_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_137913_s))._field_Public=_1ac794d79_IsPub((*(_137913_s))._field_Ident);
	(*(_137913_s))._field_Fields=_1ad216ce5_buildStructDeclFields(_self_, _140413_bodyTokens);
	(*(_137913_s))._field_End=(*(_137240_tokens))[(_137813_i - 1LL)];
	return _137913_s;;
}



inline void _1ad2173de_checkMethodReceiver(_1ad20b5e2_parser* _self_, jule::Ptr<_1ac6da341_FnDecl>* _142039_f) {
	if ((*((*(_142039_f))))._field_Statically) {
		if ((((*((*(_142039_f))))._field_Params.len() > 0LL) && _1ac6d9263_IsSelf((*((*(_142039_f))))._field_Params[0LL].ptr()))) {
			_1ad20c093_pushErr(_self_, (*((*(_142039_f))))._field_Token, jule::Str::lit("static functions cannot have receiver parameter", 47), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*((*(_142039_f))))._field_Params.len() == 0LL)) {
		_1ad20c093_pushErr(_self_, (*((*(_142039_f))))._field_Token, jule::Str::lit("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ac6d8dde_ParamDecl> _14329_param = (*((*(_142039_f))))._field_Params[0LL];;
	if ((!(_1ac6d9263_IsSelf(_14329_param.ptr())))) {
		_1ad20c093_pushErr(_self_, (*((*(_142039_f))))._field_Token, jule::Str::lit("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1ad217752_buildTraitBody(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Ptr<_1ac6e4b86_TraitDecl>* _143939_t, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _143958_tokens) {
	jule::Slice<jule::Ptr<_1ad1dc98b_stmt>> _144013_stmts = _1ad1dcd43_splitStmts(&(_143958_tokens));;
	{
		auto expr = &(_144013_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd6cae03:;
		if (it != expr_end) {
			jule::Ptr<_1ad1dc98b_stmt> _144121_stmt = *it;
			{
				_143958_tokens=(*(_144121_stmt))._field_tokens;
				if ((_143958_tokens.len() == 0LL)) {
					goto _iter_next_1bd6cae03;
				};
				{
					auto &_match_expr{ (*(_143958_tokens[0LL]))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(29LLU)) {
						_case_begin_1bd6ce533:;
						{
							jule::Ptr<_1ac6da341_FnDecl> _144821_f = _1ad2132db_buildFn(_self_, &(_143958_tokens), true, true);;
							if ((_144821_f == nullptr)) {
								goto _match_end_1bd6cc201;
							};
							_1ad2173de_checkMethodReceiver(_self_.ptr(), &(_144821_f));
							if (((*(_144821_f))._field_Generics.len() > 0LL)) {
								_1ad20c093_pushErr(_self_.ptr(), (*(_144821_f))._field_Token, jule::Str::lit("trait methods cannot have generics", 34), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1ac6da341_FnDecl>> &__jule_push_dest = (*((*(_143939_t))))._field_Methods; __jule_push_dest.push(_144821_f); };
						}
					}
					else {
						_case_begin_1bd6cb9c5:;
						{
							jule::I64 _145821_i = 0LL;;
							jule::Ptr<_1ac6c8681_TypeDecl> _145921_ti;;
							jule::Bool _145925_ok = false;;
							({
								__jule_tuple_x_1ac6c8681_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad20db99_buildType(_self_, &(_143958_tokens), (&(_145821_i)), true);
								_145921_ti = __jule_assign_result.__jule_result_arg0;
								_145925_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_145925_ok))) {
								goto _match_end_1bd6cc201;
							};
							if ((_145821_i < _143958_tokens.len())) {
								_1ad20c093_pushErr(_self_.ptr(), _143958_tokens[_145821_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1ac6c8681_TypeDecl>> &__jule_push_dest = (*((*(_143939_t))))._field_Inherits; __jule_push_dest.push(_145921_ti); };
						}
					}
					_match_end_1bd6cc201:;
				};
			}
			_iter_next_1bd6cae03:;
			++it;
			goto _iter_begin_1bd6cae03;
		}
		_iter_end_1bd6cae03:;
	};
}



inline jule::Ptr<_1ac6e4b86_TraitDecl> _1ad217a93_buildTraitDecl(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _147139_tokens) {
	if (((*(_147139_tokens)).len() < 3LL)) {
		_1ad20c093_pushErr(_self_.ptr(), (*(_147139_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac6e4b86_TraitDecl> _147613_t = jule::new_ptr<_1ac6e4b86_TraitDecl>(_1ac6e4b86_TraitDecl{._field_Token=(*(_147139_tokens))[1LL], });;
	if (((*((*(_147613_t))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1ad20c093_pushErr(_self_.ptr(), (*(_147613_t))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ad20c406_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_147613_t))._field_Ident=(*((*(_147613_t))._field_Token))._field_Kind;
	jule::I64 _148413_i = 2LL;;
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _148513_bodyTokens = _1ad209c94_range(&(_148413_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _147139_tokens);;
	if ((_148513_bodyTokens == nullptr)) {
		_1ad20b8de_stop(_self_.ptr());
		_1ad20c093_pushErr(_self_.ptr(), (*(_147613_t))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1ad20c406_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_148413_i < (*(_147139_tokens)).len())) {
		_1ad20c093_pushErr(_self_.ptr(), (*(_147139_tokens))[_148413_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_147613_t))._field_Public=_1ac794d79_IsPub((*(_147613_t))._field_Ident);
	_1ad217752_buildTraitBody(_self_, &(_147613_t), _148513_bodyTokens);
	(*(_147613_t))._field_End=(*(_147139_tokens))[(_148413_i - 1LL)];
	return _147613_t;;
}



inline jule::Ptr<_1ac6da341_FnDecl> _1ad217dd4_buildBindFn(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _150135_tokens) {
	(_150135_tokens).mut_slice(1LL);;
	jule::Ptr<_1ac6da341_FnDecl> _150313_f = _1ad2132db_buildFn(_self_, &(_150135_tokens), false, true);;
	if ((_150313_f != nullptr)) {
		(*(_150313_f))._field_Public=false;
		(*(_150313_f))._field_Binded=true;
	};
	return _150313_f;;
}



inline jule::Ptr<_1ac6db4eb_VarDecl> _1ad218225_buildBindVar(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _151136_tokens) {
	(_151136_tokens).mut_slice(1LL);;
	jule::Ptr<_1ac6db4eb_VarDecl> _151313_v = _1ad20ee20_buildVar(_self_, _151136_tokens);;
	if ((_151313_v != nullptr)) {
		(*(_151313_v))._field_Public=false;
		(*(_151313_v))._field_Binded=true;
		if (((*(_151313_v))._field_Expr != nullptr)) {
			_1ad20c093_pushErr(_self_.ptr(), (*(_151313_v))._field_Token, jule::Str::lit("binded variables cannot have expression", 39), jule::Slice<jule::Any>());
		};
	};
	return _151313_v;;
}



inline jule::Ptr<_1ac6e4449_StructDecl> _1ad218566_buildBindStruct(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _152439_tokens) {
	(_152439_tokens).mut_slice(1LL);;
	jule::Ptr<_1ac6e4449_StructDecl> _152613_s = _1ad217136_buildStructDecl(_self_, &(_152439_tokens));;
	if ((_152613_s != nullptr)) {
		(*(_152613_s))._field_Public=false;
		{
			auto expr = &((*(_152613_s))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd6dd762:;
			if (it != expr_end) {
				jule::Ptr<_1ac6e3a53_FieldDecl> _152925_f = *it;
				{
					(*(_152925_f))._field_Public=true;
				}
				_iter_next_1bd6dd762:;
				++it;
				goto _iter_begin_1bd6dd762;
			}
			_iter_end_1bd6dd762:;
		};
		(*(_152613_s))._field_Binded=true;
	};
	return _152613_s;;
}



inline jule::Ptr<_1ac6e019d_TypeAliasDecl> _1ad2188a7_buildBindTypeAlias(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _153842_tokens) {
	(_153842_tokens).mut_slice(1LL);;
	jule::Ptr<_1ac6e019d_TypeAliasDecl> _154013_t = _1ad20deda_buildTypeAliasDecl(_self_, &(_153842_tokens));;
	if ((_154013_t != nullptr)) {
		(*(_154013_t))._field_Public=false;
		(*(_154013_t))._field_Binded=true;
	};
	return _154013_t;;
}



inline jule::Ptr<_1ac6e1787_UseDecl> _1ad218be8_buildBindUse(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _154836_tokens) {
	if ((_154836_tokens.len() == 1LL)) {
		_1ad20c093_pushErr(_self_.ptr(), _154836_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_154836_tokens).mut_slice(1LL);;
	;
	return _1ad214c16_buildUseDecl(_self_.ptr(), _154836_tokens, true);;
}



inline jule::Any _1ad219039_buildBind(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _155934_tokens) {
	jule::Ptr<_1ac6b2e62_Token> _156013_token = (*(_155934_tokens))[0LL];;
	if (((*(_155934_tokens)).len() == 1LL)) {
		_1ad20c093_pushErr(_self_.ptr(), _156013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_156013_token=(*(_155934_tokens))[1LL];
	{
		auto &_match_expr{ (*(_156013_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1bd6e49dd:;
			{
				return jule::Any(_1ad217dd4_buildBindFn(_self_, (*(_155934_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1bd6e3745:;
			{
				return jule::Any(_1ad218225_buildBindVar(_self_, (*(_155934_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1bd6e4438:;
			{
				return jule::Any(_1ad218566_buildBindStruct(_self_, (*(_155934_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1bd6e449e:;
			{
				return jule::Any(_1ad2188a7_buildBindTypeAlias(_self_, (*(_155934_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_1bd6e43c2:;
			{
				_1ad20c093_pushErr(_self_.ptr(), _156013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bd6e436c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac6da341_FnDecl> _1ad21937a_getMethod(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _158334_tokens) {
	jule::I64 _158413_i = 0LL;;
	jule::Ptr<_1ac6b2e62_Token> _158513_token = (*(_158334_tokens))[_158413_i];;
	if (((*(_158513_token))._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_158413_i + 1LL) >= (*(_158334_tokens)).len())) {
			_1ad20c093_pushErr(_self_.ptr(), _158513_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_158413_i)++;
		_158513_token=(*(_158334_tokens))[_158413_i];
	};
	if (((*(_158513_token))._field_Id == static_cast<jule::U64>(31LLU))) {
		if (((_158413_i + 1LL) >= (*(_158334_tokens)).len())) {
			_1ad20c093_pushErr(_self_.ptr(), _158513_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_158413_i)++;
		_158513_token=(*(_158334_tokens))[_158413_i];
	};
	if (((*(_158513_token))._field_Id != static_cast<jule::U64>(29LLU))) {
		_1ad20c093_pushErr(_self_.ptr(), _158513_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1ad2132db_buildFn(_self_, _158334_tokens, true, false);;
}



inline void _1ad2196dd_parseImplBody(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Ptr<_1ac6e52e6_Impl>* _161238_ipl, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _161255_tokens) {
	jule::Slice<jule::Ptr<_1ad1dc98b_stmt>> _161313_stmts = _1ad1dcd43_splitStmts(_161255_tokens);;
	{
		auto expr = &(_161313_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd6ebcae:;
		if (it != expr_end) {
			jule::Ptr<_1ad1dc98b_stmt> _161421_stmt = *it;
			{
				(*(_161255_tokens))=(*(_161421_stmt))._field_tokens;
				jule::Ptr<_1ac6b2e62_Token> _161617_token = (*(_161255_tokens))[0LL];;
				{
					auto &_match_expr{ (*(_161617_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1bd6ecaa1:;
						{
							_1ad20cd41_pushDirective(_self_.ptr(), _1ad20ca88_buildDirective(_self_.ptr(), (*(_161255_tokens))));
							goto _iter_next_1bd6ebcae;
						}
					}
					_match_end_1bd6ed057:;
				};
				{
					auto &_match_expr{ (*(_161617_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(6LLU)) {
						_case_begin_1bd6ee4a9:;
						{
							jule::Ptr<_1ac6db4eb_VarDecl> _162521_v = _1ad20ee20_buildVar(_self_, (*(_161255_tokens)));;
							if ((_162521_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_1ac6db4eb_VarDecl>> &__jule_push_dest = (*((*(_161238_ipl))))._field_Statics; __jule_push_dest.push(_162521_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1bd6ed189:;
						{
							jule::Ptr<_1ac6da341_FnDecl> _163221_f = _1ad21937a_getMethod(_self_, _161255_tokens);;
							if ((_163221_f != nullptr)) {
								_1ad2173de_checkMethodReceiver(_self_.ptr(), &(_163221_f));
								_1ad21a128_applyFnMeta(_self_.ptr(), &(_163221_f));
								{ jule::Slice<jule::Ptr<_1ac6da341_FnDecl>> &__jule_push_dest = (*((*(_161238_ipl))))._field_Methods; __jule_push_dest.push(_163221_f); };
							};
						}
					}
					else {
						_case_begin_1bd6ed5c9:;
						{
							_1ad20c093_pushErr(_self_.ptr(), _161617_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							goto _iter_next_1bd6ebcae;
						}
					}
					_match_end_1bd6ed574:;
				};
			}
			_iter_next_1bd6ebcae:;
			++it;
			goto _iter_begin_1bd6ebcae;
		}
		_iter_end_1bd6ebcae:;
	};
}



inline jule::Ptr<_1ac6e52e6_Impl> _1ad219a2e_buildImpl(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _164533_tokens) {
	jule::Ptr<_1ac6b2e62_Token> _164613_token = _164533_tokens[0LL];;
	if ((_164533_tokens.len() < 2LL)) {
		_1ad20c093_pushErr(_self_.ptr(), _164613_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _165213_i = 1LL;;
	jule::Ptr<_1ac6c8681_TypeDecl> _165413_base;;
	jule::Bool _165423_ok = false;;
	({
		__jule_tuple_x_1ac6c8681_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad20db99_buildType(_self_, &(_164533_tokens), (&(_165213_i)), true);
		_165413_base = __jule_assign_result.__jule_result_arg0;
		_165423_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_165423_ok))) {
		return nullptr;;
	};
	if ((_165213_i >= _164533_tokens.len())) {
		_1ad20c093_pushErr(_self_.ptr(), _164613_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac6e52e6_Impl> _166313_ipl = jule::new_ptr<_1ac6e52e6_Impl>(_1ac6e52e6_Impl{._field_Base=_165413_base, });;
	_164613_token=_164533_tokens[_165213_i];
	if (((*(_164613_token))._field_Id != static_cast<jule::U64>(9LLU))) {
		if (((*(_164613_token))._field_Id == static_cast<jule::U64>(72LLU))) {
			std::swap((*(_166313_ipl))._field_Base, (*(_166313_ipl))._field_Dest);
			goto _julec_label_1bd70b494;
		};
		_1ad20b8de_stop(_self_.ptr());
		_1ad20c093_pushErr(_self_.ptr(), _164613_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1ad20c406_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_165213_i)++;
	if ((_165213_i >= _164533_tokens.len())) {
		_1ad20b8de_stop(_self_.ptr());
		_1ad20c093_pushErr(_self_.ptr(), _164613_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1ad20c406_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1ac6c8681_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad20db99_buildType(_self_, &(_164533_tokens), (&(_165213_i)), true);
		(*(_166313_ipl))._field_Dest = __jule_assign_result.__jule_result_arg0;
		_165423_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_165423_ok))) {
		return nullptr;;
	};
	if ((_165213_i >= _164533_tokens.len())) {
		_1ad20b8de_stop(_self_.ptr());
		_1ad20c093_pushErr(_self_.ptr(), _164613_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1ad20c406_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1bd70b494:;
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _170113_bodyTokens = _1ad209c94_range(&(_165213_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_164533_tokens));;
	if ((_170113_bodyTokens == nullptr)) {
		_1ad20b8de_stop(_self_.ptr());
		_1ad20c093_pushErr(_self_.ptr(), _164613_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1ad20c406_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_165213_i < _164533_tokens.len())) {
		_1ad20c093_pushErr(_self_.ptr(), _164533_tokens[_165213_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_166313_ipl))._field_End=_164533_tokens[(_165213_i - 1LL)];
	_1ad2196dd_parseImplBody(_self_, &(_166313_ipl), &(_170113_bodyTokens));
	return _166313_ipl;;
}



inline jule::Any _1ad219d70_buildNodeData(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _171638_tokens) {
	jule::Ptr<_1ac6b2e62_Token> _171713_token = (*(_171638_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_171713_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1bd710a5e:;
			{
				jule::Ptr<_1ac6da341_FnDecl> _172117_f = _1ad2132db_buildFn(_self_, _171638_tokens, false, false);;
				if ((_172117_f != nullptr)) {
					(*(_172117_f))._field_Global=true;
				};
				return jule::Any(_172117_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1bd7100e1:;
			{
				return jule::Any(_1ad20ee20_buildVar(_self_, (*(_171638_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1bd710e27:;
			{
				return jule::Any(_1ad20deda_buildTypeAliasDecl(_self_, _171638_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1bd7104a9:;
			{
				return _1ad216663_buildNodeEnumDecl(_self_, _171638_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1bd710520:;
			{
				return jule::Any(_1ad217136_buildStructDecl(_self_, _171638_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1bd710586:;
			{
				return jule::Any(_1ad217a93_buildTraitDecl(_self_, _171638_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1bd7105ec:;
			{
				return jule::Any(_1ad219a2e_buildImpl(_self_, (*(_171638_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1bd711026:;
			{
				return _1ad219039_buildBind(_self_, _171638_tokens);;
			}
		}
		else {
			_case_begin_1bd710443:;
			{
				_1ad20c093_pushErr(_self_.ptr(), _171713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bd7103dd:;
	};
}



inline void _1ad21a128_applyFnMeta(_1ad20b5e2_parser* _self_, jule::Ptr<_1ac6da341_FnDecl>* _174935_f) {
	(*((*(_174935_f))))._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1ad21a3d1_applyMeta(_1ad20b5e2_parser* _self_, _1ac6c7680_Node* _175433_node) {
	{
		auto &_match_expr{ (*(_175433_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1bd7167bd:;
			{
				jule::Ptr<_1ac6db4eb_VarDecl> _175717_v = (*(_175433_node))._field_Data.cast_ptr<_1ac6db4eb_VarDecl>(&__jule_any_type16);;
				if ((_175717_v == nullptr)) {
					return;;
				};
				(*(_175717_v))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1bd716845:;
			{
				jule::Ptr<_1ac6da341_FnDecl> _176417_f = (*(_175433_node))._field_Data.cast_ptr<_1ac6da341_FnDecl>(&__jule_any_type14);;
				if ((_176417_f == nullptr)) {
					return;;
				};
				_1ad21a128_applyFnMeta(_self_, &(_176417_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1bd7168bc:;
			{
				jule::Ptr<_1ac6e4449_StructDecl> _177017_sd = (*(_175433_node))._field_Data.cast_ptr<_1ac6e4449_StructDecl>(&__jule_any_type13);;
				if ((_177017_sd == nullptr)) {
					return;;
				};
				(*(_177017_sd))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1bd716746:;
	};
}



inline void _1ad21a689_pushUseDecl(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Ptr<_1ac6e1787_UseDecl>* _177936_decl) {
	{ jule::Slice<jule::Ptr<_1ac6e1787_UseDecl>> &__jule_push_dest = (*((*(_self_))._field_ast))._field_UseDecls; __jule_push_dest.push((*(_177936_decl))); };
	if (((*((*(_self_))._field_ast))._field_Nodes.len() > 0LL)) {
		_1ad20c093_pushErr(_self_.ptr(), (*((*(_177936_decl))))._field_Token, jule::Str::lit("use declarations must declared top of source code", 49), jule::Slice<jule::Any>());
		_1ad20c406_pushSuggestion(_self_.ptr(), jule::Str::lit("move this use declaration to top of source file", 47), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1ad21a9ca_pushMetaNodes(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _178738_tokens) {
	{
		auto &_match_expr{ (*((*(_178738_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1bd71cab0:;
			{
				;
				jule::Ptr<_1ac6e1787_UseDecl> _179117_decl = _1ad214c16_buildUseDecl(_self_.ptr(), (*(_178738_tokens)), false);;
				_1ad21a689_pushUseDecl(_self_, &(_179117_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1bd71cb37:;
			{
				if ((((*(_178738_tokens)).len() > 1LL) && ((*((*(_178738_tokens))[1LL]))._field_Id == static_cast<jule::U64>(16LLU)))) {
					jule::Ptr<_1ac6e1787_UseDecl> _179621_decl = _1ad218be8_buildBindUse(_self_, (*(_178738_tokens)));;
					_1ad21a689_pushUseDecl(_self_, &(_179621_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1bd71cbae:;
			{
				_1ad20cd41_pushDirective(_self_.ptr(), _1ad20ca88_buildDirective(_self_.ptr(), (*(_178738_tokens))));
				return true;;
			}
		}
		_match_end_1bd71c98e:;
	};
	return false;;
}



inline _1ac6c7680_Node _1ad21ad1b_parseNode(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _180734_st) {
	_1ac6c7680_Node _180813_node = _1ac6c7680_Node{._field_Token=(*(_180734_st))[0LL], };;
	if (_1ad21a9ca_pushMetaNodes(_self_, _180734_st)) {
		return _180813_node;;
	};
	jule::Any _181613_data = _1ad219d70_buildNodeData(_self_, _180734_st);;
	if ((_181613_data == nullptr)) {
		return _180813_node;;
	};
	_180813_node._field_Data=_181613_data;
	_1ad21a3d1_applyMeta(_self_.ptr(), &(_180813_node));
	if (((*(_self_))._field_directives.len() != 0LL)) {
		_1ad20c093_pushErr(_self_.ptr(), (*((*(_self_))._field_directives[0LL]))._field_Tag, jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
	(*(_self_))._field_directives=nullptr;
	return _180813_node;;
}



inline void _1ad21b0c4_appendNode(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _183135_st) {
	if (((*(_183135_st)).len() == 0LL)) {
		return;;
	};
	_1ac6c7680_Node _183513_node = _1ad21ad1b_parseNode(_self_, _183135_st);;
	if (((_183513_node._field_Data == nullptr) || _1ad20bb75_stopped(_self_.ptr()))) {
		return;;
	};
	{ jule::Slice<_1ac6c7680_Node> &__jule_push_dest = (*((*(_self_))._field_ast))._field_Nodes; __jule_push_dest.push(_183513_node); };
}



inline void _1ad21b59c_removeRange(_1ad20b5e2_parser* _self_, jule::I64 _184230_i, jule::U64 _184238_id, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _184252_tokens, jule::Slice<jule::I64>* _184275_ranges) {
	jule::U64 _18439_close = _1ad20a7cd_getCloseOfBrace(_184238_id);;
	for (; (_184230_i >= 0LL); (_184230_i)--) {
		{
			jule::Ptr<_1ac6b2e62_Token> _184513_tok = (*(_184252_tokens))[(*(_184275_ranges))[_184230_i]];;
			if (((*(_184513_tok))._field_Id != _18439_close)) {
				goto _iter_next_1bd727a98;
			};
			(*(_184275_ranges))=jule::append((*(_184275_ranges)).slice(0LL, _184230_i),(*(_184275_ranges)).slice((_184230_i + 1LL)));
			goto _iter_end_1bd727a98;
		}
	_iter_next_1bd727a98:;
	}
	_iter_end_1bd727a98:;;
}



inline void _1ad21b9ba_pushWrongOrderCloseErr(_1ad20b5e2_parser* _self_, jule::Ptr<_1ac6b2e62_Token>* _185442_t, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _185454_tokens, jule::Slice<jule::I64>* _185473_ranges) {
	{
		auto &_match_expr{ (*((*(_185454_tokens))[(*(_185473_ranges))[((*(_185473_ranges)).len() - 1LL)]]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(74LLU)) {
			_case_begin_1bd72a0c8:;
			{
				_1ad20c093_pushErr(_self_, (*(_185442_t)), jule::Str::lit("was expected parentheses close", 30), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1bd72a150:;
			{
				_1ad20c093_pushErr(_self_, (*(_185442_t)), jule::Str::lit("was expected brace close", 24), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1bd72a1c7:;
			{
				_1ad20c093_pushErr(_self_, (*(_185442_t)), jule::Str::lit("was expected bracket close", 26), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bd729ea7:;
	};
}



inline void _1ad21be93_pushRangeClose(_1ad20b5e2_parser* _self_, jule::Ptr<_1ac6b2e62_Token> _186533_t, jule::U64 _186544_left, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _186560_tokens, jule::Slice<jule::I64>* _186583_ranges) {
	jule::I64 _18669_n = (*(_186583_ranges)).len();;
	if ((_18669_n == 0LL)) {
		{
			auto &_match_expr{ (*(_186533_t))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(77LLU)) {
				_case_begin_1bd72cbe1:;
				{
					_1ad20c093_pushErr(_self_, _186533_t, jule::Str::lit("extra closed brackets", 21), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(73LLU)) {
				_case_begin_1bd72cc68:;
				{
					_1ad20c093_pushErr(_self_, _186533_t, jule::Str::lit("extra closed braces", 19), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(75LLU)) {
				_case_begin_1bd72cce0:;
				{
					_1ad20c093_pushErr(_self_, _186533_t, jule::Str::lit("extra closed parentheses", 24), jule::Slice<jule::Any>());
				}
			}
			_match_end_1bd72cb14:;
		};
		return;;
	} else if (((*((*(_186560_tokens))[(*(_186583_ranges))[(_18669_n - 1LL)]]))._field_Id != _186544_left)) {
		_1ad21b9ba_pushWrongOrderCloseErr(_self_, &(_186533_t), _186560_tokens, _186583_ranges);
	};
	_1ad21b59c_removeRange(_self_, static_cast<jule::I64>((_18669_n - 1LL)), (*(_186533_t))._field_Id, _186560_tokens, _186583_ranges);
}



inline void _1ad21c24b_checkRanges(_1ad20b5e2_parser* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _188331_tokens) {
	jule::Slice<jule::I64> _188417_ranges = nullptr;;
	{
		auto expr = _188331_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd730d37:;
		if (it != expr_end) {
			jule::I64 _188613_i = it - expr->begin();
			jule::Ptr<_1ac6b2e62_Token> *_188616_token = it;
			{
				{
					auto &_match_expr{ (*((*(_188616_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1bd731b4b:;
						{
							{ jule::Slice<jule::I64> &__jule_push_dest = _188417_ranges; __jule_push_dest.push(_188613_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1bd731bc3:;
						{
							_1ad21be93_pushRangeClose(_self_, (*(_188616_token)), static_cast<jule::U64>(74LLU), _188331_tokens, &(_188417_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU)) {
						_case_begin_1bd731c4a:;
						{
							_1ad21be93_pushRangeClose(_self_, (*(_188616_token)), static_cast<jule::U64>(72LLU), _188331_tokens, &(_188417_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1bd731cc2:;
						{
							_1ad21be93_pushRangeClose(_self_, (*(_188616_token)), static_cast<jule::U64>(76LLU), _188331_tokens, &(_188417_ranges));
						}
					}
					_match_end_1bd731a5d:;
				};
			}
			_iter_next_1bd730d37:;
			++it;
			_188613_i++;
			goto _iter_begin_1bd730d37;
		}
		_iter_end_1bd730d37:;
	};
	{
		auto expr = &(_188417_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd730cc1:;
		if (it != expr_end) {
			jule::I64 _190116_i = *it;
			{
				jule::Ptr<_1ac6b2e62_Token> _190213_token = (*(_188331_tokens))[_190116_i];;
				{
					auto &_match_expr{ (*(_190213_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1bd7347db:;
						{
							_1ad20c093_pushErr(_self_, _190213_token, jule::Str::lit("parentheses waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1bd734863:;
						{
							_1ad20c093_pushErr(_self_, _190213_token, jule::Str::lit("brace waiting to close", 22), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1bd7348da:;
						{
							_1ad20c093_pushErr(_self_, _190213_token, jule::Str::lit("bracket are waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					_match_end_1bd734764:;
				};
			}
			_iter_next_1bd730cc1:;
			++it;
			goto _iter_begin_1bd730cc1;
		}
		_iter_end_1bd730cc1:;
	};
}



inline void _1ad21c504_parse(jule::Ptr<_1ad20b5e2_parser> _self_, jule::Ptr<_1ac6b872b_File>* _191430_f) {
	(*(_self_))._field_ast=jule::new_ptr<_1ac6c67a0_Ast>(_1ac6c67a0_Ast{._field_File=(*(_191430_f)), });
	(*(_self_))._field_ep=jule::new_ptr<_1ad1eac52_exprBuilder>(_1ad1eac52_exprBuilder{._field_p=_self_});
	_1ad21c24b_checkRanges(_self_.ptr(), &((*((*(_191430_f))))._field_Tokens));
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1ad1dc98b_stmt>> _192713_stmts = _1ad1dcd43_splitStmts(&((*((*(_191430_f))))._field_Tokens));;
	jule::I64 _193013_i = 0LL;;
	for (; (_193013_i < _192713_stmts.len()); (_193013_i)++) {
		{
			jule::Ptr<_1ad1dc98b_stmt> _193217_stmt = _192713_stmts[_193013_i];;
			if (((*(_193217_stmt))._field_tokens.len() < 2LL)) {
				return;;
			};
			if (((*((*(_193217_stmt))._field_tokens[0LL]))._field_Id != static_cast<jule::U64>(35LLU))) {
				goto _iter_end_1bd73d053;
			};
			if ((!(_1a75703a7_IsTopDirective((*((*(_193217_stmt))._field_tokens[1LL]))._field_Kind)))) {
				goto _iter_end_1bd73d053;
			};
			{ jule::Slice<jule::Ptr<_1ac6c7a9d_Directive>> &__jule_push_dest = (*((*(_self_))._field_ast))._field_TopDirectives; __jule_push_dest.push(_1ad20ca88_buildDirective(_self_.ptr(), (*(_193217_stmt))._field_tokens)); };
		}
	_iter_next_1bd73d053:;
	}
	_iter_end_1bd73d053:;;
	(*(_self_))._field_errors=nullptr;
	for (; (_193013_i < _192713_stmts.len()); (_193013_i)++) {
		{
			jule::Ptr<_1ad1dc98b_stmt> _194917_stmt = _192713_stmts[_193013_i];;
			_1ad21b0c4_appendNode(_self_, &((*(_194917_stmt))._field_tokens));
			if (_1ad20bb75_stopped(_self_.ptr())) {
				goto _iter_end_1bd740a06;
			};
		}
	_iter_next_1bd740a06:;
	}
	_iter_end_1bd740a06:;;
	if (((*(_self_))._field_directives.len() != 0LL)) {
		_1ad20c093_pushErr(_self_.ptr(), (*((*(_self_))._field_directives[0LL]))._field_Tag, jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ad20b5e2_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ep:" << _Src._field_ep;
	_Stream << "}";
	return _Stream;
}



inline void _1ad21dd63_pushErr(_1ad21d7be_typeBuilder* _self_, jule::Ptr<_1ac6b2e62_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*(_self_))._field_err) {
		_1ad20c093_pushErr((*(_self_))._field_p.ptr(), _4126_token, _4141_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1ad21e1c6_pushSuggestion(_1ad21d7be_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*(_self_))._field_err) {
		_1ad20c406_pushSuggestion((*(_self_))._field_p.ptr(), _4833_fmt, _4846_args);
	};
}



inline jule::Ptr<_1ac6c8681_TypeDecl> _1ad21e45c_buildNamespace(_1ad21d7be_typeBuilder* _self_) {
	jule::Ptr<_1ac6c8681_TypeDecl> _5513_t = jule::new_ptr<_1ac6c8681_TypeDecl>(_1ac6c8681_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], });;
	jule::Ptr<_1ac6c942e_NamespaceTypeDecl> _5913_nst = jule::new_ptr<_1ac6c942e_NamespaceTypeDecl>();;
	jule::I64 _6013_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1ac6b2e62_Token> _6217_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_6013_n & 1LL) == 0LL)) {
				if (((*(_6217_token))._field_Id != static_cast<jule::U64>(1LLU))) {
					_1ad21dd63_pushErr(_self_, _6217_token, jule::Str::lit("invalid syntax", 14));
					_1ad21e1c6_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1ac6b2e62_Token>> &__jule_push_dest = (*(_5913_nst))._field_Idents; __jule_push_dest.push(_6217_token); };
			} else if (((*(_6217_token))._field_Id != static_cast<jule::U64>(19LLU))) {
				goto _iter_end_1bd746dd6;
			};
			(_6013_n)++;
		}
	_iter_next_1bd746dd6:;
	}
	_iter_end_1bd746dd6:;;
	(*(_5913_nst))._field_Idents=(*(_5913_nst))._field_Idents.slice(0LL, ((*(_5913_nst))._field_Idents.len() - 1LL));
	((*((*(_self_))._field_i)))--;
	(*(_5913_nst))._field_Kind=_1ad21ec10_buildIdent(_self_);
	(*(_5513_t))._field_Kind=jule::Any(_5913_nst, &__jule_any_type90);
	return _5513_t;;
}



inline jule::Slice<jule::Ptr<_1ac6c8681_TypeDecl>> _1ad21e6e3_buildGenerics(_1ad21d7be_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1ac6b2e62_Token> _889_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((*(_889_token))._field_Id != static_cast<jule::U64>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>> _9313_parts = _1ad21e979_identGenerics(_self_);;
	if ((_9313_parts.len() == 0LL)) {
		_1ad21dd63_pushErr(_self_, _889_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ac6c8681_TypeDecl>> _9913_types = jule::Slice<jule::Ptr<_1ac6c8681_TypeDecl>>::alloc(0LL, _9313_parts.len());;
	{
		auto expr = &(_9313_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd74d96a:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _10021_part = *it;
			{
				jule::I64 _10117_j = 0LL;;
				jule::Ptr<_1ac6c8681_TypeDecl> _10217_t;;
				({
					__jule_tuple_x_1ac6c8681_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad20db99_buildType((*(_self_))._field_p, &(_10021_part), (&(_10117_j)), true);
					_10217_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_10117_j < _10021_part.len())) {
					_1ad21dd63_pushErr(_self_, _10021_part[_10117_j], jule::Str::lit("invalid syntax", 14));
				};
				{ jule::Slice<jule::Ptr<_1ac6c8681_TypeDecl>> &__jule_push_dest = _9913_types; __jule_push_dest.push(_10217_t); };
			}
			_iter_next_1bd74d96a:;
			++it;
			goto _iter_begin_1bd74d96a;
		}
		_iter_end_1bd74d96a:;
	};
	return _9913_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>> _1ad21e979_identGenerics(_1ad21d7be_typeBuilder* _self_) {
	jule::I64 _1129_first = (*((*(_self_))._field_i));;
	jule::I64 _11313_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1ac6b2e62_Token> _11513_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ (*(_11513_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(76LLU)) {
					_case_begin_1bd752ed0:;
					{
						(_11313_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_1bd753057:;
					{
						(_11313_rangeN)--;
					}
				}
				_match_end_1bd752e69:;
			};
			if ((_11313_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1bd751ee0;
			};
		}
	_iter_next_1bd751ee0:;
	}
	_iter_end_1bd751ee0:;;
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _12713_tokens = (*(_self_))._field_tokens.slice((_1129_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>> _12813_parts;;
	jule::Slice<_1a756d63b_Log> _12820_errors;;
	({
		__jule_tuple_ssx_1ac6b2e62_Token__jule_tuple_s_1a756d63b_Log __jule_assign_result = _1ad20a514_parts(&(_12713_tokens), static_cast<jule::U64>(5LLU), true);
		_12813_parts = __jule_assign_result.__jule_result_arg0;
		_12820_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		((*((*(_self_))._field_p))._field_errors).append(_12820_errors);;
	};
	return _12813_parts;;
}



inline jule::Ptr<_1ac6c8681_TypeDecl> _1ad21ec10_buildIdent(_1ad21d7be_typeBuilder* _self_) {
	jule::Bool _13613_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_13613_next && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return _1ad21e45c_buildNamespace(_self_);;
	};
	jule::Ptr<_1ac6b2e62_Token> _14013_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1ac6c8c8b_IdentTypeDecl> _14113_it = jule::new_ptr<_1ac6c8c8b_IdentTypeDecl>(_1ac6c8c8b_IdentTypeDecl{._field_Token=_14013_token, ._field_Ident=(*(_14013_token))._field_Kind, ._field_Binded=false, });;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1ac6c8681_TypeDecl> _14713_itd = jule::new_ptr<_1ac6c8681_TypeDecl>(_1ac6c8681_TypeDecl{._field_Token=_14013_token, ._field_Kind=jule::Any(_14113_it, &__jule_any_type20)});;
	if (((!(_13613_next)) || ((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		(*(_14113_it))._field_Generics=_1ad21e6e3_buildGenerics(_self_);
		return _14713_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1ad21dd63_pushErr(_self_, _14013_token, jule::Str::lit("invalid syntax", 14));
		return _14713_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1ad21dd63_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("invalid syntax", 14));
		return _14713_itd;;
	};
	jule::Ptr<_1ac6c9088_SubIdentTypeDecl> _16413_sit = jule::new_ptr<_1ac6c9088_SubIdentTypeDecl>();;
	{ jule::Slice<jule::Ptr<_1ac6c8c8b_IdentTypeDecl>> &__jule_push_dest = (*(_16413_sit))._field_Idents; __jule_push_dest.push(_14113_it); };
	jule::Ptr<_1ac6c8681_TypeDecl> _16613_ident = _1ad21ec10_buildIdent(_self_);;
	{
		auto &_match_expr{ (*(_16613_ident))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1bd75d727:;
			{
				{ jule::Slice<jule::Ptr<_1ac6c8c8b_IdentTypeDecl>> &__jule_push_dest = (*(_16413_sit))._field_Idents; __jule_push_dest.push((*(_16613_ident))._field_Kind.cast_ptr<_1ac6c8c8b_IdentTypeDecl>(&__jule_any_type20)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1bd75d79e:;
			{
				((*(_16413_sit))._field_Idents).append((*((*(_16613_ident))._field_Kind.cast_ptr<_1ac6c9088_SubIdentTypeDecl>(&__jule_any_type86)))._field_Idents);;
			}
		}
		_match_end_1bd75d6b1:;
	};
	return jule::new_ptr<_1ac6c8681_TypeDecl>(_1ac6c8681_TypeDecl{._field_Token=_14013_token, ._field_Kind=jule::Any(_16413_sit, &__jule_any_type86)});;
}



inline jule::Ptr<_1ac6c8681_TypeDecl> _1ad21ee96_buildCppLink(_1ad21d7be_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		_1ad21dd63_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1ac6c8681_TypeDecl> _18513_t = _1ad21ec10_buildIdent(_self_);;
	(*((*(_18513_t))._field_Kind.cast_ptr<_1ac6c8c8b_IdentTypeDecl>(&__jule_any_type20)))._field_Binded=true;
	return _18513_t;;
}



inline jule::Ptr<_1ac6c8681_TypeDecl> _1ad22022c_buildFn(_1ad21d7be_typeBuilder* _self_) {
	jule::Ptr<_1ac6b2e62_Token> _19113_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1ac6da341_FnDecl> _19213_f = _1ad212d35_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_19213_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ac6da6a4_IsAnon(_19213_f.ptr())))) {
		_1ad21dd63_pushErr(_self_, (*(_19213_f))._field_Token, jule::Str::lit("invalid syntax", 14));
	};
	return jule::new_ptr<_1ac6c8681_TypeDecl>(_1ac6c8681_TypeDecl{._field_Token=_19113_token, ._field_Kind=jule::Any(_19213_f, &__jule_any_type14)});;
}



inline jule::Ptr<_1ac6c8681_TypeDecl> _1ad2204b3_buildPtr(_1ad21d7be_typeBuilder* _self_) {
	jule::Ptr<_1ac6b2e62_Token> _20613_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1ad21dd63_pushErr(_self_, _20613_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id == static_cast<jule::U64>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1ac6c8681_TypeDecl>(_1ac6c8681_TypeDecl{._field_Token=_20613_token, ._field_Kind=jule::Any(jule::new_ptr<_1ac6ca1aa_PtrTypeDecl>(_1ac6ca1aa_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type71)});;
	};
	jule::Ptr<_1ac6c8681_TypeDecl> _22313_elem = _1ad221519_step(_self_);;
	if ((_22313_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ac6c8681_TypeDecl>(_1ac6c8681_TypeDecl{._field_Token=_20613_token, ._field_Kind=jule::Any(jule::new_ptr<_1ac6ca1aa_PtrTypeDecl>(_1ac6ca1aa_PtrTypeDecl{._field_Elem=_22313_elem}), &__jule_any_type71)});;
}



inline jule::Ptr<_1ac6c8681_TypeDecl> _1ad220749_buildSptr(_1ad21d7be_typeBuilder* _self_) {
	jule::Ptr<_1ac6b2e62_Token> _23713_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1ad21dd63_pushErr(_self_, _23713_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1ac6c8681_TypeDecl> _24413_elem = _1ad221519_step(_self_);;
	if ((_24413_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ac6c8681_TypeDecl>(_1ac6c8681_TypeDecl{._field_Token=_23713_token, ._field_Kind=jule::Any(jule::new_ptr<_1ac6c972b_SptrTypeDecl>(_1ac6c972b_SptrTypeDecl{._field_Elem=_24413_elem}), &__jule_any_type72)});;
}



inline jule::Ptr<_1ac6c8681_TypeDecl> _1ad2209d0_buildSlc(_1ad21d7be_typeBuilder* _self_) {
	jule::Ptr<_1ac6b2e62_Token> _25813_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1ac6c8681_TypeDecl> _26013_elem = _1ad221519_step(_self_);;
	if ((_26013_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ac6c8681_TypeDecl>(_1ac6c8681_TypeDecl{._field_Token=_25813_token, ._field_Kind=jule::Any(jule::new_ptr<_1ac6c9ab1_SlcTypeDecl>(_1ac6c9ab1_SlcTypeDecl{._field_Elem=_26013_elem}), &__jule_any_type70)});;
}



inline jule::Ptr<_1ac6c8681_TypeDecl> _1ad220c66_buildArr(_1ad21d7be_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _27313_exprTokens = _1ad209c94_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1ad21dd63_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1ac6c8681_TypeDecl> _27913_elem = _1ad221519_step(_self_);;
	if ((_27913_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ac6ca94c_ArrTypeDecl> _28413_arrt = jule::new_ptr<_1ac6ca94c_ArrTypeDecl>(_1ac6ca94c_ArrTypeDecl{._field_Elem=_27913_elem, });;
	jule::Ptr<_1ac6b2e62_Token> _28813_token = _27313_exprTokens[0LL];;
	if (((_27313_exprTokens.len() == 1LL) && ((*(_28813_token))._field_Id == static_cast<jule::U64>(39LLU)))) {
	} else {
		(*(_28413_arrt))._field_Size=_1ad20c747_buildExpr((*(_self_))._field_p, &(_27313_exprTokens));
	};
	return jule::new_ptr<_1ac6c8681_TypeDecl>(_1ac6c8681_TypeDecl{._field_Token=_28813_token, ._field_Kind=jule::Any(_28413_arrt, &__jule_any_type69)});;
}



inline jule::Ptr<_1ac6c8681_TypeDecl> _1ad220eec_buildMap(_1ad21d7be_typeBuilder* _self_) {
	jule::Ptr<_1ac6b2e62_Token> _30213_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1ad21dd63_pushErr(_self_, _30213_mapToken, jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _31013_keyTokens = _1ad209c94_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1ad21dd63_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("type missing", 12));
		return nullptr;;
	} else if ((_31013_keyTokens.len() == 0LL)) {
		_1ad21dd63_pushErr(_self_, _30213_mapToken, jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1ac6cb19a_MapTypeDecl> _31913_mapt = jule::new_ptr<_1ac6cb19a_MapTypeDecl>();;
	jule::I64 _32013_j = 0LL;;
	jule::Ptr<_1ac6c8681_TypeDecl> _32113_keyt;;
	jule::Bool _32123_ok = false;;
	({
		__jule_tuple_x_1ac6c8681_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad20db99_buildType((*(_self_))._field_p, &(_31013_keyTokens), (&(_32013_j)), (*(_self_))._field_err);
		_32113_keyt = __jule_assign_result.__jule_result_arg0;
		_32123_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32123_ok))) {
		return nullptr;;
	} else if ((_32013_j < _31013_keyTokens.len())) {
		_1ad21dd63_pushErr(_self_, _31013_keyTokens[_32013_j], jule::Str::lit("invalid syntax", 14));
	};
	(*(_31913_mapt))._field_Key=_32113_keyt;
	jule::Ptr<_1ac6c8681_TypeDecl> _32913_valt;;
	({
		__jule_tuple_x_1ac6c8681_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad20db99_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_32913_valt = __jule_assign_result.__jule_result_arg0;
		_32123_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32123_ok))) {
		return nullptr;;
	};
	(*(_31913_mapt))._field_Val=_32913_valt;
	return jule::new_ptr<_1ac6c8681_TypeDecl>(_1ac6c8681_TypeDecl{._field_Token=_30213_mapToken, ._field_Kind=jule::Any(_31913_mapt, &__jule_any_type73)});;
}



inline jule::Ptr<_1ac6c8681_TypeDecl> _1ad221283_buildEnumerable(_1ad21d7be_typeBuilder* _self_) {
	jule::Ptr<_1ac6b2e62_Token> _34113_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_1ad21dd63_pushErr(_self_, _34113_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_34113_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((*(_34113_token))._field_Id == static_cast<jule::U64>(77LLU))) {
		return _1ad2209d0_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1ad220c66_buildArr(_self_);;
}



inline jule::Ptr<_1ac6c8681_TypeDecl> _1ad221519_step(_1ad21d7be_typeBuilder* _self_) {
	jule::Ptr<_1ac6b2e62_Token> _3569_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ (*(_3569_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1bd77d4e4:;
			{
				return _1ad21ec10_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1bd77c47c:;
			{
				return _1ad21ee96_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1bd77d615:;
			{
				return _1ad22022c_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1bd77ccc9:;
			{
				return _1ad2204b3_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1bd77cd40:;
			{
				return _1ad220749_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1bd77cda6:;
			{
				return jule::new_ptr<_1ac6c8681_TypeDecl>(_1ac6c8681_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1ac6c972b_SptrTypeDecl>(_1ac6c972b_SptrTypeDecl{._field_Elem=_1ad220749_buildSptr(_self_)}), &__jule_any_type72)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1bd77ce1c:;
			{
				return _1ad221283_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1bd77d8ac:;
			{
				return _1ad220eec_buildMap(_self_);;
			}
		}
		else {
			_case_begin_1bd77cc63:;
			{
				((*((*(_self_))._field_i)))++;
				_1ad21dd63_pushErr(_self_, _3569_token, jule::Str::lit("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1bd77cc0d:;
	};
}



inline __jule_tuple_x_1ac6c8681_TypeDecl__jule_tuple_bool _1ad2217a0_build(_1ad21d7be_typeBuilder* _self_) {
	__jule_tuple_x_1ac6c8681_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1ac6c8681_TypeDecl> _38813_root = _1ad221519_step(_self_);;
	if ((_38813_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1ad21d00a_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _38813_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ad21d7be_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac9e8b49_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _1ac9ea673_pushErr(_1ac9ea123_directiveEval* _self_, jule::Ptr<_1ac6b2e62_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	{ jule::Slice<_1a756d63b_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_1a756d63b_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_2126_t))._field_Row, ._field_Column=(*(_2126_t))._field_Column, ._field_Path=(*((*(_2126_t))._field_File))._field_Path, ._field_Text=_1a756da9d_Logf(_2137_fmt, _2150_args), }); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>> _1ac9eaa6e_splitOperans(_1ac9ea123_directiveEval* _self_, jule::U64 _3331_op, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _3349_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>> _3413_parts = jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>>::alloc(0LL, 10LL);;
	jule::I64 _3513_i = 0LL;;
	jule::I64 _3613_rangeN = 0LL;;
	jule::I64 _3713_last = 0LL;;
	for (; (_3513_i < ((*(_3349_tokens)).len() - 1LL)); (_3513_i)++) {
		{
			jule::Ptr<_1ac6b2e62_Token> _3913_b = (*(_3349_tokens))[_3513_i];;
			{
				auto &_match_expr{ (*(_3913_b))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1bd7a2dba:;
					{
						(_3613_rangeN)++;
						goto _iter_next_1bd7a2161;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1bd7a2e42:;
					{
						(_3613_rangeN)--;
					}
				}
				_match_end_1bd7a2d54:;
			};
			if (((_3613_rangeN > 0LL) || ((*(_3913_b))._field_Id != _3331_op))) {
				goto _iter_next_1bd7a2161;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>> &__jule_push_dest = _3413_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3713_last, _3513_i)); };
			_3713_last=static_cast<jule::I64>((_3513_i + 1LL));
		}
	_iter_next_1bd7a2161:;
	}
	_iter_end_1bd7a2161:;;
	if ((_3713_last < (*(_3349_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>> &__jule_push_dest = _3413_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3713_last)); };
	} else {
		_1ac9ea673_pushErr(_self_, (*(_3349_tokens))[(_3713_last - 1LL)], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _3413_parts;;
}



inline jule::Bool _1ac9eadb0_evalDirectiveIdent(_1ac9ea123_directiveEval* _self_, jule::Str _6433_ident) {
	if ((_6433_ident).empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd7a58b2:;
		if (it != expr_end) {
			jule::Str *_6816_var = it;
			{
				if (((*(_6816_var)) == _6433_ident)) {
					return true;;
				};
			}
			_iter_next_1bd7a58b2:;
			++it;
			goto _iter_begin_1bd7a58b2;
		}
		_iter_end_1bd7a58b2:;
	};
	return false;;
}



inline jule::Bool _1ac9eb201_evalDirectivePart(_1ac9ea123_directiveEval* _self_, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _7840_part) {
	jule::Bool _799_logicalNot = ((*(_7840_part[0LL]))._field_Id == static_cast<jule::U64>(68LLU));;
	if (_799_logicalNot) {
		(_7840_part).mut_slice(1LL);;
	};
	if ((_7840_part.len() > 1LL)) {
		_1ac9ea673_pushErr(_self_, _7840_part[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _8913_result = _1ac9eadb0_evalDirectiveIdent(_self_, (*(_7840_part[0LL]))._field_Kind);;
	if (_799_logicalNot) {
		_8913_result=(!(_8913_result));
	};
	return _8913_result;;
}



inline jule::Bool _1ac9eb487_eval(_1ac9ea123_directiveEval* _self_) {
	if (((*((*(_self_))._field_d))._field_Args.len() == 0LL)) {
		_1ac9ea673_pushErr(_self_, (*((*(_self_))._field_d))._field_Tag, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _10213_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>> _10413_logicalOrParts = _1ac9eaa6e_splitOperans(_self_, static_cast<jule::U64>(55LLU), &((*((*(_self_))._field_d))._field_Args));;
	if ((_10413_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_10413_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd7ab027:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _10921_part = *it;
			{
				jule::Bool _11017_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>> _11117_logicalAndParts = _1ac9eaa6e_splitOperans(_self_, static_cast<jule::U64>(54LLU), &(_10921_part));;
				if ((_11117_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_11117_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd7ac820:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _11625_andPart = *it;
						{
							jule::Ptr<_1ac6b2e62_Token> _11717_first = _11625_andPart[0LL];;
							if (((*(_11717_first))._field_Id == static_cast<jule::U64>(74LLU))) {
								jule::Ptr<_1ac6b2e62_Token> _11921_end = _11625_andPart[(_11625_andPart.len() - 1LL)];;
								if (((*(_11921_end))._field_Id != static_cast<jule::U64>(75LLU))) {
									_1ac9ea673_pushErr(_self_, _11717_first, jule::Str::lit("parentheses waiting to close", 28), jule::Slice<jule::Any>());
									return false;;
								};
								(_11625_andPart).mut_slice(1LL, (_11625_andPart.len() - 1LL));;
							};
							_11017_and=(_11017_and && _1ac9eb201_evalDirectivePart(_self_, _11625_andPart));
						}
						_iter_next_1bd7ac820:;
						++it;
						goto _iter_begin_1bd7ac820;
					}
					_iter_end_1bd7ac820:;
				};
				_10213_result=(_10213_result || _11017_and);
			}
			_iter_next_1bd7ab027:;
			++it;
			goto _iter_begin_1bd7ab027;
		}
		_iter_end_1bd7ab027:;
	};
	return _10213_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac9ea123_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ad222905_JuleImporter> static__1ad222d01_New(_1ac9e8b49_CompileInfo _5819_info) {
	jule::Ptr<_1ad222905_JuleImporter> _5913_imp = jule::new_ptr<_1ad222905_JuleImporter>(_1ad222905_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_1a7637ccc_PathStdlib}), });;
	_1ac9e94c9_initVars(&((*(_5913_imp))._field_vars), &(_5819_info));
	return _5913_imp;;
}



inline jule::Slice<jule::Ptr<_1ac77790b_ImportInfo>> _1ad223087_AllPackages(_1ad222905_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1ad2234c7_SetModPath(_1ad222905_JuleImporter* _self_, jule::Str _7529_path) {
	(*(_self_))._field_mod=_7529_path;
}



inline jule::Str _1ad22375d_GetModPath(_1ad222905_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1ad223a9e_ModById(_1ad222905_JuleImporter* _self_, jule::I64 _8322_id) {
	return (*(_self_))._field_mods[_8322_id];;
}



inline jule::Ptr<_1ac77790b_ImportInfo> _1ad223de0_GetImport(_1ad222905_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd7b3eca:;
		if (it != expr_end) {
			jule::Ptr<_1ac77790b_ImportInfo> _8821_p = *it;
			{
				if (((*(_8821_p))._field_Path == _8728_path)) {
					return _8821_p;;
				};
			}
			_iter_next_1bd7b3eca:;
			++it;
			goto _iter_begin_1bd7b3eca;
		}
		_iter_end_1bd7b3eca:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1ac6c67a0_Ast__jule_tuple_s_1a756d63b_Log _1ad2242db_ImportPackage(_1ad222905_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	__jule_tuple_sx_1ac6c67a0_Ast__jule_tuple_s_1a756d63b_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1d9e50d54_DirEntry>> _9713_dirents = ({
		auto except = static__1a6945b46_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = jule::Slice<_1a756d63b_Log>::make({_1ad22241b_flatCompilerErr((jule::Str::lit("connot read package directory: ", 31) + _9632_path))});
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_1d9e50d54_DirEntry>>(nullptr);});
	});;
	if (_9643_update_mod) {
		jule::Str _10213_newMod = _1ac794230_FindModuleFileDeep(_9632_path);;
		if ((_10213_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_10213_newMod;
			jule::Slice<_1a756d63b_Log> _10521_errs = _1ac7944e9_CheckModuleFile(&((*(_self_))._field_mod));;
			if ((_10521_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _10521_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1ac6c67a0_Ast>> _11213_asts = jule::Slice<jule::Ptr<_1ac6c67a0_Ast>>::alloc(0LL, _9713_dirents.len());;
	{
		auto expr = &(_9713_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd7b5680:;
		if (it != expr_end) {
			jule::Ptr<_1d9e50d54_DirEntry> _11316_dirent = *it;
			{
				if ((_1d9e547e7_IsDir((*(_11316_dirent))._field_Stat.ptr()) || (!(_1a6939c7d_HasSuffix((*(_11316_dirent))._field_Name, jule::Str::lit(".jule", 5)))))) {
					goto _iter_next_1bd7b5680;
				};
				jule::Str _11913__path = _1a694455c_Join(jule::Slice<jule::Str>::make({_9632_path,(*(_11316_dirent))._field_Name}));;
				jule::Ptr<_1ac6b872b_File> _12017_file = _1ac6b9ac3_NewFileSet(_11913__path);;
				_1ac6b8b16_Fill(_12017_file.ptr(), _1ad222141_readBuff((*(_12017_file))._field_Path));
				jule::Slice<_1a756d63b_Log> _12217_errors = _1ac6c61d9_Lex(_12017_file, static_cast<jule::I64>(0LL));;
				if ((_12217_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12217_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1ad036351_FileInfo> _12717_finfo = _1ad1da69d_ParseFile(_12017_file);;
				if (((*(_12717_finfo))._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = (*(_12717_finfo))._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1ac9e7ce1_isPassFileAnnotation((*(_11316_dirent))._field_Name)))) {
					goto _iter_next_1bd7b5680;
				};
				jule::Bool _13713_r = false;;
				jule::Slice<_1a756d63b_Log> _13720_logs;;
				({
					__jule_tuple_bool__jule_tuple_s_1a756d63b_Log __jule_assign_result = _1ad2249c3_isPassBuildDirectives(_self_, &((*(_12717_finfo))._field_Ast));
					_13713_r = __jule_assign_result.__jule_result_arg0;
					_13720_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13720_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13720_logs;
					return __jule_func_result;;
				};
				if ((!(_13713_r))) {
					goto _iter_next_1bd7b5680;
				};
				{ jule::Slice<jule::Ptr<_1ac6c67a0_Ast>> &__jule_push_dest = _11213_asts; __jule_push_dest.push((*(_12717_finfo))._field_Ast); };
			}
			_iter_next_1bd7b5680:;
			++it;
			goto _iter_begin_1bd7b5680;
		}
		_iter_end_1bd7b5680:;
	};
	__jule_func_result.__jule_result_arg0 = _11213_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1ad224594_Imported(_1ad222905_JuleImporter* _self_, jule::Ptr<_1ac77790b_ImportInfo> _15331_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd7b8386:;
		if (it != expr_end) {
			jule::Ptr<_1ac77790b_ImportInfo> _15516_p = *it;
			{
				if ((((*(_15516_p))._field_Binded == (*(_15331_imp))._field_Binded) && ((*(_15516_p))._field_LinkPath == (*(_15331_imp))._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1bd7b8386:;
			++it;
			goto _iter_begin_1bd7b8386;
		}
		_iter_end_1bd7b8386:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd7c08dd:;
			if (it != expr_end) {
				jule::I64 _16217_i = it - expr->begin();
				jule::Str _16220_mod = *it;
				{
					if (((*(_self_))._field_mod == _16220_mod)) {
						(*(_15331_imp))._field_ModId=_16217_i;
						goto _julec_label_1bd7c22c4;
					};
				}
				_iter_next_1bd7c08dd:;
				++it;
				_16217_i++;
				goto _iter_begin_1bd7c08dd;
			}
			_iter_end_1bd7c08dd:;
		};
		(*(_15331_imp))._field_ModId=static_cast<jule::I64>((*(_self_))._field_mods.len());
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_1bd7c22c4:;
	};
	{ jule::Slice<jule::Ptr<_1ac77790b_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_15331_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_1a756d63b_Log _1ad2249c3_isPassBuildDirectives(_1ad222905_JuleImporter* _self_, jule::Ptr<_1ac6c67a0_Ast>* _17945_file) {
	__jule_tuple_bool__jule_tuple_s_1a756d63b_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*((*(_17945_file))))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd7c3a45:;
		if (it != expr_end) {
			jule::Ptr<_1ac6c7a9d_Directive> _18021_td = *it;
			{
				if ((!(*((*(_18021_td))._field_Tag))._field_Kind.equal("build", 5))) {
					goto _iter_next_1bd7c3a45;
				};
				_1ac9ea123_directiveEval _18417_de = _1ac9ea123_directiveEval{._field_d=_18021_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _18813_result = _1ac9eb487_eval(&_18417_de);;
				if ((_18417_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _18417_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_18813_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1bd7c3a45:;
			++it;
			goto _iter_begin_1bd7c3a45;
		}
		_iter_end_1bd7c3a45:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ad222905_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ad227b19_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1bd7e54d4_isCommonOrdered(jule::Slice<jule::Ptr<_1ac6ee377_Struct>> _1834_s, jule::Ptr<_1ac6ee377_Struct> _1842_t) {
	{
		auto expr = &((*(_1842_t))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd7e67b0:;
		if (it != expr_end) {
			jule::Ptr<_1ac6ee377_Struct> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd7e6eb9:;
					if (it != expr_end) {
						jule::Ptr<_1ac6ee377_Struct> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1bd7e6eb9:;
						++it;
						goto _iter_begin_1bd7e6eb9;
					}
					_iter_end_1bd7e6eb9:;
				};
			}
			_iter_next_1bd7e67b0:;
			++it;
			goto _iter_begin_1bd7e67b0;
		}
		_iter_end_1bd7e67b0:;
	};
	return true;;
}

inline jule::Bool _1bd7ea473_isCommonOrdered(jule::Slice<jule::Ptr<_1ac7bb015_Var>> _1834_s, jule::Ptr<_1ac7bb015_Var> _1842_t) {
	{
		auto expr = &((*(_1842_t))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd7eb70a:;
		if (it != expr_end) {
			jule::Ptr<_1ac7bb015_Var> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd7ebe14:;
					if (it != expr_end) {
						jule::Ptr<_1ac7bb015_Var> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1bd7ebe14:;
						++it;
						goto _iter_begin_1bd7ebe14;
					}
					_iter_end_1bd7ebe14:;
				};
			}
			_iter_next_1bd7eb70a:;
			++it;
			goto _iter_begin_1bd7eb70a;
		}
		_iter_end_1bd7eb70a:;
	};
	return true;;
}



inline void _1bd7e1b40_orderCommon(jule::Slice<jule::Ptr<_1ac6ee377_Struct>>* _3135_s) {
	jule::I64 _3213_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd7e312a:;
		if (it != expr_end) {
			{
				jule::Bool _3417_swapped = false;;
				jule::I64 _3517_k = 0LL;;
				for (; (_3517_k < _3213_n); (_3517_k)++) {
					{
						if ((!(_1bd7e54d4_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3517_k])))) {
							std::swap((*(_3135_s))[_3517_k], (*(_3135_s))[(_3517_k + 1LL)]);
							_3417_swapped=true;
						};
					}
				_iter_next_1bd7e3d51:;
				}
				_iter_end_1bd7e3d51:;;
				if ((!(_3417_swapped))) {
					goto _iter_end_1bd7e312a;
				};
				(_3213_n)--;
			}
			_iter_next_1bd7e312a:;
			++it;
			goto _iter_begin_1bd7e312a;
		}
		_iter_end_1bd7e312a:;
	};
}

inline void _1bd7e5d75_orderCommon(jule::Slice<jule::Ptr<_1ac7bb015_Var>>* _3135_s) {
	jule::I64 _3213_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd7e80b9:;
		if (it != expr_end) {
			{
				jule::Bool _3417_swapped = false;;
				jule::I64 _3517_k = 0LL;;
				for (; (_3517_k < _3213_n); (_3517_k)++) {
					{
						if ((!(_1bd7ea473_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3517_k])))) {
							std::swap((*(_3135_s))[_3517_k], (*(_3135_s))[(_3517_k + 1LL)]);
							_3417_swapped=true;
						};
					}
				_iter_next_1bd7e8ce0:;
				}
				_iter_end_1bd7e8ce0:;;
				if ((!(_3417_swapped))) {
					goto _iter_end_1bd7e80b9;
				};
				(_3213_n)--;
			}
			_iter_next_1bd7e80b9:;
			++it;
			goto _iter_begin_1bd7e80b9;
		}
		_iter_end_1bd7e80b9:;
	};
}



inline void static__1ad228774_orderStructures(jule::Slice<jule::Ptr<_1ac6ee377_Struct>>* _5136_structs) {
	_1bd7e1b40_orderCommon(_5136_structs);
}



inline void static__1ad2289a5_orderVars(jule::Slice<jule::Ptr<_1ac7bb015_Var>>* _5730_vars) {
	_1bd7e5d75_orderCommon(_5730_vars);
}





std::ostream &operator<<(std::ostream &_Stream, _1ad227d7d_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ad37d522_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1ad3b31c2_optimizeChild(jule::Ptr<_1ad3b2c1b_scopeDeadCode> _self_, jule::Ptr<_1ac756126_Scope>* _3938_s) {
	jule::Ptr<_1ad3b2c1b_scopeDeadCode> _4013_sdc = jule::new_ptr<_1ad3b2c1b_scopeDeadCode>(_1ad3b2c1b_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3938_s)), ._field_stmts=(&((*((*(_3938_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*(_self_))._field_gotos, });;
	{
		_1ad3b5adc_optimizeStmts(_4013_sdc);
	};
}



inline void _1ad3b347a_optimizeBodyChildExceptional(jule::Ptr<_1ad3b2c1b_scopeDeadCode> _self_, jule::Ptr<_1ac756126_Scope>* _5053_s) {
	jule::Ptr<_1ad3b2c1b_scopeDeadCode> _5113_sdc = jule::new_ptr<_1ad3b2c1b_scopeDeadCode>(_1ad3b2c1b_scopeDeadCode{._field_s=(*(_5053_s)), ._field_stmts=(&((*((*(_5053_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*(_self_))._field_gotos, ._field_except=true});;
	{
		_1ad3b5adc_optimizeStmts(_5113_sdc);
	};
}



inline void _1ad3b3733_optimizeBodyChild(jule::Ptr<_1ad3b2c1b_scopeDeadCode> _self_, jule::Ptr<_1ac756126_Scope>* _6142_s) {
	jule::Ptr<_1ad3b2c1b_scopeDeadCode> _6213_sdc = jule::new_ptr<_1ad3b2c1b_scopeDeadCode>(_1ad3b2c1b_scopeDeadCode{._field_s=(*(_6142_s)), ._field_stmts=(&((*((*(_6142_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*(_self_))._field_gotos, });;
	{
		_1ad3b5adc_optimizeStmts(_6213_sdc);
	};
}



inline void _1ad3b39db_optimizeExprModel(jule::Ptr<_1ad3b2c1b_scopeDeadCode> _self_, jule::Any* _7142_model) {
	_1ad3b6e73_exprDeadCode _729_edc = static__1ad3b75b1_new(&(_self_));;
	_1ad3bd4da_optimize(&_729_edc, _7142_model);
}



inline void _1ad3b3bd9_eliminateFollowed(_1ad3b2c1b_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		(*((*(_self_))._field_stmts))=(*((*(_self_))._field_stmts)).slice(0LL, ((*(_self_))._field_i + 1LL));
	};
	jule::Ptr<_1ad3b2c1b_scopeDeadCode> _8313_parent = (*(_self_))._field_parent;;
	while ((_8313_parent != nullptr)) {
		{
			{
				(*((*(_8313_parent))._field_stmts))=(*((*(_8313_parent))._field_stmts)).slice(0LL, ((*(_8313_parent))._field_i + 1LL));
			};
			_8313_parent=(*(_8313_parent))._field_parent;
		}
	_iter_next_1bba4e685:;
	}
	_iter_end_1bba4e685:;;
}



inline void _1ad3b3e92_pushGoto(jule::Ptr<_1ad3b2c1b_scopeDeadCode> _self_, jule::Ptr<_1ac758d93_GotoSt> _9232_gt) {
	jule::I64 _9313_i = 0LL;;
	for (; (_9313_i < (*((*(_self_))._field_labels)).len()); (_9313_i)++) {
		{
			if (((*(_9232_gt))._field_Ident == (*((*((*(_self_))._field_labels))[_9313_i]))._field_Ident)) {
				return;;
			};
		}
	_iter_next_1bba52622:;
	}
	_iter_end_1bba52622:;;
	{ jule::Slice<jule::Ptr<_1ac758d93_GotoSt>> &__jule_push_dest = (*((*(_self_))._field_gotos)); __jule_push_dest.push(_9232_gt); };
}



inline void _1ad3b424a_pushLabel(jule::Ptr<_1ad3b2c1b_scopeDeadCode> _self_, jule::Ptr<_1ac7589b9_Label> _10233_l) {
	jule::I64 _10313_i = 0LL;;
	while ((_10313_i < (*((*(_self_))._field_gotos)).len())) {
		{
			if (((*(_10233_l))._field_Ident == (*((*((*(_self_))._field_gotos))[_10313_i]))._field_Ident)) {
				jule::copy(((*((*(_self_))._field_gotos)).slice(_10313_i)), ((*((*(_self_))._field_gotos)).slice((_10313_i + 1LL))));
				(*((*(_self_))._field_gotos))=(*((*(_self_))._field_gotos)).slice(0LL, ((*((*(_self_))._field_gotos)).len() - 1LL));
				goto _iter_next_1bd861462;
			};
			(_10313_i)++;
		}
	_iter_next_1bd861462:;
	}
	_iter_end_1bd861462:;;
	{ jule::Slice<jule::Ptr<_1ac7589b9_Label>> &__jule_push_dest = (*((*(_self_))._field_labels)); __jule_push_dest.push(_10233_l); };
}



inline void _1ad3b4503_optimizeRangeIter(jule::Ptr<_1ad3b2c1b_scopeDeadCode> _self_, jule::Ptr<_1ac757e5d_RangeIter> _11541_it) {
	_1ad3b39db_optimizeExprModel(_self_, &((*((*(_11541_it))._field_Expr))._field_Model));
	_1ad3b3733_optimizeBodyChild(_self_, &((*(_11541_it))._field_Scope));
}



inline void _1ad3b47ab_optimizeWhileIter(jule::Ptr<_1ad3b2c1b_scopeDeadCode> _self_, jule::Ptr<_1ac757512_WhileIter> _12041_it) {
	_1ad3b39db_optimizeExprModel(_self_, &((*(_12041_it))._field_Expr));
	if (((*(_12041_it))._field_Next != nullptr)) {
		_1ad3b58de_optimizeStmt(_self_, (*(_12041_it))._field_Next);
	};
	_1ad3b3733_optimizeBodyChild(_self_, &((*(_12041_it))._field_Scope));
}



inline void _1ad3b4a64_optimizeInfIter(jule::Ptr<_1ad3b2c1b_scopeDeadCode> _self_, jule::Ptr<_1ac75705b_InfIter> _12839_it) {
	_1ad3b3733_optimizeBodyChild(_self_, &((*(_12839_it))._field_Scope));
}



inline void _1ad3b4d1c_optimizeConditional(jule::Ptr<_1ad3b2c1b_scopeDeadCode> _self_, jule::Ptr<_1ac756c5e_Conditional> _13243_c) {
	{
		auto expr = &((*(_13243_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd868315:;
		if (it != expr_end) {
			jule::Ptr<_1ac756544_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_1ad3b39db_optimizeExprModel(_self_, &((*(_13321_case))._field_Expr));
					_1ad3b3733_optimizeBodyChild(_self_, &((*(_13321_case))._field_Scope));
				};
			}
			_iter_next_1bd868315:;
			++it;
			goto _iter_begin_1bd868315;
		}
		_iter_end_1bd868315:;
	};
	if (((*(_13243_c))._field_Default != nullptr)) {
		if (((*(_13243_c))._field_Elifs.len() == 0LL)) {
			_1ad3b31c2_optimizeChild(_self_, &((*((*(_13243_c))._field_Default))._field_Scope));
		} else {
			_1ad3b3733_optimizeBodyChild(_self_, &((*((*(_13243_c))._field_Default))._field_Scope));
		};
	};
}



inline void _1ad3b50c5_optimizeMatch(jule::Ptr<_1ad3b2c1b_scopeDeadCode> _self_, jule::Ptr<_1ac75a25c_Match> _15037_m) {
	{
		auto expr = &((*(_15037_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd86b879:;
		if (it != expr_end) {
			jule::Ptr<_1ac75ad95_Case> _15121_case = *it;
			{
				{
					auto expr = &((*(_15121_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd86c2c5:;
					if (it != expr_end) {
						jule::Ptr<_1ac8243ae_Data> _15225_expr = *it;
						{
							_1ad3b39db_optimizeExprModel(_self_, &((*(_15225_expr))._field_Model));
						}
						_iter_next_1bd86c2c5:;
						++it;
						goto _iter_begin_1bd86c2c5;
					}
					_iter_end_1bd86c2c5:;
				};
				_1ad3b3733_optimizeBodyChild(_self_, &((*(_15121_case))._field_Scope));
			}
			_iter_next_1bd86b879:;
			++it;
			goto _iter_begin_1bd86b879;
		}
		_iter_end_1bd86b879:;
	};
	if (((*(_15037_m))._field_Default != nullptr)) {
		if (((*(_15037_m))._field_Cases.len() == 0LL)) {
			_1ad3b31c2_optimizeChild(_self_, &((*((*(_15037_m))._field_Default))._field_Scope));
		} else {
			_1ad3b3733_optimizeBodyChild(_self_, &((*((*(_15037_m))._field_Default))._field_Scope));
		};
	};
}



inline void _1ad3b537d_optimizeAssign(jule::Ptr<_1ad3b2c1b_scopeDeadCode> _self_, jule::Ptr<_1ac759723_Assign> _16838_assign) {
	_1ad3b39db_optimizeExprModel(_self_, &((*((*(_16838_assign))._field_L))._field_Model));
	_1ad3b39db_optimizeExprModel(_self_, &((*((*(_16838_assign))._field_R))._field_Model));
}



inline void _1ad3b5636_optimizeMultiAssign(jule::Ptr<_1ad3b2c1b_scopeDeadCode> _self_, jule::Ptr<_1ac759aec_MultiAssign> _17343_assign) {
	{
		auto expr = &((*(_17343_assign))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bba56a88:;
		if (it != expr_end) {
			jule::Ptr<_1ac8243ae_Data> _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_1ad3b39db_optimizeExprModel(_self_, &((*(_17421_l))._field_Model));
				};
			}
			_iter_next_1bba56a88:;
			++it;
			goto _iter_begin_1bba56a88;
		}
		_iter_end_1bba56a88:;
	};
	_1ad3b39db_optimizeExprModel(_self_, &((*(_17343_assign))._field_R));
}



inline void _1ad3b58de_optimizeStmt(jule::Ptr<_1ad3b2c1b_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1bba58738:;
			{
				jule::Ptr<_1ac756126_Scope> _18517_scope = _18236_st.cast_ptr<_1ac756126_Scope>(&__jule_any_type22);;
				if ((*(_18517_scope))._field_Deferred) {
					_1ad3b5e1c_eliminateDeadCodeOfScope(_18517_scope);
				} else {
					_1ad3b31c2_optimizeChild(_self_, &(_18517_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1bba5879e:;
			{
				_1ad3b4503_optimizeRangeIter(_self_, _18236_st.cast_ptr<_1ac757e5d_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1bba58815:;
			{
				_1ad3b47ab_optimizeWhileIter(_self_, _18236_st.cast_ptr<_1ac757512_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1bba5888c:;
			{
				_1ad3b4a64_optimizeInfIter(_self_, _18236_st.cast_ptr<_1ac75705b_InfIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1bba58914:;
			{
				_1ad3b4d1c_optimizeConditional(_self_, _18236_st.cast_ptr<_1ac756c5e_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1bba5898b:;
			{
				_1ad3b50c5_optimizeMatch(_self_, _18236_st.cast_ptr<_1ac75a25c_Match>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1bba58a13:;
			{
				_1ad3b537d_optimizeAssign(_self_, _18236_st.cast_ptr<_1ac759723_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1bba58a8a:;
			{
				_1ad3b5636_optimizeMultiAssign(_self_, _18236_st.cast_ptr<_1ac759aec_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1bba58b12:;
			{
				jule::Ptr<_1ac8243ae_Data> _20617_d = _18236_st.cast_ptr<_1ac8243ae_Data>(&__jule_any_type24);;
				if ((*(_self_))._field_except) {
					goto _match_end_1bba585e5;
				};
				{
					auto &_match_expr{ (*(_20617_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type29) {
						_case_begin_1bacca44a:;
						{
							_1ad3b3bd9_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_1baccaacc:;
						{
							_1ad3b39db_optimizeExprModel(_self_, &((*(_20617_d))._field_Model));
						}
					}
					_match_end_1baccaa77:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1bba58b89:;
			{
				_1ad3b3bd9_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1bba58c11:;
			{
				_1ad3b3e92_pushGoto(_self_, _18236_st.cast_ptr<_1ac758d93_GotoSt>(&__jule_any_type42));
				_1ad3b3bd9_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1bba58c88:;
			{
				_1ad3b424a_pushLabel(_self_, _18236_st.cast_ptr<_1ac7589b9_Label>(&__jule_any_type21));
			}
		}
		_match_end_1bba585e5:;
	};
}



inline void _1ad3b5adc_optimizeStmts(jule::Ptr<_1ad3b2c1b_scopeDeadCode> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*(_self_))._field_i < (*((*(_self_))._field_stmts)).len()); ((*(_self_))._field_i)++) {
		{
			_1ad3b58de_optimizeStmt(_self_, (*((*(_self_))._field_stmts))[(*(_self_))._field_i]);
		}
	_iter_next_1baccd937:;
	}
	_iter_end_1baccd937:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ad3b2c1b_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1ad3b6e73_exprDeadCode static__1ad3b75b1_new(jule::Ptr<_1ad3b2c1b_scopeDeadCode>* _4824_s) {
	return _1ad3b6e73_exprDeadCode{._field_s=(*(_4824_s))};;
}



inline void _1ad3b7869_binary(_1ad3b6e73_exprDeadCode* _self_, jule::Ptr<_1ac706505_BinaryExprModel> _5425_m) {
	_1ad3bd4da_optimize(_self_, &((*((*(_5425_m))._field_Left))._field_Model));
	_1ad3bd4da_optimize(_self_, &((*((*(_5425_m))._field_Right))._field_Model));
}



inline void _1ad3b7b22_unary(_1ad3b6e73_exprDeadCode* _self_, jule::Ptr<_1ac7068ce_UnaryExprModel> _5924_m) {
	_1ad3bd4da_optimize(_self_, &((*((*(_5924_m))._field_Expr))._field_Model));
}



inline void _1ad3b7dca_structureLit(_1ad3b6e73_exprDeadCode* _self_, jule::Ptr<_1ac7072a3_StructLitExprModel> _6331_m) {
	{
		auto expr = &((*(_6331_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bacd252e:;
		if (it != expr_end) {
			jule::Ptr<_1ac706e0c_StructArgExprModel> _6421_arg = *it;
			{
				_1ad3bd4da_optimize(_self_, &((*((*(_6421_arg))._field_Expr))._field_Model));
			}
			_iter_next_1bacd252e:;
			++it;
			goto _iter_begin_1bacd252e;
		}
		_iter_end_1bacd252e:;
	};
}



inline void _1ad3b8183_allocStructure(_1ad3b6e73_exprDeadCode* _self_, jule::Ptr<_1ac7075a0_AllocStructLitExprModel> _6933_m) {
	_1ad3b7dca_structureLit(_self_, (*(_6933_m))._field_Lit);
}



inline void _1ad3b843b_casting(_1ad3b6e73_exprDeadCode* _self_, jule::Ptr<_1ac707b33_CastingExprModel> _7326_m) {
	_1ad3bd4da_optimize(_self_, &((*(_7326_m))._field_Expr));
}



inline void _1ad3b86e4_args(_1ad3b6e73_exprDeadCode* _self_, jule::Slice<jule::Any>* _7724_args) {
	{
		auto expr = _7724_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bacd49b5:;
		if (it != expr_end) {
			jule::Any _7821_arg = *it;
			{
				_1ad3bd4da_optimize(_self_, &(_7821_arg));
			}
			_iter_next_1bacd49b5:;
			++it;
			goto _iter_begin_1bacd49b5;
		}
		_iter_end_1bacd49b5:;
	};
}



inline void _1ad3b899c_funcCall(_1ad3b6e73_exprDeadCode* _self_, jule::Ptr<_1ac7084d5_FnCallExprModel> _8327_m) {
	_1ad3bd4da_optimize(_self_, &((*(_8327_m))._field_Expr));
	_1ad3b86e4_args(_self_, &((*(_8327_m))._field_Args));
	if (((*(_8327_m))._field_Except != nullptr)) {
		_1ad3b347a_optimizeBodyChildExceptional((*(_self_))._field_s, &((*(_8327_m))._field_Except));
	};
}



inline void _1ad3b8c55_slice(_1ad3b6e73_exprDeadCode* _self_, jule::Ptr<_1ac7088ae_SliceExprModel> _9124_m) {
	_1ad3b86e4_args(_self_, &((*(_9124_m))._field_Elems));
}



inline void _1ad3b900d_array(_1ad3b6e73_exprDeadCode* _self_, jule::Ptr<_1ac70b906_ArrayExprModel> _9524_m) {
	if ((((*(_9524_m))._field_Elems.len() == 2LL) && ((*(_9524_m))._field_Elems[1LL] == nullptr))) {
		_1ad3bd4da_optimize(_self_, &((*(_9524_m))._field_Elems[0LL]));
	};
	_1ad3b86e4_args(_self_, &((*(_9524_m))._field_Elems));
}



inline void _1ad3b92b6_indexing(_1ad3b6e73_exprDeadCode* _self_, jule::Ptr<_1ac708d65_IndexingExprModel> _10227_m) {
	_1ad3bd4da_optimize(_self_, &((*((*(_10227_m))._field_Expr))._field_Model));
	_1ad3bd4da_optimize(_self_, &((*((*(_10227_m))._field_Index))._field_Model));
}



inline void _1ad3b956e_anonFunc(_1ad3b6e73_exprDeadCode* _self_, jule::Ptr<_1ac70923e_AnonFnExprModel> _10727_m) {
	_1ad3b5e1c_eliminateDeadCodeOfScope((*((*(_10727_m))._field_Func))._field_Scope);
}



inline void _1ad3b9827_mapExpr(_1ad3b6e73_exprDeadCode* _self_, jule::Ptr<_1ac709abe_MapExprModel> _11126_m) {
	{
		auto expr = &((*(_11126_m))._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bacdb15e:;
		if (it != expr_end) {
			jule::Ptr<_1ac709618_KeyValPairExprModel> _11221_pair = *it;
			{
				_1ad3bd4da_optimize(_self_, &((*(_11221_pair))._field_Key));
				_1ad3bd4da_optimize(_self_, &((*(_11221_pair))._field_Val));
			}
			_iter_next_1bacdb15e:;
			++it;
			goto _iter_begin_1bacdb15e;
		}
		_iter_end_1bacdb15e:;
	};
}



inline void _1ad3b9ad0_slicing(_1ad3b6e73_exprDeadCode* _self_, jule::Ptr<_1ac70a152_SlicingExprModel> _11826_m) {
	_1ad3bd4da_optimize(_self_, &((*(_11826_m))._field_Expr));
	_1ad3bd4da_optimize(_self_, &((*(_11826_m))._field_Left));
	if (((*(_11826_m))._field_Right != nullptr)) {
		_1ad3bd4da_optimize(_self_, &((*(_11826_m))._field_Right));
	};
}



inline void _1ad3b9d88_traitSub(_1ad3b6e73_exprDeadCode* _self_, jule::Ptr<_1ac70a6d5_TraitSubIdentExprModel> _12627_m) {
	_1ad3bd4da_optimize(_self_, &((*(_12627_m))._field_Expr));
}



inline void _1ad3ba141_structureSub(_1ad3b6e73_exprDeadCode* _self_, jule::Ptr<_1ac70b076_StructSubIdentExprModel> _13031_m) {
	_1ad3bd4da_optimize(_self_, &((*((*(_13031_m))._field_Expr))._field_Model));
}



inline void _1ad3ba3e9_tuple(_1ad3b6e73_exprDeadCode* _self_, jule::Ptr<_1ac70bc03_TupleExprModel> _13424_m) {
	{
		auto expr = &((*(_13424_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bace0262:;
		if (it != expr_end) {
			jule::Ptr<_1ac8243ae_Data> _13521_d = *it;
			{
				_1ad3bd4da_optimize(_self_, &((*(_13521_d))._field_Model));
			}
			_iter_next_1bace0262:;
			++it;
			goto _iter_begin_1bace0262;
		}
		_iter_end_1bace0262:;
	};
}



inline void _1ad3ba6a2_newCall(_1ad3b6e73_exprDeadCode* _self_, jule::Ptr<_1ac70c880_BuiltinNewCallExprModel> _14026_m) {
	if (((*(_14026_m))._field_Init != nullptr)) {
		_1ad3bd4da_optimize(_self_, &((*(_14026_m))._field_Init));
	};
}



inline void _1ad3ba95a_outCall(_1ad3b6e73_exprDeadCode* _self_, jule::Ptr<_1ac70c0cc_BuiltinOutCallExprModel> _14626_m) {
	_1ad3bd4da_optimize(_self_, &((*(_14626_m))._field_Expr));
}



inline void _1ad3bac13_outlnCall(_1ad3b6e73_exprDeadCode* _self_, jule::Ptr<_1ac70c4a6_BuiltinOutlnCallExprModel> _15028_m) {
	_1ad3bd4da_optimize(_self_, &((*(_15028_m))._field_Expr));
}



inline void _1ad3baebb_panicCall(_1ad3b6e73_exprDeadCode* _self_, jule::Ptr<_1ac70cc59_BuiltinPanicCallExprModel> _15428_m) {
	_1ad3bd4da_optimize(_self_, &((*(_15428_m))._field_Expr));
}



inline void _1ad3bb274_assertCall(_1ad3b6e73_exprDeadCode* _self_, jule::Ptr<_1ac70d210_BuiltinAssertCallExprModel> _15829_m) {
	_1ad3bd4da_optimize(_self_, &((*(_15829_m))._field_Expr));
}



inline void _1ad3bb52c_errorCall(_1ad3b6e73_exprDeadCode* _self_, jule::Ptr<_1ac70ed16_BuiltinErrorCallExprModel> _16228_m) {
	_1ad3bd4da_optimize(_self_, &((*((*(_16228_m))._field_Err))._field_Model));
}



inline void _1ad3bb7d5_makeCall(_1ad3b6e73_exprDeadCode* _self_, jule::Ptr<_1ac70d6b6_BuiltinMakeCallExprModel> _16627_m) {
	if (((*(_16627_m))._field_Len != nullptr)) {
		_1ad3bd4da_optimize(_self_, &((*(_16627_m))._field_Len));
	};
	if (((*(_16627_m))._field_Cap != nullptr)) {
		_1ad3bd4da_optimize(_self_, &((*(_16627_m))._field_Cap));
	};
}



inline void _1ad3bba8d_appendCall(_1ad3b6e73_exprDeadCode* _self_, jule::Ptr<_1ac70da90_BuiltinAppendCallExprModel> _17529_m) {
	_1ad3bd4da_optimize(_self_, &((*(_17529_m))._field_Dest));
	_1ad3bd4da_optimize(_self_, &((*(_17529_m))._field_Elements));
}



inline void _1ad3bbd46_lenCall(_1ad3b6e73_exprDeadCode* _self_, jule::Ptr<_1ac70dd8c_BuiltinLenCallExprModel> _18026_m) {
	_1ad3bd4da_optimize(_self_, &((*((*(_18026_m))._field_Expr))._field_Model));
}



inline void _1ad3bc0ee_capCall(_1ad3b6e73_exprDeadCode* _self_, jule::Ptr<_1ac70e189_BuiltinCapCallExprModel> _18426_m) {
	_1ad3bd4da_optimize(_self_, &((*((*(_18426_m))._field_Expr))._field_Model));
}



inline void _1ad3bc3a7_deleteCall(_1ad3b6e73_exprDeadCode* _self_, jule::Ptr<_1ac70e563_BuiltinDeleteCallExprModel> _18829_m) {
	_1ad3bd4da_optimize(_self_, &((*((*(_18829_m))._field_Dest))._field_Model));
	if (((*(_18829_m))._field_Key != nullptr)) {
		_1ad3bd4da_optimize(_self_, &((*((*(_18829_m))._field_Key))._field_Model));
	};
}



inline void _1ad3bc660_sizeof(_1ad3b6e73_exprDeadCode* _self_, jule::Ptr<_1ac70a8c2_SizeofExprModel> _19525_m) {
	_1ad3bd4da_optimize(_self_, &((*(_19525_m))._field_Expr));
}



inline void _1ad3bc918_alignof(_1ad3b6e73_exprDeadCode* _self_, jule::Ptr<_1ac710542_AlignofExprModel> _19926_m) {
	_1ad3bd4da_optimize(_self_, &((*(_19926_m))._field_Expr));
}



inline void _1ad3bcbc1_integratedToStr(_1ad3b6e73_exprDeadCode* _self_, jule::Ptr<_1ac710b3b_IntegratedToStrExprModel> _20334_m) {
	_1ad3bd4da_optimize(_self_, &((*(_20334_m))._field_Expr));
}



inline void _1ad3bce79_free(_1ad3b6e73_exprDeadCode* _self_, jule::Ptr<_1ac711312_FreeExprModel> _20723_m) {
	_1ad3bd4da_optimize(_self_, &((*(_20723_m))._field_Expr));
}



inline void _1ad3bd232_backendEmit(_1ad3b6e73_exprDeadCode* _self_, jule::Ptr<_1ac711015_BackendEmitExprModel> _21130_m) {
	_1ad3b86e4_args(_self_, &((*(_21130_m))._field_Exprs));
}



inline void _1ad3bd4da_optimize(_1ad3b6e73_exprDeadCode* _self_, jule::Any* _21528_model) {
	{
		auto &_match_expr{ (*(_21528_model)) };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1baced7c0:;
			{
				_1ad3b7869_binary(_self_, (*(_21528_model)).cast_ptr<_1ac706505_BinaryExprModel>(&__jule_any_type111));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1baced836:;
			{
				_1ad3b7b22_unary(_self_, (*(_21528_model)).cast_ptr<_1ac7068ce_UnaryExprModel>(&__jule_any_type110));
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1baced89c:;
			{
				_1ad3b7dca_structureLit(_self_, (*(_21528_model)).cast_ptr<_1ac7072a3_StructLitExprModel>(&__jule_any_type94));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1baced924:;
			{
				_1ad3b8183_allocStructure(_self_, (*(_21528_model)).cast_ptr<_1ac7075a0_AllocStructLitExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1baced99b:;
			{
				_1ad3b843b_casting(_self_, (*(_21528_model)).cast_ptr<_1ac707b33_CastingExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1baceda23:;
			{
				_1ad3b899c_funcCall(_self_, (*(_21528_model)).cast_ptr<_1ac7084d5_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1baceda9a:;
			{
				_1ad3b8c55_slice(_self_, (*(_21528_model)).cast_ptr<_1ac7088ae_SliceExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1bacedb22:;
			{
				_1ad3b900d_array(_self_, (*(_21528_model)).cast_ptr<_1ac70b906_ArrayExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1bacedb99:;
			{
				_1ad3b92b6_indexing(_self_, (*(_21528_model)).cast_ptr<_1ac708d65_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1bacedc21:;
			{
				_1ad3b956e_anonFunc(_self_, (*(_21528_model)).cast_ptr<_1ac70923e_AnonFnExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1bacedc98:;
			{
				_1ad3b9827_mapExpr(_self_, (*(_21528_model)).cast_ptr<_1ac709abe_MapExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1bacedd20:;
			{
				_1ad3b9ad0_slicing(_self_, (*(_21528_model)).cast_ptr<_1ac70a152_SlicingExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1bacedd97:;
			{
				_1ad3b9d88_traitSub(_self_, (*(_21528_model)).cast_ptr<_1ac70a6d5_TraitSubIdentExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1bacede1e:;
			{
				_1ad3ba141_structureSub(_self_, (*(_21528_model)).cast_ptr<_1ac70b076_StructSubIdentExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1bacede96:;
			{
				_1ad3ba3e9_tuple(_self_, (*(_21528_model)).cast_ptr<_1ac70bc03_TupleExprModel>(&__jule_any_type81));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1bacee01d:;
			{
				_1ad3ba95a_outCall(_self_, (*(_21528_model)).cast_ptr<_1ac70c0cc_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1bacee095:;
			{
				_1ad3bac13_outlnCall(_self_, (*(_21528_model)).cast_ptr<_1ac70c4a6_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1bacee11c:;
			{
				_1ad3ba6a2_newCall(_self_, (*(_21528_model)).cast_ptr<_1ac70c880_BuiltinNewCallExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1bacee194:;
			{
				_1ad3baebb_panicCall(_self_, (*(_21528_model)).cast_ptr<_1ac70cc59_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1bacee21b:;
			{
				_1ad3bb274_assertCall(_self_, (*(_21528_model)).cast_ptr<_1ac70d210_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1bacee293:;
			{
				_1ad3bb52c_errorCall(_self_, (*(_21528_model)).cast_ptr<_1ac70ed16_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1bacee31a:;
			{
				_1ad3bb7d5_makeCall(_self_, (*(_21528_model)).cast_ptr<_1ac70d6b6_BuiltinMakeCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1bacee392:;
			{
				_1ad3bba8d_appendCall(_self_, (*(_21528_model)).cast_ptr<_1ac70da90_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1bacee419:;
			{
				_1ad3bbd46_lenCall(_self_, (*(_21528_model)).cast_ptr<_1ac70dd8c_BuiltinLenCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1bacee491:;
			{
				_1ad3bc0ee_capCall(_self_, (*(_21528_model)).cast_ptr<_1ac70e189_BuiltinCapCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1bacee518:;
			{
				_1ad3bc3a7_deleteCall(_self_, (*(_21528_model)).cast_ptr<_1ac70e563_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1bacee590:;
			{
				_1ad3bc660_sizeof(_self_, (*(_21528_model)).cast_ptr<_1ac70a8c2_SizeofExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1bacee617:;
			{
				_1ad3bc918_alignof(_self_, (*(_21528_model)).cast_ptr<_1ac710542_AlignofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1bacee68e:;
			{
				_1ad3bcbc1_integratedToStr(_self_, (*(_21528_model)).cast_ptr<_1ac710b3b_IntegratedToStrExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1bacee716:;
			{
				_1ad3bce79_free(_self_, (*(_21528_model)).cast_ptr<_1ac711312_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1bacee78d:;
			{
				_1ad3bd232_backendEmit(_self_, (*(_21528_model)).cast_ptr<_1ac711015_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_1baced528:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ad3b6e73_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac94d4a5_SwapExprModel _Src) {
	_Stream << "SwapExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac94d8c3_EmptyCompareExprModel _Src) {
	_Stream << "EmptyCompareExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Neg:" << _Src._field_Neg;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac94dbc0_RefExprModel _Src) {
	_Stream << "RefExprModel{";
	_Stream << "Var:" << _Src._field_Var;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac94e1ed_StrCompExprModel _Src) {
	_Stream << "StrCompExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "NotEq:" << _Src._field_NotEq;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac94e781_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac94ea7d_UnsafeBinaryExprModel _Src) {
	_Stream << "UnsafeBinaryExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac94ed7a_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac9502a9_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac950683_AppendToSliceExprModel _Src) {
	_Stream << "AppendToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Slice:" << _Src._field_Slice;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac95183d_scopeOptimizer> static__1ac951d7c_new(jule::Ptr<_1ac756126_Scope> _4623_scope) {
	return jule::new_ptr<_1ac95183d_scopeOptimizer>(_1ac95183d_scopeOptimizer{._field_scope=_4623_scope});;
}



inline void _1ac952135_setCurrentStmt(_1ac95183d_scopeOptimizer* _self_, jule::Any _5237_stmt) {
	(*((*(_self_))._field_scope))._field_Stmts[(*(_self_))._field_i]=(*(((jule::Any*)((&(_5237_stmt))))));
}



inline void _1ac952333_removeCurrent(_1ac95183d_scopeOptimizer* _self_) {
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*((*(_self_))._field_scope))._field_Stmts.slice(0LL, (*(_self_))._field_i),(*((*(_self_))._field_scope))._field_Stmts.slice(((*(_self_))._field_i + 1LL)));
}



inline void _1ac9525db_optimizeData(_1ac95183d_scopeOptimizer* _self_, jule::Ptr<_1ac8243ae_Data> _6135_d) {
	{
		auto &_match_expr{ (*(_6135_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1bd8717b3:;
			{
				jule::Ptr<_1ac7084d5_FnCallExprModel> _6417_m = (*(_6135_d))._field_Model.cast_ptr<_1ac7084d5_FnCallExprModel>(&__jule_any_type34);;
				if (_1da0b7cbd_Production) {
					if (((!(_1ac718605_IsBuiltin((*(_6417_m))._field_Func.ptr()))) && _1ac955b94_isStdPackage(&((*((*((*((*((*(_6417_m))._field_Func))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("debug", 5)))) {
						_1ac952135_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1bd87174c:;
	};
	static__1ac9580b4_optimize(&((*(_6135_d))._field_Model));
}



inline void _1ac952894_optimizeVar(_1ac95183d_scopeOptimizer* _self_, jule::Ptr<_1ac7bb015_Var> _7634_v) {
	if (((*(_7634_v))._field_Value != nullptr)) {
		static__1ac9580b4_optimize(&((*((*((*(_7634_v))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1ac952b4c_optimizeConditional(_1ac95183d_scopeOptimizer* _self_, jule::Ptr<_1ac756c5e_Conditional> _8242_c) {
	{
		auto expr = &((*(_8242_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbc37a7c:;
		if (it != expr_end) {
			jule::Ptr<_1ac756544_If> _8321_elif = *it;
			{
				static__1ac9580b4_optimize(&((*(_8321_elif))._field_Expr));
				_1ac955523_optimizeChild(_self_, (*(_8321_elif))._field_Scope);
			}
			_iter_next_1bbc37a7c:;
			++it;
			goto _iter_begin_1bbc37a7c;
		}
		_iter_end_1bbc37a7c:;
	};
	if (((*(_8242_c))._field_Default != nullptr)) {
		_1ac955523_optimizeChild(_self_, (*((*(_8242_c))._field_Default))._field_Scope);
	};
	if ((!(_1ac962ac4_Cond))) {
		return;;
	};
	jule::Bool _9513_constCase = false;;
	{
		auto expr = &((*(_8242_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbc39cb0:;
		if (it != expr_end) {
			jule::I64 _9814_i = it - expr->begin();
			jule::Ptr<_1ac756544_If> _9821_elif = *it;
			{
				if ((!(_1ac955ea2_isConstantValidConditionalCase(&(_9821_elif))))) {
					goto _iter_next_1bbc39cb0;
				};
				_9513_constCase=true;
				(*(_8242_c))._field_Elifs=(*(_8242_c))._field_Elifs.slice(0LL, _9814_i);
				(*(_8242_c))._field_Default=jule::new_ptr<_1ac756841_Else>(_1ac756841_Else{._field_Scope=(*(_9821_elif))._field_Scope});
				goto _iter_end_1bbc39cb0;
			}
			_iter_next_1bbc39cb0:;
			++it;
			_9814_i++;
			goto _iter_begin_1bbc39cb0;
		}
		_iter_end_1bbc39cb0:;
	};
	if (((*(_8242_c))._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1ac756544_If>* _11513_i = (&((*(_8242_c))._field_Elifs[0LL]));;
	jule::Ptr<_1ac756544_If>* _1169_end = (&((*(_8242_c))._field_Elifs[((*(_8242_c))._field_Elifs.len() - 1LL)]));;
	for (; (_11513_i <= _1169_end); (_11513_i)++) {
		{
			{
				if (_1ac956876_isUnreachableConditionalCase(&((*(_11513_i))))) {
					(*(_11513_i))=nullptr;
				};
			};
		}
	_iter_next_1bbc3d423:;
	}
	_iter_end_1bbc3d423:;;
	if (((*(_8242_c))._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_9513_constCase))) {
		return;;
	};
	jule::I64 _13413_only = -1LL;;
	{
		auto expr = &((*(_8242_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbc3ec3d:;
		if (it != expr_end) {
			jule::I64 _13513_j = it - expr->begin();
			jule::Ptr<_1ac756544_If> _13516_elif = *it;
			{
				if ((_13516_elif != nullptr)) {
					if ((_13413_only != -1LL)) {
						return;;
					};
					_13413_only=_13513_j;
				};
			}
			_iter_next_1bbc3ec3d:;
			++it;
			_13513_j++;
			goto _iter_begin_1bbc3ec3d;
		}
		_iter_end_1bbc3ec3d:;
	};
	if ((_13413_only != -1LL)) {
		_1ac952135_setCurrentStmt(_self_, jule::Any((*((*(_8242_c))._field_Elifs[_13413_only]))._field_Scope, &__jule_any_type22));
	};
}



inline void _1ac95306a_buildDefaultConstantTrueCase(_1ac95183d_scopeOptimizer* _self_, jule::Ptr<_1ac75ad95_Case> _15151_case, jule::I64* _15169_i, jule::Ptr<_1ac75a25c_Match>* _15182_m) {
	(*(_15151_case))._field_Exprs=nullptr;
	jule::I64 _1539_start = (*(_15169_i));;
	_julec_label_1bbc42647:;
	for (;;) {
		{
			if (((*((*(_15151_case))._field_Scope))._field_Stmts.len() == 0LL)) {
				goto _iter_end_1bbc4267a;
			};
			jule::Any *_15918_stmt = &((*((*(_15151_case))._field_Scope))._field_Stmts[((*((*(_15151_case))._field_Scope))._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_15918_stmt)) };
				
				if (_match_expr.type == &__jule_any_type48) {
					_case_begin_1bbc4466b:;
					{
						((*(_15169_i)))++;
						if (((*(_15169_i)) >= (*((*(_15182_m))))._field_Cases.len())) {
							(*(_15918_stmt))=jule::Any((*((*((*(_15182_m))))._field_Default))._field_Scope, &__jule_any_type22);
							goto _iter_end_1bbc4267a;
						};
						_15151_case=(*((*(_15182_m))))._field_Cases[(*(_15169_i))];
						(*(_15918_stmt))=jule::Any((*(_15151_case))._field_Scope, &__jule_any_type22);
					}
				}
				else {
					_case_begin_1bbc447d1:;
					{
						goto _iter_end_1bbc4267a;
					}
				}
				_match_end_1bbc4477b:;
			};
		}
	_iter_next_1bbc4267a:;
	}
	_iter_end_1bbc4267a:;;
	(*((*(_15182_m))))._field_Default=(*((*(_15182_m))))._field_Cases[_1539_start];
	(*((*(_15182_m))))._field_Cases=(*((*(_15182_m))))._field_Cases.slice(0LL, _1539_start);
}



inline void _1ac953323_optimizeMatch(_1ac95183d_scopeOptimizer* _self_, jule::Ptr<_1ac75a25c_Match> _17736_m) {
	{
		auto expr = &((*(_17736_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbc4741b:;
		if (it != expr_end) {
			jule::Ptr<_1ac75ad95_Case> _17821_case = *it;
			{
				{
					auto expr = &((*(_17821_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bbc47d67:;
					if (it != expr_end) {
						jule::Ptr<_1ac8243ae_Data> _17925_expr = *it;
						{
							static__1ac9580b4_optimize(&((*(_17925_expr))._field_Model));
						}
						_iter_next_1bbc47d67:;
						++it;
						goto _iter_begin_1bbc47d67;
					}
					_iter_end_1bbc47d67:;
				};
				_1ac955523_optimizeChild(_self_, (*(_17821_case))._field_Scope);
			}
			_iter_next_1bbc4741b:;
			++it;
			goto _iter_begin_1bbc4741b;
		}
		_iter_end_1bbc4741b:;
	};
	if (((*(_17736_m))._field_Default != nullptr)) {
		_1ac955523_optimizeChild(_self_, (*((*(_17736_m))._field_Default))._field_Scope);
	};
	if ((!(_1ac962ac4_Cond))) {
		return;;
	};
	jule::Bool _19213_constCase = false;;
	{
		auto expr = &((*(_17736_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbc49c7b:;
		if (it != expr_end) {
			jule::I64 _19518_i = it - expr->begin();
			jule::Ptr<_1ac75ad95_Case> _19525_case = *it;
			{
				if ((!(_1ac9565ac_isConstantValidMatchCase(&(_19525_case))))) {
					goto _iter_next_1bbc49c7b;
				};
				_19213_constCase=true;
				_1ac95306a_buildDefaultConstantTrueCase(_self_, _19525_case, &(_19518_i), &(_17736_m));
				goto _iter_end_1bbc49c7b;
			}
			_iter_next_1bbc49c7b:;
			++it;
			_19518_i++;
			goto _iter_begin_1bbc49c7b;
		}
		_iter_end_1bbc49c7b:;
	};
	if (((*(_17736_m))._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1ac75ad95_Case>* _20913_i = (&((*(_17736_m))._field_Cases[0LL]));;
	jule::Ptr<_1ac75ad95_Case>* _2109_end = (&((*(_17736_m))._field_Cases[((*(_17736_m))._field_Cases.len() - 1LL)]));;
	for (; (_20913_i <= _2109_end); (_20913_i)++) {
		{
			{
				if (_1ac956b40_isUnreachableMatchCase(&((*(_20913_i))))) {
					(*(_20913_i))=nullptr;
				};
			};
		}
	_iter_next_1bbc4c894:;
	}
	_iter_end_1bbc4c894:;;
	if ((!(_19213_constCase))) {
		return;;
	};
	jule::I64 _22413_only = -1LL;;
	{
		auto expr = &((*(_17736_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbc4da93:;
		if (it != expr_end) {
			jule::I64 _22513_j = it - expr->begin();
			jule::Ptr<_1ac75ad95_Case> _22516_case = *it;
			{
				if ((_22516_case != nullptr)) {
					if ((_22413_only != -1LL)) {
						return;;
					};
					_22413_only=_22513_j;
				};
			}
			_iter_next_1bbc4da93:;
			++it;
			_22513_j++;
			goto _iter_begin_1bbc4da93;
		}
		_iter_end_1bbc4da93:;
	};
	if ((_22413_only != -1LL)) {
		_1ac952135_setCurrentStmt(_self_, jule::Any((*((*(_17736_m))._field_Cases[_22413_only]))._field_Scope, &__jule_any_type22));
	};
}



inline void _1ac9535cb_optimizeRangeIter(_1ac95183d_scopeOptimizer* _self_, jule::Ptr<_1ac757e5d_RangeIter> _24140_it) {
	static__1ac9580b4_optimize(&((*((*(_24140_it))._field_Expr))._field_Model));
	_1ac955523_optimizeChild(_self_, (*(_24140_it))._field_Scope);
}



inline void _1ac953884_optimizeWhileIter(_1ac95183d_scopeOptimizer* _self_, jule::Ptr<_1ac757512_WhileIter> _24640_it) {
	static__1ac9580b4_optimize(&((*(_24640_it))._field_Expr));
	_1ac95526a_optimizeStmt(_self_, (*(_24640_it))._field_Next);
	_1ac955523_optimizeChild(_self_, (*(_24640_it))._field_Scope);
}



inline jule::Bool _1ac953bc5_substr(_1ac95183d_scopeOptimizer* _self_, jule::Ptr<_1ac759723_Assign> _25229_a) {
	if (((*((*(_25229_a))._field_Op))._field_Id != static_cast<jule::U64>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_25229_a))._field_R))._field_Model };
		
		if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1bbc53900:;
			{
				jule::Ptr<_1ac70a152_SlicingExprModel> _25817_sem = (*((*(_25229_a))._field_R))._field_Model.cast_ptr<_1ac70a152_SlicingExprModel>(&__jule_any_type91);;
				if (((*(_25817_sem))._field_Expr == (*((*(_25229_a))._field_L))._field_Model)) {
					_1ac952135_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1ac94e781_MutSlicingExprModel>(_1ac94e781_MutSlicingExprModel{._field_Token=(*(_25817_sem))._field_Token, ._field_Expr=(*(_25817_sem))._field_Expr, ._field_Left=(*(_25817_sem))._field_Left, ._field_Right=(*(_25817_sem))._field_Right}), &__jule_any_type120));
					return true;;
				};
			}
		}
		_match_end_1bbc53889:;
	};
	return false;;
}



inline jule::Bool _1ac954016_strAssign(_1ac95183d_scopeOptimizer* _self_, jule::Ptr<_1ac759723_Assign> _27232_a) {
	if ((!(_1ac962d8d_Str))) {
		return false;;
	};
	jule::Ptr<_1ac86260b_Prim> _2769_lp = _1ac85c183_Prim((*((*(_27232_a))._field_L))._field_Kind.ptr());;
	if (((_2769_lp == nullptr) || (!(_1ac865a93_IsStr(_2769_lp.ptr()))))) {
		return false;;
	};
	return _1ac953bc5_substr(_self_, _27232_a);;
}



inline jule::Bool _1ac954357_sliceAssign(_1ac95183d_scopeOptimizer* _self_, jule::Ptr<_1ac759723_Assign> _28334_a) {
	if (((!(_1ac963157_Slice)) || (_1ac85d1d9_Slc((*((*(_28334_a))._field_L))._field_Kind.ptr()) == nullptr))) {
		return false;;
	};
	return _1ac953bc5_substr(_self_, _28334_a);;
}



inline void _1ac954610_optimizeAssign(_1ac95183d_scopeOptimizer* _self_, jule::Ptr<_1ac759723_Assign> _29137_assign) {
	if ((((*((*(_29137_assign))._field_Op))._field_Id == static_cast<jule::U64>(71LLU)) && _1ac94c8d3_equalModels((*((*(_29137_assign))._field_L))._field_Model, (*((*(_29137_assign))._field_R))._field_Model))) {
		_1ac952333_removeCurrent(_self_);
		((*(_self_))._field_i)--;
		return;;
	};
	{
		
		if (_1ac954016_strAssign(_self_, _29137_assign) || _1ac954357_sliceAssign(_self_, _29137_assign)) {
			_case_begin_1bd898ca2:;
			{
				return;;
			}
		}
		_match_end_1bd897e7c:;
	};
	static__1ac9580b4_optimize(&((*((*(_29137_assign))._field_L))._field_Model));
	static__1ac9580b4_optimize(&((*((*(_29137_assign))._field_R))._field_Model));
	{
		auto &_match_expr{ (*((*(_29137_assign))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(43LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1bd89a611:;
			{
				if (((!(_1ac961d9d_Math)) || (_1ac85d706_Struct((*((*(_29137_assign))._field_L))._field_Kind.ptr()) != nullptr))) {
					goto _match_end_1bd89a59a;
				};
				jule::U64 _31413_oldId = 0LLU;;
				jule::Str _31420_oldKind;;
				({
					jule::U64 ___jule_assign_arg = (*((*(_29137_assign))._field_Op))._field_Id;
					jule::Str _1___jule_assign_arg = (*((*(_29137_assign))._field_Op))._field_Kind;
					_31413_oldId = ___jule_assign_arg;
					_31420_oldKind = _1___jule_assign_arg;
				});
				{
					auto &_match_expr{ (*((*(_29137_assign))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(43LLU)) {
						_case_begin_1bd89d24b:;
						{
							(*((*(_29137_assign))._field_Op))._field_Id=static_cast<jule::U64>(63LLU);
							(*((*(_29137_assign))._field_Op))._field_Kind=jule::Str::lit("/", 1);
						}
					}
					else if (_match_expr == static_cast<jule::U64>(44LLU)) {
						_case_begin_1bd89d2b2:;
						{
							(*((*(_29137_assign))._field_Op))._field_Id=static_cast<jule::U64>(64LLU);
							(*((*(_29137_assign))._field_Op))._field_Kind=jule::Str::lit("%", 1);
						}
					}
					else {
						_case_begin_1bd89cdc7:;
						{
							jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/opt/scope.jule:323:17"));;
						}
					}
					_match_end_1bd89cd72:;
				};
				jule::Any _32517_model = jule::Any(jule::new_ptr<_1ac706505_BinaryExprModel>(_1ac706505_BinaryExprModel{._field_Left=(*(_29137_assign))._field_L, ._field_Right=(*(_29137_assign))._field_R, ._field_Op=(*(_29137_assign))._field_Op}), &__jule_any_type111);;
				static__1ac9580b4_optimize(&(_32517_model));
				{
					auto &_match_expr{ _32517_model };
					
					if (_match_expr.type == &__jule_any_type111) {
						_case_begin_1bd89c9cb:;
						{
							(*(_29137_assign))._field_R=jule::new_ptr<_1ac70600a_OperandExprModel>((*((*(_29137_assign))._field_R)));
							(*((*(_29137_assign))._field_Op))._field_Id=static_cast<jule::U64>(71LLU);
							(*((*(_29137_assign))._field_Op))._field_Kind=jule::Str::lit("=", 1);
							(*((*(_29137_assign))._field_R))._field_Model=_32517_model;
							return;;
						}
					}
					_match_end_1bd89c976:;
				};
				(*((*(_29137_assign))._field_Op))._field_Id=_31413_oldId;
				(*((*(_29137_assign))._field_Op))._field_Kind=_31420_oldKind;
				return;;
			}
		}
		_match_end_1bd89a59a:;
	};
	if (_1ac961a90_Append) {
		{
			auto &_match_expr{ (*((*(_29137_assign))._field_R))._field_Model };
			
			if (_match_expr.type == &__jule_any_type26) {
				_case_begin_1bd8a3e33:;
				{
					jule::Ptr<_1ac70da90_BuiltinAppendCallExprModel> _34721_m = (*((*(_29137_assign))._field_R))._field_Model.cast_ptr<_1ac70da90_BuiltinAppendCallExprModel>(&__jule_any_type26);;
					if ((!(_1ac960ce2_areSameLvalueExprModel(&((*((*(_29137_assign))._field_L))._field_Model), &((*(_34721_m))._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ (*(_34721_m))._field_Elements };
						
						if (_match_expr.type == &__jule_any_type76) {
							_case_begin_1bd8a5374:;
							{
								_1ac952135_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1ac9502a9_PushToSliceExprModel>(_1ac9502a9_PushToSliceExprModel{._field_Dest=(*(_34721_m))._field_Dest, ._field_Elems=(*(_34721_m))._field_Elements.cast_ptr<_1ac7088ae_SliceExprModel>(&__jule_any_type76)}), &__jule_any_type121));
							}
						}
						else {
							_case_begin_1bd8a5e46:;
							{
								_1ac952135_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1ac950683_AppendToSliceExprModel>(_1ac950683_AppendToSliceExprModel{._field_Dest=(*((*(_29137_assign))._field_L))._field_Model, ._field_Slice=(*(_34721_m))._field_Elements}), &__jule_any_type122));
							}
						}
						_match_end_1bd8a5de1:;
					};
				}
			}
			_match_end_1bd8a3dbc:;
		};
	};
}



inline jule::Bool _1ac954951_tryOptimizeSwap(_1ac95183d_scopeOptimizer* _self_, jule::Ptr<_1ac759aec_MultiAssign>* _36939_assign) {
	if (((!(_1ac963421_Assign)) || ((*((*(_36939_assign))))._field_L.len() != 2LL))) {
		return false;;
	};
	jule::Ptr<_1ac70bc03_TupleExprModel> _37317_tup;;
	{
		auto &_match_expr{ (*((*(_36939_assign))))._field_R };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1bd8a8ad6:;
			{
				_37317_tup=(*((*(_36939_assign))))._field_R.cast_ptr<_1ac70bc03_TupleExprModel>(&__jule_any_type81);
			}
		}
		_match_end_1bd8a8a70:;
	};
	if (((_37317_tup == nullptr) || ((*(_37317_tup))._field_Datas.len() != 2LL))) {
		return false;;
	};
	if ((_1ac94c8d3_equalModels((*((*((*(_36939_assign))))._field_L[0LL]))._field_Model, (*((*(_37317_tup))._field_Datas[0LL]))._field_Model) && _1ac94c8d3_equalModels((*((*((*(_36939_assign))))._field_L[1LL]))._field_Model, (*((*(_37317_tup))._field_Datas[1LL]))._field_Model))) {
		_1ac952333_removeCurrent(_self_);
		((*(_self_))._field_i)--;
		return true;;
	};
	if (((!(_1ac94c8d3_equalModels((*((*((*(_36939_assign))))._field_L[0LL]))._field_Model, (*((*(_37317_tup))._field_Datas[1LL]))._field_Model))) || (!(_1ac94c8d3_equalModels((*((*((*(_36939_assign))))._field_L[1LL]))._field_Model, (*((*(_37317_tup))._field_Datas[0LL]))._field_Model))))) {
		return false;;
	};
	jule::Ptr<_1ac94d4a5_SwapExprModel> _39513_model = jule::new_ptr<_1ac94d4a5_SwapExprModel>(_1ac94d4a5_SwapExprModel{._field_Left=(*((*(_36939_assign))))._field_L[0LL], ._field_Right=(*((*(_36939_assign))))._field_L[1LL]});;
	static__1ac9580b4_optimize(&((*((*(_39513_model))._field_Left))._field_Model));
	static__1ac9580b4_optimize(&((*((*(_39513_model))._field_Right))._field_Model));
	_1ac952135_setCurrentStmt(_self_, jule::Any(_39513_model, &__jule_any_type123));
	return true;;
}



inline void _1ac954c09_optimizeMultiAssign(_1ac95183d_scopeOptimizer* _self_, jule::Ptr<_1ac759aec_MultiAssign> _40542_assign) {
	if (_1ac954951_tryOptimizeSwap(_self_, &(_40542_assign))) {
		return;;
	};
	{
		auto expr = &((*(_40542_assign))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd8b157d:;
		if (it != expr_end) {
			jule::Ptr<_1ac8243ae_Data> _41021_l = *it;
			{
				if ((_41021_l != nullptr)) {
					static__1ac9580b4_optimize(&((*(_41021_l))._field_Model));
				};
			}
			_iter_next_1bd8b157d:;
			++it;
			goto _iter_begin_1bd8b157d;
		}
		_iter_end_1bd8b157d:;
	};
	static__1ac9580b4_optimize(&((*(_40542_assign))._field_R));
}



inline void _1ac954eb2_optimizeRet(_1ac95183d_scopeOptimizer* _self_, jule::Ptr<_1ac75b824_RetSt> _41834_r) {
	static__1ac9580b4_optimize(&((*(_41834_r))._field_Expr));
}



inline void _1ac95526a_optimizeStmt(_1ac95183d_scopeOptimizer* _self_, jule::Any _42235_stmt) {
	{
		auto &_match_expr{ _42235_stmt };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1bd8b321c:;
			{
				_1ac955523_optimizeChild(_self_, _42235_stmt.cast_ptr<_1ac756126_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1bd8b3283:;
			{
				_1ac9525db_optimizeData(_self_, _42235_stmt.cast_ptr<_1ac8243ae_Data>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bd8b32e9:;
			{
				_1ac952894_optimizeVar(_self_, _42235_stmt.cast_ptr<_1ac7bb015_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1bd8b3360:;
			{
				_1ac952b4c_optimizeConditional(_self_, _42235_stmt.cast_ptr<_1ac756c5e_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1bd8b33c6:;
			{
				_1ac9535cb_optimizeRangeIter(_self_, _42235_stmt.cast_ptr<_1ac757e5d_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1bd8b343c:;
			{
				_1ac953884_optimizeWhileIter(_self_, _42235_stmt.cast_ptr<_1ac757512_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1bd8b34b4:;
			{
				_1ac955523_optimizeChild(_self_, (*(_42235_stmt.cast_ptr<_1ac75705b_InfIter>(&__jule_any_type36)))._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1bd8b353b:;
			{
				_1ac954610_optimizeAssign(_self_, _42235_stmt.cast_ptr<_1ac759723_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1bd8b35b3:;
			{
				_1ac954c09_optimizeMultiAssign(_self_, _42235_stmt.cast_ptr<_1ac759aec_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1bd8b363a:;
			{
				_1ac953323_optimizeMatch(_self_, _42235_stmt.cast_ptr<_1ac75a25c_Match>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1bd8b36b2:;
			{
				_1ac954eb2_optimizeRet(_self_, _42235_stmt.cast_ptr<_1ac75b824_RetSt>(&__jule_any_type50));
			}
		}
		_match_end_1bd8b30da:;
	};
}



inline void _1ac955523_optimizeChild(_1ac95183d_scopeOptimizer* _self_, jule::Ptr<_1ac756126_Scope> _44936_child) {
	jule::Ptr<_1ac95183d_scopeOptimizer> _45013_so = static__1ac951d7c_new(_44936_child);;
	_1ac955721_optimize(_45013_so.ptr());
}



inline void _1ac955721_optimize(_1ac95183d_scopeOptimizer* _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*(_self_))._field_i < (*((*(_self_))._field_scope))._field_Stmts.len()); ((*(_self_))._field_i)++) {
		{
			_1ac95526a_optimizeStmt(_self_, (*((*(_self_))._field_scope))._field_Stmts[(*(_self_))._field_i]);
		}
	_iter_next_1bd8b9421:;
	}
	_iter_end_1bd8b9421:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac95183d_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1ac9580b4_optimize(jule::Any* _5629_model) {
	if (_1ad3bdaa1_exprEnabled) {
		jule::Ptr<_1ac9579cb_exprOptimizer> _5917_exop = jule::new_ptr<_1ac9579cb_exprOptimizer>(_1ac9579cb_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)(_5629_model))});;
		_1ac9604a6_do(_5917_exop.ptr());
	};
}



inline jule::Bool _1ac958405_selfCmpCond(_1ac9579cb_exprOptimizer* _self_, jule::Ptr<_1ac706505_BinaryExprModel>* _6631_m) {
	if ((!(_1ac94c8d3_equalModels((*((*((*(_6631_m))))._field_Left))._field_Model, (*((*((*(_6631_m))))._field_Right))._field_Model)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_6631_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1bd8c7e68:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1a6ce03a8_NewBool(true), &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1bd8c7ece:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1a6ce03a8_NewBool(false), &__jule_any_type19);
				return true;;
			}
		}
		else {
			_case_begin_1bd8c7e02:;
			{
				return false;;
			}
		}
		_match_end_1bd8c7d9c:;
	};
}



inline jule::Bool _1ac958746_boolCond(_1ac9579cb_exprOptimizer* _self_, jule::Ptr<_1ac706505_BinaryExprModel>* _9028_m) {
	jule::Ptr<_1ac86260b_Prim> _919_lp = _1ac85c183_Prim((*((*((*(_9028_m))))._field_Left))._field_Kind.ptr());;
	if (((_919_lp == nullptr) || (!(_1ac86580c_IsBool(_919_lp.ptr()))))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_9028_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1bd8cc049:;
			{
				std::swap((*((*(_9028_m))))._field_Left, (*((*(_9028_m))))._field_Right);
			}
		}
		else {
			_case_begin_1bd8cb631:;
			{
				{
					auto &_match_expr{ (*((*((*(_9028_m))))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1bd8ca93d:;
						{
							goto _match_end_1bd8cbe39;
						}
					}
					else {
						_case_begin_1bd8cbe8e:;
						{
							return false;;
						}
					}
					_match_end_1bd8cbe39:;
				};
			}
		}
		_match_end_1bd8cb5cb:;
	};
	jule::Ptr<_1a6cde8d5_Const> _10813_c = (*((*((*(_9028_m))))._field_Right))._field_Model.cast_ptr<_1a6cde8d5_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ (*((*((*(_9028_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1bd8ce007:;
			{
				if (_1a6ce17c7_ReadBool(_10813_c.ptr())) {
					(*((*(_self_))._field_model))=(*((*((*(_9028_m))))._field_Left))._field_Model;
				} else {
					_1a6ce2db1_SetBool(_10813_c.ptr(), false);
					(*((*(_self_))._field_model))=jule::Any(_10813_c, &__jule_any_type19);
				};
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1bd8ce06d:;
			{
				if (_1a6ce17c7_ReadBool(_10813_c.ptr())) {
					_1a6ce2db1_SetBool(_10813_c.ptr(), true);
					(*((*(_self_))._field_model))=jule::Any(_10813_c, &__jule_any_type19);
				} else {
					(*((*(_self_))._field_model))=(*((*((*(_9028_m))))._field_Left))._field_Model;
				};
				return true;;
			}
		}
		else {
			_case_begin_1bd8cde91:;
		}
		_match_end_1bd8cde3b:;
	};
	return false;;
}



inline jule::Bool _1ac958a87_strCond(_1ac9579cb_exprOptimizer* _self_, jule::Ptr<_1ac706505_BinaryExprModel> _14326_m) {
	jule::Ptr<_1ac86260b_Prim> _1449_lp = _1ac85c183_Prim((*((*(_14326_m))._field_Left))._field_Kind.ptr());;
	if (((_1449_lp == nullptr) || (!(_1ac865a93_IsStr(_1449_lp.ptr()))))) {
		return false;;
	};
	if ((((*((*(_14326_m))._field_Op))._field_Id != static_cast<jule::U64>(50LLU)) && ((*((*(_14326_m))._field_Op))._field_Id != static_cast<jule::U64>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_14326_m))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1bd8d5508:;
			{
				std::swap((*(_14326_m))._field_Left, (*(_14326_m))._field_Right);
			}
		}
		else {
			_case_begin_1bd8d4ae0:;
			{
				{
					auto &_match_expr{ (*((*(_14326_m))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1bd8d3737:;
						{
							goto _match_end_1bd8d53e8;
						}
					}
					else {
						_case_begin_1bd8d544d:;
						{
							return false;;
						}
					}
					_match_end_1bd8d53e8:;
				};
			}
		}
		_match_end_1bd8d4a8a:;
	};
	jule::Ptr<_1a6cde8d5_Const> _16413_c = (*((*(_14326_m))._field_Right))._field_Model.cast_ptr<_1a6cde8d5_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ (*((*(_14326_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1bd8d740b:;
			{
				if ((_1a6ce1a5d_ReadStr(_16413_c.ptr())).empty()) {
					jule::Any _16821_model = jule::Any(jule::new_ptr<_1ac94d8c3_EmptyCompareExprModel>(_1ac94d8c3_EmptyCompareExprModel{._field_Expr=(*((*(_14326_m))._field_Left))._field_Model, ._field_Neg=false}), &__jule_any_type124);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_16821_model))))));
					goto _match_end_1bd8d7384;
				};
				jule::Any _17517_model = jule::Any(jule::new_ptr<_1ac94e1ed_StrCompExprModel>(_1ac94e1ed_StrCompExprModel{._field_Left=(*((*(_14326_m))._field_Left))._field_Model, ._field_Right=_16413_c, ._field_NotEq=false}), &__jule_any_type125);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_17517_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bd8d7483:;
			{
				if ((_1a6ce1a5d_ReadStr(_16413_c.ptr())).empty()) {
					jule::Any _18321_model = jule::Any(jule::new_ptr<_1ac94d8c3_EmptyCompareExprModel>(_1ac94d8c3_EmptyCompareExprModel{._field_Expr=(*((*(_14326_m))._field_Left))._field_Model, ._field_Neg=true}), &__jule_any_type124);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_18321_model))))));
					goto _match_end_1bd8d7384;
				};
				jule::Any _19017_model = jule::Any(jule::new_ptr<_1ac94e1ed_StrCompExprModel>(_1ac94e1ed_StrCompExprModel{._field_Left=(*((*(_14326_m))._field_Left))._field_Model, ._field_Right=_16413_c, ._field_NotEq=true}), &__jule_any_type125);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_19017_model))))));
			}
		}
		_match_end_1bd8d7384:;
	};
	return true;;
}



inline jule::Bool _1ac95903d_tryNeutralElement1(_1ac9579cb_exprOptimizer* _self_, jule::Ptr<_1ac706505_BinaryExprModel>* _20038_m, jule::Ptr<_1a6cde8d5_Const> _20063_c, jule::Ptr<_1ac70600a_OperandExprModel>* _20075_nc) {
	if (_1a6ce4159_IsStr(_20063_c.ptr())) {
		if ((!(_1ac962d8d_Str))) {
			return false;;
		};
		if (((_1a6ce1a5d_ReadStr(_20063_c.ptr())).empty() && ((*((*((*(_20038_m))))._field_Op))._field_Id == static_cast<jule::U64>(60LLU)))) {
			(*((*(_self_))._field_model))=(*((*(_20075_nc))))._field_Model;
			return true;;
		};
		return false;;
	};
	if (((!(_1ac961d9d_Math)) || (_1a6ce2597_AsF64(_20063_c.ptr()) != 0LL))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_20038_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1bd8e0bb7:;
			{
				if (((*(_20075_nc)) == (*((*(_20038_m))))._field_Left)) {
					(*((*(_self_))._field_model))=(*((*(_20075_nc))))._field_Model;
					return true;;
				};
				(*((*(_self_))._field_model))=jule::Any(_20063_c, &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1bd8e1866:;
			{
				_1a6ce2850_SetI64(_20063_c.ptr(), 0LL);
				(*((*(_self_))._field_model))=jule::Any(_20063_c, &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1bd8e18cc:;
			{
				(*((*(_self_))._field_model))=(*((*(_20075_nc))))._field_Model;
				return true;;
			}
		}
		_match_end_1bd8e1756:;
	};
	return false;;
}



inline jule::Bool _1ac95937e_tryNeutralElement(_1ac9579cb_exprOptimizer* _self_, jule::Ptr<_1ac706505_BinaryExprModel>* _24437_m) {
	{
		auto &_match_expr{ (*((*((*(_24437_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1bd8e4b22:;
			{
				jule::Ptr<_1a6cde8d5_Const> _24817_c = (*((*((*(_24437_m))))._field_Left))._field_Model.cast_ptr<_1a6cde8d5_Const>(&__jule_any_type19);;
				return _1ac95903d_tryNeutralElement1(_self_, _24437_m, _24817_c, &((*((*(_24437_m))))._field_Right));;
			}
		}
		_match_end_1bd8e4aab:;
	};
	{
		auto &_match_expr{ (*((*((*(_24437_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1bd8e5c00:;
			{
				jule::Ptr<_1a6cde8d5_Const> _25317_c = (*((*((*(_24437_m))))._field_Right))._field_Model.cast_ptr<_1a6cde8d5_Const>(&__jule_any_type19);;
				return _1ac95903d_tryNeutralElement1(_self_, _24437_m, _25317_c, &((*((*(_24437_m))))._field_Left));;
			}
		}
		_match_end_1bd8e5b9a:;
	};
	return false;;
}



inline void _1ac959637_binary(_1ac9579cb_exprOptimizer* _self_, jule::Ptr<_1ac706505_BinaryExprModel> _25925_m) {
	static__1ac9580b4_optimize(&((*((*(_25925_m))._field_Left))._field_Model));
	static__1ac9580b4_optimize(&((*((*(_25925_m))._field_Right))._field_Model));
	if (_1ac962ac4_Cond) {
		{
			
			if (_1ac958a87_strCond(_self_, _25925_m) || _1ac958746_boolCond(_self_, &(_25925_m)) || _1ac958405_selfCmpCond(_self_, &(_25925_m))) {
				_case_begin_1bd8e8ad2:;
				{
					return;;
				}
			}
			_match_end_1bd8e8a16:;
		};
	};
	if (_1ac95937e_tryNeutralElement(_self_, &(_25925_m))) {
		return;;
	};
	if ((!(_1ac961d9d_Math))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_25925_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1bd8e993a:;
			{
				goto _match_end_1bd8e9d36;
			}
		}
		else {
			_case_begin_1bd8e9d8b:;
			{
				return;;
			}
		}
		_match_end_1bd8e9d36:;
	};
	jule::Ptr<_1ac86260b_Prim> _2929_lp = _1ac85c183_Prim((*((*(_25925_m))._field_Left))._field_Kind.ptr());;
	if ((_2929_lp == nullptr)) {
		return;;
	};
	jule::Ptr<_1ac86260b_Prim> _2969_rp = _1ac85c183_Prim((*((*(_25925_m))._field_Right))._field_Kind.ptr());;
	if ((_2969_rp == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_25925_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1bd8ec8e9:;
			{
				jule::Bool _30313_ok = false;;
				jule::U64 _30317_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1ac960929_checkForBitShiftOpt(&((*(_25925_m))._field_Left), &((*(_25925_m))._field_Right));
					_30313_ok = __jule_assign_result.__jule_result_arg0;
					_30317_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_30313_ok) {
					(*((*(_25925_m))._field_Op))._field_Id=static_cast<jule::U64>(56LLU);
					(*((*(_25925_m))._field_Op))._field_Kind=jule::Str::lit("<<", 2);
					jule::Ptr<_1a6cde8d5_Const> _30721_c = (*((*(_25925_m))._field_Right))._field_Model.cast_ptr<_1a6cde8d5_Const>(&__jule_any_type19);;
					_1a6ce2b08_SetU64(_30721_c.ptr(), _30317_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1bd8ec542:;
			{
				jule::Bool _31413_ok = false;;
				jule::U64 _31417_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1ac960929_checkForBitShiftOpt(&((*(_25925_m))._field_Left), &((*(_25925_m))._field_Right));
					_31413_ok = __jule_assign_result.__jule_result_arg0;
					_31417_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_31413_ok) {
					(*((*(_25925_m))._field_Op))._field_Id=static_cast<jule::U64>(57LLU);
					(*((*(_25925_m))._field_Op))._field_Kind=jule::Str::lit(">>", 2);
					jule::Ptr<_1a6cde8d5_Const> _31821_c = (*((*(_25925_m))._field_Right))._field_Model.cast_ptr<_1a6cde8d5_Const>(&__jule_any_type19);;
					_1a6ce2b08_SetU64(_31821_c.ptr(), _31417_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1bd8ec5a8:;
			{
				jule::Ptr<_1a6cde8d5_Const> _32517_c = (*((*(_25925_m))._field_Right))._field_Model.cast_ptr<_1a6cde8d5_Const>(&__jule_any_type19);;
				if ((_1a6ce2597_AsF64(_32517_c.ptr()) == 2LL)) {
					(*((*(_25925_m))._field_Op))._field_Id=static_cast<jule::U64>(65LLU);
					(*((*(_25925_m))._field_Op))._field_Kind=jule::Str::lit("&", 1);
					_1a6ce2850_SetI64(_32517_c.ptr(), 1LL);
					return;;
				};
			}
		}
		else {
			_case_begin_1bd8ec4cb:;
			{
				return;;
			}
		}
		_match_end_1bd8ec476:;
	};
	jule::Any _34013_model = jule::Any(jule::new_ptr<_1ac94ea7d_UnsafeBinaryExprModel>(_1ac94ea7d_UnsafeBinaryExprModel{._field_Node=_25925_m}), &__jule_any_type126);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_34013_model))))));
}



inline void _1ac9598e0_unary(_1ac9579cb_exprOptimizer* _self_, jule::Ptr<_1ac7068ce_UnaryExprModel> _34424_m) {
	static__1ac9580b4_optimize(&((*((*(_34424_m))._field_Expr))._field_Model));
	if ((!(_1ac9626ea_Ptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_34424_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1bd906e31:;
			{
				{
					auto &_match_expr{ (*((*(_34424_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type110) {
						_case_begin_1bd907a9c:;
						{
							jule::Ptr<_1ac7068ce_UnaryExprModel> _35321_um = (*((*(_34424_m))._field_Expr))._field_Model.cast_ptr<_1ac7068ce_UnaryExprModel>(&__jule_any_type110);;
							if (((*((*(_35321_um))._field_Op))._field_Id == static_cast<jule::U64>(65LLU))) {
								(*((*(_self_))._field_model))=(*((*(_35321_um))._field_Expr))._field_Model;
							};
						}
					}
					_match_end_1bd907a36:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1bd906e97:;
			{
				{
					auto &_match_expr{ (*((*(_34424_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1bd909d46:;
						{
							jule::Ptr<_1ac7bb015_Var> _36121_v = (*((*(_34424_m))._field_Expr))._field_Model.cast_ptr<_1ac7bb015_Var>(&__jule_any_type8);;
							if ((*(_36121_v))._field_Reference) {
								jule::Any _36325_model = jule::Any(jule::new_ptr<_1ac94dbc0_RefExprModel>(_1ac94dbc0_RefExprModel{._field_Var=_36121_v}), &__jule_any_type127);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_36325_model))))));
							};
						}
					}
					_match_end_1bd909cd0:;
				};
			}
		}
		_match_end_1bd906d21:;
	};
}



inline void _1ac959b98_structureLit(_1ac9579cb_exprOptimizer* _self_, jule::Ptr<_1ac7072a3_StructLitExprModel> _37031_m) {
	{
		auto expr = &((*(_37031_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd90a176:;
		if (it != expr_end) {
			jule::Ptr<_1ac706e0c_StructArgExprModel> _37121_arg = *it;
			{
				static__1ac9580b4_optimize(&((*((*(_37121_arg))._field_Expr))._field_Model));
			}
			_iter_next_1bd90a176:;
			++it;
			goto _iter_begin_1bd90a176;
		}
		_iter_end_1bd90a176:;
	};
}



inline void _1ac959e51_allocStructure(_1ac9579cb_exprOptimizer* _self_, jule::Ptr<_1ac7075a0_AllocStructLitExprModel> _37633_m) {
	_1ac959b98_structureLit(_self_, (*(_37633_m))._field_Lit);
}



inline void _1ac95a209_casting(_1ac9579cb_exprOptimizer* _self_, jule::Ptr<_1ac707b33_CastingExprModel> _38026_m) {
	static__1ac9580b4_optimize(&((*(_38026_m))._field_Expr));
}



inline void _1ac95a4b2_args(_1ac9579cb_exprOptimizer* _self_, jule::Slice<jule::Any>* _38424_args) {
	{
		auto expr = _38424_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd90db19:;
		if (it != expr_end) {
			jule::I64 _38514_i = it - expr->begin();
			jule::Any _38521_arg = *it;
			{
				static__1ac9580b4_optimize(&(_38521_arg));
				(*(_38424_args))[_38514_i]=_38521_arg;
			}
			_iter_next_1bd90db19:;
			++it;
			_38514_i++;
			goto _iter_begin_1bd90db19;
		}
		_iter_end_1bd90db19:;
	};
}



inline void _1ac95a76a_scope(_1ac9579cb_exprOptimizer* _self_, jule::Ptr<_1ac756126_Scope>* _39125_s) {
	jule::Ptr<_1ac95183d_scopeOptimizer> _39213_scopt = static__1ac951d7c_new((*(_39125_s)));;
	_1ac955721_optimize(_39213_scopt.ptr());
}



inline void _1ac95aa23_funcCall(_1ac9579cb_exprOptimizer* _self_, jule::Ptr<_1ac7084d5_FnCallExprModel> _39627_m) {
	static__1ac9580b4_optimize(&((*(_39627_m))._field_Expr));
	_1ac95a4b2_args(_self_, &((*(_39627_m))._field_Args));
	if (((*(_39627_m))._field_Except != nullptr)) {
		_1ac95a76a_scope(_self_, &((*(_39627_m))._field_Except));
	};
}



inline void _1ac95accb_slice(_1ac9579cb_exprOptimizer* _self_, jule::Ptr<_1ac7088ae_SliceExprModel> _40424_m) {
	_1ac95a4b2_args(_self_, &((*(_40424_m))._field_Elems));
}



inline void _1ac95b084_array(_1ac9579cb_exprOptimizer* _self_, jule::Ptr<_1ac70b906_ArrayExprModel> _40824_m) {
	if ((((*(_40824_m))._field_Elems.len() == 2LL) && ((*(_40824_m))._field_Elems[1LL] == nullptr))) {
		jule::Any _41017_elem = (*(_40824_m))._field_Elems[0LL];;
		static__1ac9580b4_optimize(&(_41017_elem));
		(*(_40824_m))._field_Elems[0LL]=_41017_elem;
	};
	_1ac95a4b2_args(_self_, &((*(_40824_m))._field_Elems));
}



inline void _1ac95b33c_indexing(_1ac9579cb_exprOptimizer* _self_, jule::Ptr<_1ac708d65_IndexingExprModel> _41727_m) {
	static__1ac9580b4_optimize(&((*((*(_41727_m))._field_Expr))._field_Model));
	static__1ac9580b4_optimize(&((*((*(_41727_m))._field_Index))._field_Model));
	if ((!(_1ac962167_Access))) {
		return;;
	};
	jule::Bool _4239_array = (_1ac85ce53_Arr((*((*(_41727_m))._field_Expr))._field_Kind.ptr()) != nullptr);;
	if ((_4239_array && _1ac824c83_IsConst((*(_41727_m))._field_Index.ptr()))) {
		jule::Any _42617_model = jule::Any(jule::new_ptr<_1ac94ed7a_UnsafeIndexingExprModel>(_1ac94ed7a_UnsafeIndexingExprModel{._field_Node=_41727_m}), &__jule_any_type128);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_42617_model))))));
		return;;
	};
	{
		auto &_match_expr{ (*((*(_41727_m))._field_Index))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bd917e31:;
			{
				jule::Ptr<_1ac7bb015_Var> _43213_i = (*((*(_41727_m))._field_Index))._field_Model.cast_ptr<_1ac7bb015_Var>(&__jule_any_type8);;
				if (((*(_43213_i))._field_Mutable || ((*(_43213_i))._field_IterRelation == nullptr))) {
					goto _match_end_1bd917dba;
				};
				{
					auto &_match_expr{ (*((*(_41727_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1bd919c02:;
						{
							jule::Ptr<_1ac7bb015_Var> _43817_r = (*((*(_41727_m))._field_Expr))._field_Model.cast_ptr<_1ac7bb015_Var>(&__jule_any_type8);;
							if (((*((*(_43213_i))._field_IterRelation))._field_Range == _43817_r)) {
								jule::Any _44125_model = jule::Any(jule::new_ptr<_1ac94ed7a_UnsafeIndexingExprModel>(_1ac94ed7a_UnsafeIndexingExprModel{._field_Node=_41727_m}), &__jule_any_type128);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_44125_model))))));
							};
						}
					}
					_match_end_1bd919b8b:;
				};
			}
		}
		_match_end_1bd917dba:;
	};
}



inline void _1ac95b5e5_anonFunc(_1ac9579cb_exprOptimizer* _self_, jule::Ptr<_1ac70923e_AnonFnExprModel> _44827_m) {
	_1ac95a76a_scope(_self_, &((*((*(_44827_m))._field_Func))._field_Scope));
}



inline void _1ac95b89d_mapExpr(_1ac9579cb_exprOptimizer* _self_, jule::Ptr<_1ac709abe_MapExprModel> _45226_m) {
	{
		auto expr = &((*(_45226_m))._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd91cb17:;
		if (it != expr_end) {
			jule::Ptr<_1ac709618_KeyValPairExprModel> _45321_pair = *it;
			{
				static__1ac9580b4_optimize(&((*(_45321_pair))._field_Key));
				static__1ac9580b4_optimize(&((*(_45321_pair))._field_Val));
			}
			_iter_next_1bd91cb17:;
			++it;
			goto _iter_begin_1bd91cb17;
		}
		_iter_end_1bd91cb17:;
	};
}



inline void _1ac95bb56_slicing(_1ac9579cb_exprOptimizer* _self_, jule::Ptr<_1ac70a152_SlicingExprModel> _45926_m) {
	static__1ac9580b4_optimize(&((*(_45926_m))._field_Expr));
	static__1ac9580b4_optimize(&((*(_45926_m))._field_Left));
	if (((*(_45926_m))._field_Right != nullptr)) {
		static__1ac9580b4_optimize(&((*(_45926_m))._field_Right));
	};
}



inline void _1ac95be0e_traitSub(_1ac9579cb_exprOptimizer* _self_, jule::Ptr<_1ac70a6d5_TraitSubIdentExprModel> _46727_m) {
	static__1ac9580b4_optimize(&((*(_46727_m))._field_Expr));
}



inline void _1ac95c1b7_structureSub(_1ac9579cb_exprOptimizer* _self_, jule::Ptr<_1ac70b076_StructSubIdentExprModel> _47131_m) {
	static__1ac9580b4_optimize(&((*((*(_47131_m))._field_Expr))._field_Model));
}



inline void _1ac95c470_tuple(_1ac9579cb_exprOptimizer* _self_, jule::Ptr<_1ac70bc03_TupleExprModel> _47524_m) {
	{
		auto expr = &((*(_47524_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd920e4a:;
		if (it != expr_end) {
			jule::Ptr<_1ac8243ae_Data> _47621_d = *it;
			{
				static__1ac9580b4_optimize(&((*(_47621_d))._field_Model));
			}
			_iter_next_1bd920e4a:;
			++it;
			goto _iter_begin_1bd920e4a;
		}
		_iter_end_1bd920e4a:;
	};
}



inline void _1ac95c728_newCall(_1ac9579cb_exprOptimizer* _self_, jule::Ptr<_1ac70c880_BuiltinNewCallExprModel> _48126_m) {
	if (((*(_48126_m))._field_Init != nullptr)) {
		static__1ac9580b4_optimize(&((*(_48126_m))._field_Init));
	};
}



inline void _1ac95c9d1_outCall(_1ac9579cb_exprOptimizer* _self_, jule::Ptr<_1ac70c0cc_BuiltinOutCallExprModel> _48726_m) {
	static__1ac9580b4_optimize(&((*(_48726_m))._field_Expr));
}



inline void _1ac95cc89_outlnCall(_1ac9579cb_exprOptimizer* _self_, jule::Ptr<_1ac70c4a6_BuiltinOutlnCallExprModel> _49128_m) {
	static__1ac9580b4_optimize(&((*(_49128_m))._field_Expr));
}



inline void _1ac95d042_panicCall(_1ac9579cb_exprOptimizer* _self_, jule::Ptr<_1ac70cc59_BuiltinPanicCallExprModel> _49528_m) {
	static__1ac9580b4_optimize(&((*(_49528_m))._field_Expr));
}



inline void _1ac95d2ea_assertCall(_1ac9579cb_exprOptimizer* _self_, jule::Ptr<_1ac70d210_BuiltinAssertCallExprModel> _49929_m) {
	static__1ac9580b4_optimize(&((*(_49929_m))._field_Expr));
}



inline void _1ac95d5a3_errorCall(_1ac9579cb_exprOptimizer* _self_, jule::Ptr<_1ac70ed16_BuiltinErrorCallExprModel> _50328_m) {
	static__1ac9580b4_optimize(&((*((*(_50328_m))._field_Err))._field_Model));
}



inline void _1ac95d85b_makeCall(_1ac9579cb_exprOptimizer* _self_, jule::Ptr<_1ac70d6b6_BuiltinMakeCallExprModel> _50727_m) {
	if (((*(_50727_m))._field_Len != nullptr)) {
		static__1ac9580b4_optimize(&((*(_50727_m))._field_Len));
	};
	if (((*(_50727_m))._field_Cap != nullptr)) {
		static__1ac9580b4_optimize(&((*(_50727_m))._field_Cap));
	};
}



inline void _1ac95db14_appendCall(_1ac9579cb_exprOptimizer* _self_, jule::Ptr<_1ac70da90_BuiltinAppendCallExprModel> _51629_m) {
	static__1ac9580b4_optimize(&((*(_51629_m))._field_Dest));
	static__1ac9580b4_optimize(&((*(_51629_m))._field_Elements));
}



inline void _1ac95ddbc_lenCall(_1ac9579cb_exprOptimizer* _self_, jule::Ptr<_1ac70dd8c_BuiltinLenCallExprModel> _52126_m) {
	static__1ac9580b4_optimize(&((*((*(_52126_m))._field_Expr))._field_Model));
}



inline void _1ac95e175_capCall(_1ac9579cb_exprOptimizer* _self_, jule::Ptr<_1ac70e189_BuiltinCapCallExprModel> _52526_m) {
	static__1ac9580b4_optimize(&((*((*(_52526_m))._field_Expr))._field_Model));
}



inline void _1ac95e42d_deleteCall(_1ac9579cb_exprOptimizer* _self_, jule::Ptr<_1ac70e563_BuiltinDeleteCallExprModel> _52929_m) {
	static__1ac9580b4_optimize(&((*((*(_52929_m))._field_Dest))._field_Model));
	if (((*(_52929_m))._field_Key != nullptr)) {
		static__1ac9580b4_optimize(&((*((*(_52929_m))._field_Key))._field_Model));
	};
}



inline void _1ac95e6d6_sizeof(_1ac9579cb_exprOptimizer* _self_, jule::Ptr<_1ac70a8c2_SizeofExprModel> _53625_m) {
	static__1ac9580b4_optimize(&((*(_53625_m))._field_Expr));
}



inline void _1ac95e98e_alignof(_1ac9579cb_exprOptimizer* _self_, jule::Ptr<_1ac710542_AlignofExprModel> _54026_m) {
	static__1ac9580b4_optimize(&((*(_54026_m))._field_Expr));
}



inline void _1ac95ec47_integratedToStr(_1ac9579cb_exprOptimizer* _self_, jule::Ptr<_1ac710b3b_IntegratedToStrExprModel> _54434_m) {
	static__1ac9580b4_optimize(&((*(_54434_m))._field_Expr));
}



inline void _1ac960000_free(_1ac9579cb_exprOptimizer* _self_, jule::Ptr<_1ac711312_FreeExprModel> _54823_m) {
	static__1ac9580b4_optimize(&((*(_54823_m))._field_Expr));
}



inline void _1ac9602a8_backendEmit(_1ac9579cb_exprOptimizer* _self_, jule::Ptr<_1ac711015_BackendEmitExprModel> _55230_m) {
	_1ac95a4b2_args(_self_, &((*(_55230_m))._field_Exprs));
}



inline void _1ac9604a6_do(_1ac9579cb_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_model)) };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1bd92aeaa:;
			{
				_1ac959637_binary(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ac706505_BinaryExprModel>(&__jule_any_type111));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1bd92b021:;
			{
				_1ac9598e0_unary(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ac7068ce_UnaryExprModel>(&__jule_any_type110));
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1bd92b087:;
			{
				_1ac959b98_structureLit(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ac7072a3_StructLitExprModel>(&__jule_any_type94));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1bd92b10e:;
			{
				_1ac959e51_allocStructure(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ac7075a0_AllocStructLitExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1bd92b186:;
			{
				_1ac95a209_casting(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ac707b33_CastingExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1bd92b20d:;
			{
				_1ac95aa23_funcCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ac7084d5_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1bd92b285:;
			{
				_1ac95accb_slice(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ac7088ae_SliceExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1bd92b30c:;
			{
				_1ac95b084_array(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ac70b906_ArrayExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1bd92b384:;
			{
				_1ac95b33c_indexing(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ac708d65_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1bd92b40b:;
			{
				_1ac95b5e5_anonFunc(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ac70923e_AnonFnExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1bd92b483:;
			{
				_1ac95b89d_mapExpr(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ac709abe_MapExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1bd92b50a:;
			{
				_1ac95bb56_slicing(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ac70a152_SlicingExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1bd92b582:;
			{
				_1ac95be0e_traitSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ac70a6d5_TraitSubIdentExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1bd92b609:;
			{
				_1ac95c1b7_structureSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ac70b076_StructSubIdentExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1bd92b681:;
			{
				_1ac95c470_tuple(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ac70bc03_TupleExprModel>(&__jule_any_type81));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1bd92b708:;
			{
				_1ac95c9d1_outCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ac70c0cc_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1bd92b780:;
			{
				_1ac95cc89_outlnCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ac70c4a6_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1bd92b807:;
			{
				_1ac95c728_newCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ac70c880_BuiltinNewCallExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1bd92b87e:;
			{
				_1ac95d042_panicCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ac70cc59_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1bd92b906:;
			{
				_1ac95d2ea_assertCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ac70d210_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1bd92b97d:;
			{
				_1ac95d5a3_errorCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ac70ed16_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1bd92ba05:;
			{
				_1ac95d85b_makeCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ac70d6b6_BuiltinMakeCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1bd92ba7c:;
			{
				_1ac95db14_appendCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ac70da90_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1bd92bb04:;
			{
				_1ac95ddbc_lenCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ac70dd8c_BuiltinLenCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1bd92bb7b:;
			{
				_1ac95e175_capCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ac70e189_BuiltinCapCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1bd92bc03:;
			{
				_1ac95e42d_deleteCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ac70e563_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1bd92bc7a:;
			{
				_1ac95e6d6_sizeof(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ac70a8c2_SizeofExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1bd92bd02:;
			{
				_1ac95e98e_alignof(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ac710542_AlignofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1bd92bd79:;
			{
				_1ac95ec47_integratedToStr(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ac710b3b_IntegratedToStrExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1bd92be01:;
			{
				_1ac960000_free(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ac711312_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1bd92be78:;
			{
				_1ac9602a8_backendEmit(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ac711015_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_1bd92ac13:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ac9579cb_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ad3be0ac_Optimizer> static__1ad3be530_New(jule::Ptr<_1ad2253b9_IR>* _2624_ir) {
	return jule::new_ptr<_1ad3be0ac_Optimizer>(_1ad3be0ac_Optimizer{._field_ir=(*(_2624_ir))});;
}



inline void _1ad3be7d8_optimizeGlobal(_1ad3be0ac_Optimizer* _self_, jule::Ptr<_1ac7bb015_Var>* _3238_v) {
	if ((!((*((*(_3238_v))))._field_Binded))) {
		static__1ac9580b4_optimize(&((*((*((*((*(_3238_v))))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1ad3bea91_optimizeFunction(_1ad3be0ac_Optimizer* _self_, jule::Ptr<_1ac71426b_Fn>* _3840_func) {
	if ((*((*(_3840_func))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_3840_func))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd941dd3:;
		if (it != expr_end) {
			jule::Ptr<_1ac717170_FnIns> _4221_ins = *it;
			{
				jule::Ptr<_1ac95183d_scopeOptimizer> _4317_so = static__1ac951d7c_new((*(_4221_ins))._field_Scope);;
				_1ac955721_optimize(_4317_so.ptr());
			}
			_iter_next_1bd941dd3:;
			++it;
			goto _iter_begin_1bd941dd3;
		}
		_iter_end_1bd941dd3:;
	};
}



inline void _1ad3bed49_optimizeStruct(_1ad3be0ac_Optimizer* _self_, jule::Ptr<_1ac6ee377_Struct>* _4838_s) {
	if ((*((*(_4838_s))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_4838_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd9435bb:;
		if (it != expr_end) {
			jule::Ptr<_1ac702105_StructIns> _5221_ins = *it;
			{
				{
					auto expr = &((*(_5221_ins))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd943eb2:;
					if (it != expr_end) {
						jule::Ptr<_1ac701555_FieldIns> _5325_f = *it;
						{
							if (((*(_5325_f))._field_Default != nullptr)) {
								static__1ac9580b4_optimize(&((*((*(_5325_f))._field_Default))._field_Model));
							};
						}
						_iter_next_1bd943eb2:;
						++it;
						goto _iter_begin_1bd943eb2;
					}
					_iter_end_1bd943eb2:;
				};
				{
					auto expr = &((*(_5221_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd944413:;
					if (it != expr_end) {
						jule::Ptr<_1ac71426b_Fn> _5825_m = *it;
						{
							_1ad3bea91_optimizeFunction(_self_, &(_5825_m));
						}
						_iter_next_1bd944413:;
						++it;
						goto _iter_begin_1bd944413;
					}
					_iter_end_1bd944413:;
				};
			}
			_iter_next_1bd9435bb:;
			++it;
			goto _iter_begin_1bd9435bb;
		}
		_iter_end_1bd9435bb:;
	};
}



inline void _1ad3c0102_optimizeGlobals(_1ad3be0ac_Optimizer* _self_, jule::Ptr<_1ac77a832_Package>* _6439_p) {
	{
		auto expr = &((*((*(_6439_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd945b2e:;
		if (it != expr_end) {
			jule::Ptr<_1ac81e013_SymbolTable> _6521_f = *it;
			{
				{
					auto expr = &((*(_6521_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd94657a:;
					if (it != expr_end) {
						jule::Ptr<_1ac7bb015_Var> _6625_v = *it;
						{
							_1ad3be7d8_optimizeGlobal(_self_, &(_6625_v));
						}
						_iter_next_1bd94657a:;
						++it;
						goto _iter_begin_1bd94657a;
					}
					_iter_end_1bd94657a:;
				};
			}
			_iter_next_1bd945b2e:;
			++it;
			goto _iter_begin_1bd945b2e;
		}
		_iter_end_1bd945b2e:;
	};
}



inline void _1ad3c03aa_optimizeFunctions(_1ad3be0ac_Optimizer* _self_, jule::Ptr<_1ac77a832_Package>* _7241_p) {
	{
		auto expr = &((*((*(_7241_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd9461d4:;
		if (it != expr_end) {
			jule::Ptr<_1ac81e013_SymbolTable> _7321_f = *it;
			{
				{
					auto expr = &((*(_7321_f))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd9479bb:;
					if (it != expr_end) {
						jule::Ptr<_1ac71426b_Fn> _7425_func = *it;
						{
							_1ad3bea91_optimizeFunction(_self_, &(_7425_func));
						}
						_iter_next_1bd9479bb:;
						++it;
						goto _iter_begin_1bd9479bb;
					}
					_iter_end_1bd9479bb:;
				};
			}
			_iter_next_1bd9461d4:;
			++it;
			goto _iter_begin_1bd9461d4;
		}
		_iter_end_1bd9461d4:;
	};
}



inline void _1ad3c0663_optimizeStructs(_1ad3be0ac_Optimizer* _self_, jule::Ptr<_1ac77a832_Package>* _8039_p) {
	{
		auto expr = &((*((*(_8039_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd947625:;
		if (it != expr_end) {
			jule::Ptr<_1ac81e013_SymbolTable> _8121_f = *it;
			{
				{
					auto expr = &((*(_8121_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd948e0c:;
					if (it != expr_end) {
						jule::Ptr<_1ac6ee377_Struct> _8225_s = *it;
						{
							_1ad3bed49_optimizeStruct(_self_, &(_8225_s));
						}
						_iter_next_1bd948e0c:;
						++it;
						goto _iter_begin_1bd948e0c;
					}
					_iter_end_1bd948e0c:;
				};
			}
			_iter_next_1bd947625:;
			++it;
			goto _iter_begin_1bd947625;
		}
		_iter_end_1bd947625:;
	};
}



inline void _1ad3c091b_optimizePackage(_1ad3be0ac_Optimizer* _self_, jule::Ptr<_1ac77a832_Package>* _8839_p) {
	_1ad3c0102_optimizeGlobals(_self_, _8839_p);
	_1ad3c03aa_optimizeFunctions(_self_, _8839_p);
	_1ad3c0663_optimizeStructs(_self_, _8839_p);
}



inline void _1ad3c0b19_Optimize(_1ad3be0ac_Optimizer* _self_) {
	_1ad3c0d8e_detectEnabled();
	if (_1ac9617c6_Deadcode) {
		_1ad3b1313_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1ad3bdd9d_scopeEnabled || _1ad3bdaa1_exprEnabled)) {
		{
			auto expr = &((*((*(_self_))._field_ir))._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd94ae42:;
			if (it != expr_end) {
				jule::Ptr<_1ac77790b_ImportInfo> _10425_u = *it;
				{
					if ((!((*(_10425_u))._field_Binded))) {
						_1ad3c091b_optimizePackage(_self_, &((*(_10425_u))._field_Package));
					};
				}
				_iter_next_1bd94ae42:;
				++it;
				goto _iter_begin_1bd94ae42;
			}
			_iter_end_1bd94ae42:;
		};
		_1ad3c091b_optimizePackage(_self_, &((*((*(_self_))._field_ir))._field_Main));
	};
	if (_1ac9617c6_Deadcode) {
		_1ad3b68ac_EliminateScopes(&((*(_self_))._field_ir));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ad3be0ac_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1ad3c1411_Reset(void) {
	jule::out(jule::Str::lit("\033[0m", 4));
}



inline void static__1ad3e5be9_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__1ad3c1411_Reset();
}





std::ostream &operator<<(std::ostream &_Stream, _1ad3e6d1b_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1ad3e8713_LogFlat(_1a756d63b_Log* _1424_l) {
	jule::outln((*(_1424_l))._field_Text);
}



inline void static__1ad3e8944_LogError(_1a756d63b_Log* _1925_l) {
	jule::out(jule::Str::lit("\033[31m", 5));
	jule::out(jule::Str::lit("error: ", 7));
	jule::out((*(_1925_l))._field_Text);
	static__1ad3c1411_Reset();
	if (((*(_1925_l))._field_Path.len() != 0LL)) {
		jule::out(jule::Str::lit("\n  --> ", 7));
		jule::out((*(_1925_l))._field_Path);
	};
	if ((((*(_1925_l))._field_Row != 0LL) && ((*(_1925_l))._field_Column != 0LL))) {
		jule::out(jule::Str::lit(":", 1));
		jule::out(_1dbba39c8_Itoa((*(_1925_l))._field_Row));
		jule::out(jule::Str::lit(":", 1));
		jule::out(_1dbba39c8_Itoa((*(_1925_l))._field_Column));
	};
	if (((*(_1925_l))._field_Line.len() != 0LL)) {
		jule::Str _3617_line = _1a69410e7_TrimLeft((*(_1925_l))._field_Line, jule::Str::lit("\r\n\v\b ", 5));;
		jule::I64 _3717_offset = (((*(_1925_l))._field_Line.len() - _3617_line.len()) + 1LL);;
		jule::I64 _3817_oldLen = _3617_line.len();;
		_3617_line=_1a69410e7_TrimLeft(_3617_line, jule::Str::lit("\t", 1));
		if ((_3817_oldLen != _3617_line.len())) {
			_3717_offset+=((_3817_oldLen - _3617_line.len()) << 3LLU);
		};
		jule::out(jule::Str::lit("\n  ", 3));
		jule::Str _4413_row = _1dbba39c8_Itoa((*(_1925_l))._field_Row);;
		jule::out(_4413_row);
		jule::out(jule::Str::lit(" | ", 3));
		jule::out(_3617_line);
		jule::out(jule::Str::lit("\n  ", 3));
		jule::out(_1a6938c27_Repeat(jule::Str::lit(" ", 1), static_cast<jule::I64>(_4413_row.len())));
		jule::out(jule::Str::lit(" | ", 3));
		jule::out(_1a6938c27_Repeat(jule::Str::lit(" ", 1), static_cast<jule::I64>(((*(_1925_l))._field_Column - _3717_offset))));
		jule::out(jule::Str::lit("^", 1));
		if (((*(_1925_l))._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str::lit("\n  ", 3));
			jule::out(_1a6938c27_Repeat(jule::Str::lit(" ", 1), static_cast<jule::I64>(_4413_row.len())));
			jule::out(jule::Str::lit(" | ", 3));
			static__1ad3e5be9_Print(jule::Str::lit("\033[95m", 5), jule::Str::lit("suggestion: ", 12));
			jule::out((*(_1925_l))._field_Suggestion);
		};
	};
	jule::outln(jule::Str::lit("\n", 1));
}



inline void static__1ad3e8b75_Log(_1a756d63b_Log* _6520_l) {
	{
		auto &_match_expr{ (*(_6520_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1bd958cda:;
			{
				static__1ad3e8713_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1bd958d62:;
			{
				static__1ad3e8944_LogError(_6520_l);
			}
		}
		_match_end_1bd958c1e:;
	};
}



inline void static__1ad3e8da6_PrintLogs(jule::Slice<_1a756d63b_Log>* _7526_logs) {
	{
		auto expr = _7526_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd95529d:;
		if (it != expr_end) {
			_1a756d63b_Log *_7616_l = it;
			{
				static__1ad3e8b75_Log(_7616_l);
			}
			_iter_next_1bd95529d:;
			++it;
			goto _iter_begin_1bd95529d;
		}
		_iter_end_1bd95529d:;
	};
	jule::out(jule::Str::lit("=== ", 4));
	jule::out(_1dbba39c8_Itoa(static_cast<jule::I64>((*(_7526_logs)).len())));
	jule::outln(jule::Str::lit(" error generated ===", 20));
}





std::ostream &operator<<(std::ostream &_Stream, _1ad3e8438_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ba9ce8d0_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _1ba9d00a6_Time static__1ba9d045d_Unix(jule::U64 _9120_sec) {
	return _1ba9d00a6_Time{._field_sec=_9120_sec};;
}



inline _1ba9d00a6_Time static__1ba9d066c_Now(void) {
	return static__1ba9d045d_Unix(static_cast<jule::U64>(_1ba9d2196_unix()));;
}



inline _1ba9ce8d0_AbsTime _1ba9d1d55_Abs(_1ba9d00a6_Time* _self_) {
	jule::U64 _1279_secs = ((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _12813_days = (_1279_secs / 86400LLU);;
	jule::U64 _12913_remSecs = (_1279_secs % 86400LL);;
	if ((_12913_remSecs < 0LLU)) {
		_12913_remSecs+=86400LLU;
		(_12813_days)--;
	};
	jule::U64 _13513_qcCycles = (_12813_days / 146097LLU);;
	jule::U64 _13613_remDays = (_12813_days % 146097LL);;
	if ((_13613_remDays < 0LLU)) {
		_13613_remDays+=146097LLU;
		(_13513_qcCycles)--;
	};
	jule::U64 _14213_cCycles = (_13613_remDays / 36524LLU);;
	if ((_14213_cCycles == 4LLU)) {
		(_14213_cCycles)--;
	};
	_13613_remDays-=(_14213_cCycles * 36524LLU);
	jule::U64 _14813_qCycles = (_13613_remDays / 1461LLU);;
	if ((_14813_qCycles == 25LLU)) {
		(_14813_qCycles)--;
	};
	_13613_remDays-=(_14813_qCycles * 1461LLU);
	jule::U64 _15413_remYears = (_13613_remDays / 365LLU);;
	if ((_15413_remYears == 4LLU)) {
		(_15413_remYears)--;
	};
	_13613_remDays-=(_15413_remYears * 365LLU);
	jule::U64 _16013_leap = static_cast<jule::U64>(0LLU);;
	if (((_15413_remYears == 0LLU) && ((_14813_qCycles > 0LLU) || (_14213_cCycles == 0LLU)))) {
		_16013_leap=1LLU;
	};
	jule::U64 _16413_yDay = (((_13613_remDays + 31LLU) + 28LLU) + _16013_leap);;
	if ((_16413_yDay >= (365LLU + _16013_leap))) {
		_16413_yDay-=(365LLU + _16013_leap);
	};
	jule::U64 _16913_months = static_cast<jule::U64>(0LLU);;
	for (; (_1ba9cdda7_mdays[static_cast<jule::I64>(_16913_months)] <= _13613_remDays); (_16913_months)++) {
		{
			_13613_remDays-=_1ba9cdda7_mdays[static_cast<jule::I64>(_16913_months)];
		}
	_iter_next_1bd98a6bd:;
	}
	_iter_end_1bd98a6bd:;;
	_1ba9ce8d0_AbsTime _17413_t = _1ba9ce8d0_AbsTime{};;
	_17413_t._field_Year=static_cast<jule::U64>(((((_15413_remYears + (4LLU * _14813_qCycles)) + (100LLU * _14213_cCycles)) + (400LLU * _13513_qcCycles)) + 100LLU));
	_17413_t._field_Month=static_cast<jule::U64>((_16913_months + 2LLU));
	if ((_17413_t._field_Month >= 12LLU)) {
		_17413_t._field_Month-=12LLU;
		(_17413_t._field_Year)++;
	};
	_17413_t._field_Month+=1LLU;
	_17413_t._field_Year+=1900LLU;
	_17413_t._field_Day=static_cast<jule::U64>((_13613_remDays + 1LLU));
	_17413_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12813_days) % 7LL));
	if ((_17413_t._field_WeekDay < 0LLU)) {
		_17413_t._field_WeekDay+=7LLU;
	};
	_17413_t._field_YearDay=_16413_yDay;
	_17413_t._field_Hour=static_cast<jule::U64>((_12913_remSecs / 3600LLU));
	_17413_t._field_Minute=static_cast<jule::U64>(((_12913_remSecs / 60LLU) % 60LL));
	_17413_t._field_Second=static_cast<jule::U64>((_12913_remSecs % 60LL));
	return _17413_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ba9d00a6_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ad826c0c_scopeCoder> static__1ad827328_new(jule::Ptr<_1ba9d9555_ObjectCoder>* _6624_oc) {
	return jule::new_ptr<_1ad826c0c_scopeCoder>(_1ad826c0c_scopeCoder{._field_oc=(*(_6624_oc))});;
}



inline void _1bba7ad65_iterHead(jule::Ptr<_1ad826c0c_scopeCoder> _self_, jule::Ptr<_1ac757e5d_RangeIter>* _7332_it, jule::Bool* _7344_ref, jule::Str _7355_begin) {
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ba9da1b0_addIndent((*(_self_))._field_oc);
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1ac9614b8_Copy && _1ad82d362_isCopyOptimizable(&((*((*(_7332_it))))._field_Expr)))) {
		(*(_7344_ref))=true;
		{
			auto &_match_expr{ (*((*((*(_7332_it))))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1bad80654:;
				{
					jule::Ptr<_1ac7bb015_Var> _8217_v = (*((*((*(_7332_it))))._field_Expr))._field_Model.cast_ptr<_1ac7bb015_Var>(&__jule_any_type8);;
					if ((*(_8217_v))._field_Reference) {
						_1ad83cbbd_model((*((*(_self_))._field_oc))._field_ec, (*((*((*(_7332_it))))._field_Expr))._field_Model);
						goto _match_end_1bad82920;
					};
					goto _case_begin_1bad82975;
				}
			}
			else {
				_case_begin_1bad82975:;
				{
					_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1ad83cbbd_model((*((*(_self_))._field_oc))._field_ec, (*((*((*(_7332_it))))._field_Expr))._field_Model);
					_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1bad82920:;
		};
	} else {
		_1ad8341d1_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_7332_it))))._field_Expr))._field_Model);
	};
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("auto it = expr", 14));
	if ((*(_7344_ref))) {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("auto expr_end = expr", 20));
	if ((*(_7344_ref))) {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("end();\n", 7));
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ba9d9c09_write((*(_self_))._field_oc, _7355_begin);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("if (it != expr_end) {\n", 22));
	_1ba9da1b0_addIndent((*(_self_))._field_oc);
	_1ba9da5ab_indent((*(_self_))._field_oc);
}



inline void _1ad8279ee_rangeIndexIter(jule::Ptr<_1ad826c0c_scopeCoder> _self_, jule::Ptr<_1ac757e5d_RangeIter>* _12239_it) {
	_1c164cc40_StrBuilder _12313_sb = static__1c164d191_New(64LL);;
	static__1adc62db2_iterBegin(&(_12313_sb), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12239_it)))));
	jule::Str _1259_begin = _1c164dee9_Str(&_12313_sb);;
	_1c164e1e7_Clear(&_12313_sb);
	static__1adc63489_iterNext(&(_12313_sb), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12239_it)))));
	jule::Str _1289_next = _1c164dee9_Str(&_12313_sb);;
	jule::Bool _13013_ref = false;;
	_1bba7ad65_iterHead(_self_, _12239_it, &(_13013_ref), _1259_begin);
	if (((*((*(_12239_it))))._field_KeyA != nullptr)) {
		_1ba9e287c_varInitExpr((*(_self_))._field_oc, &((*((*(_12239_it))))._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			if (_13013_ref) {
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("it - expr->begin()", 18));
			} else {
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("it - expr.begin()", 17));
			};
		}));
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1ba9da5ab_indent((*(_self_))._field_oc);
	};
	if (((*((*(_12239_it))))._field_KeyB != nullptr)) {
		(*((*((*(_12239_it))))._field_KeyB))._field_Reference=(_1ac9614b8_Copy && _1ad82d72a_isIterCopyOptimizable(&((*((*(_12239_it))))._field_Expr), &((*((*(_12239_it))))._field_KeyB)));
		_1ba9e287c_varInitExpr((*(_self_))._field_oc, &((*((*(_12239_it))))._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			{
				if ((*((*((*(_12239_it))))._field_KeyB))._field_Reference) {
					_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				} else {
					_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("*it", 3));
				};
			};
		}));
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1ba9da5ab_indent((*(_self_))._field_oc);
	};
	_1ad82cbe1_scope(_self_, (*((*(_12239_it))))._field_Scope);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ba9d9c09_write((*(_self_))._field_oc, _1289_next);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_1ba9da5ab_indent((*(_self_))._field_oc);
	if (((*((*(_12239_it))))._field_KeyA != nullptr)) {
		static__1adc62ac6_var(&((*((*(_self_))._field_oc))._field_Buf), (*((*(_12239_it))))._field_KeyA);
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1ba9da5ab_indent((*(_self_))._field_oc);
	};
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1ba9d9c09_write((*(_self_))._field_oc, _1259_begin);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1ba9da3ad_doneIndent((*(_self_))._field_oc);
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1ba9da5ab_indent((*(_self_))._field_oc);
	static__1adc6319d_iterEnd(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12239_it)))));
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ba9da3ad_doneIndent((*(_self_))._field_oc);
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1ad827ca7_rangeHashmapIter(jule::Ptr<_1ad826c0c_scopeCoder> _self_, jule::Ptr<_1ac757e5d_RangeIter>* _18941_it) {
	_1c164cc40_StrBuilder _19013_sb = static__1c164d191_New(64LL);;
	static__1adc62db2_iterBegin(&(_19013_sb), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18941_it)))));
	jule::Str _1929_begin = _1c164dee9_Str(&_19013_sb);;
	_1c164e1e7_Clear(&_19013_sb);
	static__1adc63489_iterNext(&(_19013_sb), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18941_it)))));
	jule::Str _1959_next = _1c164dee9_Str(&_19013_sb);;
	jule::Bool _19713_ref = false;;
	_1bba7ad65_iterHead(_self_, _18941_it, &(_19713_ref), _1929_begin);
	if (((*((*(_18941_it))))._field_KeyA != nullptr)) {
		_1ba9e287c_varInitExpr((*(_self_))._field_oc, &((*((*(_18941_it))))._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("it->first", 9));
		}));
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1ba9da5ab_indent((*(_self_))._field_oc);
	};
	if (((*((*(_18941_it))))._field_KeyB != nullptr)) {
		_1ba9e287c_varInitExpr((*(_self_))._field_oc, &((*((*(_18941_it))))._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("it->second", 10));
		}));
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1ba9da5ab_indent((*(_self_))._field_oc);
	};
	_1ad82cbe1_scope(_self_, (*((*(_18941_it))))._field_Scope);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ba9d9c09_write((*(_self_))._field_oc, _1959_next);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1ba9d9c09_write((*(_self_))._field_oc, _1929_begin);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1ba9da3ad_doneIndent((*(_self_))._field_oc);
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1ba9da5ab_indent((*(_self_))._field_oc);
	static__1adc6319d_iterEnd(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18941_it)))));
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ba9da3ad_doneIndent((*(_self_))._field_oc);
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1ad828060_ifCase(jule::Ptr<_1ad826c0c_scopeCoder> _self_, jule::Ptr<_1ac756544_If> _23630_i) {
	if (((*(_23630_i))._field_Expr != nullptr)) {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		_1ad8341d1_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_23630_i))._field_Expr);
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	};
	_1ad82cbe1_scope(_self_, (*(_23630_i))._field_Scope);
}



inline void _1ad828318_conditional(jule::Ptr<_1ad826c0c_scopeCoder> _self_, jule::Ptr<_1ac756c5e_Conditional> _24535_c) {
	jule::Bool _24613_writed = false;;
	{
		auto expr = &((*(_24535_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bde500a0:;
		if (it != expr_end) {
			jule::Ptr<_1ac756544_If> _24721_elif = *it;
			{
				if ((_24721_elif == nullptr)) {
					goto _iter_next_1bde500a0;
				};
				if (_24613_writed) {
					_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
				};
				_24613_writed=true;
				_1ad828060_ifCase(_self_, _24721_elif);
			}
			_iter_next_1bde500a0:;
			++it;
			goto _iter_begin_1bde500a0;
		}
		_iter_end_1bde500a0:;
	};
	if (((*(_24535_c))._field_Default != nullptr)) {
		if (_24613_writed) {
			_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
		};
		_1ad82cbe1_scope(_self_, (*((*(_24535_c))._field_Default))._field_Scope);
	};
}



inline void _1ad8285c1_infIter(jule::Ptr<_1ad826c0c_scopeCoder> _self_, jule::Ptr<_1ac75705b_InfIter> _26531_it) {
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("for (;;) {\n", 11));
	_1ba9da1b0_addIndent((*(_self_))._field_oc);
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ad82cbe1_scope(_self_, (*(_26531_it))._field_Scope);
	_1ba9da3ad_doneIndent((*(_self_))._field_oc);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ba9da5ab_indent((*(_self_))._field_oc);
	static__1adc63489_iterNext(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_26531_it)));
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1ba9da5ab_indent((*(_self_))._field_oc);
	static__1adc6319d_iterEnd(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_26531_it)));
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1ad828879_whileIter(jule::Ptr<_1ad826c0c_scopeCoder> _self_, jule::Ptr<_1ac757512_WhileIter> _28233_it) {
	if ((((*(_28233_it))._field_Expr != nullptr) && ((*(_28233_it))._field_Next == nullptr))) {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("while (", 7));
		_1ad8341d1_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_28233_it))._field_Expr);
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(") {\n", 4));
	} else {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
		if (((*(_28233_it))._field_Expr != nullptr)) {
			_1ad8341d1_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_28233_it))._field_Expr);
		};
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
		if (((*(_28233_it))._field_Next != nullptr)) {
			_1ad82c680_st(_self_, (*(_28233_it))._field_Next);
		};
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(") {\n", 4));
	};
	_1ba9da1b0_addIndent((*(_self_))._field_oc);
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ad82cbe1_scope(_self_, (*(_28233_it))._field_Scope);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ba9da3ad_doneIndent((*(_self_))._field_oc);
	_1ba9da5ab_indent((*(_self_))._field_oc);
	static__1adc63489_iterNext(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_28233_it)));
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1ba9da5ab_indent((*(_self_))._field_oc);
	static__1adc6319d_iterEnd(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_28233_it)));
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1ad828b32_rangeIter(jule::Ptr<_1ad826c0c_scopeCoder> _self_, jule::Ptr<_1ac757e5d_RangeIter> _31533_it) {
	{
		
		if ((_1ac85d1d9_Slc((*((*(_31533_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bde64207:;
			{
				_1ad8279ee_rangeIndexIter(_self_, &(_31533_it));
			}
		}
		else if ((_1ac85ce53_Arr((*((*(_31533_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bde63dc7:;
			{
				_1ad8279ee_rangeIndexIter(_self_, &(_31533_it));
			}
		}
		else if ((_1ac85dc23_Map((*((*(_31533_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bde63e3d:;
			{
				_1ad827ca7_rangeHashmapIter(_self_, &(_31533_it));
			}
		}
		else {
			_case_begin_1bde63d61:;
			{
				_1ad8279ee_rangeIndexIter(_self_, &(_31533_it));
			}
		}
		_match_end_1bde63c95:;
	};
}



inline void _1ad828dda_cont(jule::Ptr<_1ad826c0c_scopeCoder> _self_, jule::Ptr<_1ac7582e3_ContSt> _32824_c) {
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1adc63489_iterNext(&((*((*(_self_))._field_oc))._field_Buf), (*(_32824_c))._field_It);
}



inline void _1ad829193_label(jule::Ptr<_1ad826c0c_scopeCoder> _self_, jule::Ptr<_1ac7589b9_Label> _33325_l) {
	static__1adc63775_label(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_33325_l)));
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(":", 1));
}



inline void _1ad82944b_gotoSt(jule::Ptr<_1ad826c0c_scopeCoder> _self_, jule::Ptr<_1ac758d93_GotoSt> _33826_gt) {
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1adc63775_label(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_33826_gt))._field_Label)));
}



inline void _1ad829704_postfix(jule::Ptr<_1ad826c0c_scopeCoder> _self_, jule::Ptr<_1ac75926c_Postfix> _34331_p) {
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ad8341d1_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_34331_p))._field_Expr);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	_1ba9d9c09_write((*(_self_))._field_oc, (*(_34331_p))._field_Op);
}



inline void _1ad8299ac_assign(jule::Ptr<_1ad826c0c_scopeCoder> _self_, jule::Ptr<_1ac759723_Assign> _35030_a) {
	_1ad8341d1_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_35030_a))._field_L))._field_Model);
	_1ba9d9c09_write((*(_self_))._field_oc, (*((*(_35030_a))._field_Op))._field_Kind);
	_1ad8341d1_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_35030_a))._field_R))._field_Model);
}



inline void _1ad829c65_mapLookupAssign(jule::Ptr<_1ad826c0c_scopeCoder> _self_, jule::Ptr<_1ac759aec_MultiAssign>* _35640_a) {
	jule::Ptr<_1ac708d65_IndexingExprModel> _35713_iem = (*((*(_35640_a))))._field_R.cast_ptr<_1ac708d65_IndexingExprModel>(&__jule_any_type45);;
	_1ad8341d1_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_35713_iem))._field_Expr))._field_Model);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(".lookup(", 8));
	_1ad8341d1_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_35713_iem))._field_Index))._field_Model);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_35640_a))))._field_L[0LL] != nullptr)) {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1ad8341d1_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_35640_a))))._field_L[0LL]))._field_Model);
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
	} else {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("nullptr, ", 9));
	};
	if (((*((*(_35640_a))))._field_L[1LL] != nullptr)) {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1ad8341d1_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_35640_a))))._field_L[1LL]))._field_Model);
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad82a01d_multiAssignTup(jule::Ptr<_1ad826c0c_scopeCoder> _self_, jule::Ptr<_1ac759aec_MultiAssign>* _37939_a) {
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1ba9da1b0_addIndent((*(_self_))._field_oc);
	jule::Ptr<_1ac70bc03_TupleExprModel> _38313_tup = (*((*(_37939_a))))._field_R.cast_ptr<_1ac70bc03_TupleExprModel>(&__jule_any_type81);;
	{
		auto expr = &((*(_38313_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bba8d0db:;
		if (it != expr_end) {
			jule::I64 _38514_i = it - expr->begin();
			jule::Ptr<_1ac8243ae_Data> _38521_r = *it;
			{
				_1ba9da5ab_indent((*(_self_))._field_oc);
				jule::Ptr<_1ac8243ae_Data> _38717_l = (*((*(_37939_a))))._field_L[_38514_i];;
				if ((_38717_l != nullptr)) {
					{
						auto &_match_expr{ (*(_38717_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1bba910cd:;
							{
								jule::Ptr<_1ac7bb015_Var> _39125_v = (*(_38717_l))._field_Model.cast_ptr<_1ac7bb015_Var>(&__jule_any_type8);;
								if (((*(_39125_v))._field_Reference && (!(_1ac7bb39a_IsInitialized(_39125_v.ptr()))))) {
									static__1adc62ac6_var(&((*((*(_self_))._field_oc))._field_Buf), _39125_v);
									_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(" = &(", 5));
									_1ad8341d1_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_38521_r))._field_Model);
									_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
									(*((*(_37939_a))))._field_L[_38514_i]=nullptr;
									goto _iter_next_1bba8d0db;
								};
							}
						}
						_match_end_1bba91078:;
					};
					_1baa00181_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_38717_l))._field_Kind);
					_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
					static__1adc60d27_toOut(&((*((*(_self_))._field_oc))._field_Buf), _1ad8265d0_assignArgName, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_38514_i)));
					_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				};
				_1ad8341d1_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_38521_r))._field_Model);
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1bba8d0db:;
			++it;
			_38514_i++;
			goto _iter_begin_1bba8d0db;
		}
		_iter_end_1bba8d0db:;
	};
	{
		auto expr = &((*((*(_37939_a))))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bde68041:;
		if (it != expr_end) {
			jule::I64 _41214_i = it - expr->begin();
			jule::Ptr<_1ac8243ae_Data> _41221_l = *it;
			{
				if ((_41221_l == nullptr)) {
					goto _iter_next_1bde68041;
				};
				_1ba9da5ab_indent((*(_self_))._field_oc);
				_1ad8341d1_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_41221_l))._field_Model);
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				static__1adc60d27_toOut(&((*((*(_self_))._field_oc))._field_Buf), _1ad8265d0_assignArgName, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_41214_i)));
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1bde68041:;
			++it;
			_41214_i++;
			goto _iter_begin_1bde68041;
		}
		_iter_end_1bde68041:;
	};
	_1ba9da3ad_doneIndent((*(_self_))._field_oc);
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1ad82a2c6_multiAssignFn(jule::Ptr<_1ad826c0c_scopeCoder> _self_, jule::Ptr<_1ac759aec_MultiAssign>* _42838_a) {
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1ba9da1b0_addIndent((*(_self_))._field_oc);
	_1ba9da5ab_indent((*(_self_))._field_oc);
	jule::Ptr<_1ac7084d5_FnCallExprModel> _43313_f = (*((*(_42838_a))))._field_R.cast_ptr<_1ac7084d5_FnCallExprModel>(&__jule_any_type34);;
	_1baa0521e_codeMut1((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), &((*((*(_43313_f))._field_Func))._field_Result));
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(" __jule_assign_result = ", 24));
	_1ad8341d1_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_42838_a))))._field_R);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	jule::Ptr<_1ac8676ee_Tuple> _43913_tup = _1ac85dea9_Tup((*((*(_43313_f))._field_Func))._field_Result.ptr());;
	{
		auto expr = &((*((*(_42838_a))))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bde731c2:;
		if (it != expr_end) {
			jule::I64 _44014_i = it - expr->begin();
			jule::Ptr<_1ac8243ae_Data> _44021_l = *it;
			{
				if ((_44021_l != nullptr)) {
					;
					_1ba9da5ab_indent((*(_self_))._field_oc);
					_1ad8341d1_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_44021_l))._field_Model);
					{
						
						if (_1ac85a23b_Equal((*(_43913_tup))._field_Types[_44014_i], (*(_44021_l))._field_Kind)) {
							_case_begin_1bde7ed16:;
							{
								_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(" = __jule_assign_result.__jule_result_arg", 41));
								_1ba9d9c09_write((*(_self_))._field_oc, _1dbba39c8_Itoa(_44014_i));
							}
						}
						else if (_1ad840143_isAny(&((*(_44021_l))._field_Kind))) {
							_case_begin_1bde7743a:;
							{
								_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Any(__jule_assign_result.__jule_result_arg", 51));
								_1ba9d9c09_write((*(_self_))._field_oc, _1dbba39c8_Itoa(_44014_i));
								_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
								_1ba9d9c09_write((*(_self_))._field_oc, _1dbba39c8_Itoa(static_cast<jule::I64>(_1ba9dac3d_pushAnyType((*(_self_))._field_oc, (*(_43913_tup))._field_Types[_44014_i]))));
								_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
							}
						}
						else {
							_case_begin_1bde7589a:;
							{
								_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
								if ((_1ac85d98c_Trait((*(_43913_tup))._field_Types[_44014_i].ptr()) != nullptr)) {
									jule::Ptr<_1ac727548_Trait> _45929_t1 = _1ac85d98c_Trait((*(_44021_l))._field_Kind.ptr());;
									jule::Ptr<_1ac727548_Trait> _46029_t2 = _1ac85d98c_Trait((*(_43913_tup))._field_Types[_44014_i].ptr());;
									_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("__jule_assign_result.__jule_result_arg", 38));
									_1ba9d9c09_write((*(_self_))._field_oc, _1dbba39c8_Itoa(_44014_i));
									_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(".mask<", 6));
									static__1adc61b3b_traitDecl(&((*((*(_self_))._field_oc))._field_Buf), _45929_t1);
									_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
									_1ba9dbe09_pushAndWriteMaskMapper((*(_self_))._field_oc, _45929_t1, _46029_t2);
									_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
									goto _match_end_1bde75845;
								};
								_1baa00181_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_44021_l))._field_Kind);
								_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
								_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("__jule_assign_result.__jule_result_arg", 38));
								_1ba9d9c09_write((*(_self_))._field_oc, _1dbba39c8_Itoa(_44014_i));
								_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
								_1ba9d9c09_write((*(_self_))._field_oc, _1dbba39c8_Itoa(static_cast<jule::I64>(_1ba9dba96_findTypeOffset((*(_self_))._field_oc.ptr(), _1ac85d98c_Trait((*(_44021_l))._field_Kind.ptr()), (*(_43913_tup))._field_Types[_44014_i]))));
								_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
							}
						}
						_match_end_1bde75845:;
					};
					_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				};
			}
			_iter_next_1bde731c2:;
			++it;
			_44014_i++;
			goto _iter_begin_1bde731c2;
		}
		_iter_end_1bde731c2:;
	};
	_1ba9da3ad_doneIndent((*(_self_))._field_oc);
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1ad82a57e_multiAssign(jule::Ptr<_1ad826c0c_scopeCoder> _self_, jule::Ptr<_1ac759aec_MultiAssign> _48735_a) {
	{
		auto &_match_expr{ (*(_48735_a))._field_R };
		
		if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1bde85c62:;
			{
				_1ad829c65_mapLookupAssign(_self_, &(_48735_a));
				return;;
			}
		}
		_match_end_1bde85c0c:;
	};
	{
		auto &_match_expr{ (*(_48735_a))._field_R };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1bde86c41:;
			{
				_1ad82a01d_multiAssignTup(_self_, &(_48735_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1bde858cc:;
			{
				_1ad82a2c6_multiAssignFn(_self_, &(_48735_a));
			}
		}
		else {
			_case_begin_1bde86306:;
			{
				jule::panic(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:501:13"));;
			}
		}
		_match_end_1bde862a1:;
	};
}



inline jule::Fn<void(void)> _1ad82a8c0_matchExpr(jule::Ptr<_1ad826c0c_scopeCoder> _self_, jule::Ptr<_1ac75a25c_Match> _50533_m) {
	if ((!(_1ac824c83_IsConst((*(_50533_m))._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
		});;
	};
	if (((!(_1a6ce3dc3_IsBool((*((*(_50533_m))._field_Expr))._field_Constant.ptr()))) || (!(_1a6ce17c7_ReadBool((*((*(_50533_m))._field_Expr))._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1ad8341d1_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_50533_m))._field_Expr))._field_Model);
		});;
	};
	return nullptr;;
}



inline void _1ad82ac33_case(jule::Ptr<_1ad826c0c_scopeCoder> _self_, jule::Ptr<_1ac75a25c_Match> _51528_m, jule::Ptr<_1ac75ad95_Case> _51543_c) {
	if ((((*(_51543_c))._field_Exprs.len() != 0LL) && (!((*(_51528_m))._field_Comptime)))) {
		if ((((*(_51528_m))._field_Cases.len() > 0LL) && ((*(_51528_m))._field_Cases[0LL] == _51543_c))) {
			_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		} else {
			_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
		};
		{
			auto expr = &((*(_51543_c))._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bde8cc69:;
			if (it != expr_end) {
				jule::I64 _52218_i = it - expr->begin();
				jule::Ptr<_1ac8243ae_Data> _52225_expr = *it;
				{
					{
						
						if ((!((*(_51528_m))._field_TypeMatch))) {
							_case_begin_1bde96448:;
							{
								jule::Fn<void(void)> _52521_caseExpr = _1ad82a8c0_matchExpr(_self_, _51528_m);;
								if (_1ac8250c4_GoodOperand((*(_51528_m))._field_Expr.ptr(), &(_52225_expr))) {
									if ((_52521_caseExpr != nullptr)) {
										_52521_caseExpr();
										_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(" == ", 4));
									};
									_1ad8341d1_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_52225_expr))._field_Model);
								} else {
									_1ad8341d1_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_52225_expr))._field_Model);
									if ((_52521_caseExpr != nullptr)) {
										_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(" == ", 4));
										_52521_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1bde8e72c:;
							{
								_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
								jule::Ptr<_1ac859a32_TypeKind> _54125_tk = (*(_52225_expr))._field_Model.cast_ptr<_1ac859a32_TypeKind>(&__jule_any_type83);;
								if ((_1ac85d98c_Trait((*((*(_51528_m))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(".type_is(", 9));
									_1ad8317b6_boolean((*((*(_self_))._field_oc))._field_ec, (_1ac85c419_Sptr((*(_52225_expr))._field_Kind.ptr()) != nullptr));
									_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
									_1ba9d9c09_write((*(_self_))._field_oc, _1dbba39c8_Itoa(static_cast<jule::I64>(_1ba9dba96_findTypeOffset((*(_self_))._field_oc.ptr(), _1ac85d98c_Trait((*((*(_51528_m))._field_Expr))._field_Kind.ptr()), (*(_52225_expr))._field_Kind))));
									_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								} else {
									jule::I64 _54925_j = _1ba9dac3d_pushAnyType((*(_self_))._field_oc, _54125_tk);;
									_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(".type == &__jule_any_type", 25));
									_1ba9d9c09_write((*(_self_))._field_oc, _1dbba39c8_Itoa(_54925_j));
								};
							}
						}
						_match_end_1bde8e661:;
					};
					if ((((*(_51543_c))._field_Exprs.len() - _52218_i) > 1LL)) {
						_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(" || ", 4));
					};
				}
				_iter_next_1bde8cc69:;
				++it;
				_52218_i++;
				goto _iter_begin_1bde8cc69;
			}
			_iter_end_1bde8cc69:;
		};
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	} else if ((((*(_51528_m))._field_Default == _51543_c) && ((*(_51528_m))._field_Cases.len() != 0LL))) {
		_1ba9da5ab_indent((*(_self_))._field_oc);
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("else ", 5));
	};
	_1ba9da1b0_addIndent((*(_self_))._field_oc);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ba9da5ab_indent((*(_self_))._field_oc);
	static__1adc63d4c_caseBegin(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_51543_c)));
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	if (((*((*(_51543_c))._field_Scope))._field_Stmts.len() > 0LL)) {
		_1ba9da5ab_indent((*(_self_))._field_oc);
		_1ad82cbe1_scope(_self_, (*(_51543_c))._field_Scope);
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	};
	_1ba9da3ad_doneIndent((*(_self_))._field_oc);
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1ad82aedb_matchSt(jule::Ptr<_1ad826c0c_scopeCoder> _self_, jule::Ptr<_1ac75a25c_Match> _58331_m) {
	if ((((*(_58331_m))._field_Cases.len() == 0LL) && ((*(_58331_m))._field_Default == nullptr))) {
		return;;
	};
	if (((*(_58331_m))._field_Comptime && (((*(_58331_m))._field_Default == nullptr) || ((*((*((*(_58331_m))._field_Default))._field_Scope))._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ba9da1b0_addIndent((*(_self_))._field_oc);
	_1ba9da5ab_indent((*(_self_))._field_oc);
	if (((!((*(_58331_m))._field_Comptime)) && (!(_1ac824c83_IsConst((*(_58331_m))._field_Expr.ptr()))))) {
		if ((_1ac9614b8_Copy && _1ad82d362_isCopyOptimizable(&((*(_58331_m))._field_Expr)))) {
			_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("auto &_match_expr{ ", 19));
		} else {
			_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("auto _match_expr{ ", 18));
		};
		_1ad8341d1_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_58331_m))._field_Expr))._field_Model);
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(" };\n", 4));
		_1ba9da5ab_indent((*(_self_))._field_oc);
	};
	if (((*(_58331_m))._field_Cases.len() > 0LL)) {
		{
			auto expr = &((*(_58331_m))._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bdea8e94:;
			if (it != expr_end) {
				jule::Ptr<_1ac75ad95_Case> _61125_c = *it;
				{
					if ((_61125_c == nullptr)) {
						goto _iter_next_1bdea8e94;
					};
					_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1ba9da5ab_indent((*(_self_))._field_oc);
					_1ad82ac33_case(_self_, _58331_m, _61125_c);
				}
				_iter_next_1bdea8e94:;
				++it;
				goto _iter_begin_1bdea8e94;
			}
			_iter_end_1bdea8e94:;
		};
	};
	if (((*(_58331_m))._field_Default != nullptr)) {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1ad82ac33_case(_self_, _58331_m, (*(_58331_m))._field_Default);
	};
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ba9da5ab_indent((*(_self_))._field_oc);
	static__1adc63a61_matchEnd(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_58331_m)));
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ba9da3ad_doneIndent((*(_self_))._field_oc);
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1ad82b294_fallSt(jule::Ptr<_1ad826c0c_scopeCoder> _self_, jule::Ptr<_1ac75b48e_FallSt> _63826_f) {
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1adc63d4c_caseBegin(&((*((*(_self_))._field_oc))._field_Buf), (*(_63826_f))._field_DestCase);
}



inline void _1ad82b54c_breakSt(jule::Ptr<_1ad826c0c_scopeCoder> _self_, jule::Ptr<_1ac7586bc_BreakSt> _64327_b) {
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	if (((*(_64327_b))._field_It != 0LLU)) {
		static__1adc6319d_iterEnd(&((*((*(_self_))._field_oc))._field_Buf), (*(_64327_b))._field_It);
	} else {
		static__1adc63a61_matchEnd(&((*((*(_self_))._field_oc))._field_Buf), (*(_64327_b))._field_Mtch);
	};
}



inline void _1ad82b805_setResult(jule::Ptr<_1ad826c0c_scopeCoder> _self_, jule::Ptr<_1ac75b824_RetSt> _65233_r) {
	if (((*((*((*((*(_65233_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = ", 21));
		_1ad8341d1_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_65233_r))._field_Expr);
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		_1ba9da5ab_indent((*(_self_))._field_oc);
		return;;
	};
	jule::Slice<jule::Ptr<_1ac8243ae_Data>> _66013_datas = (*((*(_65233_r))._field_Expr.cast_ptr<_1ac70bc03_TupleExprModel>(&__jule_any_type81)))._field_Datas;;
	{
		auto expr = &(_66013_datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdeb6ba5:;
		if (it != expr_end) {
			jule::I64 _66113_i = it - expr->begin();
			jule::Ptr<_1ac8243ae_Data> _66116_data = *it;
			{
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
				_1ba9d9c09_write((*(_self_))._field_oc, _1dbba39c8_Itoa(_66113_i));
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1ad8341d1_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_66116_data))._field_Model);
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				_1ba9da5ab_indent((*(_self_))._field_oc);
			}
			_iter_next_1bdeb6ba5:;
			++it;
			_66113_i++;
			goto _iter_begin_1bdeb6ba5;
		}
		_iter_end_1bdeb6ba5:;
	};
}



inline void _1ad82baad_retSt(jule::Ptr<_1ad826c0c_scopeCoder> _self_, jule::Ptr<_1ac75b824_RetSt> _67129_r) {
	if (_1ac7146de_IsVoid((*((*(_67129_r))._field_Func))._field_Decl.ptr())) {
		if ((*((*((*(_67129_r))._field_Func))._field_Decl))._field_Exceptional) {
			_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional();", 31));
			return;;
		};
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("return;", 7));
		return;;
	} else if (((*((*((*((*(_67129_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 0LL)) {
		if ((*((*((*(_67129_r))._field_Func))._field_Decl))._field_Exceptional) {
			_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
			_1baa00181_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*((*(_67129_r))._field_Func))._field_Result);
			_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(">(jule::Any(), ", 15));
			_1ad8341d1_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_67129_r))._field_Expr);
			_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
		} else {
			_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
			_1ad8341d1_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_67129_r))._field_Expr);
			_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
		};
		return;;
	};
	if (((*(_67129_r))._field_Expr != nullptr)) {
		_1ad82b805_setResult(_self_, _67129_r);
	};
	if ((*((*((*(_67129_r))._field_Func))._field_Decl))._field_Exceptional) {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
		_1baa0521e_codeMut1((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), &((*((*(_67129_r))._field_Func))._field_Result));
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(">(jule::Any(), __jule_func_result);", 35));
	} else {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("return __jule_func_result;", 26));
	};
}



inline void _1ad82bd66_var(jule::Ptr<_1ad826c0c_scopeCoder> _self_, jule::Ptr<_1ac7bb015_Var> _70727_v) {
	if ((!((*(_70727_v))._field_Constant))) {
		_1ba9e2b35_var((*(_self_))._field_oc, _70727_v);
	};
}



inline void _1ad82c11e_mutSlicing(jule::Ptr<_1ad826c0c_scopeCoder> _self_, jule::Ptr<_1ac94e781_MutSlicingExprModel> _71334_m) {
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ad8341d1_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_71334_m))._field_Expr);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(").mut_slice(", 12));
	if ((!(_1da0b7cbd_Production))) {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1ba9dc1b2_locInfo((*(_self_))._field_oc, &((*(_71334_m))._field_Token));
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1ad8341d1_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_71334_m))._field_Left);
	if (((*(_71334_m))._field_Right != nullptr)) {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1ad8341d1_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_71334_m))._field_Right);
	};
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1ad82c3c7_swap(jule::Ptr<_1ad826c0c_scopeCoder> _self_, jule::Ptr<_1ac94d4a5_SwapExprModel> _73028_m) {
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("std::swap(", 10));
	_1ad8341d1_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_73028_m))._field_Left))._field_Model);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1ad8341d1_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_73028_m))._field_Right))._field_Model);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad82c680_st(jule::Ptr<_1ad826c0c_scopeCoder> _self_, jule::Any _73926_st) {
	if ((_73926_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _73926_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1bded12a7:;
			{
				_1ad82cbe1_scope(_self_, _73926_st.cast_ptr<_1ac756126_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bded1d13:;
			{
				_1ad82bd66_var(_self_, _73926_st.cast_ptr<_1ac7bb015_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1bded1d79:;
			{
				_1ad83cbbd_model((*((*(_self_))._field_oc))._field_ec, (*(_73926_st.cast_ptr<_1ac8243ae_Data>(&__jule_any_type24)))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1bded1de0:;
			{
				_1ad828318_conditional(_self_, _73926_st.cast_ptr<_1ac756c5e_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1bded1e56:;
			{
				_1ad8285c1_infIter(_self_, _73926_st.cast_ptr<_1ac75705b_InfIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1bded1ebc:;
			{
				_1ad828879_whileIter(_self_, _73926_st.cast_ptr<_1ac757512_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1bded2033:;
			{
				_1ad828b32_rangeIter(_self_, _73926_st.cast_ptr<_1ac757e5d_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1bded2099:;
			{
				_1ad828dda_cont(_self_, _73926_st.cast_ptr<_1ac7582e3_ContSt>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1bded2110:;
			{
				_1ad829193_label(_self_, _73926_st.cast_ptr<_1ac7589b9_Label>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1bded2176:;
			{
				_1ad82944b_gotoSt(_self_, _73926_st.cast_ptr<_1ac758d93_GotoSt>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1bded21dc:;
			{
				_1ad829704_postfix(_self_, _73926_st.cast_ptr<_1ac75926c_Postfix>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1bded2253:;
			{
				_1ad8299ac_assign(_self_, _73926_st.cast_ptr<_1ac759723_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1bded22b9:;
			{
				_1ad82a57e_multiAssign(_self_, _73926_st.cast_ptr<_1ac759aec_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1bded2330:;
			{
				_1ad82aedb_matchSt(_self_, _73926_st.cast_ptr<_1ac75a25c_Match>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1bded23a7:;
			{
				_1ad82b294_fallSt(_self_, _73926_st.cast_ptr<_1ac75b48e_FallSt>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1bded242e:;
			{
				_1ad82b54c_breakSt(_self_, _73926_st.cast_ptr<_1ac7586bc_BreakSt>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1bded24a6:;
			{
				_1ad82baad_retSt(_self_, _73926_st.cast_ptr<_1ac75b824_RetSt>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1bded252d:;
			{
				_1ad83a957_pushToSlice((*((*(_self_))._field_oc))._field_ec, _73926_st.cast_ptr<_1ac9502a9_PushToSliceExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1bded25a5:;
			{
				_1ad83ac10_appendToSlice((*((*(_self_))._field_oc))._field_ec, _73926_st.cast_ptr<_1ac950683_AppendToSliceExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1bded262c:;
			{
				_1ad82c11e_mutSlicing(_self_, _73926_st.cast_ptr<_1ac94e781_MutSlicingExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1bded26a4:;
			{
				_1ad82c3c7_swap(_self_, _73926_st.cast_ptr<_1ac94d4a5_SwapExprModel>(&__jule_any_type123));
			}
		}
		else {
			_case_begin_1bded1362:;
			{
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1bded0e11:;
	};
}



inline void _1ad82c938_scopeStmts(jule::Ptr<_1ad826c0c_scopeCoder> _self_, jule::Ptr<_1ac756126_Scope>* _79135_s) {
	{
		auto expr = &((*((*(_79135_s))))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdedd8d0:;
		if (it != expr_end) {
			jule::Any _79221_st = *it;
			{
				_1ba9da5ab_indent((*(_self_))._field_oc);
				_1ad82c680_st(_self_, _79221_st);
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1bdedd8d0:;
			++it;
			goto _iter_begin_1bdedd8d0;
		}
		_iter_end_1bdedd8d0:;
	};
}



inline void _1ad82cbe1_scope(jule::Ptr<_1ad826c0c_scopeCoder> _self_, jule::Ptr<_1ac756126_Scope> _80029_s) {
	_1ba9da1b0_addIndent((*(_self_))._field_oc);
	if ((*(_80029_s))._field_Deferred) {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("__JULE_DEFER(", 13));
	};
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ad82c938_scopeStmts(_self_, &(_80029_s));
	_1ba9da3ad_doneIndent((*(_self_))._field_oc);
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if ((*(_80029_s))._field_Deferred) {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
	};
}



inline void _1ad82ce99_funcScope(jule::Ptr<_1ad826c0c_scopeCoder> _self_, jule::Ptr<_1ac717170_FnIns> _81633_f) {
	if (((*(_81633_f))._field_Scope == nullptr)) {
		return;;
	};
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ba9da1b0_addIndent((*(_self_))._field_oc);
	if ((!(_1ac7146de_IsVoid((*(_81633_f))._field_Decl.ptr())))) {
		jule::Ptr<_1ac8676ee_Tuple> _82317_tup = _1ac85dea9_Tup((*(_81633_f))._field_Result.ptr());;
		if ((_82317_tup != nullptr)) {
			_1ba9da5ab_indent((*(_self_))._field_oc);
			_1baa04a48_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _82317_tup);
			_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result;\n", 21));
			{
				auto expr = &((*(_82317_tup))._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1bdee629a:;
				if (it != expr_end) {
					jule::I64 _82822_i = it - expr->begin();
					jule::Ptr<_1ac859a32_TypeKind> _82829_t = *it;
					{
						if (_1baa0761c_shouldInitialized(&(_82829_t))) {
							_1ba9da5ab_indent((*(_self_))._field_oc);
							_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1ba9d9c09_write((*(_self_))._field_oc, _1dbba39c8_Itoa(_82822_i));
							_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1ad83ce76_initExpr((*((*(_self_))._field_oc))._field_ec, _82829_t);
							_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
						};
					}
					_iter_next_1bdee629a:;
					++it;
					_82822_i++;
					goto _iter_begin_1bdee629a;
				}
				_iter_end_1bdee629a:;
			};
		} else if (((*((*((*(_81633_f))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
			_1ba9da5ab_indent((*(_self_))._field_oc);
			_1baa00181_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_81633_f))._field_Result);
			_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result", 19));
			if (_1baa0761c_shouldInitialized(&((*(_81633_f))._field_Result))) {
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1ad83ce76_initExpr((*((*(_self_))._field_oc))._field_ec, (*(_81633_f))._field_Result);
			};
			_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		};
	};
	_1ad82c938_scopeStmts(_self_, &((*(_81633_f))._field_Scope));
	if (((*((*(_81633_f))._field_Decl))._field_Exceptional && _1ac7146de_IsVoid((*(_81633_f))._field_Decl.ptr()))) {
		_1ba9da5ab_indent((*(_self_))._field_oc);
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional();\n", 32));
	};
	_1ba9da3ad_doneIndent((*(_self_))._field_oc);
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}





std::ostream &operator<<(std::ostream &_Stream, _1ad826c0c_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ad830d8c_exprCoder> static__1ad831255_new(jule::Ptr<_1ba9d9555_ObjectCoder>* _10524_oc) {
	return jule::new_ptr<_1ad830d8c_exprCoder>(_1ad830d8c_exprCoder{._field_oc=(*(_10524_oc))});;
}



inline void _1ad83150d_string(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1a6cde8d5_Const>* _11127_c) {
	jule::Str _1129_content = _1a6ce1a5d_ReadStr((*(_11127_c)).ptr());;
	if ((_1129_content.len() == 0LL)) {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		return;;
	};
	jule::Str _1179_len = _1dbba370e_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_1129_content.len())), 10LL);;
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("::lit(", 6));
	_1ad83dc68_cstrLit(&((*((*(_self_))._field_oc))._field_Buf), _1129_content);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1ba9d9c09_write((*(_self_))._field_oc, _1179_len);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad8317b6_boolean(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Bool _12627_b) {
	if (_12627_b) {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("true", 4));
	} else {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
	};
}



inline void _1ad8319b4_nilLit(jule::Ptr<_1ad830d8c_exprCoder> _self_) {
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
}



inline jule::Bool _1ad831d05_ftoaSpecialCases(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::F64* _13837_x) {
	{
		
		if (_1dbabdecb_IsNaN((*(_13837_x)))) {
			_case_begin_1be01cde8:;
			{
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("NAN", 3));
			}
		}
		else if (_1dbabe5d6_IsInf((*(_13837_x)), 1LL)) {
			_case_begin_1be01ce70:;
			{
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("INFINITY", 8));
			}
		}
		else if (_1dbabe5d6_IsInf((*(_13837_x)), -1LL)) {
			_case_begin_1be01cee7:;
			{
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1be01cd1b:;
			{
				return false;;
			}
		}
		_match_end_1be01cc50:;
	};
	return true;;
}



inline void _1ad8320ad_float32(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1a6cde8d5_Const>* _15228_c) {
	jule::F64 _1539_x = _1a6ce2597_AsF64((*(_15228_c)).ptr());;
	if (_1ad831d05_ftoaSpecialCases(_self_, &(_1539_x))) {
		return;;
	};
	{
		
		if ((_1539_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1be022150:;
			{
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("jule::MAX_F32", 13));
			}
		}
		else if ((_1539_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1be0214a1:;
			{
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1be02113d:;
			{
				_1ad83e10e_ftoa(&((*((*(_self_))._field_oc))._field_Buf), _1539_x, 32LL);
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("f", 1));
			}
		}
		_match_end_1be020e1d:;
	};
}



inline void _1ad832366_float64(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1a6cde8d5_Const>* _17128_c) {
	jule::F64 _1729_x = _1a6ce2597_AsF64((*(_17128_c)).ptr());;
	if (_1ad831d05_ftoaSpecialCases(_self_, &(_1729_x))) {
		return;;
	};
	{
		
		if ((_1729_x == jule::MAX_F64)) {
			_case_begin_1be0249e3:;
			{
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("jule::MAX_F64", 13));
			}
		}
		else if ((_1729_x == jule::MIN_F64)) {
			_case_begin_1be024a59:;
			{
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1be02465d:;
			{
				_1ad83e10e_ftoa(&((*((*(_self_))._field_oc))._field_Buf), _1729_x, 64LL);
			}
		}
		_match_end_1be02443d:;
	};
}



inline void _1ad83261e_constant(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1a6cde8d5_Const> _18932_c) {
	{
		
		if (_1a6ce4159_IsStr(_18932_c.ptr())) {
			_case_begin_1be02695c:;
			{
				_1ad83150d_string(_self_, &(_18932_c));
			}
		}
		else if (_1a6ce3dc3_IsBool(_18932_c.ptr())) {
			_case_begin_1be0269c3:;
			{
				_1ad8317b6_boolean(_self_, _1a6ce17c7_ReadBool(_18932_c.ptr()));
			}
		}
		else if (_1a6ce43e0_IsF64(_18932_c.ptr())) {
			_case_begin_1be026a39:;
			{
				{
					
					if ((*(_18932_c))._field_Kind.equal("f32", 3)) {
						_case_begin_1be0293ee:;
						{
							_1ad8320ad_float32(_self_, &(_18932_c));
						}
					}
					else {
						_case_begin_1be029058:;
						{
							_1ad832366_float64(_self_, &(_18932_c));
						}
					}
					_match_end_1be028e9d:;
				};
			}
		}
		else if (_1a6ce38a6_IsI64(_18932_c.ptr())) {
			_case_begin_1be026aa0:;
			{
				_1ad83e3ea_itoa(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::I64>(_1a6ce12aa_ReadI64(_18932_c.ptr())));
			}
		}
		else if (_1a6ce3b3c_IsU64(_18932_c.ptr())) {
			_case_begin_1be0274c9:;
			{
				_1ad83e6d6_utoa(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::U64>(_1a6ce1541_ReadU64(_18932_c.ptr())));
			}
		}
		else if (_1a6ce4676_IsNil(_18932_c.ptr())) {
			_case_begin_1be027540:;
			{
				_1ad8319b4_nilLit(_self_);
			}
		}
		else {
			_case_begin_1be0268e6:;
			{
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1be02682a:;
	};
}



inline void _1ad832a3c_divByZeroBinary(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac6b2e62_Token>* _21336_op, jule::Ptr<_1ac70600a_OperandExprModel>* _21353_l, jule::Ptr<_1ac70600a_OperandExprModel>* _21380_r) {
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("jule::", 6));
	{
		auto &_match_expr{ (*((*(_21336_op))))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1be02d2d2:;
			{
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("div(", 4));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1be02d359:;
			{
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("mod(", 4));
			}
		}
		_match_end_1be02d26b:;
	};
	if ((!(_1da0b7cbd_Production))) {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1ba9dc1b2_locInfo((*(_self_))._field_oc, _21336_op);
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("\",", 2));
	};
	_1ad8341d1_possibleRefExpr(_self_, (*((*(_21353_l))))._field_Model);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_1ad8341d1_possibleRefExpr(_self_, (*((*(_21380_r))))._field_Model);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad832ce5_unsafeBinary(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac706505_BinaryExprModel> _23536_m) {
	if ((((*((*(_23536_m))._field_Op))._field_Id == static_cast<jule::U64>(50LLU)) || ((*((*(_23536_m))._field_Op))._field_Id == static_cast<jule::U64>(51LLU)))) {
		if (_1ad840143_isAny(&((*((*(_23536_m))._field_Left))._field_Kind))) {
			if (((!(_1ac85ab10_IsNil((*((*(_23536_m))._field_Right))._field_Kind.ptr()))) && (!(_1ad840143_isAny(&((*((*(_23536_m))._field_Right))._field_Kind)))))) {
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				if (((*((*(_23536_m))._field_Op))._field_Id == static_cast<jule::U64>(51LLU))) {
					_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
				};
				jule::I64 _24521_i = _1ba9dac3d_pushAnyType((*(_self_))._field_oc, (*((*(_23536_m))._field_Right))._field_Kind);;
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("__jule_any_type", 15));
				_1ba9d9c09_write((*(_self_))._field_oc, _1dbba39c8_Itoa(_24521_i));
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("_compare(", 9));
				_1ad8341d1_possibleRefExpr(_self_, (*((*(_23536_m))._field_Left))._field_Model);
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1ad8341d1_possibleRefExpr(_self_, (*((*(_23536_m))._field_Right))._field_Model);
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			};
		};
	};
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ad8341d1_possibleRefExpr(_self_, (*((*(_23536_m))._field_Left))._field_Model);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1ba9d9c09_write((*(_self_))._field_oc, (*((*(_23536_m))._field_Op))._field_Kind);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1ad8341d1_possibleRefExpr(_self_, (*((*(_23536_m))._field_Right))._field_Model);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad83309d_binary(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac706505_BinaryExprModel> _26630_m) {
	{
		auto &_match_expr{ (*((*(_26630_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1be03e27c:;
			{
				if ((_1ac85d706_Struct((*((*(_26630_m))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1ad832a3c_divByZeroBinary(_self_, &((*(_26630_m))._field_Op), &((*(_26630_m))._field_Left), &((*(_26630_m))._field_Right));
					return;;
				};
			}
		}
		_match_end_1be03e1c2:;
	};
	_1ad832ce5_unsafeBinary(_self_, _26630_m);
}



inline void _1ad833356_var(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac7bb015_Var> _27827_m) {
	if ((*(_27827_m))._field_Binded) {
		jule::Ptr<_1ac6c7a9d_Directive> _28013_d = _1baa06e8a_findDirective(&((*(_27827_m))._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_28013_d != nullptr)) {
			_1ba9d9eb2_writeBytes((*(_self_))._field_oc, _1ba9e6aa1_concatAllParts((*(_28013_d))._field_Args));
			_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1adc62ac6_var(&((*((*(_self_))._field_oc))._field_Buf), _27827_m);
}



inline void _1ad83360e_structureIns(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac702105_StructIns> _28936_m) {
	_1ba9ed437_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _28936_m);
}



inline void _1ad8338b7_unary(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac7068ce_UnaryExprModel> _29329_m) {
	{
		auto &_match_expr{ (*((*(_29329_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1be0453b5:;
			{
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("(~(", 3));
				_1ad8341d1_possibleRefExpr(_self_, (*((*(_29329_m))._field_Expr))._field_Model);
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1be04543c:;
			{
				if ((_1da0b7cbd_Production || (_1ac85c419_Sptr((*((*(_29329_m))._field_Expr))._field_Kind.ptr()) == nullptr))) {
					goto _match_end_1be0452e9;
				};
				_1ad8341d1_possibleRefExpr(_self_, (*((*(_29329_m))._field_Expr))._field_Model);
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(".get(\"", 6));
				_1ba9dc1b2_locInfo((*(_self_))._field_oc, &((*(_29329_m))._field_Op));
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("\")", 2));
				return;;
			}
		}
		_match_end_1be0452e9:;
	};
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ba9d9c09_write((*(_self_))._field_oc, (*((*(_29329_m))._field_Op))._field_Kind);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ad8341d1_possibleRefExpr(_self_, (*((*(_29329_m))._field_Expr))._field_Model);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1ad833b70_structureLit(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac7072a3_StructLitExprModel> _31736_m) {
	if ((*((*((*(_31736_m))._field_Strct))._field_Decl))._field_Binded) {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	};
	static__1adc624ee_structureIns(&((*((*(_self_))._field_oc))._field_Buf), &((*(_31736_m))._field_Strct));
	if ((*((*((*(_31736_m))._field_Strct))._field_Decl))._field_Binded) {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	if (((*(_31736_m))._field_Args.len() > 0LL)) {
		_julec_label_1be04eed5:;
		{
			auto expr = &((*((*(_31736_m))._field_Strct))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1be050117:;
			if (it != expr_end) {
				jule::I64 _33017_i = it - expr->begin();
				jule::Ptr<_1ac701555_FieldIns> _33020_f = *it;
				{
					{
						auto expr = &((*(_31736_m))._field_Args);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1be050e92:;
						if (it != expr_end) {
							jule::Ptr<_1ac706e0c_StructArgExprModel> _33129_arg = *it;
							{
								if (((*(_33129_arg))._field_Field == _33020_f)) {
									_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
									static__1adc627da_field(&((*((*(_self_))._field_oc))._field_Buf), &((*((*(_33129_arg))._field_Field))._field_Decl));
									_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
									_1ad8341d1_possibleRefExpr(_self_, (*((*(_33129_arg))._field_Expr))._field_Model);
									if ((((*((*(_31736_m))._field_Strct))._field_Fields.len() - _33017_i) > 1LL)) {
										_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
									};
									goto _iter_next_1be050117;
								};
							}
							_iter_next_1be050e92:;
							++it;
							goto _iter_begin_1be050e92;
						}
						_iter_end_1be050e92:;
					};
				}
				_iter_next_1be050117:;
				++it;
				_33017_i++;
				goto _iter_begin_1be050117;
			}
			_iter_end_1be050117:;
		};
	};
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1ad833e28_allocStructure(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac7075a0_AllocStructLitExprModel> _34838_m) {
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	static__1adc624ee_structureIns(&((*((*(_self_))._field_oc))._field_Buf), &((*((*(_34838_m))._field_Lit))._field_Strct));
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1ad833b70_structureLit(_self_, (*(_34838_m))._field_Lit);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad8341d1_possibleRefExpr(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Any _35635_expr) {
	{
		auto &_match_expr{ _35635_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1be058362:;
			{
				jule::Ptr<_1ac7bb015_Var> _35913_v = _35635_expr.cast_ptr<_1ac7bb015_Var>(&__jule_any_type8);;
				if ((*(_35913_v))._field_Reference) {
					_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("(*(", 3));
					_1ad83cbbd_model(_self_, _35635_expr);
					_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
					return;;
				};
			}
		}
		_match_end_1be05830c:;
	};
	_1ad83cbbd_model(_self_, _35635_expr);
}



inline void _1ad8345ee_castTraitFromTrait(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac707b33_CastingExprModel>* _37043_m, jule::Ptr<_1ac727548_Trait> _37069_t1, jule::Ptr<_1ac727548_Trait> _37085_t2) {
	_1ad8341d1_possibleRefExpr(_self_, (*((*(_37043_m))))._field_Expr);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(".mask<", 6));
	static__1adc61b3b_traitDecl(&((*((*(_self_))._field_oc))._field_Buf), _37069_t1);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1ba9dbe09_pushAndWriteMaskMapper((*(_self_))._field_oc, _37069_t1, _37085_t2);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad8348a7_casting(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac707b33_CastingExprModel> _38531_m) {
	{
		
		if (_1ad840143_isAny(&((*(_38531_m))._field_Kind))) {
			_case_begin_1be05d884:;
			{
				if (_1ac85ab10_IsNil((*(_38531_m))._field_ExprKind.ptr())) {
					_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("jule::Any()", 11));
					return;;
				};
				if ((_1ac85cbbc_TypeEnum((*(_38531_m))._field_ExprKind.ptr()) != nullptr)) {
					_1ad8341d1_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
					return;;
				};
				jule::I64 _39613_i = _1ba9dac3d_pushAnyType((*(_self_))._field_oc, (*(_38531_m))._field_ExprKind);;
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("jule::Any(", 10));
				{
					auto &_match_expr{ (*(_38531_m))._field_Expr };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1be060534:;
						{
							jule::Ptr<_1ac86260b_Prim> _40017_prim = _1ac85c183_Prim((*(_38531_m))._field_ExprKind.ptr());;
							if (((_40017_prim != nullptr) && _1a6cddbd1_IsInt((*(_40017_prim))._field_Kind))) {
								_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
								_1ba9ea4cd_prim((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _40017_prim);
								_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
								_1ad8341d1_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
								_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1be0623e3;
							};
							goto _case_begin_1be062448;
						}
					}
					else {
						_case_begin_1be062448:;
						{
							_1ad8341d1_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
						}
					}
					_match_end_1be0623e3:;
				};
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
				_1ba9d9c09_write((*(_self_))._field_oc, _1dbba39c8_Itoa(_39613_i));
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if (_1ad840143_isAny(&((*(_38531_m))._field_ExprKind))) {
			_case_begin_1be05d90b:;
			{
				_1ad8341d1_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
				if ((_1ac85c419_Sptr((*(_38531_m))._field_Kind.ptr()) != nullptr)) {
					_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1baa00181_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_1ac85c419_Sptr((*(_38531_m))._field_Kind.ptr())))._field_Elem);
				} else {
					_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1baa00181_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_38531_m))._field_Kind);
				};
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_1da0b7cbd_Production))) {
					_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1ba9dc1b2_locInfo((*(_self_))._field_oc, &((*(_38531_m))._field_Token));
					_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("&__jule_any_type", 16));
				_1ba9d9c09_write((*(_self_))._field_oc, _1dbba39c8_Itoa(static_cast<jule::I64>(_1ba9dac3d_pushAnyType((*(_self_))._field_oc, (*(_38531_m))._field_Kind))));
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1ac85c6a0_Ptr((*(_38531_m))._field_ExprKind.ptr()) != nullptr) || (_1ac85c6a0_Ptr((*(_38531_m))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be05d983:;
			{
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1baa00181_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_38531_m))._field_Kind);
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
				_1ad8341d1_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if ((_1ac85d98c_Trait((*(_38531_m))._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1be05da0a:;
			{
				if ((_1ac85d98c_Trait((*(_38531_m))._field_Kind.ptr()) != nullptr)) {
					_1ad8345ee_castTraitFromTrait(_self_, &(_38531_m), _1ac85d98c_Trait((*(_38531_m))._field_Kind.ptr()), _1ac85d98c_Trait((*(_38531_m))._field_ExprKind.ptr()));
					return;;
				};
				_1ad8341d1_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
				if ((_1ac85c419_Sptr((*(_38531_m))._field_Kind.ptr()) != nullptr)) {
					_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1baa00181_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_1ac85c419_Sptr((*(_38531_m))._field_Kind.ptr())))._field_Elem);
				} else {
					_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1baa00181_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_38531_m))._field_Kind);
				};
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_1da0b7cbd_Production))) {
					_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1ba9dc1b2_locInfo((*(_self_))._field_oc, &((*(_38531_m))._field_Token));
					_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1ba9d9c09_write((*(_self_))._field_oc, _1dbba39c8_Itoa(static_cast<jule::I64>(_1ba9dba96_findTypeOffset((*(_self_))._field_oc.ptr(), _1ac85d98c_Trait((*(_38531_m))._field_ExprKind.ptr()), (*(_38531_m))._field_Kind))));
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1ac85d98c_Trait((*(_38531_m))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be05da82:;
			{
				_1baa00181_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_38531_m))._field_Kind);
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1ad8341d1_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1ba9d9c09_write((*(_self_))._field_oc, _1dbba39c8_Itoa(static_cast<jule::I64>(_1ba9dba96_findTypeOffset((*(_self_))._field_oc.ptr(), _1ac85d98c_Trait((*(_38531_m))._field_Kind.ptr()), (*(_38531_m))._field_ExprKind))));
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1be05d741:;
	};
	jule::Ptr<_1ac86260b_Prim> _4779_prim = _1ac85c183_Prim((*(_38531_m))._field_Kind.ptr());;
	jule::Ptr<_1ac86260b_Prim> _4789_eprim = _1ac85c183_Prim((*(_38531_m))._field_ExprKind.ptr());;
	if ((((_4789_eprim != nullptr) && (_4779_prim != nullptr)) && _1ac865a93_IsStr(_4779_prim.ptr()))) {
		if (_1ac864003_IsU8(_4789_eprim.ptr())) {
			_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::from_byte(", 21));
		} else {
			_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::from_rune(", 21));
		};
		_1ad8341d1_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
	_1baa00181_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_38531_m))._field_Kind);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1ad8341d1_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad834b60_models(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Slice<jule::Any> _49630_args) {
	if ((_49630_args.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &(_49630_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be08da7e:;
		if (it != expr_end) {
			jule::I64 _50014_i = it - expr->begin();
			jule::Any _50021_a = *it;
			{
				_1ad8341d1_possibleRefExpr(_self_, _50021_a);
				if (((_49630_args.len() - _50014_i) > 1LL)) {
					_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
				};
			}
			_iter_next_1be08da7e:;
			++it;
			_50014_i++;
			goto _iter_begin_1be08da7e;
		}
		_iter_end_1be08da7e:;
	};
}



inline void _1ad834e18_args(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac7084d5_FnCallExprModel>* _50829_m) {
	jule::I64 _50913_j = 0LL;;
	if (((((*((*((*(_50829_m))))._field_Func))._field_Owner != nullptr) && (!((*((*((*((*(_50829_m))))._field_Func))._field_Decl))._field_Statically))) || (((*((*((*(_50829_m))))._field_Func))._field_Params.len() > 0LL) && _1ac712db3_IsSelf((*((*((*((*(_50829_m))))._field_Func))._field_Params[0LL]))._field_Decl.ptr())))) {
		(_50913_j)++;
	};
	{
		auto expr = &((*((*(_50829_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be0919d8:;
		if (it != expr_end) {
			jule::I64 _51413_i = it - expr->begin();
			jule::Any _51416_arg = *it;
			{
				jule::Ptr<_1ac7161c4_ParamIns> _51513_p = (*((*((*(_50829_m))))._field_Func))._field_Params[_50913_j];;
				if ((((*(_51513_p))._field_Decl != nullptr) && (*((*(_51513_p))._field_Decl))._field_Reference)) {
					{
						auto &_match_expr{ _51416_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1be0947dd:;
							{
								jule::Ptr<_1ac7bb015_Var> _51921_v = _51416_arg.cast_ptr<_1ac7bb015_Var>(&__jule_any_type8);;
								if ((*(_51921_v))._field_Reference) {
									_1ad83cbbd_model(_self_, _51416_arg);
									goto _julec_label_1be094249;
								};
							}
						}
						_match_end_1be094788:;
					};
					_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1ad83cbbd_model(_self_, _51416_arg);
					_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
					goto _julec_label_1be094249;
				};
				_1ad8341d1_possibleRefExpr(_self_, _51416_arg);
				_julec_label_1be094249:;
				if ((((*((*(_50829_m))))._field_Args.len() - _51413_i) > 1LL)) {
					_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				(_50913_j)++;
			}
			_iter_next_1be0919d8:;
			++it;
			_51413_i++;
			goto _iter_begin_1be0919d8;
		}
		_iter_end_1be0919d8:;
	};
}



inline void _1ad8351c1_modelForCall(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Any _53936_expr) {
	{
		auto &_match_expr{ _53936_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1be0995c3:;
			{
				_1ad838405_funcIns(_self_, _53936_expr.cast_ptr<_1ac717170_FnIns>(&__jule_any_type7));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1be09964a:;
			{
				jule::Ptr<_1ac70b076_StructSubIdentExprModel> _54517_ssie = _53936_expr.cast_ptr<_1ac70b076_StructSubIdentExprModel>(&__jule_any_type97);;
				if (((*(_54517_ssie))._field_Method != nullptr)) {
					_1ad838405_funcIns(_self_, (*(_54517_ssie))._field_Method);
					return;;
				};
			}
		}
		_match_end_1be09955c:;
	};
	_1ad8341d1_possibleRefExpr(_self_, _53936_expr);
}



inline void _1ad835479_pushCallInf(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac7084d5_FnCallExprModel>* _55432_m) {
	if ((_1da0b7cbd_Production || (!((*((*((*(_55432_m))))._field_Func))._field_Anon)))) {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		return;;
	};
	if ((*((*((*(_55432_m))))._field_Func))._field_Anon) {
		{
			auto &_match_expr{ (*((*(_55432_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1be09d044:;
				{
					if ((*((*((*((*((*((*(_55432_m))))._field_Expr.cast_ptr<_1ac70b076_StructSubIdentExprModel>(&__jule_any_type97)))._field_Field))._field_Decl))._field_Owner))._field_Binded) {
						_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
						return;;
					};
				}
			}
			_match_end_1be09cede:;
		};
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(".call", 5));
	};
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("(\"", 2));
	_1ba9dc1b2_locInfo((*(_self_))._field_oc, &((*((*(_55432_m))))._field_Token));
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	if (((*((*(_55432_m))))._field_Args.len() != 0LL)) {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	};
}



inline jule::Bool _1ad8357ba_isWrapped(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac7084d5_FnCallExprModel>* _57734_m) {
	if ((((!(_1ac718605_IsBuiltin((*((*(_57734_m))))._field_Func.ptr()))) && ((*((*((*((*(_57734_m))))._field_Func))._field_Decl))._field_Params.len() > 0LL)) && _1ac712db3_IsSelf((*((*((*((*(_57734_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_57734_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1be0a2c6e:;
				{
					jule::Ptr<_1ac70b076_StructSubIdentExprModel> _58121_ssie = (*((*(_57734_m))))._field_Expr.cast_ptr<_1ac70b076_StructSubIdentExprModel>(&__jule_any_type97);;
					{
						
						if (_1ac713149_IsRef((*((*((*((*(_57734_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()) || (_1ac85c419_Sptr((*((*(_58121_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1be0a4886:;
							{
								goto _match_end_1be0a3b2c;
							}
						}
						else {
							_case_begin_1be0a3b93:;
							{
								if ((_1ac85d706_Struct((*((*(_58121_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									if ((!((*((*(_58121_ssie))._field_Expr))._field_Lvalue))) {
										_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("({ auto _wrap_copy = ", 21));
										_1ad83cbbd_model(_self_, (*((*(_58121_ssie))._field_Expr))._field_Model);
										_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1be0a3b2c:;
					};
				}
			}
			_match_end_1be0a2c19:;
		};
	};
	return false;;
}



inline void _1ad835a73_pureFuncCall(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac7084d5_FnCallExprModel>* _60137_m) {
	jule::Bool _6029_wrapped = _1ad8357ba_isWrapped(_self_, _60137_m);;
	_1ad8351c1_modelForCall(_self_, (*((*(_60137_m))))._field_Expr);
	if ((!(_1ac718605_IsBuiltin((*((*(_60137_m))))._field_Func.ptr())))) {
		if (((*((*((*((*(_60137_m))))._field_Func))._field_Decl))._field_Binded && ((*((*((*(_60137_m))))._field_Func))._field_Generics.len() > 0LL))) {
			if ((!(_1baa07353_hasDirective(&((*((*((*((*(_60137_m))))._field_Func))._field_Decl))._field_Directives), jule::Str::lit("cdef", 4))))) {
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("<", 1));
				{
					auto expr = &((*((*((*(_60137_m))))._field_Func))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be0aad32:;
					if (it != expr_end) {
						jule::I64 _60826_i = it - expr->begin();
						jule::Ptr<_1ac85814b_InsGeneric> _60833_g = *it;
						{
							_1baa00181_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_60833_g))._field_Kind);
							if ((((*((*((*(_60137_m))))._field_Func))._field_Generics.len() - _60826_i) > 1LL)) {
								_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
							};
						}
						_iter_next_1be0aad32:;
						++it;
						_60826_i++;
						goto _iter_begin_1be0aad32;
					}
					_iter_end_1be0aad32:;
				};
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(">", 1));
			};
		};
	};
	_1ad835479_pushCallInf(_self_, _60137_m);
	jule::Bool _61913_locinfo = false;;
	if ((((!(_1ac718605_IsBuiltin((*((*(_60137_m))))._field_Func.ptr()))) && ((*((*((*((*(_60137_m))))._field_Func))._field_Decl))._field_Params.len() > 0LL)) && _1ac712db3_IsSelf((*((*((*((*(_60137_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_60137_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1be0b1541:;
				{
					jule::Ptr<_1ac70b076_StructSubIdentExprModel> _62321_ssie = (*((*(_60137_m))))._field_Expr.cast_ptr<_1ac70b076_StructSubIdentExprModel>(&__jule_any_type97);;
					{
						
						if (_1ac713149_IsRef((*((*((*((*(_60137_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr())) {
							_case_begin_1be0b5e91:;
							{
								_1ad8341d1_possibleRefExpr(_self_, (*((*((*((*(_62321_ssie))._field_Expr))._field_Model.cast_ptr<_1ac7068ce_UnaryExprModel>(&__jule_any_type110)))._field_Expr))._field_Model);
							}
						}
						else if ((_1ac85c419_Sptr((*((*(_62321_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1be0b2553:;
							{
								_1ad8341d1_possibleRefExpr(_self_, (*((*((*((*(_62321_ssie))._field_Expr))._field_Model.cast_ptr<_1ac7068ce_UnaryExprModel>(&__jule_any_type110)))._field_Expr))._field_Model);
								_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(".ptr(", 5));
								if ((!(_1da0b7cbd_Production))) {
									_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
									_1ba9dc1b2_locInfo((*(_self_))._field_oc, &((*((*(_60137_m))))._field_Token));
									_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
								};
								_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
							}
						}
						else {
							_case_begin_1be0b24dc:;
							{
								if ((_1ac85d706_Struct((*((*(_62321_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ (*((*(_62321_ssie))._field_Expr))._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_1be0b2cb2:;
											{
												jule::Ptr<_1ac7bb015_Var> _64229_v = (*((*(_62321_ssie))._field_Expr))._field_Model.cast_ptr<_1ac7bb015_Var>(&__jule_any_type8);;
												if ((*(_64229_v))._field_Reference) {
													goto _match_end_1be0b32ce;
												};
												goto _case_begin_1be0b3334;
											}
										}
										else {
											_case_begin_1be0b3334:;
											{
												_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
											}
										}
										_match_end_1be0b32ce:;
									};
								};
								if (_6029_wrapped) {
									_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("_wrap_copy", 10));
								} else if ((_1ac85c6a0_Ptr((*((*(_62321_ssie))._field_Expr))._field_Kind.ptr()) == nullptr)) {
									_1ad83cbbd_model(_self_, (*((*(_62321_ssie))._field_Expr))._field_Model);
								} else {
									_1ad8341d1_possibleRefExpr(_self_, (*((*((*((*(_62321_ssie))._field_Expr))._field_Model.cast_ptr<_1ac7068ce_UnaryExprModel>(&__jule_any_type110)))._field_Expr))._field_Model);
								};
							}
						}
						_match_end_1be0b2476:;
					};
					if (((*((*(_60137_m))))._field_Args.len() > 0LL)) {
						_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type96) {
				_case_begin_1be0b15b8:;
				{
					_1ad8341d1_possibleRefExpr(_self_, (*((*((*(_60137_m))))._field_Expr.cast_ptr<_1ac70a6d5_TraitSubIdentExprModel>(&__jule_any_type96)))._field_Expr);
					if ((!(_1da0b7cbd_Production))) {
						_61913_locinfo=true;
					};
					if (((*((*(_60137_m))))._field_Args.len() > 0LL)) {
						_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			_match_end_1be0b14ca:;
		};
	};
	_1ad834e18_args(_self_, _60137_m);
	if (_61913_locinfo) {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(", \"", 3));
		_1ba9dc1b2_locInfo((*(_self_))._field_oc, &((*((*(_60137_m))))._field_Token));
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if (_6029_wrapped) {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	};
}



inline void _1ad835d2b_coFuncCall(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac7084d5_FnCallExprModel>* _68735_m) {
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ba9da1b0_addIndent((*(_self_))._field_oc);
	_1c164cc40_StrBuilder _69013_head = static__1c164d191_New(32LL);;
	_1c164d702_WriteStr(&_69013_head, jule::Str::lit("std::thread([", 13));
	if (((*((*((*(_68735_m))))._field_Func))._field_Owner != nullptr)) {
		_1c164d702_WriteStr(&_69013_head, jule::Str::lit("_self_", 6));
		if (((*((*(_68735_m))))._field_Args.len() > 0LL)) {
			_1c164d702_WriteStr(&_69013_head, jule::Str::lit(", ", 2));
		};
	};
	{
		auto expr = &((*((*(_68735_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be0c70d4:;
		if (it != expr_end) {
			jule::I64 _69813_i = it - expr->begin();
			jule::Any _69816_arg = *it;
			{
				if ((_69813_i > 0LL)) {
					_1c164d702_WriteStr(&_69013_head, jule::Str::lit(", ", 2));
				};
				{
					auto &_match_expr{ _69816_arg };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1be0c85e1:;
						{
							jule::Ptr<_1ac7bb015_Var> _70421_v = _69816_arg.cast_ptr<_1ac7bb015_Var>(&__jule_any_type8);;
							static__1adc62ac6_var(&(_69013_head), _70421_v);
							goto _iter_next_1be0c70d4;
						}
					}
					_match_end_1be0c7d71:;
				};
				jule::Str _70813_name = (jule::Str::lit("_co_arg_", 8) + _1dbba39c8_Itoa(_69813_i));;
				_1c164d702_WriteStr(&_69013_head, _70813_name);
				_1ba9da5ab_indent((*(_self_))._field_oc);
				_1baa00181_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*((*((*((*(_68735_m))))._field_Func))._field_Params[_69813_i]))._field_Kind);
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				if ((*((*((*((*((*(_68735_m))))._field_Func))._field_Params[_69813_i]))._field_Decl))._field_Reference) {
					_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
				};
				_1ba9d9c09_write((*(_self_))._field_oc, _70813_name);
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1ad8341d1_possibleRefExpr(_self_, _69816_arg);
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				jule::Any _72013_argS = jule::Any(_70813_name, &__jule_any_type4);;
				(*((*(_68735_m))))._field_Args[_69813_i]=(*(((jule::Any*)((&(_72013_argS))))));
			}
			_iter_next_1be0c70d4:;
			++it;
			_69813_i++;
			goto _iter_begin_1be0c70d4;
		}
		_iter_end_1be0c70d4:;
	};
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1c164d449_Write(&(*((*(_self_))._field_oc))._field_Buf, _1c164e99a_Buf(&_69013_head));
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("](void) mutable -> void {\n", 26));
	_1ba9da1b0_addIndent((*(_self_))._field_oc);
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ad835a73_pureFuncCall(_self_, _68735_m);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1ba9da3ad_doneIndent((*(_self_))._field_oc);
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("}).detach();\n", 13));
	_1ba9da3ad_doneIndent((*(_self_))._field_oc);
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1ad83618e_writeUseExpr(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac717170_FnIns>* _73837_f, jule::Ptr<_1ac8243ae_Data> _73852_d) {
	if ((_1ac85dea9_Tup((*(_73852_d))._field_Kind.ptr()) == nullptr)) {
		_1ad8341d1_possibleRefExpr(_self_, (*(_73852_d))._field_Model);
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
		return;;
	};
	jule::Ptr<_1ac70bc03_TupleExprModel> _74413_tup = (*(_73852_d))._field_Model.cast_ptr<_1ac70bc03_TupleExprModel>(&__jule_any_type81);;
	_1baa04a48_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _1ac85dea9_Tup((*((*(_73837_f))))._field_Result.ptr()));
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	{
		auto expr = &((*(_74413_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be0d6b3d:;
		if (it != expr_end) {
			jule::I64 _74713_i = it - expr->begin();
			jule::Ptr<_1ac8243ae_Data> _74716_data = *it;
			{
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
				_1ba9d9c09_write((*(_self_))._field_oc, _1dbba39c8_Itoa(_74713_i));
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
				_1ad8341d1_possibleRefExpr(_self_, (*(_74716_data))._field_Model);
				if ((((*(_74413_tup))._field_Datas.len() - _74713_i) > 1LL)) {
					_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1be0d6b3d:;
			++it;
			_74713_i++;
			goto _iter_begin_1be0d6b3d;
		}
		_iter_end_1be0d6b3d:;
	};
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
}



inline void _1ad836447_funcCall(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac7084d5_FnCallExprModel> _75932_m) {
	if ((*(_75932_m))._field_IsCo) {
		_1ad835d2b_coFuncCall(_self_, &(_75932_m));
		return;;
	};
	if (((_1ac718605_IsBuiltin((*(_75932_m))._field_Func.ptr()) || (!((*((*((*(_75932_m))._field_Func))._field_Decl))._field_Exceptional))) || (((*(_75932_m))._field_Except != nullptr) && ((*((*(_75932_m))._field_Except))._field_Stmts.len() == 0LL)))) {
		_1ad835a73_pureFuncCall(_self_, &(_75932_m));
		return;;
	};
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1ba9da1b0_addIndent((*(_self_))._field_oc);
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("auto except = ", 14));
	_1ad835a73_pureFuncCall(_self_, &(_75932_m));
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1ba9da5ab_indent((*(_self_))._field_oc);
	if (((*(_75932_m))._field_Except != nullptr)) {
		if ((((*((*(_75932_m))._field_Func))._field_Result == nullptr) || (!((*(_75932_m))._field_Assigned)))) {
			_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) ", 18));
			_1ad82cbe1_scope((*((*(_self_))._field_oc))._field_sc, (*(_75932_m))._field_Except);
			_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		} else {
			jule::Bool _78517_forwarded = _1ad83eab0_isForwarded(&((*(_75932_m))._field_Except));;
			_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("(except.ok()) ? (except.result) : (", 35));
			if (_78517_forwarded) {
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
			};
			jule::Any _79021_stmt = (*((*(_75932_m))._field_Except))._field_Stmts[((*((*(_75932_m))._field_Except))._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _79021_stmt };
				
				if (_match_expr.type == &__jule_any_type24) {
					_case_begin_1be0e5ed2:;
					{
						(*((*(_75932_m))._field_Except))._field_Stmts=(*((*(_75932_m))._field_Except))._field_Stmts.slice(0LL, ((*((*(_75932_m))._field_Except))._field_Stmts.len() - 1LL));
						_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
						_1ba9da1b0_addIndent((*(_self_))._field_oc);
						_1ad82c938_scopeStmts((*((*(_self_))._field_oc))._field_sc, &((*(_75932_m))._field_Except));
						_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1ba9da5ab_indent((*(_self_))._field_oc);
						_1ad83618e_writeUseExpr(_self_, &((*(_75932_m))._field_Func), _79021_stmt.cast_ptr<_1ac8243ae_Data>(&__jule_any_type24));
						_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1ba9da3ad_doneIndent((*(_self_))._field_oc);
						_1ba9da5ab_indent((*(_self_))._field_oc);
						_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					}
				}
				else {
					_case_begin_1be0e6c80:;
					{
						_1ad82cbe1_scope((*((*(_self_))._field_oc))._field_sc, (*(_75932_m))._field_Except);
					}
				}
				_match_end_1be0e6c2a:;
			};
			if (_78517_forwarded) {
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				_1ad83ce76_initExpr(_self_, (*((*(_75932_m))._field_Func))._field_Result);
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(";}", 2));
			};
			_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
		};
		_1ba9da3ad_doneIndent((*(_self_))._field_oc);
	} else {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1ba9dc1b2_locInfo((*(_self_))._field_oc, &((*(_75932_m))._field_Token));
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("\"));\n", 5));
		if ((!(_1ac7146de_IsVoid((*((*(_75932_m))._field_Func))._field_Decl.ptr())))) {
			_1ba9da5ab_indent((*(_self_))._field_oc);
			_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("(except.result);\n", 17));
		};
		_1ba9da3ad_doneIndent((*(_self_))._field_oc);
	};
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1ad836700_slice(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac7088ae_SliceExprModel> _83029_m) {
	if (((*(_83029_m))._field_Elems.len() == 0LL)) {
		_1ba9ebdb4_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_83029_m))._field_ElemKind);
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1ba9ebdb4_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_83029_m))._field_ElemKind);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("::make({", 8));
	_1ad834b60_models(_self_, (*(_83029_m))._field_Elems);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1ad8369a8_indexing(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac708d65_IndexingExprModel> _84232_m) {
	{
		auto &_match_expr{ (*((*(_84232_m))._field_Expr))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1be108577:;
			{
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::at(", 14));
				if ((!(_1da0b7cbd_Production))) {
					_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1ba9dc1b2_locInfo((*(_self_))._field_oc, &((*(_84232_m))._field_Token));
					_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("reinterpret_cast<const jule::U8*>(", 34));
				jule::Str _85313_s = _1a6ce1a5d_ReadStr((*((*(_84232_m))._field_Expr))._field_Model.cast_ptr<_1a6cde8d5_Const>(&__jule_any_type19).ptr());;
				_1ad83dc68_cstrLit(&((*((*(_self_))._field_oc))._field_Buf), _85313_s);
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
				_1ba9d9c09_write((*(_self_))._field_oc, _1dbba39c8_Itoa(static_cast<jule::I64>(_85313_s.len())));
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1ad8341d1_possibleRefExpr(_self_, (*((*(_84232_m))._field_Index))._field_Model);
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1be108522:;
	};
	_1ad8341d1_possibleRefExpr(_self_, (*((*(_84232_m))._field_Expr))._field_Model);
	{
		
		if (_1da0b7cbd_Production || (_1ac85c6a0_Ptr((*((*(_84232_m))._field_Expr))._field_Kind.ptr()) != nullptr) || (_1ac85dc23_Map((*((*(_84232_m))._field_Expr))._field_Kind.ptr()) != nullptr) || _1ad83ed79_isExprComesFromBind(&((*(_84232_m))._field_Expr))) {
			_case_begin_1be11244e:;
			{
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("[", 1));
				_1ad8341d1_possibleRefExpr(_self_, (*((*(_84232_m))._field_Index))._field_Model);
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1be108005:;
			{
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(".at(\"", 5));
				_1ba9dc1b2_locInfo((*(_self_))._field_oc, &((*(_84232_m))._field_Token));
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				_1ad8341d1_possibleRefExpr(_self_, (*((*(_84232_m))._field_Index))._field_Model);
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1be10ed53:;
	};
}



inline void _1ad836c61_unsafeIndexing(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac94ed7a_UnsafeIndexingExprModel> _88238_m) {
	_1ad8341d1_possibleRefExpr(_self_, (*((*((*(_88238_m))._field_Node))._field_Expr))._field_Model);
	{
		
		if (_1da0b7cbd_Production || (_1ac85c6a0_Ptr((*((*((*(_88238_m))._field_Node))._field_Expr))._field_Kind.ptr()) != nullptr) || (_1ac85dc23_Map((*((*((*(_88238_m))._field_Node))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be115342:;
			{
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("[", 1));
				_1ad8341d1_possibleRefExpr(_self_, (*((*((*(_88238_m))._field_Node))._field_Index))._field_Model);
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1be115e58:;
			{
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(".__at(", 6));
				_1ad8341d1_possibleRefExpr(_self_, (*((*((*(_88238_m))._field_Node))._field_Index))._field_Model);
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1be115de2:;
	};
}



inline void _1ad837019_anonFunc(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac70923e_AnonFnExprModel> _89932_m) {
	_1ba9eed1d_func((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_89932_m))._field_Func);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("([=]", 4));
	_1ba9e2519_paramsIns((*(_self_))._field_oc, &((*((*(_89932_m))._field_Func))._field_Params));
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(" mutable -> ", 12));
	_1ba9ee647_funcInsResult((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), &((*(_89932_m))._field_Func));
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1ad82ce99_funcScope((*((*(_self_))._field_oc))._field_sc, (*(_89932_m))._field_Func);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad8372c2_mapExpr(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac709abe_MapExprModel> _91031_m) {
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("jule::Map<", 10));
	_1baa00181_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_91031_m))._field_KeyKind);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1baa00181_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_91031_m))._field_ValKind);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(">({", 3));
	if (((*(_91031_m))._field_Entries.len() > 0LL)) {
		{
			auto expr = &((*(_91031_m))._field_Entries);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1be123bd0:;
			if (it != expr_end) {
				jule::I64 _91718_i = it - expr->begin();
				jule::Ptr<_1ac709618_KeyValPairExprModel> _91725_pair = *it;
				{
					_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
					_1ad8341d1_possibleRefExpr(_self_, (*(_91725_pair))._field_Key);
					_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					_1ad8341d1_possibleRefExpr(_self_, (*(_91725_pair))._field_Val);
					_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					if ((((*(_91031_m))._field_Entries.len() - _91718_i) > 1LL)) {
						_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1be123bd0:;
				++it;
				_91718_i++;
				goto _iter_begin_1be123bd0;
			}
			_iter_end_1be123bd0:;
		};
	};
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1ad83757a_slicing(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac70a152_SlicingExprModel> _93131_m) {
	_1ad8341d1_possibleRefExpr(_self_, (*(_93131_m))._field_Expr);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(".slice(", 7));
	if ((!(_1da0b7cbd_Production))) {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1ba9dc1b2_locInfo((*(_self_))._field_oc, &((*(_93131_m))._field_Token));
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1ad8341d1_possibleRefExpr(_self_, (*(_93131_m))._field_Left);
	if (((*(_93131_m))._field_Right != nullptr)) {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1ad8341d1_possibleRefExpr(_self_, (*(_93131_m))._field_Right);
	};
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad837833_traitSub(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac70a6d5_TraitSubIdentExprModel> _94732_m) {
	static__1adc61b3b_traitDecl(&((*((*(_self_))._field_oc))._field_Buf), (*(_94732_m))._field_Trt);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("[(", 2));
	_1ad8341d1_possibleRefExpr(_self_, (*(_94732_m))._field_Expr);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(").type_offset].", 15));
	static__1adc61564_func(&((*((*(_self_))._field_oc))._field_Buf), &((*(_94732_m))._field_Method));
}



inline void _1ad837adb_structureSub(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac70b076_StructSubIdentExprModel> _95636_m) {
	_1ad8341d1_possibleRefExpr(_self_, (*((*(_95636_m))._field_Expr))._field_Model);
	if (((*(_95636_m))._field_Field == nullptr)) {
		return;;
	};
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	static__1adc627da_field(&((*((*(_self_))._field_oc))._field_Buf), &((*((*(_95636_m))._field_Field))._field_Decl));
}



inline void _1ad837d94_array(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac70b906_ArrayExprModel> _96529_m) {
	_1ba9ed79a_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_96529_m))._field_Kind);
	if (((*(_96529_m))._field_Elems.len() == 0LL)) {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	if ((((*(_96529_m))._field_Elems.len() == 2LL) && ((*(_96529_m))._field_Elems[1LL] == nullptr))) {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1ad8341d1_possibleRefExpr(_self_, (*(_96529_m))._field_Elems[0LL]);
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("({", 2));
	_1ad834b60_models(_self_, (*(_96529_m))._field_Elems);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
	return;;
}



inline void _1ad83814c_funcInsCommon(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac717170_FnIns> _98837_m) {
	_1ba9eed1d_func((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _98837_m);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ad838405_funcIns(_self_, _98837_m);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad838405_funcIns(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac717170_FnIns> _99531_m) {
	if ((((*(_99531_m))._field_Decl != nullptr) && (*((*(_99531_m))._field_Decl))._field_Binded)) {
		jule::Ptr<_1ac6c7a9d_Directive> _99713_d = _1baa06e8a_findDirective(&((*((*(_99531_m))._field_Decl))._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_99713_d != nullptr)) {
			_1ba9d9eb2_writeBytes((*(_self_))._field_oc, _1ba9e6aa1_concatAllParts((*(_99713_d))._field_Args));
			_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1adc61850_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_99531_m));
}



inline void _1ad8386ad_tuple(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac70bc03_TupleExprModel> _100629_m) {
	{
		auto expr = &((*(_100629_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be13cd81:;
		if (it != expr_end) {
			jule::I64 _100714_i = it - expr->begin();
			jule::Ptr<_1ac8243ae_Data> _100721_d = *it;
			{
				_1ad8341d1_possibleRefExpr(_self_, (*(_100721_d))._field_Model);
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
				if ((((*(_100629_m))._field_Datas.len() - _100714_i) > 1LL)) {
					_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1ba9da5ab_indent((*(_self_))._field_oc);
				};
			}
			_iter_next_1be13cd81:;
			++it;
			_100714_i++;
			goto _iter_begin_1be13cd81;
		}
		_iter_end_1be13cd81:;
	};
}



inline void _1ad838966_newCall(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac70c880_BuiltinNewCallExprModel> _101731_m) {
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_1baa00181_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_101731_m))._field_Kind);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	if (((*(_101731_m))._field_Init != nullptr)) {
		_1ad8341d1_possibleRefExpr(_self_, (*(_101731_m))._field_Init);
	};
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad838c1e_outCall(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac70c0cc_BuiltinOutCallExprModel> _102731_m) {
	if (((*(_102731_m))._field_Debug && _1da0b7cbd_Production)) {
		return;;
	};
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("jule::out(", 10));
	_1ad8341d1_possibleRefExpr(_self_, (*(_102731_m))._field_Expr);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad838ec7_outlnCall(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac70c4a6_BuiltinOutlnCallExprModel> _103633_m) {
	if (((*(_103633_m))._field_Debug && _1da0b7cbd_Production)) {
		return;;
	};
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("jule::outln(", 12));
	_1ad8341d1_possibleRefExpr(_self_, (*(_103633_m))._field_Expr);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad839280_panicCall(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac70cc59_BuiltinPanicCallExprModel> _104533_m) {
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("jule::panic(", 12));
	_1ad8341d1_possibleRefExpr(_self_, (*(_104533_m))._field_Expr);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(" + jule::Str(\"\\nlocation: ", 26));
	_1ba9dc1b2_locInfo((*(_self_))._field_oc, &((*(_104533_m))._field_Token));
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1ad839538_assertCall(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac70d210_BuiltinAssertCallExprModel> _105334_m) {
	if (_1da0b7cbd_Production) {
		return;;
	};
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("if (!(", 6));
	_1ad8341d1_possibleRefExpr(_self_, (*(_105334_m))._field_Expr);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")) jule::panic(jule::Str(", 25));
	_1ad83dc68_cstrLit(&((*((*(_self_))._field_oc))._field_Buf), (*(_105334_m))._field_Log);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(") + jule::Str(\"\\nlocation: ", 27));
	_1ba9dc1b2_locInfo((*(_self_))._field_oc, &((*(_105334_m))._field_Token));
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1ad8397e1_errorCall(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac70ed16_BuiltinErrorCallExprModel> _106633_m) {
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	if (_1ac7146de_IsVoid((*((*(_106633_m))._field_Func))._field_Decl.ptr())) {
		{
			auto &_match_expr{ (*((*(_106633_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1be14e3d1:;
				{
					jule::Ptr<_1ac7bb015_Var> _107117_v = (*((*(_106633_m))._field_Err))._field_Model.cast_ptr<_1ac7bb015_Var>(&__jule_any_type8);;
					if ((*(_107117_v))._field_Ident.equal("error", 5)) {
						_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional(except.error)", 35));
						return;;
					};
				}
			}
			_match_end_1be14e37b:;
		};
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional(jule::Any(", 32));
	} else {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("jule::Exceptional<", 18));
		_1baa0521e_codeMut1((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), &((*((*(_106633_m))._field_Func))._field_Result));
		{
			auto &_match_expr{ (*((*(_106633_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1be1537e2:;
				{
					jule::Ptr<_1ac7bb015_Var> _108317_v = (*((*(_106633_m))._field_Err))._field_Model.cast_ptr<_1ac7bb015_Var>(&__jule_any_type8);;
					if ((*(_108317_v))._field_Ident.equal("error", 5)) {
						_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(">(except.error)", 15));
						return;;
					};
				}
			}
			_match_end_1be15378c:;
		};
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(">(jule::Any(", 12));
	};
	_1ad8341d1_possibleRefExpr(_self_, (*((*(_106633_m))._field_Err))._field_Model);
	jule::I64 _10929_i = _1ba9dac3d_pushAnyType((*(_self_))._field_oc, (*((*(_106633_m))._field_Err))._field_Kind);;
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
	_1ba9d9c09_write((*(_self_))._field_oc, _1dbba39c8_Itoa(_10929_i));
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1ad839a99_copyCall(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac70e93c_BuiltinCopyCallExprModel> _109832_m) {
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("jule::copy((", 12));
	_1ad8341d1_possibleRefExpr(_self_, (*((*(_109832_m))._field_Dest))._field_Model);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((_1ac85c183_Prim((*((*(_109832_m))._field_Dest))._field_Kind.ptr()) != nullptr)) {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(".fake_slice()", 13));
	};
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(", (", 3));
	_1ad8341d1_possibleRefExpr(_self_, (*((*(_109832_m))._field_Src))._field_Model);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((_1ac85c183_Prim((*((*(_109832_m))._field_Src))._field_Kind.ptr()) != nullptr)) {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(".fake_slice()", 13));
	};
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad839d52_lenCall(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac70dd8c_BuiltinLenCallExprModel> _111431_m) {
	_1ad8341d1_possibleRefExpr(_self_, (*((*(_111431_m))._field_Expr))._field_Model);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(".len()", 6));
}



inline void _1ad83a10a_capCall(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac70e189_BuiltinCapCallExprModel> _111931_m) {
	_1ad8341d1_possibleRefExpr(_self_, (*((*(_111931_m))._field_Expr))._field_Model);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(".cap()", 6));
}



inline void _1ad83a3b3_deleteCall(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac70e563_BuiltinDeleteCallExprModel> _112434_m) {
	_1ad8341d1_possibleRefExpr(_self_, (*((*(_112434_m))._field_Dest))._field_Model);
	if (((*(_112434_m))._field_Key != nullptr)) {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(".del(", 5));
		_1ad8341d1_possibleRefExpr(_self_, (*((*(_112434_m))._field_Key))._field_Model);
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(".clear()", 8));
	};
}



inline void _1ad83a66b_makeCallSlice(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac70d6b6_BuiltinMakeCallExprModel>* _113538_m) {
	jule::Ptr<_1ac866b0a_Slc> _113613_slice = _1ac85d1d9_Slc((*((*(_113538_m))))._field_Kind.ptr());;
	_1baa00181_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*((*(_113538_m))))._field_Kind);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1ad8341d1_possibleRefExpr(_self_, (*((*(_113538_m))))._field_Len);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_113538_m))))._field_Cap != nullptr)) {
		_1ad8341d1_possibleRefExpr(_self_, (*((*(_113538_m))))._field_Cap);
	} else {
		_1ad8341d1_possibleRefExpr(_self_, (*((*(_113538_m))))._field_Len);
	};
	if (_1baa0761c_shouldInitialized(&((*(_113613_slice))._field_Elem))) {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1ad83ce76_initExpr(_self_, (*(_113613_slice))._field_Elem);
	};
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a90633c6_makeCallStr(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac70d6b6_BuiltinMakeCallExprModel>* _115336_m) {
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1ad8341d1_possibleRefExpr(_self_, (*((*(_115336_m))))._field_Len);
	if (((*((*(_115336_m))))._field_Cap != nullptr)) {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1ad8341d1_possibleRefExpr(_self_, (*((*(_115336_m))))._field_Cap);
	};
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a9066044_makeCall(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac70d6b6_BuiltinMakeCallExprModel> _116432_m) {
	if ((_1ac85d1d9_Slc((*(_116432_m))._field_Kind.ptr()) != nullptr)) {
		_1ad83a66b_makeCallSlice(_self_, &(_116432_m));
		return;;
	};
	_1a90633c6_makeCallStr(_self_, &(_116432_m));
}



inline void _1ad83a957_pushToSlice(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac9502a9_PushToSliceExprModel> _117235_m) {
	;
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("{ ", 2));
	_1ba9ebdb4_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*((*(_117235_m))._field_Elems))._field_ElemKind);
	jule::Bool _118013_ptr = false;;
	{
		auto &_match_expr{ (*(_117235_m))._field_Dest };
		
		if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1be16dba3:;
			{
				jule::Ptr<_1ac7068ce_UnaryExprModel> _118417_u = (*(_117235_m))._field_Dest.cast_ptr<_1ac7068ce_UnaryExprModel>(&__jule_any_type110);;
				if ((_1ac85c6a0_Ptr((*((*(_118417_u))._field_Expr))._field_Kind.ptr()) != nullptr)) {
					_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(" *__jule_push_dest = ", 21));
					_1ad8341d1_possibleRefExpr(_self_, (*((*(_118417_u))._field_Expr))._field_Model);
					_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
					_118013_ptr=true;
					goto _match_end_1be170985;
				};
				goto _case_begin_1be1709da;
			}
		}
		else {
			_case_begin_1be1709da:;
			{
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(" &__jule_push_dest = ", 21));
				_1ad8341d1_possibleRefExpr(_self_, (*(_117235_m))._field_Dest);
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
		}
		_match_end_1be170985:;
	};
	if (((*((*(_117235_m))._field_Elems))._field_Elems.len() == 1LL)) {
		if (_118013_ptr) {
			_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->push(", 23));
		} else {
			_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.push(", 22));
		};
		_1ad8341d1_possibleRefExpr(_self_, (*((*(_117235_m))._field_Elems))._field_Elems[0LL]);
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("); }", 4));
		return;;
	};
	if (_118013_ptr) {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.alloc_for_append(", 34));
	};
	_1ba9d9c09_write((*(_self_))._field_oc, _1dbba39c8_Itoa(static_cast<jule::I64>((*((*(_117235_m))._field_Elems))._field_Elems.len())));
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
	{
		auto expr = &((*((*(_117235_m))._field_Elems))._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be178680:;
		if (it != expr_end) {
			jule::Any _121821_e = *it;
			{
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest", 16));
				if (_118013_ptr) {
					_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("->__push(", 9));
				} else {
					_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(".__push(", 8));
				};
				_1ad8341d1_possibleRefExpr(_self_, _121821_e);
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
			}
			_iter_next_1be178680:;
			++it;
			goto _iter_begin_1be178680;
		}
		_iter_end_1be178680:;
	};
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1ad83ac10_appendToSlice(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac950683_AppendToSliceExprModel> _123237_m) {
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ad8341d1_possibleRefExpr(_self_, (*(_123237_m))._field_Dest);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(").append(", 9));
	_1ad8341d1_possibleRefExpr(_self_, (*(_123237_m))._field_Slice);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1ad83aeb8_appendCall(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac70da90_BuiltinAppendCallExprModel> _124034_m) {
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("jule::append(", 13));
	_1ad8341d1_possibleRefExpr(_self_, (*(_124034_m))._field_Dest);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_1ad8341d1_possibleRefExpr(_self_, (*(_124034_m))._field_Elements);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad83b271_sizeof(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac70a8c2_SizeofExprModel> _124830_m) {
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("sizeof(", 7));
	_1ad8341d1_possibleRefExpr(_self_, (*(_124830_m))._field_Expr);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad83b529_alignof(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac710542_AlignofExprModel> _125431_m) {
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("alignof(", 8));
	_1ad8341d1_possibleRefExpr(_self_, (*(_125431_m))._field_Expr);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad83b7d2_runeLit(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac71083e_RuneExprModel> _126027_m) {
	if (((*(_126027_m))._field_Code <= 127LL)) {
		_1c164d9aa_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\'');
		jule::Str _126317_b = _1ad83d64c_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>((*(_126027_m))._field_Code)));;
		if (_126317_b.equal("'", 1)) {
			_1c164d9aa_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\\');
		};
		_1c164d702_WriteStr(&(*((*(_self_))._field_oc))._field_Buf, _126317_b);
		_1c164d9aa_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\'');
		return;;
	};
	_1ad83e3ea_itoa(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::I64>(static_cast<jule::I64>((*(_126027_m))._field_Code)));
}



inline void _1ad83ba8a_structureStatic(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac70b52c_StructStaticIdentExprModel> _127439_m) {
	static__1adc61850_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &((*(_127439_m))._field_Method));
}



inline void _1ad83bd43_integratedToStr(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac710b3b_IntegratedToStrExprModel> _127839_m) {
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("jule::to_str(", 13));
	_1ad8341d1_possibleRefExpr(_self_, (*(_127839_m))._field_Expr);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad83c0eb_backendEmit(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac711015_BackendEmitExprModel> _128435_m) {
	if (((*(_128435_m))._field_Exprs.len() == 0LL)) {
		_1ba9d9c09_write((*(_self_))._field_oc, (*(_128435_m))._field_Code);
		return;;
	};
	jule::I64 _12899_n = _1c164e47d_Len(&(*((*(_self_))._field_oc))._field_Buf);;
	jule::Slice<jule::Any> _129013_args = jule::Slice<jule::Any>::alloc((*(_128435_m))._field_Exprs.len(), (*(_128435_m))._field_Exprs.len());;
	{
		auto expr = &((*(_128435_m))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be18ae34:;
		if (it != expr_end) {
			jule::I64 _129114_i = it - expr->begin();
			jule::Any _129121_expr = *it;
			{
				_1ad8341d1_possibleRefExpr(_self_, _129121_expr);
				jule::Slice<jule::U8> _129317_buf = _1c164e99a_Buf(&(*((*(_self_))._field_oc))._field_Buf);;
				_129013_args[_129114_i]=jule::Any(static_cast<jule::Str>(_129317_buf.slice(_12899_n)), &__jule_any_type4);
				{
					_1c164ec53_SetBuf(&(*((*(_self_))._field_oc))._field_Buf, _129317_buf.slice(0LL, _12899_n));
				};
			}
			_iter_next_1be18ae34:;
			++it;
			_129114_i++;
			goto _iter_begin_1be18ae34;
		}
		_iter_end_1be18ae34:;
	};
	_1ba9d9c09_write((*(_self_))._field_oc, _1ac93a8d2_Format((*(_128435_m))._field_Code, _129013_args));
}



inline void _1ad83c3a4_free(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac711312_FreeExprModel> _130028_m) {
	_1ad8341d1_possibleRefExpr(_self_, (*(_130028_m))._field_Expr);
	if (_1da0b762a_RC) {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(".dealloc()", 10));
		return;;
	};
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(".__free()", 9));
}



inline void _1ad83c65c_strComp(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac94e1ed_StrCompExprModel> _130931_m) {
	if ((*(_130931_m))._field_NotEq) {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("(!", 2));
	};
	jule::Str _13139_s = _1a6ce1a5d_ReadStr((*(_130931_m))._field_Right.ptr());;
	_1ad8341d1_possibleRefExpr(_self_, (*(_130931_m))._field_Left);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(".equal(", 7));
	_1ad83dc68_cstrLit(&((*((*(_self_))._field_oc))._field_Buf), _13139_s);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1ba9d9c09_write((*(_self_))._field_oc, _1dbba39c8_Itoa(static_cast<jule::I64>(_13139_s.len())));
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((*(_130931_m))._field_NotEq) {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1ad83c915_emptyCompare(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac94d8c3_EmptyCompareExprModel> _132536_m) {
	if ((*(_132536_m))._field_Neg) {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
	};
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ad8341d1_possibleRefExpr(_self_, (*(_132536_m))._field_Expr);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(").empty()", 9));
}



inline void _1ad83cbbd_model(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Any _133429_m) {
	{
		auto &_match_expr{ _133429_m };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1be19944d:;
			{
				_1ba9d9c09_write((*(_self_))._field_oc, _133429_m.cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1be19965c:;
			{
				_1baa00181_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _133429_m.cast_ptr<_1ac859a32_TypeKind>(&__jule_any_type83));
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1be1996c3:;
			{
				_1ad83261e_constant(_self_, _133429_m.cast_ptr<_1a6cde8d5_Const>(&__jule_any_type19));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1be199739:;
			{
				_1ad833356_var(_self_, _133429_m.cast_ptr<_1ac7bb015_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1be1997a0:;
			{
				_1ad83360e_structureIns(_self_, _133429_m.cast_ptr<_1ac702105_StructIns>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1be19a44e:;
			{
				_1ad83814c_funcInsCommon(_self_, _133429_m.cast_ptr<_1ac717170_FnIns>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1be19a4b5:;
			{
				_1ad832ce5_unsafeBinary(_self_, (*(_133429_m.cast_ptr<_1ac94ea7d_UnsafeBinaryExprModel>(&__jule_any_type126)))._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1be19a52b:;
			{
				_1ad83309d_binary(_self_, _133429_m.cast_ptr<_1ac706505_BinaryExprModel>(&__jule_any_type111));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1be19a592:;
			{
				_1ad8338b7_unary(_self_, _133429_m.cast_ptr<_1ac7068ce_UnaryExprModel>(&__jule_any_type110));
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1be19a608:;
			{
				_1ad833b70_structureLit(_self_, _133429_m.cast_ptr<_1ac7072a3_StructLitExprModel>(&__jule_any_type94));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1be19a66e:;
			{
				_1ad833e28_allocStructure(_self_, _133429_m.cast_ptr<_1ac7075a0_AllocStructLitExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1be19a6d5:;
			{
				_1ad8348a7_casting(_self_, _133429_m.cast_ptr<_1ac707b33_CastingExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1be19a75c:;
			{
				_1ad836447_funcCall(_self_, _133429_m.cast_ptr<_1ac7084d5_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1be19a7d4:;
			{
				_1ad836700_slice(_self_, _133429_m.cast_ptr<_1ac7088ae_SliceExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1be19a85b:;
			{
				_1ad837d94_array(_self_, _133429_m.cast_ptr<_1ac70b906_ArrayExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1be19a8d3:;
			{
				_1ad836c61_unsafeIndexing(_self_, _133429_m.cast_ptr<_1ac94ed7a_UnsafeIndexingExprModel>(&__jule_any_type128));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1be19a95a:;
			{
				_1ad8369a8_indexing(_self_, _133429_m.cast_ptr<_1ac708d65_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1be19a9d2:;
			{
				_1ad837019_anonFunc(_self_, _133429_m.cast_ptr<_1ac70923e_AnonFnExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1be19aa59:;
			{
				_1ad8372c2_mapExpr(_self_, _133429_m.cast_ptr<_1ac709abe_MapExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1be19aad1:;
			{
				_1ad83757a_slicing(_self_, _133429_m.cast_ptr<_1ac70a152_SlicingExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1be19ab58:;
			{
				_1ad837833_traitSub(_self_, _133429_m.cast_ptr<_1ac70a6d5_TraitSubIdentExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1be19abd0:;
			{
				_1ad837adb_structureSub(_self_, _133429_m.cast_ptr<_1ac70b076_StructSubIdentExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1be19ac57:;
			{
				_1ad8386ad_tuple(_self_, _133429_m.cast_ptr<_1ac70bc03_TupleExprModel>(&__jule_any_type81));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1be19acce:;
			{
				_1ad838c1e_outCall(_self_, _133429_m.cast_ptr<_1ac70c0cc_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1be19ad56:;
			{
				_1ad838ec7_outlnCall(_self_, _133429_m.cast_ptr<_1ac70c4a6_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1be19adcd:;
			{
				_1ad838966_newCall(_self_, _133429_m.cast_ptr<_1ac70c880_BuiltinNewCallExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1be19ae55:;
			{
				_1ad839280_panicCall(_self_, _133429_m.cast_ptr<_1ac70cc59_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1be19aecc:;
			{
				_1ad839538_assertCall(_self_, _133429_m.cast_ptr<_1ac70d210_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1be19b054:;
			{
				_1ad8397e1_errorCall(_self_, _133429_m.cast_ptr<_1ac70ed16_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1be19b0cb:;
			{
				_1a9066044_makeCall(_self_, _133429_m.cast_ptr<_1ac70d6b6_BuiltinMakeCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1be19b153:;
			{
				_1ad83aeb8_appendCall(_self_, _133429_m.cast_ptr<_1ac70da90_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1be19b1ca:;
			{
				_1ad839a99_copyCall(_self_, _133429_m.cast_ptr<_1ac70e93c_BuiltinCopyCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1be19b252:;
			{
				_1ad839d52_lenCall(_self_, _133429_m.cast_ptr<_1ac70dd8c_BuiltinLenCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1be19b2c9:;
			{
				_1ad83a10a_capCall(_self_, _133429_m.cast_ptr<_1ac70e189_BuiltinCapCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1be19b351:;
			{
				_1ad83a3b3_deleteCall(_self_, _133429_m.cast_ptr<_1ac70e563_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1be19b3c8:;
			{
				_1ad83b271_sizeof(_self_, _133429_m.cast_ptr<_1ac70a8c2_SizeofExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1be19b450:;
			{
				_1ad83b529_alignof(_self_, _133429_m.cast_ptr<_1ac710542_AlignofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1be19b4c7:;
			{
				_1ad83b7d2_runeLit(_self_, _133429_m.cast_ptr<_1ac71083e_RuneExprModel>(&__jule_any_type82));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1be19b54e:;
			{
				_1ad83ba8a_structureStatic(_self_, _133429_m.cast_ptr<_1ac70b52c_StructStaticIdentExprModel>(&__jule_any_type95));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1be19b5c6:;
			{
				_1ad83bd43_integratedToStr(_self_, _133429_m.cast_ptr<_1ac710b3b_IntegratedToStrExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1be19b64d:;
			{
				_1ad83c0eb_backendEmit(_self_, _133429_m.cast_ptr<_1ac711015_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1be19b6c5:;
			{
				_1ad83c3a4_free(_self_, _133429_m.cast_ptr<_1ac711312_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1be19b74c:;
			{
				_1ad83c65c_strComp(_self_, _133429_m.cast_ptr<_1ac94e1ed_StrCompExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1be19b7c4:;
			{
				_1ad833356_var(_self_, (*(_133429_m.cast_ptr<_1ac94dbc0_RefExprModel>(&__jule_any_type127)))._field_Var);
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1be19b84b:;
			{
				_1ad83c915_emptyCompare(_self_, _133429_m.cast_ptr<_1ac94d8c3_EmptyCompareExprModel>(&__jule_any_type124));
			}
		}
		else {
			_case_begin_1be1995e6:;
			{
				_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1be199591:;
	};
}



inline void _1ad83ce76_initExpr(jule::Ptr<_1ad830d8c_exprCoder> _self_, jule::Ptr<_1ac859a32_TypeKind> _143132_t) {
	if (_1ac85b8d0_NilCompatible(_143132_t.ptr())) {
		if ((_1ac85c6a0_Ptr(_143132_t.ptr()) != nullptr)) {
			_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		} else {
			_1baa00181_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _143132_t);
			_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1ac8676ee_Tuple> _144113_tup = _1ac85dea9_Tup(_143132_t.ptr());;
	if ((_144113_tup != nullptr)) {
		_1baa04a48_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _144113_tup);
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
		{
			auto expr = &((*(_144113_tup))._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1be1b83a1:;
			if (it != expr_end) {
				jule::I64 _144518_i = it - expr->begin();
				jule::Ptr<_1ac859a32_TypeKind> _144525_tt = *it;
				{
					if ((!(_1baa0761c_shouldInitialized(&(_144525_tt))))) {
						goto _iter_next_1be1b83a1;
					};
					_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
					_1ba9d9c09_write((*(_self_))._field_oc, _1dbba39c8_Itoa(_144518_i));
					_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1ad83ce76_initExpr(_self_, _144525_tt);
					if ((((*(_144113_tup))._field_Types.len() - _144518_i) > 1LL)) {
						_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
				_iter_next_1be1b83a1:;
				++it;
				_144518_i++;
				goto _iter_begin_1be1b83a1;
			}
			_iter_end_1be1b83a1:;
		};
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	jule::Ptr<_1ac729c54_Enum> _146013_enm = _1ac85c936_Enum(_143132_t.ptr());;
	if ((_146013_enm != nullptr)) {
		_1ad83cbbd_model(_self_, (*((*((*((*(_146013_enm))._field_Items[0LL]))._field_Value))._field_Data))._field_Model);
		return;;
	};
	jule::Ptr<_1ac86260b_Prim> _14659_prim = _1ac85c183_Prim(_143132_t.ptr());;
	if ((_14659_prim != nullptr)) {
		if (_1a6cde2db_IsNum((*(_14659_prim))._field_Kind)) {
			_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("0", 1));
		} else if (_1ac86580c_IsBool(_14659_prim.ptr())) {
			_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
		} else if (_1ac865a93_IsStr(_14659_prim.ptr())) {
			_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		};
		return;;
	};
	if ((_1ac85ce53_Arr(_143132_t.ptr()) != nullptr)) {
		jule::Ptr<_1ac868e2b_Arr> _147717_arr = _1ac85ce53_Arr(_143132_t.ptr());;
		_1baa00181_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _143132_t);
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1ad83ce76_initExpr(_self_, (*(_147717_arr))._field_Elem);
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	jule::Ptr<_1ac702105_StructIns> _148413_s = _1ac85d706_Struct(_143132_t.ptr());;
	if ((((_148413_s != nullptr) && (*((*(_148413_s))._field_Decl))._field_Binded) && (_1baa06e8a_findDirective(&((*((*(_148413_s))._field_Decl))._field_Directives), jule::Str::lit("typedef", 7)) == nullptr))) {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1baa00181_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _143132_t);
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("){}", 3));
		return;;
	};
	_1baa00181_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _143132_t);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _1ad830d8c_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1adc5c593_TestCoder> static__1adc5c9d3_New(jule::Ptr<_1ba9d9555_ObjectCoder>* _2924_oc) {
	return jule::new_ptr<_1adc5c593_TestCoder>(_1adc5c593_TestCoder{._field_oc=(*(_2924_oc))});;
}



inline jule::Ptr<_1ac77790b_ImportInfo> _1adc5cc69_findTestingPackage(jule::Ptr<_1adc5c593_TestCoder> _self_) {
	{
		auto expr = &((*((*((*(_self_))._field_oc))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be1c8328:;
		if (it != expr_end) {
			jule::Ptr<_1ac77790b_ImportInfo> _3621_imp = *it;
			{
				if ((*(_3621_imp))._field_LinkPath.equal("std::testing", 12)) {
					return _3621_imp;;
				};
			}
			_iter_next_1be1c8328:;
			++it;
			goto _iter_begin_1be1c8328;
		}
		_iter_end_1be1c8328:;
	};
	return nullptr;;
}



inline void _1adc5d022_appendTest(jule::Ptr<_1adc5c593_TestCoder> _self_, jule::Ptr<_1ac717170_FnIns> _4434_f) {
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1adc5d75e_callTmReset(_self_);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("std::cout << \">>> TEST RUNNING: \" ", 34));
	_1ad83dc68_cstrLit(&((*((*(_self_))._field_oc))._field_Buf), (*((*(_4434_f))._field_Decl))._field_Ident);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(" << std::endl;\n", 15));
	_1ba9da5ab_indent((*(_self_))._field_oc);
	static__1adc61850_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_4434_f));
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("(_t);\n", 6));
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("post_test();\n", 13));
}



inline void _1adc5d2ca_appendPackageTests(jule::Ptr<_1adc5c593_TestCoder> _self_, jule::Ptr<_1ac77a832_Package>* _5943_p) {
	{
		auto expr = &((*((*(_5943_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be1ceb48:;
		if (it != expr_end) {
			jule::Ptr<_1ac81e013_SymbolTable> _6021_file = *it;
			{
				{
					auto expr = &((*(_6021_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be1d0594:;
					if (it != expr_end) {
						jule::Ptr<_1ac71426b_Fn> _6125_f = *it;
						{
							if (_1baa07353_hasDirective(&((*(_6125_f))._field_Directives), jule::Str::lit("test", 4))) {
								_1adc5d022_appendTest(_self_, (*(_6125_f))._field_Instances[0LL]);
							};
						}
						_iter_next_1be1d0594:;
						++it;
						goto _iter_begin_1be1d0594;
					}
					_iter_end_1be1d0594:;
				};
			}
			_iter_next_1be1ceb48:;
			++it;
			goto _iter_begin_1be1ceb48;
		}
		_iter_end_1be1ceb48:;
	};
}



inline jule::Bool _1adc5d561_readyTestingPackage(jule::Ptr<_1adc5c593_TestCoder> _self_) {
	jule::Ptr<_1ac77790b_ImportInfo> _7013_p = _1adc5cc69_findTestingPackage(_self_);;
	if ((_7013_p == nullptr)) {
		return false;;
	};
	(*(_self_))._field_t=(*(_1ac778ad8_FindStruct(_7013_p.ptr(), jule::Str::lit("T", 1), false)))._field_Instances[0LL];
	(*(_self_))._field_tmReset=_1ac70316c_FindMethod((*(_self_))._field_t.ptr(), jule::Str::lit("reset", 5), false);
	(*(_self_))._field_tmFailed=_1ac70316c_FindMethod((*(_self_))._field_t.ptr(), jule::Str::lit("Failed", 6), false);
	(*(_self_))._field_tmSkipped=_1ac70316c_FindMethod((*(_self_))._field_t.ptr(), jule::Str::lit("Skipped", 7), false);
	return true;;
}



inline void _1adc5d75e_callTmReset(jule::Ptr<_1adc5c593_TestCoder> _self_) {
	static__1adc61564_func(&((*((*(_self_))._field_oc))._field_Buf), &((*(_self_))._field_tmReset));
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1adc5d95c_callTmFailed(jule::Ptr<_1adc5c593_TestCoder> _self_) {
	static__1adc61564_func(&((*((*(_self_))._field_oc))._field_Buf), &((*(_self_))._field_tmFailed));
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1adc5db5a_callTmSkipped(jule::Ptr<_1adc5c593_TestCoder> _self_) {
	static__1adc61564_func(&((*((*(_self_))._field_oc))._field_Buf), &((*(_self_))._field_tmSkipped));
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1adc5dd58_Serialize(jule::Ptr<_1adc5c593_TestCoder> _self_) {
	_1ba9e61aa_serializeHead((*(_self_))._field_oc);
	__JULE_DEFER({
		_1ba9e5eac_end((*(_self_))._field_oc);
	});;
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("\nvoid test_point(void) {\n", 25));
	_1ba9da1b0_addIndent((*(_self_))._field_oc);
	_1ba9da5ab_indent((*(_self_))._field_oc);
	if ((!(_1adc5d561_readyTestingPackage(_self_)))) {
		_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		_1ba9da3ad_doneIndent((*(_self_))._field_oc);
		return;;
	};
	_1c164cc40_StrBuilder _11813_tb = static__1c164d191_New(40LL);;
	_1ba9ed437_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), &(_11813_tb), (*(_self_))._field_t);
	_1ba9eaba4_asSptr((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _1c164e99a_Buf(&_11813_tb));
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(" _t = jule::new_ptr<", 20));
	_1ba9d9eb2_writeBytes((*(_self_))._field_oc, _1c164e99a_Buf(&_11813_tb));
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(">(); _t.ref = nullptr;\n", 23));
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("auto post_test = [&](void) {\n", 29));
	_1ba9da1b0_addIndent((*(_self_))._field_oc);
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("++total;\n", 9));
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_1adc5d95c_callTmFailed(_self_);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
	_1adc5db5a_callTmSkipped(_self_);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1ba9da3ad_doneIndent((*(_self_))._field_oc);
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("};\n", 3));
	_1adc5d2ca_appendPackageTests(_self_, &((*((*((*(_self_))._field_oc))._field_ir))._field_Main));
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("\n\n", 2));
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("if (failed != 0) std::exit(1);\n", 31));
	_1ba9da3ad_doneIndent((*(_self_))._field_oc);
	_1ba9da5ab_indent((*(_self_))._field_oc);
	_1ba9d9c09_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _1adc5c593_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline void static__1adc60981_writeIdentTo(_1c164cc40_StrBuilder* _3433_buf, jule::Str* _3451_ident) {
	{
		auto expr = _3451_ident;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be1eed88:;
		if (it != expr_end) {
			jule::U8 *_3516_b = it;
			{
				if (((*(_3516_b)) >= 128LLU)) {
					goto _julec_label_1be2001c9;
				};
			}
			_iter_next_1be1eed88:;
			++it;
			goto _iter_begin_1be1eed88;
		}
		_iter_end_1be1eed88:;
	};
	_1c164d702_WriteStr(_3433_buf, (*(_3451_ident)));
	return;;
	_julec_label_1be2001c9:;
	{
		auto expr = static_cast<jule::Slice<jule::I32>>((*(_3451_ident)));
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1be201241:;
		if (it != expr_end) {
			jule::I32 _4516_r = *it;
			{
				if ((_4516_r < 128LL)) {
					_1c164d9aa_WriteByte(_3433_buf, static_cast<jule::U8>(static_cast<jule::U8>(_4516_r)));
					goto _iter_next_1be201241;
				};
				_1c164d702_WriteStr(_3433_buf, _1dbba370e_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_4516_r)), 15LL));
			}
			_iter_next_1be201241:;
			++it;
			goto _iter_begin_1be201241;
		}
		_iter_end_1be201241:;
	};
}



inline void static__1adc60d27_toOut(_1c164cc40_StrBuilder* _6226_buf, jule::Str _6243_ident, jule::Uintptr _6255_addr) {
	_1c164d9aa_WriteByte(_6226_buf, '_');
	if ((_6255_addr != 0LLU)) {
		_1c164d702_WriteStr(_6226_buf, _1dbba3346_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_6255_addr)), 15LL));
		_1c164d9aa_WriteByte(_6226_buf, '_');
	};
	static__1adc60981_writeIdentTo(_6226_buf, &(_6243_ident));
}



inline void static__1adc61278_toLocal(_1c164cc40_StrBuilder* _7728_buf, jule::I64 _7745_row, jule::I64 _7755_col, jule::Str* _7766_ident) {
	_1c164d9aa_WriteByte(_7728_buf, '_');
	_1c164d702_WriteStr(_7728_buf, _1dbba39c8_Itoa(_7745_row));
	_1c164d702_WriteStr(_7728_buf, _1dbba39c8_Itoa(_7755_col));
	_1c164d9aa_WriteByte(_7728_buf, '_');
	static__1adc60981_writeIdentTo(_7728_buf, _7766_ident);
}



inline void static__1adc61564_func(_1c164cc40_StrBuilder* _8525_buf, jule::Ptr<_1ac71426b_Fn>* _8543_f) {
	{
		
		if ((*((*(_8543_f))))._field_Binded) {
			_case_begin_1be205c07:;
			{
				_1c164d702_WriteStr(_8525_buf, (*((*(_8543_f))))._field_Ident);
				return;;
			}
		}
		else if ((*((*(_8543_f))))._field_Ident.equal("main", 4)) {
			_case_begin_1be205c7e:;
			{
				_1c164d702_WriteStr(_8525_buf, jule::Str::lit("entry_point", 11));
				return;;
			}
		}
		else if (_1ac714975_IsMethod((*(_8543_f)).ptr())) {
			_case_begin_1be205d06:;
			{
				if ((*((*(_8543_f))))._field_Statically) {
					_1c164d702_WriteStr(_8525_buf, jule::Str::lit("static_", 7));
				};
			}
		}
		_match_end_1be205ad6:;
	};
	static__1adc60d27_toOut(_8525_buf, (*((*(_8543_f))))._field_Ident, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_8543_f)))));
}



inline void static__1adc61850_funcIns(_1c164cc40_StrBuilder* _10128_buf, jule::Ptr<_1ac717170_FnIns>* _10146_f) {
	if (_1ac718605_IsBuiltin((*(_10146_f)).ptr())) {
		_1c164d702_WriteStr(_10128_buf, jule::Str::lit("jule::", 6));
		_1c164d702_WriteStr(_10128_buf, (*((*((*(_10146_f))))._field_Decl))._field_Ident);
		return;;
	};
	if (((*((*((*(_10146_f))))._field_Decl))._field_Binded || ((*((*(_10146_f))))._field_Generics.len() == 0LL))) {
		static__1adc61564_func(_10128_buf, &((*((*(_10146_f))))._field_Decl));
		return;;
	};
	static__1adc60d27_toOut(_10128_buf, (*((*((*(_10146_f))))._field_Decl))._field_Ident, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_10146_f)))));
}



inline void static__1adc61b3b_traitDecl(_1c164cc40_StrBuilder* _11630_buf, jule::Ptr<_1ac727548_Trait> _11647_t) {
	static__1adc60d27_toOut(_11630_buf, (*(_11647_t))._field_Ident, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_11647_t)));
}



inline void static__1adc61e27_param(_1c164cc40_StrBuilder* _12026_buf, jule::Ptr<_1ac712797_Param>* _12044_p) {
	if ((_1ac6b5b8a_IsAnonIdent((*((*(_12044_p))))._field_Ident) || _1ac6b58c1_IsIgnoreIdent((*((*(_12044_p))))._field_Ident))) {
		return;;
	};
	if (_1ac712db3_IsSelf((*(_12044_p)).ptr())) {
		_1c164d702_WriteStr(_12026_buf, jule::Str::lit("_self_", 6));
		return;;
	};
	if (((*((*(_12044_p))))._field_Token == nullptr)) {
		static__1adc61278_toLocal(_12026_buf, 0LL, 0LL, &((*((*(_12044_p))))._field_Ident));
		return;;
	};
	static__1adc61278_toLocal(_12026_buf, (*((*((*(_12044_p))))._field_Token))._field_Row, (*((*((*(_12044_p))))._field_Token))._field_Column, &((*((*(_12044_p))))._field_Ident));
}



inline void static__1adc62213_structure(_1c164cc40_StrBuilder* _13530_buf, jule::Ptr<_1ac6ee377_Struct>* _13548_s) {
	if ((*((*(_13548_s))))._field_Binded) {
		if ((!(_1baa07353_hasDirective(&((*((*(_13548_s))))._field_Directives), jule::Str::lit("typedef", 7))))) {
			_1c164d702_WriteStr(_13530_buf, jule::Str::lit("struct ", 7));
		};
		_1c164d702_WriteStr(_13530_buf, (*((*(_13548_s))))._field_Ident);
		return;;
	};
	static__1adc60d27_toOut(_13530_buf, (*((*(_13548_s))))._field_Ident, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_13548_s)))));
}



inline void static__1adc624ee_structureIns(_1c164cc40_StrBuilder* _14633_buf, jule::Ptr<_1ac702105_StructIns>* _14651_s) {
	if (((*((*((*(_14651_s))))._field_Decl))._field_Binded || ((*((*(_14651_s))))._field_Generics.len() == 0LL))) {
		static__1adc62213_structure(_14633_buf, &((*((*(_14651_s))))._field_Decl));
		return;;
	};
	static__1adc60d27_toOut(_14633_buf, (*((*((*(_14651_s))))._field_Decl))._field_Ident, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_14651_s)))));
}



inline void static__1adc627da_field(_1c164cc40_StrBuilder* _15426_buf, jule::Ptr<_1ac6eb484_Field>* _15444_f) {
	if ((*((*((*(_15444_f))))._field_Owner))._field_Binded) {
		_1c164d702_WriteStr(_15426_buf, (*((*(_15444_f))))._field_Ident);
		return;;
	};
	_1c164d702_WriteStr(_15426_buf, jule::Str::lit("_field_", 7));
	static__1adc60981_writeIdentTo(_15426_buf, &((*((*(_15444_f))))._field_Ident));
}



inline void static__1adc62ac6_var(_1c164cc40_StrBuilder* _16424_buf, jule::Ptr<_1ac7bb015_Var> _16445_v) {
	{
		
		if ((*(_16445_v))._field_Binded) {
			_case_begin_1be2145c8:;
			{
				_1c164d702_WriteStr(_16424_buf, (*(_16445_v))._field_Ident);
			}
		}
		else if ((*(_16445_v))._field_Ident.equal("error", 5)) {
			_case_begin_1be21463e:;
			{
				_1c164d702_WriteStr(_16424_buf, jule::Str::lit("except.error", 12));
			}
		}
		else if ((*(_16445_v))._field_Ident.equal("self", 4)) {
			_case_begin_1be2146a5:;
			{
				_1c164d702_WriteStr(_16424_buf, jule::Str::lit("_self_", 6));
			}
		}
		else if (((*(_16445_v))._field_RetOrder == -1LL)) {
			_case_begin_1be21471b:;
			{
				_1c164d702_WriteStr(_16424_buf, jule::Str::lit("__jule_func_result", 18));
			}
		}
		else if (((*(_16445_v))._field_RetOrder >= 0LL)) {
			_case_begin_1be215134:;
			{
				_1c164d702_WriteStr(_16424_buf, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
				_1c164d702_WriteStr(_16424_buf, _1dbba39c8_Itoa((*(_16445_v))._field_RetOrder));
			}
		}
		else if (((*(_16445_v))._field_Scope != nullptr)) {
			_case_begin_1be21519a:;
			{
				static__1adc61278_toLocal(_16424_buf, (*((*(_16445_v))._field_Token))._field_Row, (*((*(_16445_v))._field_Token))._field_Column, &((*(_16445_v))._field_Ident));
			}
		}
		else {
			_case_begin_1be214562:;
			{
				static__1adc60d27_toOut(_16424_buf, (*(_16445_v))._field_Ident, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_16445_v)));
			}
		}
		_match_end_1be214496:;
	};
}



inline void static__1adc62db2_iterBegin(_1c164cc40_StrBuilder* _18630_buf, jule::Uintptr _18647_it) {
	_1c164d702_WriteStr(_18630_buf, jule::Str::lit("_iter_begin_", 12));
	_1c164d702_WriteStr(_18630_buf, _1dbba3346_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_18647_it)), 15LL));
}



inline void static__1adc6319d_iterEnd(_1c164cc40_StrBuilder* _19128_buf, jule::Uintptr _19145_it) {
	_1c164d702_WriteStr(_19128_buf, jule::Str::lit("_iter_end_", 10));
	_1c164d702_WriteStr(_19128_buf, _1dbba3346_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19145_it)), 15LL));
}



inline void static__1adc63489_iterNext(_1c164cc40_StrBuilder* _19629_buf, jule::Uintptr _19646_it) {
	_1c164d702_WriteStr(_19629_buf, jule::Str::lit("_iter_next_", 11));
	_1c164d702_WriteStr(_19629_buf, _1dbba3346_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19646_it)), 15LL));
}



inline void static__1adc63775_label(_1c164cc40_StrBuilder* _20126_buf, jule::Uintptr _20143_u) {
	_1c164d702_WriteStr(_20126_buf, jule::Str::lit("_julec_label_", 13));
	_1c164d702_WriteStr(_20126_buf, _1dbba3346_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20143_u)), 15LL));
}



inline void static__1adc63a61_matchEnd(_1c164cc40_StrBuilder* _20629_buf, jule::Uintptr _20646_m) {
	_1c164d702_WriteStr(_20629_buf, jule::Str::lit("_match_end_", 11));
	_1c164d702_WriteStr(_20629_buf, _1dbba3346_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20646_m)), 15LL));
}



inline void static__1adc63d4c_caseBegin(_1c164cc40_StrBuilder* _21130_buf, jule::Uintptr _21147_c) {
	_1c164d702_WriteStr(_21130_buf, jule::Str::lit("_case_begin_", 12));
	_1c164d702_WriteStr(_21130_buf, _1dbba3346_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_21147_c)), 15LL));
}





std::ostream &operator<<(std::ostream &_Stream, _1adc60453_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ba9d7a3c_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ba9d8114_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "ti:" << _Src._field_ti << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ba9d84dd_traitCast _Src) {
	_Stream << "traitCast{";
	_Stream << "t1:" << _Src._field_t1 << ", ";
	_Stream << "t2:" << _Src._field_t2;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ba9e9048_Str(_1ba9e8ba2_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1ba9e9389_Equal(jule::Ptr<_1ba9e8ba2_customType> _self_, jule::Ptr<_1ac859a32_TypeKind> _4121_k) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ba9e8ba2_customType _Src) {
	_Stream << _1ba9e9048_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1ba9e97b8_typeCoder> static__1ba9e9d07_new(jule::Ptr<_1ba9d9555_ObjectCoder>* _6624_oc) {
	jule::Ptr<_1ba9e97b8_typeCoder> _6713_tc = jule::new_ptr<_1ba9e97b8_typeCoder>(_1ba9e97b8_typeCoder{._field_oc=(*(_6624_oc)), });;
	(*(_6713_tc))._field_rc=static__1baa03162_new(&(_6713_tc));
	return _6713_tc;;
}



inline void _1ba9ea16a_toType(_1ba9e97b8_typeCoder* _self_, _1c164cc40_StrBuilder* _7330_buf, jule::Str _7351_id) {
	if ((!_7351_id.equal("uintptr", 7))) {
		_7351_id=_1dbba5c1c_RealKindOf(_7351_id);
	};
	_1c164d702_WriteStr(_7330_buf, jule::Str::lit("jule::", 6));
	if (((97LL <= _7351_id[0LL]) && (_7351_id[0LL] <= 122LLU))) {
		_1c164d9aa_WriteByte(_7330_buf, static_cast<jule::U8>((_7351_id[0LL] - 32LLU)));
	} else {
		_1c164d9aa_WriteByte(_7330_buf, _7351_id[0LL]);
	};
	_1c164d702_WriteStr(_7330_buf, _7351_id.slice(1LL));
}



inline void _1ba9ea4cd_prim(_1ba9e97b8_typeCoder* _self_, _1c164cc40_StrBuilder* _8728_buf, jule::Ptr<_1ac86260b_Prim> _8745_p) {
	_1ba9ea16a_toType(_self_, _8728_buf, (*(_8745_p))._field_Kind);
}



inline void _1ba9ea841_tuple(_1ba9e97b8_typeCoder* _self_, _1c164cc40_StrBuilder* _9229_buf, jule::Ptr<_1ac8676ee_Tuple> _9250_t) {
	_1c164d702_WriteStr(_9229_buf, jule::Str::lit("std::tuple<", 11));
	{
		auto expr = &((*(_9250_t))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be407ee7:;
		if (it != expr_end) {
			jule::I64 _9414_i = it - expr->begin();
			jule::Ptr<_1ac859a32_TypeKind> _9421_tk = *it;
			{
				_1baa00181_kind(_self_, _9229_buf, _9421_tk);
				if ((((*(_9250_t))._field_Types.len() - _9414_i) > 1LL)) {
					_1c164d9aa_WriteByte(_9229_buf, ',');
				};
			}
			_iter_next_1be407ee7:;
			++it;
			_9414_i++;
			goto _iter_begin_1be407ee7;
		}
		_iter_end_1be407ee7:;
	};
	_1c164d9aa_WriteByte(_9229_buf, '>');
}



inline void _1ba9eaba4_asSptr(_1ba9e97b8_typeCoder* _self_, _1c164cc40_StrBuilder* _10430_buf, jule::Slice<jule::U8> _10447_elem) {
	_1c164d702_WriteStr(_10430_buf, jule::Str::lit("jule::Ptr<", 10));
	_1c164d449_Write(_10430_buf, _10447_elem);
	_1c164d9aa_WriteByte(_10430_buf, '>');
}



inline void _1ba9eb017_sptr(_1ba9e97b8_typeCoder* _self_, _1c164cc40_StrBuilder* _11128_buf, jule::Ptr<_1ac866137_Sptr> _11149_sptr) {
	_1c164d702_WriteStr(_11128_buf, jule::Str::lit("jule::Ptr<", 10));
	_1baa00181_kind(_self_, _11128_buf, (*(_11149_sptr))._field_Elem);
	_1c164d9aa_WriteByte(_11128_buf, '>');
}



inline void _1ba9eb37a_ptr(_1ba9e97b8_typeCoder* _self_, _1c164cc40_StrBuilder* _11827_buf, jule::Ptr<_1ac8698ee_Ptr> _11848_p) {
	;
	if (_1ac86a438_IsUnsafe(_11848_p.ptr())) {
		_1c164d702_WriteStr(_11827_buf, jule::Str::lit("void*", 5));
	} else {
		_1baa00181_kind(_self_, _11827_buf, (*(_11848_p))._field_Elem);
		_1c164d702_WriteStr(_11827_buf, jule::Str::lit("*", 1));
	};
}



inline void _1ba9eb6dd_enumDecl(_1ba9e97b8_typeCoder* _self_, _1c164cc40_StrBuilder* _12932_buf, jule::Ptr<_1ac729c54_Enum> _12953_e) {
	_1baa00181_kind(_self_, _12932_buf, (*((*(_12953_e))._field_Kind))._field_Kind);
}



inline void _1ba9eba51_typeEnumDecl(_1ba9e97b8_typeCoder* _self_, _1c164cc40_StrBuilder* _13436_buf, jule::Ptr<_1ac72b45e_TypeEnum> _13457_e) {
	_1c164d702_WriteStr(_13436_buf, jule::Str::lit("jule::Any", 9));
}



inline void _1ba9ebdb4_asSlice(_1ba9e97b8_typeCoder* _self_, _1c164cc40_StrBuilder* _13831_buf, jule::Ptr<_1ac859a32_TypeKind> _13852_elem) {
	_1c164d702_WriteStr(_13831_buf, jule::Str::lit("jule::Slice<", 12));
	_1baa00181_kind(_self_, _13831_buf, _13852_elem);
	_1c164d9aa_WriteByte(_13831_buf, '>');
}



inline void _1ba9ec227_slice(_1ba9e97b8_typeCoder* _self_, _1c164cc40_StrBuilder* _14529_buf, jule::Ptr<_1ac866b0a_Slc> _14550_s) {
	_1ba9ebdb4_asSlice(_self_, _14529_buf, (*(_14550_s))._field_Elem);
}



inline void _1ba9ec58a_mapType(_1ba9e97b8_typeCoder* _self_, _1c164cc40_StrBuilder* _15031_buf, jule::Ptr<_1ac86829e_Map> _15052_m) {
	_1c164d702_WriteStr(_15031_buf, jule::Str::lit("jule::Map<", 10));
	_1baa00181_kind(_self_, _15031_buf, (*(_15052_m))._field_Key);
	_1c164d9aa_WriteByte(_15031_buf, ',');
	_1baa00181_kind(_self_, _15031_buf, (*(_15052_m))._field_Val);
	_1c164d9aa_WriteByte(_15031_buf, '>');
}



inline void _1ba9ecc61_traitDecl(_1ba9e97b8_typeCoder* _self_, _1c164cc40_StrBuilder* _16533_buf, jule::Ptr<_1ac727548_Trait> _16550_t) {
	_1c164d702_WriteStr(_16533_buf, jule::Str::lit("jule::Trait<", 12));
	static__1adc61b3b_traitDecl(_16533_buf, _16550_t);
	_1c164d9aa_WriteByte(_16533_buf, '>');
}



inline void _1ba9ed0c4_structure(_1ba9e97b8_typeCoder* _self_, _1c164cc40_StrBuilder* _17233_buf, jule::Ptr<_1ac6ee377_Struct> _17250_s) {
	static__1adc62213_structure(_17233_buf, &(_17250_s));
}



inline void _1ba9ed437_structureIns(_1ba9e97b8_typeCoder* _self_, _1c164cc40_StrBuilder* _17736_buf, jule::Ptr<_1ac702105_StructIns> _17757_s) {
	if ((!((*((*(_17757_s))._field_Decl))._field_Binded))) {
		static__1adc624ee_structureIns(_17736_buf, &(_17757_s));
		return;;
	};
	jule::Ptr<_1ac6c7a9d_Directive> _1829_d = _1baa06e8a_findDirective(&((*((*(_17757_s))._field_Decl))._field_Directives), jule::Str::lit("namespace", 9));;
	if ((_1829_d != nullptr)) {
		_1c164d449_Write(_17736_buf, _1ba9e6aa1_concatAllParts((*(_1829_d))._field_Args));
		_1c164d702_WriteStr(_17736_buf, jule::Str::lit("::", 2));
	};
	static__1adc624ee_structureIns(_17736_buf, &(_17757_s));
	if (((*(_17757_s))._field_Generics.len() > 0LL)) {
		_1c164d9aa_WriteByte(_17736_buf, '<');
		{
			auto expr = &((*(_17757_s))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1be4176aa:;
			if (it != expr_end) {
				jule::I64 _19018_i = it - expr->begin();
				jule::Ptr<_1ac85814b_InsGeneric> _19025_g = *it;
				{
					_1baa00181_kind(_self_, _17736_buf, (*(_19025_g))._field_Kind);
					if ((((*(_17757_s))._field_Generics.len() - _19018_i) > 1LL)) {
						_1c164d9aa_WriteByte(_17736_buf, ',');
					};
				}
				_iter_next_1be4176aa:;
				++it;
				_19018_i++;
				goto _iter_begin_1be4176aa;
			}
			_iter_end_1be4176aa:;
		};
		_1c164d9aa_WriteByte(_17736_buf, '>');
	};
}



inline void _1ba9ed79a_array(_1ba9e97b8_typeCoder* _self_, _1c164cc40_StrBuilder* _20129_buf, jule::Ptr<_1ac868e2b_Arr> _20150_a) {
	_1c164d702_WriteStr(_20129_buf, jule::Str::lit("jule::Array<", 12));
	_1baa00181_kind(_self_, _20129_buf, (*(_20150_a))._field_Elem);
	_1c164d9aa_WriteByte(_20129_buf, ',');
	_1c164d702_WriteStr(_20129_buf, _1dbba39c8_Itoa((*(_20150_a))._field_N));
	_1c164d9aa_WriteByte(_20129_buf, '>');
}



inline void _1ba9ede71_paramIns(_1ba9e97b8_typeCoder* _self_, _1c164cc40_StrBuilder* _22432_buf, jule::Ptr<_1ac7161c4_ParamIns>* _22454_p) {
	if ((*((*((*(_22454_p))))._field_Decl))._field_Variadic) {
		_1c164d702_WriteStr(_22432_buf, jule::Str::lit("jule::Slice<", 12));
		_1baa00181_kind(_self_, _22432_buf, (*((*(_22454_p))))._field_Kind);
		_1c164d9aa_WriteByte(_22432_buf, '>');
	} else {
		_1baa00181_kind(_self_, _22432_buf, (*((*(_22454_p))))._field_Kind);
	};
	if ((*((*((*(_22454_p))))._field_Decl))._field_Reference) {
		_1c164d9aa_WriteByte(_22432_buf, '*');
	};
}



inline void _1ba9ee647_funcInsResult(_1ba9e97b8_typeCoder* _self_, _1c164cc40_StrBuilder* _25637_s, jule::Ptr<_1ac717170_FnIns>* _25657_f) {
	if (_1ac7146de_IsVoid((*((*(_25657_f))))._field_Decl.ptr())) {
		if ((*((*((*(_25657_f))))._field_Decl))._field_Exceptional) {
			_1c164d702_WriteStr(_25637_s, jule::Str::lit("jule::VoidExceptional", 21));
		} else {
			_1c164d702_WriteStr(_25637_s, jule::Str::lit("void", 4));
		};
		return;;
	};
	if ((*((*((*(_25657_f))))._field_Decl))._field_Exceptional) {
		_1c164d702_WriteStr(_25637_s, jule::Str::lit("jule::Exceptional<", 18));
		_1baa0521e_codeMut1((*(_self_))._field_rc.ptr(), _25637_s, &((*((*(_25657_f))))._field_Result));
		_1c164d9aa_WriteByte(_25637_s, '>');
		return;;
	};
	_1baa0521e_codeMut1((*(_self_))._field_rc.ptr(), _25637_s, &((*((*(_25657_f))))._field_Result));
}



inline void _1ba9ee9aa_anonFunc(_1ba9e97b8_typeCoder* _self_, _1c164cc40_StrBuilder* _27432_buf, jule::Ptr<_1ac717170_FnIns> _27453_f) {
	if ((((*(_27453_f))._field_Result != nullptr) && (_1ac85dea9_Tup((*(_27453_f))._field_Result.ptr()) != nullptr))) {
		_1ba9daee6_pushResultIns((*(_self_))._field_oc, &(_27453_f));
	};
	_1ba9ee647_funcInsResult(_self_, _27432_buf, &(_27453_f));
	_1c164d9aa_WriteByte(_27432_buf, '(');
	if (((*(_27453_f))._field_Params.len() > 0LL)) {
		{
			auto expr = &((*(_27453_f))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1be428a40:;
			if (it != expr_end) {
				jule::I64 _28118_i = it - expr->begin();
				jule::Ptr<_1ac7161c4_ParamIns> _28125_param = *it;
				{
					if (_1ac712db3_IsSelf((*(_28125_param))._field_Decl.ptr())) {
						goto _iter_next_1be428a40;
					};
					_1ba9ede71_paramIns(_self_, _27432_buf, &(_28125_param));
					if ((((*(_27453_f))._field_Params.len() - _28118_i) > 1LL)) {
						_1c164d9aa_WriteByte(_27432_buf, ',');
					};
				}
				_iter_next_1be428a40:;
				++it;
				_28118_i++;
				goto _iter_begin_1be428a40;
			}
			_iter_end_1be428a40:;
		};
	} else {
		_1c164d702_WriteStr(_27432_buf, jule::Str::lit("void", 4));
	};
	_1c164d9aa_WriteByte(_27432_buf, ')');
}



inline void _1ba9eed1d_func(_1ba9e97b8_typeCoder* _self_, _1c164cc40_StrBuilder* _29728_buf, jule::Ptr<_1ac717170_FnIns> _29749_f) {
	_1c164d702_WriteStr(_29728_buf, jule::Str::lit("jule::Fn<", 9));
	_1ba9ee9aa_anonFunc(_self_, _29728_buf, _29749_f);
	_1c164d9aa_WriteByte(_29728_buf, '>');
}



inline void _1baa00181_kind(_1ba9e97b8_typeCoder* _self_, _1c164cc40_StrBuilder* _30428_buf, jule::Ptr<_1ac859a32_TypeKind> _30449_k) {
	{
		
		if ((_1ac85d706_Struct(_30449_k.ptr()) != nullptr)) {
			_case_begin_1be42cd41:;
			{
				_1ba9ed437_structureIns(_self_, _30428_buf, _1ac85d706_Struct(_30449_k.ptr()));
				return;;
			}
		}
		else if (_1ac85a879_Binded(_30449_k.ptr())) {
			_case_begin_1be42cdb8:;
			{
				_1c164d702_WriteStr(_30428_buf, (*(_30449_k))._field_BindIdent);
				return;;
			}
		}
		else if ((_1ac85c183_Prim(_30449_k.ptr()) != nullptr)) {
			_case_begin_1be42ce40:;
			{
				_1ba9ea4cd_prim(_self_, _30428_buf, _1ac85c183_Prim(_30449_k.ptr()));
				return;;
			}
		}
		else if ((_1ac85dea9_Tup(_30449_k.ptr()) != nullptr)) {
			_case_begin_1be42ceb7:;
			{
				_1ba9ea841_tuple(_self_, _30428_buf, _1ac85dea9_Tup(_30449_k.ptr()));
				return;;
			}
		}
		else if ((_1ac85c419_Sptr(_30449_k.ptr()) != nullptr)) {
			_case_begin_1be42d03e:;
			{
				_1ba9eb017_sptr(_self_, _30428_buf, _1ac85c419_Sptr(_30449_k.ptr()));
				return;;
			}
		}
		else if ((_1ac85c6a0_Ptr(_30449_k.ptr()) != nullptr)) {
			_case_begin_1be42d0b6:;
			{
				_1ba9eb37a_ptr(_self_, _30428_buf, _1ac85c6a0_Ptr(_30449_k.ptr()));
				return;;
			}
		}
		else if ((_1ac85c936_Enum(_30449_k.ptr()) != nullptr)) {
			_case_begin_1be42d13d:;
			{
				_1ba9eb6dd_enumDecl(_self_, _30428_buf, _1ac85c936_Enum(_30449_k.ptr()));
				return;;
			}
		}
		else if ((_1ac85cbbc_TypeEnum(_30449_k.ptr()) != nullptr)) {
			_case_begin_1be42d1b5:;
			{
				_1ba9eba51_typeEnumDecl(_self_, _30428_buf, _1ac85cbbc_TypeEnum(_30449_k.ptr()));
				return;;
			}
		}
		else if ((_1ac85d1d9_Slc(_30449_k.ptr()) != nullptr)) {
			_case_begin_1be42d23c:;
			{
				_1ba9ec227_slice(_self_, _30428_buf, _1ac85d1d9_Slc(_30449_k.ptr()));
				return;;
			}
		}
		else if ((_1ac85dc23_Map(_30449_k.ptr()) != nullptr)) {
			_case_begin_1be42d2b4:;
			{
				_1ba9ec58a_mapType(_self_, _30428_buf, _1ac85dc23_Map(_30449_k.ptr()));
				return;;
			}
		}
		else if ((_1ac85d98c_Trait(_30449_k.ptr()) != nullptr)) {
			_case_begin_1be42d33b:;
			{
				_1ba9ecc61_traitDecl(_self_, _30428_buf, _1ac85d98c_Trait(_30449_k.ptr()));
				return;;
			}
		}
		else if ((_1ac85ce53_Arr(_30449_k.ptr()) != nullptr)) {
			_case_begin_1be42d3b3:;
			{
				_1ba9ed79a_array(_self_, _30428_buf, _1ac85ce53_Arr(_30449_k.ptr()));
				return;;
			}
		}
		else if ((_1ac85d470_Fn(_30449_k.ptr()) != nullptr)) {
			_case_begin_1be42d43a:;
			{
				_1ba9eed1d_func(_self_, _30428_buf, _1ac85d470_Fn(_30449_k.ptr()));
				return;;
			}
		}
		_match_end_1be42cb65:;
	};
	{
		auto &_match_expr{ (*(_30449_k))._field_Kind };
		
		if (_match_expr.type_is(true, 27)) {
			_case_begin_1be42d4e5:;
			{
				_1c164d702_WriteStr(_30428_buf, (*((*(_30449_k))._field_Kind.cast_ptr<_1ba9e8ba2_customType>(27)))._field_kind);
			}
		}
		else {
			_case_begin_1be436c7e:;
			{
				_1c164d702_WriteStr(_30428_buf, jule::Str::lit("[<unimplemented_type_kind>]", 27));
			}
		}
		_match_end_1be436c29:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ba9e97b8_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "rc:" << _Src._field_rc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1baa02b89_resultCoder> static__1baa03162_new(jule::Ptr<_1ba9e97b8_typeCoder>* _37124_tc) {
	return jule::new_ptr<_1baa02b89_resultCoder>(_1baa02b89_resultCoder{._field_tc=(*(_37124_tc))});;
}



inline void _1baa034c5_ptr(_1baa02b89_resultCoder* _self_, _1c164cc40_StrBuilder* _37527_s, jule::Ptr<_1ac8698ee_Ptr> _37546_p) {
	_1c164d702_WriteStr(_37527_s, jule::Str::lit("p", 1));
	_1baa04dab_codeMut(_self_, _37527_s, &((*(_37546_p))._field_Elem));
}



inline void _1baa03838_sptr(_1baa02b89_resultCoder* _self_, _1c164cc40_StrBuilder* _38028_s, jule::Ptr<_1ac866137_Sptr> _38047_p) {
	_1c164d702_WriteStr(_38028_s, jule::Str::lit("x", 1));
	_1baa04dab_codeMut(_self_, _38028_s, &((*(_38047_p))._field_Elem));
}



inline void _1baa03b9b_mapType(_1baa02b89_resultCoder* _self_, _1c164cc40_StrBuilder* _38531_s, jule::Ptr<_1ac86829e_Map> _38550_p) {
	_1c164d702_WriteStr(_38531_s, jule::Str::lit("m", 1));
	_1baa04dab_codeMut(_self_, _38531_s, &((*(_38550_p))._field_Key));
	_1baa04dab_codeMut(_self_, _38531_s, &((*(_38550_p))._field_Val));
}



inline void _1baa0400e_slice(_1baa02b89_resultCoder* _self_, _1c164cc40_StrBuilder* _39129_s, jule::Ptr<_1ac866b0a_Slc> _39148_slc) {
	_1c164d702_WriteStr(_39129_s, jule::Str::lit("s", 1));
	_1baa04dab_codeMut(_self_, _39129_s, &((*(_39148_slc))._field_Elem));
}



inline void _1baa04372_arr(_1baa02b89_resultCoder* _self_, _1c164cc40_StrBuilder* _39627_s, jule::Ptr<_1ac868e2b_Arr> _39646_arr) {
	_1c164d702_WriteStr(_39627_s, jule::Str::lit("a", 1));
	_1c164d702_WriteStr(_39627_s, _1dbba370e_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>((*(_39646_arr))._field_N)), 16LL));
	_1baa04dab_codeMut(_self_, _39627_s, &((*(_39646_arr))._field_Elem));
}



inline void _1baa046d5_func(_1baa02b89_resultCoder* _self_, _1c164cc40_StrBuilder* _40228_s, jule::Ptr<_1ac717170_FnIns> _40247_f) {
	_1c164d702_WriteStr(_40228_s, jule::Str::lit("f", 1));
	{
		auto expr = &((*(_40247_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be43e391:;
		if (it != expr_end) {
			jule::Ptr<_1ac7161c4_ParamIns> _40421_p = *it;
			{
				if ((*((*(_40421_p))._field_Decl))._field_Reference) {
					_1c164d702_WriteStr(_40228_s, jule::Str::lit("r", 1));
				};
				_1baa04dab_codeMut(_self_, _40228_s, &((*(_40421_p))._field_Kind));
			}
			_iter_next_1be43e391:;
			++it;
			goto _iter_begin_1be43e391;
		}
		_iter_end_1be43e391:;
	};
	if (((*(_40247_f))._field_Result != nullptr)) {
		_1baa04dab_codeMut(_self_, _40228_s, &((*(_40247_f))._field_Result));
	};
}



inline void _1baa04a48_tup(_1baa02b89_resultCoder* _self_, _1c164cc40_StrBuilder* _41527_s, jule::Ptr<_1ac8676ee_Tuple> _41546_tup) {
	{
		auto expr = &((*(_41546_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be441a36:;
		if (it != expr_end) {
			jule::Ptr<_1ac859a32_TypeKind> _41621_t = *it;
			{
				_1c164d702_WriteStr(_41527_s, jule::Str::lit("__jule_tuple_", 13));
				_1baa04dab_codeMut(_self_, _41527_s, &(_41621_t));
			}
			_iter_next_1be441a36:;
			++it;
			goto _iter_begin_1be441a36;
		}
		_iter_end_1be441a36:;
	};
}



inline void _1baa04dab_codeMut(_1baa02b89_resultCoder* _self_, _1c164cc40_StrBuilder* _42231_s, jule::Ptr<_1ac859a32_TypeKind>* _42251_t) {
	{
		auto &_match_expr{ (*((*(_42251_t))))._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_1be442c79:;
			{
				_1baa034c5_ptr(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1ac8698ee_Ptr>(26));
			}
		}
		else if (_match_expr.type_is(true, 21)) {
			_case_begin_1be443142:;
			{
				_1baa03838_sptr(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1ac866137_Sptr>(21));
			}
		}
		else if (_match_expr.type_is(true, 24)) {
			_case_begin_1be4431a8:;
			{
				_1baa03b9b_mapType(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1ac86829e_Map>(24));
			}
		}
		else if (_match_expr.type_is(true, 22)) {
			_case_begin_1be44321e:;
			{
				_1baa0400e_slice(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1ac866b0a_Slc>(22));
			}
		}
		else if (_match_expr.type_is(true, 25)) {
			_case_begin_1be443296:;
			{
				_1baa04372_arr(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1ac868e2b_Arr>(25));
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1be4436d6:;
			{
				_1baa046d5_func(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1ac717170_FnIns>(1));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1be44375d:;
			{
				jule::Ptr<_1ac729c54_Enum> _43713_te = (*((*(_42251_t))))._field_Kind.cast_ptr<_1ac729c54_Enum>(3);;
				static__1adc60d27_toOut(_42231_s, (*(_43713_te))._field_Ident, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_43713_te)));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1be4437d5:;
			{
				jule::Ptr<_1ac72b45e_TypeEnum> _44013_te = (*((*(_42251_t))))._field_Kind.cast_ptr<_1ac72b45e_TypeEnum>(4);;
				static__1adc60d27_toOut(_42231_s, (*(_44013_te))._field_Ident, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_44013_te)));
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1be44385c:;
			{
				jule::Ptr<_1ac702105_StructIns> _44317_si = (*((*(_42251_t))))._field_Kind.cast_ptr<_1ac702105_StructIns>(0);;
				static__1adc624ee_structureIns(_42231_s, &(_44317_si));
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1be4438d4:;
			{
				jule::Ptr<_1ac727548_Trait> _44617_trt = (*((*(_42251_t))))._field_Kind.cast_ptr<_1ac727548_Trait>(2);;
				static__1adc61b3b_traitDecl(_42231_s, _44617_trt);
			}
		}
		else if (_match_expr.type_is(true, 20)) {
			_case_begin_1be44395b:;
			{
				_1c164d702_WriteStr(_42231_s, (*((*((*(_42251_t))))._field_Kind.cast_ptr<_1ac86260b_Prim>(20)))._field_Kind);
			}
		}
		else if (_match_expr.type_is(true, 23)) {
			_case_begin_1be4439d3:;
			{
				_1baa04a48_tup(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1ac8676ee_Tuple>(23));
			}
		}
		else {
			_case_begin_1be4430cb:;
			{
				jule::panic(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:453:13"));;
			}
		}
		_match_end_1be443076:;
	};
}



inline void _1baa0521e_codeMut1(_1baa02b89_resultCoder* _self_, _1c164cc40_StrBuilder* _45732_s, jule::Ptr<_1ac859a32_TypeKind>* _45752_t) {
	jule::Ptr<_1ac8676ee_Tuple> _45813_tup = _1ac85dea9_Tup((*(_45752_t)).ptr());;
	if ((_45813_tup != nullptr)) {
		_1baa04a48_tup(_self_, _45732_s, _45813_tup);
	} else {
		_1baa00181_kind((*(_self_))._field_tc.ptr(), _45732_s, (*(_45752_t)));
	};
}



inline jule::Slice<jule::U8> _1baa0552c_code(_1baa02b89_resultCoder* _self_, jule::Ptr<_1ac859a32_TypeKind>* _46628_t) {
	_1c164cc40_StrBuilder _46713_s = static__1c164d191_New(20LL);;
	_1baa04dab_codeMut(_self_, &(_46713_s), _46628_t);
	return _1c164e99a_Buf(&_46713_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1baa02b89_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "tc:" << _Src._field_tc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1bba9096d_Name(_1bba8e86d_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1bba90ab1_What(_1bba8e86d_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1bba91e47_Reset(_1bba8e86d_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1bba9208a_Short(_1bba8e86d_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bba8e86d_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1bba96259_Name(_1bba96633_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1bba9691e_What(_1bba96633_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1bba96a62_Reset(_1bba96633_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1bba96ba5_Short(_1bba96633_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bba96633_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1bba99955_Name(_1bba99d2e_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1bba9a11a_What(_1bba99d2e_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1bba9a25d_Reset(_1bba99d2e_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1bba9a3a1_Short(_1bba99d2e_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bba99d2e_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1bba9d195_Name(_1bba9d56e_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1bba9d85a_What(_1bba9d56e_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1bba9d99d_Reset(_1bba9d56e_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1bba9dae1_Short(_1bba9d56e_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bba9d56e_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1bbaa1891_Name(_1bbaa1c6a_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1bbaa2056_What(_1bbaa1c6a_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1bbaa2199_Reset(_1bbaa1c6a_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1bbaa22dc_Short(_1bbaa1c6a_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bbaa1c6a_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1baa6d793_FlagSet> static__1baa6da7e_New(void) {
	return jule::new_ptr<_1baa6d793_FlagSet>(_1baa6d793_FlagSet{._field_flags=jule::Slice<jule::Trait<_1baa6bbe2_CommonFlag>>::alloc(0LL, 20LL)});;
}



inline jule::Trait<_1baa6bbe2_CommonFlag> _1baa6e002_FindFlag(_1baa6d793_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbaab4e4:;
		if (it != expr_end) {
			jule::Trait<_1baa6bbe2_CommonFlag> _7221_flag = *it;
			{
				if ((_1baa6bbe2_CommonFlag_mptr_data[(_7221_flag).type_offset]._1baa3adc0_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;;
				};
			}
			_iter_next_1bbaab4e4:;
			++it;
			goto _iter_begin_1bbaab4e4;
		}
		_iter_end_1bbaab4e4:;
	};
	return nullptr;;
}



inline jule::Trait<_1baa6bbe2_CommonFlag> _1baa6e343_FindFlagShort(_1baa6d793_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbaacced:;
		if (it != expr_end) {
			jule::Trait<_1baa6bbe2_CommonFlag> _8221_flag = *it;
			{
				if ((_1baa6bbe2_CommonFlag_mptr_data[(_8221_flag).type_offset]._1baa3b013_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;;
				};
			}
			_iter_next_1bbaacced:;
			++it;
			goto _iter_begin_1bbaacced;
		}
		_iter_end_1bbaacced:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1baa6e91a_Parse(_1baa6d793_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_1baa71224_argParser _11613_ap = _1baa71224_argParser{._field_set=(*(_self_)), ._field_args=_11524_args, };;
	({
		auto except = _1baa72720_parse(&_11613_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(), _11613_ap._field_content);;
}



inline jule::Ptr<_1bbaa1c6a_Flag> _1acc1246c_addFlagCommon(_1baa6d793_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	if ((_1baa6e002_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:133:13"));;
	};
	if (((_13146_short != 0LL) && (_1baa6e343_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:13"));;
	};
	jule::Ptr<_1bbaa1c6a_Flag> _14013_flag = jule::new_ptr<_1bbaa1c6a_Flag>(_1bbaa1c6a_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_1baa6bbe2_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_1baa6bbe2_CommonFlag>(_14013_flag, 4)); };
	return _14013_flag;;
}

inline jule::Ptr<_1bba9d56e_Flag> _1acc19298_addFlagCommon(_1baa6d793_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	if ((_1baa6e002_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:133:13"));;
	};
	if (((_13146_short != 0LL) && (_1baa6e343_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:13"));;
	};
	jule::Ptr<_1bba9d56e_Flag> _14013_flag = jule::new_ptr<_1bba9d56e_Flag>(_1bba9d56e_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_1baa6bbe2_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_1baa6bbe2_CommonFlag>(_14013_flag, 3)); };
	return _14013_flag;;
}



inline void _1acc1015c_AddVar(_1baa6d793_FlagSet* _self_, jule::Ptr<jule::Str> _16762_var, jule::Str _16771_name, jule::I32 _16782_short, jule::Str _16795_what) {
	jule::Ptr<_1bbaa1c6a_Flag> _16813_flag = _1acc1246c_addFlagCommon(_self_, _16771_name, _16782_short, _16795_what);;
	(*(_16813_flag))._field_default=(*(_16762_var));
	(*(_16813_flag))._field_data=_16762_var;
}

inline void _1acc16ecc_AddVar(_1baa6d793_FlagSet* _self_, jule::Ptr<jule::Bool> _16762_var, jule::Str _16771_name, jule::I32 _16782_short, jule::Str _16795_what) {
	jule::Ptr<_1bba9d56e_Flag> _16813_flag = _1acc19298_addFlagCommon(_self_, _16771_name, _16782_short, _16795_what);;
	(*(_16813_flag))._field_default=(*(_16762_var));
	(*(_16813_flag))._field_data=_16762_var;
}





std::ostream &operator<<(std::ostream &_Stream, _1baa6d793_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _1bbab4b90_parseInteger(_1baa71224_argParser* _self_, jule::Str* _18231_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)> _18239_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18231_s))).empty()) {
			_case_begin_1bbab79b7:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1a693951e_HasPrefix((*(_18231_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1bbab780d:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1a693951e_HasPrefix((*(_18231_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1bbab7b93:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1a693951e_HasPrefix((*(_18231_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1bbab7c09:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18231_s))[0LL] == '0')) {
			_case_begin_1bbab7324:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1bbab72ad:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1bbab71e2:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1bbabc46c_parseInteger(_1baa71224_argParser* _self_, jule::Str* _18231_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)> _18239_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18231_s))).empty()) {
			_case_begin_1bbac0250:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1a693951e_HasPrefix((*(_18231_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1bbac0096:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1a693951e_HasPrefix((*(_18231_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1bbac042b:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1a693951e_HasPrefix((*(_18231_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1bbac0492:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18231_s))[0LL] == '0')) {
			_case_begin_1bbabeaac:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1bbabea46:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1bbabe97a:;
	};
	return __jule_func_result;;
}



inline jule::Str _1baa71a3d_getData(_1baa71224_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1baa71cb3_processFlag(_1baa71224_argParser* _self_, jule::Trait<_1baa6bbe2_CommonFlag>* _20935_flag) {
	{
		auto &_match_expr{ (*(_20935_flag)) };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1bbab1e34:;
			{
				jule::Ptr<_1bba9d56e_Flag> _21217_bf = (*(_20935_flag)).cast_ptr<_1bba9d56e_Flag>(3);;
				(*((*(_21217_bf))._field_data))=(!((*(_21217_bf))._field_default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_1bbab1dce:;
	};
	jule::Str _2179_data = _1baa71a3d_getData(_self_);;
	if ((_2179_data).empty()) {
		return jule::VoidExceptional(jule::Any(((jule::Str::lit("--", 2) + _1baa6bbe2_CommonFlag_mptr_data[((*(_20935_flag))).type_offset]._1baa3adc0_Name((*(_20935_flag)))) + jule::Str::lit(": expression missing", 20)), &__jule_any_type4));
	};
	{
		auto &_match_expr{ (*(_20935_flag)) };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1bbab3c9e:;
			{
				jule::Ptr<_1bba8e86d_Flag> _22417_intf = (*(_20935_flag)).cast_ptr<_1bba8e86d_Flag>(0);;
				jule::Bool _22527_ok = false;;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1bbab4b90_parseInteger(_self_, &(_2179_data), jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _22565_s, jule::I64 _22573_base) mutable -> __jule_tuple_i64__jule_tuple_bool {
						__jule_tuple_i64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::I64>(({
							auto except = _1dbb08c91_ParseInt(_22565_s, _22573_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LL;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*((*(_22417_intf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_22527_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_22527_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str::lit("--", 2) + _1baa6bbe2_CommonFlag_mptr_data[((*(_20935_flag))).type_offset]._1baa3adc0_Name((*(_20935_flag)))) + jule::Str::lit(": expression must be valid signed integer", 41)), &__jule_any_type4));
				};
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1bbab3d15:;
			{
				jule::Ptr<_1bba96633_Flag> _23217_uintf = (*(_20935_flag)).cast_ptr<_1bba96633_Flag>(1);;
				jule::Bool _23328_ok = false;;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1bbabc46c_parseInteger(_self_, &(_2179_data), jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _23366_s, jule::I64 _23374_base) mutable -> __jule_tuple_u64__jule_tuple_bool {
						__jule_tuple_u64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(({
							auto except = _1dbb087da_ParseUint(_23366_s, _23374_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LLU;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*((*(_23217_uintf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23328_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23328_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str::lit("--", 2) + _1baa6bbe2_CommonFlag_mptr_data[((*(_20935_flag))).type_offset]._1baa3adc0_Name((*(_20935_flag)))) + jule::Str::lit(": expression must be valid unsigned integer", 43)), &__jule_any_type4));
				};
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1bbab3d7b:;
			{
				jule::Ptr<_1bba99d2e_Flag> _24017_ff = (*(_20935_flag)).cast_ptr<_1bba99d2e_Flag>(2);;
				(*((*(_24017_ff))._field_data))=static_cast<jule::F64>(({
					auto except = _1dbb106d2_ParseFloat(_2179_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional(jule::Any(((jule::Str::lit("--", 2) + _1baa6bbe2_CommonFlag_mptr_data[((*(_20935_flag))).type_offset]._1baa3adc0_Name((*(_20935_flag)))) + jule::Str::lit(": expression must be valid floating-point", 41)), &__jule_any_type4));
					} 0;});
				}));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1bbab3de2:;
			{
				(*((*((*(_20935_flag)).cast_ptr<_1bbaa1c6a_Flag>(4)))._field_data))=_2179_data;
			}
		}
		_match_end_1bbab34da:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1baa7206b_singleDash(_1baa71224_argParser* _self_, jule::Str* _24930_arg) {
	if (((*(_24930_arg)).len() == 1LL)) {
		return jule::VoidExceptional(jule::Any(((*(_24930_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4));
	};
	jule::Slice<jule::I32> _2539_rarg = static_cast<jule::Slice<jule::I32>>((*(_24930_arg))).slice(1LL);;
	{
		auto expr = &(_2539_rarg);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbac691b:;
		if (it != expr_end) {
			jule::I32 *_25416_r = it;
			{
				jule::Trait<_1baa6bbe2_CommonFlag> _25517_flag = _1baa6e343_FindFlagShort(&(*(_self_))._field_set, (*(_25416_r)));;
				if ((_25517_flag == nullptr)) {
					return jule::VoidExceptional(jule::Any((((*(_24930_arg)) + jule::Str::lit(": flag is not exist: ", 21)) + jule::Str::from_rune((*(_25416_r)))), &__jule_any_type4));
				};
				({
					auto except = _1baa71cb3_processFlag(_self_, &(_25517_flag));
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1bbac691b:;
			++it;
			goto _iter_begin_1bbac691b;
		}
		_iter_end_1bbac691b:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1baa72324_doubleDash(_1baa71224_argParser* _self_, jule::Str* _26430_arg) {
	if (((*(_26430_arg)).len() == 2LL)) {
		return jule::VoidExceptional(jule::Any(((*(_26430_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4));
	};
	jule::Trait<_1baa6bbe2_CommonFlag> _26813_flag = _1baa6e002_FindFlag(&(*(_self_))._field_set, (*(_26430_arg)).slice(2LL));;
	if ((_26813_flag == nullptr)) {
		return jule::VoidExceptional(jule::Any(((*(_26430_arg)) + jule::Str::lit(": flag is not exist", 19)), &__jule_any_type4));
	};
	({
		auto except = _1baa71cb3_processFlag(_self_, &(_26813_flag));
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1baa72522_tryArg(_1baa71224_argParser* _self_) {
	jule::Str _2769_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_2769_arg[0LL] == '-')) {
		if (((_2769_arg.len() > 1LL) && (_2769_arg[1LL] == '-'))) {
			({
				auto except = _1baa72324_doubleDash(_self_, &(_2769_arg));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _1baa7206b_singleDash(_self_, &(_2769_arg));
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_2769_arg); };
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1baa72720_parse(_1baa71224_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1baa72522_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1bbacd6ae:;
	}
	_iter_end_1bbacd6ae:;;
	return jule::VoidExceptional();
}





std::ostream &operator<<(std::ostream &_Stream, _1baa71224_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ba9d9555_ObjectCoder> static__1ba9d9951_New(jule::Ptr<_1ad2253b9_IR>* _9424_ir, _1ba9d7a3c_SerializationInfo _9433_info) {
	jule::Ptr<_1ba9d9555_ObjectCoder> _9513_oc = jule::new_ptr<_1ba9d9555_ObjectCoder>(_1ba9d9555_ObjectCoder{._field_ir=(*(_9424_ir)), ._field_info=_9433_info, });;
	(*(_9513_oc))._field_ec=static__1ad831255_new(&(_9513_oc));
	(*(_9513_oc))._field_sc=static__1ad827328_new(&(_9513_oc));
	(*(_9513_oc))._field_tc=static__1ba9e9d07_new(&(_9513_oc));
	return _9513_oc;;
}



inline void _1ba9d9c09_write(jule::Ptr<_1ba9d9555_ObjectCoder> _self_, jule::Str _10525_s) {
	_1c164d702_WriteStr(&(*(_self_))._field_Buf, _10525_s);
}



inline void _1ba9d9eb2_writeBytes(jule::Ptr<_1ba9d9555_ObjectCoder> _self_, jule::Slice<jule::U8> _10930_b) {
	_1c164d449_Write(&(*(_self_))._field_Buf, _10930_b);
}



inline void _1ba9da1b0_addIndent(jule::Ptr<_1ba9d9555_ObjectCoder> _self_) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_indentBuffer; __jule_push_dest.push(9LLU); };
}



inline void _1ba9da3ad_doneIndent(jule::Ptr<_1ba9d9555_ObjectCoder> _self_) {
	(*(_self_))._field_indentBuffer=(*(_self_))._field_indentBuffer.slice(0LL, ((*(_self_))._field_indentBuffer.len() - 1LL));
}



inline void _1ba9da5ab_indent(jule::Ptr<_1ba9d9555_ObjectCoder> _self_) {
	_1c164d449_Write(&(*(_self_))._field_Buf, (*(_self_))._field_indentBuffer);
}



inline jule::I64 _1ba9da8ec_findAnyType(jule::Ptr<_1ba9d9555_ObjectCoder> _self_, jule::Ptr<_1ac859a32_TypeKind>* _12836_t) {
	{
		auto expr = &((*(_self_))._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be23993e:;
		if (it != expr_end) {
			jule::I64 _12914_i = it - expr->begin();
			jule::Ptr<_1ac859a32_TypeKind> _12921_at = *it;
			{
				if (_1ac85a23b_Equal(_12921_at, (*(_12836_t)))) {
					return _12914_i;;
				};
			}
			_iter_next_1be23993e:;
			++it;
			_12914_i++;
			goto _iter_begin_1be23993e;
		}
		_iter_end_1be23993e:;
	};
	return -1LL;;
}



inline jule::I64 _1ba9dac3d_pushAnyType(jule::Ptr<_1ba9d9555_ObjectCoder> _self_, jule::Ptr<_1ac859a32_TypeKind> _13735_t) {
	if ((_1ac85c936_Enum(_13735_t.ptr()) != nullptr)) {
		_13735_t=(*((*(_1ac85c936_Enum(_13735_t.ptr())))._field_Kind))._field_Kind;
	};
	jule::I64 _14113_i = _1ba9da8ec_findAnyType(_self_, &(_13735_t));;
	if ((_14113_i != -1LL)) {
		return _14113_i;;
	};
	_14113_i=static_cast<jule::I64>((*(_self_))._field_anyTypeMap.len());
	{ jule::Slice<jule::Ptr<_1ac859a32_TypeKind>> &__jule_push_dest = (*(_self_))._field_anyTypeMap; __jule_push_dest.push(_13735_t); };
	jule::Str _1479_si = _1dbba39c8_Itoa(_14113_i);;
	if ((_1ac85c419_Sptr(_13735_t.ptr()) != nullptr)) {
		_1c164cc40_StrBuilder _14917_elemKind = static__1c164d191_New(40LL);;
		_1baa00181_kind((*(_self_))._field_tc.ptr(), &(_14917_elemKind), (*(_1ac85c419_Sptr(_13735_t.ptr())))._field_Elem);
		_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("void __jule_any_type", 20));
		_1c164d702_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64));
		_1c164d449_Write(&(*(_self_))._field_anyObj, _1c164e99a_Buf(&_14917_elemKind));
		_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(">().dealloc(); }\n", 17));
		_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_1c164d702_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("{.dealloc=__jule_any_type", 25));
		_1c164d702_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 58));
		_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
		_1c164d702_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
		_1ba9eaba4_asSptr((*(_self_))._field_tc.ptr(), &((*(_self_))._field_anyObj), _1c164e99a_Buf(&_14917_elemKind));
		_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
		_1c164d702_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52));
	} else {
		jule::Bool _17613_comparable = _1ac85b12c_Comparable(_13735_t.ptr());;
		_1c164cc40_StrBuilder _17717_kindB = static__1c164d191_New(40LL);;
		_1baa00181_kind((*(_self_))._field_tc.ptr(), &(_17717_kindB), _13735_t);
		jule::Slice<jule::U8> _17913_kind = _1c164e99a_Buf(&_17717_kindB);;
		if (_1c164c190_BytesStr(_17913_kind).equal("[<unimplemented_type_kind>]", 27)) {
			jule::outln(_1ac859dea_Str(_13735_t.ptr()));
		};
		_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("void __jule_any_type", 20));
		_1c164d702_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64));
		_1c164d449_Write(&(*(_self_))._field_anyObj, _17913_kind);
		_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(">().dealloc(); }\n", 17));
		if (_17613_comparable) {
			_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_1c164d702_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
			_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<", 66));
			_1c164d449_Write(&(*(_self_))._field_anyObj, _17913_kind);
			_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("*>(alloc) == *reinterpret_cast<", 31));
			_1c164d449_Write(&(*(_self_))._field_anyObj, _17913_kind);
			_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("*>(other); }\n", 13));
		};
		_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Str __jule_any_type", 25));
		_1c164d702_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<", 76));
		if ((_1ac85c6a0_Ptr(_13735_t.ptr()) == nullptr)) {
			_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("const ", 6));
			_1c164d449_Write(&(*(_self_))._field_anyObj, _17913_kind);
		} else {
			_1c164d449_Write(&(*(_self_))._field_anyObj, _17913_kind);
			_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("* const", 7));
		};
		_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("*>(alloc)); }\n", 14));
		_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_1c164d702_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("{.dealloc=__jule_any_type", 25));
		_1c164d702_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_dealloc, ", 10));
		if (_17613_comparable) {
			_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(".eq=__jule_any_type", 19));
			_1c164d702_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
			_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_eq, ", 5));
		};
		_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(".to_str=__jule_any_type", 23));
		_1c164d702_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_to_str};\n", 10));
		if (_17613_comparable) {
			_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_1c164d702_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
			_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
			_1c164d449_Write(&(*(_self_))._field_anyObj, _17913_kind);
			_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
			_1c164d702_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
			_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" && __jule_any_type", 19));
			_1c164d702_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
			_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_eq(any.data.alloc, (void*)&other); }\n", 38));
		};
	};
	return _14113_i;;
}



inline void _1ba9daee6_pushResultIns(jule::Ptr<_1ba9d9555_ObjectCoder> _self_, jule::Ptr<_1ac717170_FnIns>* _24738_f) {
	jule::Str _2489_s = static_cast<jule::Str>(_1baa0552c_code((*((*(_self_))._field_tc))._field_rc.ptr(), &((*((*(_24738_f))))._field_Result)));;
	jule::Bool _24912_ok = false;;
	(*(_self_))._field_resultMap.lookup(_2489_s, nullptr, &(_24912_ok));
	if (_24912_ok) {
		return;;
	};
	(*(_self_))._field_resultMap[_2489_s]=false;
	_1c164d702_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit("struct ", 7));
	_1c164d702_WriteStr(&(*(_self_))._field_resultDecls, _2489_s);
	_1c164d702_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit(" {\n", 3));
	{
		auto expr = &((*(_1ac85dea9_Tup((*((*(_24738_f))))._field_Result.ptr())))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be25a432:;
		if (it != expr_end) {
			jule::I64 _25714_i = it - expr->begin();
			jule::Ptr<_1ac859a32_TypeKind> _25721_t = *it;
			{
				_1c164d9aa_WriteByte(&(*(_self_))._field_resultDecls, 9LLU);
				_1baa00181_kind((*(_self_))._field_tc.ptr(), &((*(_self_))._field_resultDecls), _25721_t);
				_1c164d9aa_WriteByte(&(*(_self_))._field_resultDecls, ' ');
				_1c164d702_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit("__jule_result_arg", 17));
				_1c164d702_WriteStr(&(*(_self_))._field_resultDecls, _1dbba39c8_Itoa(_25714_i));
				_1c164d702_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit(";\n", 2));
			}
			_iter_next_1be25a432:;
			++it;
			_25714_i++;
			goto _iter_begin_1be25a432;
		}
		_iter_end_1be25a432:;
	};
	_1c164d702_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit("};\n", 3));
}



inline void _1ba9db29e_pushResult(jule::Ptr<_1ba9d9555_ObjectCoder> _self_, jule::Ptr<_1ac71426b_Fn>* _26835_f) {
	if ((_1ac7146de_IsVoid((*(_26835_f)).ptr()) || ((*((*((*(_26835_f))))._field_Result))._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I64 _27213_n = (*((*(_26835_f))))._field_Instances.len();;
	if (((*((*(_26835_f))))._field_Generics.len() == 0LL)) {
		_27213_n=1LL;
	};
	{
		auto expr = (*((*(_26835_f))))._field_Instances.slice(0LL, _27213_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1be260536:;
		if (it != expr_end) {
			jule::Ptr<_1ac717170_FnIns> _27621_ins = *it;
			{
				_1ba9daee6_pushResultIns(_self_, &(_27621_ins));
			}
			_iter_next_1be260536:;
			++it;
			goto _iter_begin_1be260536;
		}
		_iter_end_1be260536:;
	};
}



inline jule::I64 _1ba9db69a_findTypeOffsetS(_1ba9d9555_ObjectCoder* _self_, jule::Ptr<_1ac727548_Trait> _28130_t, jule::Ptr<_1ac702105_StructIns> _28145_s) {
	if (((*(_28130_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be261b20:;
		if (it != expr_end) {
			jule::Ptr<_1ba9d8114_traitHash> *_28516_hash = it;
			{
				if ((((*((*(_28516_hash))))._field_t == _28130_t) && ((*((*(_28516_hash))))._field_s == _28145_s))) {
					return (*((*(_28516_hash))))._field_i;;
				};
			}
			_iter_next_1be261b20:;
			++it;
			goto _iter_begin_1be261b20;
		}
		_iter_end_1be261b20:;
	};
	return -1LL;;
}



inline jule::I64 _1ba9dba96_findTypeOffset(_1ba9d9555_ObjectCoder* _self_, jule::Ptr<_1ac727548_Trait> _29329_t, jule::Ptr<_1ac859a32_TypeKind> _29344_k) {
	if (((*(_29329_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1ac702105_StructIns> _29717_s = nullptr;;
	if ((_1ac85c419_Sptr(_29344_k.ptr()) != nullptr)) {
		_29344_k=(*(_1ac85c419_Sptr(_29344_k.ptr())))._field_Elem;
	};
	_29717_s=_1ac85d706_Struct(_29344_k.ptr());
	if ((_29717_s == nullptr)) {
		return -1LL;;
	};
	return static_cast<jule::I64>(_1ba9db69a_findTypeOffsetS(_self_, _29329_t, _29717_s));;
}



inline void _1ba9dbe09_pushAndWriteMaskMapper(jule::Ptr<_1ba9d9555_ObjectCoder> _self_, jule::Ptr<_1ac727548_Trait> _30846_t1, jule::Ptr<_1ac727548_Trait> _30862_t2) {
	_1c164cc40_StrBuilder _30913_ident = static__1c164d191_New(32LL);;
	_1c164d702_WriteStr(&_30913_ident, jule::Str::lit("__jule_trait_offset_mapper_", 27));
	_1c164d702_WriteStr(&_30913_ident, _1dbba3346_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30862_t2))), 15LL));
	_1c164d702_WriteStr(&_30913_ident, jule::Str::lit("_to_", 4));
	_1c164d702_WriteStr(&_30913_ident, _1dbba3346_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30846_t1))), 15LL));
	_1c164d449_Write(&(*(_self_))._field_Buf, _1c164e99a_Buf(&_30913_ident));
	{
		auto expr = &((*(_self_))._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be26720d:;
		if (it != expr_end) {
			_1ba9d84dd_traitCast _31716_m = *it;
			{
				if (((_31716_m._field_t1 == _30846_t1) && (_31716_m._field_t2 == _30862_t2))) {
					return;;
				};
			}
			_iter_next_1be26720d:;
			++it;
			goto _iter_begin_1be26720d;
		}
		_iter_end_1be26720d:;
	};
	{ jule::Slice<_1ba9d84dd_traitCast> &__jule_push_dest = (*(_self_))._field_traitCastMap; __jule_push_dest.push(_1ba9d84dd_traitCast{._field_t1=_30846_t1, ._field_t2=_30862_t2}); };
	;
	_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Int", 9));
	_1c164d9aa_WriteByte(&(*(_self_))._field_anyObj, ' ');
	_1c164d449_Write(&(*(_self_))._field_anyObj, _1c164e99a_Buf(&_30913_ident));
	_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("(const jule::Int offset) noexcept { ", 36));
	{
		auto expr = &((*(_30846_t1))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be26a640:;
		if (it != expr_end) {
			jule::Ptr<_1ac6ee377_Struct> _33621_s1 = *it;
			{
				{
					auto expr = &((*(_30862_t2))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be26b5b9:;
					if (it != expr_end) {
						jule::Ptr<_1ac6ee377_Struct> _33720_s2 = *it;
						{
							if ((_33621_s1 == _33720_s2)) {
								{
									auto expr = &((*(_33621_s1))._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1be26c422:;
									if (it != expr_end) {
										jule::Ptr<_1ac702105_StructIns> _33933_s1i = *it;
										{
											jule::I64 _34025_i1 = _1ba9db69a_findTypeOffsetS(_self_.ptr(), _30846_t1, _33933_s1i);;
											jule::I64 _34125_i2 = _1ba9db69a_findTypeOffsetS(_self_.ptr(), _30862_t2, _33933_s1i);;
											_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("if (offset == ", 14));
											_1c164d702_WriteStr(&(*(_self_))._field_anyObj, _1dbba39c8_Itoa(_34125_i2));
											_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(") return ", 9));
											_1c164d702_WriteStr(&(*(_self_))._field_anyObj, _1dbba39c8_Itoa(_34025_i1));
											_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("; ", 2));
										}
										_iter_next_1be26c422:;
										++it;
										goto _iter_begin_1be26c422;
									}
									_iter_end_1be26c422:;
								};
							};
						}
						_iter_next_1be26b5b9:;
						++it;
						goto _iter_begin_1be26b5b9;
					}
					_iter_end_1be26b5b9:;
				};
			}
			_iter_next_1be26a640:;
			++it;
			goto _iter_begin_1be26a640;
		}
		_iter_end_1be26a640:;
	};
	_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" return ", 8));
	_1c164d702_WriteStr(&(*(_self_))._field_anyObj, _1dbba39c8_Itoa(0LL));
	_1c164d702_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("; }\n", 4));
}



inline void _1ba9dc1b2_locInfo(jule::Ptr<_1ba9d9555_ObjectCoder> _self_, jule::Ptr<_1ac6b2e62_Token>* _35728_t) {
	jule::Str *_35810_loc = &((*((*((*(_35728_t))))._field_File))._field_Path);;
	if (_1da0b7cbd_Production) {
		{
			
			if (_1a693951e_HasPrefix((*(_35810_loc)), _1a7637ccc_PathStdlib)) {
				_case_begin_1be2725e2:;
				{
					_1ad83d938_cstrBytes(&((*(_self_))._field_Buf), (*(_35810_loc)).slice((_1a6945250_Dir(_1a7637ccc_PathStdlib).len() + 1LL)));
				}
			}
			else if (_1a693951e_HasPrefix((*(_35810_loc)), (*((*(_self_))._field_ir))._field_Root)) {
				_case_begin_1be2726be:;
				{
					_1ad83d938_cstrBytes(&((*(_self_))._field_Buf), (*(_35810_loc)).slice((_1a6945250_Dir((*((*(_self_))._field_ir))._field_Root).len() + 1LL)));
				}
			}
			else {
				_case_begin_1be27223a:;
				{
					_1ad83d938_cstrBytes(&((*(_self_))._field_Buf), (*(_35810_loc)));
				}
			}
			_match_end_1be27216e:;
		};
	} else {
		_1ad83d938_cstrBytes(&((*(_self_))._field_Buf), (*(_35810_loc)));
	};
	_1ba9d9c09_write(_self_, jule::Str::lit(":", 1));
	_1ba9d9c09_write(_self_, _1dbba39c8_Itoa((*((*(_35728_t))))._field_Row));
	_1ba9d9c09_write(_self_, jule::Str::lit(":", 1));
	_1ba9d9c09_write(_self_, _1dbba39c8_Itoa((*((*(_35728_t))))._field_Column));
}



inline void _1ba9dc3b0_head(jule::Ptr<_1ba9d9555_ObjectCoder> _self_) {
	_1ba9d00a6_Time _3849_time = static__1ba9d066c_Now();;
	_1ba9ce8d0_AbsTime _3859_abs = _1ba9d1d55_Abs(&_3849_time);;
	_1ba9d9c09_write(_self_, jule::Str::lit("// Auto generated by JuleC.\n", 28));
	_1ba9d9c09_write(_self_, jule::Str::lit("// JuleC version: ", 18));
	_1ba9d9c09_write(_self_, jule::Str::lit("jule0.0.15 @master", 18));
	_1ba9d9c09_write(_self_, jule::Str::lit("\n", 1));
	_1ba9d9c09_write(_self_, jule::Str::lit("// Date: ", 9));
	_1ba9d9c09_write(_self_, _1dbba3346_FmtUint(_3859_abs._field_Day, 10LL));
	_1ba9d9c09_write(_self_, jule::Str::lit("/", 1));
	_1ba9d9c09_write(_self_, _1dbba3346_FmtUint(_3859_abs._field_Month, 10LL));
	_1ba9d9c09_write(_self_, jule::Str::lit("/", 1));
	_1ba9d9c09_write(_self_, _1dbba3346_FmtUint(_3859_abs._field_Year, 10LL));
	_1ba9d9c09_write(_self_, jule::Str::lit(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1ba9d9c09_write(_self_, (*(_self_))._field_info._field_Compiler);
	_1ba9d9c09_write(_self_, jule::Str::lit(" ", 1));
	_1ba9d9c09_write(_self_, (*(_self_))._field_info._field_CompilerCommand);
	_1ba9d9c09_write(_self_, jule::Str::lit("\n\n", 2));
	if (_1da0b7cbd_Production) {
		_1ba9d9c09_write(_self_, jule::Str::lit("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_1da0b762a_RC))) {
		_1ba9d9c09_write(_self_, jule::Str::lit("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_1da0b7a04_Safety))) {
		_1ba9d9c09_write(_self_, jule::Str::lit("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1ba9dc5ad_links(_self_);
	_1ba9d9c09_write(_self_, jule::Str::lit("\n\n#include \"", 12));
	_1ba9d9c09_write(_self_, _1a76385e6_PathApi);
	_1ba9d9c09_write(_self_, jule::Str::lit("\"\n\n", 3));
}



inline void _1ba9dc5ad_links(jule::Ptr<_1ba9d9555_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be27dcb3:;
		if (it != expr_end) {
			jule::Ptr<_1ac77790b_ImportInfo> _42216_used = *it;
			{
				{
					
					if ((!((*(_42216_used))._field_Binded))) {
						_case_begin_1be27ea72:;
						{
							goto _iter_next_1be27dcb3;
						}
					}
					else if (_1a75610ac_IsStdHeaderPath((*(_42216_used))._field_Path)) {
						_case_begin_1be27eae9:;
						{
							_1ba9d9c09_write(_self_, jule::Str::lit("#include ", 9));
							_1ba9d9c09_write(_self_, (*(_42216_used))._field_Path);
							_1ba9d9c09_write(_self_, jule::Str::lit("\n", 1));
						}
					}
					else if (_1a7561387_IsValidHeaderExt(_1a6944826_Ext((*(_42216_used))._field_Path))) {
						_case_begin_1be27eb71:;
						{
							_1ba9d9c09_write(_self_, jule::Str::lit("#include \"", 10));
							_1ba9d9c09_write(_self_, (*(_42216_used))._field_Path);
							_1ba9d9c09_write(_self_, jule::Str::lit("\"\n", 2));
						}
					}
					_match_end_1be27e951:;
				};
			}
			_iter_next_1be27dcb3:;
			++it;
			goto _iter_begin_1be27dcb3;
		}
		_iter_end_1be27dcb3:;
	};
}



inline void _1ba9dc866_prepareStructure(_1ba9d9555_ObjectCoder* _self_, jule::Ptr<_1ac6ee377_Struct>* _43840_s) {
	{
		auto expr = &((*((*(_43840_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be281cd8:;
		if (it != expr_end) {
			jule::Ptr<_1ac702105_StructIns> _43921_ins = *it;
			{
				{
					auto expr = &((*(_43921_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be283405:;
					if (it != expr_end) {
						jule::Ptr<_1ac71426b_Fn> _44025_m = *it;
						{
							if ((*(_44025_m))._field_Statically) {
								goto _iter_next_1be283405;
							};
							{
								auto expr = &((*(_44025_m))._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1be2842b3:;
								if (it != expr_end) {
									jule::Ptr<_1ac717170_FnIns> _44429_mins = *it;
									{
										jule::Ptr<_1ac7161c4_ParamIns> _44525_p = (*(_44429_mins))._field_Params[0LL];;
										_1c164cc40_StrBuilder _44625_kind = static__1c164d191_New(40LL);;
										_1baa00181_kind((*(_self_))._field_tc.ptr(), &(_44625_kind), (*(_44525_p))._field_Kind);
										if ((!(_1ac713149_IsRef((*(_44525_p))._field_Decl.ptr())))) {
											_1c164d702_WriteStr(&_44625_kind, jule::Str::lit("*", 1));
										};
										(*(_44525_p))._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(jule::new_ptr<_1ba9e8ba2_customType>(_1ba9e8ba2_customType{._field_kind=_1c164dee9_Str(&_44625_kind)}), 27)});
									}
									_iter_next_1be2842b3:;
									++it;
									goto _iter_begin_1be2842b3;
								}
								_iter_end_1be2842b3:;
							};
						}
						_iter_next_1be283405:;
						++it;
						goto _iter_begin_1be283405;
					}
					_iter_end_1be283405:;
				};
			}
			_iter_next_1be281cd8:;
			++it;
			goto _iter_begin_1be281cd8;
		}
		_iter_end_1be281cd8:;
	};
}



inline void _1ba9dca64_prepareStructures(jule::Ptr<_1ba9d9555_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be284912:;
		if (it != expr_end) {
			jule::Ptr<_1ac6ee377_Struct> _46221_s = *it;
			{
				if (((*(_46221_s))._field_Token != nullptr)) {
					_1ba9dc866_prepareStructure(_self_.ptr(), &(_46221_s));
				};
			}
			_iter_next_1be284912:;
			++it;
			goto _iter_begin_1be284912;
		}
		_iter_end_1be284912:;
	};
}



inline void _1ba9dcd1c_iterPackages(jule::Ptr<_1ba9d9555_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_1ac77a832_Package>*)> _46932_f) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be28796a:;
		if (it != expr_end) {
			jule::Ptr<_1ac77790b_ImportInfo> _47021_used = *it;
			{
				if ((!((*(_47021_used))._field_Binded))) {
					_46932_f(&((*(_47021_used))._field_Package));
				};
			}
			_iter_next_1be28796a:;
			++it;
			goto _iter_begin_1be28796a;
		}
		_iter_end_1be28796a:;
	};
	_46932_f(&((*((*(_self_))._field_ir))._field_Main));
}



inline void _1ba9dd01a_buildTraitMap(jule::Ptr<_1ba9d9555_ObjectCoder> _self_) {
	_1ba9dcd1c_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1ac77a832_Package>*)>([=](jule::Ptr<_1ac77a832_Package>* _47935_pkg) mutable -> void {
		_1ba9e6793_iterFiles(_47935_pkg, jule::Fn<void(jule::Ptr<_1ac81e013_SymbolTable>*)>([=](jule::Ptr<_1ac81e013_SymbolTable>* _48036_file) mutable -> void {
			{
				auto expr = &((*((*(_48036_file))))._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1be28be69:;
				if (it != expr_end) {
					jule::Ptr<_1ac727548_Trait> _48129_t = *it;
					{
						if (((*(_48129_t))._field_Token == nullptr)) {
							return;;
						};
						if (((*(_48129_t))._field_Implemented.len() == 0LL)) {
							jule::Ptr<_1ba9d8114_traitHash> _48629_hash = jule::new_ptr<_1ba9d8114_traitHash>(_1ba9d8114_traitHash{._field_t=_48129_t, ._field_s=nullptr, ._field_i=0LL});;
							_1c164cc40_StrBuilder _49129_b = static__1c164d191_New(static_cast<jule::I64>((*(_48129_t))._field_Ident.len()));;
							static__1adc60981_writeIdentTo(&(_49129_b), &((*(_48129_t))._field_Ident));
							(*(_48629_hash))._field_ti=_1c164dee9_Str(&_49129_b);
							{ jule::Slice<jule::Ptr<_1ba9d8114_traitHash>> &__jule_push_dest = (*(_self_))._field_tmap; __jule_push_dest.push(_48629_hash); };
							goto _iter_next_1be28be69;
						};
						jule::I64 _49725_i = 0LL;;
						{
							auto expr = &((*(_48129_t))._field_Implemented);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1be28c882:;
							if (it != expr_end) {
								jule::Ptr<_1ac6ee377_Struct> _49833_s = *it;
								{
									{
										auto expr = &((*(_49833_s))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1be291413:;
										if (it != expr_end) {
											jule::Ptr<_1ac702105_StructIns> _49937_ins = *it;
											{
												jule::Ptr<_1ba9d8114_traitHash> _50033_hash = jule::new_ptr<_1ba9d8114_traitHash>(_1ba9d8114_traitHash{._field_t=_48129_t, ._field_s=_49937_ins, ._field_i=_49725_i});;
												_1c164cc40_StrBuilder _50533_b = static__1c164d191_New(static_cast<jule::I64>((*(_48129_t))._field_Ident.len()));;
												static__1adc60981_writeIdentTo(&(_50533_b), &((*(_48129_t))._field_Ident));
												(*(_50033_hash))._field_ti=_1c164dee9_Str(&_50533_b);
												{ jule::Slice<jule::Ptr<_1ba9d8114_traitHash>> &__jule_push_dest = (*(_self_))._field_tmap; __jule_push_dest.push(_50033_hash); };
												(_49725_i)++;
											}
											_iter_next_1be291413:;
											++it;
											goto _iter_begin_1be291413;
										}
										_iter_end_1be291413:;
									};
								}
								_iter_next_1be28c882:;
								++it;
								goto _iter_begin_1be28c882;
							}
							_iter_end_1be28c882:;
						};
						_1ba9e7541_pushMethodsFromInherits(&(_48129_t), &(_48129_t));
					}
					_iter_next_1be28be69:;
					++it;
					goto _iter_begin_1be28be69;
				}
				_iter_end_1be28be69:;
			};
		}));
	}));
}



inline void _1ba9dd218_traitDecls(jule::Ptr<_1ba9d9555_ObjectCoder> _self_) {
	_1ba9dcd1c_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1ac77a832_Package>*)>([=](jule::Ptr<_1ac77a832_Package>* _52135_pkg) mutable -> void {
		_1ba9e6793_iterFiles(_52135_pkg, jule::Fn<void(jule::Ptr<_1ac81e013_SymbolTable>*)>([=](jule::Ptr<_1ac81e013_SymbolTable>* _52236_file) mutable -> void {
			{
				auto expr = &((*((*(_52236_file))))._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1be29512b:;
				if (it != expr_end) {
					jule::Ptr<_1ac727548_Trait> _52329_t = *it;
					{
						if (((*(_52329_t))._field_Token == nullptr)) {
							return;;
						};
						_1ba9da5ab_indent(_self_);
						_1ba9d9c09_write(_self_, jule::Str::lit("struct ", 7));
						static__1adc61b3b_traitDecl(&((*(_self_))._field_Buf), _52329_t);
						_1ba9d9c09_write(_self_, jule::Str::lit("{};\n", 4));
					}
					_iter_next_1be29512b:;
					++it;
					goto _iter_begin_1be29512b;
				}
				_iter_end_1be29512b:;
			};
		}));
	}));
}



inline void _1ba9dd4c1_structurePlainDecl(jule::Ptr<_1ba9d9555_ObjectCoder> _self_, jule::Ptr<_1ac6ee377_Struct>* _53643_s) {
	{
		auto expr = &((*((*(_53643_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd876b09:;
		if (it != expr_end) {
			jule::Ptr<_1ac702105_StructIns> _53721_ins = *it;
			{
				_1ba9d9c09_write(_self_, jule::Str::lit("struct ", 7));
				static__1adc624ee_structureIns(&((*(_self_))._field_Buf), &(_53721_ins));
				_1ba9d9c09_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1bd876b09:;
			++it;
			goto _iter_begin_1bd876b09;
		}
		_iter_end_1bd876b09:;
	};
}



inline void _1ba9dd6be_structurePlainDecls(jule::Ptr<_1ba9d9555_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd877412:;
		if (it != expr_end) {
			jule::Ptr<_1ac6ee377_Struct> _54521_s = *it;
			{
				if (((*(_54521_s))._field_Token != nullptr)) {
					_1ba9dd4c1_structurePlainDecl(_self_, &(_54521_s));
				};
			}
			_iter_next_1bd877412:;
			++it;
			goto _iter_begin_1bd877412;
		}
		_iter_end_1bd877412:;
	};
}



inline void _1ba9dd977_fieldDecl(jule::Ptr<_1ba9d9555_ObjectCoder> _self_, jule::Ptr<_1ac701555_FieldIns>* _55234_f) {
	_1baa00181_kind((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), (*((*(_55234_f))))._field_Kind);
	_1ba9d9c09_write(_self_, jule::Str::lit(" ", 1));
	static__1adc627da_field(&((*(_self_))._field_Buf), &((*((*(_55234_f))))._field_Decl));
	if (((*((*(_55234_f))))._field_Default == nullptr)) {
		if (_1baa0761c_shouldInitialized(&((*((*(_55234_f))))._field_Kind))) {
			_1ba9d9c09_write(_self_, jule::Str::lit(" = ", 3));
			_1ad83ce76_initExpr((*(_self_))._field_ec, (*((*(_55234_f))))._field_Kind);
		};
	} else {
		_1ba9d9c09_write(_self_, jule::Str::lit(" = ", 3));
		_1ad8341d1_possibleRefExpr((*(_self_))._field_ec, (*((*((*(_55234_f))))._field_Default))._field_Model);
	};
	_1ba9d9c09_write(_self_, jule::Str::lit(";", 1));
}



inline void _1ba9ddc30_structureDestructor(jule::Ptr<_1ba9d9555_ObjectCoder> _self_, jule::Ptr<_1ac702105_StructIns>* _57044_s) {
	;
	jule::Ptr<_1ac71426b_Fn> _5739_disposeMethod = _1ac70316c_FindMethod((*(_57044_s)).ptr(), jule::Str::lit("Dispose", 7), false);;
	jule::Bool _57413_disposed = static__1ac7bc467_Dispose(_5739_disposeMethod);;
	if ((!(_57413_disposed))) {
		return;;
	};
	_1ba9d9c09_write(_self_, jule::Str::lit("~", 1));
	static__1adc624ee_structureIns(&((*(_self_))._field_Buf), _57044_s);
	_1ba9d9c09_write(_self_, jule::Str::lit("(void) { ", 9));
	static__1adc61564_func(&((*(_self_))._field_Buf), &(_5739_disposeMethod));
	_1ba9d9c09_write(_self_, jule::Str::lit("(this); }", 9));
}



inline void _1ba9de093_structureOperatorEq(jule::Ptr<_1ba9d9555_ObjectCoder> _self_, jule::Slice<jule::U8> _58639_ident, jule::Ptr<_1ac702105_StructIns>* _58659_s) {
	if ((!((*((*(_58659_s))))._field_Comparable))) {
		return;;
	};
	if (((*((*(_58659_s))))._field_Operators._field_Eq != nullptr)) {
		_1ba9de824_structureOperator(_self_, _58639_ident, &((*((*(_58659_s))))._field_Operators._field_Eq), jule::Str::lit("==", 2));
		return;;
	};
	_1ba9da5ab_indent(_self_);
	if (_1ac962431_Inline) {
		_1ba9d9c09_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1ba9d9c09_write(_self_, jule::Str::lit("bool operator==(", 16));
	_1ba9d9eb2_writeBytes(_self_, _58639_ident);
	_1ba9d9c09_write(_self_, jule::Str::lit(" _other) {", 10));
	if (((*((*(_58659_s))))._field_Fields.len() > 0LL)) {
		_1ba9da1b0_addIndent(_self_);
		_1ba9d9c09_write(_self_, jule::Str::lit("\n", 1));
		_1ba9da5ab_indent(_self_);
		_1ba9d9c09_write(_self_, jule::Str::lit("return ", 7));
		_1ba9da1b0_addIndent(_self_);
		jule::Bool _60917_writed = false;;
		{
			auto expr = &((*((*(_58659_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd886201:;
			if (it != expr_end) {
				jule::Ptr<_1ac701555_FieldIns> _61025_f = *it;
				{
					jule::Ptr<_1ac702105_StructIns> _61217_strct = _1ac85d706_Struct((*(_61025_f))._field_Kind.ptr());;
					if ((((_61217_strct != nullptr) && ((*(_61217_strct))._field_Decl != nullptr)) && (*((*(_61217_strct))._field_Decl))._field_Binded)) {
						goto _iter_next_1bd886201;
					};
					if (_60917_writed) {
						_1ba9d9c09_write(_self_, jule::Str::lit(" &&", 3));
					};
					_60917_writed=true;
					_1ba9d9c09_write(_self_, jule::Str::lit("\n", 1));
					_1ba9da5ab_indent(_self_);
					_1ba9d9c09_write(_self_, jule::Str::lit("this->", 6));
					_1c164cc40_StrBuilder _62321_fIdent = static__1c164d191_New(static_cast<jule::I64>((*((*(_61025_f))._field_Decl))._field_Ident.len()));;
					static__1adc627da_field(&(_62321_fIdent), &((*(_61025_f))._field_Decl));
					_1ba9d9eb2_writeBytes(_self_, _1c164e99a_Buf(&_62321_fIdent));
					_1ba9d9c09_write(_self_, jule::Str::lit(" == _other.", 11));
					_1ba9d9eb2_writeBytes(_self_, _1c164e99a_Buf(&_62321_fIdent));
				}
				_iter_next_1bd886201:;
				++it;
				goto _iter_begin_1bd886201;
			}
			_iter_end_1bd886201:;
		};
		_1ba9da3ad_doneIndent(_self_);
		if ((!(_60917_writed))) {
			_1ba9d9c09_write(_self_, jule::Str::lit("true", 4));
		};
		_1ba9d9c09_write(_self_, jule::Str::lit(";\n", 2));
		_1ba9da3ad_doneIndent(_self_);
		_1ba9da5ab_indent(_self_);
		_1ba9d9c09_write(_self_, jule::Str::lit("}", 1));
	} else {
		_1ba9d9c09_write(_self_, jule::Str::lit(" return true; }", 15));
	};
	_1ba9d9c09_write(_self_, jule::Str::lit("\n\n", 2));
}



inline void _1ba9de406_structureOperatorNotEq(jule::Ptr<_1ba9d9555_ObjectCoder> _self_, jule::Slice<jule::U8> _64342_ident, jule::Ptr<_1ac702105_StructIns>* _64362_s) {
	if ((!((*((*(_64362_s))))._field_Comparable))) {
		return;;
	};
	_1ba9da5ab_indent(_self_);
	if (_1ac962431_Inline) {
		_1ba9d9c09_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1ba9d9c09_write(_self_, jule::Str::lit("bool operator!=(", 16));
	_1ba9d9eb2_writeBytes(_self_, _64342_ident);
	_1ba9d9c09_write(_self_, jule::Str::lit(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1ba9de824_structureOperator(jule::Ptr<_1ba9d9555_ObjectCoder> _self_, jule::Slice<jule::U8> _65737_ident, jule::Ptr<_1ac717170_FnIns>* _65757_f, jule::Str _65768_op) {
	if (((*(_65757_f)) == nullptr)) {
		return;;
	};
	jule::Bool _6629_unary = ((*((*(_65757_f))))._field_Params.len() == 1LL);;
	jule::Bool _6639_assignment = _1ac7146de_IsVoid((*((*(_65757_f))))._field_Decl.ptr());;
	_1ba9da5ab_indent(_self_);
	if (_1ac962431_Inline) {
		_1ba9d9c09_write(_self_, jule::Str::lit("inline ", 7));
	};
	if (_6639_assignment) {
		_1ba9d9eb2_writeBytes(_self_, _65737_ident);
		_1ba9d9c09_write(_self_, jule::Str::lit("&", 1));
	} else {
		if ((_1ac85c183_Prim((*((*(_65757_f))))._field_Result.ptr()) == nullptr)) {
			_1ba9d9eb2_writeBytes(_self_, _65737_ident);
		} else {
			_1ba9d9c09_write(_self_, jule::Str::lit("jule::Bool", 10));
		};
	};
	_1ba9d9c09_write(_self_, jule::Str::lit(" operator", 9));
	_1ba9d9c09_write(_self_, _65768_op);
	_1ba9d9c09_write(_self_, jule::Str::lit("(", 1));
	if ((!(_6629_unary))) {
		jule::Ptr<_1ac7161c4_ParamIns> _68517_p = (*((*(_65757_f))))._field_Params[1LL];;
		_1ba9ede71_paramIns((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), &(_68517_p));
		_1ba9d9c09_write(_self_, jule::Str::lit(" _other", 7));
	};
	_1ba9d9c09_write(_self_, jule::Str::lit(") { ", 4));
	if ((!(_6639_assignment))) {
		_1ba9d9c09_write(_self_, jule::Str::lit("return ", 7));
	};
	static__1adc61850_funcIns(&((*(_self_))._field_Buf), _65757_f);
	if ((!(_6629_unary))) {
		_1ba9d9c09_write(_self_, jule::Str::lit("(this, _other); ", 16));
		if (_6639_assignment) {
			_1ba9d9c09_write(_self_, jule::Str::lit("return *this; ", 14));
		};
		_1ba9d9c09_write(_self_, jule::Str::lit("}", 1));
	} else {
		_1ba9d9c09_write(_self_, jule::Str::lit("(this); }", 9));
	};
	_1ba9d9c09_write(_self_, jule::Str::lit("\n\n", 2));
}



inline void _1ba9deacc_structureOperators(jule::Ptr<_1ba9d9555_ObjectCoder> _self_, jule::Ptr<_1ac702105_StructIns>* _70643_s) {
	_1c164cc40_StrBuilder _70713_sb = static__1c164d191_New(40LL);;
	static__1adc624ee_structureIns(&(_70713_sb), _70643_s);
	jule::Slice<jule::U8> _7099_ident = _1c164e99a_Buf(&_70713_sb);;
	_1ba9de093_structureOperatorEq(_self_, _7099_ident, _70643_s);
	_1ba9de406_structureOperatorNotEq(_self_, _7099_ident, _70643_s);
	_1ba9de824_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Gt), jule::Str::lit(">", 1));
	_1ba9de824_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_GtEq), jule::Str::lit(">=", 2));
	_1ba9de824_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Lt), jule::Str::lit("<", 1));
	_1ba9de824_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_LtEq), jule::Str::lit("<=", 2));
	_1ba9de824_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Shl), jule::Str::lit("<<", 2));
	_1ba9de824_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Shr), jule::Str::lit(">>", 2));
	_1ba9de824_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Add), jule::Str::lit("+", 1));
	_1ba9de824_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Sub), jule::Str::lit("-", 1));
	_1ba9de824_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Div), jule::Str::lit("/", 1));
	_1ba9de824_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Mul), jule::Str::lit("*", 1));
	_1ba9de824_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Mod), jule::Str::lit("%", 1));
	_1ba9de824_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_BitAnd), jule::Str::lit("&", 1));
	_1ba9de824_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_BitOr), jule::Str::lit("|", 1));
	_1ba9de824_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_BitXor), jule::Str::lit("^", 1));
	_1ba9de824_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Neg), jule::Str::lit("-", 1));
	_1ba9de824_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Pos), jule::Str::lit("+", 1));
	_1ba9de824_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_BitNot), jule::Str::lit("~", 1));
	_1ba9de824_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_AddAssign), jule::Str::lit("+=", 2));
	_1ba9de824_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_SubAssign), jule::Str::lit("-=", 2));
	_1ba9de824_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_DivAssign), jule::Str::lit("/=", 2));
	_1ba9de824_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_MulAssign), jule::Str::lit("*=", 2));
	_1ba9de824_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_ModAssign), jule::Str::lit("%=", 2));
	_1ba9de824_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_ShlAssign), jule::Str::lit("<<=", 3));
	_1ba9de824_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_ShrAssign), jule::Str::lit(">>=", 3));
	_1ba9de824_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_BitOrAssign), jule::Str::lit("|=", 2));
	_1ba9de824_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_BitAndAssign), jule::Str::lit("&=", 2));
	_1ba9de824_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_BitXorAssign), jule::Str::lit("^=", 2));
}



inline void _1ba9ded85_structureInsDecl(jule::Ptr<_1ba9d9555_ObjectCoder> _self_, jule::Ptr<_1ac702105_StructIns>* _74741_s) {
	{
		auto expr = &((*((*(_74741_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be35dc61:;
		if (it != expr_end) {
			jule::Ptr<_1ac71426b_Fn> _74821_m = *it;
			{
				if (_1ba9e7ac4_isHeadDecl(&(_74821_m))) {
					_1ba9e132b_funcDecl(_self_, &(_74821_m), false);
				};
			}
			_iter_next_1be35dc61:;
			++it;
			goto _iter_begin_1be35dc61;
		}
		_iter_end_1be35dc61:;
	};
	_1ba9d9c09_write(_self_, jule::Str::lit("struct ", 7));
	static__1adc624ee_structureIns(&((*(_self_))._field_Buf), _74741_s);
	_1ba9d9c09_write(_self_, jule::Str::lit(" {\n", 3));
	_1ba9da1b0_addIndent(_self_);
	{
		auto expr = &((*((*(_74741_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be35e5be:;
		if (it != expr_end) {
			jule::Ptr<_1ac701555_FieldIns> _75921_f = *it;
			{
				_1ba9da5ab_indent(_self_);
				_1ba9dd977_fieldDecl(_self_, &(_75921_f));
				_1ba9d9c09_write(_self_, jule::Str::lit("\n", 1));
			}
			_iter_next_1be35e5be:;
			++it;
			goto _iter_begin_1be35e5be;
		}
		_iter_end_1be35e5be:;
	};
	_1ba9da5ab_indent(_self_);
	_1ba9ddc30_structureDestructor(_self_, _74741_s);
	_1ba9d9c09_write(_self_, jule::Str::lit("\n\n", 2));
	_1ba9deacc_structureOperators(_self_, _74741_s);
	_1ba9d9c09_write(_self_, jule::Str::lit("\n", 1));
	_1ba9da3ad_doneIndent(_self_);
	_1ba9da5ab_indent(_self_);
	_1ba9d9c09_write(_self_, jule::Str::lit("};", 2));
}



inline void _1ba9e013d_structureDecl(jule::Ptr<_1ba9d9555_ObjectCoder> _self_, jule::Ptr<_1ac6ee377_Struct>* _77738_s) {
	{
		auto expr = &((*((*(_77738_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be36431b:;
		if (it != expr_end) {
			jule::Ptr<_1ac702105_StructIns> _77821_ins = *it;
			{
				_1ba9ded85_structureInsDecl(_self_, &(_77821_ins));
			}
			_iter_next_1be36431b:;
			++it;
			goto _iter_begin_1be36431b;
		}
		_iter_end_1be36431b:;
	};
}



inline void _1ba9e033b_structureDecls(jule::Ptr<_1ba9d9555_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be364bbd:;
		if (it != expr_end) {
			jule::Ptr<_1ac6ee377_Struct> _78421_s = *it;
			{
				if (((*(_78421_s))._field_Token != nullptr)) {
					_1ba9e013d_structureDecl(_self_, &(_78421_s));
					_1ba9d9c09_write(_self_, jule::Str::lit("\n", 1));
				};
			}
			_iter_next_1be364bbd:;
			++it;
			goto _iter_begin_1be364bbd;
		}
		_iter_end_1be364bbd:;
	};
}



inline void _1ba9e0539_structureMethodDecls(jule::Ptr<_1ba9d9555_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be365b25:;
		if (it != expr_end) {
			jule::Ptr<_1ac6ee377_Struct> _79321_s = *it;
			{
				if (((*(_79321_s))._field_Token != nullptr)) {
					{
						auto expr = &((*(_79321_s))._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1be367b6b:;
						if (it != expr_end) {
							jule::Ptr<_1ac702105_StructIns> _79529_ins = *it;
							{
								{
									auto expr = &((*(_79529_ins))._field_Methods);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1be3685b7:;
									if (it != expr_end) {
										jule::Ptr<_1ac71426b_Fn> _79633_m = *it;
										{
											if ((!(_1ba9e7ac4_isHeadDecl(&(_79633_m))))) {
												_1ba9db29e_pushResult(_self_, &(_79633_m));
												_1ba9e132b_funcDecl(_self_, &(_79633_m), false);
											};
										}
										_iter_next_1be3685b7:;
										++it;
										goto _iter_begin_1be3685b7;
									}
									_iter_end_1be3685b7:;
								};
							}
							_iter_next_1be367b6b:;
							++it;
							goto _iter_begin_1be367b6b;
						}
						_iter_end_1be367b6b:;
					};
				};
			}
			_iter_next_1be365b25:;
			++it;
			goto _iter_begin_1be365b25;
		}
		_iter_end_1be365b25:;
	};
}



inline void _1ba9e07e2_paramsDecls(jule::Ptr<_1ba9d9555_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1ac7161c4_ParamIns>>* _80836_params) {
	if (((*(_80836_params)).len() == 0LL)) {
		_1ba9d9c09_write(_self_, jule::Str::lit("(void)", 6));
		return;;
	};
	_1ba9d9c09_write(_self_, jule::Str::lit("(", 1));
	{
		auto expr = _80836_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be3683db:;
		if (it != expr_end) {
			jule::I64 _81514_i = it - expr->begin();
			jule::Ptr<_1ac7161c4_ParamIns> _81521_p = *it;
			{
				_1ba9ede71_paramIns((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), &(_81521_p));
				if ((((*(_80836_params)).len() - _81514_i) > 1LL)) {
					_1ba9d9c09_write(_self_, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1be3683db:;
			++it;
			_81514_i++;
			goto _iter_begin_1be3683db;
		}
		_iter_end_1be3683db:;
	};
	_1ba9d9c09_write(_self_, jule::Str::lit(")", 1));
}



inline void _1ba9e0b55_funcHead(jule::Ptr<_1ba9d9555_ObjectCoder> _self_, jule::Ptr<_1ac717170_FnIns>* _82533_f, jule::Bool _82544_ptr) {
	if ((((!(_82544_ptr)) && _1ac962431_Inline) && (!(_1ac714c0b_IsEntryPoint((*((*(_82533_f))))._field_Decl.ptr()))))) {
		_1ba9d9c09_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1ba9ee647_funcInsResult((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), _82533_f);
	if (_82544_ptr) {
		_1ba9d9c09_write(_self_, jule::Str::lit("(*", 2));
		static__1adc61850_funcIns(&((*(_self_))._field_Buf), _82533_f);
		_1ba9d9c09_write(_self_, jule::Str::lit(")", 1));
	} else {
		_1ba9d9c09_write(_self_, jule::Str::lit(" ", 1));
		static__1adc61850_funcIns(&((*(_self_))._field_Buf), _82533_f);
	};
}



inline void _1ba9e0eb8_funcDeclIns(jule::Ptr<_1ba9d9555_ObjectCoder> _self_, jule::Ptr<_1ac717170_FnIns>* _84036_f, jule::Bool _84047_ptr) {
	_1ba9da5ab_indent(_self_);
	_1ba9e0b55_funcHead(_self_, _84036_f, _84047_ptr);
	_1ba9e07e2_paramsDecls(_self_, &((*((*(_84036_f))))._field_Params));
	_1ba9d9c09_write(_self_, jule::Str::lit(";\n", 2));
}



inline void _1ba9e132b_funcDecl(jule::Ptr<_1ba9d9555_ObjectCoder> _self_, jule::Ptr<_1ac71426b_Fn>* _84733_f, jule::Bool _84741_ptr) {
	{
		auto expr = &((*((*(_84733_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be372648:;
		if (it != expr_end) {
			jule::Ptr<_1ac717170_FnIns> _84821_c = *it;
			{
				_1ba9e0eb8_funcDeclIns(_self_, &(_84821_c), _84741_ptr);
			}
			_iter_next_1be372648:;
			++it;
			goto _iter_begin_1be372648;
		}
		_iter_end_1be372648:;
	};
}



inline void _1ba9e1749_funcDeclTrait(jule::Ptr<_1ba9d9555_ObjectCoder> _self_, jule::Ptr<_1ac727548_Trait>* _85338_t, jule::Ptr<_1ac71426b_Fn>* _85354_f, jule::Bool _85362_ptr) {
	{
		auto expr = &((*((*(_85354_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be3739ce:;
		if (it != expr_end) {
			jule::Ptr<_1ac717170_FnIns> _85421_c = *it;
			{
				jule::Ptr<_1ac859a32_TypeKind> _85517_k = (*((*(_85421_c))._field_Params[0LL]))._field_Kind;;
				(*((*(_85421_c))._field_Params[0LL]))._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>((*(_85338_t)), 2)});
				_1ba9e0eb8_funcDeclIns(_self_, &(_85421_c), _85362_ptr);
				(*((*(_85421_c))._field_Params[0LL]))._field_Kind=_85517_k;
			}
			_iter_next_1be3739ce:;
			++it;
			goto _iter_begin_1be3739ce;
		}
		_iter_end_1be3739ce:;
	};
}



inline void _1ba9e1947_funcDecls(jule::Ptr<_1ba9d9555_ObjectCoder> _self_) {
	_1ba9dcd1c_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1ac77a832_Package>*)>([=](jule::Ptr<_1ac77a832_Package>* _86335_pkg) mutable -> void {
		_1ba9e6793_iterFiles(_86335_pkg, jule::Fn<void(jule::Ptr<_1ac81e013_SymbolTable>*)>([=](jule::Ptr<_1ac81e013_SymbolTable>* _86436_file) mutable -> void {
			{
				auto expr = &((*((*(_86436_file))))._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1be37820e:;
				if (it != expr_end) {
					jule::Ptr<_1ac71426b_Fn> _86529_f = *it;
					{
						if (((!((*(_86529_f))._field_Binded)) && ((*(_86529_f))._field_Token != nullptr))) {
							_1ba9db29e_pushResult(_self_, &(_86529_f));
							_1ba9e132b_funcDecl(_self_, &(_86529_f), false);
						};
					}
					_iter_next_1be37820e:;
					++it;
					goto _iter_begin_1be37820e;
				}
				_iter_end_1be37820e:;
			};
		}));
	}));
}



inline void _1ba9e1caa_traitDataTypeMethods(jule::Ptr<_1ba9d9555_ObjectCoder> _self_, jule::Ptr<_1ac727548_Trait>* _87545_owner, jule::Ptr<_1ac727548_Trait>* _87565_t) {
	{
		auto expr = &((*((*(_87565_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be377dac:;
		if (it != expr_end) {
			jule::Ptr<_1ac71426b_Fn> _87621_m = *it;
			{
				jule::Ptr<_1ac717170_FnIns> _87717_ins = (*(_87621_m))._field_Instances[0LL];;
				jule::Ptr<_1ac7161c4_ParamIns> _87817_p = (*(_87717_ins))._field_Params[0LL];;
				(*(_87817_p))._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>((*(_87565_t)), 2)});
				{
					auto expr = (*(_87717_ins))._field_Params.slice(1LL);
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_1be37bba2:;
					if (it != expr_end) {
						jule::I64 _88218_i = it - expr.begin();
						jule::Ptr<_1ac7161c4_ParamIns> _88225_ip = *it;
						{
							if (_1ac6b5b8a_IsAnonIdent((*((*(_88225_ip))._field_Decl))._field_Ident)) {
								(*((*(_88225_ip))._field_Decl))._field_Ident=(jule::Str::lit("_", 1) + _1dbba39c8_Itoa(_88218_i));
							};
						}
						_iter_next_1be37bba2:;
						++it;
						_88218_i++;
						goto _iter_begin_1be37bba2;
					}
					_iter_end_1be37bba2:;
				};
				if ((!(_1da0b7cbd_Production))) {
					jule::Ptr<_1ac7161c4_ParamIns> _88821_lp = (*(_87717_ins))._field_Params[((*(_87717_ins))._field_Params.len() - 1LL)];;
					{
						auto &_match_expr{ (*((*(_88821_lp))._field_Kind))._field_Kind };
						
						if (_match_expr.type_is(true, 27)) {
							_case_begin_1be381448:;
							{
								goto _match_end_1be37e6ee;
							}
						}
						else {
							_case_begin_1be37e754:;
							{
								{ jule::Slice<jule::Ptr<_1ac7161c4_ParamIns>> &__jule_push_dest = (*(_87717_ins))._field_Params; __jule_push_dest.push(jule::new_ptr<_1ac7161c4_ParamIns>(_1ac7161c4_ParamIns{._field_Decl=jule::new_ptr<_1ac712797_Param>(_1ac712797_Param{._field_Ident=jule::Str::lit("__file", 6)}), ._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(jule::new_ptr<_1ba9e8ba2_customType>(_1ba9e8ba2_customType{._field_kind=jule::Str::lit("const char*", 11)}), 27)})})); };
							}
						}
						_match_end_1be37e6ee:;
					};
				};
				_1ba9db29e_pushResult(_self_, &(_87621_m));
				_1ba9e1749_funcDeclTrait(_self_, _87545_owner, &(_87621_m), true);
			}
			_iter_next_1be377dac:;
			++it;
			goto _iter_begin_1be377dac;
		}
		_iter_end_1be377dac:;
	};
}



inline void _1ba9e1ea8_traitDataTypes(jule::Ptr<_1ba9d9555_ObjectCoder> _self_) {
	_1ba9dcd1c_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1ac77a832_Package>*)>([=](jule::Ptr<_1ac77a832_Package>* _91135_pkg) mutable -> void {
		_1ba9e6793_iterFiles(_91135_pkg, jule::Fn<void(jule::Ptr<_1ac81e013_SymbolTable>*)>([=](jule::Ptr<_1ac81e013_SymbolTable>* _91236_file) mutable -> void {
			{
				auto expr = &((*((*(_91236_file))))._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1be3833c3:;
				if (it != expr_end) {
					jule::Ptr<_1ac727548_Trait> _91329_t = *it;
					{
						if (((*(_91329_t))._field_Token == nullptr)) {
							return;;
						};
						if (((*(_91329_t))._field_Methods.len() == 0LL)) {
							goto _iter_next_1be3833c3;
						};
						_1ba9d9c09_write(_self_, jule::Str::lit("struct ", 7));
						static__1adc61b3b_traitDecl(&((*(_self_))._field_Buf), _91329_t);
						_1ba9d9c09_write(_self_, jule::Str::lit("MptrData", 8));
						_1ba9d9c09_write(_self_, jule::Str::lit(" {\n", 3));
						_1ba9da1b0_addIndent(_self_);
						_1ba9e1caa_traitDataTypeMethods(_self_, &(_91329_t), &(_91329_t));
						_1ba9da3ad_doneIndent(_self_);
						_1ba9da5ab_indent(_self_);
						_1ba9d9c09_write(_self_, jule::Str::lit("};\n\n", 4));
					}
					_iter_next_1be3833c3:;
					++it;
					goto _iter_begin_1be3833c3;
				}
				_iter_end_1be3833c3:;
			};
		}));
	}));
}



inline void _1ba9e2261_paramIns(jule::Ptr<_1ba9d9555_ObjectCoder> _self_, jule::Ptr<_1ac7161c4_ParamIns>* _93433_p) {
	_1ba9ede71_paramIns((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), _93433_p);
	_1ba9d9c09_write(_self_, jule::Str::lit(" ", 1));
	static__1adc61e27_param(&((*(_self_))._field_Buf), &((*((*(_93433_p))))._field_Decl));
}



inline void _1ba9e2519_paramsIns(jule::Ptr<_1ba9d9555_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1ac7161c4_ParamIns>>* _94034_params) {
	if (((*(_94034_params)).len() == 0LL)) {
		_1ba9d9c09_write(_self_, jule::Str::lit("(void)", 6));
		return;;
	};
	_1ba9d9c09_write(_self_, jule::Str::lit("(", 1));
	{
		auto expr = _94034_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be3881ca:;
		if (it != expr_end) {
			jule::I64 _94614_i = it - expr->begin();
			jule::Ptr<_1ac7161c4_ParamIns> _94621_p = *it;
			{
				_1ba9e2261_paramIns(_self_, &(_94621_p));
				if ((((*(_94034_params)).len() - _94614_i) > 1LL)) {
					_1ba9d9c09_write(_self_, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1be3881ca:;
			++it;
			_94614_i++;
			goto _iter_begin_1be3881ca;
		}
		_iter_end_1be3881ca:;
	};
	_1ba9d9c09_write(_self_, jule::Str::lit(")", 1));
}



inline void _1ba9e287c_varInitExpr(jule::Ptr<_1ba9d9555_ObjectCoder> _self_, jule::Ptr<_1ac7bb015_Var>* _95536_v, jule::Fn<void(void)> _95545_init) {
	if ((*((*(_95536_v))))._field_Statically) {
		_1ba9d9c09_write(_self_, jule::Str::lit("static ", 7));
	};
	_1baa00181_kind((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), (*((*((*(_95536_v))))._field_Kind))._field_Kind);
	_1ba9d9c09_write(_self_, jule::Str::lit(" ", 1));
	if ((*((*(_95536_v))))._field_Reference) {
		_1ba9d9c09_write(_self_, jule::Str::lit("*", 1));
	};
	static__1adc62ac6_var(&((*(_self_))._field_Buf), (*(_95536_v)));
	if ((_95545_init != nullptr)) {
		_1ba9d9c09_write(_self_, jule::Str::lit(" = ", 3));
		_95545_init();
	};
	_1ba9d9c09_write(_self_, jule::Str::lit(";", 1));
}



inline void _1ba9e2b35_var(jule::Ptr<_1ba9d9555_ObjectCoder> _self_, jule::Ptr<_1ac7bb015_Var> _97327_v) {
	if (_1ac6b58c1_IsIgnoreIdent((*(_97327_v))._field_Ident)) {
		return;;
	};
	if ((((*(_97327_v))._field_Value != nullptr) && ((*((*(_97327_v))._field_Value))._field_Expr != nullptr))) {
		if (((*((*((*(_97327_v))._field_Value))._field_Data))._field_Model != nullptr)) {
			if ((*(_97327_v))._field_Reference) {
				_1ba9e287c_varInitExpr(_self_, &(_97327_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1ba9d9c09_write(_self_, jule::Str::lit("&(", 2));
					_1ad83cbbd_model((*(_self_))._field_ec, (*((*((*(_97327_v))._field_Value))._field_Data))._field_Model);
					_1ba9d9c09_write(_self_, jule::Str::lit(")", 1));
				}));
			} else {
				_1ba9e287c_varInitExpr(_self_, &(_97327_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1ad8341d1_possibleRefExpr((*(_self_))._field_ec, (*((*((*(_97327_v))._field_Value))._field_Data))._field_Model);
				}));
			};
			return;;
		};
		_1ba9e287c_varInitExpr(_self_, &(_97327_v), nullptr);
		return;;
	};
	if ((*(_97327_v))._field_Reference) {
		_1ba9e287c_varInitExpr(_self_, &(_97327_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1ba9d9c09_write(_self_, jule::Str::lit("nullptr", 7));
		}));
		return;;
	};
	if (_1baa0761c_shouldInitialized(&((*((*(_97327_v))._field_Kind))._field_Kind))) {
		_1ba9e287c_varInitExpr(_self_, &(_97327_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1ad83ce76_initExpr((*(_self_))._field_ec, (*((*(_97327_v))._field_Kind))._field_Kind);
		}));
		return;;
	};
	_1ba9e287c_varInitExpr(_self_, &(_97327_v), nullptr);
}



inline void _1ba9e2ddd_funcIns(jule::Ptr<_1ba9d9555_ObjectCoder> _self_, jule::Ptr<_1ac717170_FnIns>* _100432_f) {
	_1ba9e0b55_funcHead(_self_, _100432_f, false);
	_1ba9e2519_paramsIns(_self_, &((*((*(_100432_f))))._field_Params));
	_1ba9d9c09_write(_self_, jule::Str::lit(" ", 1));
	_1ad82ce99_funcScope((*(_self_))._field_sc, (*(_100432_f)));
	if (((*((*(_100432_f))))._field_Scope != nullptr)) {
		_1ba9d9c09_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1ba9e3196_func(jule::Ptr<_1ba9d9555_ObjectCoder> _self_, jule::Ptr<_1ac71426b_Fn>* _101429_f) {
	{
		auto expr = &((*((*(_101429_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be39a187:;
		if (it != expr_end) {
			jule::Ptr<_1ac717170_FnIns> _101521_ins = *it;
			{
				_1ba9e2ddd_funcIns(_self_, &(_101521_ins));
			}
			_iter_next_1be39a187:;
			++it;
			goto _iter_begin_1be39a187;
		}
		_iter_end_1be39a187:;
	};
}



inline void _1ba9e3509_funcTrait(jule::Ptr<_1ba9d9555_ObjectCoder> _self_, jule::Ptr<_1ba9d8114_traitHash>* _102034_hash, jule::Ptr<_1ac71426b_Fn>* _102057_f) {
	jule::Str _10219_ident = (*((*(_102057_f))))._field_Ident;;
	{
		auto expr = &((*((*(_102057_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be39b92a:;
		if (it != expr_end) {
			jule::Ptr<_1ac717170_FnIns> _102221_ins = *it;
			{
				(*(_102221_ins))._field_Scope=nullptr;
				_1c164cc40_StrBuilder _102517_s = static__1c164d191_New(static_cast<jule::I64>((((((*((*(_102057_f))))._field_Ident.len() + _10219_ident.len()) + (*((*(_102034_hash))))._field_ti.len()) + 2LL) + 4LLU)));;
				_1c164d702_WriteStr(&_102517_s, _10219_ident);
				_1c164d9aa_WriteByte(&_102517_s, '_');
				_1c164d702_WriteStr(&_102517_s, (*((*(_102034_hash))))._field_ti);
				_1c164d9aa_WriteByte(&_102517_s, '_');
				_1c164d702_WriteStr(&_102517_s, _1dbba39c8_Itoa((*((*(_102034_hash))))._field_i));
				(*((*(_102057_f))))._field_Ident=_1c164dee9_Str(&_102517_s);
				jule::Ptr<_1ac859a32_TypeKind> _103417_k = (*((*(_102221_ins))._field_Params[0LL]))._field_Kind;;
				(*((*(_102221_ins))._field_Params[0LL]))._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>((*((*(_102034_hash))))._field_t, 2)});
				_1ba9e2ddd_funcIns(_self_, &(_102221_ins));
				(*((*(_102221_ins))._field_Params[0LL]))._field_Kind=_103417_k;
			}
			_iter_next_1be39b92a:;
			++it;
			goto _iter_begin_1be39b92a;
		}
		_iter_end_1be39b92a:;
	};
	(*((*(_102057_f))))._field_Ident=_10219_ident;
}



inline void _1ba9e386c_traitWrapper(jule::Ptr<_1ba9d9555_ObjectCoder> _self_, jule::Ptr<_1ac71426b_Fn>* _104237_m, jule::Ptr<_1ba9d8114_traitHash>* _104250_hash) {
	_1ba9e3509_funcTrait(_self_, _104250_hash, _104237_m);
	if (((*((*(_104250_hash))))._field_s == nullptr)) {
		if (_1da0b7cbd_Production) {
			_1ba9d9c09_write(_self_, jule::Str::lit(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
		} else {
			_1ba9d9c09_write(_self_, jule::Str::lit(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
		};
		return;;
	};
	jule::Bool _10549_ptr = (!(_1ac713149_IsRef((*((*(_104237_m))))._field_Params[0LL].ptr())));;
	jule::Ptr<_1ac71426b_Fn> _105613_sm = _1ac70316c_FindMethod((*((*(_104250_hash))))._field_s.ptr(), (*((*(_104237_m))))._field_Ident, false);;
	if (((_105613_sm == nullptr) || ((*(_105613_sm))._field_Instances.len() == 0LL))) {
		return;;
	};
	_1ba9da1b0_addIndent(_self_);
	_1ba9d9c09_write(_self_, jule::Str::lit("{\n", 2));
	_1ba9da5ab_indent(_self_);
	if (((*(_105613_sm))._field_Exceptional || (!(_1ac7146de_IsVoid(_105613_sm.ptr()))))) {
		_1ba9d9c09_write(_self_, jule::Str::lit("return ", 7));
	};
	static__1adc61564_func(&((*(_self_))._field_Buf), &(_105613_sm));
	_1ba9d9c09_write(_self_, jule::Str::lit("(", 1));
	if (_10549_ptr) {
		_1ba9d9c09_write(_self_, jule::Str::lit("_self_.safe_ptr<", 16));
		_1ba9ed437_structureIns((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), (*((*(_104250_hash))))._field_s);
		_1ba9d9c09_write(_self_, jule::Str::lit(">(", 2));
		if ((!(_1da0b7cbd_Production))) {
			_1ba9d9c09_write(_self_, jule::Str::lit("_00___file", 10));
		};
		_1ba9d9c09_write(_self_, jule::Str::lit(")", 1));
	} else {
		_1ba9d9c09_write(_self_, jule::Str::lit("_self_.data.as<", 15));
		_1ba9ed0c4_structure((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), (*(_105613_sm))._field_Owner);
		_1ba9d9c09_write(_self_, jule::Str::lit(">()", 3));
	};
	{
		auto expr = (*((*(_104237_m))))._field_Params.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1be3a7ea8:;
		if (it != expr_end) {
			jule::Ptr<_1ac712797_Param> _108216_mp = *it;
			{
				_1ba9d9c09_write(_self_, jule::Str::lit(", ", 2));
				static__1adc61e27_param(&((*(_self_))._field_Buf), &(_108216_mp));
			}
			_iter_next_1be3a7ea8:;
			++it;
			goto _iter_begin_1be3a7ea8;
		}
		_iter_end_1be3a7ea8:;
	};
	_1ba9d9c09_write(_self_, jule::Str::lit(");\n}\n", 5));
	_1ba9da3ad_doneIndent(_self_);
}



inline void _1ba9e3a6a_traitWrappers(jule::Ptr<_1ba9d9555_ObjectCoder> _self_) {
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be3acaa1:;
		if (it != expr_end) {
			jule::Ptr<_1ba9d8114_traitHash> _109121_hash = *it;
			{
				{
					auto expr = &((*((*(_109121_hash))._field_t))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be3ad4ec:;
					if (it != expr_end) {
						jule::Ptr<_1ac71426b_Fn> _109225_m = *it;
						{
							_1ba9e386c_traitWrapper(_self_, &(_109225_m), &(_109121_hash));
						}
						_iter_next_1be3ad4ec:;
						++it;
						goto _iter_begin_1be3ad4ec;
					}
					_iter_end_1be3ad4ec:;
				};
			}
			_iter_next_1be3acaa1:;
			++it;
			goto _iter_begin_1be3acaa1;
		}
		_iter_end_1be3acaa1:;
	};
}



inline void _1ba9e3dcd_traitDataMethods(jule::Ptr<_1ba9d9555_ObjectCoder> _self_, jule::Ptr<_1ac727548_Trait>* _109841_t, jule::Ptr<_1ba9d8114_traitHash>* _109853_hash) {
	{
		auto expr = &((*((*(_109841_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be3ae5ec:;
		if (it != expr_end) {
			jule::Ptr<_1ac71426b_Fn> _109921_m = *it;
			{
				_1c164cc40_StrBuilder _110017_mIdent = static__1c164d191_New(static_cast<jule::I64>((*(_109921_m))._field_Ident.len()));;
				static__1adc61564_func(&(_110017_mIdent), &(_109921_m));
				_1ba9da5ab_indent(_self_);
				_1ba9d9c09_write(_self_, jule::Str::lit(".", 1));
				_1ba9d9eb2_writeBytes(_self_, _1c164e99a_Buf(&_110017_mIdent));
				_1ba9d9c09_write(_self_, jule::Str::lit("=", 1));
				_1ba9d9eb2_writeBytes(_self_, _1c164e99a_Buf(&_110017_mIdent));
				_1ba9d9c09_write(_self_, jule::Str::lit("_", 1));
				_1ba9d9c09_write(_self_, (*((*(_109853_hash))))._field_ti);
				_1ba9d9c09_write(_self_, jule::Str::lit("_", 1));
				_1ba9d9c09_write(_self_, _1dbba39c8_Itoa((*((*(_109853_hash))))._field_i));
				_1ba9d9c09_write(_self_, jule::Str::lit(",\n", 2));
			}
			_iter_next_1be3ae5ec:;
			++it;
			goto _iter_begin_1be3ae5ec;
		}
		_iter_end_1be3ae5ec:;
	};
}



inline void _1ba9e4241_traitData(jule::Ptr<_1ba9d9555_ObjectCoder> _self_, jule::Ptr<_1ba9d8114_traitHash>* _111534_hash, jule::Ptr<_1ac727548_Trait>* _111557_old) {
	if (((*((*((*(_111534_hash))))._field_t))._field_Methods.len() == 0LL)) {
		return;;
	};
	_1c164cc40_StrBuilder _111913_ident = static__1c164d191_New(static_cast<jule::I64>((*((*((*(_111534_hash))))._field_t))._field_Ident.len()));;
	static__1adc61b3b_traitDecl(&(_111913_ident), (*((*(_111534_hash))))._field_t);
	if (((*((*(_111534_hash))))._field_t != (*(_111557_old)))) {
		if (((*(_111557_old)) != nullptr)) {
			_1ba9da3ad_doneIndent(_self_);
			_1ba9da5ab_indent(_self_);
			_1ba9d9c09_write(_self_, jule::Str::lit("};\n", 3));
		};
		_1ba9d9c09_write(_self_, jule::Str::lit("static ", 7));
		_1ba9d9eb2_writeBytes(_self_, _1c164e99a_Buf(&_111913_ident));
		_1ba9d9c09_write(_self_, jule::Str::lit("MptrData ", 9));
		_1ba9d9eb2_writeBytes(_self_, _1c164e99a_Buf(&_111913_ident));
		_1ba9d9c09_write(_self_, jule::Str::lit("_mptr_data[] = {\n", 17));
		(*(_111557_old))=(*((*(_111534_hash))))._field_t;
		_1ba9da1b0_addIndent(_self_);
	};
	_1ba9da5ab_indent(_self_);
	_1ba9d9c09_write(_self_, jule::Str::lit("{\n", 2));
	_1ba9da1b0_addIndent(_self_);
	_1ba9e3dcd_traitDataMethods(_self_, &((*((*(_111534_hash))))._field_t), _111534_hash);
	_1ba9da3ad_doneIndent(_self_);
	_1ba9da5ab_indent(_self_);
	_1ba9d9c09_write(_self_, jule::Str::lit("},\n", 3));
}



inline void _1ba9e443e_traitDatas(jule::Ptr<_1ba9d9555_ObjectCoder> _self_) {
	jule::Ptr<_1ac727548_Trait> _114517_old = nullptr;;
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be3bab36:;
		if (it != expr_end) {
			jule::Ptr<_1ba9d8114_traitHash> _114621_hash = *it;
			{
				_1ba9e4241_traitData(_self_, &(_114621_hash), &(_114517_old));
			}
			_iter_next_1be3bab36:;
			++it;
			goto _iter_begin_1be3bab36;
		}
		_iter_end_1be3bab36:;
	};
	if ((_114517_old != nullptr)) {
		_1ba9da3ad_doneIndent(_self_);
		_1ba9da5ab_indent(_self_);
		_1ba9d9c09_write(_self_, jule::Str::lit("};\n", 3));
	};
}



inline void _1ba9e463c_globals(jule::Ptr<_1ba9d9555_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be3bc9a1:;
		if (it != expr_end) {
			jule::Ptr<_1ac7bb015_Var> _115721_v = *it;
			{
				_1baa00181_kind((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), (*((*(_115721_v))._field_Kind))._field_Kind);
				_1ba9d9c09_write(_self_, jule::Str::lit(" ", 1));
				static__1adc62ac6_var(&((*(_self_))._field_Buf), _115721_v);
				_1ba9d9c09_write(_self_, jule::Str::lit(" = ", 3));
				_1ad83cbbd_model((*(_self_))._field_ec, (*((*((*(_115721_v))._field_Value))._field_Data))._field_Model);
				_1ba9d9c09_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1be3bc9a1:;
			++it;
			goto _iter_begin_1be3bc9a1;
		}
		_iter_end_1be3bc9a1:;
	};
}



inline void _1ba9e483a_decls(jule::Ptr<_1ba9d9555_ObjectCoder> _self_) {
	_1ba9dd218_traitDecls(_self_);
	_1ba9dd6be_structurePlainDecls(_self_);
	_1ba9e033b_structureDecls(_self_);
	(*(_self_))._field_headPos=static_cast<jule::I64>(_1c164e47d_Len(&(*(_self_))._field_Buf));
	_1ba9e0539_structureMethodDecls(_self_);
	_1ba9e1947_funcDecls(_self_);
	_1ba9d9c09_write(_self_, jule::Str::lit("\n\n", 2));
	_1ba9e1ea8_traitDataTypes(_self_);
	_1ba9d9c09_write(_self_, jule::Str::lit("\n\n", 2));
	_1ba9e3a6a_traitWrappers(_self_);
	_1ba9d9c09_write(_self_, jule::Str::lit("\n\n", 2));
	_1ba9e443e_traitDatas(_self_);
	_1ba9d9c09_write(_self_, jule::Str::lit("\n\n", 2));
	(*(_self_))._field_declPos=static_cast<jule::I64>(_1c164e47d_Len(&(*(_self_))._field_Buf));
	_1ba9e463c_globals(_self_);
}



inline void _1ba9e4ae3_structureMethods(jule::Ptr<_1ba9d9555_ObjectCoder> _self_, jule::Ptr<_1ac702105_StructIns>* _118541_s) {
	{
		auto expr = &((*((*(_118541_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be3c56ce:;
		if (it != expr_end) {
			jule::Ptr<_1ac71426b_Fn> _118621_f = *it;
			{
				_1ba9e3196_func(_self_, &(_118621_f));
				_1ba9d9c09_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1be3c56ce:;
			++it;
			goto _iter_begin_1be3c56ce;
		}
		_iter_end_1be3c56ce:;
	};
}



inline void _1ba9e4d9b_structureOstream(jule::Ptr<_1ba9d9555_ObjectCoder> _self_, jule::Ptr<_1ac702105_StructIns>* _119241_s) {
	_1ba9da5ab_indent(_self_);
	_1ba9d9c09_write(_self_, jule::Str::lit("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	static__1adc624ee_structureIns(&((*(_self_))._field_Buf), _119241_s);
	_1ba9d9c09_write(_self_, jule::Str::lit(" _Src) {\n", 9));
	_1ba9da1b0_addIndent(_self_);
	_1ba9da5ab_indent(_self_);
	jule::Ptr<_1ac71426b_Fn> _120013_fts = _1ac70316c_FindMethod((*(_119241_s)).ptr(), jule::Str::lit("Str", 3), false);;
	if (static__1ac7bc731_Str(_120013_fts)) {
		_1ba9d9c09_write(_self_, jule::Str::lit("_Stream << ", 11));
		static__1adc61564_func(&((*(_self_))._field_Buf), &(_120013_fts));
		_1ba9d9c09_write(_self_, jule::Str::lit("(&_Src);\n", 9));
	} else {
		_1ba9d9c09_write(_self_, jule::Str::lit("_Stream << \"", 12));
		_1ad83d938_cstrBytes(&((*(_self_))._field_Buf), (*((*((*(_119241_s))))._field_Decl))._field_Ident);
		_1ba9d9c09_write(_self_, jule::Str::lit("{\";\n", 4));
		{
			auto expr = &((*((*(_119241_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1be3ca184:;
			if (it != expr_end) {
				jule::I64 _121018_i = it - expr->begin();
				jule::Ptr<_1ac701555_FieldIns> _121025_f = *it;
				{
					_1ba9da5ab_indent(_self_);
					_1ba9d9c09_write(_self_, jule::Str::lit("_Stream << \"", 12));
					_1ad83d938_cstrBytes(&((*(_self_))._field_Buf), (*((*(_121025_f))._field_Decl))._field_Ident);
					_1ba9d9c09_write(_self_, jule::Str::lit(":", 1));
					jule::Ptr<_1ac702105_StructIns> _121717_strct = _1ac85d706_Struct((*(_121025_f))._field_Kind.ptr());;
					if ((((_121717_strct != nullptr) && ((*(_121717_strct))._field_Decl != nullptr)) && (*((*(_121717_strct))._field_Decl))._field_Binded)) {
						_1ba9d9c09_write(_self_, jule::Str::lit(" cpp.", 5));
						static__1adc627da_field(&((*(_self_))._field_Buf), &((*(_121025_f))._field_Decl));
						_1ba9d9c09_write(_self_, jule::Str::lit("\"", 1));
					} else {
						_1ba9d9c09_write(_self_, jule::Str::lit("\" << _Src.", 10));
						static__1adc627da_field(&((*(_self_))._field_Buf), &((*(_121025_f))._field_Decl));
					};
					if (((_121018_i + 1LL) < (*((*(_119241_s))))._field_Fields.len())) {
						_1ba9d9c09_write(_self_, jule::Str::lit(" << \", \"", 8));
					};
					_1ba9d9c09_write(_self_, jule::Str::lit(";\n", 2));
				}
				_iter_next_1be3ca184:;
				++it;
				_121018_i++;
				goto _iter_begin_1be3ca184;
			}
			_iter_end_1be3ca184:;
		};
		_1ba9da5ab_indent(_self_);
		_1ba9d9c09_write(_self_, jule::Str::lit("_Stream << \"}\";\n", 16));
	};
	_1ba9da5ab_indent(_self_);
	_1ba9d9c09_write(_self_, jule::Str::lit("return _Stream;\n", 16));
	_1ba9da3ad_doneIndent(_self_);
	_1ba9d9c09_write(_self_, jule::Str::lit("}", 1));
}



inline void _1ba9e5154_structureIns(jule::Ptr<_1ba9d9555_ObjectCoder> _self_, jule::Ptr<_1ac702105_StructIns>* _124337_s) {
	_1ba9e4ae3_structureMethods(_self_, _124337_s);
	_1ba9d9c09_write(_self_, jule::Str::lit("\n\n", 2));
	_1ba9e4d9b_structureOstream(_self_, _124337_s);
}



inline void _1ba9e540c_structure(jule::Ptr<_1ba9d9555_ObjectCoder> _self_, jule::Ptr<_1ac6ee377_Struct>* _124934_s) {
	{
		auto expr = &((*((*(_124934_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be3d47ba:;
		if (it != expr_end) {
			jule::Ptr<_1ac702105_StructIns> _125021_ins = *it;
			{
				_1ba9e5154_structureIns(_self_, &(_125021_ins));
				_1ba9d9c09_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1be3d47ba:;
			++it;
			goto _iter_begin_1be3d47ba;
		}
		_iter_end_1be3d47ba:;
	};
}



inline void _1ba9e560a_structures(jule::Ptr<_1ba9d9555_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be3d5117:;
		if (it != expr_end) {
			jule::Ptr<_1ac6ee377_Struct> _125721_s = *it;
			{
				if (((*(_125721_s))._field_Token != nullptr)) {
					_1ba9e540c_structure(_self_, &(_125721_s));
					_1ba9d9c09_write(_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1be3d5117:;
			++it;
			goto _iter_begin_1be3d5117;
		}
		_iter_end_1be3d5117:;
	};
}



inline void _1ba9e5808_funcs(jule::Ptr<_1ba9d9555_ObjectCoder> _self_) {
	_1ba9dcd1c_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1ac77a832_Package>*)>([=](jule::Ptr<_1ac77a832_Package>* _126635_pkg) mutable -> void {
		_1ba9e6793_iterFiles(_126635_pkg, jule::Fn<void(jule::Ptr<_1ac81e013_SymbolTable>*)>([=](jule::Ptr<_1ac81e013_SymbolTable>* _126736_file) mutable -> void {
			{
				auto expr = &((*((*(_126736_file))))._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1be3d9380:;
				if (it != expr_end) {
					jule::Ptr<_1ac71426b_Fn> _126829_f = *it;
					{
						if (((!(_1da0b7361_Test)) && _1baa07353_hasDirective(&((*(_126829_f))._field_Directives), jule::Str::lit("test", 4)))) {
							goto _iter_next_1be3d9380;
						};
						if (((!((*(_126829_f))._field_Binded)) && ((*(_126829_f))._field_Token != nullptr))) {
							_1ba9e3196_func(_self_, &(_126829_f));
							_1ba9d9c09_write(_self_, jule::Str::lit("\n\n", 2));
						};
					}
					_iter_next_1be3d9380:;
					++it;
					goto _iter_begin_1be3d9380;
				}
				_iter_end_1be3d9380:;
			};
		}));
	}));
}



inline void _1ba9e5ab1_pushInit(jule::Ptr<_1ba9d9555_ObjectCoder> _self_, jule::Ptr<_1ac77a832_Package>* _128133_pkg) {
	_1ba9e6793_iterFiles(_128133_pkg, jule::Fn<void(jule::Ptr<_1ac81e013_SymbolTable>*)>([=](jule::Ptr<_1ac81e013_SymbolTable>* _128232_file) mutable -> void {
		{
			auto expr = &((*((*(_128232_file))))._field_Funcs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1be3dbe21:;
			if (it != expr_end) {
				jule::Ptr<_1ac71426b_Fn> _128320_f = *it;
				{
					if ((*(_128320_f))._field_Ident.equal("init", 4)) {
						_1ba9da5ab_indent(_self_);
						static__1adc61564_func(&((*(_self_))._field_Buf), &(_128320_f));
						_1ba9d9c09_write(_self_, jule::Str::lit("();\n", 4));
					};
				}
				_iter_next_1be3dbe21:;
				++it;
				goto _iter_begin_1be3dbe21;
			}
			_iter_end_1be3dbe21:;
		};
	}));
}



inline void _1ba9e5cae_initCaller(jule::Ptr<_1ba9d9555_ObjectCoder> _self_) {
	_1ba9d9c09_write(_self_, jule::Str::lit("void __jule_call_initializers(void) {\n", 38));
	_1ba9da1b0_addIndent(_self_);
	_1ba9dcd1c_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1ac77a832_Package>*)>([=](jule::Ptr<_1ac77a832_Package>* _129635_pkg) mutable -> void {
		_1ba9e5ab1_pushInit(_self_, _129635_pkg);
	}));
	_1ba9da3ad_doneIndent(_self_);
	_1ba9d9c09_write(_self_, jule::Str::lit("\n}", 2));
}



inline void _1ba9e5eac_end(jule::Ptr<_1ba9d9555_ObjectCoder> _self_) {
	_1ba9d9c09_write(_self_, jule::Str::lit("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_1da0b7361_Test) {
		_1ba9d9c09_write(_self_, jule::Str::lit("test_point();", 13));
	} else {
		_1ba9d9c09_write(_self_, jule::Str::lit("entry_point();", 14));
	};
	_1ba9d9c09_write(_self_, jule::Str::lit("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1ba9e61aa_serializeHead(jule::Ptr<_1ba9d9555_ObjectCoder> _self_) {
	_1ba9dca64_prepareStructures(_self_);
	_1ba9dd01a_buildTraitMap(_self_);
	_1ba9dc3b0_head(_self_);
	_1ba9d9c09_write(_self_, jule::Str::lit("\n", 1));
	_1ba9e483a_decls(_self_);
	if ((_1c164e47d_Len(&(*(_self_))._field_resultDecls) > 0LL)) {
		jule::Slice<jule::U8> _133117_head = jule::Slice<jule::U8>::alloc(0LL, (_1c164e47d_Len(&(*(_self_))._field_Buf) + _1c164e47d_Len(&(*(_self_))._field_resultDecls)), 0);;
		(_133117_head).append(_1c164e99a_Buf(&(*(_self_))._field_Buf).slice(0LL, (*(_self_))._field_headPos));;
		(_133117_head).append(_1c164e99a_Buf(&(*(_self_))._field_resultDecls));;
		(*(_self_))._field_declPos+=_1c164e47d_Len(&(*(_self_))._field_resultDecls);
		(_133117_head).append(_1c164e99a_Buf(&(*(_self_))._field_Buf).slice((*(_self_))._field_headPos));;
		{
			_1c164ec53_SetBuf(&(*(_self_))._field_Buf, _133117_head);
		};
	};
	_1ba9d9c09_write(_self_, jule::Str::lit("\n", 1));
	_1ba9e560a_structures(_self_);
	_1ba9e5808_funcs(_self_);
	_1ba9e5cae_initCaller(_self_);
	_1ba9d9c09_write(_self_, jule::Str::lit("\n\n", 2));
	if ((_1c164e47d_Len(&(*(_self_))._field_anyObj) > 0LL)) {
		jule::Slice<jule::U8> _134617_head = jule::Slice<jule::U8>::alloc(0LL, (_1c164e47d_Len(&(*(_self_))._field_Buf) + _1c164e47d_Len(&(*(_self_))._field_anyObj)), 0);;
		(_134617_head).append(_1c164e99a_Buf(&(*(_self_))._field_Buf).slice(0LL, (*(_self_))._field_declPos));;
		(_134617_head).append(_1c164e99a_Buf(&(*(_self_))._field_anyObj));;
		(_134617_head).append(_1c164e99a_Buf(&(*(_self_))._field_Buf).slice((*(_self_))._field_declPos));;
		{
			_1c164ec53_SetBuf(&(*(_self_))._field_Buf, _134617_head);
		};
	};
}



inline void _1ba9e63a8_Serialize(jule::Ptr<_1ba9d9555_ObjectCoder> _self_) {
	_1ba9e61aa_serializeHead(_self_);
	_1ba9e5eac_end(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1ba9d9555_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Buf:" << _Src._field_Buf << ", ";
	_Stream << "resultDecls:" << _Src._field_resultDecls << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "traitCastMap:" << _Src._field_traitCastMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "tc:" << _Src._field_tc << ", ";
	_Stream << "headPos:" << _Src._field_headPos << ", ";
	_Stream << "declPos:" << _Src._field_declPos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ad37d90c_ObjectDeadCode> static__1ad3ad893_new(jule::Ptr<_1ad2253b9_IR>* _3424_ir) {
	return jule::new_ptr<_1ad37d90c_ObjectDeadCode>(_1ad37d90c_ObjectDeadCode{._field_ir=(*(_3424_ir))});;
}



inline jule::Bool _1bd823248_isLive(jule::Ptr<_1ad37d90c_ObjectDeadCode> _self_, jule::Ptr<_1ac727548_Trait>* _4030_t) {
	jule::Slice<jule::Ptr<_1ac727548_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1bd825019:;
			{
				_4117_live=(*(_self_))._field_live._field_traits;
			}
		}
		_match_end_1bd824d1b:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd824bc8:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1bd824bc8:;
			++it;
			_5213_i++;
			goto _iter_begin_1bd824bc8;
		}
		_iter_end_1bd824bc8:;
	};
	return false;;
}

inline jule::Bool _1bd828cba_isLive(jule::Ptr<_1ad37d90c_ObjectDeadCode> _self_, jule::Ptr<_1ac717170_FnIns>* _4030_t) {
	jule::Slice<jule::Ptr<_1ac717170_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1bd82a89e:;
			{
				_4117_live=(*(_self_))._field_live._field_fns;
			}
		}
		_match_end_1bd82a7e4:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd82ad66:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1bd82ad66:;
			++it;
			_5213_i++;
			goto _iter_begin_1bd82ad66;
		}
		_iter_end_1bd82ad66:;
	};
	return false;;
}

inline jule::Bool _1bd82eaa1_isLive(jule::Ptr<_1ad37d90c_ObjectDeadCode> _self_, jule::Ptr<_1ac702105_StructIns>* _4030_t) {
	jule::Slice<jule::Ptr<_1ac702105_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1bd834611:;
			{
				_4117_live=(*(_self_))._field_live._field_structs;
			}
		}
		_match_end_1bd834479:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd835007:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1bd835007:;
			++it;
			_5213_i++;
			goto _iter_begin_1bd835007;
		}
		_iter_end_1bd835007:;
	};
	return false;;
}

inline jule::Bool _1bd836e2c_isLive(jule::Ptr<_1ad37d90c_ObjectDeadCode> _self_, jule::Ptr<_1ac7bb015_Var>* _4030_t) {
	jule::Slice<jule::Ptr<_1ac7bb015_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1bd838acc:;
			{
				_4117_live=(*(_self_))._field_live._field_vars;
			}
		}
		_match_end_1bd8389ab:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd839061:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1bd839061:;
			++it;
			_5213_i++;
			goto _iter_begin_1bd839061;
		}
		_iter_end_1bd839061:;
	};
	return false;;
}



inline void _1bd823655_pushLive(jule::Ptr<_1ad37d90c_ObjectDeadCode> _self_, jule::Ptr<_1ac727548_Trait> _6035_t) {
	{
		
{
			_case_begin_1bd8271d6:;
			{
				{ jule::Slice<jule::Ptr<_1ac727548_Trait>> &__jule_push_dest = (*(_self_))._field_live._field_traits; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1bd826ec7:;
	};
}

inline void _1bd829172_pushLive(jule::Ptr<_1ad37d90c_ObjectDeadCode> _self_, jule::Ptr<_1ac717170_FnIns> _6035_t) {
	{
		
{
			_case_begin_1bd82d1dc:;
			{
				{ jule::Slice<jule::Ptr<_1ac717170_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1bd82d0bb:;
	};
}

inline void _1bd8301ab_pushLive(jule::Ptr<_1ad37d90c_ObjectDeadCode> _self_, jule::Ptr<_1ac702105_StructIns> _6035_t) {
	{
		
{
			_case_begin_1bd831960:;
			{
				{ jule::Slice<jule::Ptr<_1ac702105_StructIns>> &__jule_push_dest = (*(_self_))._field_live._field_structs; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1bd8317c8:;
	};
}

inline void _1bd837339_pushLive(jule::Ptr<_1ad37d90c_ObjectDeadCode> _self_, jule::Ptr<_1ac7bb015_Var> _6035_t) {
	{
		
{
			_case_begin_1bd83b11d:;
			{
				{ jule::Slice<jule::Ptr<_1ac7bb015_Var>> &__jule_push_dest = (*(_self_))._field_live._field_vars; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1bd83b063:;
	};
}



inline void _1ad3ae245_setReferencesAsLive(jule::Ptr<_1ad37d90c_ObjectDeadCode> _self_, jule::Ptr<_1ac71a33d_ReferenceStack>* _7344_rs) {
	if (((*(_7344_rs)) == nullptr)) {
		return;;
	};
	jule::I64 _7713_i = 0LL;;
	for (; (_7713_i < _1ac71aa36_Len((*(_7344_rs)).ptr())); (_7713_i)++) {
		{
			jule::Any _7917_ref = _1ac71ad77_At((*(_7344_rs)).ptr(), _7713_i);;
			{
				auto &_match_expr{ _7917_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_1bd821eb1:;
					{
						jule::Ptr<_1ac727548_Trait> _8221_t = _7917_ref.cast_ptr<_1ac727548_Trait>(&__jule_any_type10);;
						if (_1bd823248_isLive(_self_, &(_8221_t))) {
							goto _iter_next_1bd821202;
						};
						_1bd823655_pushLive(_self_, _8221_t);
						{
							auto expr = &((*(_8221_t))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1bd822bc6:;
							if (it != expr_end) {
								jule::Ptr<_1ac71426b_Fn> _8729_ins = *it;
								{
									{
										auto expr = &((*(_8729_ins))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1bd823e5d:;
										if (it != expr_end) {
											jule::Ptr<_1ac717170_FnIns> _8833_mins = *it;
											{
												if (_1bd828cba_isLive(_self_, &(_8833_mins))) {
													goto _iter_next_1bd823e5d;
												};
												_1bd829172_pushLive(_self_, _8833_mins);
												_1ad3ae245_setReferencesAsLive(_self_, &((*(_8833_mins))._field_Refers));
											}
											_iter_next_1bd823e5d:;
											++it;
											goto _iter_begin_1bd823e5d;
										}
										_iter_end_1bd823e5d:;
									};
								}
								_iter_next_1bd822bc6:;
								++it;
								goto _iter_begin_1bd822bc6;
							}
							_iter_end_1bd822bc6:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1bd822027:;
					{
						jule::Ptr<_1ac717170_FnIns> _9721_f = _7917_ref.cast_ptr<_1ac717170_FnIns>(&__jule_any_type7);;
						if (_1bd828cba_isLive(_self_, &(_9721_f))) {
							goto _match_end_1bd821873;
						};
						if ((((*(_9721_f))._field_Owner != nullptr) && (!((*((*(_9721_f))._field_Decl))._field_Statically)))) {
							if ((!(_1bd82eaa1_isLive(_self_, &((*(_9721_f))._field_Owner))))) {
								_1bd8301ab_pushLive(_self_, (*(_9721_f))._field_Owner);
								_1ad3ae245_setReferencesAsLive(_self_, &((*((*(_9721_f))._field_Owner))._field_Refers));
							};
						};
						_1bd829172_pushLive(_self_, _9721_f);
						_1ad3ae245_setReferencesAsLive(_self_, &((*(_9721_f))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_1bd82208d:;
					{
						jule::Ptr<_1ac7bb015_Var> _11021_v = _7917_ref.cast_ptr<_1ac7bb015_Var>(&__jule_any_type8);;
						if (_1bd836e2c_isLive(_self_, &(_11021_v))) {
							goto _match_end_1bd821873;
						};
						_1bd837339_pushLive(_self_, _11021_v);
						_1ad3ae245_setReferencesAsLive(_self_, &((*(_11021_v))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_1bd822104:;
					{
						jule::Ptr<_1ac702105_StructIns> _11721_s = _7917_ref.cast_ptr<_1ac702105_StructIns>(&__jule_any_type9);;
						if (_1bd82eaa1_isLive(_self_, &(_11721_s))) {
							goto _match_end_1bd821873;
						};
						_1bd8301ab_pushLive(_self_, _11721_s);
						_1ad3ae245_setReferencesAsLive(_self_, &((*(_11721_s))._field_Refers));
						{
							auto expr = &((*(_11721_s))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1bd83c949:;
							if (it != expr_end) {
								jule::Ptr<_1ac71426b_Fn> _12329_m = *it;
								{
									{
										auto expr = &((*(_12329_m))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1bd83e110:;
										if (it != expr_end) {
											jule::Ptr<_1ac717170_FnIns> _12433_ins = *it;
											{
												if (_1bd828cba_isLive(_self_, &(_12433_ins))) {
													goto _iter_next_1bd83e110;
												};
												if (_1ad3b1e18_isTraitMethod(&(_11721_s), &(_12433_ins))) {
													_1bd829172_pushLive(_self_, _12433_ins);
													_1ad3ae245_setReferencesAsLive(_self_, &((*(_12433_ins))._field_Refers));
												};
											}
											_iter_next_1bd83e110:;
											++it;
											goto _iter_begin_1bd83e110;
										}
										_iter_end_1bd83e110:;
									};
								}
								_iter_next_1bd83c949:;
								++it;
								goto _iter_begin_1bd83c949;
							}
							_iter_end_1bd83c949:;
						};
					}
				}
				_match_end_1bd821873:;
			};
		}
	_iter_next_1bd821202:;
	}
	_iter_end_1bd821202:;;
}



inline void _1ad3ae4ed_inits(jule::Ptr<_1ad37d90c_ObjectDeadCode> _self_, jule::Ptr<_1ac77a832_Package>* _14130_pkg) {
	{
		auto expr = &((*((*(_14130_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd83647b:;
		if (it != expr_end) {
			jule::Ptr<_1ac81e013_SymbolTable> _14221_file = *it;
			{
				{
					auto expr = &((*(_14221_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd83e95c:;
					if (it != expr_end) {
						jule::Ptr<_1ac71426b_Fn> _14325_f = *it;
						{
							if ((*(_14325_f))._field_Ident.equal("init", 4)) {
								jule::Ptr<_1ac717170_FnIns> _14525_ins = (*(_14325_f))._field_Instances[0LL];;
								{ jule::Slice<jule::Ptr<_1ac717170_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_14525_ins); };
								_1ad3ae245_setReferencesAsLive(_self_, &((*(_14525_ins))._field_Refers));
							};
						}
						_iter_next_1bd83e95c:;
						++it;
						goto _iter_begin_1bd83e95c;
					}
					_iter_end_1bd83e95c:;
				};
			}
			_iter_next_1bd83647b:;
			++it;
			goto _iter_begin_1bd83647b;
		}
		_iter_end_1bd83647b:;
	};
}



inline void _1ad3ae7a6_collectLivePackage(jule::Ptr<_1ad37d90c_ObjectDeadCode> _self_, jule::Ptr<_1ac77a832_Package>* _15343_pkg) {
	_1ad3ae4ed_inits(_self_, _15343_pkg);
	if (_1da0b7361_Test) {
		{
			auto expr = &((*((*(_15343_pkg))))._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd8438ea:;
			if (it != expr_end) {
				jule::Ptr<_1ac81e013_SymbolTable> _15925_file = *it;
				{
					{
						auto expr = &((*(_15925_file))._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bd844346:;
						if (it != expr_end) {
							jule::Ptr<_1ac71426b_Fn> _16029_f = *it;
							{
								if (_1ad3b1a50_hasDirective(&((*(_16029_f))._field_Directives), jule::Str::lit("test", 4))) {
									jule::Ptr<_1ac717170_FnIns> _16229_ins = (*(_16029_f))._field_Instances[0LL];;
									{ jule::Slice<jule::Ptr<_1ac717170_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_16229_ins); };
									_1ad3ae245_setReferencesAsLive(_self_, &((*(_16229_ins))._field_Refers));
								};
							}
							_iter_next_1bd844346:;
							++it;
							goto _iter_begin_1bd844346;
						}
						_iter_end_1bd844346:;
					};
				}
				_iter_next_1bd8438ea:;
				++it;
				goto _iter_begin_1bd8438ea;
			}
			_iter_end_1bd8438ea:;
		};
	};
}



inline void _1ad3ae9a4_collectLive(jule::Ptr<_1ad37d90c_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd845028:;
		if (it != expr_end) {
			jule::Ptr<_1ac77790b_ImportInfo> _17221_used = *it;
			{
				if ((!((*(_17221_used))._field_Binded))) {
					_1ad3ae7a6_collectLivePackage(_self_, &((*(_17221_used))._field_Package));
				};
			}
			_iter_next_1bd845028:;
			++it;
			goto _iter_begin_1bd845028;
		}
		_iter_end_1bd845028:;
	};
	_1ad3ae7a6_collectLivePackage(_self_, &((*((*(_self_))._field_ir))._field_Main));
	jule::Ptr<_1ac71426b_Fn> _18013_main = _1ac77bdb6_FindFn((*((*(_self_))._field_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);;
	jule::Ptr<_1ac717170_FnIns> _18113_ins = (*(_18013_main))._field_Instances[0LL];;
	{ jule::Slice<jule::Ptr<_1ac717170_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_18113_ins); };
	_1ad3ae245_setReferencesAsLive(_self_, &((*(_18113_ins))._field_Refers));
}



inline void _1ad3aec5c_removeDeadGlobals(jule::Ptr<_1ad37d90c_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ac7bb015_Var>>* _18642_vars) {
	jule::I64 _18713_i = 0LL;;
	while ((_18713_i < (*(_18642_vars)).len())) {
		{
			jule::Ptr<_1ac7bb015_Var> _18913_v = (*(_18642_vars))[_18713_i];;
			if (_1bd836e2c_isLive(_self_, &(_18913_v))) {
				(_18713_i)++;
				goto _iter_next_1bd84a6e3;
			};
			(*(_18642_vars))=jule::append((*(_18642_vars)).slice(0LL, _18713_i),(*(_18642_vars)).slice((_18713_i + 1LL)));
		}
	_iter_next_1bd84a6e3:;
	}
	_iter_end_1bd84a6e3:;;
}



inline void _1ad3b0015_removeDeadFns(jule::Ptr<_1ad37d90c_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ac71426b_Fn>>* _19838_funcs) {
	jule::I64 _19913_i = 0LL;;
	while ((_19913_i < (*(_19838_funcs)).len())) {
		{
			jule::Ptr<_1ac71426b_Fn> _20117_f = (*(_19838_funcs))[_19913_i];;
			jule::I64 _20217_j = 0LL;;
			while ((_20217_j < (*(_20117_f))._field_Instances.len())) {
				{
					jule::Ptr<_1ac717170_FnIns> _20417_ins = (*(_20117_f))._field_Instances[_20217_j];;
					if (_1bd828cba_isLive(_self_, &(_20417_ins))) {
						(_20217_j)++;
						goto _iter_next_1bd84d0db;
					};
					(*(_20117_f))._field_Instances=jule::append((*(_20117_f))._field_Instances.slice(0LL, _20217_j),(*(_20117_f))._field_Instances.slice((_20217_j + 1LL)));
				}
			_iter_next_1bd84d0db:;
			}
			_iter_end_1bd84d0db:;;
			if (((*(_20117_f))._field_Instances.len() == 0LL)) {
				(*(_19838_funcs))=jule::append((*(_19838_funcs)).slice(0LL, _19913_i),(*(_19838_funcs)).slice((_19913_i + 1LL)));
				goto _iter_next_1bd84c2e9;
			};
			(_19913_i)++;
		}
	_iter_next_1bd84c2e9:;
	}
	_iter_end_1bd84c2e9:;;
}



inline void _1ad3b02bd_removeDeadStructs(jule::Ptr<_1ad37d90c_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ac6ee377_Struct>>* _21942_structs) {
	jule::I64 _22013_i = 0LL;;
	while ((_22013_i < (*(_21942_structs)).len())) {
		{
			jule::Ptr<_1ac6ee377_Struct> _22217_s = (*(_21942_structs))[_22013_i];;
			jule::I64 _22317_j = 0LL;;
			while ((_22317_j < (*(_22217_s))._field_Instances.len())) {
				{
					jule::Ptr<_1ac702105_StructIns> _22521_ins = (*(_22217_s))._field_Instances[_22317_j];;
					_1ad3b0015_removeDeadFns(_self_, &((*(_22521_ins))._field_Methods));
					if ((((*(_22521_ins))._field_Methods.len() != 0LL) || _1bd82eaa1_isLive(_self_, &(_22521_ins)))) {
						(_22317_j)++;
						goto _iter_next_1bd851d8c;
					};
					(*(_22217_s))._field_Instances=jule::append((*(_22217_s))._field_Instances.slice(0LL, _22317_j),(*(_22217_s))._field_Instances.slice((_22317_j + 1LL)));
				}
			_iter_next_1bd851d8c:;
			}
			_iter_end_1bd851d8c:;;
			if (((*(_22217_s))._field_Instances.len() == 0LL)) {
				(*(_21942_structs))=jule::append((*(_21942_structs)).slice(0LL, _22013_i),(*(_21942_structs)).slice((_22013_i + 1LL)));
				goto _iter_next_1bd851089;
			};
			(_22013_i)++;
		}
	_iter_next_1bd851089:;
	}
	_iter_end_1bd851089:;;
}



inline void _1ad3b0576_removeDeadTraits(jule::Ptr<_1ad37d90c_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ac727548_Trait>>* _24141_traits) {
	jule::I64 _24213_i = 0LL;;
	while ((_24213_i < (*(_24141_traits)).len())) {
		{
			jule::Ptr<_1ac727548_Trait> _24417_t = (*(_24141_traits))[_24213_i];;
			if ((!(_1bd823248_isLive(_self_, &(_24417_t))))) {
				(*(_24141_traits))=jule::append((*(_24141_traits)).slice(0LL, _24213_i),(*(_24141_traits)).slice((_24213_i + 1LL)));
				goto _iter_next_1bd855896;
			};
			jule::I64 _24917_j = 0LL;;
			while ((_24917_j < (*(_24417_t))._field_Implemented.len())) {
				{
					jule::Ptr<_1ac6ee377_Struct> _25117_s = (*(_24417_t))._field_Implemented[_24917_j];;
					if (((*(_25117_s))._field_Instances.len() > 0LL)) {
						(_24917_j)++;
						goto _iter_next_1bd856226;
					};
					(*(_24417_t))._field_Implemented=jule::append((*(_24417_t))._field_Implemented.slice(0LL, _24917_j),(*(_24417_t))._field_Implemented.slice((_24917_j + 1LL)));
				}
			_iter_next_1bd856226:;
			}
			_iter_end_1bd856226:;;
			(_24213_i)++;
		}
	_iter_next_1bd855896:;
	}
	_iter_end_1bd855896:;;
}



inline void _1ad3b082e_removeDeadsFile(jule::Ptr<_1ad37d90c_ObjectDeadCode> _self_, jule::Ptr<_1ac81e013_SymbolTable>* _26240_file) {
	_1ad3b0015_removeDeadFns(_self_, &((*((*(_26240_file))))._field_Funcs));
	_1ad3b02bd_removeDeadStructs(_self_, &((*((*(_26240_file))))._field_Structs));
	_1ad3b0576_removeDeadTraits(_self_, &((*((*(_26240_file))))._field_Traits));
	_1ad3aec5c_removeDeadGlobals(_self_, &((*((*(_26240_file))))._field_Vars));
}



inline void _1ad3b0ad7_removeDeadsPackage(jule::Ptr<_1ad37d90c_ObjectDeadCode> _self_, jule::Ptr<_1ac77a832_Package>* _26943_pkg) {
	{
		auto expr = &((*((*(_26943_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd85ae62:;
		if (it != expr_end) {
			jule::Ptr<_1ac81e013_SymbolTable> _27021_file = *it;
			{
				_1ad3b082e_removeDeadsFile(_self_, &(_27021_file));
			}
			_iter_next_1bd85ae62:;
			++it;
			goto _iter_begin_1bd85ae62;
		}
		_iter_end_1bd85ae62:;
	};
}



inline void _1ad3b0cd5_removeDeads(jule::Ptr<_1ad37d90c_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd85b814:;
		if (it != expr_end) {
			jule::Ptr<_1ac77790b_ImportInfo> _27621_used = *it;
			{
				if ((!((*(_27621_used))._field_Binded))) {
					_1ad3b0ad7_removeDeadsPackage(_self_, &((*(_27621_used))._field_Package));
				};
			}
			_iter_next_1bd85b814:;
			++it;
			goto _iter_begin_1bd85b814;
		}
		_iter_end_1bd85b814:;
	};
	_1ad3b0ad7_removeDeadsPackage(_self_, &((*((*(_self_))._field_ir))._field_Main));
}



inline void _1ad3b0ed3_elimanate(jule::Ptr<_1ad37d90c_ObjectDeadCode> _self_) {
	_1ad3ae9a4_collectLive(_self_);
	_1ad3b0cd5_removeDeads(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1ad37d90c_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_1ad2253b9_IR__jule_tuple_s_1a756d63b_Log static__1ad22582b_Build(jule::Str _2721_path, jule::I64 _2732_flags) {
	__jule_tuple_x_1ad2253b9_IR__jule_tuple_s_1a756d63b_Log __jule_func_result;
	jule::Ptr<_1ad222905_JuleImporter> _2813_importer = static__1ad222d01_New(_1ad227311_buildCompileInfo());;
	jule::Slice<jule::Ptr<_1ac6c67a0_Ast>> _2913_files;;
	jule::Slice<_1a756d63b_Log> _2924_logs;;
	({
		__jule_tuple_sx_1ac6c67a0_Ast__jule_tuple_s_1a756d63b_Log __jule_assign_result = _1ad2242db_ImportPackage(_2813_importer.ptr(), _2721_path, true);
		_2913_files = __jule_assign_result.__jule_result_arg0;
		_2924_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2924_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2924_logs;
		return __jule_func_result;;
	};
	jule::Str _339_root = _2721_path;;
	if ((_2913_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac77a832_Package> _3913_pkg;;
	({
		__jule_tuple_x_1ac77a832_Package__jule_tuple_s_1a756d63b_Log __jule_assign_result = _1ac87ac0c_AnalyzePackage(_2913_files, jule::Trait<_1ac7749e6_Importer>(_2813_importer, 0), _2732_flags);
		_3913_pkg = __jule_assign_result.__jule_result_arg0;
		_2924_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2924_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2924_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1ad2253b9_IR> _4413_ir = jule::new_ptr<_1ad2253b9_IR>(_1ad2253b9_IR{._field_Root=_339_root, ._field_Main=_3913_pkg, ._field_Used=_1ad223087_AllPackages(_2813_importer.ptr()), });;
	(*(_4413_ir))._field_Passes=_1ad227102_getAllUniquePasses(&((*(_4413_ir))._field_Main), (*(_4413_ir))._field_Used);
	__jule_func_result.__jule_result_arg0 = _4413_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1ad225d15_appendStructs(_1ad2253b9_IR* _self_, jule::Ptr<_1ac77a832_Package>* _5633_p, jule::Slice<jule::Ptr<_1ac6ee377_Struct>>* _5657_buffer) {
	{
		auto expr = &((*((*(_5633_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd7d8dbd:;
		if (it != expr_end) {
			jule::Ptr<_1ac81e013_SymbolTable> _5721_f = *it;
			{
				{
					auto expr = &((*(_5721_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd7d9819:;
					if (it != expr_end) {
						jule::Ptr<_1ac6ee377_Struct> _5825_s = *it;
						{
							if ((!((*(_5825_s))._field_Binded))) {
								{ jule::Slice<jule::Ptr<_1ac6ee377_Struct>> &__jule_push_dest = (*(_5657_buffer)); __jule_push_dest.push(_5825_s); };
							};
						}
						_iter_next_1bd7d9819:;
						++it;
						goto _iter_begin_1bd7d9819;
					}
					_iter_end_1bd7d9819:;
				};
			}
			_iter_next_1bd7d8dbd:;
			++it;
			goto _iter_begin_1bd7d8dbd;
		}
		_iter_end_1bd7d8dbd:;
	};
}



inline jule::Slice<jule::Ptr<_1ac6ee377_Struct>> _1ad22609b_GetAllStructures(_1ad2253b9_IR* _self_) {
	jule::Slice<jule::Ptr<_1ac6ee377_Struct>> _6917_buffer = nullptr;;
	_1ad225d15_appendStructs(_self_, &((*(_self_))._field_Main), &(_6917_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd7da82b:;
		if (it != expr_end) {
			jule::Ptr<_1ac77790b_ImportInfo> _7121_u = *it;
			{
				if ((!((*(_7121_u))._field_Binded))) {
					_1ad225d15_appendStructs(_self_, &((*(_7121_u))._field_Package), &(_6917_buffer));
				};
			}
			_iter_next_1bd7da82b:;
			++it;
			goto _iter_begin_1bd7da82b;
		}
		_iter_end_1bd7da82b:;
	};
	return _6917_buffer;;
}



inline void _1ad22640e_appendGlobals(_1ad2253b9_IR* _self_, jule::Ptr<_1ac77a832_Package>* _7933_p, jule::Slice<jule::Ptr<_1ac7bb015_Var>>* _7957_buffer) {
	{
		auto expr = &((*((*(_7933_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd7dc19b:;
		if (it != expr_end) {
			jule::Ptr<_1ac81e013_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &((*(_8021_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd7dcae7:;
					if (it != expr_end) {
						jule::Ptr<_1ac7bb015_Var> _8125_v = *it;
						{
							if (((((*(_8125_v))._field_Token != nullptr) && (!((*(_8125_v))._field_Binded))) && (!((*(_8125_v))._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_1ac7bb015_Var>> &__jule_push_dest = (*(_7957_buffer)); __jule_push_dest.push(_8125_v); };
							};
						}
						_iter_next_1bd7dcae7:;
						++it;
						goto _iter_begin_1bd7dcae7;
					}
					_iter_end_1bd7dcae7:;
				};
			}
			_iter_next_1bd7dc19b:;
			++it;
			goto _iter_begin_1bd7dc19b;
		}
		_iter_end_1bd7dc19b:;
	};
}



inline jule::Slice<jule::Ptr<_1ac7bb015_Var>> _1ad226695_GetAllGlobals(_1ad2253b9_IR* _self_) {
	jule::Slice<jule::Ptr<_1ac7bb015_Var>> _9217_buffer = nullptr;;
	_1ad22640e_appendGlobals(_self_, &((*(_self_))._field_Main), &(_9217_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd7dd103:;
		if (it != expr_end) {
			jule::Ptr<_1ac77790b_ImportInfo> _9421_u = *it;
			{
				if ((!((*(_9421_u))._field_Binded))) {
					_1ad22640e_appendGlobals(_self_, &((*(_9421_u))._field_Package), &(_9217_buffer));
				};
			}
			_iter_next_1bd7dd103:;
			++it;
			goto _iter_begin_1bd7dd103;
		}
		_iter_end_1bd7dd103:;
	};
	return _9217_buffer;;
}



inline void _1ad226893_Order(_1ad2253b9_IR* _self_) {
	(*(_self_))._field_Ordered._field_Structs=_1ad22609b_GetAllStructures(_self_);
	(*(_self_))._field_Ordered._field_Globals=_1ad226695_GetAllGlobals(_self_);
	static__1ad228774_orderStructures(&((*(_self_))._field_Ordered._field_Structs));
	static__1ad2289a5_orderVars(&((*(_self_))._field_Ordered._field_Globals));
}





std::ostream &operator<<(std::ostream &_Stream, _1ad2253b9_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ac702479_Str(_1ac702105_StructIns* _self_) {
	_1c164cc40_StrBuilder _23913_kind = static__1c164d191_New(32LL);;
	_1c164d702_WriteStr(&_23913_kind, (*((*(_self_))._field_Decl))._field_Ident);
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		_1c164d9aa_WriteByte(&_23913_kind, '[');
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bc3d9a7a:;
			if (it != expr_end) {
				jule::I64 _24317_i = it - expr->begin();
				jule::Ptr<_1ac85814b_InsGeneric> *_24320_g = it;
				{
					_1c164d702_WriteStr(&_23913_kind, _1ac859dea_Str((*((*(_24320_g))))._field_Kind.ptr()));
					if ((_24317_i < ((*(_self_))._field_Generics.len() - 1LL))) {
						_1c164d9aa_WriteByte(&_23913_kind, ',');
					};
				}
				_iter_next_1bc3d9a7a:;
				++it;
				_24317_i++;
				goto _iter_begin_1bc3d9a7a;
			}
			_iter_end_1bc3d9a7a:;
		};
		_1c164d9aa_WriteByte(&_23913_kind, ']');
	};
	return _1c164dee9_Str(&_23913_kind);;
}



inline jule::Bool _1ac7027ba_Equal(jule::Ptr<_1ac702105_StructIns> _self_, jule::Ptr<_1ac859a32_TypeKind> _25521_other) {
	jule::Ptr<_1ac702105_StructIns> _2569_s = _1ac85d706_Struct(_25521_other.ptr());;
	if ((_2569_s == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Decl != (*(_2569_s))._field_Decl)) {
		return false;;
	};
	if (((*(_self_))._field_Generics.len() != (*(_2569_s))._field_Generics.len())) {
		return false;;
	};
	jule::I64 _26913_i = 0LL;;
	for (; (_26913_i < (*(_self_))._field_Generics.len()); (_26913_i)++) {
		{
			if ((!(_1ac85a23b_Equal((*((*(_self_))._field_Generics[_26913_i]))._field_Kind, (*((*(_2569_s))._field_Generics[_26913_i]))._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1bc3ddc8d:;
	}
	_iter_end_1bc3ddc8d:;;
	return true;;
}



inline jule::Bool _1ac702c71_Same(_1ac702105_StructIns* _self_, jule::Ptr<_1ac702105_StructIns> _28319_s) {
	if ((((*(_self_))._field_Decl != (*(_28319_s))._field_Decl) || ((*(_28319_s))._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc3e1741:;
		if (it != expr_end) {
			jule::I64 _28713_i = it - expr->begin();
			jule::Ptr<_1ac85814b_InsGeneric> *_28716_g = it;
			{
				jule::Ptr<_1ac85814b_InsGeneric> _28813_g2 = (*(_28319_s))._field_Generics[_28713_i];;
				if ((((*((*((*(_28716_g))))._field_Kind))._field_BindIdent != (*((*(_28813_g2))._field_Kind))._field_BindIdent) || (!(_1ac85a23b_Equal((*((*(_28716_g))))._field_Kind, (*(_28813_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1bc3e1741:;
			++it;
			_28713_i++;
			goto _iter_begin_1bc3e1741;
		}
		_iter_end_1bc3e1741:;
	};
	return true;;
}



inline jule::Ptr<_1ac71426b_Fn> _1ac70316c_FindMethod(_1ac702105_StructIns* _self_, jule::Str _29829_ident, jule::Bool _29841_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc3e429e:;
		if (it != expr_end) {
			jule::Ptr<_1ac71426b_Fn> _29921_f = *it;
			{
				if ((((*(_29921_f))._field_Statically == _29841_statically) && ((*(_29921_f))._field_Ident == _29829_ident))) {
					return _29921_f;;
				};
			}
			_iter_next_1bc3e429e:;
			++it;
			goto _iter_begin_1bc3e429e;
		}
		_iter_end_1bc3e429e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac701555_FieldIns> _1ac7034ad_FindField(_1ac702105_StructIns* _self_, jule::Str _30928_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc3e5602:;
		if (it != expr_end) {
			jule::Ptr<_1ac701555_FieldIns> _31021_f = *it;
			{
				if (((*((*(_31021_f))._field_Decl))._field_Ident == _30928_ident)) {
					return _31021_f;;
				};
			}
			_iter_next_1bc3e5602:;
			++it;
			goto _iter_begin_1bc3e5602;
		}
		_iter_end_1bc3e5602:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac7bb015_Var> _1ac7037ee_FindStatic(_1ac702105_StructIns* _self_, jule::Str _32029_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc3e668b:;
		if (it != expr_end) {
			jule::Ptr<_1ac7bb015_Var> _32121_v = *it;
			{
				if (((*(_32121_v))._field_Ident == _32029_ident)) {
					return _32121_v;;
				};
			}
			_iter_next_1bc3e668b:;
			++it;
			goto _iter_begin_1bc3e668b;
		}
		_iter_end_1bc3e668b:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac702105_StructIns _Src) {
	_Stream << _1ac702479_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1a7630665_Cmd> static__1a7630a83_New(jule::Str _2619_path) {
	return jule::new_ptr<_1a7630665_Cmd>(_1a7630665_Cmd{._field_path=_2619_path, });;
}



inline jule::VoidExceptional _1a7630c81_Spawn(_1a7630665_Cmd* _self_) {
	({
		auto except = _1a7634c74_spawn(_self_);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _1a7631215_Wait(_1a7630665_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(({
		auto except = _1a7635208_wait(_self_);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I64>(except.error);
		} 0;});
	})));;
}



inline jule::VoidExceptional _1a7634c74_spawn(_1a7630665_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess != nullptr)) {
		jule::panic(jule::Str::lit("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_windows.jule:43:13"));;
	};
	STARTUPINFOW _4513_startupInfo = (STARTUPINFOW){};;
	PROCESS_INFORMATION _4613_processInfo = (PROCESS_INFORMATION){};;
	{
		ZeroMemory((&(_4513_startupInfo)), static_cast<jule::U64>(sizeof(_4513_startupInfo)));
		ZeroMemory((&(_4613_processInfo)), static_cast<jule::U64>(sizeof(_4613_processInfo)));
	};
	_4513_startupInfo.cb=static_cast<jule::U64>(sizeof(_4513_startupInfo));
	jule::Slice<jule::Str> _5213_args = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len()));;
	_5213_args[0LL]=(*(_self_))._field_path;
	(_5213_args).append((*(_self_))._field_Args);;
	jule::Slice<jule::U16> _559_argv = _1d9e0d98d_UTF16FromStr(_1a7635879_makeCmdLine(_5213_args));;
	jule::Slice<jule::U16> _569_env = ({
		auto except = _1a7635c53_createEnvBlock((*(_self_))._field_Env);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional(except.error);
		} jule::Slice<jule::U16>(nullptr);});
	});;
	jule::U16* _5713_envp = (&(_569_env[0LL]));;
	if (((*(_self_))._field_Env.len() == 0LL)) {
		_5713_envp=nullptr;
	};
	;
	{
		if ((CreateProcessW(nullptr, ((wchar_t*)((&(_559_argv[0LL])))), nullptr, nullptr, 0LL, 1024LLU, _5713_envp, nullptr, (&(_4513_startupInfo)), (&(_4613_processInfo))) == 0LL)) {
			return jule::VoidExceptional(jule::Any(_1a7636ea7_getLastProcessError(), &__jule_any_type0));
		};
	};
	(*(_self_))._field_attrs._field_hProcess=_4613_processInfo.hProcess;
	(*(_self_))._field_attrs._field_hThread=_4613_processInfo.hThread;
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _1a7635208_wait(_1a7630665_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess == nullptr)) {
		jule::panic(jule::Str::lit("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_windows.jule:86:13"));;
	};
	{
		WaitForSingleObject((*(_self_))._field_attrs._field_hProcess, INFINITE);
	};
	__jule_unsigned_long _8913_exitCode = static_cast<__jule_unsigned_long>(4294967295LLU);;
	{
		GetExitCodeProcess((*(_self_))._field_attrs._field_hProcess, (&(_8913_exitCode)));
		_1d9e3848a_CloseHandle(static_cast<jule::Uintptr>(((jule::Uintptr)((*(_self_))._field_attrs._field_hProcess))));
		_1d9e3848a_CloseHandle(static_cast<jule::Uintptr>(((jule::Uintptr)((*(_self_))._field_attrs._field_hThread))));
	};
	(*(_self_))._field_attrs._field_hProcess=nullptr;
	(*(_self_))._field_attrs._field_hThread=nullptr;
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(static_cast<jule::I64>(_8913_exitCode)));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7630665_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "attrs:" << _Src._field_attrs << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}



inline jule::I32 _1d9e0ca25_DecodeRune(jule::I32 _6815_r1, jule::I32 _6825_r2) {
	if (((((55296LL <= _6815_r1) && (_6815_r1 < 56320LL)) && (56320LL <= _6825_r2)) && (_6825_r2 < 57344LL))) {
		return static_cast<jule::I32>(((((_6815_r1 - 55296LL) << 10LL) | (_6825_r2 - 56320LL)) + 65536LL));;
	};
	return 65533LL;;
}



inline __jule_tuple_i32__jule_tuple_i32 _1d9e0ccde_EncodeRune(jule::I32 _7819_r) {
	__jule_tuple_i32__jule_tuple_i32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((_7819_r < 65536LL) || (_7819_r > 1114111LL))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 65533LL;
		return __jule_func_result;;
	};
	_7819_r-=65536LL;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((55296LL + ((_7819_r >> 10LL) & 1023LL)));
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>((56320LL + (_7819_r & 1023LL)));
	return __jule_func_result;;
}



inline jule::Slice<jule::U16> _1d9e0d130_Encode(jule::Slice<jule::I32> _8711_s) {
	jule::I64 _889_n = _8711_s.len();;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baa80992:;
		if (it != expr_end) {
			jule::I32 *_8912_v = it;
			{
				if (((*(_8912_v)) >= 65536LL)) {
					(_889_n)++;
				};
			}
			_iter_next_1baa80992:;
			++it;
			goto _iter_begin_1baa80992;
		}
		_iter_end_1baa80992:;
	};
	jule::Slice<jule::U16> _959_a = jule::Slice<jule::U16>::alloc(_889_n, _889_n, 0);;
	_889_n=0LL;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baa7e3db:;
		if (it != expr_end) {
			jule::I32 *_9712_v = it;
			{
				{
					
					if (((0LL <= (*(_9712_v))) && ((*(_9712_v)) < 55296LL)) || ((57344LL <= (*(_9712_v))) && ((*(_9712_v)) < 65536LL))) {
						_case_begin_1baa82884:;
						{
							_959_a[_889_n]=static_cast<jule::U16>(static_cast<jule::U16>((*(_9712_v))));
							(_889_n)++;
						}
					}
					else if (((65536LL <= (*(_9712_v))) && ((*(_9712_v)) <= 1114111LL))) {
						_case_begin_1baa82796:;
						{
							jule::I32 _10513_r1 = 0;;
							jule::I32 _10517_r2 = 0;;
							({
								__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _1d9e0ccde_EncodeRune((*(_9712_v)));
								_10513_r1 = __jule_assign_result.__jule_result_arg0;
								_10517_r2 = __jule_assign_result.__jule_result_arg1;
							});
							_959_a[_889_n]=static_cast<jule::U16>(static_cast<jule::U16>(_10513_r1));
							_959_a[(_889_n + 1LL)]=static_cast<jule::U16>(static_cast<jule::U16>(_10517_r2));
							_889_n+=2LL;
						}
					}
					else {
						_case_begin_1baa82400:;
						{
							_959_a[_889_n]=static_cast<jule::U16>(65533LLU);
							(_889_n)++;
						}
					}
					_match_end_1baa82334:;
				};
			}
			_iter_next_1baa7e3db:;
			++it;
			goto _iter_begin_1baa7e3db;
		}
		_iter_end_1baa7e3db:;
	};
	return _959_a.slice(0LL, _889_n);;
}



inline jule::Slice<jule::I32> _1d9e0d3e9_Decode(jule::Slice<jule::U16> _11911_s) {
	jule::Slice<jule::I32> _1209_a = jule::Slice<jule::I32>::alloc(_11911_s.len(), _11911_s.len(), 0);;
	jule::I64 _1219_n = 0LL;;
	jule::I64 _1229_i = 0LL;;
	for (; (_1229_i < _11911_s.len()); (_1229_i)++) {
		{
			jule::U16 _1249_r = _11911_s[_1229_i];;
			{
				
				if ((_1249_r < 55296LLU) || (57344LL <= _1249_r)) {
					_case_begin_1baa86e71:;
					{
						_1209_a[_1219_n]=static_cast<jule::I32>(static_cast<jule::I32>(_1249_r));
					}
				}
				else if (((((_1249_r < 56320LLU) && ((_1229_i + 1LL) < _11911_s.len())) && (56320LL <= _11911_s[(_1229_i + 1LL)])) && (_11911_s[(_1229_i + 1LL)] < 57344LLU))) {
					_case_begin_1baa86beb:;
					{
						_1209_a[_1219_n]=static_cast<jule::I32>(_1d9e0ca25_DecodeRune(static_cast<jule::I32>(static_cast<jule::I32>(_1249_r)), static_cast<jule::I32>(static_cast<jule::I32>(_11911_s[(_1229_i + 1LL)]))));
						(_1229_i)++;
					}
				}
				else {
					_case_begin_1baa86855:;
					{
						_1209_a[_1219_n]=65533LL;
					}
				}
				_match_end_1baa867de:;
			};
			(_1219_n)++;
		}
	_iter_next_1baa85469:;
	}
	_iter_end_1baa85469:;;
	return _1209_a.slice(0LL, _1219_n);;
}



inline jule::Slice<jule::U16> _1d9e0d73a_AppendRune(jule::Slice<jule::U16> _14919_a, jule::I32 _14929_r) {
	{
		
		if (((0LL <= _14929_r) && (_14929_r < 55296LL)) || ((57344LL <= _14929_r) && (_14929_r < 65536LL))) {
			_case_begin_1baa89a12:;
			{
				return jule::append(_14919_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(static_cast<jule::U16>(_14929_r))}));;
			}
		}
		else if (((65536LL <= _14929_r) && (_14929_r <= 1114111LL))) {
			_case_begin_1baa89a89:;
			{
				jule::I32 _1569_r1 = 0;;
				jule::I32 _15613_r2 = 0;;
				({
					__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _1d9e0ccde_EncodeRune(_14929_r);
					_1569_r1 = __jule_assign_result.__jule_result_arg0;
					_15613_r2 = __jule_assign_result.__jule_result_arg1;
				});
				return jule::append(_14919_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(static_cast<jule::U16>(_1569_r1)),static_cast<jule::U16>(static_cast<jule::U16>(_15613_r2))}));;
			}
		}
		_match_end_1baa89913:;
	};
	return jule::append(_14919_a,jule::Slice<jule::U16>::make({65533LLU}));;
}



inline jule::Slice<jule::U16> _1d9e0d98d_UTF16FromStr(jule::Str _1417_s) {
	;
	jule::Slice<jule::I32> _205_runes = static_cast<jule::Slice<jule::I32>>(_1417_s);;
	jule::Slice<jule::U16> _219_buff = jule::Slice<jule::U16>::alloc(0LL, _205_runes.len(), 0);;
	{
		auto expr = &(_205_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baa95666:;
		if (it != expr_end) {
			jule::I32 *_2212_r = it;
			{
				if (((*(_2212_r)) == 0LL)) {
					goto _iter_end_1baa95666;
				};
				_219_buff=_1d9e0d73a_AppendRune(_219_buff, (*(_2212_r)));
			}
			_iter_next_1baa95666:;
			++it;
			goto _iter_begin_1baa95666;
		}
		_iter_end_1baa95666:;
	};
	return _1d9e0d73a_AppendRune(_219_buff, 0LL);;
}



inline jule::Str _1d9e0dc9b_UTF16ToStr(jule::Slice<jule::U16> _3415_s) {
	if ((_3415_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _389_codePage = _3415_s;;
	{
		auto expr = &(_3415_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baa97cc8:;
		if (it != expr_end) {
			jule::I64 _399_i = it - expr->begin();
			jule::U16 *_3912_v = it;
			{
				if (((*(_3912_v)) == 0LLU)) {
					(_389_codePage).mut_slice(0LL, _399_i);;
					goto _iter_end_1baa97cc8;
				};
			}
			_iter_next_1baa97cc8:;
			++it;
			_399_i++;
			goto _iter_begin_1baa97cc8;
		}
		_iter_end_1baa97cc8:;
	};
	return static_cast<jule::Str>(_1d9e0d3e9_Decode(_389_codePage));;
}



inline jule::Str _1d9e0e065_U16PtrToStr(jule::U16* _5023_s) {
	if ((_5023_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _5513_codePage;;
	jule::I64 _569_i = 0LL;;
	for (; ; (_569_i)++) {
		{
			jule::U16 _589_r = _5023_s[_569_i];;
			if ((_589_r == 0LLU)) {
				return static_cast<jule::Str>(_1d9e0d3e9_Decode(_5513_codePage));;
			};
			{ jule::Slice<jule::U16> &__jule_push_dest = _5513_codePage; __jule_push_dest.push(_589_r); };
		}
	_iter_next_1baa98c74:;
	}
	_iter_end_1baa98c74:;;
	return jule::Str();;
}



inline jule::I64 _1dbd20d21_GetLastErrno(void) {
	return errno;;
}



inline jule::Uintptr _1d9e381c1_GetStdHandle(jule::Uintptr _6417_stdh) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(GetStdHandle(_6417_stdh))));;
}



inline jule::Bool _1d9e3848a_CloseHandle(jule::Uintptr _6523_stdh) {
	return CloseHandle(((void*)(_6523_stdh)));;
}



inline jule::I64 _1d9e3880e_Wstat(jule::U16* _6817_path, struct _stat* _6833_stat) {
	return static_cast<jule::I64>(_wstat(((wchar_t*)(_6817_path)), _6833_stat));;
}



inline jule::I64 _1d9e38c3d_Wopen(jule::U16* _7317_path, jule::I64 _7329_flag, jule::I64 _7340_mode) {
	return static_cast<jule::I64>(_wopen(((wchar_t*)((&(_7317_path[0LL])))), _7329_flag, _7340_mode));;
}



inline jule::U32 _1d9e38e4c_GetLastError(void) {
	return static_cast<jule::U32>(GetLastError());;
}



inline jule::U32 _1d9e392c1_GetCurrentDirectory(jule::U32 _8231_bufflen, jule::U16* _8249_buff) {
	return static_cast<jule::U32>(GetCurrentDirectoryW(_8231_bufflen, ((wchar_t*)(_8249_buff))));;
}



inline jule::Bool _1d9e39854_DeleteFile(jule::U16* _9322_path) {
	return DeleteFileW(((wchar_t*)(_9322_path)));;
}



inline jule::Bool _1d9e39b1d_CreateDirectory(jule::U16* _9827_path) {
	return CreateDirectoryW(((wchar_t*)(_9827_path)), nullptr);;
}



inline jule::Bool _1d9e39dd7_RemoveDirectory(jule::U16* _10327_path) {
	return RemoveDirectoryW(((wchar_t*)(_10327_path)));;
}



inline jule::U32 _1d9e3a3c1_GetFullPathName(jule::U16* _10827_path, jule::U32 _10839_bufflen, jule::U16* _1095_buff, jule::U16** _10917_fname) {
	return static_cast<jule::U32>(GetFullPathNameW(((wchar_t*)(_10827_path)), _10839_bufflen, ((wchar_t*)(_1095_buff)), ((wchar_t**)(_10917_fname))));;
}



inline jule::Bool _1d9e3a745_GetConsoleMode(jule::Uintptr _11419_handle, jule::I64* _11440_mode) {
	return GetConsoleMode(((HANDLE)(_11419_handle)), ((DWORD*)(_11440_mode)));;
}



inline jule::Bool _1d9e3ad1c_SetConsoleMode(jule::Uintptr _11919_handle, jule::I64 _11935_mode) {
	return SetConsoleMode(((HANDLE)(_11919_handle)), static_cast<DWORD>(_11935_mode));;
}



inline jule::Bool _1d9e3b3a0_WriteConsole(jule::Uintptr _12424_handle, jule::U16* _12440_buffer, jule::I64 _12454_toWrite, jule::I64* _12510_written, void* _12524_reserved) {
	return WriteConsoleW(((HANDLE)(_12424_handle)), ((void*)(_12440_buffer)), static_cast<DWORD>(_12454_toWrite), ((DWORD*)((*(_12510_written)))), _12524_reserved);;
}



inline jule::Bool _1d9e3b889_ReadConsole(jule::Uintptr _13223_handle, jule::U16* _13243_buffer, jule::I64 _13257_toRead, jule::I64* _13310_readed) {
	return ReadConsoleW(((HANDLE)(_13223_handle)), ((void*)(_13243_buffer)), static_cast<DWORD>(_13257_toRead), ((DWORD*)(_13310_readed)), nullptr);;
}



inline jule::Uintptr _1d9e3be1c_FindFirstFile(jule::U16* _14425_path, WIN32_FIND_DATAW* _14441_data) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(FindFirstFileW(((wchar_t*)(_14425_path)), _14441_data))));;
}



inline jule::I64 _1d9e3c291_FindNextFile(jule::Uintptr _14924_h, WIN32_FIND_DATAW* _14939_data) {
	return static_cast<jule::I64>(FindNextFileW(((HANDLE)(_14924_h)), _14939_data));;
}



inline jule::I64 _1d9e3c55a_FindClose(jule::Uintptr _15414_h) {
	return static_cast<jule::I64>(FindClose(((HANDLE)(_15414_h))));;
}



inline jule::I64 _1d9e3e66c_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n) {
	return static_cast<jule::I64>(read(_2016_handle, _2033_buff, _2048_n));;
}



inline jule::I64 _1d9e3ea13_Close(jule::I64 _2510_handle) {
	return static_cast<jule::I64>(close(_2510_handle));;
}



inline jule::I64 _1d9e3ee42_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n) {
	return static_cast<jule::I64>(write(_2817_handle, _2830_buff, _2845_n));;
}



inline void _1d9e40173_Exit(jule::I64 _339_code) {
	exit(_339_code);
}



inline __jule_tuple_i32__jule_tuple_int _1c1579d9d_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1865_p0 = _18215_p[0LL];;
	jule::U8 _1875_x = _1c1578c04_first[static_cast<jule::I64>(_1865_p0)];;
	if ((_1875_x >= 240LLU)) {
		jule::I32 _1929_mask = static_cast<jule::I32>(((_1875_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_18215_p[0LL]) & (~(_1929_mask))) | (65533LL & _1929_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _1955_sz = static_cast<jule::I64>((_1875_x & 7LLU));;
	_1c1579287_acceptRange _1965_accept = _1c1579595_acceptRanges[static_cast<jule::I64>((_1875_x >> 4LLU))];;
	if ((_18215_p.len() < _1955_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2005_b1 = _18215_p[1LL];;
	if (((_2005_b1 < _1965_accept._field_lo) || (_1965_accept._field_hi < _2005_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1955_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_1865_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2005_b1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2075_b2 = _18215_p[2LL];;
	if (((_2075_b2 < 128LLU) || (191LL < _2075_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1955_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_1865_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2005_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2075_b2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2145_b3 = _18215_p[3LL];;
	if (((_2145_b3 < 128LLU) || (191LL < _2145_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_1865_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2005_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2075_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2145_b3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1c157a1de_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2335_s0 = _22918_s[0LL];;
	jule::U8 _2345_x = _1c1578c04_first[static_cast<jule::I64>(_2335_s0)];;
	if ((_2345_x >= 240LLU)) {
		jule::I32 _2399_mask = static_cast<jule::I32>(((_2345_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_22918_s[0LL]) & (~(_2399_mask))) | (65533LL & _2399_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2425_sz = static_cast<jule::I64>((_2345_x & 7LLU));;
	_1c1579287_acceptRange _2435_accept = _1c1579595_acceptRanges[static_cast<jule::I64>((_2345_x >> 4LLU))];;
	if ((_22918_s.len() < _2425_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2475_s1 = _22918_s[1LL];;
	if (((_2475_s1 < _2435_accept._field_lo) || (_2435_accept._field_hi < _2475_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2425_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_2335_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2475_s1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2545_s2 = _22918_s[2LL];;
	if (((_2545_s2 < 128LLU) || (191LL < _2545_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2425_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_2335_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2475_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2545_s2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2615_s3 = _22918_s[3LL];;
	if (((_2615_s3 < 128LLU) || (191LL < _2615_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_2335_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2475_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2545_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2615_s3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1c157a772_DecodeLastRuneStr(jule::Str _31722_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_31722_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I64 _3215_end = _31722_s.len();;
	jule::I64 _3229_start = (_3215_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(static_cast<jule::I32>(_31722_s[_3229_start]));
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _3309_lim = (_3215_end - 4LL);;
	if ((_3309_lim < 0LL)) {
		_3309_lim=0LL;
	};
	(_3229_start)--;
	for (; (_3229_start >= _3309_lim); (_3229_start)--) {
		{
			if (_1c157bed2_RuneStart(_31722_s[_3229_start])) {
				goto _iter_end_1bab48087;
			};
		}
	_iter_next_1bab48087:;
	}
	_iter_end_1bab48087:;;
	if ((_3229_start < 0LL)) {
		_3229_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c157a1de_DecodeRuneStr(_31722_s.slice(_3229_start, _3215_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3229_start + __jule_func_result.__jule_result_arg1) != _3215_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::I64 _1c157aa3b_RuneLen(jule::I32 _35212_r) {
	{
		
		if ((_35212_r < 0LL)) {
			_case_begin_1bab49dbe:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 127LL)) {
			_case_begin_1bab49e46:;
			{
				return 1LL;;
			}
		}
		else if ((_35212_r <= 2047LL)) {
			_case_begin_1bab49ebd:;
			{
				return 2LL;;
			}
		}
		else if (((55296LL <= _35212_r) && (_35212_r <= 57343LL))) {
			_case_begin_1bab4a045:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 65535LL)) {
			_case_begin_1bab4a298:;
			{
				return 3LL;;
			}
		}
		else if ((_35212_r <= 1114111LL)) {
			_case_begin_1bab4a320:;
			{
				return 4LL;;
			}
		}
		else {
			_case_begin_1bab49d47:;
			{
				return -1LL;;
			}
		}
		_match_end_1bab49c9d:;
	};
}



inline jule::I64 _1c157ae8c_EncodeRune(jule::Slice<jule::U8> _37419_p, jule::I32 _37434_r) {
	jule::U32 _3765_i = static_cast<jule::U32>(_37434_r);;
	{
		
		if ((_3765_i <= 127LLU)) {
			_case_begin_1bab50358:;
			{
				_37419_p[0LL]=static_cast<jule::U8>(static_cast<jule::U8>(_37434_r));
				return 1LL;;
			}
		}
		else if ((_3765_i <= 2047LLU)) {
			_case_begin_1bab4cd4a:;
			{
				_37419_p[0LL]=static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_37434_r >> 6LL))));
				_37419_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU)));
				return 2LL;;
			}
		}
		else if ((_3765_i > 1114111LLU) || ((55296LL <= _3765_i) && (_3765_i <= 57343LLU))) {
			_case_begin_1bab5017c:;
			{
				_37434_r=65533LL;
				goto _case_begin_1bab501e3;
			}
		}
		else if ((_3765_i <= 65535LLU)) {
			_case_begin_1bab501e3:;
			{
				_37419_p[0LL]=static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_37434_r >> 12LL))));
				_37419_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU)));
				_37419_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU)));
				return 3LL;;
			}
		}
		else {
			_case_begin_1bab4c9a4:;
			{
				_37419_p[0LL]=static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_37434_r >> 18LL))));
				_37419_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37434_r >> 12LL)) & 63LLU)));
				_37419_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU)));
				_37419_p[3LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU)));
				return 4LL;;
			}
		}
		_match_end_1bab4c93d:;
	};
}



inline jule::Slice<jule::U8> _1c157b311_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40530_r))}));;
	};
	return _1c157b685_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _1c157b685_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4145_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4145_i <= 2047LLU)) {
			_case_begin_1bab57b02:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else if ((_4145_i > 1114111LLU) || ((55296LL <= _4145_i) && (_4145_i <= 57343LLU))) {
			_case_begin_1bab57e21:;
			{
				_41242_r=128LL;
				goto _case_begin_1bab55a89;
			}
		}
		else if ((_4145_i <= 65535LLU)) {
			_case_begin_1bab55a89:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else {
			_case_begin_1bab55a23:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		_match_end_1bab559ac:;
	};
}



inline jule::I64 _1c157bc18_RuneCountStr(jule::Str _47317_s) {
	jule::I64 __jule_func_result = 0;
	jule::I64 _4749_i = 0LL;;
	for (; (_4749_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _47613_c = _47317_s[_4749_i];;
			if ((_47613_c < 128LLU)) {
				(_4749_i)++;
				goto _iter_next_1bab61b0b;
			};
			jule::U8 _4829_x = _1c1578c04_first[static_cast<jule::I64>(_47613_c)];;
			if ((_4829_x == 241LLU)) {
				(_4749_i)++;
				goto _iter_next_1bab61b0b;
			};
			jule::I64 _48713_size = static_cast<jule::I64>((_4829_x & 7LLU));;
			if (((_4749_i + _48713_size) > _47317_s.len())) {
				(_4749_i)++;
				goto _iter_next_1bab61b0b;
			};
			_1c1579287_acceptRange _4929_accept = _1c1579595_acceptRanges[static_cast<jule::I64>((_4829_x >> 4LLU))];;
			_47613_c=_47317_s[(_4749_i + 1LL)];
			if (((_47613_c < _4929_accept._field_lo) || (_4929_accept._field_hi < _47613_c))) {
				_48713_size=1LL;
			} else if ((_48713_size == 2LL)) {
			} else {
				_47613_c=_47317_s[(_4749_i + 2LL)];
				if (((_47613_c < 128LLU) || (191LL < _47613_c))) {
					_48713_size=1LL;
				} else if ((_48713_size == 3LL)) {
				} else {
					_47613_c=_47317_s[(_4749_i + 3LL)];
					if (((_47613_c < 128LLU) || (191LL < _47613_c))) {
						_48713_size=1LL;
					};
				};
			};
			_4749_i+=_48713_size;
		}
	_iter_next_1bab61b0b:;
	}
	_iter_end_1bab61b0b:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1c157bed2_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::Str _1c164112e_Str(jule::U8* _108_b, jule::I64 _1018_n) {
	jule::Str _119_s = jule::Str();;
	{
		_119_s.buffer = jule::Ptr<jule::U8>::make(_108_b, nullptr);
		_119_s._len = _1018_n;
		_119_s._slice = _108_b;
	};
	return _119_s;;
}



inline jule::Slice<jule::U8> _1bab81ad7_Slice(jule::U8* _2316_e, jule::I64 _2326_n) {
	jule::Slice<jule::U8> _249_buf = static_cast<jule::Slice<jule::U8>>(nullptr);;
	{
		_249_buf.data = jule::Ptr<jule::U8>::make(_2316_e, nullptr);
		_249_buf._len = _2326_n;
		_249_buf._cap = _2326_n;
		_249_buf._slice = _2316_e;
	};
	return _249_buf;;
}



inline jule::Slice<jule::U8> _1c164bdc6_StrBytes(jule::Str _4113_s) {
	if ((_4113_s.len() == 0LL)) {
		return nullptr;;
	};
	return _1bab81ad7_Slice((&(_4113_s[0LL])), static_cast<jule::I64>(_4113_s.len()));;
}



inline jule::Str _1c164c190_BytesStr(jule::Slice<jule::U8> _5013_b) {
	if ((_5013_b.len() == 0LL)) {
		return jule::Str();;
	};
	return _1c164112e_Str((&(_5013_b[0LL])), static_cast<jule::I64>(_5013_b.len()));;
}



inline jule::Str _1c164c459_StrFromBytes(jule::Slice<jule::U8> _5817_b) {
	return (*(((jule::Str*)((&(_5817_b))))));;
}



inline jule::I64 _1c1680c0c_getLastOsErrorWindows(void) {
	jule::U32 _165_err = _1d9e38e4c_GetLastError();;
	{
		auto &_match_expr{ _165_err };
		
		if (_match_expr == 5LL) {
			_case_begin_1bab94d2b:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1bab969ed:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1bab96a64:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 123LL) {
			_case_begin_1bab96aca:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else {
			_case_begin_1bab94e6e:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		_match_end_1bab94e19:;
	};
}



inline jule::Slice<jule::Str> _1c1681c1e_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _1c16821b4_WorkingDir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(), ({
		auto except = _1c16830e9_getwd();
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));;
}



inline jule::Exceptional<jule::Str> _1c16830e9_getwd(void) {
	jule::Array<jule::U16,261> _1513_buf = jule::Array<jule::U16,261>(0);;
	jule::U32 _165_n = _1d9e392c1_GetCurrentDirectory(static_cast<jule::U32>(261LLU), (&(_1513_buf[0LL])));;
	if ((_165_n == 0LLU)) {
		return jule::Exceptional<jule::Str>(jule::Any(_1c1680c0c_getLastOsErrorWindows(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::Str>(jule::Any(), _1d9e0e065_U16PtrToStr((&(_1513_buf[0LL]))));;
}



inline jule::Bool _1a7467cc7_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_1a74ccc71__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _1a74d6373_isExcludingLatin(_1a7472034_Letter, _7613_r);;
}



inline jule::Bool _1a74d56e6_is16(jule::Slice<_1a74d3958_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bb89ccdb:;
			if (it != expr_end) {
				jule::I64 _19313_i = it - expr->begin();
				{
					_1a74d3958_Range16* _19413_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < (*(_19413_range))._field_Lo)) {
							return false;;
						};
						if ((_19128_r <= (*(_19413_range))._field_Hi)) {
							return (((*(_19413_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_19413_range))._field_Lo),(*(_19413_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1bb89ccdb:;
				++it;
				_19313_i++;
				goto _iter_begin_1bb89ccdb;
			}
			_iter_end_1bb89ccdb:;
		};
		return false;;
	};
	jule::I64 _2089_lo = 0LL;;
	jule::I64 _2099_hi = _1919_ranges.len();;
	while ((_2089_lo < _2099_hi)) {
		{
			jule::I64 _2119_m = (_2089_lo + ((_2099_hi - _2089_lo) >> 1LLU));;
			_1a74d3958_Range16* _2129_range = (&(_1919_ranges[_2119_m]));;
			{
				if ((((*(_2129_range))._field_Lo <= _19128_r) && (_19128_r <= (*(_2129_range))._field_Hi))) {
					return (((*(_2129_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_2129_range))._field_Lo),(*(_2129_range))._field_Stride) == 0LLU));;
				};
				if ((_19128_r < (*(_2129_range))._field_Lo)) {
					_2099_hi=_2119_m;
				} else {
					_2089_lo=static_cast<jule::I64>((_2119_m + 1LL));
				};
			};
		}
	_iter_next_1bb89ba10:;
	}
	_iter_end_1bb89ba10:;;
	return false;;
}



inline jule::Bool _1a74d5a6a_is32(jule::Slice<_1a74d3e86_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bb8a0dee:;
			if (it != expr_end) {
				jule::I64 _23013_i = it - expr->begin();
				{
					_1a74d3e86_Range32* _23113_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < (*(_23113_range))._field_Lo)) {
							return false;;
						};
						if ((_22828_r <= (*(_23113_range))._field_Hi)) {
							return (((*(_23113_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_23113_range))._field_Lo),(*(_23113_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1bb8a0dee:;
				++it;
				_23013_i++;
				goto _iter_begin_1bb8a0dee;
			}
			_iter_end_1bb8a0dee:;
		};
		return false;;
	};
	jule::I64 _2459_lo = 0LL;;
	jule::I64 _2469_hi = _2289_ranges.len();;
	while ((_2459_lo < _2469_hi)) {
		{
			jule::I64 _2489_m = (_2459_lo + ((_2469_hi - _2459_lo) >> 1LLU));;
			_1a74d3e86_Range32* _2499_range = (&(_2289_ranges[_2489_m]));;
			{
				if ((((*(_2499_range))._field_Lo <= _22828_r) && (_22828_r <= (*(_2499_range))._field_Hi))) {
					return (((*(_2499_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_2499_range))._field_Lo),(*(_2499_range))._field_Stride) == 0LLU));;
				};
				if ((_22828_r < (*(_2499_range))._field_Lo)) {
					_2469_hi=_2489_m;
				} else {
					_2459_lo=static_cast<jule::I64>((_2489_m + 1LL));
				};
			};
		}
	_iter_next_1bb8a0c9a:;
	}
	_iter_end_1bb8a0c9a:;;
	return false;;
}



inline jule::Bool _1a74d6373_isExcludingLatin(jule::Ptr<_1a74d443c_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_1a74d3958_Range16> *_28010_R16 = &((*(_27821_rangeTab))._field_R16);;
		jule::I64 _2829_off = (*(_27821_rangeTab))._field_LatinOffset;;
		if ((((*(_28010_R16)).len() > _2829_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_28010_R16))[((*(_28010_R16)).len() - 1LL)]._field_Hi)))) {
			return _1a74d56e6_is16((*(_28010_R16)).slice(_2829_off), static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));;
		};
	};
	jule::Slice<_1a74d3e86_Range32> *_2876_R32 = &((*(_27821_rangeTab))._field_R32);;
	if ((((*(_2876_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_2876_R32))[0LL]._field_Lo)))) {
		return _1a74d5a6a_is32((*(_2876_R32)), static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));;
	};
	return false;;
}



inline jule::Bool _1a74d663c_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_1a74ccc71__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _1a74d6373_isExcludingLatin(_1a747858a_Upper, _29512_r);;
}



inline jule::I64 _1a6937c26_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b) {
	jule::U8* _469_it = _4535_end;;
	for (; (_469_it >= _4517_begin); (_469_it)--) {
		{
			{
				if (((*(_469_it)) == _4547_b)) {
					return static_cast<jule::I64>(((jule::I64)((_469_it - _4517_begin))));;
				};
			};
		}
	_iter_next_1bb8b9d2a:;
	}
	_iter_end_1bb8b9d2a:;;
	return -1LL;;
}



inline jule::I64 _1a6938463_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b) {
	{
		auto expr = &(_6816_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb8bb568:;
		if (it != expr_end) {
			jule::I64 _709_i = it - expr->begin();
			jule::U8 *_7012_se = it;
			{
				if (((*(_7012_se)) == _6824_b)) {
					return _709_i;;
				};
			}
			_iter_next_1bb8bb568:;
			++it;
			_709_i++;
			goto _iter_begin_1bb8bb568;
		}
		_iter_end_1bb8bb568:;
	};
	return -1LL;;
}



inline jule::I64 _1a69387d7_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b) {
	if ((_7920_s.len() == 0LL)) {
		return -1LL;;
	};
	return static_cast<jule::I64>(_1a6937c26_findLastByte((&(_7920_s[0LL])), (&(_7920_s[(_7920_s.len() - 1LL)])), _7928_b));;
}



inline jule::Str _1a6938c27_Repeat(jule::Str _1111_s, jule::I64 _1123_n) {
	if ((_1123_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1111_s.len() > jule::div(jule::MAX_I64,_1123_n))) {
		jule::panic(jule::Str::lit("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:16:9"));;
	};
	_1c164cc40_StrBuilder _189_ss = static__1c164d191_New(static_cast<jule::I64>((_1111_s.len() * _1123_n)));;
	for (; (_1123_n > 0LL); (_1123_n)--) {
		{
			_1c164d702_WriteStr(&_189_ss, _1111_s);
		}
	_iter_next_1bb8cde60:;
	}
	_iter_end_1bb8cde60:;;
	return _1c164dee9_Str(&_189_ss);;
}



inline jule::Bool _1a693919a_hasPrefix(jule::Str* _2515_s, jule::Str* _2524_sub, jule::I64 _2538_start) {
	if ((((*(_2524_sub)).len() == 0LL) || (((*(_2515_s)).len() - _2538_start) < (*(_2524_sub)).len()))) {
		return false;;
	};
	jule::I64 _309_i = 0LL;;
	for (; (_309_i < (*(_2524_sub)).len()); ({
		jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_309_i + 1LL));
		jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_2538_start + 1LL));
		_309_i = ___jule_assign_arg;
		_2538_start = _1___jule_assign_arg;
	})) {
		{
			if (((*(_2515_s))[_2538_start] != (*(_2524_sub))[_309_i])) {
				return false;;
			};
		}
	_iter_next_1bb8d1ca9:;
	}
	_iter_end_1bb8d1ca9:;;
	return true;;
}



inline jule::Bool _1a693951e_HasPrefix(jule::Str _4014_s, jule::Str _4022_sub) {
	return _1a693919a_hasPrefix(&(_4014_s), &(_4022_sub), 0LL);;
}



inline jule::Bool _1a693993c_hasSuffix(jule::Str* _4415_s, jule::Str* _4424_sub, jule::I64 _4438_start) {
	if ((((*(_4424_sub)).len() == 0LL) || (((*(_4415_s)).len() - _4438_start) < (*(_4424_sub)).len()))) {
		return false;;
	};
	_4438_start=static_cast<jule::I64>(((*(_4415_s)).len() - _4438_start));
	jule::I64 _509_i = 0LL;;
	for (; (_509_i < (*(_4424_sub)).len()); (_509_i)++) {
		{
			if (((*(_4415_s))[((_4438_start - _509_i) - 1LL)] != (*(_4424_sub))[(((*(_4424_sub)).len() - _509_i) - 1LL)])) {
				return false;;
			};
		}
	_iter_next_1bb8d3b02:;
	}
	_iter_end_1bb8d3b02:;;
	return true;;
}



inline jule::Bool _1a6939c7d_HasSuffix(jule::Str _6014_s, jule::Str _6022_sub) {
	return _1a693993c_hasSuffix(&(_6014_s), &(_6022_sub), 0LL);;
}



inline jule::I64 _1a693a1ac_FindAt(jule::Str _6811_s, jule::Str _6819_sub, jule::I64 _6833_i) {
	if ((((_6833_i < 0LL) || (_6811_s.len() < _6819_sub.len())) || (_6819_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_6833_i < _6811_s.len()); (_6833_i)++) {
		{
			if (_1a693919a_hasPrefix(&(_6811_s), &(_6819_sub), _6833_i)) {
				return _6833_i;;
			};
		}
	_iter_next_1bb8d69d4:;
	}
	_iter_end_1bb8d69d4:;;
	return -1LL;;
}



inline jule::I64 _1a693a531_Find(jule::Str _839_s, jule::Str _8317_sub) {
	return static_cast<jule::I64>(_1a693a1ac_FindAt(_839_s, _8317_sub, 0LL));;
}



inline jule::I64 _1a693aa70_FindLastAt(jule::Str _9115_s, jule::Str _9123_sub, jule::I64 _9133_i) {
	jule::I64 _929_j = ((_9133_i - _9123_sub.len()) + 1LL);;
	if (((((_9123_sub.len() == 0LL) || (_9133_i < 0LL)) || (_9133_i >= _9115_s.len())) || (_929_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_1bb8d9d06:;
	for (; (_929_j >= 0LL); (_929_j)--) {
		{
			jule::I64 _9813_k = _929_j;;
			jule::I64 _9913_z = 0LL;;
			for (; (_9913_z < _9123_sub.len()); ({
				jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_9813_k + 1LL));
				jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_9913_z + 1LL));
				_9813_k = ___jule_assign_arg;
				_9913_z = _1___jule_assign_arg;
			})) {
				{
					if ((_9115_s[_9813_k] != _9123_sub[_9913_z])) {
						goto _iter_next_1bb8d9971;
					};
				}
			_iter_next_1bb8daae8:;
			}
			_iter_end_1bb8daae8:;;
			return _929_j;;
		}
	_iter_next_1bb8d9971:;
	}
	_iter_end_1bb8d9971:;;
	return -1LL;;
}



inline jule::I64 _1a693ade4_FindLast(jule::Str _11313_s, jule::Str _11321_sub) {
	return static_cast<jule::I64>(_1a693aa70_FindLastAt(_11313_s, _11321_sub, static_cast<jule::I64>((_11313_s.len() - 1LL))));;
}



inline jule::I64 _1a693c643_FindLastByte(jule::Str _17717_s, jule::U8 _17725_b) {
	return static_cast<jule::I64>(_1a69387d7_FindLastByteStr(_17717_s, _17725_b));;
}



inline jule::I64 _1a693cb71_FindRune(jule::Str _18413_s, jule::I32 _18421_r) {
	jule::I64 _1859_i = 0LL;;
	while ((_1859_i < _18413_s.len())) {
		{
			jule::I32 _1879_br = 0;;
			jule::I64 _18713_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c157a1de_DecodeRuneStr(_18413_s.slice(_1859_i));
				_1879_br = __jule_assign_result.__jule_result_arg0;
				_18713_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_18421_r == _1879_br)) {
				return _1859_i;;
			};
			_1859_i+=_18713_n;
		}
	_iter_next_1bb8e3518:;
	}
	_iter_end_1bb8e3518:;;
	return -1LL;;
}



inline jule::I64 _1a693d369_FindAny(jule::Str _21412_s, jule::Str _21420_runes) {
	jule::I64 _2159_i = 0LL;;
	while ((_2159_i < _21412_s.len())) {
		{
			jule::I32 _2179_r = 0;;
			jule::I64 _21712_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c157a1de_DecodeRuneStr(_21412_s.slice(_2159_i));
				_2179_r = __jule_assign_result.__jule_result_arg0;
				_21712_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1a693cb71_FindRune(_21420_runes, _2179_r) != -1LL)) {
				return _2159_i;;
			};
			_2159_i+=_21712_n;
		}
	_iter_next_1bb8e65d7:;
	}
	_iter_end_1bb8e65d7:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _1a693db1c_Split(jule::Str _24410_s, jule::Str _24418_sub, jule::I64 _24432_n) {
	jule::I64 _2459_cap = _24432_n;;
	if ((_24432_n < 0LL)) {
		_2459_cap=16LLU;
	};
	jule::Slice<jule::Str> _2499_parts = jule::Slice<jule::Str>::alloc(0LL, _2459_cap);;
	if ((_24432_n == 0LL)) {
		return _2499_parts;;
	};
	if ((_24432_n < 0LL)) {
		_24432_n=static_cast<jule::I64>(_24410_s.len());
	};
	jule::I64 _2569_i = 0LL;;
	for (; (_24432_n > 0LL); (_24432_n)--) {
		{
			jule::I64 _2589_j = _1a693a1ac_FindAt(_24410_s, _24418_sub, _2569_i);;
			if ((_2589_j == -1LL)) {
				goto _iter_end_1bb8eb5cb;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _2499_parts; __jule_push_dest.push(_24410_s.slice(_2569_i, _2589_j)); };
			_2569_i=static_cast<jule::I64>((_2589_j + _24418_sub.len()));
		}
	_iter_next_1bb8eb5cb:;
	}
	_iter_end_1bb8eb5cb:;;
	if (((_24432_n > 0LL) && (_2569_i < _24410_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _2499_parts; __jule_push_dest.push(_24410_s.slice(_2569_i)); };
	};
	return _2499_parts;;
}



inline jule::Bool _1a693de91_Contains(jule::Str _27213_s, jule::Str _27221_sub) {
	return (_1a693a1ac_FindAt(_27213_s, _27221_sub, 0LL) != -1LL);;
}



inline jule::Bool _1a693ea0d_ContainsAny(jule::Str _28716_s, jule::Str _28724_runes) {
	return (_1a693d369_FindAny(_28716_s, _28724_runes) != -1LL);;
}



inline jule::I64 _1a693ed82_Count(jule::Str _29310_s, jule::Str _29318_sub) {
	if ((_29318_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _2979_n = 0LL;;
	jule::I64 _2989_i = 0LL;;
	for (;;) {
		{
			jule::I64 _3009_j = _1a693a1ac_FindAt(_29310_s, _29318_sub, _2989_i);;
			if ((_3009_j == -1LL)) {
				goto _iter_end_1bb90138e;
			};
			(_2979_n)++;
			_2989_i=static_cast<jule::I64>((_3009_j + _29318_sub.len()));
		}
	_iter_next_1bb90138e:;
	}
	_iter_end_1bb90138e:;;
	return _2979_n;;
}



inline jule::Str _1a694036b_Replace(jule::Str _31312_s, jule::Str _31320_sub, jule::Str _31330_new, jule::I64 _31344_n) {
	if (((_31344_n == 0LL) || (_31320_sub == _31330_new))) {
		return _31312_s;;
	};
	jule::I64 _3185_m = _1a693ed82_Count(_31312_s, _31320_sub);;
	if ((_3185_m == 0LL)) {
		return _31312_s;;
	};
	if (((_31344_n < 0LL) || (_3185_m < _31344_n))) {
		_31344_n=_3185_m;
	};
	_1c164cc40_StrBuilder _3269_ss = static__1c164d191_New(static_cast<jule::I64>(((_31312_s.len() + (_31344_n * (_31330_new.len() - _31320_sub.len()))) + 1LL)));;
	jule::I64 _3279_i = 0LL;;
	for (; (_31344_n > 0LL); (_31344_n)--) {
		{
			jule::I64 _3299_j = _1a693a1ac_FindAt(_31312_s, _31320_sub, _3279_i);;
			if ((_3299_j == -1LL)) {
				goto _iter_end_1bb904eca;
			};
			_1c164d702_WriteStr(&_3269_ss, _31312_s.slice(_3279_i, _3299_j));
			_1c164d702_WriteStr(&_3269_ss, _31330_new);
			_3279_i=static_cast<jule::I64>((_3299_j + _31320_sub.len()));
		}
	_iter_next_1bb904eca:;
	}
	_iter_end_1bb904eca:;;
	_1c164d702_WriteStr(&_3269_ss, _31312_s.slice(_3279_i));
	return _1c164dee9_Str(&_3269_ss);;
}



inline jule::Str _1a69410e7_TrimLeft(jule::Str _37017_s, jule::Str _37025_cutset) {
	jule::I64 _3719_i = 0LL;;
	while ((_3719_i < _37017_s.len())) {
		{
			jule::I32 _3739_r = 0;;
			jule::I64 _37312_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c157a1de_DecodeRuneStr(_37017_s.slice(_3719_i));
				_3739_r = __jule_assign_result.__jule_result_arg0;
				_37312_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1a693cb71_FindRune(_37025_cutset, _3739_r) == -1LL)) {
				return _37017_s.slice(_3719_i);;
			};
			_3719_i+=_37312_n;
		}
	_iter_next_1bb90a024:;
	}
	_iter_end_1bb90a024:;;
	return jule::Str();;
}



inline jule::Str _1a694146b_TrimRight(jule::Str _38414_s, jule::Str _38422_cutset) {
	jule::I64 _3859_i = _38414_s.len();;
	while ((_3859_i > 0LL)) {
		{
			jule::I32 _3879_r = 0;;
			jule::I64 _38712_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c157a772_DecodeLastRuneStr(_38414_s.slice(0LL, _3859_i));
				_3879_r = __jule_assign_result.__jule_result_arg0;
				_38712_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1a693cb71_FindRune(_38422_cutset, _3879_r) == -1LL)) {
				return _38414_s.slice(0LL, _3859_i);;
			};
			_3859_i-=_38712_n;
		}
	_iter_next_1bb90a233:;
	}
	_iter_end_1bb90a233:;;
	return jule::Str();;
}



inline jule::Str _1a6941a43_Trim(jule::Str _3989_s, jule::Str _39817_cutset) {
	return _1a69410e7_TrimLeft(_1a694146b_TrimRight(_3989_s, _39817_cutset), _39817_cutset);;
}



inline jule::Bool _1c16507d1_IsPathSep(jule::U8 _4914_c) {
	return ((_4914_c == 92LLU) || (_4914_c == '/'));;
}



inline jule::Bool _1c1650ade_isSlash(jule::U8 _5312_c) {
	return ((_5312_c == '\\') || (_5312_c == '/'));;
}



inline jule::U8 _1c1650da8_toUpper(jule::U8 _5512_c) {
	if ((('a' <= _5512_c) && (_5512_c <= 'z'))) {
		return static_cast<jule::U8>((_5512_c - 32LL));;
	};
	return _5512_c;;
}



inline jule::I64 _1c16514b3_volumeNameLen(jule::Str _8318_path) {
	if ((_8318_path.len() < 2LL)) {
		return 0LL;;
	};
	jule::U8 _885_c = _8318_path[0LL];;
	if (((_8318_path[1LL] == ':') && ((('a' <= _885_c) && (_885_c <= 'z')) || (('A' <= _885_c) && (_885_c <= 'Z'))))) {
		return 2LL;;
	};
	if (((!(_1c1650ade_isSlash(_8318_path[0LL]))) || (!(_1c1650ade_isSlash(_8318_path[1LL]))))) {
		return 0LL;;
	};
	jule::Str _965_p1;;
	jule::Str _9613_rest;;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1c165177c_cutPath(_8318_path.slice(2LL));
		_965_p1 = __jule_assign_result.__jule_result_arg0;
		_9613_rest = __jule_assign_result.__jule_result_arg1;
	});
	jule::Str _979_p2 = jule::Str();;
	jule::Bool _989_ok = false;;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1c165177c_cutPath(_9613_rest);
		_979_p2 = __jule_assign_result.__jule_result_arg0;
		_9613_rest = __jule_assign_result.__jule_result_arg1;
		_989_ok = __jule_assign_result.__jule_result_arg2;
	});
	if ((!(_989_ok))) {
		return static_cast<jule::I64>(_8318_path.len());;
	};
	if (((!_965_p1.equal(".", 1)) && (!_965_p1.equal("?", 1)))) {
		return static_cast<jule::I64>(((_8318_path.len() - _9613_rest.len()) - 1LL));;
	};
	if (((((_979_p2.len() == 3LL) && (_1c1650da8_toUpper(_979_p2[0LL]) == 'U')) && (_1c1650da8_toUpper(_979_p2[1LL]) == 'N')) && (_1c1650da8_toUpper(_979_p2[2LL]) == 'C'))) {
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1c165177c_cutPath(_9613_rest);
			_9613_rest = __jule_assign_result.__jule_result_arg1;
		});
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1c165177c_cutPath(_9613_rest);
			_9613_rest = __jule_assign_result.__jule_result_arg1;
			_989_ok = __jule_assign_result.__jule_result_arg2;
		});
		if ((!(_989_ok))) {
			return static_cast<jule::I64>(_8318_path.len());;
		};
	};
	return static_cast<jule::I64>(((_8318_path.len() - _9613_rest.len()) - 1LL));;
}



inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _1c165177c_cutPath(jule::Str _12012_path) {
	__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg2 = false;
	{
		auto expr = &(_12012_path);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb92578c:;
		if (it != expr_end) {
			jule::I64 _1219_i = it - expr->begin();
			{
				if (_1c1650ade_isSlash(_12012_path[_1219_i])) {
					__jule_func_result.__jule_result_arg0 = _12012_path.slice(0LL, _1219_i);
					__jule_func_result.__jule_result_arg1 = _12012_path.slice((_1219_i + 1LL));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1bb92578c:;
			++it;
			_1219_i++;
			goto _iter_begin_1bb92578c;
		}
		_iter_end_1bb92578c:;
	};
	__jule_func_result.__jule_result_arg0 = _12012_path;
	__jule_func_result.__jule_result_arg1 = jule::Str();
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _1c1651a46_fullPath(jule::Str _12913_name) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::U16> _1305_utf16Name = _1d9e0d98d_UTF16FromStr(_12913_name);;
	jule::U16* _1315_p = (&(_1305_utf16Name[0LL]));;
	jule::U32 _1329_n = static_cast<jule::U32>(100LLU);;
	for (;;) {
		{
			jule::Slice<jule::U16> _13413_buf = jule::Slice<jule::U16>::alloc(static_cast<jule::I64>(_1329_n), static_cast<jule::I64>(_1329_n), 0);;
			_1329_n=static_cast<jule::U32>(_1d9e3a3c1_GetFullPathName(_1315_p, static_cast<jule::U32>(static_cast<jule::U32>(_13413_buf.len())), (&(_13413_buf[0LL])), nullptr));
			if ((_1329_n == 0LLU)) {
				__jule_func_result.__jule_result_arg0 = jule::Str();
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			};
			if ((_1329_n <= static_cast<jule::U32>(_13413_buf.len()))) {
				__jule_func_result.__jule_result_arg0 = _1d9e0dc9b_UTF16ToStr(_13413_buf.slice(0LL, static_cast<jule::I64>(_1329_n)));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			};
		}
	_iter_next_1bb927926:;
	}
	_iter_end_1bb927926:;;
	__jule_func_result.__jule_result_arg0 = jule::Str();
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _1c1651ddc_abs(jule::Str _14612_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_14612_path).empty()) {
		_14612_path=jule::Str::lit(".", 1);
	};
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1c1651a46_fullPath(_14612_path);
		_14612_path = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(__jule_func_result.__jule_result_arg1))) {
		__jule_func_result.__jule_result_arg0 = jule::Str();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _1a6943bcc_Clean(_14612_path);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _1c16521a6_join(jule::Slice<jule::Str> _16013_elem) {
	_1c164cc40_StrBuilder _1619_s = static__1c164d191_New(16LL);;
	jule::U8 _1629_lastChar = static_cast<jule::U8>(0LLU);;
	{
		auto expr = &(_16013_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb92a7e7:;
		if (it != expr_end) {
			jule::Str _16317_e = *it;
			{
				{
					
					if ((_1c164e47d_Len(&_1619_s) == 0LL)) {
						_case_begin_1bb92c7e9:;
					}
					else if (_1c1650ade_isSlash(_1629_lastChar)) {
						_case_begin_1bb92cbe5:;
						{
							while (((_16317_e.len() > 0LL) && _1c1650ade_isSlash(_16317_e[0LL]))) {
								{
									(_16317_e).mut_slice(1LL);;
								}
							_iter_next_1bb92d344:;
							}
							_iter_end_1bb92d344:;;
						}
					}
					else if ((_1629_lastChar == ':')) {
						_case_begin_1bb92c4b9:;
					}
					else {
						_case_begin_1bb92c453:;
						{
							_1c164d9aa_WriteByte(&_1619_s, '\\');
							_1629_lastChar='\\';
						}
					}
					_match_end_1bb92c398:;
				};
				if ((_16317_e.len() > 0LL)) {
					_1c164d702_WriteStr(&_1619_s, _16317_e);
					_1629_lastChar=_16317_e[(_16317_e.len() - 1LL)];
				};
			}
			_iter_next_1bb92a7e7:;
			++it;
			goto _iter_begin_1bb92a7e7;
		}
		_iter_end_1bb92a7e7:;
	};
	if ((_1c164e47d_Len(&_1619_s) == 0LL)) {
		return jule::Str();;
	};
	return _1a6943bcc_Clean(_1c164dee9_Str(&_1619_s));;
}



inline jule::Str _1a6943bcc_Clean(jule::Str _10914_path) {
	jule::Str _1105_originalPath = _10914_path;;
	jule::I64 _1115_volLen = _1c16514b3_volumeNameLen(_10914_path);;
	(_10914_path).mut_slice(_1115_volLen);;
	if ((_10914_path).empty()) {
		if ((((_1115_volLen > 1LL) && _1c16507d1_IsPathSep(_1105_originalPath[0LL])) && _1c16507d1_IsPathSep(_1105_originalPath[1LL]))) {
			return _1a69442a4_FromSlash(_1105_originalPath);;
		};
		return (_1105_originalPath + jule::Str::lit(".", 1));;
	};
	jule::Bool _1205_rooted = _1c16507d1_IsPathSep(_10914_path[0LL]);;
	jule::I64 _1275_n = _10914_path.len();;
	_1a6942d41_lazyBuff _1289_out = _1a6942d41_lazyBuff{._field_path=_10914_path, ._field_volAndPath=_1105_originalPath, ._field_volLen=_1115_volLen};;
	jule::I64 _1339_r = 0;;
	jule::I64 _13316_dotdot = 0;;
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		_1339_r = ___jule_assign_arg;
		_13316_dotdot = _1___jule_assign_arg;
	});
	if (_1205_rooted) {
		_1a694357d_append(&_1289_out, 92LLU);
		({
			jule::I64 ___jule_assign_arg = 1LL;
			jule::I64 _1___jule_assign_arg = 1LL;
			_1339_r = ___jule_assign_arg;
			_13316_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_1339_r < _1275_n)) {
		{
			{
				
				if (_1c16507d1_IsPathSep(_10914_path[_1339_r])) {
					_case_begin_1bb937b01:;
					{
						(_1339_r)++;
					}
				}
				else if (((_10914_path[_1339_r] == '.') && (((_1339_r + 1LL) == _1275_n) || _1c16507d1_IsPathSep(_10914_path[(_1339_r + 1LL)])))) {
					_case_begin_1bb934625:;
					{
						(_1339_r)++;
					}
				}
				else if ((((_10914_path[_1339_r] == '.') && (_10914_path[(_1339_r + 1LL)] == '.')) && (((_1339_r + 2LL) == _1275_n) || _1c16507d1_IsPathSep(_10914_path[(_1339_r + 2LL)])))) {
					_case_begin_1bb93468b:;
					{
						_1339_r+=2LL;
						{
							
							if ((_1289_out._field_w > _13316_dotdot)) {
								_case_begin_1bb93ab6a:;
								{
									(_1289_out._field_w)--;
									while (((_1289_out._field_w > _13316_dotdot) && (!(_1c16507d1_IsPathSep(static_cast<jule::U8>(_1a69432c5_index(&_1289_out, _1289_out._field_w))))))) {
										{
											(_1289_out._field_w)--;
										}
									_iter_next_1bb93b3eb:;
									}
									_iter_end_1bb93b3eb:;;
								}
							}
							else if ((!(_1205_rooted))) {
								_case_begin_1bb93abe2:;
								{
									if ((_1289_out._field_w > 0LL)) {
										_1a694357d_append(&_1289_out, 92LLU);
									};
									_1a694357d_append(&_1289_out, '.');
									_1a694357d_append(&_1289_out, '.');
									_13316_dotdot=_1289_out._field_w;
								}
							}
							_match_end_1bb93a890:;
						};
					}
				}
				else {
					_case_begin_1bb9345ae:;
					{
						if (((_1205_rooted && (_1289_out._field_w != 1LL)) || ((!(_1205_rooted)) && (_1289_out._field_w != 0LL)))) {
							_1a694357d_append(&_1289_out, 92LLU);
						};
						if ((((_1289_out._field_w == 0LL) && (_1289_out._field_volLen == 0LL)) && (_1339_r != 0LL))) {
							jule::I64 _17621_i = _1339_r;;
							for (; ((_17621_i < _1275_n) && (!(_1c16507d1_IsPathSep(_10914_path[_17621_i])))); (_17621_i)++) {
								{
									if ((_10914_path[_17621_i] == ':')) {
										_1a694357d_append(&_1289_out, '.');
										_1a694357d_append(&_1289_out, 92LLU);
										goto _iter_end_1bb936083;
									};
								}
							_iter_next_1bb936083:;
							}
							_iter_end_1bb936083:;;
						};
						for (; ((_1339_r < _1275_n) && (!(_1c16507d1_IsPathSep(_10914_path[_1339_r])))); (_1339_r)++) {
							{
								_1a694357d_append(&_1289_out, _10914_path[_1339_r]);
							}
						_iter_next_1bb9375e5:;
						}
						_iter_end_1bb9375e5:;;
					}
				}
				_match_end_1bb934290:;
			};
		}
	_iter_next_1bb932678:;
	}
	_iter_end_1bb932678:;;
	if ((_1289_out._field_w == 0LL)) {
		_1a694357d_append(&_1289_out, '.');
	};
	return _1a69442a4_FromSlash(_1a6943814_string(&_1289_out));;
}



inline jule::Str _1a69442a4_FromSlash(jule::Str _21214_path) {
	;
	return _1a694036b_Replace(_21214_path, jule::Str::lit("/", 1), jule::Str::lit("\\", 1), -1LL);;
}



inline jule::Str _1a694455c_Join(jule::Slice<jule::Str> _2269_elem) {
	return _1c16521a6_join(_2269_elem);;
}



inline jule::Str _1a6944826_Ext(jule::Str _2318_path) {
	jule::I64 _2329_i = (_2318_path.len() - 1LL);;
	for (; ((_2329_i >= 0LL) && (!(_1c16507d1_IsPathSep(_2318_path[_2329_i])))); (_2329_i)--) {
		{
			if ((_2318_path[_2329_i] == '.')) {
				return _2318_path.slice(_2329_i);;
			};
		}
	_iter_next_1bb93e6b8:;
	}
	_iter_end_1bb93e6b8:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _1a6944ae0_Abs(jule::Str _2468_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Str _2475_abs_path;;
	jule::Bool _24715_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1c1651ddc_abs(_2468_path);
		_2475_abs_path = __jule_assign_result.__jule_result_arg0;
		_24715_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _2475_abs_path;
	__jule_func_result.__jule_result_arg1 = _24715_ok;
	return __jule_func_result;;
}



inline jule::Str _1a6944da9_Base(jule::Str _25513_path) {
	if ((_25513_path).empty()) {
		return jule::Str::lit(".", 1);;
	};
	while (((_25513_path.len() > 0LL) && _1c16507d1_IsPathSep(_25513_path[(_25513_path.len() - 1LL)]))) {
		{
			(_25513_path).mut_slice(0LL, (_25513_path.len() - 1LL));;
		}
	_iter_next_1bb941a72:;
	}
	_iter_end_1bb941a72:;;
	(_25513_path).mut_slice(_1a6945519_VolumeName(_25513_path).len());;
	jule::I64 _2669_i = (_25513_path.len() - 1LL);;
	while (((_2669_i >= 0LL) && (!(_1c16507d1_IsPathSep(_25513_path[_2669_i]))))) {
		{
			(_2669_i)--;
		}
	_iter_next_1bb943513:;
	}
	_iter_end_1bb943513:;;
	if ((_2669_i >= 0LL)) {
		(_25513_path).mut_slice((_2669_i + 1LL));;
	};
	if ((_25513_path).empty()) {
		return jule::Str::lit("\\", 1);;
	};
	return _25513_path;;
}



inline jule::Str _1a6945250_Dir(jule::Str _2868_path) {
	jule::Str _2875_vol = _1a6945519_VolumeName(_2868_path);;
	jule::I64 _2889_i = (_2868_path.len() - 1LL);;
	while (((_2889_i >= _2875_vol.len()) && (!(_1c16507d1_IsPathSep(_2868_path[_2889_i]))))) {
		{
			(_2889_i)--;
		}
	_iter_next_1bb9455e2:;
	}
	_iter_end_1bb9455e2:;;
	jule::Str _2925_dir = _1a6943bcc_Clean(_2868_path.slice(_2875_vol.len(), (_2889_i + 1LL)));;
	if ((_2925_dir.equal(".", 1) && (_2875_vol.len() > 2LL))) {
		return _2875_vol;;
	};
	return (_2875_vol + _2925_dir);;
}



inline jule::Str _1a6945519_VolumeName(jule::Str _30415_path) {
	return _1a69442a4_FromSlash(_30415_path.slice(0LL, _1c16514b3_volumeNameLen(_30415_path)));;
}



inline jule::I64 _1d9e50705_getLastFsError(void) {
	jule::I64 _725_err = _1dbd20d21_GetLastErrno();;
	{
		auto &_match_expr{ _725_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1bb958803:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1bb957ec8:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1bb9581b5:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1bb95822b:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1bb958292:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1bb958308:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 132LL) {
			_case_begin_1bb958935:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1bb95899b:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1bb958a12:;
			{
				return static_cast<jule::I64>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1bb958a78:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1bb958b00:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1bb958b77:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1bb958bee:;
			{
				return static_cast<jule::I64>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1bb958c76:;
			{
				return static_cast<jule::I64>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1bb958ced:;
			{
				return static_cast<jule::I64>(14LL);;
			}
		}
		else if (_match_expr == 124LL) {
			_case_begin_1bb958d75:;
			{
				return static_cast<jule::I64>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1bb958dec:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1bb958e74:;
			{
				return static_cast<jule::I64>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1bb958eeb:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1bb959073:;
			{
				return static_cast<jule::I64>(19LL);;
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1bb9590ea:;
			{
				return static_cast<jule::I64>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1bb959172:;
			{
				return static_cast<jule::I64>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1bb9591e9:;
			{
				return static_cast<jule::I64>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1bb959271:;
			{
				return static_cast<jule::I64>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1bb9592e8:;
			{
				return static_cast<jule::I64>(24LL);;
			}
		}
		else if (_match_expr == 119LL) {
			_case_begin_1bb959370:;
			{
				return static_cast<jule::I64>(25LL);;
			}
		}
		else if (_match_expr == 104LL) {
			_case_begin_1bb9593e7:;
			{
				return static_cast<jule::I64>(26LL);;
			}
		}
		else if (_match_expr == 41LL) {
			_case_begin_1bb95946e:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else {
			_case_begin_1bb95814e:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1bb9580e9:;
	};
}



inline jule::Bool _1c157dcc5_isConsoleHandle(jule::Uintptr _11320_handle) {
	return (((_11320_handle == _1d9e378eb_STDIN) || (_11320_handle == _1d9e37bb5_STDOUT)) || (_11320_handle == _1d9e37e4b_STDERR));;
}



inline void _1a76355b0_appendEscapeArg(_1c164cc40_StrBuilder* _10225_s, jule::Str _10240_arg) {
	if ((_10240_arg.len() == 0LL)) {
		_1c164d702_WriteStr(_10225_s, jule::Str::lit("\"\"", 2));
		return;;
	};
	jule::Bool _1089_needsBackslash = false;;
	jule::Bool _1099_hasSpace = false;;
	jule::I64 _1109_i = 0LL;;
	for (; (_1109_i < _10240_arg.len()); (_1109_i)++) {
		{
			{
				auto &_match_expr{ _10240_arg[_1109_i] };
				
				if (_match_expr == '\"' || _match_expr == '\\') {
					_case_begin_1bb9a09d2:;
					{
						_1089_needsBackslash=true;
					}
				}
				else if (_match_expr == ' ' || _match_expr == '\t') {
					_case_begin_1bb9a0a59:;
					{
						_1099_hasSpace=true;
					}
				}
				_match_end_1bb9a08e4:;
			};
		}
	_iter_next_1bb9a03a5:;
	}
	_iter_end_1bb9a03a5:;;
	if (((!(_1089_needsBackslash)) && (!(_1099_hasSpace)))) {
		_1c164d702_WriteStr(_10225_s, _10240_arg);
		return;;
	};
	if ((!(_1089_needsBackslash))) {
		_1c164d9aa_WriteByte(_10225_s, '\"');
		_1c164d702_WriteStr(_10225_s, _10240_arg);
		_1c164d9aa_WriteByte(_10225_s, '\"');
		return;;
	};
	if (_1099_hasSpace) {
		_1c164d9aa_WriteByte(_10225_s, '\"');
	};
	jule::I64 _1369_slashes = 0LL;;
	_1109_i=0LL;
	for (; (_1109_i < _10240_arg.len()); (_1109_i)++) {
		{
			jule::U8 _1399_c = _10240_arg[_1109_i];;
			{
				auto &_match_expr{ _1399_c };
				
				if (_match_expr == '\\') {
					_case_begin_1bb9a38a3:;
					{
						(_1369_slashes)++;
					}
				}
				else if (_match_expr == '\"') {
					_case_begin_1bb9a3ab2:;
					{
						for (; (_1369_slashes > 0LL); (_1369_slashes)--) {
							{
								_1c164d9aa_WriteByte(_10225_s, '\\');
							}
						_iter_next_1bb9a3d26:;
						}
						_iter_end_1bb9a3d26:;;
						_1c164d9aa_WriteByte(_10225_s, '\\');
					}
				}
				else {
					_case_begin_1bb9a3a4b:;
					{
						_1369_slashes=0LL;
					}
				}
				_match_end_1bb9a39e6:;
			};
			_1c164d9aa_WriteByte(_10225_s, _1399_c);
		}
	_iter_next_1bb9a2e57:;
	}
	_iter_end_1bb9a2e57:;;
	if (_1099_hasSpace) {
		for (; (_1369_slashes > 0LL); (_1369_slashes)--) {
			{
				_1c164d9aa_WriteByte(_10225_s, '\\');
			}
		_iter_next_1bb9a3b5b:;
		}
		_iter_end_1bb9a3b5b:;;
		_1c164d9aa_WriteByte(_10225_s, '\"');
	};
}



inline jule::Str _1a7635879_makeCmdLine(jule::Slice<jule::Str> _16316_args) {
	_1c164cc40_StrBuilder _1649_s = static__1c164d191_New(16LL);;
	{
		auto expr = &(_16316_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb9a32a9:;
		if (it != expr_end) {
			jule::Str *_16512_arg = it;
			{
				if ((_1c164e47d_Len(&_1649_s) > 0LL)) {
					_1c164d9aa_WriteByte(&_1649_s, ' ');
				};
				_1a76355b0_appendEscapeArg(&(_1649_s), (*(_16512_arg)));
			}
			_iter_next_1bb9a32a9:;
			++it;
			goto _iter_begin_1bb9a32a9;
		}
		_iter_end_1bb9a32a9:;
	};
	return _1c164dee9_Str(&_1649_s);;
}



inline jule::Exceptional<jule::Slice<jule::U16>> _1a7635c53_createEnvBlock(jule::Slice<jule::Str> _17919_env) {
	if ((_17919_env.len() == 0LL)) {
		return jule::Exceptional<jule::Slice<jule::U16>>(jule::Any(), _1d9e0d130_Encode(jule::Slice<jule::I32>::make({0LL,0LL})));;
	};
	jule::I64 _1839_n = 0LL;;
	{
		auto expr = &(_17919_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb9a7d6e:;
		if (it != expr_end) {
			jule::Str *_18412_s = it;
			{
				if ((_1a6938463_FindByteStr((*(_18412_s)), 0LLU) != -1LL)) {
					return jule::Exceptional<jule::Slice<jule::U16>>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
				};
				_1839_n+=((*(_18412_s)).len() + 1LL);
			}
			_iter_next_1bb9a7d6e:;
			++it;
			goto _iter_begin_1bb9a7d6e;
		}
		_iter_end_1bb9a7d6e:;
	};
	(_1839_n)++;
	jule::Slice<jule::U16> _1919_b = jule::Slice<jule::U16>::alloc(0LL, _1839_n, 0);;
	{
		auto expr = &(_17919_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb99e2c7:;
		if (it != expr_end) {
			jule::Str *_19212_s = it;
			{
				{
					auto expr = static_cast<jule::Slice<jule::I32>>((*(_19212_s)));
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_1bb9a9c83:;
					if (it != expr_end) {
						jule::I32 _19316_c = *it;
						{
							_1919_b=_1d9e0d73a_AppendRune(_1919_b, _19316_c);
						}
						_iter_next_1bb9a9c83:;
						++it;
						goto _iter_begin_1bb9a9c83;
					}
					_iter_end_1bb9a9c83:;
				};
				_1919_b=_1d9e0d73a_AppendRune(_1919_b, 0LL);
			}
			_iter_next_1bb99e2c7:;
			++it;
			goto _iter_begin_1bb99e2c7;
		}
		_iter_end_1bb99e2c7:;
	};
	_1919_b=_1d9e0d73a_AppendRune(_1919_b, 0LL);
	return jule::Exceptional<jule::Slice<jule::U16>>(jule::Any(), _1919_b);;
}



inline jule::I64 _1a7636c87_processErrorFromCode(jule::I64 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 5LL) {
			_case_begin_1bb9a8237:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 2LL || _match_expr == 3LL) {
			_case_begin_1bb9aaa86:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else {
			_case_begin_1bb9aaa20:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		_match_end_1bb9a8534:;
	};
}



inline jule::I64 _1a7636ea7_getLastProcessError(void) {
	return _1a7636c87_processErrorFromCode(static_cast<jule::I64>(static_cast<jule::I64>(_1d9e38e4c_GetLastError())));;
}



inline void _1a76377c1_Exit(jule::I64 _129_code) {
	_1d9e40173_Exit(_129_code);
}



inline jule::Str _1a76379d0_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _1a75610ac_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _1a7561387_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_1a755dc69_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb9cc888:;
		if (it != expr_end) {
			jule::Str *_3212_validExt = it;
			{
				if ((_3121_ext == (*(_3212_validExt)))) {
					return true;;
				};
			}
			_iter_next_1bb9cc888:;
			++it;
			goto _iter_begin_1bb9cc888;
		}
		_iter_end_1bb9cc888:;
	};
	return false;;
}



inline jule::Bool _1a7561651_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_1a7560a4b_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb9cd834:;
		if (it != expr_end) {
			jule::Str *_4512_e = it;
			{
				if ((_4118_ext == (*(_4512_e)))) {
					return true;;
				};
			}
			_iter_next_1bb9cd834:;
			++it;
			goto _iter_begin_1bb9cd834;
		}
		_iter_end_1bb9cd834:;
	};
	{
		auto expr = &(_1a7560d04_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb9ce170:;
		if (it != expr_end) {
			jule::Str *_5012_e = it;
			{
				if ((_4118_ext == (*(_5012_e)))) {
					return true;;
				};
			}
			_iter_next_1bb9ce170:;
			++it;
			goto _iter_begin_1bb9ce170;
		}
		_iter_end_1bb9ce170:;
	};
	return false;;
}



inline jule::Str _1a756da9d_Logf(jule::Str _3229_fmt, jule::Slice<jule::Any> _32222_args) {
	return _1a756e53d_applyFmt(_3229_fmt, _32222_args);;
}



inline jule::Str _1a756ddab_argToStr(jule::Any _32613_arg) {
	{
		auto &_match_expr{ _32613_arg };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1bb9ce714:;
			{
				return _32613_arg.cast<jule::Str>(&__jule_any_type4);;
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1bb9d0737:;
			{
				return jule::Str::from_byte(_32613_arg.cast<jule::U8>(&__jule_any_type129));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1bb9d079d:;
			{
				return jule::Str::from_rune(_32613_arg.cast<jule::I32>(&__jule_any_type6));;
			}
		}
		else {
			_case_begin_1bb9d0160:;
			{
				return jule::Str::lit("<fmt?>", 6);;
			}
		}
		_match_end_1bb9d010a:;
	};
}



inline jule::I64 _1a756e175_findNextFmt(jule::Str _33916_fmt) {
	{
		auto expr = &(_33916_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb9d10d9:;
		if (it != expr_end) {
			jule::I64 _3409_i = it - expr->begin();
			jule::U8 *_34012_b = it;
			{
				if (((*(_34012_b)) == '@')) {
					return _3409_i;;
				};
			}
			_iter_next_1bb9d10d9:;
			++it;
			_3409_i++;
			goto _iter_begin_1bb9d10d9;
		}
		_iter_end_1bb9d10d9:;
	};
	return -1LL;;
}



inline jule::Str _1a756e53d_applyFmt(jule::Str _34817_fmt, jule::Slice<jule::Any> _34827_args) {
	_1c164cc40_StrBuilder _3499_s = static__1c164d191_New(32LL);;
	{
		auto expr = &(_34827_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb9d2a47:;
		if (it != expr_end) {
			jule::Any *_35012_arg = it;
			{
				jule::I64 _3519_i = _1a756e175_findNextFmt(_34817_fmt);;
				if ((_3519_i == -1LL)) {
					goto _iter_end_1bb9d2a47;
				};
				_1c164d702_WriteStr(&_3499_s, _34817_fmt.slice(0LL, _3519_i));
				_1c164d702_WriteStr(&_3499_s, _1a756ddab_argToStr((*(_35012_arg))));
				(_34817_fmt).mut_slice((_3519_i + 1LL));;
			}
			_iter_next_1bb9d2a47:;
			++it;
			goto _iter_begin_1bb9d2a47;
		}
		_iter_end_1bb9d2a47:;
	};
	_1c164d702_WriteStr(&_3499_s, _34817_fmt);
	return _1c164dee9_Str(&_3499_s);;
}



inline jule::Bool _1a75703a7_IsTopDirective(jule::Str _2219_directive) {
	return (_2219_directive.equal("pass", 4) || _2219_directive.equal("build", 5));;
}



inline jule::Bool _1a7571809_IsWindows(jule::Str _3714_os) {
	return _3714_os.equal("windows", 7);;
}



inline jule::Bool _1a7571ad4_IsDarwin(jule::Str _4013_os) {
	return _4013_os.equal("darwin", 6);;
}



inline jule::Bool _1a7571d9d_IsLinux(jule::Str _4312_os) {
	return _4312_os.equal("linux", 5);;
}



inline jule::Bool _1a75721de_IsI386(jule::Str _4611_arch) {
	return _4611_arch.equal("i386", 4);;
}



inline jule::Bool _1a75724a8_IsAmd64(jule::Str _4912_arch) {
	return _4912_arch.equal("amd64", 5);;
}



inline jule::Bool _1a7572772_IsArm64(jule::Str _5212_arch) {
	return _5212_arch.equal("arm64", 5);;
}



inline jule::Bool _1a7572a3b_IsUnix(jule::Str _5511_os) {
	return (_1a7571ad4_IsDarwin(_5511_os) || _1a7571d9d_IsLinux(_5511_os));;
}



inline jule::Bool _1a7572dd2_Is32Bit(jule::Str _5812_arch) {
	return _1a75721de_IsI386(_5812_arch);;
}



inline jule::Bool _1a757319b_Is64Bit(jule::Str _6112_arch) {
	return (_1a75724a8_IsAmd64(_6112_arch) || _1a7572772_IsArm64(_6112_arch));;
}



inline void _1a7638cab_init(void) {
	jule::Str _259_path = _1a76379d0_Executable();;
	if ((_259_path).empty()) {
		jule::panic(jule::Str::lit("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_1a76382d8_PathWd=({
			auto except = _1c16821b4_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str::lit("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_1a7638030_PathExec=_1a6945250_Dir(_259_path);
		_1a7637ccc_PathStdlib=_1a694455c_Join(jule::Slice<jule::Str>::make({_1a7638030_PathExec,jule::Str::lit("..", 2),jule::Str::lit("std", 3)}));
		_1a76385e6_PathApi=_1a694455c_Join(jule::Slice<jule::Str>::make({_1a7638030_PathExec,jule::Str::lit("..", 2),jule::Str::lit("api", 3),jule::Str::lit("jule.hpp", 8)}));
	};
}



inline jule::I64 _1dbaab815_LeadingZeros64(jule::U64 _6119_x) {
	return static_cast<jule::I64>((64LL - _1dbab4213_Len64(_6119_x)));;
}



inline jule::I64 _1dbaac76c_TrailingZeros(jule::U64 _8318_x) {
	;
	return static_cast<jule::I64>(_1dbaad493_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8318_x))));;
}



inline jule::I64 _1dbaad1c9_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1dbaabe31__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]));;
}



inline jule::I64 _1dbaad493_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1dbaac4e7__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]));;
}



inline jule::I64 _1dbab3e49_Len32(jule::U32 _35214_x) {
	jule::I64 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I64>(_35214_x)))));
	return __jule_func_result;;
}



inline jule::I64 _1dbab4213_Len64(jule::U64 _36614_x) {
	jule::I64 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I64>(_36614_x)))));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1dbab4ea0_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>(((_41510_x + _41518_y) + _41526_carry));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1dbab67a9_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5015_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5025_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5035_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5045_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5055_w0 = (_5015_x0 * _5035_y0);;
	jule::U64 _5065_t = ((_5025_x1 * _5035_y0) + (_5055_w0 >> 32LLU));;
	jule::U64 _5079_w1 = (_5065_t & 4294967295LLU);;
	jule::U64 _5085_w2 = (_5065_t >> 32LLU);;
	_5079_w1+=(_5015_x0 * _5045_y1);
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>((((_5025_x1 * _5045_y1) + _5085_w2) + (_5079_w1 >> 32LLU)));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((_49910_x * _49918_y));
	return __jule_func_result;;
}



inline jule::U32 _1a9514558_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _1a9514866_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _1a9514b30_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _1a9514e71_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _1a9517528_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1ac24dadb:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1dbabe5d6_IsInf(_4714_f, 0LL) || _1dbabdecb_IsNaN(_4714_f)) {
			_case_begin_1ac24db63:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1ac24da0e:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1dbabe8a0_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _569_x = _1a9514b30_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I64>(((_569_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_569_x=static_cast<jule::U64>((_569_x & 9227875636482146303LLU));
	_569_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1a9514e71_F64FromBits(_569_x));
	return __jule_func_result;;
}



inline jule::F64 _1dbabdbbd_NaN(void) {
	return static_cast<jule::F64>(_1a9514e71_F64FromBits(9221120237041090561LLU));;
}



inline jule::Bool _1dbabdecb_IsNaN(jule::F64 _5210_f) {
	return false;;
}



inline jule::F64 _1dbabe295_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return static_cast<jule::F64>(_1a9514e71_F64FromBits(9218868437227405312LLU));;
	};
	return static_cast<jule::F64>(_1a9514e71_F64FromBits(18442240474082181120LLU));;
}



inline jule::Bool _1dbabe5d6_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1dbabe8a0_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1dbac1d7a_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((_8214_x * 4503599627370496LLU));
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1dbac1385_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1dbabdecb_IsNaN(_1118_x) || _1dbabe5d6_IsInf(_1118_x, 1LL)) {
			_case_begin_1ac28c146:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1ac28c1bd:;
			{
				return static_cast<jule::F64>(_1dbabdbbd_NaN());;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1ac28c245:;
			{
				return static_cast<jule::F64>(_1dbabe295_Inf(-1LL));;
			}
		}
		_match_end_1ac28c07a:;
	};
	jule::F64 _1339_f1 = 0;;
	jule::I64 _13317_ki = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1a9517528_Frexp(_1118_x);
		_1339_f1 = __jule_assign_result.__jule_result_arg0;
		_13317_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1339_f1 < 0.7071067811865476)) {
		_1339_f1*=2LL;
		(_13317_ki)--;
	};
	jule::F64 _1385_f = (_1339_f1 - 1LL);;
	jule::F64 _1395_k = static_cast<jule::F64>(_13317_ki);;
	jule::F64 _1425_s = jule::div(_1385_f,(2LL + _1385_f));;
	jule::F64 _1435_s2 = (_1425_s * _1425_s);;
	jule::F64 _1445_s4 = (_1435_s2 * _1435_s2);;
	jule::F64 _1455_t1 = (_1435_s2 * (0.6666666666666735 + (_1445_s4 * (0.2857142874366239 + (_1445_s4 * (0.1818357216161805 + (_1445_s4 * 0.14798198605116586)))))));;
	jule::F64 _1465_t2 = (_1445_s4 * (0.3999999999940942 + (_1445_s4 * (0.22222198432149784 + (_1445_s4 * 0.15313837699209373)))));;
	jule::F64 _1475_R = (_1455_t1 + _1465_t2);;
	jule::F64 _1485_hfsq = ((0.5 * _1385_f) * _1385_f);;
	return static_cast<jule::F64>(((_1395_k * 0.6931471803691238) - ((_1485_hfsq - ((_1425_s * (_1485_hfsq + _1475_R)) + (_1395_k * 0.00000000019082149292705877))) - _1385_f)));;
}



inline jule::F64 _1dbac1d7a_Abs(jule::F64 _438_x) {
	return static_cast<jule::F64>(_1a9514e71_F64FromBits(static_cast<jule::U64>((_1a9514b30_F64Bits(_438_x) & 9223372036854775807LLU))));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1dbac8a74_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _465_absF = _1dbac1d7a_Abs(_449_f);;
	jule::F64 _479_i = 0LL;;
	if ((_465_absF > 4503599627370496LL)) {
		_479_i=_449_f;
	} else {
		_479_i=static_cast<jule::F64>((_465_absF + 4503599627370496LL));
		_479_i-=4503599627370496LL;
		while ((_479_i > _465_absF)) {
			{
				(_479_i)--;
			}
		_iter_next_1bbb31602:;
		}
		_iter_end_1bbb31602:;;
		if ((_449_f < 0LL)) {
			_479_i=static_cast<jule::F64>((-(_479_i)));
		};
	};
	__jule_func_result.__jule_result_arg0 = _479_i;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::F64>((_449_f - _479_i));
	return __jule_func_result;;
}



inline jule::F64 _1dbac937c_Log2(jule::F64 _449_x) {
	jule::F64 _455_frac = 0;;
	jule::I64 _4511_exp = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1a9517528_Frexp(_449_x);
		_455_frac = __jule_assign_result.__jule_result_arg0;
		_4511_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_455_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4511_exp - 1LL)));;
	};
	return static_cast<jule::F64>(((_1dbac1385_Log(_455_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4511_exp)));;
}



inline jule::Str _1dbb0386d_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I64 _7932_prec, jule::I64 _7943_bitSize) {
	return _1c164c459_StrFromBytes(_1dbb03e56_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _1dbb07300_max(static_cast<jule::I64>(((_7932_prec + 4LL) + 1LL)), 25LL), 0), _7913_f, _7921_fmt, _7932_prec, _7943_bitSize));;
}



inline jule::Slice<jule::U8> _1dbb03e56_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I64 _8758_prec, jule::I64 _8769_bitSize) {
	jule::U64 _889_bits = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1dbb0263b_floatInfo> _8913_flt = nullptr;;
	{
		auto &_match_expr{ _8769_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1bbcc6676:;
			{
				_889_bits=static_cast<jule::U64>(static_cast<jule::U64>(_1a9514558_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8733_val)))));
				_8913_flt=((jule::Ptr<_1dbb0263b_floatInfo>)((&(_1dbb02a37_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1bbcc64de:;
			{
				_889_bits=static_cast<jule::U64>(_1a9514b30_F64Bits(_8733_val));
				_8913_flt=((jule::Ptr<_1dbb0263b_floatInfo>)((&(_1dbb02d45_f64info))));
			}
		}
		else {
			_case_begin_1bbcc5e39:;
			{
				jule::panic(jule::Str::lit("std::conv: illegal bitSize", 26) + jule::Str("\nlocation: std/conv/ftoa.jule:98:9"));;
			}
		}
		_match_end_1bbcc5c91:;
	};
	jule::Bool _1015_neg = ((_889_bits >> ((*(_8913_flt))._field_expbits + (*(_8913_flt))._field_mantbits)) != 0LLU);;
	jule::I64 _1029_exp = (static_cast<jule::I64>((_889_bits >> (*(_8913_flt))._field_mantbits)) & static_cast<jule::I64>(((1LL << (*(_8913_flt))._field_expbits) - 1LL)));;
	jule::U64 _1039_mant = (_889_bits & ((static_cast<jule::U64>(1LLU) << (*(_8913_flt))._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _1029_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << (*(_8913_flt))._field_expbits) - 1LL)))) {
			_case_begin_1bbcca2a1:;
			{
				{
					
					if ((_1039_mant != 0LLU)) {
						_case_begin_1bbccc061:;
						{
							return jule::append(_8720_dst,_1c164bdc6_StrBytes(jule::Str::lit("nan", 3)));;
						}
					}
					else if (_1015_neg) {
						_case_begin_1bbccb3b2:;
						{
							return jule::append(_8720_dst,_1c164bdc6_StrBytes(jule::Str::lit("-inf", 4)));;
						}
					}
					else {
						_case_begin_1bbccb34b:;
						{
							return jule::append(_8720_dst,_1c164bdc6_StrBytes(jule::Str::lit("+inf", 4)));;
						}
					}
					_match_end_1bbccb280:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1bbcca3d3:;
			{
				(_1029_exp)++;
			}
		}
		else {
			_case_begin_1bbcc94ae:;
			{
				_1039_mant|=(static_cast<jule::U64>(1LLU) << (*(_8913_flt))._field_mantbits);
			}
		}
		_match_end_1bbcc9624:;
	};
	_1029_exp+=(*(_8913_flt))._field_bias;
	if ((_8743_fmt == 'b')) {
		return _1dbb063ed_fmtB(_8720_dst, _1015_neg, _1039_mant, _1029_exp, &((*(_8913_flt))));;
	};
	if (((_8743_fmt == 'x') || (_8743_fmt == 'X'))) {
		return _1dbb06b07_fmtX(_8720_dst, _8758_prec, _8743_fmt, _1015_neg, _1039_mant, _1029_exp, &((*(_8913_flt))));;
	};
	;
	_1dbb032da_decimalSlice _1379_digs = _1dbb032da_decimalSlice{};;
	jule::Bool _1389_ok = false;;
	jule::Bool _1405_shortest = (_8758_prec < 0LL);;
	if (_1405_shortest) {
		_1379_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_1dbb122a5_ryuFtoaShortest(&(_1379_digs), _1039_mant, static_cast<jule::I64>((_1029_exp - static_cast<jule::I64>((*(_8913_flt))._field_mantbits))), &((*(_8913_flt))));
		_1389_ok=true;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1bbcd0a15:;
				{
					_8758_prec=static_cast<jule::I64>(_1dbb07300_max(static_cast<jule::I64>((_1379_digs._field_nd - 1LL)), 0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1bbcd0a7b:;
				{
					_8758_prec=static_cast<jule::I64>(_1dbb07300_max(static_cast<jule::I64>((_1379_digs._field_nd - _1379_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1bbcd0ae2:;
				{
					_8758_prec=_1379_digs._field_nd;
				}
			}
			_match_end_1bbccec12:;
		};
	} else if ((_8743_fmt != 'f')) {
		jule::I64 _15713_digits = _8758_prec;;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1bbcd272b:;
				{
					(_15713_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1bbcd293a:;
				{
					if ((_8758_prec == 0LL)) {
						_8758_prec=1LL;
					};
					_15713_digits=_8758_prec;
				}
			}
			else {
				_case_begin_1bbcd28c4:;
				{
					_15713_digits=1LL;
				}
			}
			_match_end_1bbcd286e:;
		};
		if (((_8769_bitSize == 32LL) && (_15713_digits <= 9LL))) {
			_1379_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1dbb10eda_ryuFtoaFixed32(&(_1379_digs), static_cast<jule::U32>(static_cast<jule::U32>(_1039_mant)), static_cast<jule::I64>((_1029_exp - static_cast<jule::I64>((*(_8913_flt))._field_mantbits))), _15713_digits);
			_1389_ok=true;
		} else if ((_15713_digits <= 18LL)) {
			_1379_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1dbb11480_ryuFtoaFixed64(&(_1379_digs), _1039_mant, static_cast<jule::I64>((_1029_exp - static_cast<jule::I64>((*(_8913_flt))._field_mantbits))), _15713_digits);
			_1389_ok=true;
		};
	};
	if ((!(_1389_ok))) {
		return _1dbb045c7_bigFtoa(_8720_dst, _8758_prec, _8743_fmt, _1015_neg, _1039_mant, _1029_exp, &((*(_8913_flt))));;
	};
	return _1dbb04c9d_fmtDigits(_8720_dst, _1405_shortest, _1015_neg, _1379_digs, _8758_prec, _8743_fmt);;
}



inline jule::Slice<jule::U8> _1dbb045c7_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I64 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1885_mant, jule::I64 _18816_exp, _1dbb0263b_floatInfo* _18827_flt) {
	_1dbb160bc_decimal _1899_d = _1dbb160bc_decimal{};;
	_1dbb16474_assign(&_1899_d, _1885_mant);
	_1dbb1672c_shift(&_1899_d, static_cast<jule::I64>((_18816_exp - static_cast<jule::I64>((*(_18827_flt))._field_mantbits))));
	_1dbb032da_decimalSlice _1929_digs = _1dbb032da_decimalSlice{};;
	jule::Bool _1935_shortest = (_18733_prec < 0LL);;
	if (_1935_shortest) {
		_1dbb051ee_roundShortest(&(_1899_d), _1885_mant, _18816_exp, _18827_flt);
		_1929_digs=_1dbb032da_decimalSlice{._field_d=_1899_d._field_d.slice(0LL), ._field_nd=_1899_d._field_nd, ._field_dp=_1899_d._field_dp, };
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1bbcd8bd8:;
				{
					_18733_prec=static_cast<jule::I64>((_1929_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1bbcd99db:;
				{
					_18733_prec=static_cast<jule::I64>(_1dbb07300_max(static_cast<jule::I64>((_1929_digs._field_nd - _1929_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1bbcd9a52:;
				{
					_18733_prec=_1929_digs._field_nd;
				}
			}
			_match_end_1bbcd8d1a:;
		};
	} else {
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1bbcd89c9:;
				{
					_1dbb17046_round(&_1899_d, static_cast<jule::I64>((_18733_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1bbcd8a40:;
				{
					_1dbb17046_round(&_1899_d, static_cast<jule::I64>((_1899_d._field_dp + _18733_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1bbcd8ab7:;
				{
					if ((_18733_prec == 0LL)) {
						_18733_prec=1LL;
					};
					_1dbb17046_round(&_1899_d, _18733_prec);
				}
			}
			_match_end_1bbcd8930:;
		};
		_1929_digs=_1dbb032da_decimalSlice{._field_d=_1899_d._field_d.slice(0LL), ._field_nd=_1899_d._field_nd, ._field_dp=_1899_d._field_dp, };
	};
	return _1dbb04c9d_fmtDigits(_18716_dst, _1935_shortest, _18755_neg, _1929_digs, _18733_prec, _18744_fmt);;
}



inline jule::Slice<jule::U8> _1dbb04c9d_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1dbb032da_decimalSlice _2255_digs, jule::I64 _22529_prec, jule::U8 _22540_fmt) {
	{
		auto &_match_expr{ _22540_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1bbcde4c4:;
			{
				return _1dbb05793_fmtE(_22418_dst, _22447_neg, _2255_digs, _22529_prec, _22540_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1bbcde54b:;
			{
				return _1dbb05c7c_fmtF(_22418_dst, _22447_neg, _2255_digs, _22529_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1bbcde5c3:;
			{
				jule::I64 _23313_eprec = _22529_prec;;
				if (((_23313_eprec > _2255_digs._field_nd) && (_2255_digs._field_nd >= _2255_digs._field_dp))) {
					_23313_eprec=_2255_digs._field_nd;
				};
				if (_22431_shortest) {
					_23313_eprec=6LL;
				};
				jule::I64 _2439_exp = (_2255_digs._field_dp - 1LL);;
				if (((_2439_exp < -4LL) || (_2439_exp >= _23313_eprec))) {
					if ((_22529_prec > _2255_digs._field_nd)) {
						_22529_prec=_2255_digs._field_nd;
					};
					return _1dbb05793_fmtE(_22418_dst, _22447_neg, _2255_digs, static_cast<jule::I64>((_22529_prec - 1LL)), static_cast<jule::U8>(((_22540_fmt + 'e') - 'g')));;
				};
				if ((_22529_prec > _2255_digs._field_dp)) {
					_22529_prec=_2255_digs._field_nd;
				};
				return _1dbb05c7c_fmtF(_22418_dst, _22447_neg, _2255_digs, static_cast<jule::I64>(_1dbb07300_max(static_cast<jule::I64>((_22529_prec - _2255_digs._field_dp)), 0LL)));;
			}
		}
		_match_end_1bbcde42a:;
	};
	return jule::append(_22418_dst,jule::Slice<jule::U8>::make({'%',_22540_fmt}));;
}



inline void _1dbb051ee_roundShortest(_1dbb160bc_decimal* _26223_d, jule::U64 _26235_mant, jule::I64 _26246_exp, _1dbb0263b_floatInfo* _26257_flt) {
	if ((_26235_mant == 0LLU)) {
		(*(_26223_d))._field_nd=0LL;
		return;;
	};
	jule::I64 _2835_minexp = ((*(_26257_flt))._field_bias + 1LL);;
	if (((_26246_exp > _2835_minexp) && ((332LL * ((*(_26223_d))._field_dp - (*(_26223_d))._field_nd)) >= (100LL * (_26246_exp - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)))))) {
		return;;
	};
	_1dbb160bc_decimal _2929_upper = _1dbb160bc_decimal{};;
	_1dbb16474_assign(&_2929_upper, static_cast<jule::U64>(((_26235_mant << 1LLU) + 1LLU)));
	_1dbb1672c_shift(&_2929_upper, static_cast<jule::I64>(((_26246_exp - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)) - 1LL)));
	jule::U64 _3029_mantlo = static_cast<jule::U64>(0LLU);;
	jule::I64 _3039_explo = 0LL;;
	if (((_26235_mant > (1LLU << (*(_26257_flt))._field_mantbits)) || (_26246_exp == _2835_minexp))) {
		_3029_mantlo=static_cast<jule::U64>((_26235_mant - 1LLU));
		_3039_explo=_26246_exp;
	} else {
		_3029_mantlo=static_cast<jule::U64>(((_26235_mant << 1LLU) - 1LLU));
		_3039_explo=static_cast<jule::I64>((_26246_exp - 1LL));
	};
	_1dbb160bc_decimal _3119_lower = _1dbb160bc_decimal{};;
	_1dbb16474_assign(&_3119_lower, static_cast<jule::U64>(((_3029_mantlo << 1LLU) + 1LLU)));
	_1dbb1672c_shift(&_3119_lower, static_cast<jule::I64>(((_3039_explo - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)) - 1LL)));
	jule::Bool _3185_inclusive = ((_26235_mant & 1LL) == 0LLU);;
	jule::U8 _3319_upperdelta = static_cast<jule::U8>(0LLU);;
	jule::I64 _3359_ui = 0LL;;
	for (; ; (_3359_ui)++) {
		{
			jule::I64 _3409_mi = ((_3359_ui - _2929_upper._field_dp) + (*(_26223_d))._field_dp);;
			if ((_3409_mi >= (*(_26223_d))._field_nd)) {
				goto _iter_end_1bbceb217;
			};
			jule::I64 _3449_li = ((_3359_ui - _2929_upper._field_dp) + _3119_lower._field_dp);;
			jule::U8 _34513_l = static_cast<jule::U8>(48LLU);;
			if (((_3449_li >= 0LL) && (_3449_li < _3119_lower._field_nd))) {
				_34513_l=_3119_lower._field_d[_3449_li];
			};
			jule::U8 _34913_m = static_cast<jule::U8>(48LLU);;
			if ((_3409_mi >= 0LL)) {
				_34913_m=(*(_26223_d))._field_d[_3409_mi];
			};
			jule::U8 _35313_u = static_cast<jule::U8>(48LLU);;
			if ((_3359_ui < _2929_upper._field_nd)) {
				_35313_u=_2929_upper._field_d[_3359_ui];
			};
			jule::Bool _3619_okdown = ((_34513_l != _34913_m) || (_3185_inclusive && ((_3449_li + 1LL) == _3119_lower._field_nd)));;
			{
				
				if (((_3319_upperdelta == 0LLU) && ((_34913_m + 1LLU) < _35313_u))) {
					_case_begin_1bbd00caa:;
					{
						_3319_upperdelta=2LLU;
					}
				}
				else if (((_3319_upperdelta == 0LLU) && (_34913_m != _35313_u))) {
					_case_begin_1bbd00d21:;
					{
						_3319_upperdelta=1LLU;
					}
				}
				else if (((_3319_upperdelta == 1LLU) && ((_34913_m != '9') || (_35313_u != '0')))) {
					_case_begin_1bbd00d87:;
					{
						_3319_upperdelta=2LLU;
					}
				}
				_match_end_1bbd00c11:;
			};
			jule::Bool _3829_okup = ((_3319_upperdelta > 0LLU) && ((_3185_inclusive || (_3319_upperdelta > 1LLU)) || ((_3359_ui + 1LL) < _2929_upper._field_nd)));;
			{
				
				if ((_3619_okdown && _3829_okup)) {
					_case_begin_1bbd03890:;
					{
						_1dbb17046_round(_26223_d, static_cast<jule::I64>((_3409_mi + 1LL)));
						return;;
					}
				}
				else if (_3619_okdown) {
					_case_begin_1bbd03906:;
					{
						_1dbb169d5_roundDown(_26223_d, static_cast<jule::I64>((_3409_mi + 1LL)));
						return;;
					}
				}
				else if (_3829_okup) {
					_case_begin_1bbd0396c:;
					{
						_1dbb16c8d_roundUp(_26223_d, static_cast<jule::I64>((_3409_mi + 1LL)));
						return;;
					}
				}
				_match_end_1bbd037e6:;
			};
		}
	_iter_next_1bbceb217:;
	}
	_iter_end_1bbceb217:;;
}



inline jule::Slice<jule::U8> _1dbb05793_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1dbb032da_decimalSlice _40137_d, jule::I64 _40154_prec, jule::U8 _40165_fmt) {
	if (_40126_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _4089_ch = '0';;
	if ((_40137_d._field_nd != 0LL)) {
		_4089_ch=_40137_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4089_ch); };
	if ((_40154_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('.'); };
		jule::I64 _41713_i = 1LL;;
		jule::I64 _4189_m = _1dbb06e7b_min(_40137_d._field_nd, static_cast<jule::I64>((_40154_prec + 1LL)));;
		if ((_41713_i < _4189_m)) {
			(_40113_dst).append(_40137_d._field_d.slice(_41713_i, _4189_m));;
			_41713_i=_4189_m;
		};
		for (; (_41713_i <= _40154_prec); (_41713_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1bbd07ad6:;
		}
		_iter_end_1bbd07ad6:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_40165_fmt); };
	jule::I64 _4309_exp = (_40137_d._field_dp - 1LL);;
	if ((_40137_d._field_nd == 0LL)) {
		_4309_exp=0LL;
	};
	if ((_4309_exp < 0LL)) {
		_4089_ch='-';
		_4309_exp=static_cast<jule::I64>((-(_4309_exp)));
	} else {
		_4089_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4089_ch); };
	{
		
		if ((_4309_exp < 10LL)) {
			_case_begin_1bbd0a446:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(_4309_exp) + '0'))); };
			}
		}
		else if ((_4309_exp < 100LL)) {
			_case_begin_1bbd0ba52:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_4309_exp / 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_4309_exp % 10LL)) + '0'))); };
			}
		}
		else {
			_case_begin_1bbd0a3ad:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_4309_exp / 100LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_4309_exp / 10LL)) % 10LL) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_4309_exp % 10LL)) + '0'))); };
			}
		}
		_match_end_1bbd09676:;
	};
	return _40113_dst;;
}



inline jule::Slice<jule::U8> _1dbb05c7c_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1dbb032da_decimalSlice _45637_d, jule::I64 _45654_prec) {
	if (_45626_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('-'); };
	};
	if ((_45637_d._field_dp > 0LL)) {
		jule::I64 _46413_m = _1dbb06e7b_min(_45637_d._field_nd, _45637_d._field_dp);;
		(_45613_dst).append(_45637_d._field_d.slice(0LL, _46413_m));;
		for (; (_46413_m < _45637_d._field_dp); (_46413_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1bbd0d6e1:;
		}
		_iter_end_1bbd0d6e1:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
	};
	if ((_45654_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('.'); };
		jule::I64 _47513_i = 0LL;;
		for (; (_47513_i < _45654_prec); (_47513_i)++) {
			{
				jule::U8 _47717_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47813_j = (_45637_d._field_dp + _47513_i);;
				if (((0LL <= _47813_j) && (_47813_j < _45637_d._field_nd))) {
					_47717_ch=_45637_d._field_d[_47813_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push(_47717_ch); };
			}
		_iter_next_1bbd10737:;
		}
		_iter_end_1bbd10737:;;
	};
	return _45613_dst;;
}



inline jule::Slice<jule::U8> _1dbb063ed_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I64 _48952_exp, _1dbb0263b_floatInfo* _48963_flt) {
	if (_48926_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1dbba4677_fmtBits(_48913_dst, _48937_mant, 10LL, false, true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('p'); };
	_48952_exp-=static_cast<jule::I64>((*(_48963_flt))._field_mantbits);
	if ((_48952_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1dbba4677_fmtBits(_48913_dst, static_cast<jule::U64>(static_cast<jule::U64>(_48952_exp)), 10LL, (_48952_exp < 0LL), true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48913_dst;;
}



inline jule::Slice<jule::U8> _1dbb06b07_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I64 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5129_mant, jule::I64 _51224_exp, _1dbb0263b_floatInfo* _51235_flt) {
	if ((_5129_mant == 0LLU)) {
		_51224_exp=0LL;
	};
	_5129_mant<<=(60LLU - (*(_51235_flt))._field_mantbits);
	while (((_5129_mant != 0LLU) && ((_5129_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5129_mant<<=1LLU;
			(_51224_exp)--;
		}
	_iter_next_1bbd14b37:;
	}
	_iter_end_1bbd14b37:;;
	if (((_51126_prec >= 0LL) && (_51126_prec < 15LL))) {
		jule::U64 _5269_shift = static_cast<jule::U64>((_51126_prec << 2LLU));;
		jule::U64 _5279_extra = ((_5129_mant << _5269_shift) & 1152921504606846975LLU);;
		_5129_mant>>=(60LLU - _5269_shift);
		if (((_5279_extra | (_5129_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5129_mant)++;
		};
		_5129_mant<<=(60LLU - _5269_shift);
		if (((_5129_mant & 2305843009213693952LLU) != 0LLU)) {
			_5129_mant>>=1LLU;
			(_51224_exp)++;
		};
	};
	jule::Str _5409_hex = jule::Str();;
	if ((_51137_fmt == 'X')) {
		_5409_hex=jule::Str::lit("0123456789ABCDEF", 16);
	} else {
		_5409_hex=jule::Str::lit("0123456789abcdef", 16);
	};
	if (_51148_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_51137_fmt); __jule_push_dest.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5129_mant >> 60LLU) & 1LLU))))); };
	_5129_mant<<=4LLU;
	if (((_51126_prec < 0LL) && (_5129_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		while ((_5129_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5409_hex[static_cast<jule::I64>(((_5129_mant >> 60LLU) & 15LLU))]); };
				_5129_mant<<=4LLU;
			}
		_iter_next_1bbd1add5:;
		}
		_iter_end_1bbd1add5:;;
	} else if ((_51126_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		jule::I64 _56313_i = 0LL;;
		for (; (_56313_i < _51126_prec); (_56313_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5409_hex[static_cast<jule::I64>(((_5129_mant >> 60LLU) & 15LLU))]); };
				_5129_mant<<=4LLU;
			}
		_iter_next_1bbd1c568:;
		}
		_iter_end_1bbd1c568:;;
	};
	jule::U8 _5719_ch = static_cast<jule::U8>(80LLU);;
	if ((_51137_fmt == _1dbb07e38_lower(_51137_fmt))) {
		_5719_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5719_ch); };
	if ((_51224_exp < 0LL)) {
		_5719_ch='-';
		_51224_exp=static_cast<jule::I64>((-(_51224_exp)));
	} else {
		_5719_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5719_ch); };
	{
		
		if ((_51224_exp < 100LL)) {
			_case_begin_1bbd21d20:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51224_exp / 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51224_exp % 10LL)) + '0'))); };
			}
		}
		else if ((_51224_exp < 1000LL)) {
			_case_begin_1bbd19a0a:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51224_exp / 100LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_51224_exp / 10LL) % 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51224_exp % 10LL)) + '0'))); };
			}
		}
		else {
			_case_begin_1bbd1ee3e:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51224_exp / 1000LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_51224_exp / 100LL)) % 10LL) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_51224_exp / 10LL) % 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51224_exp % 10LL)) + '0'))); };
			}
		}
		_match_end_1bbd1e49e:;
	};
	return _51113_dst;;
}



inline jule::I64 _1dbb06e7b_min(jule::I64 _5968_a, jule::I64 _59616_b) {
	if ((_5968_a < _59616_b)) {
		return _5968_a;;
	};
	return _59616_b;;
}



inline jule::I64 _1dbb07300_max(jule::I64 _6038_a, jule::I64 _60316_b) {
	if ((_6038_a > _60316_b)) {
		return _6038_a;;
	};
	return _60316_b;;
}



inline jule::U8 _1dbb07e38_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | 32LL));;
}



inline __jule_tuple_u64__jule_tuple__1a8dd5127_ConvError _1dbb083ab_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__1a8dd5127_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (((*(_5119_s))).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_1bbd26253:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_1bbd26154:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_1dbb07e38_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_1bbd27ac3:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1dbb07e38_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_1bbd27e9c:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1dbb07e38_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_1bbd27793:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1bbd2772c:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_1bbd27661:;
					};
				};
			}
		}
		else {
			_case_begin_1bbd255d7:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1bbd25939:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=64LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _909_cutoff = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1bbd2bc5e:;
			{
				_909_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1bbd2a983:;
			{
				_909_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1bbd2b742:;
			{
				_909_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5131_base)) + 1LLU));
			}
		}
		_match_end_1bbd2b6dc:;
	};
	jule::U64 _1009_maxVal = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1bbd2b7a8:;
			{
				_1009_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1bbd2cd81:;
			{
				_1009_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1bbd2b9d9:;
	};
	jule::U64 _1089_n = static_cast<jule::U64>(0LLU);;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbd2dac9:;
		if (it != expr_end) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11013_d = static_cast<jule::U8>(0LLU);;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1bbd2ed0b:;
						{
							_11013_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _1dbb07e38_lower(_10912_c)) && (_1dbb07e38_lower(_10912_c) <= 'z'))) {
						_case_begin_1bbd2ebeb:;
						{
							_11013_d=static_cast<jule::U8>(((_1dbb07e38_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1bbd2e822:;
						{
							goto _iter_next_1bbd2dac9;
						}
					}
					else {
						_case_begin_1bbd2e7ab:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1bbd2e745:;
				};
				if ((_11013_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
					return __jule_func_result;;
				};
				if ((_1089_n >= _909_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _1009_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1089_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _1329_n1 = (_1089_n + static_cast<jule::U64>(_11013_d));;
				if (((_1329_n1 < _1089_n) || (_1329_n1 > _1009_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _1009_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1089_n=_1329_n1;
			}
			_iter_next_1bbd2dac9:;
			++it;
			goto _iter_begin_1bbd2dac9;
		}
		_iter_end_1bbd2dac9:;
	};
	__jule_func_result.__jule_result_arg0 = _1089_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1dbb087da_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bitSize) {
	jule::U64 _1475_un = 0;;
	jule::I64 _1479_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__1a8dd5127_ConvError __jule_assign_result = _1dbb083ab_parseUint(&(_14618_s), _14630_base, _14645_bitSize);
		_1475_un = __jule_assign_result.__jule_result_arg0;
		_1479_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1479_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(jule::Any(_1479_err, &__jule_any_type0));
	};
	return jule::Exceptional<jule::U64>(jule::Any(), _1475_un);;
}



inline jule::Exceptional<jule::I64> _1dbb08c91_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if ((_17217_s).empty()) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
	};
	jule::Bool _1789_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_1789_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _1879_un = 0;;
	jule::I64 _18713_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__1a8dd5127_ConvError __jule_assign_result = _1dbb083ab_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_1879_un = __jule_assign_result.__jule_result_arg0;
		_18713_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18713_err != static_cast<jule::I64>(0LL)) && (_18713_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(jule::Any(_18713_err, &__jule_any_type0));
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1965_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17240_bitSize - 1LL))));;
	if (((!(_1789_neg)) && (_1879_un >= _1965_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0));
	};
	if ((_1789_neg && (_1879_un > _1965_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0));
	};
	jule::I64 _2039_n = static_cast<jule::I64>(_1879_un);;
	if (_1789_neg) {
		_2039_n=static_cast<jule::I64>((-(_2039_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _2039_n);;
}



inline __jule_tuple_f64__jule_tuple_bool _1dbb09984_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1a9514e71_F64FromBits(9223372036854775808LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _575_clz = _1dbaab815_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_575_clz);
	;
	jule::U64 _609_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_575_clz));;
	jule::U64 _639_xHi = 0;;
	jule::U64 _6318_xLo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dbab67a9_Mul64(_4122_man, _1dbb0a7dc_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_639_xHi = __jule_assign_result.__jule_result_arg0;
		_6318_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_639_xHi & 511LLU) == 511LLU) && ((_6318_xLo + _4122_man) < _4122_man))) {
		jule::U64 _679_yHi = 0;;
		jule::U64 _6714_yLo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dbab67a9_Mul64(_4122_man, _1dbb0a7dc_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_679_yHi = __jule_assign_result.__jule_result_arg0;
			_6714_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _6813_mergedHi = 0;;
		jule::U64 _6823_mergedLo = 0;;
		({
			jule::U64 ___jule_assign_arg = _639_xHi;
			jule::U64 _1___jule_assign_arg = (_6318_xLo + _679_yHi);
			_6813_mergedHi = ___jule_assign_arg;
			_6823_mergedLo = _1___jule_assign_arg;
		});
		if ((_6823_mergedLo < _6318_xLo)) {
			(_6813_mergedHi)++;
		};
		if (((((_6813_mergedHi & 511LLU) == 511LLU) && ((_6823_mergedLo + 1LLU) == 0LLU)) && ((_6714_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _6813_mergedHi;
			jule::U64 _1___jule_assign_arg = _6823_mergedLo;
			_639_xHi = ___jule_assign_arg;
			_6318_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _795_msb = (_639_xHi >> 63LLU);;
	jule::U64 _809_retMantissa = (_639_xHi >> (_795_msb + 9LLU));;
	_609_retExp2-=(1LLU ^ _795_msb);
	if ((((_6318_xLo == 0LLU) && ((_639_xHi & 511LLU) == 0LLU)) && ((_809_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_809_retMantissa+=(_809_retMantissa & 1LLU);
	_809_retMantissa>>=1LLU;
	if (((_809_retMantissa >> 53LLU) > 0LLU)) {
		_809_retMantissa>>=1LLU;
		_609_retExp2+=1LLU;
	};
	if (((_609_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1039_retBits = ((_609_retExp2 << 52LLU) | (_809_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_1039_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1a9514e71_F64FromBits(_1039_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1dbb09dc4_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_1a9514866_F32FromBits(2147483648LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _1325_clz = _1dbaab815_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1325_clz);
	;
	jule::U64 _1359_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1325_clz));;
	jule::U64 _1389_x_hi = 0;;
	jule::U64 _13819_x_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dbab67a9_Mul64(_11022_man, _1dbb0a7dc_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_1389_x_hi = __jule_assign_result.__jule_result_arg0;
		_13819_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_1389_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13819_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _1429_y_hi = 0;;
		jule::U64 _14215_y_lo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dbab67a9_Mul64(_11022_man, _1dbb0a7dc_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_1429_y_hi = __jule_assign_result.__jule_result_arg0;
			_14215_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _14313_merged_hi = 0;;
		jule::U64 _14324_merged_lo = 0;;
		({
			jule::U64 ___jule_assign_arg = _1389_x_hi;
			jule::U64 _1___jule_assign_arg = (_13819_x_lo + _1429_y_hi);
			_14313_merged_hi = ___jule_assign_arg;
			_14324_merged_lo = _1___jule_assign_arg;
		});
		if ((_14324_merged_lo < _13819_x_lo)) {
			(_14313_merged_hi)++;
		};
		if (((((_14313_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14324_merged_lo + 1LLU) == 0LLU)) && ((_14215_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _14313_merged_hi;
			jule::U64 _1___jule_assign_arg = _14324_merged_lo;
			_1389_x_hi = ___jule_assign_arg;
			_13819_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1545_msb = (_1389_x_hi >> 63LLU);;
	jule::U64 _1559_retMantissa = (_1389_x_hi >> (_1545_msb + 38LLU));;
	_1359_retExp2-=(1LLU ^ _1545_msb);
	if ((((_13819_x_lo == 0LLU) && ((_1389_x_hi & 274877906943LLU) == 0LLU)) && ((_1559_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_1559_retMantissa+=(_1559_retMantissa & 1LLU);
	_1559_retMantissa>>=1LLU;
	if (((_1559_retMantissa >> 24LLU) > 0LLU)) {
		_1559_retMantissa>>=1LLU;
		_1359_retExp2+=1LLU;
	};
	if (((_1359_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1789_retBits = ((_1359_retExp2 << 23LLU) | (_1559_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_1789_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_1a9514866_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_1789_retBits))));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I64 _1dbb0bc1c_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix) {
	jule::I64 _479_n = _4638_prefix.len();;
	if ((_479_n > _4630_s.len())) {
		_479_n=static_cast<jule::I64>(_4630_s.len());
	};
	jule::I64 _519_i = 0LL;;
	for (; (_519_i < _479_n); (_519_i)++) {
		{
			jule::U8 _5313_c = _4630_s[_519_i];;
			if ((('A' <= _5313_c) && (_5313_c <= 'Z'))) {
				_5313_c+=32LL;
			};
			if ((_5313_c != _4638_prefix[_519_i])) {
				return _519_i;;
			};
		}
	_iter_next_1bbd5378b:;
	}
	_iter_end_1bbd5378b:;;
	return _479_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1dbb0c02a_special(jule::Str _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I64 _739_sign = 1LL;;
	jule::I64 _749_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1bbd5720c:;
			{
				if ((_6912_s[0LL] == '-')) {
					_739_sign=-1LL;
				};
				_749_nsign=1LL;
				{
					jule::Str* _8317_sp = (&(_6912_s));;
					(*(_8317_sp))=(*(_8317_sp)).slice(1LL);
				};
				goto _case_begin_1bbd57284;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1bbd57284:;
			{
				jule::I64 _8813_caseN = _1dbb0bc1c_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("infinity", 8));;
				if (((3LL < _8813_caseN) && (_8813_caseN < 8LL))) {
					_8813_caseN=3LL;
				};
				if (((_8813_caseN == 3LL) || (_8813_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1dbabe295_Inf(_739_sign));
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_749_nsign + __jule_func_result.__jule_result_arg1));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1bbd5730b:;
			{
				if ((_1dbb0bc1c_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1dbabdbbd_NaN());
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1bbd57141:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1dbb0c2e4_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1bbd5c784:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1bbd5ca09:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1bbd5c93d:;
	};
	jule::U64 _1229_base = static_cast<jule::U64>(10LLU);;
	jule::I64 _1239_maxMantDigits = 19LL;;
	jule::U8 _1249_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_1dbb07e38_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_1229_base=16LLU;
		_1239_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_1249_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _1329_sawdot = false;;
	jule::Bool _1339_sawdigits = false;;
	jule::I64 _1349_nd = 0LL;;
	jule::I64 _1359_ndMant = 0LL;;
	jule::I64 _1369_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _1389_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_1389_c == '_')) {
					_case_begin_1bbd62a20:;
					{
						goto _iter_next_1bbd5c1e0;
					}
				}
				else if ((_1389_c == '.')) {
					_case_begin_1bbd62a97:;
					{
						if (_1329_sawdot) {
							goto _julec_label_1bbd666d3;
						};
						_1329_sawdot=true;
						_1369_dp=_1349_nd;
						goto _iter_next_1bbd5c1e0;
					}
				}
				else if ((('0' <= _1389_c) && (_1389_c <= '9'))) {
					_case_begin_1bbd62b1e:;
					{
						_1339_sawdigits=true;
						if (((_1389_c == '0') && (_1349_nd == 0LL))) {
							(_1369_dp)--;
							goto _iter_next_1bbd5c1e0;
						};
						(_1349_nd)++;
						if ((_1359_ndMant < _1239_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_1229_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_1389_c - '0'));
							(_1359_ndMant)++;
						} else if ((_1389_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1bbd5c1e0;
					}
				}
				else if ((((_1229_base == 16LLU) && ('a' <= _1dbb07e38_lower(_1389_c))) && (_1dbb07e38_lower(_1389_c) <= 'f'))) {
					_case_begin_1bbd62b96:;
					{
						_1339_sawdigits=true;
						(_1349_nd)++;
						if ((_1359_ndMant < _1239_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_1dbb07e38_lower(_1389_c) - 'a') + 10LLU));
							(_1359_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1bbd5c1e0;
					}
				}
				_match_end_1bbd62943:;
			};
			goto _iter_end_1bbd5c1e0;
		}
	_iter_next_1bbd5c1e0:;
	}
	_iter_end_1bbd5c1e0:;;
	_julec_label_1bbd666d3:;
	if ((!(_1339_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_1329_sawdot))) {
		_1369_dp=_1349_nd;
	};
	if ((_1229_base == 16LLU)) {
		_1369_dp*=4LL;
		_1359_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_1dbb07e38_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _1249_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I64 _20113_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_20113_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _21113_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1bbd6a62c;
				};
				if ((_21113_e < 10000LL)) {
					_21113_e=static_cast<jule::I64>((((_21113_e * 10LL) + static_cast<jule::I64>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0'));
				};
			}
		_iter_next_1bbd6a62c:;
		}
		_iter_end_1bbd6a62c:;;
		_1369_dp+=(_21113_e * _20113_esign);
	} else if ((_1229_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=static_cast<jule::I64>((_1369_dp - _1359_ndMant));
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1dbb0dd73_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48616_mantissa >> _1dbb02d45_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(static_cast<jule::F64>(_48616_mantissa));
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F64>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_1bbd73e60:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_1bbd73ed7:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1dbb0d218_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((__jule_func_result.__jule_result_arg0 * _1dbb0d218_f64pow10[_48635_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_1bbd7405e:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(jule::div(__jule_func_result.__jule_result_arg0,_1dbb0d218_f64pow10[(-(_48635_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1bbd73910:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1dbb0e2a2_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_52016_mantissa >> _1dbb02a37_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(static_cast<jule::F32>(_52016_mantissa));
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F32>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_1bbd7834e:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_1bbd783c6:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1dbb0d559_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>((__jule_func_result.__jule_result_arg0 * _1dbb0d559_f32pow10[_52035_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_1bbd7844d:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(jule::div(__jule_func_result.__jule_result_arg0,_1dbb0d559_f32pow10[(-(_52035_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1bbd77cee:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__1a8dd5127_ConvError _1dbb0e846_atofHex(_1dbb0263b_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__1a8dd5127_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I64 _5575_maxExp = ((static_cast<jule::I64>((1LL << (*(_55613_flt))._field_expbits)) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I64 _5585_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I64>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && ((_55633_mantissa >> ((*(_55613_flt))._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55633_mantissa<<=1LLU;
			(_55652_exp)--;
		}
	_iter_next_1bbd7c793:;
	}
	_iter_end_1bbd7c793:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while (((_55633_mantissa >> ((1LLU + (*(_55613_flt))._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55633_mantissa=static_cast<jule::U64>(((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU)));
			(_55652_exp)++;
		}
	_iter_next_1bbd7deae:;
	}
	_iter_end_1bbd7deae:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5585_minExp - 2LL)))) {
		{
			_55633_mantissa=static_cast<jule::U64>(((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU)));
			(_55652_exp)++;
		}
	_iter_next_1bbd7e333:;
	}
	_iter_end_1bbd7e333:;;
	jule::U64 _5889_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa>>=2LLU;
	_5889_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_5889_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == (1LLU << (1LLU + (*(_55613_flt))._field_mantbits)))) {
			_55633_mantissa>>=1LLU;
			(_55652_exp)++;
		};
	};
	if (((_55633_mantissa >> (*(_55613_flt))._field_mantbits) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I64 _6039_err = static_cast<jule::I64>(0LL);;
	if ((_55652_exp > _5575_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << (*(_55613_flt))._field_mantbits)));
		_55652_exp=static_cast<jule::I64>((_5575_maxExp + 1LL));
		_6039_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _6109_bits = (_55633_mantissa & ((1LLU << (*(_55613_flt))._field_mantbits) - 1LLU));;
	_6109_bits|=(static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_55613_flt))._field_expbits) - 1LL)))) << (*(_55613_flt))._field_mantbits);
	if (_55662_neg) {
		_6109_bits|=((1LLU << (*(_55613_flt))._field_mantbits) << (*(_55613_flt))._field_expbits);
	};
	if (((*(_55613_flt)) == _1dbb02a37_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_1a9514866_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_6109_bits)))));
		__jule_func_result.__jule_result_arg1 = _6039_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1a9514e71_F64FromBits(_6109_bits));
	__jule_func_result.__jule_result_arg1 = _6039_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1a8dd5127_ConvError _1dbb0ec20_atof32(jule::Str _62111_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__1a8dd5127_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6239_val = 0;;
		jule::I64 _62314__n = 0;;
		jule::Bool _62318_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dbb0c02a_special(_62111_s);
			_6239_val = __jule_assign_result.__jule_result_arg0;
			_62314__n = __jule_assign_result.__jule_result_arg1;
			_62318_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62318_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_6239_val));
			__jule_func_result.__jule_result_arg1 = _62314__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6295_mantissa = 0;;
	jule::I64 _62915_exp = 0;;
	jule::Bool _62920_neg = false;;
	jule::Bool _62925_trunc = false;;
	jule::Bool _62932_hex = false;;
	jule::I64 _62937__n = 0;;
	jule::Bool _62945_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dbb0c2e4_readFloat(&(_62111_s));
		_6295_mantissa = __jule_assign_result.__jule_result_arg0;
		_62915_exp = __jule_assign_result.__jule_result_arg1;
		_62920_neg = __jule_assign_result.__jule_result_arg2;
		_62925_trunc = __jule_assign_result.__jule_result_arg3;
		_62932_hex = __jule_assign_result.__jule_result_arg4;
		_62937__n = __jule_assign_result.__jule_result_arg5;
		_62945_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62937__n;
	if ((!(_62945_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_62932_hex) {
		jule::F64 _63613_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__1a8dd5127_ConvError __jule_assign_result = _1dbb0e846_atofHex(&(_1dbb02a37_f32info), _6295_mantissa, _62915_exp, _62920_neg, _62925_trunc);
			_63613_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_63613_ff));
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62925_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1dbb0e2a2_atof32exact(_6295_mantissa, _62915_exp, _62920_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62945_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62945_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1dbb09dc4_eiselLemire32(_6295_mantissa, _62915_exp, _62920_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62945_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62945_ok) {
			if ((!(_62925_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _65817_fUp = static_cast<jule::F32>(0.0f);;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1dbb09dc4_eiselLemire32(static_cast<jule::U64>((_6295_mantissa + 1LLU)), _62915_exp, _62920_neg);
				_65817_fUp = __jule_assign_result.__jule_result_arg0;
				_62945_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62945_ok && (__jule_func_result.__jule_result_arg0 == _65817_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1dbb160bc_decimal _6679_d = _1dbb160bc_decimal{};;
	if ((!(_1dbb0c987_set(&_6679_d, _1c164bdc6_StrBytes(_62111_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _6715_b = 0;;
	jule::Bool _6718_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1dbb0ccc8_floatBits(&_6679_d, &(_1dbb02a37_f32info));
		_6715_b = __jule_assign_result.__jule_result_arg0;
		_6718_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_1a9514866_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_6715_b))));
	if (_6718_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a8dd5127_ConvError _1dbb0eed9_atof64(jule::Str _67911_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1a8dd5127_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6819_val = 0;;
		jule::I64 _68114__n = 0;;
		jule::Bool _68118_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dbb0c02a_special(_67911_s);
			_6819_val = __jule_assign_result.__jule_result_arg0;
			_68114__n = __jule_assign_result.__jule_result_arg1;
			_68118_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68118_ok) {
			__jule_func_result.__jule_result_arg0 = _6819_val;
			__jule_func_result.__jule_result_arg1 = _68114__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6875_mantissa = 0;;
	jule::I64 _68715_exp = 0;;
	jule::Bool _68720_neg = false;;
	jule::Bool _68725_trunc = false;;
	jule::Bool _68732_hex = false;;
	jule::I64 _68737__n = 0;;
	jule::Bool _68745_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dbb0c2e4_readFloat(&(_67911_s));
		_6875_mantissa = __jule_assign_result.__jule_result_arg0;
		_68715_exp = __jule_assign_result.__jule_result_arg1;
		_68720_neg = __jule_assign_result.__jule_result_arg2;
		_68725_trunc = __jule_assign_result.__jule_result_arg3;
		_68732_hex = __jule_assign_result.__jule_result_arg4;
		_68737__n = __jule_assign_result.__jule_result_arg5;
		_68745_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68737__n;
	if ((!(_68745_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_68732_hex) {
		({
			__jule_tuple_f64__jule_tuple__1a8dd5127_ConvError __jule_assign_result = _1dbb0e846_atofHex(&(_1dbb02d45_f64info), _6875_mantissa, _68715_exp, _68720_neg, _68725_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68725_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1dbb0dd73_atof64exact(_6875_mantissa, _68715_exp, _68720_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68745_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68745_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1dbb09984_eiselLemire64(_6875_mantissa, _68715_exp, _68720_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68745_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68745_ok) {
			if ((!(_68725_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _71517_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1dbb09984_eiselLemire64(static_cast<jule::U64>((_6875_mantissa + 1LLU)), _68715_exp, _68720_neg);
				_71517_fUp = __jule_assign_result.__jule_result_arg0;
				_68745_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68745_ok && (__jule_func_result.__jule_result_arg0 == _71517_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1dbb160bc_decimal _7249_d = _1dbb160bc_decimal{};;
	if ((!(_1dbb0c987_set(&_7249_d, _1c164bdc6_StrBytes(_67911_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _7285_b = 0;;
	jule::Bool _7288_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1dbb0ccc8_floatBits(&_7249_d, &(_1dbb02d45_f64info));
		_7285_b = __jule_assign_result.__jule_result_arg0;
		_7288_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1a9514e71_F64FromBits(_7285_b));
	if (_7288_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a8dd5127_ConvError _1dbb1035d_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1a8dd5127_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _7389_f = 0;;
		jule::I64 _73812_n = 0;;
		jule::I64 _73815_err = 0LL;;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__1a8dd5127_ConvError __jule_assign_result = _1dbb0ec20_atof32((*(_73622_s)));
			_7389_f = __jule_assign_result.__jule_result_arg0;
			_73812_n = __jule_assign_result.__jule_result_arg1;
			_73815_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_7389_f));
		__jule_func_result.__jule_result_arg1 = _73812_n;
		__jule_func_result.__jule_result_arg2 = _73815_err;
		return __jule_func_result;;
	};
	jule::F64 _7415_f = 0;;
	jule::I64 _7418_n = 0;;
	jule::I64 _74111_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1a8dd5127_ConvError __jule_assign_result = _1dbb0eed9_atof64((*(_73622_s)));
		_7415_f = __jule_assign_result.__jule_result_arg0;
		_7418_n = __jule_assign_result.__jule_result_arg1;
		_74111_err = __jule_assign_result.__jule_result_arg2;
	});
	__jule_func_result.__jule_result_arg0 = _7415_f;
	__jule_func_result.__jule_result_arg1 = _7418_n;
	__jule_func_result.__jule_result_arg2 = _74111_err;
	return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1dbb106d2_ParseFloat(jule::Str _76915_s, jule::I64 _76923_bitSize) {
	jule::F64 _7705_f = 0;;
	jule::I64 _7708_n = 0;;
	jule::I64 _77011_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1a8dd5127_ConvError __jule_assign_result = _1dbb1035d_parseFloatPrefix(&(_76915_s), _76923_bitSize);
		_7705_f = __jule_assign_result.__jule_result_arg0;
		_7708_n = __jule_assign_result.__jule_result_arg1;
		_77011_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_7708_n != _76915_s.len()) && ((_77011_err == static_cast<jule::I64>(0LL)) || (_77011_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
	};
	if ((_77011_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(jule::Any(_77011_err, &__jule_any_type0));
	};
	return jule::Exceptional<jule::F64>(jule::Any(), _7705_f);;
}



inline void _1dbb10eda_ryuFtoaFixed32(_1dbb032da_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _629_e2 = _4956_exp;;
	jule::I64 _635_b = _1dbab3e49_Len32(_4945_mant);;
	if ((_635_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _635_b));
		_629_e2+=(static_cast<jule::I64>(_635_b) - 25LL);
	};
	jule::I64 _745_q = (((-(_1dbb1256e_mulByLog2Log10(static_cast<jule::I64>((_629_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _799_exact = ((_745_q <= 27LL) && (_745_q >= 0LL));;
	jule::U32 _819_di = 0;;
	jule::I64 _8113_dexp2 = 0;;
	jule::Bool _8124_d0 = false;;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dbb13e33_mult64bitPow10(_4945_mant, _629_e2, _745_q);
		_819_di = __jule_assign_result.__jule_result_arg0;
		_8113_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8124_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8113_dexp2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_745_q < 0LL) && (_745_q >= -10LL)) && _1dbb146d6_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)), static_cast<jule::I64>((-(_745_q)))))) {
		_799_exact=true;
		_8124_d0=true;
	};
	jule::U64 _945_extra = static_cast<jule::U64>((-(_8113_dexp2)));;
	jule::U32 _955_extraMask = static_cast<jule::U32>(((1LL << _945_extra) - 1LL));;
	jule::U32 _979_dfrac = static_cast<jule::U32>(0LLU);;
	({
		jule::U32 ___jule_assign_arg = static_cast<jule::U32>((_819_di >> _945_extra));
		jule::U32 _1___jule_assign_arg = static_cast<jule::U32>((_819_di & _955_extraMask));
		_819_di = ___jule_assign_arg;
		_979_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _999_roundUp = false;;
	if (_799_exact) {
		_999_roundUp=(((_979_dfrac > (1LLU << (_945_extra - 1LLU))) || ((_979_dfrac == (1LLU << (_945_extra - 1LLU))) && (!(_8124_d0)))) || (((_979_dfrac == (1LLU << (_945_extra - 1LLU))) && _8124_d0) && ((_819_di & 1LLU) == 1LLU)));
	} else {
		_999_roundUp=((_979_dfrac >> (_945_extra - 1LLU)) == 1LLU);
	};
	if ((_979_dfrac != 0LLU)) {
		_8124_d0=false;
	};
	_1dbb11ccc_formatDecimal(_4924_d, static_cast<jule::U64>(static_cast<jule::U64>(_819_di)), (!(_8124_d0)), _999_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_745_q;
}



inline void _1dbb11480_ryuFtoaFixed64(_1dbb032da_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _1319_e2 = _12156_exp;;
	jule::I64 _1325_b = _1dbab4213_Len64(_12145_mant);;
	if ((_1325_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U64>((55LL - _1325_b))));
		_1319_e2+=(static_cast<jule::I64>(_1325_b) - 55LL);
	};
	jule::I64 _1465_q = (((-(_1dbb1256e_mulByLog2Log10(static_cast<jule::I64>((_1319_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _1519_exact = ((_1465_q <= 55LL) && (_1465_q >= 0LL));;
	jule::U64 _1539_di = 0;;
	jule::I64 _15313_dexp2 = 0;;
	jule::Bool _15324_d0 = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dbb14362_mult128bitPow10(_12145_mant, _1319_e2, _1465_q);
		_1539_di = __jule_assign_result.__jule_result_arg0;
		_15313_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15324_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15313_dexp2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1465_q < 0LL) && (_1465_q >= -22LL)) && _1dbb146d6_divisibleByPow5(_12145_mant, static_cast<jule::I64>((-(_1465_q)))))) {
		_1519_exact=true;
		_15324_d0=true;
	};
	jule::U64 _1665_extra = static_cast<jule::U64>((-(_15313_dexp2)));;
	jule::U64 _1675_extraMask = static_cast<jule::U64>(((1LL << _1665_extra) - 1LL));;
	jule::U64 _1699_dfrac = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_1539_di >> _1665_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_1539_di & _1675_extraMask));
		_1539_di = ___jule_assign_arg;
		_1699_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _1719_roundUp = false;;
	if (_1519_exact) {
		_1719_roundUp=(((_1699_dfrac > (1LLU << (_1665_extra - 1LLU))) || ((_1699_dfrac == (1LLU << (_1665_extra - 1LLU))) && (!(_15324_d0)))) || (((_1699_dfrac == (1LLU << (_1665_extra - 1LLU))) && _15324_d0) && ((_1539_di & 1LLU) == 1LLU)));
	} else {
		_1719_roundUp=((_1699_dfrac >> (_1665_extra - 1LLU)) == 1LLU);
	};
	if ((_1699_dfrac != 0LLU)) {
		_15324_d0=false;
	};
	_1dbb11ccc_formatDecimal(_12124_d, _1539_di, (!(_15324_d0)), _1719_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1465_q;
}



inline void _1dbb11ccc_formatDecimal(_1dbb032da_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2015_max = _1dbb117c1_u64pow10[_20088_prec];;
	jule::I64 _2029_trimmed = 0LL;;
	while ((_20044_m >= _2015_max)) {
		{
			jule::U64 _2049_a = 0;;
			jule::U64 _20412_b = 0;;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_2049_a = ___jule_assign_arg;
				_20412_b = _1___jule_assign_arg;
			});
			_20044_m=_2049_a;
			(_2029_trimmed)++;
			if ((_20412_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20412_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20412_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1bbdb3c4c:;
	}
	_iter_end_1bbdb3c4c:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2015_max)) {
		_20044_m/=10LLU;
		(_2029_trimmed)++;
	};
	jule::U64 _2299_n = static_cast<jule::U64>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20088_prec));
	jule::U64 _2319_v = _20044_m;;
	while ((_2319_v >= 100LLU)) {
		{
			jule::U64 _23313_v1 = static_cast<jule::U64>(0LLU);;
			jule::U64 _23413_v2 = static_cast<jule::U64>(0LLU);;
			if (((_2319_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_2319_v) / 100LLU)));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_2319_v) % 100LL)));
					_23313_v1 = ___jule_assign_arg;
					_23413_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_2319_v / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_2319_v % 100LL));
					_23313_v1 = ___jule_assign_arg;
					_23413_v2 = _1___jule_assign_arg;
				});
			};
			_2299_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I64>((_2299_n + 1LLU))]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(((2LL * _23413_v2) + 1LLU)));
			(*(_20023_d))._field_d[static_cast<jule::I64>(_2299_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((2LL * _23413_v2)));
			_2319_v=_23313_v1;
		}
	_iter_next_1bbdbb57e:;
	}
	_iter_end_1bbdbb57e:;;
	if ((_2319_v > 0LLU)) {
		(_2299_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2299_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(((2LL * _2319_v) + 1LLU)));
	};
	if ((_2319_v >= 10LLU)) {
		(_2299_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2299_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((2LL * _2319_v)));
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_2029_trimmed)++;
		}
	_iter_next_1bbdc2189:;
	}
	_iter_end_1bbdc2189:;;
	(*(_20023_d))._field_dp=static_cast<jule::I64>(((*(_20023_d))._field_nd + _2029_trimmed));
}



inline void _1dbb122a5_ryuFtoaShortest(_1dbb032da_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1dbb0263b_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1dbaad493_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_1dbb13383_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _2735_ml = 0;;
	jule::U64 _2739_mc = 0;;
	jule::U64 _27313_mu = 0;;
	jule::I64 _27321_e2 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1dbb12c67_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_2735_ml = __jule_assign_result.__jule_result_arg0;
		_2739_mc = __jule_assign_result.__jule_result_arg1;
		_27313_mu = __jule_assign_result.__jule_result_arg2;
		_27321_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27321_e2 == 0LL)) {
		_1dbb13383_ryuDigits(_26125_d, _2735_ml, _2739_mc, _27313_mu, true, false);
		return;;
	};
	jule::I64 _2795_q = (_1dbb1256e_mulByLog2Log10(static_cast<jule::I64>((-(_27321_e2)))) + 1LL);;
	jule::U64 _2839_dl = static_cast<jule::U64>(0LLU);;
	jule::U64 _2849_dc = static_cast<jule::U64>(0LLU);;
	jule::U64 _2859_du = static_cast<jule::U64>(0LLU);;
	jule::Bool _2869_dl0 = false;;
	jule::Bool _2879_dc0 = false;;
	jule::Bool _2889_du0 = false;;
	if (((*(_26168_flt)) == _1dbb02a37_f32info)) {
		jule::U32 _29013_dl32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _29113_dc32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _29213_du32 = static_cast<jule::U32>(0LLU);;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dbb13e33_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_2735_ml)), _27321_e2, _2795_q);
			_29013_dl32 = __jule_assign_result.__jule_result_arg0;
			_2869_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dbb13e33_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_2739_mc)), _27321_e2, _2795_q);
			_29113_dc32 = __jule_assign_result.__jule_result_arg0;
			_2879_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dbb13e33_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27313_mu)), _27321_e2, _2795_q);
			_29213_du32 = __jule_assign_result.__jule_result_arg0;
			_27321_e2 = __jule_assign_result.__jule_result_arg1;
			_2889_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29013_dl32));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29113_dc32));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29213_du32));
			_2839_dl = ___jule_assign_arg;
			_2849_dc = _1___jule_assign_arg;
			_2859_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dbb14362_mult128bitPow10(_2735_ml, _27321_e2, _2795_q);
			_2839_dl = __jule_assign_result.__jule_result_arg0;
			_2869_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dbb14362_mult128bitPow10(_2739_mc, _27321_e2, _2795_q);
			_2849_dc = __jule_assign_result.__jule_result_arg0;
			_2879_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dbb14362_mult128bitPow10(_27313_mu, _27321_e2, _2795_q);
			_2859_du = __jule_assign_result.__jule_result_arg0;
			_27321_e2 = __jule_assign_result.__jule_result_arg1;
			_2889_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27321_e2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2795_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_2869_dl0 = ___jule_assign_arg;
			_2879_dc0 = _1___jule_assign_arg;
			_2889_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2795_q < 0LL) && (_2795_q >= -24LL))) {
		if (_1dbb146d6_divisibleByPow5(_2735_ml, static_cast<jule::I64>((-(_2795_q))))) {
			_2869_dl0=true;
		};
		if (_1dbb146d6_divisibleByPow5(_2739_mc, static_cast<jule::I64>((-(_2795_q))))) {
			_2879_dc0=true;
		};
		if (_1dbb146d6_divisibleByPow5(_27313_mu, static_cast<jule::I64>((-(_2795_q))))) {
			_2889_du0=true;
		};
	};
	jule::U64 _3255_extra = static_cast<jule::U64>((-(_27321_e2)));;
	jule::U64 _3265_extraMask = static_cast<jule::U64>(((1LL << _3255_extra) - 1LL));;
	jule::U64 _3289_fracl = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_2839_dl >> _3255_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_2839_dl & _3265_extraMask));
		_2839_dl = ___jule_assign_arg;
		_3289_fracl = _1___jule_assign_arg;
	});
	jule::U64 _3309_fracc = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_2849_dc >> _3255_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_2849_dc & _3265_extraMask));
		_2849_dc = ___jule_assign_arg;
		_3309_fracc = _1___jule_assign_arg;
	});
	jule::U64 _3329_fracu = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_2859_du >> _3255_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_2859_du & _3265_extraMask));
		_2859_du = ___jule_assign_arg;
		_3329_fracu = _1___jule_assign_arg;
	});
	jule::Bool _3389_uok = ((!(_2889_du0)) || (_3329_fracu > 0LLU));;
	if ((_2889_du0 && (_3329_fracu == 0LLU))) {
		_3389_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_3389_uok))) {
		(_2859_du)--;
	};
	jule::Bool _3479_cup = false;;
	if (_2879_dc0) {
		_3479_cup=((_3309_fracc > (1LLU << (_3255_extra - 1LLU))) || ((_3309_fracc == (1LLU << (_3255_extra - 1LLU))) && ((_2849_dc & 1LLU) == 1LLU)));
	} else {
		_3479_cup=((_3309_fracc >> (_3255_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3615_lok = ((_2869_dl0 && (_3289_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3615_lok))) {
		(_2839_dl)++;
	};
	jule::Bool _3665_c0 = (_2879_dc0 && (_3309_fracc == 0LLU));;
	_1dbb13383_ryuDigits(_26125_d, _2839_dl, _2849_dc, _2859_du, _3665_c0, _3479_cup);
	(*(_26125_d))._field_dp-=_2795_q;
}



inline jule::I64 _1dbb1256e_mulByLog2Log10(jule::I64 _37719_x) {
	return static_cast<jule::I64>(((_37719_x * 78913LL) >> 18LL));;
}



inline jule::I64 _1dbb12838_mulByLog10Log2(jule::I64 _38719_x) {
	return static_cast<jule::I64>(((_38719_x * 108853LL) >> 15LL));;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1dbb12c67_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1dbb0263b_floatInfo* _3966_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << (*(_3966_flt))._field_mantbits)) || (_39529_exp == (((*(_3966_flt))._field_bias + 1LL) - static_cast<jule::I64>((*(_3966_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((2LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) + 1LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 1LL));
	} else {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((4LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) + 2LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 2LL));
	};
	return __jule_func_result;;
}



inline void _1dbb13383_ryuDigits(_1dbb032da_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _4109_lhi = 0;;
	jule::U32 _41014_llo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1dbb149a0_divmod1e9(_40936_lower);
		_4109_lhi = __jule_assign_result.__jule_result_arg0;
		_41014_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4115_chi = 0;;
	jule::U32 _41110_clo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1dbb149a0_divmod1e9(_40948_central);
		_4115_chi = __jule_assign_result.__jule_result_arg0;
		_41110_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4125_uhi = 0;;
	jule::U32 _41210_ulo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1dbb149a0_divmod1e9(_40962_upper);
		_4125_uhi = __jule_assign_result.__jule_result_arg0;
		_41210_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4125_uhi == 0LLU)) {
		_1dbb13a04_ryuDigits32(_40919_d, _41014_llo, _41110_clo, _41210_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_4109_lhi < _4125_uhi)) {
		if ((_41014_llo != 0LLU)) {
			(_4109_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41110_clo == 0LLU));
		_40992_cup=((_41110_clo > 500000000LL) || ((_41110_clo == 500000000LL) && _40992_cup));
		_1dbb13a04_ryuDigits32(_40919_d, _4109_lhi, _4115_chi, _4125_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U64 _42813_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42913_v = _4115_chi;;
		while ((_42913_v > 0LLU)) {
			{
				jule::U32 _43113_v1 = 0;;
				jule::U32 _43117_v2 = 0;;
				({
					jule::U32 ___jule_assign_arg = (_42913_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_42913_v % 10LL);
					_43113_v1 = ___jule_assign_arg;
					_43117_v2 = _1___jule_assign_arg;
				});
				_42913_v=_43113_v1;
				(_42813_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I64>(_42813_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43117_v2 + '0')));
			}
		_iter_next_1bbde0916:;
		}
		_iter_end_1bbde0916:;;
		(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(static_cast<jule::I64>(_42813_n));
		(*(_40919_d))._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42813_n)));
		_1dbb13a04_ryuDigits32(_40919_d, _41014_llo, _41110_clo, _41210_ulo, _40978_c0, _40992_cup, static_cast<jule::I64>(((*(_40919_d))._field_nd + 8LL)));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1bbde3474:;
	}
	_iter_end_1bbde3474:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(1LL);
		}
	_iter_next_1bbde3067:;
	}
	_iter_end_1bbde3067:;;
}



inline void _1dbb13a04_ryuDigits32(_1dbb032da_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		(*(_45421_d))._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _4609_trimmed = 0LL;;
	jule::I64 _4639_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _4709_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47113_c = 0;;
			jule::U32 _47120_cdigit = 0;;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_47113_c = ___jule_assign_arg;
				_47120_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _4729_u = (_4559_upper / 10LLU);;
			if ((_4709_l > _4729_u)) {
				goto _iter_end_1bbde5ca1;
			};
			if (((_4709_l == (_47113_c + 1LLU)) && (_47113_c < _4729_u))) {
				(_47113_c)++;
				_47120_cdigit=0LLU;
				_45539_cup=false;
			};
			(_4609_trimmed)++;
			_45525_c0=(_45525_c0 && (_4639_cNextDigit == 0LL));
			_4639_cNextDigit=static_cast<jule::I64>(static_cast<jule::I64>(_47120_cdigit));
			({
				jule::U32 ___jule_assign_arg = _4709_l;
				jule::U32 _1___jule_assign_arg = _47113_c;
				jule::U32 _2___jule_assign_arg = _4729_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4559_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1bbde5ca1:;
	}
	_iter_end_1bbde5ca1:;;
	if ((_4609_trimmed > 0LL)) {
		_45539_cup=(((_4639_cNextDigit > 5LL) || ((_4639_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_4639_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_4609_trimmed;
	jule::U32 _5099_v = _45458_central;;
	jule::I64 _5109_n = _45554_endindex;;
	while ((_5109_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _5129_v1 = 0;;
			jule::U32 _51213_v2 = 0;;
			({
				jule::U32 ___jule_assign_arg = (_5099_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_5099_v % 100LL);
				_5129_v1 = ___jule_assign_arg;
				_51213_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_5109_n]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(((2LL * _51213_v2) + 1LLU)));
			(*(_45421_d))._field_d[(_5109_n - 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((2LL * _51213_v2)));
			_5109_n-=2LL;
			_5099_v=_5129_v1;
		}
	_iter_next_1bbdec15e:;
	}
	_iter_end_1bbdec15e:;;
	if ((_5109_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_5109_n]=static_cast<jule::U8>(static_cast<jule::U8>((_5099_v + '0')));
	};
	(*(_45421_d))._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	(*(_45421_d))._field_dp=static_cast<jule::I64>(((*(_45421_d))._field_nd + _4609_trimmed));
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1dbb13e33_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_53419_m << 6LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_53431_e2 - 6LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str::lit("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _5439_pow = _1dbb0a7dc_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_5439_pow+=1LLU;
	};
	jule::U64 _5485_hi = 0;;
	jule::U64 _5489_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dbab67a9_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)), _5439_pow);
		_5485_hi = __jule_assign_result.__jule_result_arg0;
		_5489_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1dbb12838_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>(((_5485_hi << 7LLU) | (_5489_lo >> 57LLU))));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_5489_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1dbb14362_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>((_56220_m << 8LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_56232_e2 - 8LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str::lit("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _5719_pow = _1dbb0a7dc_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_5719_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1dbb12838_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _5795_l1 = 0;;
	jule::U64 _5799_l0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dbab67a9_Mul64(_56220_m, _5719_pow[0LL]);
		_5795_l1 = __jule_assign_result.__jule_result_arg0;
		_5799_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5809_h1 = 0;;
	jule::U64 _58013_h0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dbab67a9_Mul64(_56220_m, _5719_pow[1LL]);
		_5809_h1 = __jule_assign_result.__jule_result_arg0;
		_58013_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5815_mid = 0;;
	jule::U64 _58110_carry = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dbab4ea0_Add64(_5795_l1, _58013_h0, 0LLU);
		_5815_mid = __jule_assign_result.__jule_result_arg0;
		_58110_carry = __jule_assign_result.__jule_result_arg1;
	});
	_5809_h1+=_58110_carry;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_5809_h1 << 9LLU) | (_5815_mid >> 55LLU)));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_5815_mid << 9LLU) == 0LLU) && (_5799_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1dbb146d6_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I64 _5909_i = 0LL;;
	for (; (_5909_i < _58632_k); (_5909_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m/=5LLU;
		}
	_iter_next_1bbe0a568:;
	}
	_iter_end_1bbe0a568:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1dbb149a0_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL)));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL)));
		return __jule_func_result;;
	};
}



inline void _1dbb1791a_trim(_1dbb160bc_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_1bbe0dbdc:;
	}
	_iter_end_1bbe0dbdc:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _1dbb17c06_rightShift(_1dbb160bc_decimal* _28420_a, jule::U64 _28432_k) {
	jule::I64 _2859_r = 0LL;;
	jule::I64 _2869_w = 0LL;;
	jule::U64 _2899_n = static_cast<jule::U64>(0LLU);;
	for (; ((_2899_n >> _28432_k) == 0LLU); (_2859_r)++) {
		{
			if ((_2859_r >= (*(_28420_a))._field_nd)) {
				if ((_2899_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while (((_2899_n >> _28432_k) == 0LLU)) {
					{
						_2899_n=static_cast<jule::U64>((_2899_n * 10LLU));
						(_2859_r)++;
					}
				_iter_next_1bbe11ecb:;
				}
				_iter_end_1bbe11ecb:;;
				goto _iter_end_1bbe108d1;
			};
			jule::U64 _3039_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2859_r]);;
			_2899_n=static_cast<jule::U64>((((_2899_n * 10LLU) + _3039_c) - '0'));
		}
	_iter_next_1bbe108d1:;
	}
	_iter_end_1bbe108d1:;;
	(*(_28420_a))._field_dp-=(_2859_r - 1LL);
	jule::U64 _3085_mask = (static_cast<jule::U64>((1LL << _28432_k)) - 1LLU);;
	for (; (_2859_r < (*(_28420_a))._field_nd); (_2859_r)++) {
		{
			jule::U64 _3129_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2859_r]);;
			jule::U64 _3139_dig = (_2899_n >> _28432_k);;
			_2899_n&=_3085_mask;
			(*(_28420_a))._field_d[_2869_w]=static_cast<jule::U8>(static_cast<jule::U8>((_3139_dig + '0')));
			(_2869_w)++;
			_2899_n=static_cast<jule::U64>((((_2899_n * 10LLU) + _3129_c) - '0'));
		}
	_iter_next_1bbe14297:;
	}
	_iter_end_1bbe14297:;;
	while ((_2899_n > 0LLU)) {
		{
			jule::U64 _3229_dig = (_2899_n >> _28432_k);;
			_2899_n&=_3085_mask;
			if ((_2869_w < 800LL)) {
				(*(_28420_a))._field_d[_2869_w]=static_cast<jule::U8>(static_cast<jule::U8>((_3229_dig + '0')));
				(_2869_w)++;
			} else if ((_3229_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_2899_n=static_cast<jule::U64>((_2899_n * 10LLU));
		}
	_iter_next_1bbe1452d:;
	}
	_iter_end_1bbe1452d:;;
	(*(_28420_a))._field_nd=_2869_w;
	_1dbb1791a_trim(_28420_a);
}



inline jule::Bool _1dbb181ac_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s) {
	jule::I64 _3399_i = 0LL;;
	for (; (_3399_i < (*(_33846_s)).len()); (_3399_i)++) {
		{
			if ((_3399_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_3399_i] != (*(_33846_s))[_3399_i])) {
				return (_33821_b[_3399_i] < (*(_33846_s))[_3399_i]);;
			};
		}
	_iter_next_1bbe18477:;
	}
	_iter_end_1bbe18477:;;
	return false;;
}



inline void _1dbb18465_leftShift(_1dbb160bc_decimal* _35219_a, jule::U64 _35231_k) {
	jule::I64 _3539_delta = _1dbb159c3_leftCheats[static_cast<jule::I64>(_35231_k)]._field_delta;;
	if (_1dbb181ac_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &(_1dbb159c3_leftCheats[static_cast<jule::I64>(_35231_k)]._field_cutoff))) {
		(_3539_delta)--;
	};
	jule::I64 _3589_r = (*(_35219_a))._field_nd;;
	jule::I64 _3599_w = ((*(_35219_a))._field_nd + _3539_delta);;
	jule::U64 _3629_n = static_cast<jule::U64>(0LLU);;
	(_3589_r)--;
	for (; (_3589_r >= 0LL); (_3589_r)--) {
		{
			_3629_n+=((static_cast<jule::U64>((*(_35219_a))._field_d[_3589_r]) - '0') << _35231_k);
			jule::U64 _3669_quo = (_3629_n / 10LLU);;
			jule::U64 _3679_rem = (_3629_n - (10LLU * _3669_quo));;
			(_3599_w)--;
			if ((_3599_w < 800LL)) {
				(*(_35219_a))._field_d[_3599_w]=static_cast<jule::U8>(static_cast<jule::U8>((_3679_rem + '0')));
			} else if ((_3679_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3629_n=_3669_quo;
		}
	_iter_next_1bbe1b865:;
	}
	_iter_end_1bbe1b865:;;
	while ((_3629_n > 0LLU)) {
		{
			jule::U64 _3799_quo = (_3629_n / 10LLU);;
			jule::U64 _3809_rem = (_3629_n - (10LLU * _3799_quo));;
			(_3599_w)--;
			if ((_3599_w < 800LL)) {
				(*(_35219_a))._field_d[_3599_w]=static_cast<jule::U8>(static_cast<jule::U8>((_3809_rem + '0')));
			} else if ((_3809_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3629_n=_3799_quo;
		}
	_iter_next_1bbe1bdd7:;
	}
	_iter_end_1bbe1bdd7:;;
	(*(_35219_a))._field_nd+=_3539_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_3539_delta;
	_1dbb1791a_trim(_35219_a);
}



inline jule::Bool _1dbb187d9_shouldRoundUp(_1dbb160bc_decimal* _39919_a, jule::I64 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && ((((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _1dbba3346_FmtUint(jule::U64 _6112_i, jule::I64 _6120_base) {
	if (((_6112_i < 100LLU) && (_6120_base == 10LL))) {
		return _1dbba3d19_small(static_cast<jule::I64>(static_cast<jule::I64>(_6112_i)));;
	};
	jule::Str _658_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1dbba4677_fmtBits(nullptr, _6112_i, _6120_base, false, false);
		_658_s = __jule_assign_result.__jule_result_arg1;
	});
	return _658_s;;
}



inline jule::Str _1dbba370e_FmtInt(jule::I64 _7211_i, jule::I64 _7219_base) {
	if ((((0LL <= _7211_i) && (_7211_i < 100LL)) && (_7219_base == 10LL))) {
		return _1dbba3d19_small(static_cast<jule::I64>(static_cast<jule::I64>(_7211_i)));;
	};
	jule::Str _768_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1dbba4677_fmtBits(nullptr, static_cast<jule::U64>(static_cast<jule::U64>(_7211_i)), _7219_base, (_7211_i < 0LL), false);
		_768_s = __jule_assign_result.__jule_result_arg1;
	});
	return _768_s;;
}



inline jule::Str _1dbba39c8_Itoa(jule::I64 _819_i) {
	return _1dbba370e_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_819_i)), 10LL);;
}



inline jule::Str _1dbba3d19_small(jule::I64 _8610_i) {
	if ((_8610_i < 10LL)) {
		return jule::Str::from_byte(static_cast<jule::U8>(('0' + _8610_i)));;
	};
	jule::Slice<jule::U8> _909_buf = jule::Slice<jule::U8>::alloc(3LL, 3LL, 0);;
	_909_buf[0LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, (_8610_i << 1LL));
	_909_buf[1LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, ((_8610_i << 1LL) + 1LL));
	return _1c164c459_StrFromBytes(_909_buf.slice(0LL, 2LL));;
}



inline jule::Bool _1dbba40d3_isPowerOfTwo(jule::I64 _9617_x) {
	return ((_9617_x & (_9617_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _1dbba4677_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I64 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10541_base < 2LL) || (_10541_base > 36LL))) {
		jule::panic(jule::Str::lit("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:107:9"));;
	};
	jule::Slice<jule::U8> _1119_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I64 _1129_i = _1119_a.len();;
	if (_10552_neg) {
		_10533_u=static_cast<jule::U64>((-(_10533_u)));
	};
	{
		
		if ((_10541_base == 10LL)) {
			_case_begin_1bbe5743e:;
			{
				;
				jule::U64 _15413_us = static_cast<jule::U64>(_10533_u);;
				while ((_15413_us >= 100LLU)) {
					{
						jule::U64 _15613_is = ((_15413_us % 100LL) << 1LLU);;
						_15413_us/=100LLU;
						_1129_i-=2LL;
						_1119_a[(_1129_i + 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((_15613_is + 1LLU)));
						_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(_15613_is));
					}
				_iter_next_1bbe58c8c:;
				}
				_iter_end_1bbe58c8c:;;
				jule::U64 _1649_is = (_15413_us << 1LLU);;
				(_1129_i)--;
				_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((_1649_is + 1LLU)));
				if ((_15413_us >= 10LLU)) {
					(_1129_i)--;
					_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(_1649_is));
				};
			}
		}
		else if (_1dbba40d3_isPowerOfTwo(_10541_base)) {
			_case_begin_1bbe57ae3:;
			{
				jule::U64 _1799_shift = (static_cast<jule::U64>(_1dbaac76c_TrailingZeros(static_cast<jule::U64>(static_cast<jule::U64>(_10541_base)))) & 7LLU);;
				jule::U64 _1809_b = static_cast<jule::U64>(_10541_base);;
				jule::U64 _1819_m = (static_cast<jule::U64>(_10541_base) - 1LLU);;
				while ((_10533_u >= _1809_b)) {
					{
						(_1129_i)--;
						_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>((static_cast<jule::U64>(_10533_u) & _1819_m)));
						_10533_u>>=_1799_shift;
					}
				_iter_next_1bbe61dd8:;
				}
				_iter_end_1bbe61dd8:;;
				(_1129_i)--;
				_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>(_10533_u)));
			}
		}
		else {
			_case_begin_1bbe5651a:;
			{
				jule::U64 _1929_b = static_cast<jule::U64>(_10541_base);;
				while ((_10533_u >= _1929_b)) {
					{
						(_1129_i)--;
						jule::U64 _19813_q = jule::div(_10533_u,_1929_b);;
						_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>((_10533_u - (_19813_q * _1929_b)))));
						_10533_u=_19813_q;
					}
				_iter_next_1bbe56e66:;
				}
				_iter_end_1bbe56e66:;;
				(_1129_i)--;
				_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>(_10533_u)));
			}
		}
		_match_end_1bbe564b5:;
	};
	if (_10552_neg) {
		(_1129_i)--;
		_1119_a[_1129_i]='-';
	};
	if (_10563_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10516_dst,_1119_a.slice(_1129_i));
		return __jule_func_result;;
	};
	jule::I64 _2175_n = jule::copy((_1119_a), (_1119_a.slice(_1129_i)));;
	__jule_func_result.__jule_result_arg1=_1c164c459_StrFromBytes(_1119_a.slice(0LL, _2175_n));
	return __jule_func_result;;
}



inline jule::Str _1dbba5c1c_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1bbe763d6:;
			{
				return _1dbba5216_SysInt;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4) || _match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1bbe7644c:;
			{
				return _1dbba54d0_SysUint;;
			}
		}
		else {
			_case_begin_1bbe75e30:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1bbe75dca:;
	};
}



inline jule::I64 _1dbba5ed6_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str::lit("i8", 2) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1bbe7755d:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3) || _match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1bbe77690:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3) || _match_expr == jule::Str::lit("u32", 3) || _match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1bbe77706:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3) || _match_expr == jule::Str::lit("u64", 3) || _match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1bbe7776c:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4) || _match_expr == jule::Str::lit("int", 3) || _match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1bbe777d3:;
			{
				return _1dbba4e08_BitSize;;
			}
		}
		else {
			_case_begin_1bbe77173:;
			{
				return -1LL;;
			}
		}
		_match_end_1bbe7710c:;
	};
}



inline jule::Str _1dbba6327_IntFromBits(jule::I64 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1bbe7921e:;
			{
				return jule::Str::lit("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1bbe79b26:;
			{
				return jule::Str::lit("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1bbe79b8c:;
			{
				return jule::Str::lit("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1bbe79c03:;
			{
				return jule::Str::lit("i64", 3);;
			}
		}
		else {
			_case_begin_1bbe796b4:;
			{
				return jule::Str();;
			}
		}
		_match_end_1bbe7964d:;
	};
}



inline jule::Str _1dbba65e1_UintFromBits(jule::I64 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1bbe79eab:;
			{
				return jule::Str::lit("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1bbe7ad9c:;
			{
				return jule::Str::lit("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1bbe7ae13:;
			{
				return jule::Str::lit("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1bbe7ae79:;
			{
				return jule::Str::lit("u64", 3);;
			}
		}
		else {
			_case_begin_1bbe7a84c:;
			{
				return jule::Str();;
			}
		}
		_match_end_1bbe7a7d6:;
	};
}



inline jule::Str _1dbba68aa_FloatFromBits(jule::I64 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1bbe7b243:;
			{
				return jule::Str::lit("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1bbe7c134:;
			{
				return jule::Str::lit("f64", 3);;
			}
		}
		else {
			_case_begin_1bbe7bad4:;
			{
				return jule::Str();;
			}
		}
		_match_end_1bbe7ba6d:;
	};
}



inline jule::Bool _1dbba7504_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit) {
	({
		auto except = _1dbb106d2_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I64 _1dbba77bd_BitsizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1bbe82029:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1bbe80511:;
			{
				return 64LLU;;
			}
		}
		_match_end_1bbe80467:;
	};
}



inline jule::I64 _1dbba7a87_BitsizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1bbe82c83:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1bbe82d3d:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1bbe82da4:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1bbe822d2:;
			{
				return 64LLU;;
			}
		}
		_match_end_1bbe82843:;
	};
}



inline jule::I64 _1dbba7d51_BitsizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1bbe847e0:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1bbe8489a:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1bbe84911:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1bbe842a1:;
			{
				return 64LLU;;
			}
		}
		_match_end_1bbe83d94:;
	};
}



inline void _1a6cd5b1d_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _1a7638b79_Arch };
			
			if (_match_expr == jule::Str::lit("arm64", 5) || _match_expr == jule::Str::lit("amd64", 5)) {
				_case_begin_1bbe857d0:;
				{
					_1dbba4e08_BitSize=64LLU;
					_1dbba5216_SysInt=jule::Str::lit("i64", 3);
					_1dbba54d0_SysUint=jule::Str::lit("u64", 3);
				}
			}
			else if (_match_expr == jule::Str::lit("i386", 4)) {
				_case_begin_1bbe85846:;
				{
					_1dbba4e08_BitSize=32LLU;
					_1dbba5216_SysInt=jule::Str::lit("i32", 3);
					_1dbba54d0_SysUint=jule::Str::lit("u32", 3);
				}
			}
			_match_end_1bbe856d1:;
		};
	};
}



inline void _1a6cd5c61_init(void) {
	_1a6cd5b1d_UpdateTarget();
}



inline jule::I64 _1a6cd9a45_MinI(jule::Str _6113_k) {
	_6113_k=_1dbba5c1c_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1bbe84a87:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1bbe878d1:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1bbe87947:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1bbe879ad:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1bbe84bb9:;
			{
				return 0LL;;
			}
		}
		_match_end_1bbe84b64:;
	};
}



inline jule::I64 _1a6cd9d53_MaxI(jule::Str _7913_k) {
	_7913_k=_1dbba5c1c_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1bbe87c55:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1bbe88edc:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1bbe89053:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1bbe890b9:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1bbe8866d:;
			{
				return 0LL;;
			}
		}
		_match_end_1bbe88d77:;
	};
}



inline jule::U64 _1a6cda11c_MaxU(jule::Str _9713_k) {
	_9713_k=_1dbba5c1c_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1bbe89361:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1bbe8a5e8:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1bbe8a65e:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1bbe8a6c5:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1bbe89c79:;
			{
				return 0LLU;;
			}
		}
		_match_end_1bbe8a483:;
	};
}



inline jule::F64 _1a6cda34d_Min(jule::Str _11512_k) {
	_11512_k=_1dbba5c1c_RealKindOf(_11512_k);
	jule::I64 _1175_i = _1a6cd9a45_MinI(_11512_k);;
	if ((_1175_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1175_i));;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1bbe8cc9e:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1bbe8c6d8:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1bbe8c1bb:;
			{
				return 0LL;;
			}
		}
		_match_end_1bbe8c441:;
	};
}



inline jule::F64 _1a6cda617_Max(jule::Str _13312_k) {
	_13312_k=_1dbba5c1c_RealKindOf(_13312_k);
	jule::I64 _1355_i = _1a6cd9d53_MaxI(_13312_k);;
	if ((_1355_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1355_i));;
	};
	jule::U64 _1395_u = _1a6cda11c_MaxU(_13312_k);;
	if ((_1395_u != 0LLU)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1395_u));;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1bbe90114:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1bbe8ea4d:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1bbe8e487:;
			{
				return 0LL;;
			}
		}
		_match_end_1bbe8e784:;
	};
}



inline jule::Bool _1a6cdaa8a_IsI16Greater(jule::Str _621_k) {
	return _621_k.equal("i8", 2);;
}



inline jule::Bool _1a6cdad98_IsI32Greater(jule::Str _1121_k) {
	return (_1121_k.equal("i8", 2) || _1121_k.equal("i16", 3));;
}



inline jule::Bool _1a6cdb162_IsI64Greater(jule::Str _1621_k) {
	return ((_1621_k.equal("i8", 2) || _1621_k.equal("i16", 3)) || _1621_k.equal("i32", 3));;
}



inline jule::Bool _1a6cdb4a3_IsU16Greater(jule::Str _2321_k) {
	return _2321_k.equal("u8", 2);;
}



inline jule::Bool _1a6cdb76c_IsU32Greater(jule::Str _2821_k) {
	return (_2821_k.equal("u8", 2) || _2821_k.equal("u16", 3));;
}



inline jule::Bool _1a6cdba36_IsU64Greater(jule::Str _3421_k) {
	return ((_3421_k.equal("u8", 2) || _3421_k.equal("u16", 3)) || _3421_k.equal("u32", 3));;
}



inline jule::Bool _1a6cdbd00_IsF32Greater(jule::Str _4117_k) {
	return (!_4117_k.equal("f64", 3));;
}



inline jule::Bool _1a6cdc196_IsF64Greater(jule::Str _4617_k) {
	return true;;
}



inline jule::Bool _1a6cdc51a_IsGreater(jule::Str _5118_k1, jule::Str _5127_k2) {
	{
		auto &_match_expr{ _5118_k1 };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1bbe93678:;
			{
				return _1a6cdd609_IsSigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1bbe939db:;
			{
				return _1a6cdd917_IsUnsigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1bbe93a63:;
			{
				return _1a6cdd917_IsUnsigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1bbe93cb6:;
			{
				return _1a6cdaa8a_IsI16Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1bbe93d3d:;
			{
				return _1a6cdad98_IsI32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1bbe93db5:;
			{
				return _1a6cdb162_IsI64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1bbe93e3c:;
			{
				return _1a6cdb4a3_IsU16Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1bbe94019:;
			{
				return _1a6cdb76c_IsU32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1bbe94091:;
			{
				return _1a6cdba36_IsU64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1bbe94118:;
			{
				return _1a6cdbd00_IsF32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1bbe94190:;
			{
				return _1a6cdc196_IsF64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1bbe94217:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bbe93876:;
			{
				return false;;
			}
		}
		_match_end_1bbe937ee:;
	};
}



inline jule::Bool _1a6cdd609_IsSigInt(jule::Str _2717_k) {
	return ((((_2717_k.equal("i8", 2) || _2717_k.equal("i16", 3)) || _2717_k.equal("i32", 3)) || _2717_k.equal("i64", 3)) || _2717_k.equal("int", 3));;
}



inline jule::Bool _1a6cdd917_IsUnsigInt(jule::Str _3619_k) {
	return (((((_3619_k.equal("u8", 2) || _3619_k.equal("u16", 3)) || _3619_k.equal("u32", 3)) || _3619_k.equal("u64", 3)) || _3619_k.equal("uint", 4)) || _3619_k.equal("uintptr", 7));;
}



inline jule::Bool _1a6cddbd1_IsInt(jule::Str _4610_k) {
	return (_1a6cdd609_IsSigInt(_4610_k) || _1a6cdd917_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1a6cde022_IsFloat(jule::Str _5112_k) {
	return (_5112_k.equal("f32", 3) || _5112_k.equal("f64", 3));;
}



inline jule::Bool _1a6cde2db_IsNum(jule::Str _5610_k) {
	return (_1a6cddbd1_IsInt(_5610_k) || _1a6cde022_IsFloat(_5610_k));;
}



inline jule::Bool _1a6cde5a5_IsSigNum(jule::Str _6113_k) {
	return (_1a6cdd609_IsSigInt(_6113_k) || _1a6cde022_IsFloat(_6113_k));;
}



inline void _1a6ce8900_lshiftUnsig(_1a6cde8d5_Const* _59021_c, _1a6cde8d5_Const* _59032_x) {
	jule::U64 _5915_l = _1a6ce2311_AsU64(_59021_c);;
	jule::U64 _5925_r = _1a6ce2311_AsU64(_59032_x);;
	_1a6ce2b08_SetU64(_59021_c, static_cast<jule::U64>((_5915_l << _5925_r)));
}



inline void _1a6ce8c30_rshiftUnsig(_1a6cde8d5_Const* _59621_c, _1a6cde8d5_Const* _59632_x) {
	jule::U64 _5975_l = _1a6ce2311_AsU64(_59621_c);;
	jule::U64 _5985_r = _1a6ce2311_AsU64(_59632_x);;
	_1a6ce2b08_SetU64(_59621_c, static_cast<jule::U64>((_5975_l >> _5985_r)));
}



inline jule::Bool _1ac6b369e_IsUnaryOp(jule::U64 _33414_id) {
	{
		auto expr = &(_1ac6189ab_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc050328:;
		if (it != expr_end) {
			jule::U64 *_33512_op = it;
			{
				if ((_33414_id == (*(_33512_op)))) {
					return true;;
				};
			}
			_iter_next_1bc050328:;
			++it;
			goto _iter_begin_1bc050328;
		}
		_iter_end_1bc050328:;
	};
	return false;;
}



inline jule::Bool _1ac6b39ac_IsBinOp(jule::U64 _34412_id) {
	{
		auto expr = &(_1ac618cec_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc050823:;
		if (it != expr_end) {
			jule::U64 *_34512_op = it;
			{
				if ((_34412_id == (*(_34512_op)))) {
					return true;;
				};
			}
			_iter_next_1bc050823:;
			++it;
			goto _iter_begin_1bc050823;
		}
		_iter_end_1bc050823:;
	};
	return false;;
}



inline jule::Bool _1ac6b40b7_IsStr(jule::Str _36410_k) {
	return (!(_36410_k).empty() && ((_36410_k[0LL] == '\"') || _1ac6b4381_IsRawStr(_36410_k)));;
}



inline jule::Bool _1ac6b4381_IsRawStr(jule::Str _36713_k) {
	return (!(_36713_k).empty() && (_36713_k[0LL] == '`'));;
}



inline jule::Bool _1ac6b464a_IsRune(jule::Str _37111_k) {
	return (!(_37111_k).empty() && (_37111_k[0LL] == '\''));;
}



inline jule::Bool _1ac6b5074_IsFloat(jule::Str _38012_k) {
	if (_1a693951e_HasPrefix(_38012_k, jule::Str::lit("0x", 2))) {
		return _1a693ea0d_ContainsAny(_38012_k, jule::Str::lit(".pP", 3));;
	};
	return _1a693ea0d_ContainsAny(_38012_k, jule::Str::lit(".eE", 3));;
}



inline jule::Bool _1ac6b533d_IsNum(jule::Str _38810_k) {
	if ((_38810_k).empty()) {
		return false;;
	};
	jule::U8 _3935_b = _38810_k[0LL];;
	return ((_3935_b == '.') || (('0' <= _3935_b) && (_3935_b <= '9')));;
}



inline jule::Bool _1ac6b58c1_IsIgnoreIdent(jule::Str _40318_ident) {
	return _40318_ident.equal("_", 1);;
}



inline jule::Bool _1ac6b5b8a_IsAnonIdent(jule::Str _40616_ident) {
	return _40616_ident.equal("<anonymous>", 11);;
}



inline jule::Bool _1ac6b621d_IsSpace(jule::I32 _41912_r) {
	{
		auto expr = &(_1ac618736_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc057d25:;
		if (it != expr_end) {
			jule::I32 *_42012_cr = it;
			{
				if ((_41912_r == (*(_42012_cr)))) {
					return true;;
				};
			}
			_iter_next_1bc057d25:;
			++it;
			goto _iter_begin_1bc057d25;
		}
		_iter_end_1bc057d25:;
	};
	return false;;
}



inline jule::Bool _1ac6b6691_IsLetter(jule::I32 _42913_r) {
	return _1a7467cc7_IsLetter(_42913_r);;
}



inline jule::Bool _1ac6b6c24_IsDecimal(jule::U8 _44914_b) {
	return (('0' <= _44914_b) && (_44914_b <= '9'));;
}



inline jule::Bool _1ac6b6edd_IsBinary(jule::U8 _45213_b) {
	return ((_45213_b == '0') || (_45213_b == '1'));;
}



inline jule::Bool _1ac6b72a7_IsOctal(jule::U8 _45512_b) {
	return (('0' <= _45512_b) && (_45512_b <= '7'));;
}



inline jule::Bool _1ac6b7571_IsHex(jule::U8 _45810_b) {
	{
		
		if ((('0' <= _45810_b) && (_45810_b <= '9'))) {
			_case_begin_1bc05b8b7:;
			{
				return true;;
			}
		}
		else if ((('a' <= _45810_b) && (_45810_b <= 'f'))) {
			_case_begin_1bc05b93e:;
			{
				return true;;
			}
		}
		else if ((('A' <= _45810_b) && (_45810_b <= 'F'))) {
			_case_begin_1bc05b9b6:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bc05b7eb:;
			{
				return false;;
			}
		}
		_match_end_1bc05a795:;
	};
}



inline jule::Bool _1ac6b783a_IsAssign(jule::U64 _47313_id) {
	return ((((((((_47313_id == static_cast<jule::U64>(1LLU)) || (_47313_id == static_cast<jule::U64>(27LLU))) || (_47313_id == static_cast<jule::U64>(30LLU))) || (_47313_id == static_cast<jule::U64>(32LLU))) || (_47313_id == static_cast<jule::U64>(24LLU))) || (_47313_id == static_cast<jule::U64>(74LLU))) || (_47313_id == static_cast<jule::U64>(62LLU))) || (_47313_id == static_cast<jule::U64>(65LLU)));;
}



inline jule::Bool _1ac6b7b04_IsPostfixOp(jule::U64 _48516_id) {
	{
		auto expr = &(_1ac6ac423_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc05d028:;
		if (it != expr_end) {
			jule::U64 *_48612_op = it;
			{
				if ((_48516_id == (*(_48612_op)))) {
					return true;;
				};
			}
			_iter_next_1bc05d028:;
			++it;
			goto _iter_begin_1bc05d028;
		}
		_iter_end_1bc05d028:;
	};
	return false;;
}



inline jule::Bool _1ac6b7dbd_IsAssignOp(jule::U64 _49515_id) {
	if (_1ac6b7b04_IsPostfixOp(_49515_id)) {
		return true;;
	};
	{
		auto expr = &(_1ac6ac720_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc05edc6:;
		if (it != expr_end) {
			jule::U64 *_49912_op = it;
			{
				if ((_49515_id == (*(_49912_op)))) {
					return true;;
				};
			}
			_iter_next_1bc05edc6:;
			++it;
			goto _iter_begin_1bc05edc6;
		}
		_iter_end_1bc05edc6:;
	};
	return false;;
}



inline jule::Ptr<_1ac6b872b_File> _1ac6b9ac3_NewFileSet(jule::Str _5715_path) {
	return jule::new_ptr<_1ac6b872b_File>(_1ac6b872b_File{._field_Path=_5715_path, });;
}



inline _1a756d63b_Log _1ac6bb61e_makeErr(jule::I64 _10012_row, jule::I64 _10022_col, jule::Ptr<_1ac6b872b_File>* _10033_f, jule::Str _10043_fmt, jule::Slice<jule::Any> _10056_args) {
	return _1a756d63b_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_10012_row, ._field_Column=_10022_col, ._field_Path=(*((*(_10033_f))))._field_Path, ._field_Text=_1a756da9d_Logf(_10043_fmt, _10056_args), };;
}



inline jule::Bool _1ac6bb9d7_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix) {
	if (((*(_11020_bytes)).len() < _11035_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11035_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc06a134:;
		if (it != expr_end) {
			jule::I64 _1149_i = it - expr->begin();
			{
				if (((*(_11020_bytes))[_1149_i] != _11035_prefix[_1149_i])) {
					return false;;
				};
			}
			_iter_next_1bc06a134:;
			++it;
			_1149_i++;
			goto _iter_begin_1bc06a134;
		}
		_iter_end_1bc06a134:;
	};
	return true;;
}



inline jule::Str _1ac6bbd5b_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I64 _12232_i) {
	jule::Str __jule_func_result;
	(_12232_i)++;
	if ((_12232_i >= (*(_12215_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _1289_b = (*(_12215_txt))[_12232_i];;
	if ((_1289_b == '_')) {
		return __jule_func_result;;
	};
	if (((_1289_b == '+') || (_1289_b == '-'))) {
		(_12232_i)++;
		if ((_12232_i >= (*(_12215_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12215_txt))[_12232_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I64 _1425_first = _12232_i;;
	for (; (_12232_i < (*(_12215_txt)).len()); (_12232_i)++) {
		{
			_1289_b=(*(_12215_txt))[_12232_i];
			if (((_1289_b != '_') && (!(_1ac6b6c24_IsDecimal(_1289_b))))) {
				goto _iter_end_1bc06d049;
			};
		}
	_iter_next_1bc06d049:;
	}
	_iter_end_1bc06d049:;;
	if ((_12232_i == _1425_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_12215_txt)).slice(0LL, _12232_i));
	return __jule_func_result;;
}



inline jule::Str _1ac6bc224_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I64 _15628_i) {
	return _1ac6bbd5b_floatFmtE(_15615_txt, _15628_i);;
}



inline jule::Str _1ac6bc598_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I64 _16036_i) {
	if (((*(_16019_txt))[_16036_i] != '.')) {
		return jule::Str();;
	};
	(_16036_i)++;
	_julec_label_1bc06edd6:;
	for (; (_16036_i < (*(_16019_txt)).len()); (_16036_i)++) {
		{
			jule::U8 _1689_b = (*(_16019_txt))[_16036_i];;
			{
				
				if ((_1689_b == '_') || _1ac6b6c24_IsDecimal(_1689_b)) {
					_case_begin_1bc070dd7:;
					{
						goto _iter_next_1bc06ed1a;
					}
				}
				else if (_1ac6bdea1_isFloatFmtP(_1689_b, _16036_i)) {
					_case_begin_1bc070e5e:;
					{
						return _1ac6bc224_floatFmtP(_16019_txt, _16036_i);;
					}
				}
				else {
					_case_begin_1bc070d1b:;
					{
						goto _iter_end_1bc06ed1a;
					}
				}
				_match_end_1bc070ca5:;
			};
		}
	_iter_next_1bc06ed1a:;
	}
	_iter_end_1bc06ed1a:;;
	return jule::Str();;
}



inline jule::Str _1ac6bc91c_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I64 _18136_i) {
	_18136_i+=2LL;
	return _1ac6bbd5b_floatFmtE(_18119_txt, _18136_i);;
}



inline jule::Str _1ac6bcc91_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I64 _18635_i) {
	(_18635_i)++;
	return _1ac6bbd5b_floatFmtE(_18618_txt, _18635_i);;
}



inline jule::Str _1ac6bd225_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I64 _19131_i) {
	jule::Str __jule_func_result;
	(_19131_i)++;
	if ((_19131_i >= (*(_19114_txt)).len())) {
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)));
		return __jule_func_result;;
	};
	if (((*(_19114_txt))[_19131_i] == '_')) {
		(_19131_i)--;
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
		return __jule_func_result;;
	};
	for (; (_19131_i < (*(_19114_txt)).len()); (_19131_i)++) {
		{
			jule::U8 _2019_b = (*(_19114_txt))[_19131_i];;
			if (((_19131_i > 1LL) && ((_2019_b == 'e') || (_2019_b == 'E')))) {
				__jule_func_result = _1ac6bbd5b_floatFmtE(_19114_txt, _19131_i);
				return __jule_func_result;;
			};
			if (((_2019_b != '_') && (!(_1ac6b6c24_IsDecimal(_2019_b))))) {
				goto _iter_end_1bc073648;
			};
		}
	_iter_next_1bc073648:;
	}
	_iter_end_1bc073648:;;
	if ((_19131_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
	return __jule_func_result;;
}



inline jule::Str _1ac6bd4de_commonNum(jule::Slice<jule::U8>* _21615_txt) {
	jule::Str __jule_func_result;
	jule::I64 _2179_i = 0LL;;
	_julec_label_1bc076096:;
	for (; (_2179_i < (*(_21615_txt)).len()); (_2179_i)++) {
		{
			jule::U8 _2209_b = (*(_21615_txt))[_2179_i];;
			{
				
				if ((_2209_b == '.')) {
					_case_begin_1bc076c34:;
					{
						__jule_func_result = _1ac6bd225_floatNum(_21615_txt, _2179_i);
						return __jule_func_result;;
					}
				}
				else if ((_2209_b == '_')) {
					_case_begin_1bc076cab:;
					{
						goto _iter_next_1bc076140;
					}
				}
				else if (_1ac6bdb2c_isFloatFmtE(_2209_b, _2179_i)) {
					_case_begin_1bc076d33:;
					{
						__jule_func_result = _1ac6bbd5b_floatFmtE(_21615_txt, _2179_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1ac6b6c24_IsDecimal(_2209_b)))) {
					_case_begin_1bc076daa:;
					{
						goto _iter_end_1bc076140;
					}
				}
				_match_end_1bc076b57:;
			};
		}
	_iter_next_1bc076140:;
	}
	_iter_end_1bc076140:;;
	if ((_2179_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_21615_txt)).slice(0LL, _2179_i));
	return __jule_func_result;;
}



inline jule::Str _1ac6bd7a8_binaryNum(jule::Slice<jule::U8>* _23915_txt) {
	jule::Str __jule_func_result;
	if ((!(_1ac6bb9d7_bytesHasPrefix(_23915_txt, jule::Str::lit("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_23915_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _2489_i = 2LL;;
	for (; (_2489_i < (*(_23915_txt)).len()); (_2489_i)++) {
		{
			if ((((*(_23915_txt))[_2489_i] != '_') && (!(_1ac6b6edd_IsBinary((*(_23915_txt))[_2489_i]))))) {
				goto _iter_end_1bc079c26;
			};
		}
	_iter_next_1bc079c26:;
	}
	_iter_end_1bc079c26:;;
	if ((_2489_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_23915_txt)).slice(0LL, _2489_i));
	return __jule_func_result;;
}



inline jule::Bool _1ac6bdb2c_isFloatFmtE(jule::U8 _26116_b, jule::I64 _26125_i) {
	return ((_26125_i > 0LL) && ((_26116_b == 'e') || (_26116_b == 'E')));;
}



inline jule::Bool _1ac6bdea1_isFloatFmtP(jule::U8 _26516_b, jule::I64 _26525_i) {
	return ((_26525_i > 0LL) && ((_26516_b == 'p') || (_26516_b == 'P')));;
}



inline jule::Bool _1ac6be325_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I64 _26938_i) {
	if (((*(_26921_txt))[_26938_i] != '.')) {
		return false;;
	};
	(_26938_i)++;
	_julec_label_1bc07c70c:;
	for (; (_26938_i < (*(_26921_txt)).len()); (_26938_i)++) {
		{
			jule::U8 _2769_b = (*(_26921_txt))[_26938_i];;
			{
				
				if ((_2769_b == '_') || _1ac6b6c24_IsDecimal(_2769_b)) {
					_case_begin_1bc07d741:;
					{
						goto _iter_next_1bc07c5ec;
					}
				}
				else if (_1ac6bdea1_isFloatFmtP(_2769_b, _26938_i)) {
					_case_begin_1bc07d7b8:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1bc07d675:;
					{
						goto _iter_end_1bc07c5ec;
					}
				}
				_match_end_1bc07d60e:;
			};
		}
	_iter_next_1bc07c5ec:;
	}
	_iter_end_1bc07c5ec:;;
	return false;;
}



inline jule::Bool _1ac6be699_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I64 _29033_i) {
	{
		
		if (((*(_29020_txt)).len() < 3LL)) {
			_case_begin_1bc07ea72:;
			{
				goto _case_begin_1bc07eae9;
			}
		}
		else if (((*(_29020_txt))[_29033_i] != '.')) {
			_case_begin_1bc07eae9:;
			{
				goto _case_begin_1bc07eb71;
			}
		}
		else if ((((*(_29020_txt))[(_29033_i + 1LL)] != 'p') && ((*(_29020_txt))[(_29033_i + 1LL)] != 'P'))) {
			_case_begin_1bc07eb71:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1bc07e995:;
			{
				return true;;
			}
		}
		_match_end_1bc07e8c9:;
	};
}



inline jule::Bool _1ac6bea1d_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I64 _30334_i) {
	{
		
		if (((*(_30321_txt)).len() < 4LL)) {
			_case_begin_1bc0817dd:;
			{
				goto _case_begin_1bc081865;
			}
		}
		else if (((*(_30321_txt))[_30334_i] != '.')) {
			_case_begin_1bc081865:;
			{
				goto _case_begin_1bc0818dc;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 1LL)] != 'f') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'F'))) {
			_case_begin_1bc0818dc:;
			{
				goto _case_begin_1bc081b40;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 2LL)] != 'p') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'P'))) {
			_case_begin_1bc081b40:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1bc0813d1:;
			{
				return true;;
			}
		}
		_match_end_1bc081315:;
	};
}



inline jule::Str _1ac6bee91_octalNum(jule::Slice<jule::U8>* _31814_txt) {
	jule::Str __jule_func_result;
	if (((*(_31814_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31814_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I64 _3269_octalStart = 1LL;;
	jule::Bool _3289_o = false;;
	if (((*(_31814_txt))[1LL] == 'o')) {
		if (((*(_31814_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_3269_octalStart)++;
		_3289_o=true;
	};
	jule::I64 _3379_i = _3269_octalStart;;
	for (; (_3379_i < (*(_31814_txt)).len()); (_3379_i)++) {
		{
			jule::U8 _3399_b = (*(_31814_txt))[_3379_i];;
			if ((_3399_b == '.')) {
				if (_3289_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1ac6bd225_floatNum(_31814_txt, _3379_i);
				return __jule_func_result;;
			};
			if (_1ac6bdb2c_isFloatFmtE(_3399_b, _3379_i)) {
				__jule_func_result = _1ac6bbd5b_floatFmtE(_31814_txt, _3379_i);
				return __jule_func_result;;
			};
			if (((_3399_b != '_') && (!(_1ac6b72a7_IsOctal(_3399_b))))) {
				goto _iter_end_1bc085391;
			};
		}
	_iter_next_1bc085391:;
	}
	_iter_end_1bc085391:;;
	if ((_3379_i == _3269_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_31814_txt)).slice(0LL, _3379_i));
	return __jule_func_result;;
}



inline jule::Str _1ac6c025a_hexNum(jule::Slice<jule::U8>* _36012_txt) {
	jule::Str __jule_func_result;
	if (((*(_36012_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36012_txt))[0LL] != '0') || (((*(_36012_txt))[1LL] != 'x') && ((*(_36012_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3699_i = 2LL;;
	_julec_label_1bc08994a:;
	for (; (_3699_i < (*(_36012_txt)).len()); (_3699_i)++) {
		{
			jule::U8 _3729_b = (*(_36012_txt))[_3699_i];;
			{
				
				if (_1ac6be699_isFloatFmtDotp(_36012_txt, _3699_i)) {
					_case_begin_1bc08a671:;
					{
						__jule_func_result = _1ac6bcc91_floatFmtDotp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1ac6bea1d_isFloatFmtDotfp(_36012_txt, _3699_i)) {
					_case_begin_1bc08a6e8:;
					{
						__jule_func_result = _1ac6bc91c_floatFmtDotfp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1ac6bdea1_isFloatFmtP(_3729_b, _3699_i)) {
					_case_begin_1bc08a770:;
					{
						__jule_func_result = _1ac6bc224_floatFmtP(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1ac6be325_isFloatFmtDotnp(_36012_txt, _3699_i)) {
					_case_begin_1bc08a7e7:;
					{
						__jule_func_result = _1ac6bc598_floatFmtDotnp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (((_3729_b != '_') && (!(_1ac6b7571_IsHex(_3729_b))))) {
					_case_begin_1bc08a86e:;
					{
						goto _iter_end_1bc089ad2;
					}
				}
				_match_end_1bc08a583:;
			};
		}
	_iter_next_1bc089ad2:;
	}
	_iter_end_1bc089ad2:;;
	if ((_3699_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_36012_txt)).slice(0LL, _3699_i));
	return __jule_func_result;;
}



inline jule::Str _1ac6c05ce_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I64 _39328_n) {
	jule::Str __jule_func_result;
	if (((*(_39315_txt)).len() < _39328_n)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3999_i = 2LL;;
	for (; (_3999_i < _39328_n); (_3999_i)++) {
		{
			if ((!(_1ac6b7571_IsHex((*(_39315_txt))[_3999_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1bc08cde3:;
	}
	_iter_end_1bc08cde3:;;
	__jule_func_result=static_cast<jule::Str>((*(_39315_txt)).slice(0LL, _39328_n));
	return __jule_func_result;;
}



inline jule::Str _1ac6c0898_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt) {
	return _1ac6c05ce_hexEscape(_41127_txt, 10LL);;
}



inline jule::Str _1ac6c0b62_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt) {
	return _1ac6c05ce_hexEscape(_41630_txt, 6LL);;
}



inline jule::Str _1ac6c0e2b_hexByteEscape(jule::Slice<jule::U8>* _42119_txt) {
	return _1ac6c05ce_hexEscape(_42119_txt, 4LL);;
}



inline jule::Str _1ac6c11e5_byteEscape(jule::Slice<jule::U8>* _42616_txt) {
	jule::Str __jule_func_result;
	if (((*(_42616_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1ac6b72a7_IsOctal((*(_42616_txt))[1LL]))) || (!(_1ac6b72a7_IsOctal((*(_42616_txt))[2LL])))) || (!(_1ac6b72a7_IsOctal((*(_42616_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_42616_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_1a756d63b_Log> _1ac6c61d9_Lex(jule::Ptr<_1ac6b872b_File> _80912_f, jule::I64 _80922_mode) {
	if ((_80912_f == nullptr)) {
		return nullptr;;
	};
	_1ac6c1965_lex _8149_lex = _1ac6c1965_lex{._field_mode=_80922_mode, ._field_file=_80912_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_1ac6c477b_newLine(&_8149_lex);
	_1ac6c2559_lex(&_8149_lex);
	if ((_8149_lex._field_errors.len() > 0LL)) {
		return _8149_lex._field_errors;;
	};
	(*(_80912_f))._field_Tokens=_8149_lex._field_tokens;
	return nullptr;;
}



inline jule::Bool _1ac793e77_FindModuleFile(jule::Slice<jule::Ptr<_1d9e50d54_DirEntry>>* _1320_dirents) {
	{
		auto expr = _1320_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc120728:;
		if (it != expr_end) {
			jule::Ptr<_1d9e50d54_DirEntry> *_1412_d = it;
			{
				if (((!(_1d9e547e7_IsDir((*((*(_1412_d))))._field_Stat.ptr()))) && (*((*(_1412_d))))._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1bc120728:;
			++it;
			goto _iter_begin_1bc120728;
		}
		_iter_end_1bc120728:;
	};
	return false;;
}



inline jule::Str _1ac794230_FindModuleFileDeep(jule::Str _2527_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_1d9e50d54_DirEntry>> _2713_dirents = ({
				auto except = static__1a6945b46_Read(_2527_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1bc1210ec;
				} jule::Slice<jule::Ptr<_1d9e50d54_DirEntry>>(nullptr);});
			});;
			jule::Bool _319_exist = _1ac793e77_FindModuleFile(&(_2713_dirents));;
			if (_319_exist) {
				return _2527_path;;
			};
			jule::I64 _369_n = _2527_path.len();;
			_2527_path=_1a6945250_Dir(_2527_path);
			if ((_2527_path.len() == _369_n)) {
				goto _iter_end_1bc1210ec;
			};
		}
	_iter_next_1bc1210ec:;
	}
	_iter_end_1bc1210ec:;;
	return jule::Str();;
}



inline jule::Slice<_1a756d63b_Log> _1ac7944e9_CheckModuleFile(jule::Str* _4721_path) {
	jule::Slice<jule::U8> _485_bytes = ({
		auto except = static__1d9e52c8a_Read(_1a694455c_Join(jule::Slice<jule::Str>::make({(*(_4721_path)),jule::Str::lit("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_1a756d63b_Log>::make({_1a756d63b_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str::lit("module file could not checked because of a problem", 50), }});;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _545_s = _1a6941a43_Trim(_1c164c190_BytesStr(_485_bytes), jule::Str::lit(" \n\r\t\v", 5));;
	if ((_545_s.len() != 0LL)) {
		return jule::Slice<_1a756d63b_Log>::make({_1a756d63b_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str::lit("module file has syntax error(s)", 31), }});;
	};
	return nullptr;;
}



inline jule::Bool _1ac794d79_IsPub(jule::Str _910_ident) {
	if ((_910_ident[0LL] < 128LLU)) {
		jule::U8 _119_b = _910_ident[0LL];;
		return (('A' <= _119_b) && (_119_b <= 'Z'));;
	};
	jule::I32 _145_r = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c157a1de_DecodeRuneStr(_910_ident);
		_145_r = __jule_assign_result.__jule_result_arg0;
	});
	return _1a74d663c_IsUpper(_145_r);;
}



inline jule::Bool _1ac7dcd7d_IsAscii(jule::I32 _1112_r) {
	;
	return (_1112_r <= 127LL);;
}



inline jule::I32 _1ac8085e6_ToRune(jule::Str _2015_lit) {
	jule::I32 _219_r = static_cast<jule::I32>(0LL);;
	(_2015_lit).mut_slice(1LL, (_2015_lit.len() - 1LL));;
	if (((_2015_lit[0LL] == '\\') && (_2015_lit.len() > 1LL))) {
		jule::I64 _2413_i = 0LL;;
		_219_r=static_cast<jule::I32>(_1ac809262_runeFromEsqSeq(_2015_lit, &(_2413_i)));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c157a1de_DecodeRuneStr(_2015_lit);
			_219_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _219_r;;
}



inline jule::Str _1ac808816_ToRawStr(jule::Str _3613_lit) {
	if ((_3613_lit.len() == 2LL)) {
		return jule::Str();;
	};
	return _3613_lit.slice(1LL, (_3613_lit.len() - 1LL));;
}



inline jule::Str _1ac808b57_ToStr(jule::Str _4714_lit) {
	if ((_4714_lit.len() == 2LL)) {
		return jule::Str();;
	};
	jule::Bool _539_isPure = true;;
	{
		auto expr = &(_4714_lit);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc12d00a:;
		if (it != expr_end) {
			jule::U8 _5412_b = *it;
			{
				if (((_5412_b >= 128LLU) || (_5412_b == '\\'))) {
					_539_isPure=false;
					goto _iter_end_1bc12d00a;
				};
			}
			_iter_next_1bc12d00a:;
			++it;
			goto _iter_begin_1bc12d00a;
		}
		_iter_end_1bc12d00a:;
	};
	if (_539_isPure) {
		return _4714_lit.slice(1LL, (_4714_lit.len() - 1LL));;
	};
	(_4714_lit).mut_slice(1LL, (_4714_lit.len() - 1LL));;
	jule::Slice<jule::U8> _689_s = jule::Slice<jule::U8>::alloc(0LL, _4714_lit.len(), 0);;
	jule::I64 _699_i = 0LL;;
	while ((_699_i < _4714_lit.len())) {
		{
			jule::U8 _719_b = _4714_lit[_699_i];;
			if ((_719_b == '\\')) {
				_1ac809608_strEsqSeq(&(_689_s), _4714_lit, &(_699_i));
			} else {
				jule::I32 _7513_r = 0;;
				jule::I64 _7516_size = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c157a1de_DecodeRuneStr(_4714_lit.slice(_699_i));
					_7513_r = __jule_assign_result.__jule_result_arg0;
					_7516_size = __jule_assign_result.__jule_result_arg1;
				});
				_699_i+=_7516_size;
				_689_s=_1c157b311_AppendRune(_689_s, _7513_r);
			};
		}
	_iter_next_1bc130073:;
	}
	_iter_end_1bc130073:;;
	return _1c164c459_StrFromBytes(_689_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1ac808e21_tryBtoaCommonEsq(jule::Str _8321_s) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_8321_s.len() < 2LL) || (_8321_s[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _8321_s[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1bc132aae:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1bc132b36:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1bc132bad:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1bc132c35:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1bc132cac:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1bc132d34:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1bc132dab:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1bc132e33:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1bc132eaa:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1bc133032:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1bc13296b:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1ac809262_runeFromEsqSeq(jule::Str _11319_s, jule::I64* _11332_i) {
	jule::U8 _1145_b = 0;;
	jule::Bool _1148_ok = false;;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1ac808e21_tryBtoaCommonEsq(_11319_s.slice((*(_11332_i))));
		_1145_b = __jule_assign_result.__jule_result_arg0;
		_1148_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_11332_i)))++;
	if (_1148_ok) {
		((*(_11332_i)))++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_1145_b));;
	};
	{
		auto &_match_expr{ _11319_s[(*(_11332_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1bc137982:;
			{
				;
				jule::I32 _1249_r = static_cast<jule::I32>(({
					auto except = _1dbb087da_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 5LL)), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:124:19"));
					(except.result);
				}));;
				(*(_11332_i))+=5LL;
				return _1249_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1bc137740:;
			{
				;
				jule::I32 _1299_r = static_cast<jule::I32>(({
					auto except = _1dbb087da_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 9LL)), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:129:19"));
					(except.result);
				}));;
				(*(_11332_i))+=9LL;
				return _1299_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1bc1377a6:;
			{
				;
				jule::Str _1349_seq = _11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1dbb087da_ParseUint(_1349_seq, 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:136:18"));
					(except.result);
				})));;
			}
		}
		else {
			_case_begin_1bc136101:;
			{
				;
				jule::Str _1399_seq = _11319_s.slice((*(_11332_i)), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1dbb087da_ParseUint(_1399_seq.slice(1LL), 8LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:141:18"));
					(except.result);
				})));;
			}
		}
		_match_end_1bc13609b:;
	};
}



inline void _1ac809608_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I64* _14545_i) {
	jule::I32 _1465_r = _1ac809262_runeFromEsqSeq(_14532_s, _14545_i);;
	if ((_1465_r <= 255LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = (*(_14519_buf)); __jule_push_dest.push(static_cast<jule::U8>(static_cast<jule::U8>(_1465_r))); };
		return;;
	};
	jule::Str _1515_sr = jule::Str::from_rune(_1465_r);;
	((*(_14519_buf))).append(_1c164bdc6_StrBytes(_1515_sr));;
}



inline jule::I64 _1ac93758d_findFormatPrefix(jule::Slice<jule::U8>* _1122_bytes, jule::I64 _1141_i) {
	while ((_1141_i < (*(_1122_bytes)).len())) {
		{
			jule::I32 _139_r = 0;;
			jule::I64 _1312_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c1579d9d_DecodeRune((*(_1122_bytes)).slice(_1141_i));
				_139_r = __jule_assign_result.__jule_result_arg0;
				_1312_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_139_r == '{')) {
				return _1141_i;;
			};
			_1141_i+=_1312_size;
		}
	_iter_next_1bc163e75:;
	}
	_iter_end_1bc163e75:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1ac937912_getFormatRange(jule::I64* _2724_i, jule::Slice<jule::U8>* _2737_bytes) {
	jule::I64 _285_start = (*(_2724_i));;
	jule::I64 _299_braces = 0LL;;
	while (((*(_2724_i)) < (*(_2737_bytes)).len())) {
		{
			jule::I32 _319_r = 0;;
			jule::I64 _3112_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c1579d9d_DecodeRune((*(_2737_bytes)).slice((*(_2724_i))));
				_319_r = __jule_assign_result.__jule_result_arg0;
				_3112_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2724_i))+=_3112_size;
			{
				auto &_match_expr{ _319_r };
				
				if (_match_expr == '{') {
					_case_begin_1bc1667c4:;
					{
						(_299_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1bc16683a:;
					{
						(_299_braces)--;
						if ((_299_braces == 0LL)) {
							return (*(_2737_bytes)).slice(_285_start, (*(_2724_i)));;
						};
					}
				}
				_match_end_1bc166450:;
			};
		}
	_iter_next_1bc165a26:;
	}
	_iter_end_1bc165a26:;;
	return nullptr;;
}



inline void _1ac937bed_FmtByDefault(_1c164cc40_StrBuilder* _4722_buf, jule::Any* _4740_arg) {
	if (((*(_4740_arg)) == nullptr)) {
		_1c164d702_WriteStr(_4722_buf, jule::Str::lit("<nil>", 5));
		return;;
	};
	{
		auto &_match_expr{ (*(_4740_arg)) };
		
		if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1bc16851d:;
			{
				_1c164d702_WriteStr(_4722_buf, _1dbb0386d_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>((*(_4740_arg)).cast<jule::F32>(&__jule_any_type130))), 'g', -1LL, 32LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1bc167cc0:;
			{
				_1c164d702_WriteStr(_4722_buf, _1dbb0386d_FmtFloat(static_cast<jule::F64>((*(_4740_arg)).cast<jule::F64>(&__jule_any_type5)), 'g', -1LL, 64LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1bc167e68:;
			{
				_1c164d702_WriteStr(_4722_buf, _1dbba370e_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I8>(&__jule_any_type131))), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1bc167ece:;
			{
				_1c164d702_WriteStr(_4722_buf, _1dbba370e_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I16>(&__jule_any_type132))), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1bc1685d9:;
			{
				_1c164d702_WriteStr(_4722_buf, _1dbba370e_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I32>(&__jule_any_type6))), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1bc168650:;
			{
				_1c164d702_WriteStr(_4722_buf, _1dbba370e_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I64>(&__jule_any_type1)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1bc1686b6:;
			{
				_1c164d702_WriteStr(_4722_buf, _1dbba3346_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U8>(&__jule_any_type129))), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1bc16872c:;
			{
				_1c164d702_WriteStr(_4722_buf, _1dbba3346_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U16>(&__jule_any_type133))), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1bc168793:;
			{
				_1c164d702_WriteStr(_4722_buf, _1dbba3346_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U32>(&__jule_any_type134))), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1bc168809:;
			{
				_1c164d702_WriteStr(_4722_buf, _1dbba3346_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U64>(&__jule_any_type2)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1bc168870:;
			{
				_1c164d702_WriteStr(_4722_buf, (*(_4740_arg)).cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1bc1688d6:;
			{
				if ((*(_4740_arg)).cast<jule::Bool>(&__jule_any_type3)) {
					_1c164d702_WriteStr(_4722_buf, jule::Str::lit("true", 4));
				} else {
					_1c164d702_WriteStr(_4722_buf, jule::Str::lit("false", 5));
				};
			}
		}
		else {
			_case_begin_1bc167781:;
			{
				_1c164d702_WriteStr(_4722_buf, jule::to_str((*(_4740_arg))));
			}
		}
		_match_end_1bc166b8c:;
	};
}



inline void _1ac93811b_applyFmtByDefault(_1c164cc40_StrBuilder* _8627_buf, jule::I64* _8649_j, jule::Slice<jule::Any> _8657_args) {
	jule::Any _875_arg = _8657_args[(*(_8649_j))];;
	((*(_8649_j)))++;
	_1ac937bed_FmtByDefault(_8627_buf, &(_875_arg));
}



inline void _1ac93856c_applyFmt(jule::Slice<jule::U8>* _9418_fmt, _1c164cc40_StrBuilder* _9436_buf, jule::I64* _9458_j, jule::Slice<jule::Any> _9466_args) {
	if (((*(_9418_fmt)).len() == 2LL)) {
		_1ac93811b_applyFmtByDefault(_9436_buf, _9458_j, _9466_args);
		return;;
	};
	if (((((((*(_9418_fmt)).len() == 4LL) && ((*(_9418_fmt))[0LL] == '{')) && ((*(_9418_fmt))[1LL] == '{')) && ((*(_9418_fmt))[2LL] == '}')) && ((*(_9418_fmt))[3LL] == '}'))) {
		_1c164d702_WriteStr(_9436_buf, jule::Str::lit("{}", 2));
		return;;
	};
	_1c164d449_Write(_9436_buf, (*(_9418_fmt)));
}



inline jule::Slice<jule::U8> _1ac9388ad_Format(jule::Str _11511_fmt, jule::Slice<jule::Any> _11521_args) {
	jule::Slice<jule::U8> _1169_fmtBytes = _1c164bdc6_StrBytes(_11511_fmt);;
	if ((_11521_args.len() == 0LL)) {
		return _1169_fmtBytes;;
	};
	jule::I64 _1209_i = _1ac93758d_findFormatPrefix(&(_1169_fmtBytes), 0LL);;
	if ((_1209_i == -1LL)) {
		return _1169_fmtBytes;;
	};
	jule::I64 _1249_j = 0LL;;
	jule::I64 _1259_last = 0LL;;
	_1c164cc40_StrBuilder _1269_buf = static__1c164d191_New(static_cast<jule::I64>(_11511_fmt.len()));;
	for (; (_1209_i != -1LL); _1209_i=static_cast<jule::I64>(_1ac93758d_findFormatPrefix(&(_1169_fmtBytes), _1209_i))) {
		{
			_1c164d449_Write(&_1269_buf, _1169_fmtBytes.slice(_1259_last, _1209_i));
			jule::Slice<jule::U8> _12913_format = _1ac937912_getFormatRange(&(_1209_i), &(_1169_fmtBytes));;
			if ((_12913_format == nullptr)) {
				goto _iter_next_1bc17577d;
			};
			_1ac93856c_applyFmt(&(_12913_format), &(_1269_buf), &(_1249_j), _11521_args);
			if ((_1249_j >= _11521_args.len())) {
				_1c164d449_Write(&_1269_buf, _1169_fmtBytes.slice(_1209_i));
				_1259_last=static_cast<jule::I64>(_1169_fmtBytes.len());
				goto _iter_end_1bc17577d;
			};
			_1259_last=_1209_i;
		}
	_iter_next_1bc17577d:;
	}
	_iter_end_1bc17577d:;;
	if ((_1259_last < _1169_fmtBytes.len())) {
		_1c164d449_Write(&_1269_buf, _1169_fmtBytes.slice(_1259_last));
	};
	return _1c164e99a_Buf(&_1269_buf);;
}



inline jule::Str _1ac93a8d2_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args) {
	return _1c164c459_StrFromBytes(_1ac9388ad_Format(_3111_fmt, _3121_args));;
}



inline jule::Bool _1ac71944c_parameterUsesGenerics(jule::Ptr<_1ac7161c4_ParamIns>* _38431_p, jule::Slice<jule::Ptr<_1ac6d588b_GenericDecl>>* _38446_generics) {
	if (_1ac712db3_IsSelf((*((*(_38431_p))))._field_Decl.ptr())) {
		return false;;
	};
	return _1ac875289_kindUsesGenerics(&((*((*(_38431_p))))._field_Kind), _38446_generics);;
}



inline jule::Ptr<_1ac861c04_TypeSymbol> _1ac71bbbe_buildType(jule::Ptr<_1ac6c8681_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ac861c04_TypeSymbol>(_1ac861c04_TypeSymbol{._field_Decl=_9418_t, });;
}



inline jule::Ptr<_1ac825503_Value> _1ac71becc_buildExpr(jule::Ptr<_1ac6cc9b5_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ac825503_Value>(_1ac825503_Value{._field_Expr=_10318_expr, });;
}



inline jule::Ptr<_1ac858c40_TypeAlias> _1ac71c296_buildTypeAlias(jule::Ptr<_1ac6e019d_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1ac858c40_TypeAlias>(_1ac858c40_TypeAlias{._field_Scope=(*(_11223_decl))._field_Scope, ._field_Public=(*(_11223_decl))._field_Public, ._field_Binded=(*(_11223_decl))._field_Binded, ._field_Token=(*(_11223_decl))._field_Token, ._field_Ident=(*(_11223_decl))._field_Ident, ._field_Kind=_1ac71bbbe_buildType((*(_11223_decl))._field_Kind), });;
}



inline jule::Ptr<_1ac6eb484_Field> _1ac71c5d7_buildField(jule::Ptr<_1ac6e3a53_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1ac6eb484_Field>(_1ac6eb484_Field{._field_Token=(*(_12319_decl))._field_Token, ._field_Public=(*(_12319_decl))._field_Public, ._field_Mutable=(*(_12319_decl))._field_Mutable, ._field_Ident=(*(_12319_decl))._field_Ident, ._field_Kind=_1ac71bbbe_buildType((*(_12319_decl))._field_Kind), ._field_Default=(*(_12319_decl))._field_Default});;
}



inline jule::Slice<jule::Ptr<_1ac6eb484_Field>> _1ac71c8a1_buildFields(jule::Slice<jule::Ptr<_1ac6e3a53_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_1ac6eb484_Field>> _1359_fields = jule::Slice<jule::Ptr<_1ac6eb484_Field>>::alloc(0LL, (*(_13421_decls)).len());;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc428239:;
		if (it != expr_end) {
			jule::Ptr<_1ac6e3a53_FieldDecl> _13617_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ac6eb484_Field>> &__jule_push_dest = _1359_fields; __jule_push_dest.push(_1ac71c5d7_buildField(_13617_decl)); };
			}
			_iter_next_1bc428239:;
			++it;
			goto _iter_begin_1bc428239;
		}
		_iter_end_1bc428239:;
	};
	return _1359_fields;;
}



inline jule::Ptr<_1ac6ee377_Struct> _1ac71cb6a_buildStruct(jule::Ptr<_1ac6e4449_StructDecl> _14220_decl) {
	return jule::new_ptr<_1ac6ee377_Struct>(_1ac6ee377_Struct{._field_Token=(*(_14220_decl))._field_Token, ._field_Ident=(*(_14220_decl))._field_Ident, ._field_Fields=_1ac71c8a1_buildFields(&((*(_14220_decl))._field_Fields)), ._field_Public=(*(_14220_decl))._field_Public, ._field_Binded=(*(_14220_decl))._field_Binded, ._field_Directives=(*(_14220_decl))._field_Directives, ._field_Generics=(*(_14220_decl))._field_Generics, });;
}



inline jule::Ptr<_1ac712797_Param> _1ac71ce34_buildParam(jule::Ptr<_1ac6d8dde_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1ac712797_Param>(_1ac712797_Param{._field_Token=(*(_15419_decl))._field_Token, ._field_Mutable=(*(_15419_decl))._field_Mutable, ._field_Variadic=(*(_15419_decl))._field_Variadic, ._field_Reference=(*(_15419_decl))._field_Reference, ._field_Kind=_1ac71bbbe_buildType((*(_15419_decl))._field_Kind), ._field_Ident=(*(_15419_decl))._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1ac712797_Param>> _1ac71d2ca_buildParams(jule::Slice<jule::Ptr<_1ac6d8dde_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_1ac712797_Param>> _1669_params = jule::Slice<jule::Ptr<_1ac712797_Param>>::alloc(0LL, (*(_16521_decls)).len());;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc42bc87:;
		if (it != expr_end) {
			jule::Ptr<_1ac6d8dde_ParamDecl> _16717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ac712797_Param>> &__jule_push_dest = _1669_params; __jule_push_dest.push(_1ac71ce34_buildParam(_16717_decl)); };
			}
			_iter_next_1bc42bc87:;
			++it;
			goto _iter_begin_1bc42bc87;
		}
		_iter_end_1bc42bc87:;
	};
	return _1669_params;;
}



inline jule::Ptr<_1ac712016_RetType> _1ac71d594_buildRetType(jule::Ptr<_1ac6cb574_RetTypeDecl> _17321_decl) {
	if ((((*(_17321_decl))._field_Idents == nullptr) && ((*(_17321_decl))._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1ac712016_RetType>(_1ac712016_RetType{._field_Kind=_1ac71bbbe_buildType((*(_17321_decl))._field_Kind), ._field_Idents=(*(_17321_decl))._field_Idents});;
}



inline jule::Ptr<_1ac71426b_Fn> _1ac71d85d_buildFunc(jule::Ptr<_1ac6da341_FnDecl> _18318_decl) {
	return jule::new_ptr<_1ac71426b_Fn>(_1ac71426b_Fn{._field_Token=(*(_18318_decl))._field_Token, ._field_Global=(*(_18318_decl))._field_Global, ._field_Unsafety=(*(_18318_decl))._field_Unsafety, ._field_Public=(*(_18318_decl))._field_Public, ._field_Binded=(*(_18318_decl))._field_Binded, ._field_Statically=(*(_18318_decl))._field_Statically, ._field_Exceptional=(*(_18318_decl))._field_Exceptional, ._field_Ident=(*(_18318_decl))._field_Ident, ._field_Directives=(*(_18318_decl))._field_Directives, ._field_Scope=(*(_18318_decl))._field_Scope, ._field_Generics=(*(_18318_decl))._field_Generics, ._field_Result=_1ac71d594_buildRetType((*(_18318_decl))._field_Result), ._field_Params=_1ac71d2ca_buildParams(&((*(_18318_decl))._field_Params)), });;
}



inline jule::Slice<jule::Ptr<_1ac71426b_Fn>> _1ac71db27_buildMethods(jule::Slice<jule::Ptr<_1ac6da341_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_1ac71426b_Fn>> _2029_methods = jule::Slice<jule::Ptr<_1ac71426b_Fn>>::alloc(0LL, (*(_20122_decls)).len());;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc4323ec:;
		if (it != expr_end) {
			jule::Ptr<_1ac6da341_FnDecl> _20317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ac71426b_Fn>> &__jule_push_dest = _2029_methods; __jule_push_dest.push(_1ac71d85d_buildFunc(_20317_decl)); };
			}
			_iter_next_1bc4323ec:;
			++it;
			goto _iter_begin_1bc4323ec;
		}
		_iter_end_1bc4323ec:;
	};
	return _2029_methods;;
}



inline jule::Slice<jule::Ptr<_1ac861c04_TypeSymbol>> _1ac71dde1_buildTraitInherits(jule::Slice<jule::Ptr<_1ac6c8681_TypeDecl>>* _20928_inherits) {
	jule::Slice<jule::Ptr<_1ac861c04_TypeSymbol>> _2109_symbols = jule::Slice<jule::Ptr<_1ac861c04_TypeSymbol>>::alloc(0LL, (*(_20928_inherits)).len());;
	{
		auto expr = _20928_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc4367ec:;
		if (it != expr_end) {
			jule::Ptr<_1ac6c8681_TypeDecl> _21117_it = *it;
			{
				{ jule::Slice<jule::Ptr<_1ac861c04_TypeSymbol>> &__jule_push_dest = _2109_symbols; __jule_push_dest.push(_1ac71bbbe_buildType(_21117_it)); };
			}
			_iter_next_1bc4367ec:;
			++it;
			goto _iter_begin_1bc4367ec;
		}
		_iter_end_1bc4367ec:;
	};
	return _2109_symbols;;
}



inline jule::Ptr<_1ac727548_Trait> _1ac71e1aa_buildTrait(jule::Ptr<_1ac6e4b86_TraitDecl> _21719_decl) {
	return jule::new_ptr<_1ac727548_Trait>(_1ac727548_Trait{._field_Token=(*(_21719_decl))._field_Token, ._field_Ident=(*(_21719_decl))._field_Ident, ._field_Public=(*(_21719_decl))._field_Public, ._field_Inherits=_1ac71dde1_buildTraitInherits(&((*(_21719_decl))._field_Inherits)), ._field_Methods=_1ac71db27_buildMethods(&((*(_21719_decl))._field_Methods)), });;
}



inline jule::Ptr<_1ac7291d7_EnumItem> _1ac71e474_buildEnumItem(jule::Ptr<_1ac6e1c3d_EnumItemDecl> _22722_decl) {
	return jule::new_ptr<_1ac7291d7_EnumItem>(_1ac7291d7_EnumItem{._field_Token=(*(_22722_decl))._field_Token, ._field_Ident=(*(_22722_decl))._field_Ident, ._field_Value=_1ac71becc_buildExpr((*(_22722_decl))._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1ac7291d7_EnumItem>> _1ac71e73d_buildEnumItems(jule::Slice<jule::Ptr<_1ac6e1c3d_EnumItemDecl>>* _23524_decls) {
	jule::Slice<jule::Ptr<_1ac7291d7_EnumItem>> _2369_items = jule::Slice<jule::Ptr<_1ac7291d7_EnumItem>>::alloc(0LL, (*(_23524_decls)).len());;
	{
		auto expr = _23524_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc439976:;
		if (it != expr_end) {
			jule::Ptr<_1ac6e1c3d_EnumItemDecl> _23717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ac7291d7_EnumItem>> &__jule_push_dest = _2369_items; __jule_push_dest.push(_1ac71e474_buildEnumItem(_23717_decl)); };
			}
			_iter_next_1bc439976:;
			++it;
			goto _iter_begin_1bc439976;
		}
		_iter_end_1bc439976:;
	};
	return _2369_items;;
}



inline jule::Ptr<_1ac729c54_Enum> _1ac71ebb1_buildEnum(jule::Ptr<_1ac6e27ee_EnumDecl> _24318_decl) {
	return jule::new_ptr<_1ac729c54_Enum>(_1ac729c54_Enum{._field_Token=(*(_24318_decl))._field_Token, ._field_Public=(*(_24318_decl))._field_Public, ._field_Ident=(*(_24318_decl))._field_Ident, ._field_Kind=_1ac71bbbe_buildType((*(_24318_decl))._field_Kind), ._field_Items=_1ac71e73d_buildEnumItems(&((*(_24318_decl))._field_Items))});;
}



inline jule::Ptr<_1ac72ad87_TypeEnumItem> _1ac71ee7a_buildTypeEnumItem(jule::Ptr<_1ac6e3129_TypeEnumItemDecl> _25326_decl) {
	return jule::new_ptr<_1ac72ad87_TypeEnumItem>(_1ac72ad87_TypeEnumItem{._field_Token=(*(_25326_decl))._field_Token, ._field_Ident=(*(_25326_decl))._field_Ident, ._field_Kind=_1ac71bbbe_buildType((*(_25326_decl))._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1ac72ad87_TypeEnumItem>> _1ac720244_buildTypeEnumItems(jule::Slice<jule::Ptr<_1ac6e3129_TypeEnumItemDecl>>* _26128_decls) {
	jule::Slice<jule::Ptr<_1ac72ad87_TypeEnumItem>> _2629_items = jule::Slice<jule::Ptr<_1ac72ad87_TypeEnumItem>>::alloc(0LL, (*(_26128_decls)).len());;
	{
		auto expr = _26128_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc43cc43:;
		if (it != expr_end) {
			jule::Ptr<_1ac6e3129_TypeEnumItemDecl> _26317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ac72ad87_TypeEnumItem>> &__jule_push_dest = _2629_items; __jule_push_dest.push(_1ac71ee7a_buildTypeEnumItem(_26317_decl)); };
			}
			_iter_next_1bc43cc43:;
			++it;
			goto _iter_begin_1bc43cc43;
		}
		_iter_end_1bc43cc43:;
	};
	return _2629_items;;
}



inline jule::Ptr<_1ac72b45e_TypeEnum> _1ac72050d_buildTypeEnum(jule::Ptr<_1ac6e3789_TypeEnumDecl> _26922_decl) {
	return jule::new_ptr<_1ac72b45e_TypeEnum>(_1ac72b45e_TypeEnum{._field_Token=(*(_26922_decl))._field_Token, ._field_Public=(*(_26922_decl))._field_Public, ._field_Ident=(*(_26922_decl))._field_Ident, ._field_Items=_1ac720244_buildTypeEnumItems(&((*(_26922_decl))._field_Items))});;
}



inline jule::Ptr<_1ac7bb015_Var> _1ac7207c7_buildVar(jule::Ptr<_1ac6db4eb_VarDecl> _27817_decl) {
	return jule::new_ptr<_1ac7bb015_Var>(_1ac7bb015_Var{._field_Token=(*(_27817_decl))._field_Token, ._field_Ident=(*(_27817_decl))._field_Ident, ._field_Binded=(*(_27817_decl))._field_Binded, ._field_Constant=(*(_27817_decl))._field_Constant, ._field_Mutable=(*(_27817_decl))._field_Mutable, ._field_Public=(*(_27817_decl))._field_Public, ._field_Statically=(*(_27817_decl))._field_Statically, ._field_Reference=(*(_27817_decl))._field_Reference, ._field_Kind=_1ac71bbbe_buildType((*(_27817_decl))._field_Kind), ._field_Value=_1ac71becc_buildExpr((*(_27817_decl))._field_Expr), ._field_Refers=static__1ac71a63a_new(), ._field_Directives=(*(_27817_decl))._field_Directives, });;
}



inline jule::Slice<jule::Ptr<_1ac7bb015_Var>> _1ac720a91_buildVars(jule::Slice<jule::Ptr<_1ac6db4eb_VarDecl>> _29518_decls) {
	jule::Slice<jule::Ptr<_1ac7bb015_Var>> _2969_vars = jule::Slice<jule::Ptr<_1ac7bb015_Var>>::alloc(0LL, _29518_decls.len());;
	{
		auto expr = &(_29518_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc43e816:;
		if (it != expr_end) {
			jule::Ptr<_1ac6db4eb_VarDecl> _29717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ac7bb015_Var>> &__jule_push_dest = _2969_vars; __jule_push_dest.push(_1ac7207c7_buildVar(_29717_decl)); };
			}
			_iter_next_1bc43e816:;
			++it;
			goto _iter_begin_1bc43e816;
		}
		_iter_end_1bc43e816:;
	};
	return _2969_vars;;
}



inline jule::Ptr<_1ac750bc0_Impl> _1ac720d5a_buildImpl(jule::Ptr<_1ac6e52e6_Impl> _30318_decl) {
	return jule::new_ptr<_1ac750bc0_Impl>(_1ac750bc0_Impl{._field_Base=(*(_30318_decl))._field_Base, ._field_Dest=(*(_30318_decl))._field_Dest, ._field_Methods=_1ac71db27_buildMethods(&((*(_30318_decl))._field_Methods)), ._field_Statics=_1ac720a91_buildVars((*(_30318_decl))._field_Statics)});;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac74b21a_buildAsComptimeMethodData(jule::Ptr<_1ac717170_FnIns>* _142135_f) {
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>((*(_142135_f)), 1)}), });;
}



inline jule::Ptr<_1ac77790b_ImportInfo> _1ac74b528_findComptimePackage(jule::Ptr<_1ac797c7d_Sema>* _142929_s) {
	return _1ac798223_SelectPackage((*(_142929_s)).ptr(), jule::Fn<jule::Bool(jule::Ptr<_1ac77790b_ImportInfo>)>([=](jule::Ptr<_1ac77790b_ImportInfo> _143028_pkg) mutable -> jule::Bool {
		return (*(_143028_pkg))._field_LinkPath.equal("std::comptime", 13);;
	}));;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac74b89c_buildComptimeTypeInfoData(jule::Ptr<_1ac797c7d_Sema>* _143535_s, jule::Ptr<_1ac859a32_TypeKind>* _143550_t) {
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(_1ac7975b8_pushComptimeTypeInfo((*((*(_143535_s))))._field_meta.ptr(), _143550_t), 15)}), });;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac74bacd_buildComptimeValue(jule::Ptr<_1ac8243ae_Data>* _144328_d) {
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(jule::new_ptr<_1ac745511_comptimeValue>(_1ac745511_comptimeValue{._field_data=(*(_144328_d))}), 16)}), });;
}



inline jule::Str _1ac74eb69_toStrConstraints(jule::Ptr<_1ac85814b_InsGeneric> _14321_g) {
	_1c164cc40_StrBuilder _1449_sb = static__1c164d191_New(128LL);;
	{
		auto expr = &((*(_14321_g))._field_Constraint);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc60a65d:;
		if (it != expr_end) {
			jule::I64 _1459_i = it - expr->begin();
			jule::Ptr<_1ac859a32_TypeKind> *_14512_c = it;
			{
				_1c164d702_WriteStr(&_1449_sb, _1ac859dea_Str((*(_14512_c)).ptr()));
				if ((((*(_14321_g))._field_Constraint.len() - _1459_i) > 1LL)) {
					_1c164d702_WriteStr(&_1449_sb, jule::Str::lit(" | ", 3));
				};
			}
			_iter_next_1bc60a65d:;
			++it;
			_1459_i++;
			goto _iter_begin_1bc60a65d;
		}
		_iter_end_1bc60a65d:;
	};
	return _1c164dee9_Str(&_1449_sb);;
}



inline jule::Bool _1ac750032_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1ac859a32_TypeKind>* _15434_g) {
	{
		auto &_match_expr{ (*(_15421_c)) };
		
		if (_match_expr == jule::Str::lit("signed", 6)) {
			_case_begin_1bc60adde:;
			{
				jule::Ptr<_1ac86260b_Prim> _1579_prim = _1ac85c183_Prim((*(_15434_g)).ptr());;
				if ((_1579_prim == nullptr)) {
					return false;;
				};
				return _1a6cde5a5_IsSigNum((*(_1579_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("unsigned", 8)) {
			_case_begin_1bc60c53e:;
			{
				jule::Ptr<_1ac86260b_Prim> _1639_prim = _1ac85c183_Prim((*(_15434_g)).ptr());;
				if ((_1639_prim == nullptr)) {
					return false;;
				};
				return _1a6cdd917_IsUnsigInt((*(_1639_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("float", 5)) {
			_case_begin_1bc60c5b6:;
			{
				jule::Ptr<_1ac86260b_Prim> _1699_prim = _1ac85c183_Prim((*(_15434_g)).ptr());;
				if ((_1699_prim == nullptr)) {
					return false;;
				};
				return _1a6cde022_IsFloat((*(_1699_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("numeric", 7)) {
			_case_begin_1bc60c85d:;
			{
				jule::Ptr<_1ac86260b_Prim> _1759_prim = _1ac85c183_Prim((*(_15434_g)).ptr());;
				if ((_1759_prim == nullptr)) {
					return false;;
				};
				return _1a6cde2db_IsNum((*(_1759_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("mutable", 7)) {
			_case_begin_1bc60c8c4:;
			{
				return _1ac85b3b3_Mutable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str::lit("immutable", 9)) {
			_case_begin_1bc60c93a:;
			{
				return (!(_1ac85b3b3_Mutable((*(_15434_g)).ptr())));;
			}
		}
		else if (_match_expr == jule::Str::lit("comparable", 10)) {
			_case_begin_1bc60c9a1:;
			{
				return _1ac85b12c_Comparable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str::lit("ordered", 7)) {
			_case_begin_1bc60cab1:;
			{
				return _1ac85b649_Ordered((*(_15434_g)).ptr());;
			}
		}
		else {
			_case_begin_1bc60c42e:;
			{
				return false;;
			}
		}
		_match_end_1bc60c3c9:;
	};
}



inline jule::Bool _1ac7502eb_isBuiltinConstraint(jule::Str* _19325_ident) {
	{
		auto expr = &(_1ac74d01e_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc613457:;
		if (it != expr_end) {
			jule::Str *_19412_bc = it;
			{
				if (((*(_19325_ident)) == (*(_19412_bc)))) {
					return true;;
				};
			}
			_iter_next_1bc613457:;
			++it;
			goto _iter_begin_1bc613457;
		}
		_iter_end_1bc613457:;
	};
	return false;;
}



inline jule::Ptr<_1ac75d42a_scopeChecker> _1ac752e03_newScopeCheckerBase(jule::Ptr<_1ac797c7d_Sema>* _5829_s, jule::Ptr<_1ac717170_FnIns> _5843_owner) {
	return jule::new_ptr<_1ac75d42a_scopeChecker>(_1ac75d42a_scopeChecker{._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_1ac81e013_SymbolTable>(), });;
}



inline jule::Ptr<_1ac75d42a_scopeChecker> _1ac7532bb_newScopeChecker(jule::Ptr<_1ac797c7d_Sema>* _6625_s, jule::Ptr<_1ac717170_FnIns> _6639_owner) {
	jule::Ptr<_1ac75d42a_scopeChecker> _679_base = _1ac752e03_newScopeCheckerBase(_6625_s, _6639_owner);;
	(*(_679_base))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1ac75be84_scopeLabel>>>(nullptr);
	(*(_679_base))._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1ac75c517_scopeGoto>>>(nullptr);
	return _679_base;;
}



inline jule::Ptr<_1ac75be84_scopeLabel> _1ac753640_findLabelParent(jule::Str* _7621_ident, jule::Ptr<_1ac75d42a_scopeChecker> _7637_scope) {
	jule::Ptr<_1ac75be84_scopeLabel> _779_label = _1ac761e34_findLabelScope(_7637_scope, _7621_ident);;
	while ((_779_label == nullptr)) {
		{
			if ((((*(_7637_scope))._field_parent == nullptr) || ((*(_7637_scope))._field_owner != nullptr))) {
				return nullptr;;
			};
			_7637_scope=(*(_7637_scope))._field_parent;
			_779_label=_1ac761e34_findLabelScope(_7637_scope, _7621_ident);
		}
	_iter_next_1bc62c64c:;
	}
	_iter_end_1bc62c64c:;;
	return _779_label;;
}



inline jule::Bool _1ac753a08_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1ac756126_Scope>* _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1bc62e077:;
			{
				jule::Ptr<_1ac7084d5_FnCallExprModel> _939_fcem = _9021_Model.cast_ptr<_1ac7084d5_FnCallExprModel>(&__jule_any_type34);;
				if (((*(_939_fcem))._field_Except == (*(_9034_sc)))) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1bc62e0ee:;
			{
				jule::Ptr<_1ac8243ae_Data> _989_d = _9021_Model.cast_ptr<_1ac8243ae_Data>(&__jule_any_type24);;
				return _1ac753a08_modelIsGotoScope((*(_989_d))._field_Model, _9034_sc);;
			}
		}
		_match_end_1bc62caae:;
	};
	return false;;
}



inline jule::Bool _1ac753d7c_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_1ac756126_Scope>* _10434_sc) {
	{
		auto &_match_expr{ (*(_10421_stmt)) };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1bc631134:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1ac756126_Scope>(&__jule_any_type22) == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1bc6311ab:;
			{
				return ((*((*(_10421_stmt)).cast_ptr<_1ac75705b_InfIter>(&__jule_any_type36)))._field_Scope == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1bc631233:;
			{
				jule::Ptr<_1ac757e5d_RangeIter> _1119_it = (*(_10421_stmt)).cast_ptr<_1ac757e5d_RangeIter>(&__jule_any_type40);;
				return (((*(_1119_it))._field_Scope == (*(_10434_sc))) || _1ac753a08_modelIsGotoScope((*((*(_1119_it))._field_Expr))._field_Model, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1bc631464:;
			{
				jule::Ptr<_1ac757512_WhileIter> _1149_it = (*(_10421_stmt)).cast_ptr<_1ac757512_WhileIter>(&__jule_any_type38);;
				return ((((*(_1149_it))._field_Scope == (*(_10434_sc))) || _1ac753a08_modelIsGotoScope((*(_1149_it))._field_Expr, _10434_sc)) || _1ac753a08_modelIsGotoScope((*(_1149_it))._field_Next, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1bc6314ca:;
			{
				jule::Ptr<_1ac75a25c_Match> _1199_m = (*(_10421_stmt)).cast_ptr<_1ac75a25c_Match>(&__jule_any_type47);;
				{
					auto expr = &((*(_1199_m))._field_Cases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc635655:;
					if (it != expr_end) {
						jule::Ptr<_1ac75ad95_Case> *_12016_c = it;
						{
							if (((*((*(_12016_c))))._field_Scope == (*(_10434_sc)))) {
								return true;;
							};
							{
								auto expr = &((*((*(_12016_c))))._field_Exprs);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1bc63659b:;
								if (it != expr_end) {
									jule::Ptr<_1ac8243ae_Data> *_12420_expr = it;
									{
										if (_1ac753a08_modelIsGotoScope((*((*(_12420_expr))))._field_Model, _10434_sc)) {
											return true;;
										};
									}
									_iter_next_1bc63659b:;
									++it;
									goto _iter_begin_1bc63659b;
								}
								_iter_end_1bc63659b:;
							};
						}
						_iter_next_1bc635655:;
						++it;
						goto _iter_begin_1bc635655;
					}
					_iter_end_1bc635655:;
				};
				return (((*(_1199_m))._field_Default != nullptr) && ((*((*(_1199_m))._field_Default))._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1bc631541:;
			{
				jule::Ptr<_1ac756c5e_Conditional> _1329_c = (*(_10421_stmt)).cast_ptr<_1ac756c5e_Conditional>(&__jule_any_type35);;
				{
					auto expr = &((*(_1329_c))._field_Elifs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc6380c5:;
					if (it != expr_end) {
						jule::Ptr<_1ac756544_If> *_13316_elif = it;
						{
							if ((((*((*(_13316_elif))))._field_Scope == (*(_10434_sc))) || _1ac753a08_modelIsGotoScope((*((*(_13316_elif))))._field_Expr, _10434_sc))) {
								return true;;
							};
						}
						_iter_next_1bc6380c5:;
						++it;
						goto _iter_begin_1bc6380c5;
					}
					_iter_end_1bc6380c5:;
				};
				return (((*(_1329_c))._field_Default != nullptr) && ((*((*(_1329_c))._field_Default))._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1bc6315a7:;
			{
				jule::Ptr<_1ac8243ae_Data> _1409_d = (*(_10421_stmt)).cast_ptr<_1ac8243ae_Data>(&__jule_any_type24);;
				return _1ac753a08_modelIsGotoScope((*(_1409_d))._field_Model, _10434_sc);;
			}
		}
		else {
			_case_begin_1bc62e52d:;
			{
				return false;;
			}
		}
		_match_end_1bc630c49:;
	};
}



inline jule::I64 _1ac754201_countMatchType(jule::Ptr<_1ac75a25c_Match>* _14720_m, jule::Ptr<_1ac859a32_TypeKind>* _14732_t) {
	jule::I64 _1489_n = 0LL;;
	jule::Str _1495_kind = _1ac859dea_Str((*(_14732_t)).ptr());;
	_julec_label_1bc63ab11:;
	{
		auto expr = &((*((*(_14720_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc63b392:;
		if (it != expr_end) {
			jule::Ptr<_1ac75ad95_Case> *_15112_c = it;
			{
				if (((*(_15112_c)) == nullptr)) {
					goto _iter_next_1bc63b392;
				};
				{
					auto expr = &((*((*(_15112_c))))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc63c0c9:;
					if (it != expr_end) {
						jule::Ptr<_1ac8243ae_Data> *_15616_expr = it;
						{
							if (((*(_15616_expr)) == nullptr)) {
								goto _iter_end_1bc63b392;
							};
							if ((_1495_kind == _1ac859dea_Str((*((*(_15616_expr))))._field_Model.cast_ptr<_1ac859a32_TypeKind>(&__jule_any_type83).ptr()))) {
								(_1489_n)++;
							};
						}
						_iter_next_1bc63c0c9:;
						++it;
						goto _iter_begin_1bc63c0c9;
					}
					_iter_end_1bc63c0c9:;
				};
			}
			_iter_next_1bc63b392:;
			++it;
			goto _iter_begin_1bc63b392;
		}
		_iter_end_1bc63b392:;
	};
	return _1489_n;;
}



inline jule::Slice<jule::Ptr<_1ac8243ae_Data>> _1ac7544ba_getDatasFromTupleData(jule::Ptr<_1ac8243ae_Data>* _17131_d) {
	if ((_1ac85dea9_Tup((*((*(_17131_d))))._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_17131_d))))._field_Model };
			
			if (_match_expr.type == &__jule_any_type81) {
				_case_begin_1bc641584:;
				{
					return (*((*((*(_17131_d))))._field_Model.cast_ptr<_1ac70bc03_TupleExprModel>(&__jule_any_type81)))._field_Datas;;
				}
			}
			else {
				_case_begin_1bc63dad1:;
				{
					jule::Ptr<_1ac8676ee_Tuple> _17717_t = _1ac85dea9_Tup((*((*(_17131_d))))._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_1ac8243ae_Data>> _17817_r = jule::Slice<jule::Ptr<_1ac8243ae_Data>>::alloc(0LL, (*(_17717_t))._field_Types.len());;
					{
						auto expr = &((*(_17717_t))._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bc6403c9:;
						if (it != expr_end) {
							jule::Ptr<_1ac859a32_TypeKind> _17925_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_1ac8243ae_Data>> &__jule_push_dest = _17817_r; __jule_push_dest.push(jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_17925_kind, ._field_Mutable=true, })); };
							}
							_iter_next_1bc6403c9:;
							++it;
							goto _iter_begin_1bc6403c9;
						}
						_iter_end_1bc6403c9:;
					};
					return _17817_r;;
				}
			}
			_match_end_1bc63da7b:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1ac8243ae_Data>>::make({(*(_17131_d))});;
	};
}



inline jule::Bool _1ac754d7d_checkMut(jule::Ptr<_1ac797c7d_Sema>* _20618_s, jule::Ptr<_1ac8243ae_Data>* _20629_left, jule::Ptr<_1ac8243ae_Data> _20646_right, jule::Ptr<_1ac6b2e62_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*((*(_20629_left))))._field_Mutable))) {
			_case_begin_1bc6446db:;
			{
				_1ac79a8b8_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str::lit("cannot assign to immutable storage", 34), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!((*(_20646_right))._field_Mutable))) && _1ac85b3b3_Mutable((*(_20646_right))._field_Kind.ptr()))) {
			_case_begin_1bc644763:;
			{
				if ((((*(_20660_op))._field_Id != static_cast<jule::U64>(71LLU)) && (_1ac85d706_Struct((*(_20646_right))._field_Kind.ptr()) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1ac79a8b8_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_20646_right))._field_Kind.ptr()), &__jule_any_type4)}));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1bc644631:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1bc644587:;
	};
}



inline jule::Bool _1ac755367_checkAssign(jule::Ptr<_1ac797c7d_Sema>* _22521_s, jule::Ptr<_1ac8243ae_Data>* _22536_left, jule::Ptr<_1ac8243ae_Data> _22553_right, jule::Ptr<_1ac6b2e62_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ac717170_FnIns> _2265_f = _1ac85d470_Fn((*((*(_22536_left))))._field_Kind.ptr());;
	if ((((_2265_f != nullptr) && ((*(_2265_f))._field_Decl != nullptr)) && (*((*(_2265_f))._field_Decl))._field_Global)) {
		_1ac79a8b8_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("type is not support assignment", 30), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1ac824c83_IsConst((*(_22536_left)).ptr())) {
			_case_begin_1bc649d51:;
			{
				_1ac79a8b8_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("constants is can't assign", 25), jule::Slice<jule::Any>());
				_1ac79ac2b_pushSuggestion((*(_22521_s)).ptr(), jule::Str::lit("remove constant qualifer if you need to assign", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*((*(_22536_left))))._field_Lvalue))) {
			_case_begin_1bc649dc8:;
			{
				_1ac79a8b8_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("invalid expression: expected lvalue for assignment", 50), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1ac754d7d_checkMut(_22521_s, _22536_left, _22553_right, _22567_op)))) {
			_case_begin_1bc649e50:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1bc649c96:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1bc649b86:;
	};
}



inline jule::Bool _1ac755631_isValidAstStForNextSt(jule::Any* _24731_n) {
	{
		auto &_match_expr{ (*(_24731_n)) };
		
		if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1bc64a192:;
			{
				return (!((*((*(_24731_n)).cast_ptr<_1ac6d712e_AssignSt>(&__jule_any_type58)))._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1bc64c370:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bc64a6e2:;
			{
				return false;;
			}
		}
		_match_end_1bc6463e1:;
	};
}



inline jule::Bool _1ac7558ea_isValidStForNextSt(jule::Any* _25824_st) {
	{
		auto &_match_expr{ (*(_25824_st)) };
		
		if (_match_expr.type == &__jule_any_type43 || _match_expr.type == &__jule_any_type44 || _match_expr.type == &__jule_any_type46) {
			_case_begin_1bc64c88c:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1bc64d1b7:;
			{
				{
					auto &_match_expr{ (*((*(_25824_st)).cast_ptr<_1ac8243ae_Data>(&__jule_any_type24)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type34) {
						_case_begin_1bc64de21:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1bc64e372:;
						{
							return false;;
						}
					}
					_match_end_1bc64e31c:;
				};
			}
		}
		else {
			_case_begin_1bc64ce64:;
			{
				return false;;
			}
		}
		_match_end_1bc64ce0e:;
	};
}



inline jule::Bool _1ac755bb4_stmtIsDef(jule::Any* _27615_st) {
	{
		auto &_match_expr{ (*(_27615_st)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bc64dc34:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bc64d8c1:;
			{
				return false;;
			}
		}
		_match_end_1bc64d2c7:;
	};
}



inline jule::U64 _1ac77023e_removeEqFromOp(jule::U64 _216719_op) {
	{
		auto &_match_expr{ _216719_op };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1bc64e53c:;
			{
				return static_cast<jule::U64>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1bc650582:;
			{
				return static_cast<jule::U64>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1bc6505e8:;
			{
				return static_cast<jule::U64>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1bc650719:;
			{
				return static_cast<jule::U64>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1bc650780:;
			{
				return static_cast<jule::U64>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1bc6507e6:;
			{
				return static_cast<jule::U64>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1bc65086d:;
			{
				return static_cast<jule::U64>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1bc6508e5:;
			{
				return static_cast<jule::U64>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1bc65098e:;
			{
				return static_cast<jule::U64>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1bc650a05:;
			{
				return static_cast<jule::U64>(66LLU);;
			}
		}
		else {
			_case_begin_1bc650296:;
			{
				return _216719_op;;
			}
		}
		_match_end_1bc6501ec:;
	};
}



inline void _1ac770470_makeComptimeRange(jule::Ptr<_1ac8243ae_Data>* _219627_d) {
	{
		
		if ((_1ac85e4c6_comptimeStructFields((*((*(_219627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc6537d8:;
			{
				(*((*(_219627_d))))._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(jule::new_ptr<_1ac72e5b6_comptimeRange>(_1ac72e5b6_comptimeRange{._field_kind=jule::Trait<_1ac72e396_comptimeRangeKind>(_1ac85e4c6_comptimeStructFields((*((*(_219627_d))))._field_Kind.ptr()), 0)}), 5)});
			}
		}
		else if ((_1ac85e9e3_comptimeEnumFields((*((*(_219627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc65384e:;
			{
				(*((*(_219627_d))))._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(jule::new_ptr<_1ac72e5b6_comptimeRange>(_1ac72e5b6_comptimeRange{._field_kind=jule::Trait<_1ac72e396_comptimeRangeKind>(_1ac85e9e3_comptimeEnumFields((*((*(_219627_d))))._field_Kind.ptr()), 2)}), 5)});
			}
		}
		else if ((_1ac8607b3_comptimeTypeInfos((*((*(_219627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc6538b5:;
			{
				(*((*(_219627_d))))._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(jule::new_ptr<_1ac72e5b6_comptimeRange>(_1ac72e5b6_comptimeRange{._field_kind=jule::Trait<_1ac72e396_comptimeRangeKind>(_1ac8607b3_comptimeTypeInfos((*((*(_219627_d))))._field_Kind.ptr()), 4)}), 5)});
			}
		}
		else if ((_1ac860010_comptimeParams((*((*(_219627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc65392b:;
			{
				(*((*(_219627_d))))._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(jule::new_ptr<_1ac72e5b6_comptimeRange>(_1ac72e5b6_comptimeRange{._field_kind=jule::Trait<_1ac72e396_comptimeRangeKind>(_1ac860010_comptimeParams((*((*(_219627_d))))._field_Kind.ptr()), 3)}), 5)});
			}
		}
		else if ((_1ac860cd0_comptimeStatics((*((*(_219627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc654256:;
			{
				(*((*(_219627_d))))._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(jule::new_ptr<_1ac72e5b6_comptimeRange>(_1ac72e5b6_comptimeRange{._field_kind=jule::Trait<_1ac72e396_comptimeRangeKind>(_1ac860cd0_comptimeStatics((*((*(_219627_d))))._field_Kind.ptr()), 1)}), 5)});
			}
		}
		else if ((_1ac861819_comptimeFiles((*((*(_219627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc6542bc:;
			{
				(*((*(_219627_d))))._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(jule::new_ptr<_1ac72e5b6_comptimeRange>(_1ac72e5b6_comptimeRange{._field_kind=jule::Trait<_1ac72e396_comptimeRangeKind>(_1ac861819_comptimeFiles((*((*(_219627_d))))._field_Kind.ptr()), 5)}), 5)});
			}
		}
		else {
			_case_begin_1bc6530bd:;
			{
				(*((*(_219627_d))))._field_Decl=true;
			}
		}
		_match_end_1bc653530:;
	};
}



inline jule::Bool _1ac77096a_canComptimeMatch(jule::Ptr<_1ac8243ae_Data>* _221726_d) {
	if ((!(_1ac81d111_isGoodValueToInfer(_221726_d)))) {
		return false;;
	};
	return (_1ac824c83_IsConst((*(_221726_d)).ptr()) || (_1ac860a49_comptimeTypeInfo((*((*(_221726_d))))._field_Kind.ptr()) != nullptr));;
}



inline jule::Ptr<_1ac7bb015_Var> _1ac774de2_findVarInPackage(jule::Slice<jule::Ptr<_1ac81e013_SymbolTable>>* _4626_files, jule::Str* _4650_ident, jule::Bool _4662_binded) {
	{
		auto expr = _4626_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc82964b:;
		if (it != expr_end) {
			jule::Ptr<_1ac81e013_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1ac7bb015_Var> _4813_v = _1ac81e8e8_FindVar(_4717_f.ptr(), (*(_4650_ident)), _4662_binded);;
				if ((_4813_v != nullptr)) {
					return _4813_v;;
				};
			}
			_iter_next_1bc82964b:;
			++it;
			goto _iter_begin_1bc82964b;
		}
		_iter_end_1bc82964b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac858c40_TypeAlias> _1ac775365_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1ac81e013_SymbolTable>>* _5832_files, jule::Str* _5856_ident, jule::Bool _5868_binded) {
	{
		auto expr = _5832_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc82abad:;
		if (it != expr_end) {
			jule::Ptr<_1ac81e013_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1ac858c40_TypeAlias> _6013_ta = _1ac81ece4_FindTypeAlias(_5917_f.ptr(), (*(_5856_ident)), _5868_binded);;
				if ((_6013_ta != nullptr)) {
					return _6013_ta;;
				};
			}
			_iter_next_1bc82abad:;
			++it;
			goto _iter_begin_1bc82abad;
		}
		_iter_end_1bc82abad:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac6ee377_Struct> _1ac775794_findStructInPackage(jule::Slice<jule::Ptr<_1ac81e013_SymbolTable>>* _7029_files, jule::Str* _7053_ident, jule::Bool _7065_binded) {
	{
		auto expr = _7029_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc82c220:;
		if (it != expr_end) {
			jule::Ptr<_1ac81e013_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1ac6ee377_Struct> _7213_s = _1ac8201e0_FindStruct(_7117_f.ptr(), (*(_7053_ident)), _7065_binded);;
				if ((_7213_s != nullptr)) {
					return _7213_s;;
				};
			}
			_iter_next_1bc82c220:;
			++it;
			goto _iter_begin_1bc82c220;
		}
		_iter_end_1bc82c220:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac71426b_Fn> _1ac775c4a_findFnInPackage(jule::Slice<jule::Ptr<_1ac81e013_SymbolTable>>* _8225_files, jule::Str* _8249_ident, jule::Bool _8261_binded) {
	{
		auto expr = _8225_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc82d782:;
		if (it != expr_end) {
			jule::Ptr<_1ac81e013_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1ac71426b_Fn> _8413_f = _1ac8205db_FindFn(_8317_file.ptr(), (*(_8249_ident)), _8261_binded);;
				if ((_8413_f != nullptr)) {
					return _8413_f;;
				};
			}
			_iter_next_1bc82d782:;
			++it;
			goto _iter_begin_1bc82d782;
		}
		_iter_end_1bc82d782:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac727548_Trait> _1ac77608b_findTraitInPackage(jule::Slice<jule::Ptr<_1ac81e013_SymbolTable>>* _9428_files, jule::Str* _9452_ident) {
	{
		auto expr = _9428_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc82eb4b:;
		if (it != expr_end) {
			jule::Ptr<_1ac81e013_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1ac727548_Trait> _9613_t = _1ac82092c_FindTrait(_9517_f.ptr(), (*(_9452_ident)));;
				if ((_9613_t != nullptr)) {
					return _9613_t;;
				};
			}
			_iter_next_1bc82eb4b:;
			++it;
			goto _iter_begin_1bc82eb4b;
		}
		_iter_end_1bc82eb4b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac729c54_Enum> _1ac776410_findEnumInPackage(jule::Slice<jule::Ptr<_1ac81e013_SymbolTable>>* _10627_files, jule::Str* _10651_ident) {
	{
		auto expr = _10627_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc830e8d:;
		if (it != expr_end) {
			jule::Ptr<_1ac81e013_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1ac729c54_Enum> _10813_e = _1ac820c6d_FindEnum(_10717_f.ptr(), (*(_10651_ident)));;
				if ((_10813_e != nullptr)) {
					return _10813_e;;
				};
			}
			_iter_next_1bc830e8d:;
			++it;
			goto _iter_begin_1bc830e8d;
		}
		_iter_end_1bc830e8d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac72b45e_TypeEnum> _1ac776784_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1ac81e013_SymbolTable>>* _11831_files, jule::Str* _11855_ident) {
	{
		auto expr = _11831_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc832313:;
		if (it != expr_end) {
			jule::Ptr<_1ac81e013_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_1ac72b45e_TypeEnum> _12013_e = _1ac8210ae_FindTypeEnum(_11917_f.ptr(), (*(_11855_ident)));;
				if ((_12013_e != nullptr)) {
					return _12013_e;;
				};
			}
			_iter_next_1bc832313:;
			++it;
			goto _iter_begin_1bc832313;
		}
		_iter_end_1bc832313:;
	};
	return nullptr;;
}



inline jule::Any _1ac776cc3_defByIdentPackage(jule::Slice<jule::Ptr<_1ac81e013_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_binded) {
	{
		auto expr = _12927_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc833864:;
		if (it != expr_end) {
			jule::Ptr<_1ac81e013_SymbolTable> _13017_file = *it;
			{
				jule::Any _13113_def = _1ac82207c_defByIdent(_13017_file.ptr(), _12951_ident, _12963_binded);;
				if ((_13113_def != nullptr)) {
					return _13113_def;;
				};
			}
			_iter_next_1bc833864:;
			++it;
			goto _iter_begin_1bc833864;
		}
		_iter_end_1bc833864:;
	};
	return nullptr;;
}



inline jule::Bool _1ac77cd0c_isStdPackage(jule::Str* _35518_f, jule::Str _35526_p) {
	return _1a693951e_HasPrefix((*(_35518_f)), _1a694455c_Join(jule::Slice<jule::Str>::make({_1a7637ccc_PathStdlib,_35526_p})));;
}



inline jule::Bool _1ac79541d_isValidModelForRef(jule::Any* _1328_m) {
	{
		auto &_match_expr{ (*(_1328_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bc84449b:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1bc844512:;
			{
				jule::Ptr<_1ac70b076_StructSubIdentExprModel> _1813_model = (*(_1328_m)).cast_ptr<_1ac70b076_StructSubIdentExprModel>(&__jule_any_type97);;
				return _1ac79541d_isValidModelForRef(&((*((*(_1813_model))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1bc844578:;
			{
				jule::Ptr<_1ac70a6d5_TraitSubIdentExprModel> _2113_model = (*(_1328_m)).cast_ptr<_1ac70a6d5_TraitSubIdentExprModel>(&__jule_any_type96);;
				return _1ac79541d_isValidModelForRef(&((*(_2113_model))._field_Expr));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1bc844600:;
			{
				jule::Ptr<_1ac7068ce_UnaryExprModel> _2413_unary = (*(_1328_m)).cast_ptr<_1ac7068ce_UnaryExprModel>(&__jule_any_type110);;
				if (((*((*(_2413_unary))._field_Op))._field_Id != static_cast<jule::U64>(62LLU))) {
					return false;;
				};
				if ((_1ac85c6a0_Ptr((*((*(_2413_unary))._field_Expr))._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1ac85c419_Sptr((*((*(_2413_unary))._field_Expr))._field_Kind.ptr()) == nullptr)) {
					return false;;
				};
				return _1ac79541d_isValidModelForRef(&((*((*(_2413_unary))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1bc844820:;
			{
				jule::Ptr<_1ac708d65_IndexingExprModel> _3813_indexing = (*(_1328_m)).cast_ptr<_1ac708d65_IndexingExprModel>(&__jule_any_type45);;
				return _1ac79541d_isValidModelForRef(&((*((*(_3813_indexing))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1bc84408e:;
			{
				return false;;
			}
		}
		_match_end_1bc844039:;
	};
}



inline _1a756d63b_Log _1ac79594b_compilerErr(jule::Ptr<_1ac6b2e62_Token>* _4517_token, jule::Bool _4532_line, jule::Str _4544_fmt, jule::Slice<jule::Any> _4557_args) {
	_1a756d63b_Log _469_log = _1a756d63b_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_4517_token))))._field_Row, ._field_Column=(*((*(_4517_token))))._field_Column, ._field_Path=(*((*((*(_4517_token))))._field_File))._field_Path, ._field_Text=_1a756da9d_Logf(_4544_fmt, _4557_args), };;
	if (_4532_line) {
		_469_log._field_Line=_1ac6b970a_GetRow((*((*(_4517_token))))._field_File.ptr(), (*((*(_4517_token))))._field_Row);
	};
	return _469_log;;
}



inline jule::Bool _1ac795cc0_impIsLookupable(jule::Ptr<_1ac77790b_ImportInfo>* _5921_i, jule::Str* _5938_ident) {
	if ((*((*(_5921_i))))._field_Binded) {
		return false;;
	};
	if ((!((*((*(_5921_i))))._field_ImportAll))) {
		if (((*((*(_5921_i))))._field_Selected.len() > 0LL)) {
			return _1ac77a28d_existIdent((*(_5921_i)).ptr(), (*(_5938_ident)));;
		};
	};
	return (*((*(_5921_i))))._field_ImportAll;;
}



inline void _1ac796078_appendRetVars(jule::Slice<jule::Ptr<_1ac7bb015_Var>>* _7123_dest, jule::Ptr<_1ac717170_FnIns>* _7142_f) {
	if ((_1ac7146de_IsVoid((*((*(_7142_f))))._field_Decl.ptr()) || ((*((*(_7142_f))))._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1ac859a32_TypeKind>> _769_types = _1ac71836e_Types((*(_7142_f)).ptr());;
	{
		auto expr = &((*((*((*((*(_7142_f))))._field_Decl))._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc850bb1:;
		if (it != expr_end) {
			jule::I64 _7710_i = it - expr->begin();
			jule::Ptr<_1ac6b2e62_Token> _7717_ident = *it;
			{
				if ((_1ac6b58c1_IsIgnoreIdent((*(_7717_ident))._field_Kind) || _1ac6b5b8a_IsAnonIdent((*(_7717_ident))._field_Kind))) {
					goto _iter_next_1bc850bb1;
				};
				{ jule::Slice<jule::Ptr<_1ac7bb015_Var>> &__jule_push_dest = (*(_7123_dest)); __jule_push_dest.push(jule::new_ptr<_1ac7bb015_Var>(_1ac7bb015_Var{._field_Scope=(*((*(_7142_f))))._field_Scope, ._field_Token=_7717_ident, ._field_Ident=(*(_7717_ident))._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_1ac861c04_TypeSymbol>(_1ac861c04_TypeSymbol{._field_Kind=_769_types[_7710_i]}), ._field_Value=jule::new_ptr<_1ac825503_Value>(_1ac825503_Value{._field_Data=jule::new_ptr<_1ac8243ae_Data>()}), ._field_RetOrder=_7710_i, })); };
			}
			_iter_next_1bc850bb1:;
			++it;
			_7710_i++;
			goto _iter_begin_1bc850bb1;
		}
		_iter_end_1bc850bb1:;
	};
	if ((((*((*((*((*(_7142_f))))._field_Decl))._field_Result))._field_Idents.len() == 1LL) && ((*(_7123_dest)).len() == 1LL))) {
		(*((*(_7123_dest))[((*(_7123_dest)).len() - 1LL)]))._field_RetOrder=-1LL;
	};
}



inline void _1ac796364_appendParamVars(jule::Slice<jule::Ptr<_1ac7bb015_Var>>* _10125_dest, jule::Ptr<_1ac717170_FnIns>* _10144_f) {
	if (((*((*(_10144_f))))._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_10144_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc855578:;
		if (it != expr_end) {
			jule::Ptr<_1ac7161c4_ParamIns> _10617_p = *it;
			{
				if ((_1ac6b58c1_IsIgnoreIdent((*((*(_10617_p))._field_Decl))._field_Ident) || _1ac6b5b8a_IsAnonIdent((*((*(_10617_p))._field_Decl))._field_Ident))) {
					goto _iter_next_1bc855578;
				};
				jule::Ptr<_1ac7bb015_Var> _11113_v = jule::new_ptr<_1ac7bb015_Var>(_1ac7bb015_Var{._field_Scope=(*((*(_10144_f))))._field_Scope, ._field_Token=(*((*(_10617_p))._field_Decl))._field_Token, ._field_Ident=(*((*(_10617_p))._field_Decl))._field_Ident, ._field_Mutable=(*((*(_10617_p))._field_Decl))._field_Mutable, ._field_Used=true, ._field_Reference=(*((*(_10617_p))._field_Decl))._field_Reference, ._field_Kind=jule::new_ptr<_1ac861c04_TypeSymbol>(), ._field_Value=jule::new_ptr<_1ac825503_Value>(_1ac825503_Value{._field_Data=jule::new_ptr<_1ac8243ae_Data>()}), });;
				{
					
					if (_1ac712db3_IsSelf((*(_10617_p))._field_Decl.ptr())) {
						_case_begin_1bc8593b2:;
						{
							(*((*(_11113_v))._field_Kind))._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1ac85957b_Kind>((*((*(_10144_f))))._field_Owner, 0)});
							(*(_11113_v))._field_Reference=(!(_1ac713149_IsRef((*(_10617_p))._field_Decl.ptr())));
							if (_1ac713149_IsRef((*(_10617_p))._field_Decl.ptr())) {
								(*(_11113_v))._field_Ident=(*(_11113_v))._field_Ident.slice(1LL);
								(*((*((*(_11113_v))._field_Kind))._field_Kind))._field_Kind=jule::Trait<_1ac85957b_Kind>(jule::new_ptr<_1ac866137_Sptr>(_1ac866137_Sptr{._field_Elem=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_BindIdent=(*((*((*(_11113_v))._field_Kind))._field_Kind))._field_BindIdent, ._field_Kind=(*((*((*(_11113_v))._field_Kind))._field_Kind))._field_Kind})}), 21);
							};
						}
					}
					else if ((*((*(_10617_p))._field_Decl))._field_Variadic) {
						_case_begin_1bc8590c6:;
						{
							(*((*(_11113_v))._field_Kind))._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1ac85957b_Kind>(jule::new_ptr<_1ac866b0a_Slc>(_1ac866b0a_Slc{._field_Elem=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_BindIdent=(*((*(_10617_p))._field_Kind))._field_BindIdent, ._field_Kind=(*((*(_10617_p))._field_Kind))._field_Kind})}), 22)});
						}
					}
					else {
						_case_begin_1bc859060:;
						{
							(*((*(_11113_v))._field_Kind))._field_Kind=(*(_10617_p))._field_Kind;
						}
					}
					_match_end_1bc858e3e:;
				};
				{ jule::Slice<jule::Ptr<_1ac7bb015_Var>> &__jule_push_dest = (*(_10125_dest)); __jule_push_dest.push(_11113_v); };
			}
			_iter_next_1bc855578:;
			++it;
			goto _iter_begin_1bc855578;
		}
		_iter_end_1bc855578:;
	};
}



inline void _1ac796650_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1ac858c40_TypeAlias>>* _16134_dest, jule::Ptr<_1ac717170_FnIns>* _16159_f) {
	jule::I64 _1629_size = (*((*(_16159_f))))._field_Generics.len();;
	if (((*((*((*(_16159_f))))._field_Decl))._field_Owner != nullptr)) {
		_1629_size+=(*((*((*((*(_16159_f))))._field_Decl))._field_Owner))._field_Generics.len();
	};
	if ((_1629_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_16159_f))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc86273e:;
		if (it != expr_end) {
			jule::I64 _17110_i = it - expr->begin();
			jule::Ptr<_1ac85814b_InsGeneric> _17117_g = *it;
			{
				jule::Ptr<_1ac6d588b_GenericDecl> _17213_decl = (*((*((*(_16159_f))))._field_Decl))._field_Generics[_17110_i];;
				{ jule::Slice<jule::Ptr<_1ac858c40_TypeAlias>> &__jule_push_dest = (*(_16134_dest)); __jule_push_dest.push(jule::new_ptr<_1ac858c40_TypeAlias>(_1ac858c40_TypeAlias{._field_Scope=(*((*((*(_16159_f))))._field_Decl))._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=(*(_17213_decl))._field_Token, ._field_Ident=(*(_17213_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1ac861c04_TypeSymbol>(_1ac861c04_TypeSymbol{._field_Kind=(*(_17117_g))._field_Kind}), })); };
			}
			_iter_next_1bc86273e:;
			++it;
			_17110_i++;
			goto _iter_begin_1bc86273e;
		}
		_iter_end_1bc86273e:;
	};
	if (((*((*((*(_16159_f))))._field_Decl))._field_Owner != nullptr)) {
		jule::Ptr<_1ac702105_StructIns> _18413_owner = (*((*(_16159_f))))._field_Owner;;
		{
			auto expr = &((*(_18413_owner))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bc86a77a:;
			if (it != expr_end) {
				jule::I64 _18514_i = it - expr->begin();
				jule::Ptr<_1ac85814b_InsGeneric> _18521_g = *it;
				{
					jule::Ptr<_1ac6d588b_GenericDecl> _18617_decl = (*((*(_18413_owner))._field_Decl))._field_Generics[_18514_i];;
					{ jule::Slice<jule::Ptr<_1ac858c40_TypeAlias>> &__jule_push_dest = (*(_16134_dest)); __jule_push_dest.push(jule::new_ptr<_1ac858c40_TypeAlias>(_1ac858c40_TypeAlias{._field_Scope=(*((*((*(_16159_f))))._field_Decl))._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=(*(_18617_decl))._field_Token, ._field_Ident=(*(_18617_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1ac861c04_TypeSymbol>(_1ac861c04_TypeSymbol{._field_Kind=(*(_18521_g))._field_Kind}), })); };
				}
				_iter_next_1bc86a77a:;
				++it;
				_18514_i++;
				goto _iter_begin_1bc86a77a;
			}
			_iter_end_1bc86a77a:;
		};
	};
}



inline jule::Ptr<_1ac81e013_SymbolTable> _1ac7969c4_findFile(jule::Slice<jule::Ptr<_1ac81e013_SymbolTable>>* _19918_files, jule::Ptr<_1ac6b872b_File>* _19942_handler) {
	{
		auto expr = _19918_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc86b072:;
		if (it != expr_end) {
			jule::Ptr<_1ac81e013_SymbolTable> _20017_fl = *it;
			{
				if (((*(_20017_fl))._field_File == (*(_19942_handler)))) {
					return _20017_fl;;
				};
			}
			_iter_next_1bc86b072:;
			++it;
			goto _iter_begin_1bc86b072;
		}
		_iter_end_1bc86b072:;
	};
	return nullptr;;
}



inline void _1ac796e7a_pushSuggestion(_1a756d63b_Log* _20830_log, jule::Str _20841_fmt, jule::Slice<jule::Any> _20854_args) {
	(*(_20830_log))._field_Suggestion=_1a756da9d_Logf(_20841_fmt, _20854_args);
}



inline void _1ac7b92cc_pushImplemented(jule::Ptr<_1ac727548_Trait> _288524_t, jule::Ptr<_1ac6ee377_Struct>* _288540_d) {
	_julec_label_1bc86ebd0:;
	{
		
		if (((*(_288524_t))._field_Implemented.len() > 0LL)) {
			_case_begin_1bc87030c:;
			{
				{
					auto expr = &((*(_288524_t))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc8713da:;
					if (it != expr_end) {
						jule::Ptr<_1ac6ee377_Struct> _288916_s = *it;
						{
							if ((_288916_s == (*(_288540_d)))) {
								goto _match_end_1bc86ee00;
							};
						}
						_iter_next_1bc8713da:;
						++it;
						goto _iter_begin_1bc8713da;
					}
					_iter_end_1bc8713da:;
				};
				goto _case_begin_1bc86ee66;
			}
		}
		else {
			_case_begin_1bc86ee66:;
			{
				{ jule::Slice<jule::Ptr<_1ac6ee377_Struct>> &__jule_push_dest = (*(_288524_t))._field_Implemented; __jule_push_dest.push((*(_288540_d))); };
			}
		}
		_match_end_1bc86ee00:;
	};
	{
		auto expr = &((*(_288524_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc870a16:;
		if (it != expr_end) {
			jule::Ptr<_1ac861c04_TypeSymbol> _289817_i = *it;
			{
				_1ac7b92cc_pushImplemented(_1ac85d98c_Trait((*(_289817_i))._field_Kind.ptr()), _288540_d);
			}
			_iter_next_1bc870a16:;
			++it;
			goto _iter_begin_1bc870a16;
		}
		_iter_end_1bc870a16:;
	};
}



inline void _1ac7b95b8_pushImplements(jule::Ptr<_1ac6ee377_Struct>* _290324_s, jule::Ptr<_1ac727548_Trait> _290340_t) {
	_julec_label_1bc872b8e:;
	{
		
		if (((*((*(_290324_s))))._field_Implements.len() > 0LL)) {
			_case_begin_1bc8732bb:;
			{
				{
					auto expr = &((*((*(_290324_s))))._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc874399:;
					if (it != expr_end) {
						jule::Ptr<_1ac727548_Trait> _290716_b = *it;
						{
							if ((_290716_b == _290340_t)) {
								goto _match_end_1bc872dae;
							};
						}
						_iter_next_1bc874399:;
						++it;
						goto _iter_begin_1bc874399;
					}
					_iter_end_1bc874399:;
				};
				goto _case_begin_1bc872e25;
			}
		}
		else {
			_case_begin_1bc872e25:;
			{
				{ jule::Slice<jule::Ptr<_1ac727548_Trait>> &__jule_push_dest = (*((*(_290324_s))))._field_Implements; __jule_push_dest.push(_290340_t); };
			}
		}
		_match_end_1bc872dae:;
	};
	{
		auto expr = &((*(_290340_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc8739c5:;
		if (it != expr_end) {
			jule::Ptr<_1ac861c04_TypeSymbol> _291617_i = *it;
			{
				_1ac7b95b8_pushImplements(_290324_s, _1ac85d98c_Trait((*(_291617_i))._field_Kind.ptr()));
			}
			_iter_next_1bc8739c5:;
			++it;
			goto _iter_begin_1bc8739c5;
		}
		_iter_end_1bc8739c5:;
	};
}



inline jule::Bool _1ac809dab_traitHasReferenceReceiver(jule::Ptr<_1ac727548_Trait>* _2731_t) {
	{
		auto expr = &((*((*(_2731_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcb1125c:;
		if (it != expr_end) {
			jule::Ptr<_1ac71426b_Fn> *_2812_f = it;
			{
				if ((*((*(_2812_f))))._field_Statically) {
					goto _iter_next_1bcb1125c;
				};
				jule::Ptr<_1ac712797_Param> _349_p = (*((*(_2812_f))))._field_Params[0LL];;
				if ((_1ac713149_IsRef(_349_p.ptr()) && _1ac712db3_IsSelf(_349_p.ptr()))) {
					return true;;
				};
			}
			_iter_next_1bcb1125c:;
			++it;
			goto _iter_begin_1bcb1125c;
		}
		_iter_end_1bcb1125c:;
	};
	return false;;
}



inline jule::Bool _1ac80a241_floatAssignable(jule::Str* _4221_kind, jule::Ptr<_1ac8243ae_Data>* _4233_d) {
	jule::Str _435_value = _1dbb0386d_FmtFloat(static_cast<jule::F64>(_1a6ce2597_AsF64((*((*(_4233_d))))._field_Constant.ptr())), 'g', -1LL, 64LL);;
	return _1dbba7504_CheckBitFloat(_435_value, static_cast<jule::I64>(_1dbba5ed6_BitsizeOf((*(_4221_kind)))));;
}



inline jule::Bool _1ac80a5b5_sigAssignable(jule::Str _4718_kind, jule::Ptr<_1ac8243ae_Data>* _4730_d) {
	jule::F64 _485_min = _1a6cda34d_Min(_4718_kind);;
	jule::F64 _495_max = _1a6cda617_Max(_4718_kind);;
	{
		
		if (_1a6ce43e0_IsF64((*((*(_4730_d))))._field_Constant.ptr())) {
			_case_begin_1bcb14dcb:;
			{
				jule::F64 _529_x = _1a6ce1ce4_ReadF64((*((*(_4730_d))))._field_Constant.ptr());;
				jule::F64 _539_i = 0;;
				jule::F64 _5312_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1dbac8a74_Modf(_529_x);
					_539_i = __jule_assign_result.__jule_result_arg0;
					_5312_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_5312_frac != 0LL)) {
					return false;;
				};
				return ((_539_i >= _485_min) && (_539_i <= _495_max));;
			}
		}
		else if (_1a6ce3b3c_IsU64((*((*(_4730_d))))._field_Constant.ptr())) {
			_case_begin_1bcb14e53:;
			{
				jule::F64 _599_x = _1a6ce2597_AsF64((*((*(_4730_d))))._field_Constant.ptr());;
				if ((_599_x <= _495_max)) {
					return true;;
				};
			}
		}
		else if (_1a6ce38a6_IsI64((*((*(_4730_d))))._field_Constant.ptr())) {
			_case_begin_1bcb14eca:;
			{
				jule::F64 _649_x = _1a6ce2597_AsF64((*((*(_4730_d))))._field_Constant.ptr());;
				return ((_485_min <= _649_x) && (_649_x <= _495_max));;
			}
		}
		_match_end_1bcb14a46:;
	};
	return false;;
}



inline jule::Bool _1ac80a97d_unsigAssignable(jule::Str _7020_kind, jule::Ptr<_1ac8243ae_Data>* _7032_d) {
	jule::F64 _715_max = _1a6cda617_Max(_7020_kind);;
	if (((*((*(_7032_d))))._field_IsRune && _7020_kind.equal("u8", 2))) {
		return _1ac7dcd7d_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_1a6ce12aa_ReadI64((*((*(_7032_d))))._field_Constant.ptr()))));;
	};
	{
		
		if (_1a6ce43e0_IsF64((*((*(_7032_d))))._field_Constant.ptr())) {
			_case_begin_1bcb1a95e:;
			{
				jule::F64 _789_x = _1a6ce1ce4_ReadF64((*((*(_7032_d))))._field_Constant.ptr());;
				if ((_789_x < 0LL)) {
					return false;;
				};
				jule::F64 _829_i = 0;;
				jule::F64 _8212_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1dbac8a74_Modf(_789_x);
					_829_i = __jule_assign_result.__jule_result_arg0;
					_8212_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_8212_frac != 0LL)) {
					return false;;
				};
				return (_829_i <= _715_max);;
			}
		}
		else if (_1a6ce3b3c_IsU64((*((*(_7032_d))))._field_Constant.ptr())) {
			_case_begin_1bcb1a9c5:;
			{
				jule::F64 _889_x = _1a6ce2597_AsF64((*((*(_7032_d))))._field_Constant.ptr());;
				if ((_889_x <= _715_max)) {
					return true;;
				};
			}
		}
		else if (_1a6ce38a6_IsI64((*((*(_7032_d))))._field_Constant.ptr())) {
			_case_begin_1bcb1aa3b:;
			{
				jule::F64 _939_x = _1a6ce2597_AsF64((*((*(_7032_d))))._field_Constant.ptr());;
				return ((0LL <= _939_x) && (_939_x <= _715_max));;
			}
		}
		_match_end_1bcb1a0e0:;
	};
	return false;;
}



inline jule::Bool _1ac80ad02_intAssignable(jule::Str _9918_kind, jule::Ptr<_1ac8243ae_Data>* _9930_d) {
	{
		
		if (_1a6cdd609_IsSigInt(_9918_kind)) {
			_case_begin_1bcb205ce:;
			{
				return _1ac80a5b5_sigAssignable(_9918_kind, _9930_d);;
			}
		}
		else if (_1a6cdd917_IsUnsigInt(_9918_kind)) {
			_case_begin_1bcb20645:;
			{
				return _1ac80a97d_unsigAssignable(_9918_kind, _9930_d);;
			}
		}
		else {
			_case_begin_1bcb20090:;
			{
				return false;;
			}
		}
		_match_end_1bcb1e2d1:;
	};
}



inline void _1ac81721a_checkMutRiskOfStructLit(jule::Ptr<_1ac797c7d_Sema>* _91433_s, jule::Ptr<_1ac7072a3_StructLitExprModel>* _91444_m) {
	{
		auto expr = &((*((*(_91444_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcb216ce:;
		if (it != expr_end) {
			jule::Ptr<_1ac706e0c_StructArgExprModel> *_91512_arg = it;
			{
				if ((*((*((*((*(_91512_arg))))._field_Field))._field_Decl))._field_Mutable) {
					goto _iter_next_1bcb216ce;
				};
				if (((!((*((*((*(_91512_arg))))._field_Expr))._field_Mutable)) && _1ac85b3b3_Mutable((*((*((*(_91512_arg))))._field_Expr))._field_Kind.ptr()))) {
					_1ac79a8b8_pushErr((*(_91433_s)).ptr(), (*((*(_91512_arg))))._field_Token, jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*((*((*(_91512_arg))))._field_Expr))._field_Kind.ptr()), &__jule_any_type4)}));
				};
			}
			_iter_next_1bcb216ce:;
			++it;
			goto _iter_begin_1bcb216ce;
		}
		_iter_end_1bcb216ce:;
	};
}



inline jule::Ptr<_1ac859a32_TypeKind> _1ac81ccae_lenKind(void) {
	return _1ac93d099_primInt;;
}



inline jule::Bool _1ac81d111_isGoodValueToInfer(jule::Ptr<_1ac8243ae_Data>* _137824_d) {
	return (!(_1ac824766_IsNil((*(_137824_d)).ptr())));;
}



inline jule::Ptr<_1ac6c7a9d_Directive> _1ac84cc23_findDirective(jule::Slice<jule::Ptr<_1ac6c7a9d_Directive>>* _424523_directives, jule::Str _424554_d) {
	{
		auto expr = _424523_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc53adb:;
		if (it != expr_end) {
			jule::Ptr<_1ac6c7a9d_Directive> _424617_dr = *it;
			{
				if (((*((*(_424617_dr))._field_Tag))._field_Kind == _424554_d)) {
					return _424617_dr;;
				};
			}
			_iter_next_1bcc53adb:;
			++it;
			goto _iter_begin_1bcc53adb;
		}
		_iter_end_1bcc53adb:;
	};
	return nullptr;;
}



inline jule::Any _1ac84d0db_findBuiltinsImport(jule::Str* _425424_ident, jule::Ptr<_1ac77790b_ImportInfo> _425436_imp) {
	return _1ac9417ea_findPackageBuiltinDef(&((*(_425436_imp))._field_LinkPath), _425424_ident);;
}



inline void _1ac84d31c_fitBitsize(jule::Ptr<_1ac8243ae_Data>* _426320_d) {
	jule::Ptr<_1ac86260b_Prim> _42649_prim = _1ac85c183_Prim((*((*(_426320_d))))._field_Kind.ptr());;
	jule::I64 _42655_z = _1dbba5ed6_BitsizeOf(_1ac86294c_Str(_42649_prim.ptr()));;
	{
		
		if (_1a6ce38a6_IsI64((*((*(_426320_d))))._field_Constant.ptr())) {
			_case_begin_1bcc5634c:;
			{
				jule::I64 _42689_k = _1dbba7a87_BitsizeOfInt(static_cast<jule::I64>(_1a6ce12aa_ReadI64((*((*(_426320_d))))._field_Constant.ptr())));;
				if (((_42689_k > _42655_z) || _1a6cdd917_IsUnsigInt((*(_42649_prim))._field_Kind))) {
					(*((*((*(_426320_d))))._field_Constant))._field_Kind=_1dbba6327_IntFromBits(_42689_k);
					(*((*(_426320_d))))._field_Kind=(*((*(_1ac9404b9_findBuiltinTypeAlias((*((*((*(_426320_d))))._field_Constant))._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_1a6ce3b3c_IsU64((*((*(_426320_d))))._field_Constant.ptr())) {
			_case_begin_1bcc563b3:;
			{
				jule::I64 _42749_k = _1dbba7d51_BitsizeOfUint(static_cast<jule::U64>(_1a6ce1541_ReadU64((*((*(_426320_d))))._field_Constant.ptr())));;
				if (((_42749_k > _42655_z) || _1a6cdd609_IsSigInt((*(_42649_prim))._field_Kind))) {
					(*((*((*(_426320_d))))._field_Constant))._field_Kind=_1dbba65e1_UintFromBits(_42749_k);
					(*((*(_426320_d))))._field_Kind=(*((*(_1ac9404b9_findBuiltinTypeAlias((*((*((*(_426320_d))))._field_Constant))._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_1a6ce43e0_IsF64((*((*(_426320_d))))._field_Constant.ptr())) {
			_case_begin_1bcc56429:;
			{
				if ((_42655_z == 64LLU)) {
					return;;
				};
				jule::I64 _42849_k = _1dbba77bd_BitsizeOfFloat(static_cast<jule::F64>(_1a6ce1ce4_ReadF64((*((*(_426320_d))))._field_Constant.ptr())));;
				if ((_42849_k > _42655_z)) {
					(*((*((*(_426320_d))))._field_Constant))._field_Kind=_1dbba68aa_FloatFromBits(_42849_k);
					(*((*(_426320_d))))._field_Kind=(*((*(_1ac9404b9_findBuiltinTypeAlias((*((*((*(_426320_d))))._field_Constant))._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		_match_end_1bcc5623c:;
	};
}



inline void _1ac84d64c_makeStructLitAlloc(jule::Ptr<_1ac8243ae_Data>* _429228_d, jule::Ptr<_1ac7072a3_StructLitExprModel>* _429243_lit) {
	(*((*(_429228_d))))._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(jule::new_ptr<_1ac866137_Sptr>(_1ac866137_Sptr{._field_Elem=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>((*((*(_429243_lit))))._field_Strct, 0)})}), 21)});
	(*((*(_429228_d))))._field_Model=jule::Any(jule::new_ptr<_1ac7075a0_AllocStructLitExprModel>(_1ac7075a0_AllocStructLitExprModel{._field_Lit=(*(_429243_lit))}), &__jule_any_type112);
}



inline jule::Ptr<_1ac7bb015_Var> _1ac84d9c1_buildErrorVar(jule::Ptr<_1ac756126_Scope>* _430323_s, jule::Ptr<_1ac6d16de_FnCallExpr>* _430339_fc) {
	return jule::new_ptr<_1ac7bb015_Var>(_1ac7bb015_Var{._field_Scope=(*(_430323_s)), ._field_Token=(*((*(_430339_fc))))._field_Token, ._field_Ident=jule::Str::lit("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=(*(_1ac9404b9_findBuiltinTypeAlias(jule::Str::lit("any", 3))))._field_Kind, ._field_Value=jule::new_ptr<_1ac825503_Value>(_1ac825503_Value{._field_Data=jule::new_ptr<_1ac8243ae_Data>()}), });;
}



inline jule::Any _1ac84dd45_findBuiltinsSema(jule::Str* _431822_ident, jule::Ptr<_1ac797c7d_Sema> _431838_s) {
	{
		auto expr = &((*((*(_431838_s))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc62a62:;
		if (it != expr_end) {
			jule::Ptr<_1ac77790b_ImportInfo> _431917_imp = *it;
			{
				if (((*(_431917_imp))._field_ImportAll || _1ac77a28d_existIdent(_431917_imp.ptr(), (*(_431822_ident))))) {
					jule::Any _432117_def = _1ac84d0db_findBuiltinsImport(_431822_ident, _431917_imp);;
					if ((_432117_def != nullptr)) {
						return _432117_def;;
					};
				};
			}
			_iter_next_1bcc62a62:;
			++it;
			goto _iter_begin_1bcc62a62;
		}
		_iter_end_1bcc62a62:;
	};
	jule::Str _43299_ppath = _1ac6b8d9c_Dir((*((*(_431838_s))._field_file))._field_File.ptr());;
	if (_1a693951e_HasPrefix(_43299_ppath, _1a7637ccc_PathStdlib)) {
		(_43299_ppath).mut_slice(_1a7637ccc_PathStdlib.len());;
		_43299_ppath=(jule::Str::lit("std", 3) + _1a694036b_Replace(_43299_ppath, jule::Str::lit("\\", 1), jule::Str::lit("::", 2), -1LL));
		return _1ac9417ea_findPackageBuiltinDef(&(_43299_ppath), _431822_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1ac84e10e_isOkForShifting(jule::Ptr<_1ac8243ae_Data>* _434325_d) {
	if (_1ac824c83_IsConst((*(_434325_d)).ptr())) {
		{
			
			if (_1a6ce38a6_IsI64((*((*(_434325_d))))._field_Constant.ptr())) {
				_case_begin_1bcc65ea5:;
				{
					return (_1a6ce12aa_ReadI64((*((*(_434325_d))))._field_Constant.ptr()) >= 0LL);;
				}
			}
			else if (_1a6ce3b3c_IsU64((*((*(_434325_d))))._field_Constant.ptr())) {
				_case_begin_1bcc6602c:;
				{
					return true;;
				}
			}
			else if (_1a6ce43e0_IsF64((*((*(_434325_d))))._field_Constant.ptr())) {
				_case_begin_1bcc660a4:;
				{
					return (_1a6ce1ce4_ReadF64((*((*(_434325_d))))._field_Constant.ptr()) >= 0LL);;
				}
			}
			else {
				_case_begin_1bcc65dc8:;
				{
					return false;;
				}
			}
			_match_end_1bcc64a53:;
		};
	};
	jule::Ptr<_1ac86260b_Prim> _43565_prim = _1ac85c183_Prim((*((*(_434325_d))))._field_Kind.ptr());;
	return ((_43565_prim != nullptr) && _1a6cddbd1_IsInt(_1ac86294c_Str(_43565_prim.ptr())));;
}



inline jule::Bool _1ac84e4d8_isInstancedStruct(jule::Ptr<_1ac702105_StructIns> _436022_s) {
	return ((*((*(_436022_s))._field_Decl))._field_Generics.len() == (*(_436022_s))._field_Generics.len());;
}



inline jule::Bool _1ac84e85c_isPtrArithmeticCompatible(jule::Ptr<_1ac8243ae_Data>* _436435_l, jule::Ptr<_1ac8243ae_Data>* _436450_r) {
	jule::Ptr<_1ac8698ee_Ptr> _43655_ptr = _1ac85c6a0_Ptr((*((*(_436450_r))))._field_Kind.ptr());;
	if ((_43655_ptr != nullptr)) {
		return _1ac85a23b_Equal((*(_1ac85c6a0_Ptr((*((*(_436435_l))))._field_Kind.ptr())))._field_Elem, (*(_43655_ptr))._field_Elem);;
	};
	if (_1ac824c83_IsConst((*(_436450_r)).ptr())) {
		return _1ac80ad02_intAssignable(jule::Str::lit("int", 3), _436450_r);;
	};
	_1ac80b2db_typeCompatibilityChecker _43729_tcc = _1ac80b2db_typeCompatibilityChecker{._field_dest=_1ac93d099_primInt, ._field_src=(*((*(_436450_r))))._field_Kind, };;
	return _1ac80c9a2_check(&_43729_tcc);;
}



inline void _1ac84eb48_applyCastKindModel(jule::Ptr<_1ac8243ae_Data>* _437928_d, jule::Ptr<_1ac859a32_TypeKind>* _437943_t) {
	(*((*(_437928_d))))._field_Model=jule::Any(jule::new_ptr<_1ac707b33_CastingExprModel>(_1ac707b33_CastingExprModel{._field_Expr=(*((*(_437928_d))))._field_Model, ._field_Kind=(*(_437943_t)), ._field_ExprKind=(*((*(_437928_d))))._field_Kind}), &__jule_any_type92);
}



inline void _1ac84ee34_applyCastKind(jule::Ptr<_1ac8243ae_Data>* _438723_d, jule::Ptr<_1ac859a32_TypeKind>* _438738_t) {
	_1ac84eb48_applyCastKindModel(_438723_d, _438738_t);
	(*((*(_438723_d))))._field_Kind=(*(_438738_t));
}



inline jule::Ptr<_1ac8243ae_Data> _1ac850143_buildVoidData(void) {
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93bc9b_primVoid, });;
}



inline jule::Str _1ac85040c_checkDataForIntegerIndexing(jule::Ptr<_1ac8243ae_Data>* _439837_d) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_439837_d)) == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_1ac85c183_Prim((*((*(_439837_d))))._field_Kind.ptr()) == nullptr)) {
			_case_begin_1bcc7008b:;
			{
				__jule_func_result = jule::Str::lit("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_1a6cddbd1_IsInt(_1ac86294c_Str(_1ac85c183_Prim((*((*(_439837_d))))._field_Kind.ptr()).ptr()))))) {
			_case_begin_1bcc70102:;
			{
				__jule_func_result = jule::Str::lit("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_1ac824c83_IsConst((*(_439837_d)).ptr())) {
			_case_begin_1bcc70168:;
			{
				if ((_1a6ce2597_AsF64((*((*(_439837_d))))._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str::lit("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_1ac85c183_Prim((*((*(_439837_d))))._field_Kind.ptr()) == nullptr) || _1ac824c83_IsConst((*(_439837_d)).ptr()) || (_1dbba5c1c_RealKindOf(_1ac86294c_Str(_1ac85c183_Prim((*((*(_439837_d))))._field_Kind.ptr()).ptr())) != _1dbba5c1c_RealKindOf(jule::Str::lit("int", 3)))) {
			_case_begin_1bcc701e0:;
			{
				_1ac84ee34_applyCastKind(_439837_d, &(_1ac93d099_primInt));
			}
		}
		_match_end_1bcc6ec28:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _1ac8506e8_applyCastModelByEnum(jule::Ptr<_1ac8243ae_Data>* _442330_d, jule::Ptr<_1ac729c54_Enum> _442344_e) {
	if ((_442344_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1ac86260b_Prim> _44275_p = _1ac85c183_Prim((*((*(_442344_e))._field_Kind))._field_Kind.ptr());;
	if (_1ac865a93_IsStr(_44275_p.ptr())) {
		return;;
	};
	_1ac84eb48_applyCastKindModel(_442330_d, &((*((*(_442344_e))._field_Kind))._field_Kind));
}



inline void _1ac8509d4_castConstByType(jule::Str* _443421_t, jule::Ptr<_1ac8243ae_Data>* _443434_d) {
	{
		
		if (_1a6cdd609_IsSigInt((*(_443421_t)))) {
			_case_begin_1bcc75cea:;
			{
				{
					auto _match_expr{ _1dbba5ed6_BitsizeOf(_1dbba5c1c_RealKindOf((*(_443421_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1bcc76922:;
						{
							_1a6ce2850_SetI64((*((*(_443434_d))))._field_Constant.ptr(), static_cast<jule::I64>(_1a6ce207a_AsI64((*((*(_443434_d))))._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1bcc76999:;
						{
							_1a6ce2850_SetI64((*((*(_443434_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_1a6ce207a_AsI64((*((*(_443434_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1bcc76a21:;
						{
							_1a6ce2850_SetI64((*((*(_443434_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_1a6ce207a_AsI64((*((*(_443434_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1bcc76a98:;
						{
							_1a6ce2850_SetI64((*((*(_443434_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_1a6ce207a_AsI64((*((*(_443434_d))))._field_Constant.ptr())))));
						}
					}
					_match_end_1bcc76647:;
				};
			}
		}
		else if (_1a6cdd917_IsUnsigInt((*(_443421_t)))) {
			_case_begin_1bcc75d72:;
			{
				{
					auto _match_expr{ _1dbba5ed6_BitsizeOf(_1dbba5c1c_RealKindOf((*(_443421_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1bcc7aa03:;
						{
							_1a6ce2b08_SetU64((*((*(_443434_d))))._field_Constant.ptr(), static_cast<jule::U64>(_1a6ce2311_AsU64((*((*(_443434_d))))._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1bcc7aa69:;
						{
							_1a6ce2b08_SetU64((*((*(_443434_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_1a6ce2311_AsU64((*((*(_443434_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1bcc7aae1:;
						{
							_1a6ce2b08_SetU64((*((*(_443434_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_1a6ce2311_AsU64((*((*(_443434_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1bcc7ab68:;
						{
							_1a6ce2b08_SetU64((*((*(_443434_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_1a6ce2311_AsU64((*((*(_443434_d))))._field_Constant.ptr())))));
						}
					}
					_match_end_1bcc7998b:;
				};
			}
		}
		else if (_1a6cde022_IsFloat((*(_443421_t)))) {
			_case_begin_1bcc75de9:;
			{
				{
					auto _match_expr{ _1dbba5ed6_BitsizeOf(_1dbba5c1c_RealKindOf((*(_443421_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1bcc7ea90:;
						{
							_1a6ce3422_SetF64((*((*(_443434_d))))._field_Constant.ptr(), static_cast<jule::F64>(_1a6ce2597_AsF64((*((*(_443434_d))))._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1bcc7eb17:;
						{
							_1a6ce3422_SetF64((*((*(_443434_d))))._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_1a6ce2597_AsF64((*((*(_443434_d))))._field_Constant.ptr())))));
						}
					}
					_match_end_1bcc76e50:;
				};
			}
		}
		_match_end_1bcc75bda:;
	};
}



inline void _1ac850e79_updateModelToGenericIns(jule::Any* _446833_m, jule::Ptr<_1ac717170_FnIns>* _446852_f) {
	{
		auto &_match_expr{ (*(_446833_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bcc7b0ca:;
			{
				(*(_446833_m))=jule::Any((*(_446852_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1bcc7ee36:;
			{
				(*((*(_446833_m)).cast_ptr<_1ac70b076_StructSubIdentExprModel>(&__jule_any_type97)))._field_Method=(*(_446852_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1bcc7ee9c:;
			{
				(*((*(_446833_m)).cast_ptr<_1ac70b52c_StructStaticIdentExprModel>(&__jule_any_type95)))._field_Method=(*(_446852_f));
			}
		}
		_match_end_1bcc80ed1:;
	};
}



inline jule::Bool _1ac8512ed_pushSubIdentFromExpr(jule::Any _447929_expr, jule::Ptr<_1ac6c9088_SubIdentTypeDecl>* _447950_t) {
	{
		auto &_match_expr{ _447929_expr };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1bcc833e0:;
			{
				jule::Ptr<_1ac6ce3e0_IdentExpr> _448213_e = _447929_expr.cast_ptr<_1ac6ce3e0_IdentExpr>(&__jule_any_type79);;
				{ jule::Slice<jule::Ptr<_1ac6c8c8b_IdentTypeDecl>> &__jule_push_dest = (*((*(_447950_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1ac6c8c8b_IdentTypeDecl>(_1ac6c8c8b_IdentTypeDecl{._field_Token=(*(_448213_e))._field_Token, ._field_Ident=(*(_448213_e))._field_Ident, })); };
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1bcc83456:;
			{
				jule::Ptr<_1ac6d0ac8_SubIdentExpr> _448813_e = _447929_expr.cast_ptr<_1ac6d0ac8_SubIdentExpr>(&__jule_any_type85);;
				if ((!(_1ac8512ed_pushSubIdentFromExpr((*((*(_448813_e))._field_Expr))._field_Kind, _447950_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_1ac6c8c8b_IdentTypeDecl>> &__jule_push_dest = (*((*(_447950_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1ac6c8c8b_IdentTypeDecl>(_1ac6c8c8b_IdentTypeDecl{._field_Token=(*(_448813_e))._field_Ident, ._field_Ident=(*((*(_448813_e))._field_Ident))._field_Kind, })); };
			}
		}
		else {
			_case_begin_1bcc83379:;
			{
				return false;;
			}
		}
		_match_end_1bcc832ad:;
	};
	return true;;
}



inline jule::Str _1ac8515b7_constoa(jule::Ptr<_1a6cde8d5_Const>* _450213_c) {
	{
		
		if (_1a6ce38a6_IsI64((*(_450213_c)).ptr())) {
			_case_begin_1bcc8b0eb:;
			{
				return _1dbba370e_FmtInt(static_cast<jule::I64>(_1a6ce12aa_ReadI64((*(_450213_c)).ptr())), 10LL);;
			}
		}
		else if (_1a6ce3b3c_IsU64((*(_450213_c)).ptr())) {
			_case_begin_1bcc8b162:;
			{
				return _1dbba3346_FmtUint(static_cast<jule::U64>(_1a6ce1541_ReadU64((*(_450213_c)).ptr())), 10LL);;
			}
		}
		else {
			_case_begin_1bcc835bb:;
			{
				return jule::Str();;
			}
		}
		_match_end_1bcc83b0a:;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac856798_evalEnumStatic(jule::Ptr<_1ac729c54_Enum>* _451324_enm, jule::Ptr<_1ac7291d7_EnumItem>* _451341_item) {
	jule::Ptr<_1ac8243ae_Data> _45149_d = jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>((*(_451324_enm)), 3)}), });;
	if (((*(_451341_item)) != nullptr)) {
		(*(_45149_d))._field_Constant=jule::new_ptr<_1a6cde8d5_Const>((*((*((*((*((*(_451341_item))))._field_Value))._field_Data))._field_Constant)));
		(*(_45149_d))._field_Model=jule::Any((*(_45149_d))._field_Constant, &__jule_any_type19);
		_1ac8506e8_applyCastModelByEnum(&(_45149_d), (*(_451324_enm)));
	};
	return _45149_d;;
}



inline jule::Ptr<_1ac7072a3_StructLitExprModel> _1ac856a62_isLitBased(jule::Any* _453020_m) {
	{
		auto &_match_expr{ (*(_453020_m)) };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1bcc90a90:;
			{
				return (*(_453020_m)).cast_ptr<_1ac7072a3_StructLitExprModel>(&__jule_any_type94);;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1bcc90b06:;
			{
				return (*((*(_453020_m)).cast_ptr<_1ac7075a0_AllocStructLitExprModel>(&__jule_any_type112)))._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1bcc90b6c:;
			{
				jule::Ptr<_1ac70b076_StructSubIdentExprModel> _453713_ssi = (*(_453020_m)).cast_ptr<_1ac70b076_StructSubIdentExprModel>(&__jule_any_type97);;
				return _1ac856a62_isLitBased(&((*((*(_453713_ssi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1bcc90bd3:;
			{
				jule::Ptr<_1ac707b33_CastingExprModel> _454013_c = (*(_453020_m)).cast_ptr<_1ac707b33_CastingExprModel>(&__jule_any_type92);;
				return _1ac856a62_isLitBased(&((*(_454013_c))._field_Expr));;
			}
		}
		else {
			_case_begin_1bcc90a29:;
			{
				return nullptr;;
			}
		}
		_match_end_1bcc909c4:;
	};
}



inline void _1ac856d4d_makeImplicitDeref(jule::Ptr<_1ac8243ae_Data>* _454727_d, jule::Ptr<_1ac6b2e62_Token> _454741_baseToken) {
	jule::Ptr<_1ac7068ce_UnaryExprModel> _45489_unary = jule::new_ptr<_1ac7068ce_UnaryExprModel>(_1ac7068ce_UnaryExprModel{._field_Expr=jule::new_ptr<_1ac8243ae_Data>((*((*(_454727_d))))), ._field_Op=jule::new_ptr<_1ac6b2e62_Token>((*(_454741_baseToken)))});;
	(*((*(_45489_unary))._field_Op))._field_Id=static_cast<jule::U64>(62LLU);
	(*((*(_45489_unary))._field_Op))._field_Kind=jule::Str::lit("*", 1);
	(*((*(_454727_d))))._field_Model=jule::Any(_45489_unary, &__jule_any_type110);
}



inline void _1bcd74811_updateRefer(jule::Ptr<_1ac71a33d_ReferenceStack> _455823_ref, jule::Ptr<_1ac717170_FnIns>* _455846_old, jule::Ptr<_1ac717170_FnIns>* _455859_new) {
	{
		auto expr = &((*(_455823_ref))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcd7622a:;
		if (it != expr_end) {
			jule::I64 _45599_i = it - expr->begin();
			jule::Any _455912_sym = *it;
			{
				if ((__jule_any_type7_compare(_455912_sym, (*(_455846_old))))) {
					(*(_455823_ref))._field_buffer[_45599_i]=jule::Any((*(_455859_new)), &__jule_any_type7);
				};
			}
			_iter_next_1bcd7622a:;
			++it;
			_45599_i++;
			goto _iter_begin_1bcd7622a;
		}
		_iter_end_1bcd7622a:;
	};
}



inline jule::Bool _1ac875289_kindUsesGenerics(jule::Ptr<_1ac859a32_TypeKind>* _171126_k, jule::Slice<jule::Ptr<_1ac6d588b_GenericDecl>>* _171141_generics) {
	{
		auto expr = _171141_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd167e9a:;
		if (it != expr_end) {
			jule::Ptr<_1ac6d588b_GenericDecl> *_171212_g = it;
			{
				if (static__1ac874d5a_exist(&((*((*(_171212_g))))._field_Ident), _171126_k)) {
					return true;;
				};
			}
			_iter_next_1bd167e9a:;
			++it;
			goto _iter_begin_1bd167e9a;
		}
		_iter_end_1bd167e9a:;
	};
	return false;;
}



inline jule::Bool _1ac875652_hasDirective(jule::Slice<jule::Ptr<_1ac6c7a9d_Directive>>* _172122_directives, jule::Str _172153_tag) {
	{
		auto expr = _172122_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd1691aa:;
		if (it != expr_end) {
			jule::Ptr<_1ac6c7a9d_Directive> _172217_dr = *it;
			{
				if (((*((*(_172217_dr))._field_Tag))._field_Kind == _172153_tag)) {
					return true;;
				};
			}
			_iter_next_1bd1691aa:;
			++it;
			goto _iter_begin_1bd1691aa;
		}
		_iter_end_1bd1691aa:;
	};
	return false;;
}



inline jule::Bool _1ac87591b_canGetPtr(jule::Ptr<_1ac8243ae_Data>* _173019_d) {
	{
		
		if ((!((*((*(_173019_d))))._field_Lvalue)) || _1ac824c83_IsConst((*(_173019_d)).ptr())) {
			_case_begin_1bd16a1cd:;
			{
				return false;;
			}
		}
		else if ((_1ac85d470_Fn((*((*(_173019_d))))._field_Kind.ptr()) != nullptr) || (_1ac85c936_Enum((*((*(_173019_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd16a255:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1bd16952e:;
			{
				return true;;
			}
		}
		_match_end_1bd1694a7:;
	};
}



inline jule::Bool _1ac875c5c_isValidForSptrType(jule::Ptr<_1ac859a32_TypeKind>* _174228_t) {
	jule::Ptr<_1ac702105_StructIns> _17439_s = _1ac85d706_Struct((*(_174228_t)).ptr());;
	if ((((_17439_s != nullptr) && ((*(_17439_s))._field_Decl != nullptr)) && (*((*(_17439_s))._field_Decl))._field_Binded)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1ac876026_isValidForRef(jule::Ptr<_1ac859a32_TypeKind>* _175123_t) {
	return (_1ac85d470_Fn((*(_175123_t)).ptr()) == nullptr);;
}



inline jule::Bool _1ac8762e0_isBuiltinStrConvertable(jule::Ptr<_1ac859a32_TypeKind>* _175433_t) {
	return ((((!(_1ac85ad96_Void((*(_175433_t)).ptr()))) && (_1ac85d470_Fn((*(_175433_t)).ptr()) == nullptr)) && (_1ac85dea9_Tup((*(_175433_t)).ptr()) == nullptr)) && (!(_1ac85e240_comptime((*(_175433_t)).ptr()))));;
}



inline jule::Str _1ac8765a9_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _175827_tokens) {
	if ((((*(_175827_tokens)).len() == 1LL) && ((*((*(_175827_tokens))[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		return jule::Str::lit("std::unsafe", 11);;
	};
	jule::I64 _17629_n = 0LL;;
	{
		auto expr = _175827_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd171080:;
		if (it != expr_end) {
			jule::Ptr<_1ac6b2e62_Token> *_176312_token = it;
			{
				_17629_n+=(*((*(_176312_token))))._field_Kind.len();
				_17629_n+=2LL;
			}
			_iter_next_1bd171080:;
			++it;
			goto _iter_begin_1bd171080;
		}
		_iter_end_1bd171080:;
	};
	_1c164cc40_StrBuilder _17679_s = static__1c164d191_New(_17629_n);;
	{
		auto expr = _175827_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd171877:;
		if (it != expr_end) {
			jule::I64 _17689_i = it - expr->begin();
			jule::Ptr<_1ac6b2e62_Token> *_176812_token = it;
			{
				_1c164d702_WriteStr(&_17679_s, (*((*(_176812_token))))._field_Kind);
				if ((((*(_175827_tokens)).len() - _17689_i) > 1LL)) {
					_1c164d702_WriteStr(&_17679_s, jule::Str::lit("::", 2));
				};
			}
			_iter_next_1bd171877:;
			++it;
			_17689_i++;
			goto _iter_begin_1bd171877;
		}
		_iter_end_1bd171877:;
	};
	return _1c164dee9_Str(&_17679_s);;
}



inline jule::Ptr<_1ac86260b_Prim> _1ac876950_buildPrimType(jule::Str _177718_kind) {
	return jule::new_ptr<_1ac86260b_Prim>(_1ac86260b_Prim{._field_Kind=_177718_kind});;
}



inline void _1ac877005_applyImplicitCast(jule::Ptr<_1ac859a32_TypeKind>* _180527_dest, jule::Ptr<_1ac8243ae_Data>* _180549_d) {
	if (_1ac85ab10_IsNil((*((*(_180549_d))))._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1ac86260b_Prim> _18095_destPrim = _1ac85c183_Prim((*(_180527_dest)).ptr());;
	jule::Ptr<_1ac86260b_Prim> _18105_prim = _1ac85c183_Prim((*((*(_180549_d))))._field_Kind.ptr());;
	if ((_18095_destPrim != nullptr)) {
		if (_1ac865d29_IsAny(_18095_destPrim.ptr())) {
			if (((_18105_prim == nullptr) || (!(_1ac865d29_IsAny(_18105_prim.ptr()))))) {
				_1ac84ee34_applyCastKind(_180549_d, _180527_dest);
			};
			return;;
		};
		if (((((((!(_1ac85a879_Binded((*((*(_180549_d))))._field_Kind.ptr()))) && (!((*((*((*(_180549_d))))._field_Kind))._field_Variadic))) && (!((*((*(_180549_d))))._field_Lvalue))) && (!(_1ac824c83_IsConst((*(_180549_d)).ptr())))) && (_18105_prim != nullptr)) && _1a6cde2db_IsNum((*(_18105_prim))._field_Kind))) {
			_1ac84ee34_applyCastKind(_180549_d, _180527_dest);
		};
		return;;
	};
	jule::Ptr<_1ac727548_Trait> _18295_dt = _1ac85d98c_Trait((*(_180527_dest)).ptr());;
	if ((_18295_dt != nullptr)) {
		jule::Ptr<_1ac727548_Trait> _18319_bt = _1ac85d98c_Trait((*((*(_180549_d))))._field_Kind.ptr());;
		if (((_18319_bt == nullptr) || (_18319_bt != _18295_dt))) {
			_1ac84eb48_applyCastKindModel(_180549_d, _180527_dest);
			return;;
		};
	};
	if (((_1ac85cbbc_TypeEnum((*(_180527_dest)).ptr()) != nullptr) && (_1ac85cbbc_TypeEnum((*((*(_180549_d))))._field_Kind.ptr()) == nullptr))) {
		_1ac84eb48_applyCastKindModel(_180549_d, _180527_dest);
		return;;
	};
}



inline jule::Bool _1ac8772be_validTypeForXof(jule::Ptr<_1ac859a32_TypeKind>* _184425_t) {
	return ((!(_1ac85ad96_Void((*(_184425_t)).ptr()))) && (_1ac85d470_Fn((*(_184425_t)).ptr()) == nullptr));;
}



inline __jule_tuple_x_1ac81e013_SymbolTable__jule_tuple_s_1a756d63b_Log _1ac87a35a_buildSymbols(jule::Ptr<_1ac6c67a0_Ast>* _1622_ast, jule::Trait<_1ac7749e6_Importer>* _1638_importer, jule::Ptr<_1ac721421_symbolBuilder> _1662_owner) {
	__jule_tuple_x_1ac81e013_SymbolTable__jule_tuple_s_1a756d63b_Log __jule_func_result;
	jule::Ptr<_1ac721421_symbolBuilder> _179_sb = jule::new_ptr<_1ac721421_symbolBuilder>(_1ac721421_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_ast=(*(_1622_ast)), });;
	_1ac726910_build(_179_sb);
	if (((*(_179_sb))._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_179_sb))._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = (*(_179_sb))._field_errors;
	return __jule_func_result;;
}



inline __jule_tuple_x_1ac77a832_Package__jule_tuple_s_1a756d63b_Log _1ac87a7cd_analyzePackage(jule::Slice<jule::Ptr<_1ac6c67a0_Ast>>* _3024_files, jule::Trait<_1ac7749e6_Importer>* _3044_importer, jule::I64* _3065_flags) {
	__jule_tuple_x_1ac77a832_Package__jule_tuple_s_1a756d63b_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1ac81e013_SymbolTable>> _329_tables = jule::Slice<jule::Ptr<_1ac81e013_SymbolTable>>::alloc(0LL, (*(_3024_files)).len());;
	{
		auto expr = _3024_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd294d96:;
		if (it != expr_end) {
			jule::Ptr<_1ac6c67a0_Ast> _3317_f = *it;
			{
				jule::Ptr<_1ac81e013_SymbolTable> _3413_table;;
				jule::Slice<_1a756d63b_Log> _3424_errors;;
				({
					__jule_tuple_x_1ac81e013_SymbolTable__jule_tuple_s_1a756d63b_Log __jule_assign_result = _1ac87a35a_buildSymbols(&(_3317_f), _3044_importer, nullptr);
					_3413_table = __jule_assign_result.__jule_result_arg0;
					_3424_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_3424_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _3424_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_1ac81e013_SymbolTable>> &__jule_push_dest = _329_tables; __jule_push_dest.push(_3413_table); };
			}
			_iter_next_1bd294d96:;
			++it;
			goto _iter_begin_1bd294d96;
		}
		_iter_end_1bd294d96:;
	};
	jule::Ptr<_1ac797c7d_Sema> _419_sema = jule::new_ptr<_1ac797c7d_Sema>(_1ac797c7d_Sema{._field_flags=(*(_3065_flags)), ._field_meta=jule::new_ptr<_1ac797156_commonSemaMeta>()});;
	_1ac7b751c_check(_419_sema, &(_329_tables));
	if (((*(_419_sema))._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = (*(_419_sema))._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac77a832_Package> _509_pkg = jule::new_ptr<_1ac77a832_Package>(_1ac77a832_Package{._field_Files=(*(_419_sema))._field_files});;
	__jule_func_result.__jule_result_arg0 = _509_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1ac77a832_Package__jule_tuple_s_1a756d63b_Log _1ac87ac0c_AnalyzePackage(jule::Slice<jule::Ptr<_1ac6c67a0_Ast>> _7423_files, jule::Trait<_1ac7749e6_Importer> _7442_importer, jule::I64 _7462_flags) {
	__jule_tuple_x_1ac77a832_Package__jule_tuple_s_1a756d63b_Log __jule_func_result;
	if ((_7423_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac77a832_Package> _789_package;;
	jule::Slice<_1a756d63b_Log> _7822_logs;;
	({
		__jule_tuple_x_1ac77a832_Package__jule_tuple_s_1a756d63b_Log __jule_assign_result = _1ac87a7cd_analyzePackage(&(_7423_files), &(_7442_importer), &(_7462_flags));
		_789_package = __jule_assign_result.__jule_result_arg0;
		_7822_logs = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _789_package;
	__jule_func_result.__jule_result_arg1 = _7822_logs;
	return __jule_func_result;;
}



inline jule::Ptr<_1ac717170_FnIns> _1ac93b372_findBuiltinFunc(jule::Str* _2521_ident) {
	{
		auto &_match_expr{ (*(_2521_ident)) };
		
		if (_match_expr == jule::Str::lit("out", 3)) {
			_case_begin_1bd29e268:;
			{
				static jule::Ptr<_1ac717170_FnIns> _2820_f = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>(_1ac9424cc_builtinCallerOut), });;
				return _2820_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("outln", 5)) {
			_case_begin_1bd29e444:;
			{
				static jule::Ptr<_1ac717170_FnIns> _3120_f = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>(_1ac94290b_builtinCallerOutln), });;
				return _3120_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("new", 3)) {
			_case_begin_1bd29e4bb:;
			{
				static jule::Ptr<_1ac717170_FnIns> _3420_f = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>(_1ac942d3a_builtinCallerNew), });;
				return _3420_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("panic", 5)) {
			_case_begin_1bd29e543:;
			{
				static jule::Ptr<_1ac717170_FnIns> _3720_f = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>(_1ac943423_builtinCallerPanic), });;
				return _3720_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("make", 4)) {
			_case_begin_1bd29e5ba:;
			{
				static jule::Ptr<_1ac717170_FnIns> _4020_f = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>(_1ac943852_builtinCallerMake), });;
				return _4020_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("append", 6)) {
			_case_begin_1bd29e81d:;
			{
				static jule::Ptr<_1ac717170_FnIns> _4320_f = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>(_1ac943c81_builtinCallerAppend), });;
				return _4320_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("copy", 4)) {
			_case_begin_1bd29e895:;
			{
				static jule::Ptr<_1ac717170_FnIns> _4620_f = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>(_1ac944699_builtinCallerCopy), });;
				return _4620_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("len", 3)) {
			_case_begin_1bd29e91c:;
			{
				static jule::Ptr<_1ac717170_FnIns> _4920_f = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>(_1ac945d3d_builtinCallerLen), });;
				return _4920_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("cap", 3)) {
			_case_begin_1bd29e994:;
			{
				static jule::Ptr<_1ac717170_FnIns> _5220_f = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>(_1ac9465e1_builtinCallerCap), });;
				return _5220_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("delete", 6)) {
			_case_begin_1bd29ea71:;
			{
				static jule::Ptr<_1ac717170_FnIns> _5520_f = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>(_1ac947009_builtinCallerDelete), });;
				return _5520_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("assert", 6)) {
			_case_begin_1bd29eae8:;
			{
				static jule::Ptr<_1ac717170_FnIns> _5820_f = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>(_1ac947438_builtinCallerAssert), });;
				return _5820_f;;
			}
		}
		else {
			_case_begin_1bd29e3cd:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd29e378:;
	};
}



inline jule::Ptr<_1ac858c40_TypeAlias> _1ac93b680_primTypeAlias(jule::Ptr<_1ac859a32_TypeKind>* _6523_k) {
	return jule::new_ptr<_1ac858c40_TypeAlias>(_1ac858c40_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1ac861c04_TypeSymbol>(_1ac861c04_TypeSymbol{._field_Kind=(*(_6523_k))}), });;
}



inline jule::Ptr<_1ac7bb015_Var> _1ac940288_findBuiltinVar(jule::Str* _9320_ident) {
	{
		auto &_match_expr{ (*(_9320_ident)) };
		
		if (_match_expr == jule::Str::lit("nil", 3)) {
			_case_begin_1bd2a6da8:;
			{
				static jule::Ptr<_1ac7bb015_Var> _9620_v = jule::new_ptr<_1ac7bb015_Var>(_1ac7bb015_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=jule::new_ptr<_1ac861c04_TypeSymbol>(_1ac861c04_TypeSymbol{._field_Kind=_1ac93b98d_primNil}), ._field_Value=jule::new_ptr<_1ac825503_Value>(_1ac825503_Value{._field_Data=jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Constant=static__1a6ce0b4a_NewNil()})}), });;
				return _9620_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("true", 4)) {
			_case_begin_1bd2a6e1e:;
			{
				static jule::Ptr<_1ac7bb015_Var> _11120_v = jule::new_ptr<_1ac7bb015_Var>(_1ac7bb015_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=(*(_1ac9404b9_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1ac825503_Value>(_1ac825503_Value{._field_Data=jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Constant=static__1a6ce03a8_NewBool(true)})}), });;
				return _11120_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("false", 5)) {
			_case_begin_1bd2a6e85:;
			{
				static jule::Ptr<_1ac7bb015_Var> _12420_v = jule::new_ptr<_1ac7bb015_Var>(_1ac7bb015_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=(*(_1ac9404b9_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1ac825503_Value>(_1ac825503_Value{._field_Data=jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Constant=static__1a6ce03a8_NewBool(false)})}), });;
				return _12420_v;;
			}
		}
		else {
			_case_begin_1bd2a6d42:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd2a6c54:;
	};
}



inline jule::Ptr<_1ac858c40_TypeAlias> _1ac9404b9_findBuiltinTypeAlias(jule::Str _14125_ident) {
	{
		auto &_match_expr{ _14125_ident };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1bd2a757e:;
			{
				static jule::Ptr<_1ac858c40_TypeAlias> _14420_t = _1ac93b680_primTypeAlias(&(_1ac93c065_primAny));;
				return _14420_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_1bd2abc6a:;
			{
				static jule::Ptr<_1ac858c40_TypeAlias> _14720_t = _1ac93b680_primTypeAlias(&(_1ac93c373_primStr));;
				return _14720_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_1bd2abece:;
			{
				static jule::Ptr<_1ac858c40_TypeAlias> _15020_t = _1ac93b680_primTypeAlias(&(_1ac93c63c_primBool));;
				return _15020_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1bd2ac045:;
			{
				static jule::Ptr<_1ac858c40_TypeAlias> _15320_t = _1ac93b680_primTypeAlias(&(_1ac93c906_primUintptr));;
				return _15320_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1bd2ac0ab:;
			{
				static jule::Ptr<_1ac858c40_TypeAlias> _15620_t = _1ac93b680_primTypeAlias(&(_1ac93cbc0_primUint));;
				return _15620_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1bd2ac122:;
			{
				static jule::Ptr<_1ac858c40_TypeAlias> _15920_t = _1ac93b680_primTypeAlias(&(_1ac93d099_primInt));;
				return _15920_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1bd2ac210:;
			{
				static jule::Ptr<_1ac858c40_TypeAlias> _16220_t = _1ac93b680_primTypeAlias(&(_1ac93d363_primI8));;
				return _16220_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1bd2ac276:;
			{
				static jule::Ptr<_1ac858c40_TypeAlias> _16520_t = _1ac93b680_primTypeAlias(&(_1ac93d62c_primI16));;
				return _16520_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1bd2ac2dc:;
			{
				static jule::Ptr<_1ac858c40_TypeAlias> _16820_t = _1ac93b680_primTypeAlias(&(_1ac93dbb0_primI64));;
				return _16820_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1bd2ac353:;
			{
				static jule::Ptr<_1ac858c40_TypeAlias> _17120_t = _1ac93b680_primTypeAlias(&(_1ac93e243_primU16));;
				return _17120_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1bd2ac3ca:;
			{
				static jule::Ptr<_1ac858c40_TypeAlias> _17420_t = _1ac93b680_primTypeAlias(&(_1ac93e50c_primU32));;
				return _17420_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1bd2ac452:;
			{
				static jule::Ptr<_1ac858c40_TypeAlias> _17720_t = _1ac93b680_primTypeAlias(&(_1ac93e980_primU64));;
				return _17720_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1bd2ac4c9:;
			{
				static jule::Ptr<_1ac858c40_TypeAlias> _18020_t = _1ac93b680_primTypeAlias(&(_1ac93ec49_primF32));;
				return _18020_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1bd2ac551:;
			{
				static jule::Ptr<_1ac858c40_TypeAlias> _18320_t = _1ac93b680_primTypeAlias(&(_1ac940013_primF64));;
				return _18320_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("byte", 4) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1bd2ac5c8:;
			{
				static jule::Ptr<_1ac858c40_TypeAlias> _18620_t = _1ac93b680_primTypeAlias(&(_1ac93de79_primU8));;
				return _18620_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("rune", 4) || _match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1bd2ac650:;
			{
				static jule::Ptr<_1ac858c40_TypeAlias> _18920_t = _1ac93b680_primTypeAlias(&(_1ac93d8e6_primI32));;
				return _18920_t;;
			}
		}
		else {
			_case_begin_1bd2abac2:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd2aa362:;
	};
}



inline jule::Any _1ac940783_findBuiltinDef(jule::Str* _19620_ident) {
	jule::Ptr<_1ac7bb015_Var> _1979_v = _1ac940288_findBuiltinVar(_19620_ident);;
	if ((_1979_v != nullptr)) {
		return jule::Any(_1979_v, &__jule_any_type8);;
	};
	jule::Ptr<_1ac717170_FnIns> _2019_f = _1ac93b372_findBuiltinFunc(_19620_ident);;
	if ((_2019_f != nullptr)) {
		return jule::Any(_2019_f, &__jule_any_type7);;
	};
	jule::Ptr<_1ac858c40_TypeAlias> _2059_ta = _1ac9404b9_findBuiltinTypeAlias((*(_19620_ident)));;
	if ((_2059_ta != nullptr)) {
		return jule::Any(_2059_ta, &__jule_any_type66);;
	};
	return nullptr;;
}



inline jule::Any _1ac940a4c_findBuiltinDefStdDebug(jule::Str* _21228_ident) {
	{
		auto &_match_expr{ (*(_21228_ident)) };
		
		if (_match_expr == jule::Str::lit("Out", 3)) {
			_case_begin_1bd2b6c86:;
			{
				static jule::Ptr<_1ac717170_FnIns> _21520_f = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>(_1ac94aabd_builtinCallerStdDebugOut), });;
				return jule::Any(_21520_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Outln", 5)) {
			_case_begin_1bd2b6cec:;
			{
				static jule::Ptr<_1ac717170_FnIns> _21820_f = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>(_1ac94aeec_builtinCallerStdDebugOutln), });;
				return jule::Any(_21820_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1bd2b6c20:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd2b5acb:;
	};
}



inline jule::Any _1ac940d16_findBuiltinDefStdMem(jule::Str* _22526_ident) {
	{
		auto &_match_expr{ (*(_22526_ident)) };
		
		if (_match_expr == jule::Str::lit("SizeOf", 6)) {
			_case_begin_1bd2b8590:;
			{
				static jule::Ptr<_1ac717170_FnIns> _22820_f = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>(_1ac9494c3_builtinCallerStdMemSizeOf), });;
				return jule::Any(_22820_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("AlignOf", 7)) {
			_case_begin_1bd2b8606:;
			{
				static jule::Ptr<_1ac717170_FnIns> _23120_f = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>(_1ac949902_builtinCallerStdMemAlignOf), });;
				return jule::Any(_23120_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Free", 4)) {
			_case_begin_1bd2b866c:;
			{
				static jule::Ptr<_1ac717170_FnIns> _23420_f = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>(_1ac949d31_builtinCallerStdMemFree), });;
				return jule::Any(_23420_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1bd2b7bee:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd2b7b99:;
	};
}



inline jule::Any _1ac9411ac_findBuiltinDefStdComptime(jule::Str* _24131_ident) {
	{
		auto &_match_expr{ (*(_24131_ident)) };
		
		if (_match_expr == jule::Str::lit("TypeOf", 6)) {
			_case_begin_1bd2ba949:;
			{
				static jule::Ptr<_1ac717170_FnIns> _24420_f = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>(_1ac947a10_builtinCallerStdComptimeTypeOf), });;
				return jule::Any(_24420_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("ValueOf", 7)) {
			_case_begin_1bd2ba9b0:;
			{
				static jule::Ptr<_1ac717170_FnIns> _24720_f = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>(_1ac947dc8_builtinCallerStdComptimeValueOf), });;
				return jule::Any(_24720_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Line", 4)) {
			_case_begin_1bd2baa26:;
			{
				static jule::Ptr<_1ac717170_FnIns> _25020_f = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>(_1ac948307_builtinCallerStdComptimeLine), });;
				return jule::Any(_25020_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("File", 4)) {
			_case_begin_1bd2baa9d:;
			{
				static jule::Ptr<_1ac717170_FnIns> _25320_f = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>(_1ac948736_builtinCallerStdComptimeFile), });;
				return jule::Any(_25320_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Files", 5)) {
			_case_begin_1bd2bae00:;
			{
				static jule::Ptr<_1ac717170_FnIns> _25620_f = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>(_1ac948b65_builtinCallerStdComptimeFiles), });;
				return jule::Any(_25620_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("TypeAlias", 9)) {
			_case_begin_1bd2bae77:;
			{
				static jule::Ptr<_1ac717170_FnIns> _25920_f = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>(_1ac949094_builtinCallerStdComptimeTypeAlias), });;
				return jule::Any(_25920_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1bd2ba0a8:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd2ba053:;
	};
}



inline jule::Any _1ac941476_findBuiltinDefStdJuleIntegrated(jule::Str* _26637_ident) {
	{
		auto &_match_expr{ (*(_26637_ident)) };
		
		if (_match_expr == jule::Str::lit("ToStr", 5)) {
			_case_begin_1bd2beb90:;
			{
				static jule::Ptr<_1ac717170_FnIns> _26920_f = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>(_1ac94a260_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_26920_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Emit", 4)) {
			_case_begin_1bd2bec06:;
			{
				static jule::Ptr<_1ac717170_FnIns> _27220_f = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_Decl=jule::new_ptr<_1ac71426b_Fn>(_1ac71426b_Fn{._field_Generics=jule::Slice<jule::Ptr<_1ac6d588b_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>(_1ac94a68e_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_27220_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1bd2bb373:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd2bb31d:;
	};
}



inline jule::Any _1ac9417ea_findPackageBuiltinDef(jule::Str* _28427_linkPath, jule::Str* _28443_ident) {
	{
		auto &_match_expr{ (*(_28427_linkPath)) };
		
		if (_match_expr == jule::Str::lit("std::comptime", 13)) {
			_case_begin_1bd2c1eb1:;
			{
				return _1ac9411ac_findBuiltinDefStdComptime(_28443_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::debug", 10)) {
			_case_begin_1bd2c2027:;
			{
				return _1ac940a4c_findBuiltinDefStdDebug(_28443_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::mem", 8)) {
			_case_begin_1bd2c208d:;
			{
				return _1ac940d16_findBuiltinDefStdMem(_28443_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::jule::integrated", 21)) {
			_case_begin_1bd2c2104:;
			{
				return _1ac941476_findBuiltinDefStdJuleIntegrated(_28443_ident);;
			}
		}
		else {
			_case_begin_1bd2c1cb3:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd2c1c5d:;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac941c29_builtinCallerCommonPlain(jule::Ptr<_1ac8260a3_Eval>* _29934_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _29949_fc, jule::Ptr<_1ac8243ae_Data>* _29971_d) {
	jule::Ptr<_1ac717170_FnIns> _3009_f = _1ac85d470_Fn((*((*(_29971_d))))._field_Kind.ptr());;
	_1ac8147bc_fnCallArgChecker _3029_fcac = _1ac8147bc_fnCallArgChecker{._field_e=(*(_29934_e)), ._field_args=(*((*(_29949_fc))))._field_Args, ._field_errorToken=(*((*(_29949_fc))))._field_Token, ._field_f=_3009_f, ._field_dynamicAnnotation=false, };;
	if ((!(_1ac816d74_check(&_3029_fcac)))) {
		return nullptr;;
	};
	jule::Ptr<_1ac7084d5_FnCallExprModel> _3139_model = jule::new_ptr<_1ac7084d5_FnCallExprModel>(_1ac7084d5_FnCallExprModel{._field_Token=(*((*(_29949_fc))))._field_Token, ._field_Func=_3009_f, ._field_Expr=(*((*(_29971_d))))._field_Model, ._field_Args=_3029_fcac._field_argModels, });;
	if (((*(_3009_f))._field_Result == nullptr)) {
		(*(_29971_d))=_1ac850143_buildVoidData();
	} else {
		(*(_29971_d))=jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=(*(_3009_f))._field_Result, });
	};
	(*((*(_29971_d))))._field_Model=jule::Any(_3139_model, &__jule_any_type34);
	return (*(_29971_d));;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac94209d_builtinCallerError(jule::Ptr<_1ac8260a3_Eval>* _33228_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _33243_fc) {
	if (((*((*(_33243_fc))))._field_Args.len() < 1LL)) {
		_1ac826603_pushErr((*(_33228_e)).ptr(), (*((*(_33243_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("err", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_33243_fc))))._field_Args.len() > 1LL)) {
		_1ac826603_pushErr((*(_33228_e)).ptr(), (*((*((*(_33243_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("error", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1ac8243ae_Data> _3409_expr = _1ac844313_evalExpr((*(_33228_e)), (*((*(_33243_fc))))._field_Args[0LL]);;
	if ((_3409_expr == nullptr)) {
		return nullptr;;
	};
	if (_1ac824766_IsNil(_3409_expr.ptr())) {
		_1ac826603_pushErr((*(_33228_e)).ptr(), (*((*((*(_33243_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("you cannot call error function with nil", 39), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ac8243ae_Data> _3499_d = _1ac850143_buildVoidData();;
	(*(_3499_d))._field_Model=jule::Any(jule::new_ptr<_1ac70ed16_BuiltinErrorCallExprModel>(_1ac70ed16_BuiltinErrorCallExprModel{._field_Err=_3409_expr}), &__jule_any_type23);
	return _3499_d;;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac9424cc_builtinCallerOut(jule::Ptr<_1ac8260a3_Eval>* _35426_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _35441_fc, jule::Ptr<_1ac8243ae_Data>* ) {
	if (((*((*(_35441_fc))))._field_Args.len() < 1LL)) {
		_1ac826603_pushErr((*(_35426_e)).ptr(), (*((*(_35441_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("v", 1), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_35441_fc))))._field_Args.len() > 1LL)) {
		_1ac826603_pushErr((*(_35426_e)).ptr(), (*((*((*(_35441_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("out", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1ac8243ae_Data> _3639_expr = _1ac844313_evalExpr((*(_35426_e)), (*((*(_35441_fc))))._field_Args[0LL]);;
	if ((_3639_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ac8762e0_isBuiltinStrConvertable(&((*(_3639_expr))._field_Kind))))) {
		_1ac826603_pushErr((*(_35426_e)).ptr(), (*((*((*(_35441_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac8243ae_Data> _3739_d = _1ac850143_buildVoidData();;
	(*(_3739_d))._field_Model=jule::Any(jule::new_ptr<_1ac70c0cc_BuiltinOutCallExprModel>(_1ac70c0cc_BuiltinOutCallExprModel{._field_Expr=(*(_3639_expr))._field_Model, }), &__jule_any_type27);
	return _3739_d;;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac94290b_builtinCallerOutln(jule::Ptr<_1ac8260a3_Eval>* _37828_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _37843_fc, jule::Ptr<_1ac8243ae_Data>* _37865_d) {
	(*(_37865_d))=_1ac9424cc_builtinCallerOut(_37828_e, _37843_fc, _37865_d);
	if (((*(_37865_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*(_37865_d))))._field_Model=jule::Any(jule::new_ptr<_1ac70c4a6_BuiltinOutlnCallExprModel>(_1ac70c4a6_BuiltinOutlnCallExprModel{._field_Expr=(*((*((*(_37865_d))))._field_Model.cast_ptr<_1ac70c0cc_BuiltinOutCallExprModel>(&__jule_any_type27)))._field_Expr, }), &__jule_any_type28);
	return (*(_37865_d));;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac942d3a_builtinCallerNew(jule::Ptr<_1ac8260a3_Eval>* _39026_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _39041_fc, jule::Ptr<_1ac8243ae_Data>* _39063_d) {
	if (((*((*(_39041_fc))))._field_Args.len() < 1LL)) {
		_1ac826603_pushErr((*(_39026_e)).ptr(), (*((*(_39041_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_39041_fc))))._field_Args.len() > 2LL)) {
		_1ac826603_pushErr((*(_39026_e)).ptr(), (*((*((*(_39041_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("new", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1ac8243ae_Data> _3999_t = _1ac8434ee_evalExprKind((*(_39026_e)), (*((*((*(_39041_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_3999_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_3999_t))._field_Decl))) {
		_1ac826603_pushErr((*(_39026_e)).ptr(), (*((*((*(_39041_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1ac875c5c_isValidForSptrType(&((*(_3999_t))._field_Kind))))) {
		jule::Ptr<_1ac702105_StructIns> _41013_s = _1ac85d706_Struct((*(_3999_t))._field_Kind.ptr());;
		if ((((_41013_s != nullptr) && ((*(_41013_s))._field_Decl != nullptr)) && (*((*(_41013_s))._field_Decl))._field_Binded)) {
			_1ac826603_pushErr((*(_39026_e)).ptr(), (*((*((*(_39041_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*((*(_39063_d))))._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(jule::new_ptr<_1ac866137_Sptr>(_1ac866137_Sptr{._field_Elem=(*(_3999_t))._field_Kind}), 21)});
	if (((*((*(_39041_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1ac859a32_TypeKind> _42413_old = (*((*(_39026_e))))._field_prefix;;
		(*((*(_39026_e))))._field_prefix=(*(_3999_t))._field_Kind;
		jule::Ptr<_1ac8243ae_Data> _42713_init = _1ac844313_evalExpr((*(_39026_e)), (*((*(_39041_fc))))._field_Args[1LL]);;
		(*((*(_39026_e))))._field_prefix=_42413_old;
		if ((_42713_init != nullptr)) {
			jule::Ptr<_1ac6b2e62_Token> _43217_token = (*((*((*(_39041_fc))))._field_Args[1LL]))._field_Token;;
			;
			_1ac7a7760_checkValidityForInitExpr((*((*(_39026_e))))._field_s, (!((*((*(_39026_e))))._field_immutable)), false, &((*(_3999_t))._field_Kind), &(_42713_init), &(_43217_token));
			_1ac7a33c6_checkAssignType((*((*(_39026_e))))._field_s, false, &((*(_3999_t))._field_Kind), &(_42713_init), _43217_token);
			(*((*(_39063_d))))._field_Model=jule::Any(jule::new_ptr<_1ac70c880_BuiltinNewCallExprModel>(_1ac70c880_BuiltinNewCallExprModel{._field_Kind=(*(_3999_t))._field_Kind, ._field_Init=(*(_42713_init))._field_Model}), &__jule_any_type113);
		};
	} else {
		(*((*(_39063_d))))._field_Model=jule::Any(jule::new_ptr<_1ac70c880_BuiltinNewCallExprModel>(_1ac70c880_BuiltinNewCallExprModel{._field_Kind=(*(_3999_t))._field_Kind, }), &__jule_any_type113);
	};
	return (*(_39063_d));;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac943423_builtinCallerPanic(jule::Ptr<_1ac8260a3_Eval>* _45228_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _45243_fc, jule::Ptr<_1ac8243ae_Data>* ) {
	if (((*((*(_45243_fc))))._field_Args.len() < 1LL)) {
		_1ac826603_pushErr((*(_45228_e)).ptr(), (*((*(_45243_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("message", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_45243_fc))))._field_Args.len() > 1LL)) {
		_1ac826603_pushErr((*(_45228_e)).ptr(), (*((*((*(_45243_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("panic", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1ac8243ae_Data> _4619_expr = _1ac844313_evalExpr((*(_45228_e)), (*((*(_45243_fc))))._field_Args[0LL]);;
	if ((_4619_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1ac85c183_Prim((*(_4619_expr))._field_Kind.ptr()) == nullptr) || (!(_1ac865a93_IsStr(_1ac85c183_Prim((*(_4619_expr))._field_Kind.ptr()).ptr()))))) {
		_1ac826603_pushErr((*(_45228_e)).ptr(), (*((*(_45243_fc))))._field_Token, jule::Str::lit("panic function only accepts strings", 35), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ac8243ae_Data> _4709_d = _1ac850143_buildVoidData();;
	(*(_4709_d))._field_Model=jule::Any(jule::new_ptr<_1ac70cc59_BuiltinPanicCallExprModel>(_1ac70cc59_BuiltinPanicCallExprModel{._field_Token=(*((*(_45243_fc))))._field_Token, ._field_Expr=(*(_4619_expr))._field_Model}), &__jule_any_type29);
	return _4709_d;;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac943852_builtinCallerMake(jule::Ptr<_1ac8260a3_Eval>* _47827_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _47842_fc, jule::Ptr<_1ac8243ae_Data>* _47864_d) {
	if (((*((*(_47842_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_47842_fc))))._field_Args.len() == 1LL)) {
			_1ac826603_pushErr((*(_47827_e)).ptr(), (*((*(_47842_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("size", 4), &__jule_any_type4)}));
			return nullptr;;
		};
		_1ac826603_pushErr((*(_47827_e)).ptr(), (*((*(_47842_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type, size", 10), &__jule_any_type4)}));
		return nullptr;;
	} else if (((*((*(_47842_fc))))._field_Args.len() > 3LL)) {
		_1ac826603_pushErr((*(_47827_e)).ptr(), (*((*((*(_47842_fc))))._field_Args[3LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("make", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ac8243ae_Data> _4919_t = _1ac8434ee_evalExprKind((*(_47827_e)), (*((*((*(_47842_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_4919_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_4919_t))._field_Decl))) {
		_1ac826603_pushErr((*(_47827_e)).ptr(), (*((*((*(_47842_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_1ac85d1d9_Slc((*(_4919_t))._field_Kind.ptr()) == nullptr)) {
		_1ac826603_pushErr((*(_47827_e)).ptr(), (*((*((*(_47842_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_4919_t))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("make", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	(*((*(_47864_d))))._field_Kind=(*(_4919_t))._field_Kind;
	jule::Ptr<_1ac8243ae_Data> _5069_lenExpr = _1ac844313_evalExpr(_1ac7a2a24_evalp((*((*(_47827_e))))._field_s, (*((*(_47827_e))))._field_lookup, (*(_4919_t))._field_Kind), (*((*(_47842_fc))))._field_Args[1LL]);;
	if ((_5069_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1ac8302dd_checkIntegerIndexingByData((*(_47827_e)).ptr(), &(_5069_lenExpr), (*((*((*(_47842_fc))))._field_Args[1LL]))._field_Token);
	jule::Ptr<_1ac70d6b6_BuiltinMakeCallExprModel> _5139_model = jule::new_ptr<_1ac70d6b6_BuiltinMakeCallExprModel>(_1ac70d6b6_BuiltinMakeCallExprModel{._field_Kind=(*(_4919_t))._field_Kind, ._field_Len=(*(_5069_lenExpr))._field_Model, });;
	(*((*(_47864_d))))._field_Model=jule::Any(_5139_model, &__jule_any_type114);
	if (((*((*(_47842_fc))))._field_Args.len() == 3LL)) {
		jule::Ptr<_1ac8243ae_Data> _51913_capExpr = _1ac844313_evalExpr(_1ac7a2a24_evalp((*((*(_47827_e))))._field_s, (*((*(_47827_e))))._field_lookup, (*(_4919_t))._field_Kind), (*((*(_47842_fc))))._field_Args[2LL]);;
		if ((_51913_capExpr == nullptr)) {
			return (*(_47864_d));;
		};
		_1ac8302dd_checkIntegerIndexingByData((*(_47827_e)).ptr(), &(_51913_capExpr), (*((*((*(_47842_fc))))._field_Args[2LL]))._field_Token);
		(*(_5139_model))._field_Cap=(*(_51913_capExpr))._field_Model;
	};
	return (*(_47864_d));;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac943c81_builtinCallerAppend(jule::Ptr<_1ac8260a3_Eval>* _52929_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _52944_fc, jule::Ptr<_1ac8243ae_Data>* _52966_d) {
	if (((*((*(_52944_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_52944_fc))))._field_Args.len() == 1LL)) {
			_1ac826603_pushErr((*(_52929_e)).ptr(), (*((*(_52944_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src", 3), &__jule_any_type4)}));
			return nullptr;;
		};
		_1ac826603_pushErr((*(_52929_e)).ptr(), (*((*(_52944_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ac8243ae_Data> _5399_t = _1ac844313_evalExpr((*(_52929_e)), (*((*(_52944_fc))))._field_Args[0LL]);;
	if ((_5399_t == nullptr)) {
		return nullptr;;
	};
	if ((_1ac85d1d9_Slc((*(_5399_t))._field_Kind.ptr()) == nullptr)) {
		_1ac826603_pushErr((*(_52929_e)).ptr(), (*((*((*(_52944_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac717170_FnIns> _5499_f = jule::new_ptr<_1ac717170_FnIns>(_1ac717170_FnIns{._field_Params=jule::Slice<jule::Ptr<_1ac7161c4_ParamIns>>::make({jule::new_ptr<_1ac7161c4_ParamIns>(_1ac7161c4_ParamIns{._field_Decl=jule::new_ptr<_1ac712797_Param>(_1ac712797_Param{._field_Mutable=true, }), ._field_Kind=(*(_5399_t))._field_Kind}),jule::new_ptr<_1ac7161c4_ParamIns>(_1ac7161c4_ParamIns{._field_Decl=jule::new_ptr<_1ac712797_Param>(_1ac712797_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=(*(_1ac85d1d9_Slc((*(_5399_t))._field_Kind.ptr())))._field_Elem})}), ._field_Result=(*(_5399_t))._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_1ac8243ae_Data>(jule::Ptr<_1ac8260a3_Eval>*,jule::Ptr<_1ac6d16de_FnCallExpr>*,jule::Ptr<_1ac8243ae_Data>*)>(_1ac941c29_builtinCallerCommonPlain), });;
	(*((*(_52966_d))))._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(_5499_f, 1)});
	(*(_52966_d))=_1ac941c29_builtinCallerCommonPlain(_52929_e, _52944_fc, _52966_d);
	if (((*(_52966_d)) != nullptr)) {
		jule::Ptr<_1ac7084d5_FnCallExprModel> _57313_model = (*((*(_52966_d))))._field_Model.cast_ptr<_1ac7084d5_FnCallExprModel>(&__jule_any_type34);;
		(*((*(_52966_d))))._field_Model=jule::Any(jule::new_ptr<_1ac70da90_BuiltinAppendCallExprModel>(_1ac70da90_BuiltinAppendCallExprModel{._field_Dest=(*(_57313_model))._field_Args[0LL], ._field_Elements=(*(_57313_model))._field_Args[1LL]}), &__jule_any_type26);
	};
	return (*(_52966_d));;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac94426a_callerCopySlice(jule::Ptr<_1ac8243ae_Data>* _58225_dest, jule::Ptr<_1ac8260a3_Eval>* _58243_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _58258_fc, jule::Ptr<_1ac8243ae_Data>* _58280_d) {
	if ((!((*((*(_58225_dest))))._field_Mutable))) {
		_1ac826603_pushErr((*(_58243_e)).ptr(), (*((*((*(_58258_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ac8243ae_Data> _5879_src = _1ac844313_evalExpr((*(_58243_e)), (*((*(_58258_fc))))._field_Args[1LL]);;
	if ((_5879_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ac866b0a_Slc> _5919_slc = _1ac85d1d9_Slc((*(_5879_src))._field_Kind.ptr());;
	if ((_5919_slc != nullptr)) {
		if (((!((*(_5879_src))._field_Mutable)) && _1ac85b3b3_Mutable((*(_5919_slc))._field_Elem.ptr()))) {
			_1ac826603_pushErr((*(_58243_e)).ptr(), (*((*((*(_58258_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		};
		if ((!(_1ac85a23b_Equal((*((*(_58225_dest))))._field_Kind, (*(_5879_src))._field_Kind)))) {
			_1ac826603_pushErr((*(_58243_e)).ptr(), (*((*((*(_58258_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*((*(_58225_dest))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ac859dea_Str((*(_5879_src))._field_Kind.ptr()), &__jule_any_type4)}));
		};
	} else {
		jule::Ptr<_1ac86260b_Prim> _6019_destPrim = _1ac85c183_Prim((*(_1ac85d1d9_Slc((*((*(_58225_dest))))._field_Kind.ptr())))._field_Elem.ptr());;
		jule::Ptr<_1ac86260b_Prim> _6029_prim = _1ac85c183_Prim((*(_5879_src))._field_Kind.ptr());;
		if (((((_6019_destPrim == nullptr) || (_6029_prim == nullptr)) || (!(_1ac865a93_IsStr(_6029_prim.ptr())))) || (!(_1ac864003_IsU8(_6019_destPrim.ptr()))))) {
			_1ac826603_pushErr((*(_58243_e)).ptr(), (*((*((*(_58258_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*((*(_58225_dest))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ac859dea_Str((*(_5879_src))._field_Kind.ptr()), &__jule_any_type4)}));
		};
	};
	(*((*(_58280_d))))._field_Kind=_1ac81ccae_lenKind();
	(*((*(_58280_d))))._field_Model=jule::Any(jule::new_ptr<_1ac70e93c_BuiltinCopyCallExprModel>(_1ac70e93c_BuiltinCopyCallExprModel{._field_Dest=(*(_58225_dest)), ._field_Src=_5879_src}), &__jule_any_type31);
	return (*(_58280_d));;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac944699_builtinCallerCopy(jule::Ptr<_1ac8260a3_Eval>* _61627_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _61642_fc, jule::Ptr<_1ac8243ae_Data>* _61664_d) {
	if (((*((*(_61642_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_61642_fc))))._field_Args.len() == 1LL)) {
			_1ac826603_pushErr((*(_61627_e)).ptr(), (*((*(_61642_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src", 3), &__jule_any_type4)}));
			return nullptr;;
		};
		_1ac826603_pushErr((*(_61627_e)).ptr(), (*((*(_61642_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_61642_fc))))._field_Args.len() > 2LL)) {
		_1ac826603_pushErr((*(_61627_e)).ptr(), (*((*((*(_61642_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("copy", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1ac8243ae_Data> _6299_dest = _1ac844313_evalExpr((*(_61627_e)), (*((*(_61642_fc))))._field_Args[0LL]);;
	{
		
		if ((_6299_dest == nullptr)) {
			_case_begin_1bd324e37:;
			{
				return nullptr;;
			}
		}
		else if ((_1ac85d1d9_Slc((*(_6299_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd325b08:;
			{
				return _1ac94426a_callerCopySlice(&(_6299_dest), _61627_e, _61642_fc, _61664_d);;
			}
		}
		else {
			_case_begin_1bd324a91:;
			{
				_1ac826603_pushErr((*(_61627_e)).ptr(), (*((*((*(_61642_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bd323111:;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac944a1d_callerLenSlice(jule::Ptr<_1ac8243ae_Data>* _64124_expr, jule::Ptr<_1ac8243ae_Data>* _64142_d) {
	(*((*(_64142_d))))._field_Kind=_1ac81ccae_lenKind();
	(*((*(_64142_d))))._field_Model=jule::Any(jule::new_ptr<_1ac70dd8c_BuiltinLenCallExprModel>(_1ac70dd8c_BuiltinLenCallExprModel{._field_Expr=(*(_64124_expr))}), &__jule_any_type115);
	return (*(_64142_d));;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac944d92_callerLenMap(jule::Ptr<_1ac8243ae_Data>* _64922_expr, jule::Ptr<_1ac8243ae_Data>* _64940_d) {
	(*((*(_64940_d))))._field_Kind=_1ac81ccae_lenKind();
	(*((*(_64940_d))))._field_Model=jule::Any(jule::new_ptr<_1ac70dd8c_BuiltinLenCallExprModel>(_1ac70dd8c_BuiltinLenCallExprModel{._field_Expr=(*(_64922_expr))}), &__jule_any_type115);
	return (*(_64940_d));;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac945216_callerLenArr(jule::Ptr<_1ac8243ae_Data>* _65722_expr, jule::Ptr<_1ac8243ae_Data>* _65740_d) {
	(*((*(_65740_d))))._field_Kind=_1ac81ccae_lenKind();
	(*((*(_65740_d))))._field_Constant=static__1a6cded25_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_1ac85ce53_Arr((*((*(_65722_expr))))._field_Kind.ptr())))._field_N)));
	(*((*(_65740_d))))._field_Model=jule::Any((*((*(_65740_d))))._field_Constant, &__jule_any_type19);
	return (*(_65740_d));;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac94558a_callerLenStr(jule::Ptr<_1ac8243ae_Data>* _66422_expr, jule::Ptr<_1ac8243ae_Data>* _66440_d) {
	(*((*(_66440_d))))._field_Kind=_1ac81ccae_lenKind();
	if (_1ac824c83_IsConst((*(_66422_expr)).ptr())) {
		(*((*(_66440_d))))._field_Constant=static__1a6cded25_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1a6ce1a5d_ReadStr((*((*(_66422_expr))))._field_Constant.ptr()).len())));
		(*((*(_66440_d))))._field_Model=jule::Any((*((*(_66440_d))))._field_Constant, &__jule_any_type19);
	} else {
		(*((*(_66440_d))))._field_Model=jule::Any(jule::new_ptr<_1ac70dd8c_BuiltinLenCallExprModel>(_1ac70dd8c_BuiltinLenCallExprModel{._field_Expr=(*(_66422_expr))}), &__jule_any_type115);
	};
	return (*(_66440_d));;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac94590e_callerLenComptime(jule::Ptr<_1ac8243ae_Data>* _67727_d, jule::I64 _67737_n) {
	(*((*(_67727_d))))._field_Kind=_1ac81ccae_lenKind();
	(*((*(_67727_d))))._field_Constant=static__1a6cded25_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_67737_n)));
	(*((*(_67727_d))))._field_Model=jule::Any((*((*(_67727_d))))._field_Constant, &__jule_any_type19);
	return (*(_67727_d));;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac945d3d_builtinCallerLen(jule::Ptr<_1ac8260a3_Eval>* _68426_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _68441_fc, jule::Ptr<_1ac8243ae_Data>* _68463_d) {
	if (((*((*(_68441_fc))))._field_Args.len() < 1LL)) {
		_1ac826603_pushErr((*(_68426_e)).ptr(), (*((*(_68441_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_68441_fc))))._field_Args.len() > 1LL)) {
		_1ac826603_pushErr((*(_68426_e)).ptr(), (*((*((*(_68441_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("len", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1ac8243ae_Data> _6929_dest = _1ac843ec2_evalExpr1((*(_68426_e)), (*((*(_68441_fc))))._field_Args[0LL]);;
	{
		
		if ((_6929_dest == nullptr)) {
			_case_begin_1bd332010:;
			{
				return nullptr;;
			}
		}
		else if ((_1ac85d1d9_Slc((*(_6929_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd332bd1:;
			{
				return _1ac944a1d_callerLenSlice(&(_6929_dest), _68463_d);;
			}
		}
		else if ((_1ac85ce53_Arr((*(_6929_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd332c47:;
			{
				return _1ac945216_callerLenArr(&(_6929_dest), _68463_d);;
			}
		}
		else if ((_1ac85dc23_Map((*(_6929_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd332cad:;
			{
				return _1ac944d92_callerLenMap(&(_6929_dest), _68463_d);;
			}
		}
		else if (((_1ac85c183_Prim((*(_6929_dest))._field_Kind.ptr()) != nullptr) && _1ac865a93_IsStr(_1ac85c183_Prim((*(_6929_dest))._field_Kind.ptr()).ptr()))) {
			_case_begin_1bd331bd0:;
			{
				return _1ac94558a_callerLenStr(&(_6929_dest), _68463_d);;
			}
		}
		else if ((_1ac85e4c6_comptimeStructFields((*(_6929_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd331c46:;
			{
				return _1ac94590e_callerLenComptime(_68463_d, static_cast<jule::I64>((*(_1ac85e4c6_comptimeStructFields((*(_6929_dest))._field_Kind.ptr())))._field_fields.len()));;
			}
		}
		else if ((_1ac85e9e3_comptimeEnumFields((*(_6929_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd331cac:;
			{
				return _1ac94590e_callerLenComptime(_68463_d, static_cast<jule::I64>((*(_1ac85e9e3_comptimeEnumFields((*(_6929_dest))._field_Kind.ptr())))._field_fields.len()));;
			}
		}
		else if ((_1ac8607b3_comptimeTypeInfos((*(_6929_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd331d23:;
			{
				return _1ac94590e_callerLenComptime(_68463_d, static_cast<jule::I64>((*(_1ac8607b3_comptimeTypeInfos((*(_6929_dest))._field_Kind.ptr())))._field_types.len()));;
			}
		}
		else if ((_1ac860010_comptimeParams((*(_6929_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd332d79:;
			{
				return _1ac94590e_callerLenComptime(_68463_d, static_cast<jule::I64>((*(_1ac860010_comptimeParams((*(_6929_dest))._field_Kind.ptr())))._field_params.len()));;
			}
		}
		else if ((_1ac860cd0_comptimeStatics((*(_6929_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd332de0:;
			{
				return _1ac94590e_callerLenComptime(_68463_d, static_cast<jule::I64>((*(_1ac860cd0_comptimeStatics((*(_6929_dest))._field_Kind.ptr())))._field_fields.len()));;
			}
		}
		else if ((_1ac861819_comptimeFiles((*(_6929_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd332e56:;
			{
				return _1ac94590e_callerLenComptime(_68463_d, static_cast<jule::I64>((*(_1ac861819_comptimeFiles((*(_6929_dest))._field_Kind.ptr())))._field_files.len()));;
			}
		}
		else {
			_case_begin_1bd331b69:;
			{
				_1ac826603_pushErr((*(_68426_e)).ptr(), (*((*((*(_68441_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bd3301d9:;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac9461b2_callerCapSlice(jule::Ptr<_1ac8243ae_Data>* _72224_expr, jule::Ptr<_1ac8243ae_Data>* _72242_d) {
	(*((*(_72242_d))))._field_Kind=_1ac81ccae_lenKind();
	(*((*(_72242_d))))._field_Model=jule::Any(jule::new_ptr<_1ac70e189_BuiltinCapCallExprModel>(_1ac70e189_BuiltinCapCallExprModel{._field_Expr=(*(_72224_expr))}), &__jule_any_type116);
	return (*(_72242_d));;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac9465e1_builtinCallerCap(jule::Ptr<_1ac8260a3_Eval>* _73026_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _73041_fc, jule::Ptr<_1ac8243ae_Data>* _73063_d) {
	if (((*((*(_73041_fc))))._field_Args.len() < 1LL)) {
		_1ac826603_pushErr((*(_73026_e)).ptr(), (*((*(_73041_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_73041_fc))))._field_Args.len() > 1LL)) {
		_1ac826603_pushErr((*(_73026_e)).ptr(), (*((*((*(_73041_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("cap", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1ac8243ae_Data> _7389_dest = _1ac844313_evalExpr((*(_73026_e)), (*((*(_73041_fc))))._field_Args[0LL]);;
	{
		
		if ((_7389_dest == nullptr)) {
			_case_begin_1bd341b57:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7389_dest))._field_Decl) {
			_case_begin_1bd342828:;
			{
				_1ac826603_pushErr((*(_73026_e)).ptr(), (*((*((*(_73041_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1ac85d1d9_Slc((*(_7389_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd34288e:;
			{
				return _1ac9461b2_callerCapSlice(&(_7389_dest), _73063_d);;
			}
		}
		else {
			_case_begin_1bd3417b1:;
			{
				_1ac826603_pushErr((*(_73026_e)).ptr(), (*((*((*(_73041_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bd33ed31:;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac946aca_callerDeleteMap(jule::Ptr<_1ac8260a3_Eval>* _75325_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _75340_fc, jule::Ptr<_1ac8243ae_Data>* _75362_expr, jule::Ptr<_1ac8243ae_Data>* _75380_d) {
	if ((!((*((*(_75362_expr))))._field_Mutable))) {
		_1ac826603_pushErr((*(_75325_e)).ptr(), (*((*((*(_75340_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	(*(_75380_d))=_1ac850143_buildVoidData();
	jule::Ptr<_1ac70e563_BuiltinDeleteCallExprModel> _7589_model = jule::new_ptr<_1ac70e563_BuiltinDeleteCallExprModel>(_1ac70e563_BuiltinDeleteCallExprModel{._field_Dest=(*(_75362_expr)), });;
	if (((*((*(_75340_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1ac8243ae_Data> _76213_key = _1ac844313_evalExpr((*(_75325_e)), (*((*(_75340_fc))))._field_Args[1LL]);;
		{
			
			if ((_76213_key == nullptr)) {
				_case_begin_1bd3486b9:;
				{
					return nullptr;;
				}
			}
			else if ((*(_76213_key))._field_Decl) {
				_case_begin_1bd3472ab:;
				{
					_1ac826603_pushErr((*(_75325_e)).ptr(), (*((*((*(_75340_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1bd347245:;
				{
					;
					jule::Ptr<_1ac859a32_TypeKind> _77117_keyType = (*(_1ac85dc23_Map((*((*(_75362_expr))))._field_Kind.ptr())))._field_Key;;
					if ((!(_1ac7a33c6_checkAssignType((*((*(_75325_e))))._field_s, false, &(_77117_keyType), &(_76213_key), (*((*((*(_75340_fc))))._field_Args[1LL]))._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_1bd3471ce:;
		};
		(*(_7589_model))._field_Key=_76213_key;
	};
	(*((*(_75380_d))))._field_Model=jule::Any(_7589_model, &__jule_any_type32);
	return (*(_75380_d));;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac947009_builtinCallerDelete(jule::Ptr<_1ac8260a3_Eval>* _78229_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _78244_fc, jule::Ptr<_1ac8243ae_Data>* _78266_d) {
	if (((*((*(_78244_fc))))._field_Args.len() < 1LL)) {
		_1ac826603_pushErr((*(_78229_e)).ptr(), (*((*(_78244_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("map", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_78244_fc))))._field_Args.len() > 2LL)) {
		_1ac826603_pushErr((*(_78229_e)).ptr(), (*((*((*(_78244_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("delete", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1ac8243ae_Data> _7909_dest = _1ac844313_evalExpr((*(_78229_e)), (*((*(_78244_fc))))._field_Args[0LL]);;
	{
		
		if ((_7909_dest == nullptr)) {
			_case_begin_1bd34e5b0:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7909_dest))._field_Decl) {
			_case_begin_1bd350281:;
			{
				_1ac826603_pushErr((*(_78229_e)).ptr(), (*((*((*(_78244_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1ac85dc23_Map((*(_7909_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd3502e7:;
			{
				return _1ac946aca_callerDeleteMap(_78229_e, _78244_fc, &(_7909_dest), _78266_d);;
			}
		}
		else {
			_case_begin_1bd34e219:;
			{
				_1ac826603_pushErr((*(_78229_e)).ptr(), (*((*((*(_78244_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bd34c789:;
	};
}



inline jule::Ptr<_1ac8243ae_Data> _1ac947438_builtinCallerAssert(jule::Ptr<_1ac8260a3_Eval>* _80529_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _80544_fc, jule::Ptr<_1ac8243ae_Data>* ) {
	if (((*((*(_80544_fc))))._field_Args.len() < 1LL)) {
		_1ac826603_pushErr((*(_80529_e)).ptr(), (*((*(_80544_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_80544_fc))))._field_Args.len() > 2LL)) {
		_1ac826603_pushErr((*(_80529_e)).ptr(), (*((*((*(_80544_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("assert", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1ac8243ae_Data> _8149_expr = _1ac844313_evalExpr((*(_80529_e)), (*((*(_80544_fc))))._field_Args[0LL]);;
	if ((_8149_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1ac85c183_Prim((*(_8149_expr))._field_Kind.ptr()) == nullptr) || (!(_1ac86580c_IsBool(_1ac85c183_Prim((*(_8149_expr))._field_Kind.ptr()).ptr()))))) {
		_1ac826603_pushErr((*(_80529_e)).ptr(), (*((*(_80544_fc))))._field_Token, jule::Str::lit("assertion requires boolean expression", 37), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ac70d210_BuiltinAssertCallExprModel> _8239_model = jule::new_ptr<_1ac70d210_BuiltinAssertCallExprModel>(_1ac70d210_BuiltinAssertCallExprModel{._field_Token=(*((*(_80544_fc))))._field_Token, ._field_Expr=(*(_8149_expr))._field_Model, ._field_Log=jule::Str::lit("assertion failed", 16)});;
	if (((*((*(_80544_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1ac8243ae_Data> _83113_log = _1ac844313_evalExpr((*(_80529_e)), (*((*(_80544_fc))))._field_Args[1LL]);;
		if ((_83113_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_1ac824c83_IsConst(_83113_log.ptr()))) || (_1ac85c183_Prim((*(_83113_log))._field_Kind.ptr()) == nullptr)) || (!(_1ac865a93_IsStr(_1ac85c183_Prim((*(_83113_log))._field_Kind.ptr()).ptr()))))) {
			_1ac826603_pushErr((*(_80529_e)).ptr(), (*((*((*(_80544_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("const str", 9), &__jule_any_type4),jule::Any(_1ac859dea_Str((*(_83113_log))._field_Kind.ptr()), &__jule_any_type4)}));
			return nullptr;;
		};
		(*(_8239_model))._field_Log=_1a6ce1a5d_ReadStr((*(_83113_log))._field_Constant.ptr());
	};
	jule::Ptr<_1ac8243ae_Data> _8449_d = _1ac850143_buildVoidData();;
	(*(_8449_d))._field_Model=jule::Any(_8239_model, &__jule_any_type30);
	return _8449_d;;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac947a10_builtinCallerStdComptimeTypeOf(jule::Ptr<_1ac8260a3_Eval>* _84940_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _84955_fc, jule::Ptr<_1ac8243ae_Data>* ) {
	if (((*((*(_84955_fc))))._field_Args.len() < 1LL)) {
		_1ac826603_pushErr((*(_84940_e)).ptr(), (*((*(_84955_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_84955_fc))))._field_Args.len() > 1LL)) {
		_1ac826603_pushErr((*(_84940_e)).ptr(), (*((*((*(_84955_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeOf", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1ac8243ae_Data> _8589_d = _1ac8434ee_evalExprKind((*(_84940_e)), (*((*((*(_84955_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_8589_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ac717170_FnIns> _8625_f = _1ac85d470_Fn((*(_8589_d))._field_Kind.ptr());;
	if ((_8625_f != nullptr)) {
		if (_1ac718605_IsBuiltin(_8625_f.ptr())) {
			_1ac826603_pushErr((*(_84940_e)).ptr(), (*((*((*(_84955_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("<built-in fn>", 13), &__jule_any_type4)}));
			return nullptr;;
		};
		if (((*(_8625_f))._field_Generics.len() != (*((*(_8625_f))._field_Decl))._field_Generics.len())) {
			_1ac826603_pushErr((*(_84940_e)).ptr(), (*((*((*(_84955_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1ac702105_StructIns> _8735_s = _1ac85d706_Struct((*(_8589_d))._field_Kind.ptr());;
	if (((_8735_s != nullptr) && ((*(_8735_s))._field_Generics.len() != (*((*(_8735_s))._field_Decl))._field_Generics.len()))) {
		_1ac826603_pushErr((*(_84940_e)).ptr(), (*((*((*(_84955_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_1ac85e240_comptime((*(_8589_d))._field_Kind.ptr())) {
		_1ac826603_pushErr((*(_84940_e)).ptr(), (*((*((*(_84955_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_8589_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1ac74b89c_buildComptimeTypeInfoData(&((*((*(_84940_e))))._field_s), &((*(_8589_d))._field_Kind));;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac947dc8_builtinCallerStdComptimeValueOf(jule::Ptr<_1ac8260a3_Eval>* _88541_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _88556_fc, jule::Ptr<_1ac8243ae_Data>* ) {
	if (((*((*(_88556_fc))))._field_Args.len() < 1LL)) {
		_1ac826603_pushErr((*(_88541_e)).ptr(), (*((*(_88556_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_88556_fc))))._field_Args.len() > 1LL)) {
		_1ac826603_pushErr((*(_88541_e)).ptr(), (*((*((*(_88556_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4)}));
	};
	jule::Ptr<_1ac8243ae_Data> _8939_d = _1ac844313_evalExpr((*(_88541_e)), (*((*(_88556_fc))))._field_Args[0LL]);;
	if ((_8939_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ac81d111_isGoodValueToInfer(&(_8939_d))))) {
		_1ac826603_pushErr((*(_88541_e)).ptr(), (*((*((*(_88556_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_8939_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1ac74bacd_buildComptimeValue(&(_8939_d));;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac948307_builtinCallerStdComptimeLine(jule::Ptr<_1ac8260a3_Eval>* _90538_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _90553_fc, jule::Ptr<_1ac8243ae_Data>* ) {
	if (((*((*(_90553_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_90538_e)).ptr(), (*((*((*(_90553_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Line", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1a6cde8d5_Const> _9099_constant = static__1a6cded25_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*((*((*(_90553_fc))))._field_Token))._field_Row)));;
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93d099_primInt, ._field_Model=jule::Any(_9099_constant, &__jule_any_type19), ._field_Constant=_9099_constant});;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac948736_builtinCallerStdComptimeFile(jule::Ptr<_1ac8260a3_Eval>* _91738_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _91753_fc, jule::Ptr<_1ac8243ae_Data>* ) {
	if (((*((*(_91753_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_91738_e)).ptr(), (*((*((*(_91753_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("File", 4), &__jule_any_type4)}));
	};
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(jule::new_ptr<_1ac74945a_comptimeFile>(_1ac74945a_comptimeFile{._field_file=(*((*((*(_91738_e))))._field_s))._field_file}), 18)}), });;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac948b65_builtinCallerStdComptimeFiles(jule::Ptr<_1ac8260a3_Eval>* _93039_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _93054_fc, jule::Ptr<_1ac8243ae_Data>* ) {
	if (((*((*(_93054_fc))))._field_Args.len() > 0LL)) {
		_1ac826603_pushErr((*(_93039_e)).ptr(), (*((*((*(_93054_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Files", 5), &__jule_any_type4)}));
	};
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=jule::new_ptr<_1ac859a32_TypeKind>(_1ac859a32_TypeKind{._field_Kind=jule::Trait<_1ac85957b_Kind>(jule::new_ptr<_1ac747d60_comptimeFiles>(_1ac747d60_comptimeFiles{._field_files=(*((*((*(_93039_e))))._field_s))._field_files}), 17)}), });;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac949094_builtinCallerStdComptimeTypeAlias(jule::Ptr<_1ac8260a3_Eval>* _94343_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _94358_fc, jule::Ptr<_1ac8243ae_Data>* ) {
	if (((*((*(_94358_fc))))._field_Args.len() > 2LL)) {
		_1ac826603_pushErr((*(_94343_e)).ptr(), (*((*((*(_94358_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_94358_fc))))._field_Args.len() == 0LL)) {
		_1ac826603_pushErr((*(_94343_e)).ptr(), (*((*(_94358_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ident, type", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_94358_fc))))._field_Args.len() == 1LL)) {
		_1ac826603_pushErr((*(_94343_e)).ptr(), (*((*(_94358_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_94358_fc))))._field_Args[0LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1bd376b04:;
			{
				goto _match_end_1bd377ce2;
			}
		}
		else {
			_case_begin_1bd377d58:;
			{
				_1ac826603_pushErr((*(_94343_e)).ptr(), (*((*((*(_94358_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1ac826966_pushSuggestion((*(_94343_e)).ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bd377ce2:;
	};
	jule::Ptr<_1ac6b2e62_Token> _9649_ident = (*((*((*((*(_94358_fc))))._field_Args[0LL]))._field_Kind.cast_ptr<_1ac6ce3e0_IdentExpr>(&__jule_any_type79)))._field_Token;;
	{
		auto &_match_expr{ (*((*(_94343_e))))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1bd37a058:;
			{
				goto _match_end_1bd37a322;
			}
		}
		else {
			_case_begin_1bd37a377:;
			{
				_1ac826603_pushErr((*(_94343_e)).ptr(), (*((*(_94358_fc))))._field_Token, jule::Str::lit("you can call @ function in the scopes only", 42), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bd37a322:;
	};
	jule::Ptr<_1ac75d42a_scopeChecker> _9739_sc = (*((*(_94343_e))))._field_lookup.cast_ptr<_1ac75d42a_scopeChecker>(0);;
	jule::Ptr<_1ac858c40_TypeAlias> _9749_alias = jule::new_ptr<_1ac858c40_TypeAlias>(_1ac858c40_TypeAlias{._field_Scope=(*(_9739_sc))._field_tree, ._field_Public=_1ac794d79_IsPub((*(_9649_ident))._field_Kind), ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=_9649_ident, ._field_Ident=(*(_9649_ident))._field_Kind, ._field_Kind=jule::new_ptr<_1ac861c04_TypeSymbol>(), });;
	jule::Ptr<_1ac8243ae_Data> _9849_t = _1ac843840_eval1((*(_94343_e)), (*((*(_94358_fc))))._field_Args[1LL]);;
	if ((_9849_t == nullptr)) {
		return nullptr;;
	};
	if ((*(_9849_t))._field_Decl) {
		(*((*(_9749_alias))._field_Kind))._field_Kind=(*(_9849_t))._field_Kind;
	} else {
		jule::Ptr<_1ac73deee_comptimeTypeInfo> _99113_cti = _1ac860a49_comptimeTypeInfo((*(_9849_t))._field_Kind.ptr());;
		if ((_99113_cti == nullptr)) {
			_1ac826603_pushErr((*(_94343_e)).ptr(), (*((*((*(_94358_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			_1ac826966_pushSuggestion((*(_94343_e)).ptr(), jule::Str::lit("expected type declaration", 25), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*((*(_9749_alias))._field_Kind))._field_Kind=(*(_99113_cti))._field_base;
	};
	_1ac762bd2_checkTypeAlias(_9739_sc, &(_9749_alias));
	return _1ac850143_buildVoidData();;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac9494c3_builtinCallerStdMemSizeOf(jule::Ptr<_1ac8260a3_Eval>* _100335_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _100350_fc, jule::Ptr<_1ac8243ae_Data>* ) {
	jule::Ptr<_1ac8243ae_Data> _10049_result = jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93cbc0_primUint, });;
	if (((*((*(_100350_fc))))._field_Args.len() < 1LL)) {
		_1ac826603_pushErr((*(_100335_e)).ptr(), (*((*(_100350_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return _10049_result;;
	};
	if (((*((*(_100350_fc))))._field_Args.len() > 1LL)) {
		_1ac826603_pushErr((*(_100335_e)).ptr(), (*((*((*(_100350_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1ac8243ae_Data> _10169_d = _1ac8434ee_evalExprKind((*(_100335_e)), (*((*((*(_100350_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10169_d == nullptr)) {
		return _10049_result;;
	};
	if ((!(_1ac8772be_validTypeForXof(&((*(_10169_d))._field_Kind))))) {
		_1ac826603_pushErr((*(_100335_e)).ptr(), (*((*((*(_100350_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_10169_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4)}));
	};
	(*(_10049_result))._field_Model=jule::Any(jule::new_ptr<_1ac70a8c2_SizeofExprModel>(_1ac70a8c2_SizeofExprModel{._field_Expr=(*(_10169_d))._field_Model}), &__jule_any_type117);
	return _10049_result;;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac949902_builtinCallerStdMemAlignOf(jule::Ptr<_1ac8260a3_Eval>* _102836_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _102851_fc, jule::Ptr<_1ac8243ae_Data>* ) {
	jule::Ptr<_1ac8243ae_Data> _10299_result = jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93cbc0_primUint, });;
	if (((*((*(_102851_fc))))._field_Args.len() < 1LL)) {
		_1ac826603_pushErr((*(_102836_e)).ptr(), (*((*(_102851_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return _10299_result;;
	};
	if (((*((*(_102851_fc))))._field_Args.len() > 1LL)) {
		_1ac826603_pushErr((*(_102836_e)).ptr(), (*((*((*(_102851_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4)}));
	};
	jule::Ptr<_1ac8243ae_Data> _10419_d = _1ac8434ee_evalExprKind((*(_102836_e)), (*((*((*(_102851_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10419_d == nullptr)) {
		return _10299_result;;
	};
	if ((!(_1ac8772be_validTypeForXof(&((*(_10419_d))._field_Kind))))) {
		_1ac826603_pushErr((*(_102836_e)).ptr(), (*((*((*(_102851_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ac859dea_Str((*(_10419_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4)}));
	};
	(*(_10299_result))._field_Model=jule::Any(jule::new_ptr<_1ac710542_AlignofExprModel>(_1ac710542_AlignofExprModel{._field_Expr=(*(_10419_d))._field_Model}), &__jule_any_type118);
	return _10299_result;;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac949d31_builtinCallerStdMemFree(jule::Ptr<_1ac8260a3_Eval>* _105333_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _105348_fc, jule::Ptr<_1ac8243ae_Data>* ) {
	if (((*((*(_105348_fc))))._field_Args.len() < 1LL)) {
		_1ac826603_pushErr((*(_105333_e)).ptr(), (*((*(_105348_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("h", 1), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_105348_fc))))._field_Args.len() > 1LL)) {
		_1ac826603_pushErr((*(_105333_e)).ptr(), (*((*((*(_105348_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Free", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1ac8243ae_Data> _10629_d = _1ac844313_evalExpr((*(_105333_e)), (*((*(_105348_fc))))._field_Args[0LL]);;
	if ((_10629_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ac85bb66_PerformsRC((*(_10629_d))._field_Kind.ptr())))) {
		_1ac826603_pushErr((*(_105333_e)).ptr(), (*((*((*(_105348_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ac8243ae_Data> _10719_result = _1ac850143_buildVoidData();;
	(*(_10719_result))._field_Model=jule::Any(jule::new_ptr<_1ac711312_FreeExprModel>(_1ac711312_FreeExprModel{._field_Expr=(*(_10629_d))._field_Model}), &__jule_any_type33);
	return _10719_result;;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac94a260_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1ac8260a3_Eval>* _107645_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _107660_fc, jule::Ptr<_1ac8243ae_Data>* ) {
	if (((*((*(_107660_fc))))._field_Args.len() < 1LL)) {
		_1ac826603_pushErr((*(_107645_e)).ptr(), (*((*(_107660_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_107660_fc))))._field_Args.len() > 1LL)) {
		_1ac826603_pushErr((*(_107645_e)).ptr(), (*((*((*(_107660_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ToStr", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1ac8243ae_Data> _10859_d = _1ac844313_evalExpr((*(_107645_e)), (*((*(_107660_fc))))._field_Args[0LL]);;
	if ((_10859_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ac8762e0_isBuiltinStrConvertable(&((*(_10859_d))._field_Kind))))) {
		_1ac826603_pushErr((*(_107645_e)).ptr(), (*((*((*(_107660_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ac8243ae_Data>(_1ac8243ae_Data{._field_Kind=_1ac93c373_primStr, ._field_Model=jule::Any(jule::new_ptr<_1ac710b3b_IntegratedToStrExprModel>(_1ac710b3b_IntegratedToStrExprModel{._field_Expr=(*(_10859_d))._field_Model}), &__jule_any_type119), });;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac94a68e_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1ac8260a3_Eval>* _110344_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _110359_fc, jule::Ptr<_1ac8243ae_Data>* _110381_d) {
	if ((!(_1ac8270e8_isUnsafe((*(_110344_e)).ptr())))) {
		_1ac826603_pushErr((*(_110344_e)).ptr(), (*((*(_110359_fc))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	if (((*((*(_110359_fc))))._field_Args.len() < 1LL)) {
		_1ac826603_pushErr((*(_110344_e)).ptr(), (*((*(_110359_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("code", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ac8243ae_Data> _11139_argd = _1ac844313_evalExpr((*(_110344_e)), (*((*(_110359_fc))))._field_Args[0LL]);;
	if ((_11139_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1ac85c183_Prim((*(_11139_argd))._field_Kind.ptr()) == nullptr) || (!(_1ac865a93_IsStr(_1ac85c183_Prim((*(_11139_argd))._field_Kind.ptr()).ptr()))))) {
		_1ac826603_pushErr((*(_110344_e)).ptr(), (*((*((*(_110359_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1ac859dea_Str((*(_11139_argd))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((!(_1ac824c83_IsConst(_11139_argd.ptr()))) || (!(_1a6ce4159_IsStr((*(_11139_argd))._field_Constant.ptr()))))) {
		_1ac826603_pushErr((*(_110344_e)).ptr(), (*((*((*(_110359_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac8243ae_Data> _11289_r = _1ac850143_buildVoidData();;
	jule::Ptr<_1ac717170_FnIns> _11309_f = _1ac85d470_Fn((*((*(_110381_d))))._field_Kind.ptr());;
	if (((*(_11309_f))._field_Generics.len() > 0LL)) {
		(*(_11289_r))._field_Kind=(*((*(_11309_f))._field_Generics[0LL]))._field_Kind;
	};
	jule::Ptr<_1ac711015_BackendEmitExprModel> _11359_model = jule::new_ptr<_1ac711015_BackendEmitExprModel>(_1ac711015_BackendEmitExprModel{._field_Code=_1a6ce1a5d_ReadStr((*(_11139_argd))._field_Constant.ptr()), });;
	if (((*((*(_110359_fc))))._field_Args.len() > 1LL)) {
		(*(_11359_model))._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, ((*((*(_110359_fc))))._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = (*((*(_110359_fc))))._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1bd3a402c:;
			if (it != expr_end) {
				jule::Ptr<_1ac6cc9b5_Expr> _114121_arg = *it;
				{
					_11139_argd=_1ac843840_eval1((*(_110344_e)), _114121_arg);
					if ((_11139_argd == nullptr)) {
						return nullptr;;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = (*(_11359_model))._field_Exprs; __jule_push_dest.push((*(_11139_argd))._field_Model); };
				}
				_iter_next_1bd3a402c:;
				++it;
				goto _iter_begin_1bd3a402c;
			}
			_iter_end_1bd3a402c:;
		};
	};
	(*(_11289_r))._field_Model=jule::Any(_11359_model, &__jule_any_type25);
	return _11289_r;;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac94aabd_builtinCallerStdDebugOut(jule::Ptr<_1ac8260a3_Eval>* _115434_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _115449_fc, jule::Ptr<_1ac8243ae_Data>* _115471_d) {
	(*(_115471_d))=_1ac9424cc_builtinCallerOut(_115434_e, _115449_fc, _115471_d);
	if (((*(_115471_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_115471_d))))._field_Model.cast_ptr<_1ac70c0cc_BuiltinOutCallExprModel>(&__jule_any_type27)))._field_Debug=true;
	return (*(_115471_d));;
}



inline jule::Ptr<_1ac8243ae_Data> _1ac94aeec_builtinCallerStdDebugOutln(jule::Ptr<_1ac8260a3_Eval>* _116336_e, jule::Ptr<_1ac6d16de_FnCallExpr>* _116351_fc, jule::Ptr<_1ac8243ae_Data>* _116373_d) {
	(*(_116373_d))=_1ac94290b_builtinCallerOutln(_116336_e, _116351_fc, _116373_d);
	if (((*(_116373_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_116373_d))))._field_Model.cast_ptr<_1ac70c4a6_BuiltinOutlnCallExprModel>(&__jule_any_type28)))._field_Debug=true;
	return (*(_116373_d));;
}



inline jule::Ptr<_1ad036351_FileInfo> _1ad1da69d_ParseFile(jule::Ptr<_1ac6b872b_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ad036351_FileInfo> _279_finf = jule::new_ptr<_1ad036351_FileInfo>();;
	({
		__jule_tuple_x_1ac6c67a0_Ast__jule_tuple_s_1a756d63b_Log __jule_assign_result = _1ad1dac75_parseFileset(_2318_f);
		(*(_279_finf))._field_Ast = __jule_assign_result.__jule_result_arg0;
		(*(_279_finf))._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if (((*(_279_finf))._field_Errors.len() > 0LL)) {
		(*(_279_finf))._field_Ast=nullptr;
	};
	return _279_finf;;
}



inline __jule_tuple_x_1ac6c67a0_Ast__jule_tuple_s_1a756d63b_Log _1ad1dac75_parseFileset(jule::Ptr<_1ac6b872b_File> _5521_f) {
	__jule_tuple_x_1ac6c67a0_Ast__jule_tuple_s_1a756d63b_Log __jule_func_result;
	jule::Ptr<_1ad20b5e2_parser> _569_p = jule::new_ptr<_1ad20b5e2_parser>();;
	_1ad21c504_parse(_569_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = (*(_569_p))._field_ast;
	__jule_func_result.__jule_result_arg1 = (*(_569_p))._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1ac6d86a2_ScopeTree> _1ad1db715_newScope(void) {
	return jule::new_ptr<_1ac6d86a2_ScopeTree>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1ad1dba9a_isSt(jule::Ptr<_1ac6b2e62_Token> _499_current, jule::Ptr<_1ac6b2e62_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=(((*(_499_current))._field_Id == static_cast<jule::U64>(3LLU)) || ((*(_4926_prev))._field_Row < (*(_499_current))._field_Row));
	__jule_func_result.__jule_result_arg1=((*(_499_current))._field_Id == static_cast<jule::U64>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _1ad1dbe1e_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _5526_tokens, jule::I64* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*((*(_5526_tokens))[((*(_5545_i)) - 2LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_1ac6b2e62_Token> _619_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return (((*(_619_prev))._field_Id == static_cast<jule::U64>(17LLU)) || (_1ac6b39ac_IsBinOp((*(_619_prev))._field_Id) && ((*(_619_prev))._field_Row < (*((*(_5526_tokens))[(*(_5545_i))]))._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1ad1dc2d7_nextStPos(jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _6815_tokens, jule::I64 _6833_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _699_braceN = 0LL;;
	jule::I64 _709_i = _6833_start;;
	for (; (_709_i < (*(_6815_tokens)).len()); (_709_i)++) {
		{
			jule::Bool _7213_ok = false;;
			jule::Bool _7313_terminated = false;;
			jule::Ptr<_1ac6b2e62_Token> _749_tok = (*(_6815_tokens))[_709_i];;
			{
				auto &_match_expr{ (*(_749_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1bd4323a7:;
					{
						if (((_699_braceN == 0LL) && (_709_i > _6833_start))) {
							if ((!(_1ad1dbe1e_prevIsIncompleteExpr(_6815_tokens, &(_709_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ad1dba9a_isSt(_749_tok, (*(_6815_tokens))[(_709_i - 1LL)]);
									_7213_ok = __jule_assign_result.__jule_result_arg0;
									_7313_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_7213_ok) {
									goto _julec_label_1bd4370e3;
								};
							};
						};
						(_699_braceN)++;
						goto _iter_next_1bd430d45;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1bd43242e:;
					{
						(_699_braceN)--;
						if (((_699_braceN == 0LL) && ((_709_i + 1LL) < (*(_6815_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ad1dba9a_isSt((*(_6815_tokens))[(_709_i + 1LL)], _749_tok);
								_7213_ok = __jule_assign_result.__jule_result_arg0;
								_7313_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_7213_ok) {
								(_709_i)++;
								goto _julec_label_1bd4370e3;
							};
						};
						goto _iter_next_1bd430d45;
					}
				}
				_match_end_1bd432352:;
			};
			if ((_699_braceN != 0LL)) {
				goto _iter_next_1bd430d45;
			};
			if ((_709_i > _6833_start)) {
				if (_1ad1dbe1e_prevIsIncompleteExpr(_6815_tokens, &(_709_i))) {
					goto _iter_next_1bd430d45;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ad1dba9a_isSt(_749_tok, (*(_6815_tokens))[(_709_i - 1LL)]);
					_7213_ok = __jule_assign_result.__jule_result_arg0;
					_7313_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ad1dba9a_isSt(_749_tok, _749_tok);
					_7213_ok = __jule_assign_result.__jule_result_arg0;
					_7313_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_7213_ok))) {
				goto _iter_next_1bd430d45;
			};
			_julec_label_1bd4370e3:;
			if (_7313_terminated) {
				(_709_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _709_i;
			__jule_func_result.__jule_result_arg1 = _7313_terminated;
			return __jule_func_result;;
		}
	_iter_next_1bd430d45:;
	}
	_iter_end_1bd430d45:;;
	__jule_func_result.__jule_result_arg0 = _709_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1ac6b2e62_Token__jule_tuple_bool _1ad1dc65b_skipSt(jule::I64* _13016_i, jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _13028_tokens) {
	__jule_tuple_sx_1ac6b2e62_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _1315_start = (*(_13016_i));;
	jule::Bool _1329_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ad1dc2d7_nextStPos(&(_13028_tokens), _1315_start);
		(*(_13016_i)) = __jule_assign_result.__jule_result_arg0;
		_1329_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _1349_stTokens = _13028_tokens.slice(_1315_start, (*(_13016_i)));;
	if (_1329_terminated) {
		if ((_1349_stTokens.len() == 1LL)) {
			({
				__jule_tuple_sx_1ac6b2e62_Token__jule_tuple_bool __jule_assign_result = _1ad1dc65b_skipSt(_13016_i, _13028_tokens);
				_1349_stTokens = __jule_assign_result.__jule_result_arg0;
				_1329_terminated = __jule_assign_result.__jule_result_arg1;
			});
			__jule_func_result.__jule_result_arg0 = _1349_stTokens;
			__jule_func_result.__jule_result_arg1 = _1329_terminated;
			return __jule_func_result;;
		};
		(_1349_stTokens).mut_slice(0LL, (_1349_stTokens.len() - 1LL));;
	};
	__jule_func_result.__jule_result_arg0 = _1349_stTokens;
	__jule_func_result.__jule_result_arg1 = _1329_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1ad1dc98b_stmt>> _1ad1dcd43_splitStmts(jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _15220_tokens) {
	jule::Slice<jule::Ptr<_1ad1dc98b_stmt>> _1539_stmts = jule::Slice<jule::Ptr<_1ad1dc98b_stmt>>::alloc(0LL, 20LL);;
	jule::I64 _1549_pos = 0LL;;
	while ((_1549_pos < (*(_15220_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _15613_stmt;;
			jule::Bool _15619_terminated = false;;
			({
				__jule_tuple_sx_1ac6b2e62_Token__jule_tuple_bool __jule_assign_result = _1ad1dc65b_skipSt(&(_1549_pos), (*(_15220_tokens)));
				_15613_stmt = __jule_assign_result.__jule_result_arg0;
				_15619_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_1ad1dc98b_stmt>> &__jule_push_dest = _1539_stmts; __jule_push_dest.push(jule::new_ptr<_1ad1dc98b_stmt>(_1ad1dc98b_stmt{._field_tokens=_15613_stmt, ._field_terminated=_15619_terminated})); };
		}
	_iter_next_1bd43bdb7:;
	}
	_iter_end_1bd43bdb7:;;
	return _1539_stmts;;
}



inline jule::Bool _1ad206499_isTypeOp(jule::U64* _88514_id) {
	return ((((*(_88514_id)) == static_cast<jule::U64>(65LLU)) || ((*(_88514_id)) == static_cast<jule::U64>(54LLU))) || ((*(_88514_id)) == static_cast<jule::U64>(62LLU)));;
}



inline jule::Bool _1ad2067a7_isTypeRange(jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _89221_tokens) {
	jule::Bool _8939_op = false;;
	{
		auto expr = _89221_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd50caae:;
		if (it != expr_end) {
			jule::I64 _8949_i = it - expr->begin();
			jule::Ptr<_1ac6b2e62_Token> _89412_token = *it;
			{
				if (((*(_89412_token))._field_Id == static_cast<jule::U64>(76LLU))) {
					if (_8939_op) {
						return true;;
					};
					jule::I64 _89917_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _90017_lTokens = (*(_89221_tokens)).slice(_8949_i);;
					{
						auto expr = &(_90017_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bd50d8c3:;
						if (it != expr_end) {
							jule::Ptr<_1ac6b2e62_Token> _90120_lToken = *it;
							{
								{
									auto &_match_expr{ (*(_90120_lToken))._field_Id };
									
									if (_match_expr == static_cast<jule::U64>(76LLU)) {
										_case_begin_1bd51009a:;
										{
											(_89917_rangeN)++;
											goto _iter_next_1bd50d8c3;
										}
									}
									else if (_match_expr == static_cast<jule::U64>(77LLU)) {
										_case_begin_1bd510122:;
										{
											(_89917_rangeN)--;
											goto _iter_next_1bd50d8c3;
										}
									}
									_match_end_1bd50eece:;
								};
								if ((_89917_rangeN == 0LL)) {
									return _1ad206499_isTypeOp(&((*(_90120_lToken))._field_Id));;
								};
							}
							_iter_next_1bd50d8c3:;
							++it;
							goto _iter_begin_1bd50d8c3;
						}
						_iter_end_1bd50d8c3:;
					};
					return true;;
				};
				if ((!(_1ad206499_isTypeOp(&((*(_89412_token))._field_Id))))) {
					return false;;
				};
				_8939_op=true;
			}
			_iter_next_1bd50caae:;
			++it;
			_8949_i++;
			goto _iter_begin_1bd50caae;
		}
		_iter_end_1bd50caae:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _1ad206a71_getBlockExpr(jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _92522_tokens) {
	jule::I64 _9269_braceN = 0LL;;
	jule::I64 _9279_skipToNextBraceClose = 0LL;;
	{
		auto expr = _92522_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd511d49:;
		if (it != expr_end) {
			jule::I64 _9289_i = it - expr->begin();
			jule::Ptr<_1ac6b2e62_Token> _92812_tok = *it;
			{
				{
					auto &_match_expr{ (*(_92812_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1bd512c5c:;
						{
							if (((((*(_92522_tokens)).len() - _9289_i) > 1LL) && ((*((*(_92522_tokens))[(_9289_i + 1LL)]))._field_Id == static_cast<jule::U64>(72LLU)))) {
								(_9279_skipToNextBraceClose)++;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1bd512cd4:;
						{
							if (((_9269_braceN > 0LL) || (_9279_skipToNextBraceClose > 0LL))) {
								if ((_9279_skipToNextBraceClose > 0LL)) {
									(_9279_skipToNextBraceClose)--;
								};
								(_9269_braceN)++;
								goto _match_end_1bd512b6e;
							};
							return (*(_92522_tokens)).slice(0LL, _9289_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1bd512d5b:;
						{
							(_9269_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1bd512dd3:;
						{
							(_9269_braceN)--;
						}
					}
					_match_end_1bd512b6e:;
				};
			}
			_iter_next_1bd511d49:;
			++it;
			_9289_i++;
			goto _iter_begin_1bd511d49;
		}
		_iter_end_1bd511d49:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1ac6b2e62_Token__jule_tuple_sx_1ac6b2e62_Token _1ad206e39_splitDelim(jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _95720_tokens, jule::U64 _95738_delim) {
	__jule_tuple_sx_1ac6b2e62_Token__jule_tuple_sx_1ac6b2e62_Token __jule_func_result;
	jule::I64 _9589_rangeN = 0LL;;
	{
		auto expr = _95720_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd516106:;
		if (it != expr_end) {
			jule::I64 _9599_i = it - expr->begin();
			jule::Ptr<_1ac6b2e62_Token> _95912_token = *it;
			{
				{
					auto &_match_expr{ (*(_95912_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1bd516e09:;
						{
							(_9589_rangeN)++;
							goto _iter_next_1bd516106;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1bd516e81:;
						{
							(_9589_rangeN)--;
						}
					}
					else if (_match_expr == _95738_delim) {
						_case_begin_1bd517008:;
						{
							if ((_9589_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _97221_l = (*(_95720_tokens)).slice(0LL, _9599_i);;
								jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _97321_r = (*(_95720_tokens)).slice((_9599_i + 1LL));;
								__jule_func_result.__jule_result_arg0 = _97221_l;
								__jule_func_result.__jule_result_arg1 = _97321_r;
								return __jule_func_result;;
							};
						}
					}
					_match_end_1bd516d2c:;
				};
			}
			_iter_next_1bd516106:;
			++it;
			_9599_i++;
			goto _iter_begin_1bd516106;
		}
		_iter_end_1bd516106:;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I64 _1ad207203_findLowestPrecOp(jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _98322_tokens) {
	jule::U8 _9889_prec = 255LLU;;
	jule::I64 _9899_precPos = -1LL;;
	jule::I64 _9919_braceN = 0LL;;
	jule::Bool _9929_skipToNextBraceOpen = false;;
	{
		auto expr = _98322_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd51a32a:;
		if (it != expr_end) {
			jule::I64 _9939_i = it - expr->begin();
			jule::Ptr<_1ac6b2e62_Token> *_99312_token = it;
			{
				{
					auto &_match_expr{ (*((*(_99312_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1bd51b172:;
						{
							_9929_skipToNextBraceOpen=false;
							goto _case_begin_1bd51b1e9;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1bd51b1e9:;
						{
							(_9919_braceN)++;
							goto _iter_next_1bd51a32a;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1bd51b271:;
						{
							(_9919_braceN)--;
							goto _iter_next_1bd51a32a;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(13LLU)) {
						_case_begin_1bd51b2e8:;
						{
							_9929_skipToNextBraceOpen=true;
							goto _iter_next_1bd51a32a;
						}
					}
					_match_end_1bd51b084:;
				};
				{
					
					if (_9929_skipToNextBraceOpen) {
						_case_begin_1bd51c75b:;
						{
							goto _iter_next_1bd51a32a;
						}
					}
					else if ((_9939_i == 0LL)) {
						_case_begin_1bd51c7d3:;
						{
							goto _iter_next_1bd51a32a;
						}
					}
					else if ((_9919_braceN > 0LL)) {
						_case_begin_1bd51c85a:;
						{
							goto _iter_next_1bd51a32a;
						}
					}
					else if ((!(_1ac6b39ac_IsBinOp((*((*(_99312_token))))._field_Id)))) {
						_case_begin_1bd51c8d2:;
						{
							goto _iter_next_1bd51a32a;
						}
					}
					_match_end_1bd51c508:;
				};
				jule::Ptr<_1ac6b2e62_Token> _10229_left = (*(_98322_tokens))[(_9939_i - 1LL)];;
				if ((_1ac6b369e_IsUnaryOp((*(_10229_left))._field_Id) || ((*(_10229_left))._field_Id == static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1bd51a32a;
				};
				if (((_9939_i > 1LL) && ((*(_10229_left))._field_Id == static_cast<jule::U64>(77LLU)))) {
					jule::Ptr<_1ac6b2e62_Token> _103013_lleft = (*(_98322_tokens))[(_9939_i - 2LL)];;
					if (((*(_103013_lleft))._field_Id == static_cast<jule::U64>(76LLU))) {
						if ((((*((*(_99312_token))))._field_Id == static_cast<jule::U64>(65LLU)) || ((*((*(_99312_token))))._field_Id == static_cast<jule::U64>(62LLU)))) {
							goto _iter_next_1bd51a32a;
						};
					};
				};
				jule::U8 _10399_p = _1ac6b32d6_Prec((*(_99312_token)).ptr());;
				if (((_10399_p != 0LLU) && (_10399_p <= _9889_prec))) {
					_9889_prec=_10399_p;
					_9899_precPos=_9939_i;
				};
			}
			_iter_next_1bd51a32a:;
			++it;
			_9939_i++;
			goto _iter_begin_1bd51a32a;
		}
		_iter_end_1bd51a32a:;
	};
	return _9899_precPos;;
}



inline jule::Ptr<_1ac6ce3e0_IdentExpr> _1ad2074bc_buildIdentExpr(jule::Ptr<_1ac6b2e62_Token>* _104824_token) {
	return jule::new_ptr<_1ac6ce3e0_IdentExpr>(_1ac6ce3e0_IdentExpr{._field_Token=(*(_104824_token)), ._field_Ident=(*((*(_104824_token))))._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_1ac6b2e62_Token__jule_tuple_int _1ad207786_getRangeExprTokens(jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _105628_tokens) {
	__jule_tuple_sx_1ac6b2e62_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I64 _10579_rangeN = 0LL;;
	jule::I64 _10589_i = ((*(_105628_tokens)).len() - 1LL);;
	for (; (_10589_i >= 0LL); (_10589_i)--) {
		{
			jule::Ptr<_1ac6b2e62_Token> _10609_tok = (*(_105628_tokens))[_10589_i];;
			{
				auto &_match_expr{ (*(_10609_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1bd52491c:;
					{
						(_10579_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1bd524994:;
					{
						(_10579_rangeN)--;
					}
				}
				_match_end_1bd5248a6:;
			};
			if ((_10579_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_105628_tokens)).slice(0LL, _10589_i);
				__jule_func_result.__jule_result_arg1 = _10579_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1bd523bc4:;
	}
	_iter_end_1bd523bc4:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _10579_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1ad20859a_checkAssignTokens(jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_1ac6b783a_IsAssign((*((*(_1623_tokens))[0LL]))._field_Id))))) {
		return false;;
	};
	jule::I64 _209_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd5b1e1b:;
		if (it != expr_end) {
			jule::Ptr<_1ac6b2e62_Token> *_2112_t = it;
			{
				{
					auto &_match_expr{ (*((*(_2112_t))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1bd5b29ee:;
						{
							(_209_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1bd5b2a76:;
						{
							(_209_braceN)--;
						}
					}
					_match_end_1bd5b2933:;
				};
				{
					
					if ((_209_braceN < 0LL)) {
						_case_begin_1bd5b3912:;
						{
							return false;;
						}
					}
					else if ((_209_braceN > 0LL)) {
						_case_begin_1bd5b3978:;
						{
							goto _iter_next_1bd5b1e1b;
						}
					}
					else if (_1ac6b7dbd_IsAssignOp((*((*(_2112_t))))._field_Id) || ((*((*(_2112_t))))._field_Id == static_cast<jule::U64>(38LLU))) {
						_case_begin_1bd5b3a00:;
						{
							return true;;
						}
					}
					_match_end_1bd5b3868:;
				};
			}
			_iter_next_1bd5b1e1b:;
			++it;
			goto _iter_begin_1bd5b1e1b;
		}
		_iter_end_1bd5b1e1b:;
	};
	return false;;
}



inline _1a756d63b_Log _1ad209799_makeErr(jule::I64 _5112_row, jule::I64 _5122_col, jule::Ptr<_1ac6b872b_File>* _5133_f, jule::Str _5143_fmt, jule::Slice<jule::Any> _5156_args) {
	return _1a756d63b_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5112_row, ._field_Column=_5122_col, ._field_Path=(*((*(_5133_f))))._field_Path, ._field_Text=_1a756da9d_Logf(_5143_fmt, _5156_args), };;
}



inline jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _1ad209c94_range(jule::I64* _6915_i, jule::U64 _6923_open, jule::U64 _6938_close, jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _6959_tokens) {
	if (((*(_6915_i)) >= (*(_6959_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_1ac6b2e62_Token> _735_tok = (*(_6959_tokens))[(*(_6915_i))];;
	if (((*(_735_tok))._field_Id != _6923_open)) {
		return nullptr;;
	};
	((*(_6915_i)))++;
	jule::I64 _789_rangeN = 1LL;;
	jule::I64 _795_start = (*(_6915_i));;
	for (; ((_789_rangeN != 0LL) && ((*(_6915_i)) < (*(_6959_tokens)).len())); ((*(_6915_i)))++) {
		{
			jule::Ptr<_1ac6b2e62_Token> _819_token = (*(_6959_tokens))[(*(_6915_i))];;
			{
				auto &_match_expr{ (*(_819_token))._field_Id };
				
				if (_match_expr == _6923_open) {
					_case_begin_1bd5b8d68:;
					{
						(_789_rangeN)++;
					}
				}
				else if (_match_expr == _6938_close) {
					_case_begin_1bd5b8de0:;
					{
						(_789_rangeN)--;
					}
				}
				_match_end_1bd5b8d02:;
			};
		}
	_iter_next_1bd5b8043:;
	}
	_iter_end_1bd5b8043:;;
	return (*(_6959_tokens)).slice(_795_start, ((*(_6915_i)) - 1LL));;
}



inline __jule_tuple_sx_1ac6b2e62_Token__jule_tuple_sx_1ac6b2e62_Token _1ad20a05d_rangeLast(jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _9919_tokens) {
	__jule_tuple_sx_1ac6b2e62_Token__jule_tuple_sx_1ac6b2e62_Token __jule_func_result;
	if (((*(_9919_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U64 _1035_first = (*((*(_9919_tokens))[((*(_9919_tokens)).len() - 1LL)]))._field_Id;;
	if ((((_1035_first != static_cast<jule::U64>(73LLU)) && (_1035_first != static_cast<jule::U64>(76LLU))) && (_1035_first != static_cast<jule::U64>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _1099_braceN = 0LL;;
	jule::I64 _1109_i = ((*(_9919_tokens)).len() - 1LL);;
	for (; (_1109_i >= 0LL); (_1109_i)--) {
		{
			jule::Ptr<_1ac6b2e62_Token> _1129_token = (*(_9919_tokens))[_1109_i];;
			{
				auto &_match_expr{ (*(_1129_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1bd5bd06a:;
					{
						(_1099_braceN)++;
						goto _iter_next_1bd5bc3cc;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1bd5bd0e2:;
					{
						(_1099_braceN)--;
					}
				}
				_match_end_1bd5bd004:;
			};
			if ((_1099_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_9919_tokens)).slice(0LL, _1109_i);
				__jule_func_result.__jule_result_arg1 = (*(_9919_tokens)).slice(_1109_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1bd5bc3cc:;
	}
	_iter_end_1bd5bc3cc:;;
	__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1ac6b2e62_Token__jule_tuple_s_1a756d63b_Log _1ad20a514_parts(jule::Slice<jule::Ptr<_1ac6b2e62_Token>>* _13715_tokens, jule::U64 _13733_id, jule::Bool _13746_exprMust) {
	__jule_tuple_ssx_1ac6b2e62_Token__jule_tuple_s_1a756d63b_Log __jule_func_result;
	if (((*(_13715_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>> _14213_parts = nullptr;;
	jule::Slice<_1a756d63b_Log> _14313_errors = nullptr;;
	jule::I64 _1459_rangeN = 0LL;;
	jule::I64 _1469_last = 0LL;;
	{
		auto expr = _13715_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd5bac49:;
		if (it != expr_end) {
			jule::I64 _1479_i = it - expr->begin();
			jule::Ptr<_1ac6b2e62_Token> _14712_token = *it;
			{
				{
					auto &_match_expr{ (*(_14712_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1bd5c2459:;
						{
							(_1459_rangeN)++;
							goto _iter_next_1bd5bac49;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1bd5c24d1:;
						{
							(_1459_rangeN)--;
						}
					}
					_match_end_1bd5c238d:;
				};
				if ((_1459_rangeN > 0LL)) {
					goto _iter_next_1bd5bac49;
				};
				if (((*(_14712_token))._field_Id == _13733_id)) {
					if ((_13746_exprMust && ((_1479_i - _1469_last) <= 0LL))) {
						_1a756d63b_Log _16617_err = _1ad209799_makeErr((*(_14712_token))._field_Row, (*(_14712_token))._field_Column, &((*(_14712_token))._field_File), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());;
						{ jule::Slice<_1a756d63b_Log> &__jule_push_dest = _14313_errors; __jule_push_dest.push(_16617_err); };
					};
					{ jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>> &__jule_push_dest = _14213_parts; __jule_push_dest.push((*(_13715_tokens)).slice(_1469_last, _1479_i)); };
					_1469_last=static_cast<jule::I64>((_1479_i + 1LL));
				};
			}
			_iter_next_1bd5bac49:;
			++it;
			_1479_i++;
			goto _iter_begin_1bd5bac49;
		}
		_iter_end_1bd5bac49:;
	};
	if ((_1469_last < (*(_13715_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>> &__jule_push_dest = _14213_parts; __jule_push_dest.push((*(_13715_tokens)).slice(_1469_last)); };
	} else if ((!(_13746_exprMust))) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1ac6b2e62_Token>>> &__jule_push_dest = _14213_parts; __jule_push_dest.push(jule::Slice<jule::Ptr<_1ac6b2e62_Token>>()); };
	};
	__jule_func_result.__jule_result_arg0 = _14213_parts;
	__jule_func_result.__jule_result_arg1 = _14313_errors;
	return __jule_func_result;;
}



inline jule::U64 _1ad20a7cd_getCloseOfBrace(jule::U64 _18320_left) {
	{
		auto &_match_expr{ _18320_left };
		
		if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1bd5c5e85:;
			{
				return static_cast<jule::U64>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1bd5c5eeb:;
			{
				return static_cast<jule::U64>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1bd5c6062:;
			{
				return static_cast<jule::U64>(76LLU);;
			}
		}
		else {
			_case_begin_1bd5c5814:;
			{
				return _18320_left;;
			}
		}
		_match_end_1bd5c57ae:;
	};
}



inline _1a756d63b_Log _1ad20ac0c_compilerErr(jule::Ptr<_1ac6b2e62_Token>* _19617_token, jule::Str* _19633_fmt, jule::Slice<jule::Any> _19646_args) {
	return _1a756d63b_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_19617_token))))._field_Row, ._field_Column=(*((*(_19617_token))))._field_Column, ._field_Path=(*((*((*(_19617_token))))._field_File))._field_Path, ._field_Text=_1a756da9d_Logf((*(_19633_fmt)), _19646_args), ._field_Line=_1ac6b970a_GetRow((*((*(_19617_token))))._field_File.ptr(), (*((*(_19617_token))))._field_Row), };;
}



inline void _1ad20b0a3_pushSuggestion(_1a756d63b_Log* _20730_log, jule::Str _20741_fmt, jule::Slice<jule::Any> _20754_args) {
	(*(_20730_log))._field_Suggestion=_1a756da9d_Logf(_20741_fmt, _20754_args);
}



inline jule::Ptr<_1ac6c8681_TypeDecl> _1ad21d00a_buildVoidType(void) {
	return jule::new_ptr<_1ac6c8681_TypeDecl>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1ac9cd2e3_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str::lit("windows", 7)) {
			_case_begin_1bd78dd95:;
			{
				__jule_func_result.__jule_result_arg0=_1a7571809_IsWindows(_1a76388b0_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("darwin", 6)) {
			_case_begin_1bd78dadc:;
			{
				__jule_func_result.__jule_result_arg0=_1a7571ad4_IsDarwin(_1a76388b0_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("linux", 5)) {
			_case_begin_1bd78db53:;
			{
				__jule_func_result.__jule_result_arg0=_1a7571d9d_IsLinux(_1a76388b0_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("unix", 4)) {
			_case_begin_1bd78dbb9:;
			{
				__jule_func_result.__jule_result_arg0=_1a7572a3b_IsUnix(_1a76388b0_Os);
			}
		}
		else {
			_case_begin_1bd78d58c:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1bd78d9cc:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1ac9cd436_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str::lit("i386", 4)) {
			_case_begin_1bd790ced:;
			{
				__jule_func_result.__jule_result_arg0=_1a75721de_IsI386(_1a7638b79_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("amd64", 5)) {
			_case_begin_1bd790d64:;
			{
				__jule_func_result.__jule_result_arg0=_1a75724a8_IsAmd64(_1a7638b79_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("arm64", 5)) {
			_case_begin_1bd790dca:;
			{
				__jule_func_result.__jule_result_arg0=_1a7572772_IsArm64(_1a7638b79_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("x64", 3)) {
			_case_begin_1bd790e41:;
			{
				__jule_func_result.__jule_result_arg0=_1a757319b_Is64Bit(_1a7638b79_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("x32", 3)) {
			_case_begin_1bd79145d:;
			{
				__jule_func_result.__jule_result_arg0=_1a7572dd2_Is32Bit(_1a7638b79_Arch);
			}
		}
		else {
			_case_begin_1bd79079d:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1bd790bdd:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ac9e7ce1_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_1a6944da9_Base(_5029_p);
	jule::I64 _525_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_525_n - _1a6944826_Ext(_5029_p).len()));;
	jule::Str _589_a1 = jule::Str();;
	jule::Str _619_a2 = jule::Str();;
	jule::I64 _649_i = _1a693c643_FindLastByte(_5029_p, '_');;
	if ((_649_i == -1LL)) {
		jule::Bool _6713_ok = false;;
		jule::Bool _6721_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ac9cd2e3_checkOs(_5029_p);
			_6713_ok = __jule_assign_result.__jule_result_arg0;
			_6721_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6721_exist) {
			return _6713_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ac9cd436_checkArch(_5029_p);
			_6713_ok = __jule_assign_result.__jule_result_arg0;
			_6721_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6721_exist)) || _6713_ok);;
	};
	if (((_649_i + 1LL) >= _525_n)) {
		return true;;
	};
	_589_a1=_5029_p.slice((_649_i + 1LL));
	(_5029_p).mut_slice(0LL, _649_i);;
	_649_i=static_cast<jule::I64>(_1a693c643_FindLastByte(_5029_p, '_'));
	if ((_649_i != -1LL)) {
		_619_a2=_5029_p.slice((_649_i + 1LL));
	};
	if ((_619_a2).empty()) {
		jule::Bool _8813_ok = false;;
		jule::Bool _8821_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ac9cd2e3_checkOs(_589_a1);
			_8813_ok = __jule_assign_result.__jule_result_arg0;
			_8821_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8821_exist) {
			return _8813_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ac9cd436_checkArch(_589_a1);
			_8813_ok = __jule_assign_result.__jule_result_arg0;
			_8821_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8821_exist)) || _8813_ok);;
	};
	jule::Bool _969_ok = false;;
	jule::Bool _9617_exist = false;;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ac9cd436_checkArch(_589_a1);
		_969_ok = __jule_assign_result.__jule_result_arg0;
		_9617_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9617_exist) {
		if ((!(_969_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ac9cd2e3_checkOs(_619_a2);
			_969_ok = __jule_assign_result.__jule_result_arg0;
			_9617_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9617_exist)) || _969_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ac9cd2e3_checkOs(_589_a1);
		_969_ok = __jule_assign_result.__jule_result_arg0;
		_9617_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9617_exist)) || _969_ok);;
}



inline void _1ac9e8e68_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_1a76388b0_Os); };
	if (_1a7572a3b_IsUnix(_1a76388b0_Os)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str::lit("unix", 4)); };
	};
}



inline void _1ac9e91dd_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_1a7638b79_Arch); };
	if (_1a757319b_Is64Bit(_1a7638b79_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x64", 3)); };
	};
	if (_1a7572dd2_Is32Bit(_1a7638b79_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x32", 3)); };
	};
}



inline void _1ac9e94c9_initVars(jule::Slice<jule::Str>* _5518_vars, _1ac9e8b49_CompileInfo* _5532_info) {
	_1ac9e8e68_setOsVars(_5518_vars);
	_1ac9e91dd_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1bd79b149:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("clang", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1bd79b1c1:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("gcc", 3)); };
			}
		}
		_match_end_1bd79b0e4:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1bd79c36a:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp14", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1bd79c3d1:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp17", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1bd79c458:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp20", 5)); };
			}
		}
		_match_end_1bd79c59b:;
	};
}



inline jule::Slice<jule::U8> _1ad222141_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__1d9e52c8a_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str::lit("error: file cannot read", 23));
			;
			_1a76377c1_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _1a756d63b_Log _1ad22241b_flatCompilerErr(jule::Str _4120_text) {
	return _1a756d63b_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Text=_4120_text, };;
}



inline void _1ad226c39_pushPasses(jule::Ptr<_1ac77a832_Package>* _11120_p, jule::Slice<jule::Str>* _11144_passes) {
	{
		auto expr = &((*((*(_11120_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd7cd005:;
		if (it != expr_end) {
			jule::Ptr<_1ac81e013_SymbolTable> _11217_f = *it;
			{
				_julec_label_1bd7cd632:;
				{
					auto expr = &((*(_11217_f))._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd7cda83:;
					if (it != expr_end) {
						_1ac71b85b_Pass _11416_pass = *it;
						{
							if ((_11416_pass._field_Text).empty()) {
								goto _iter_next_1bd7cda83;
							};
							{
								auto expr = _11144_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1bd7ce314:;
								if (it != expr_end) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_1bd7cda83;
										};
									}
									_iter_next_1bd7ce314:;
									++it;
									goto _iter_begin_1bd7ce314;
								}
								_iter_end_1bd7ce314:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_11144_passes)); __jule_push_dest.push(_11416_pass._field_Text); };
						}
						_iter_next_1bd7cda83:;
						++it;
						goto _iter_begin_1bd7cda83;
					}
					_iter_end_1bd7cda83:;
				};
			}
			_iter_next_1bd7cd005:;
			++it;
			goto _iter_begin_1bd7cd005;
		}
		_iter_end_1bd7cd005:;
	};
}



inline jule::Slice<jule::Str> _1ad227102_getAllUniquePasses(jule::Ptr<_1ac77a832_Package>* _12828_pkg, jule::Slice<jule::Ptr<_1ac77790b_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_1ad226c39_pushPasses(_12828_pkg, &(_12913_passes));
	{
		auto expr = &(_12853_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd7d0e09:;
		if (it != expr_end) {
			jule::Ptr<_1ac77790b_ImportInfo> _13217_u = *it;
			{
				if ((!((*(_13217_u))._field_Binded))) {
					_1ad226c39_pushPasses(&((*(_13217_u))._field_Package), &(_12913_passes));
				};
			}
			_iter_next_1bd7d0e09:;
			++it;
			goto _iter_begin_1bd7d0e09;
		}
		_iter_end_1bd7d0e09:;
	};
	return _12913_passes;;
}



inline _1ac9e8b49_CompileInfo _1ad227311_buildCompileInfo(void) {
	_1ac9e8b49_CompileInfo _1429_info = _1ac9e8b49_CompileInfo{._field_Prod=_1da0b7cbd_Production, ._field_Test=_1da0b7361_Test, };;
	{
		auto &_match_expr{ _1da0b545d_Compiler };
		
		if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1bd7d22d4:;
			{
				_1429_info._field_Compiler=jule::Str::lit("clang", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1bd7d235b:;
			{
				_1429_info._field_Compiler=jule::Str::lit("gcc", 3);
			}
		}
		_match_end_1bd7d1558:;
	};
	{
		auto &_match_expr{ _1da0b6a47_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1bd7d2191:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1bd7d2dd9:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1bd7d2724:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp20", 5);
			}
		}
		_match_end_1bd7d30b5:;
	};
	return _1429_info;;
}



inline void _1ad3b1313_EliminateDefines(jule::Ptr<_1ad2253b9_IR>* _29026_ir) {
	jule::Ptr<_1ad37d90c_ObjectDeadCode> _2919_ocd = static__1ad3ad893_new(_29026_ir);;
	_1ad3b0ed3_elimanate(_2919_ocd);
}



inline jule::Ptr<_1ac6c7a9d_Directive> _1ad3b16cb_findDirective(jule::Slice<jule::Ptr<_1ac6c7a9d_Directive>>* _29623_directives, jule::Str _29654_tag) {
	{
		auto expr = _29623_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd81c253:;
		if (it != expr_end) {
			jule::Ptr<_1ac6c7a9d_Directive> _29717_dr = *it;
			{
				if (((*((*(_29717_dr))._field_Tag))._field_Kind == _29654_tag)) {
					return _29717_dr;;
				};
			}
			_iter_next_1bd81c253:;
			++it;
			goto _iter_begin_1bd81c253;
		}
		_iter_end_1bd81c253:;
	};
	return nullptr;;
}



inline jule::Bool _1ad3b1a50_hasDirective(jule::Slice<jule::Ptr<_1ac6c7a9d_Directive>>* _30618_directives, jule::Str _30649_tag) {
	return (_1ad3b16cb_findDirective(&((*(_30618_directives))), _30649_tag) != nullptr);;
}



inline jule::Bool _1ad3b1e18_isTraitMethod(jule::Ptr<_1ac702105_StructIns>* _31123_owner, jule::Ptr<_1ac717170_FnIns>* _31143_f) {
	{
		auto expr = &((*((*((*(_31123_owner))))._field_Decl))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd81d496:;
		if (it != expr_end) {
			jule::Ptr<_1ac727548_Trait> _31217_t = *it;
			{
				if ((_1ac7281e7_FindMethod(_31217_t.ptr(), (*((*((*(_31143_f))))._field_Decl))._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_1bd81d496:;
			++it;
			goto _iter_begin_1bd81d496;
		}
		_iter_end_1bd81d496:;
	};
	return false;;
}



inline void _1ad3b5e1c_eliminateDeadCodeOfScope(jule::Ptr<_1ac756126_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_1ac7589b9_Label>> _2425_labels = jule::Slice<jule::Ptr<_1ac7589b9_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_1ac758d93_GotoSt>> _2435_gotos = jule::Slice<jule::Ptr<_1ac758d93_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_1ad3b2c1b_scopeDeadCode> _2449_sdc = jule::new_ptr<_1ad3b2c1b_scopeDeadCode>(_1ad3b2c1b_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&((*(_24133_s))._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1ac7589b9_Label>>>)((&(_2425_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1ac758d93_GotoSt>>>)((&(_2435_gotos)))), });;
	{
		_1ad3b5adc_optimizeStmts(_2449_sdc);
	};
}



inline void _1ad3b6192_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1ac71426b_Fn>>* _25433_funcs) {
	{
		auto expr = _25433_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bba44757:;
		if (it != expr_end) {
			jule::Ptr<_1ac71426b_Fn> _25517_func = *it;
			{
				{
					auto expr = &((*(_25517_func))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bba44eb6:;
					if (it != expr_end) {
						jule::Ptr<_1ac717170_FnIns> _25621_ins = *it;
						{
							_1ad3b5e1c_eliminateDeadCodeOfScope((*(_25621_ins))._field_Scope);
						}
						_iter_next_1bba44eb6:;
						++it;
						goto _iter_begin_1bba44eb6;
					}
					_iter_end_1bba44eb6:;
				};
			}
			_iter_next_1bba44757:;
			++it;
			goto _iter_begin_1bba44757;
		}
		_iter_end_1bba44757:;
	};
}



inline void _1ad3b63c3_eliminateFunctionsScopePackage(jule::Ptr<_1ac77a832_Package>* _26240_pkg) {
	{
		auto expr = &((*((*(_26240_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bba44cda:;
		if (it != expr_end) {
			jule::Ptr<_1ac81e013_SymbolTable> _26317_f = *it;
			{
				_1ad3b6192_eliminateScopeFunctions(&((*(_26317_f))._field_Funcs));
			}
			_iter_next_1bba44cda:;
			++it;
			goto _iter_begin_1bba44cda;
		}
		_iter_end_1bba44cda:;
	};
}



inline void _1ad3b667b_eliminateScopePackage(jule::Ptr<_1ac77a832_Package>* _26831_pkg) {
	_1ad3b63c3_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _1ad3b68ac_EliminateScopes(jule::Ptr<_1ad2253b9_IR>* _27325_ir) {
	jule::I64 _2749_i = ((*((*(_27325_ir))))._field_Used.len() - 1LL);;
	for (; (_2749_i >= 0LL); (_2749_i)--) {
		{
			jule::Ptr<_1ac77790b_ImportInfo> _27613_u = (*((*(_27325_ir))))._field_Used[_2749_i];;
			if ((!((*(_27613_u))._field_Binded))) {
				_1ad3b667b_eliminateScopePackage(&((*(_27613_u))._field_Package));
			};
		}
	_iter_next_1bba46b22:;
	}
	_iter_end_1bba46b22:;;
	_1ad3b667b_eliminateScopePackage(&((*((*(_27325_ir))))._field_Main));
}



inline jule::Uintptr _1ac94b294_typeData(jule::Any* _1714_m) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(((*(_1714_m))).type)));;
}



inline jule::Bool _1ac94b629_equalConst(jule::Ptr<_1a6cde8d5_Const> _2115_l, jule::Ptr<_1a6cde8d5_Const> _2126_r) {
	{
		
		if (_1a6ce38a6_IsI64(_2115_l.ptr())) {
			_case_begin_1bad36473:;
			{
				return (_1a6ce38a6_IsI64(_2126_r.ptr()) && (_1a6ce12aa_ReadI64(_2115_l.ptr()) == _1a6ce12aa_ReadI64(_2126_r.ptr())));;
			}
		}
		else if (_1a6ce3b3c_IsU64(_2115_l.ptr())) {
			_case_begin_1bad364ea:;
			{
				return (_1a6ce3b3c_IsU64(_2126_r.ptr()) && (_1a6ce1541_ReadU64(_2115_l.ptr()) == _1a6ce1541_ReadU64(_2126_r.ptr())));;
			}
		}
		else if (_1a6ce43e0_IsF64(_2115_l.ptr())) {
			_case_begin_1bad367a3:;
			{
				return (_1a6ce43e0_IsF64(_2126_r.ptr()) && (_1a6ce1ce4_ReadF64(_2115_l.ptr()) == _1a6ce1ce4_ReadF64(_2126_r.ptr())));;
			}
		}
		else if (_1a6ce4159_IsStr(_2115_l.ptr())) {
			_case_begin_1bad36819:;
			{
				return (_1a6ce4159_IsStr(_2126_r.ptr()) && (_1a6ce1a5d_ReadStr(_2115_l.ptr()) == _1a6ce1a5d_ReadStr(_2126_r.ptr())));;
			}
		}
		else if (_1a6ce3dc3_IsBool(_2115_l.ptr())) {
			_case_begin_1bad36880:;
			{
				return (_1a6ce3dc3_IsBool(_2126_r.ptr()) && (_1a6ce17c7_ReadBool(_2115_l.ptr()) == _1a6ce17c7_ReadBool(_2126_r.ptr())));;
			}
		}
		else if (_1a6ce4676_IsNil(_2115_l.ptr())) {
			_case_begin_1bad368e6:;
			{
				return _1a6ce4676_IsNil(_2126_r.ptr());;
			}
		}
		else {
			_case_begin_1bad36363:;
			{
				return false;;
			}
		}
		_match_end_1bad35c03:;
	};
}



inline jule::Bool _1ac94b99d_equalCasting(jule::Ptr<_1ac707b33_CastingExprModel> _4017_l, jule::Ptr<_1ac707b33_CastingExprModel> _4039_r) {
	if ((!(_1ac85a23b_Equal((*(_4017_l))._field_Kind, (*(_4039_r))._field_Kind)))) {
		return false;;
	};
	return _1ac94c8d3_equalModels((*(_4017_l))._field_Expr, (*(_4039_r))._field_Expr);;
}



inline jule::Bool _1ac94bd66_equalUnary(jule::Ptr<_1ac7068ce_UnaryExprModel> _4715_l, jule::Ptr<_1ac7068ce_UnaryExprModel> _4735_r) {
	if ((((*((*(_4715_l))._field_Op))._field_Id != (*((*(_4735_r))._field_Op))._field_Id) || ((*((*(_4715_l))._field_Op))._field_Kind != (*((*(_4735_r))._field_Op))._field_Kind))) {
		return false;;
	};
	return _1ac94c8d3_equalModels((*((*(_4715_l))._field_Expr))._field_Model, (*((*(_4735_r))._field_Expr))._field_Model);;
}



inline jule::Bool _1ac94c1da_equalIndexing(jule::Ptr<_1ac708d65_IndexingExprModel> _5418_l, jule::Ptr<_1ac708d65_IndexingExprModel> _5441_r) {
	return (_1ac94c8d3_equalModels((*((*(_5418_l))._field_Expr))._field_Model, (*((*(_5441_r))._field_Expr))._field_Model) && _1ac94c8d3_equalModels((*((*(_5418_l))._field_Index))._field_Model, (*((*(_5441_r))._field_Index))._field_Model));;
}



inline jule::Bool _1ac94c55e_equalBinary(jule::Ptr<_1ac706505_BinaryExprModel> _5916_l, jule::Ptr<_1ac706505_BinaryExprModel> _5937_r) {
	if ((((*((*(_5916_l))._field_Op))._field_Id != (*((*(_5937_r))._field_Op))._field_Id) || ((*((*(_5916_l))._field_Op))._field_Kind != (*((*(_5937_r))._field_Op))._field_Kind))) {
		return false;;
	};
	return (_1ac94c8d3_equalModels((*((*(_5916_l))._field_Left))._field_Model, (*((*(_5937_r))._field_Left))._field_Model) && _1ac94c8d3_equalModels((*((*(_5916_l))._field_Right))._field_Model, (*((*(_5937_r))._field_Right))._field_Model));;
}



inline jule::Bool _1ac94c8d3_equalModels(jule::Any _7016_l, jule::Any _7030_r) {
	if ((_1ac94b294_typeData(&(_7016_l)) != _1ac94b294_typeData(&(_7030_r)))) {
		return false;;
	};
	{
		auto &_match_expr{ _7016_l };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bba67b10:;
			{
				return (_7016_l.cast_ptr<_1ac7bb015_Var>(&__jule_any_type8) == _7030_r.cast_ptr<_1ac7bb015_Var>(&__jule_any_type8));;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1bba67b87:;
			{
				jule::Ptr<_1ac70b076_StructSubIdentExprModel> _789_li = _7016_l.cast_ptr<_1ac70b076_StructSubIdentExprModel>(&__jule_any_type97);;
				jule::Ptr<_1ac70b076_StructSubIdentExprModel> _799_ri = _7030_r.cast_ptr<_1ac70b076_StructSubIdentExprModel>(&__jule_any_type97);;
				return (((*(_789_li))._field_Field == (*(_799_ri))._field_Field) && _1ac94c8d3_equalModels((*((*(_789_li))._field_Expr))._field_Model, (*((*(_799_ri))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1bba67c0e:;
			{
				return _1ac94b629_equalConst(_7016_l.cast_ptr<_1a6cde8d5_Const>(&__jule_any_type19), _7030_r.cast_ptr<_1a6cde8d5_Const>(&__jule_any_type19));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1bba67e84:;
			{
				return _1ac94b99d_equalCasting(_7016_l.cast_ptr<_1ac707b33_CastingExprModel>(&__jule_any_type92), _7030_r.cast_ptr<_1ac707b33_CastingExprModel>(&__jule_any_type92));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1bba67eea:;
			{
				return _1ac94bd66_equalUnary(_7016_l.cast_ptr<_1ac7068ce_UnaryExprModel>(&__jule_any_type110), _7030_r.cast_ptr<_1ac7068ce_UnaryExprModel>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1bba68061:;
			{
				return _1ac94c1da_equalIndexing(_7016_l.cast_ptr<_1ac708d65_IndexingExprModel>(&__jule_any_type45), _7030_r.cast_ptr<_1ac708d65_IndexingExprModel>(&__jule_any_type45));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1bba680c7:;
			{
				return _1ac94c55e_equalBinary(_7016_l.cast_ptr<_1ac706505_BinaryExprModel>(&__jule_any_type111), _7030_r.cast_ptr<_1ac706505_BinaryExprModel>(&__jule_any_type111));;
			}
		}
		else {
			_case_begin_1bba6759e:;
			{
				return false;;
			}
		}
		_match_end_1bba67a55:;
	};
}



inline jule::Bool _1ac955b94_isStdPackage(jule::Str* _46318_f, jule::Str _46326_p) {
	return _1a693951e_HasPrefix((*(_46318_f)), _1a694455c_Join(jule::Slice<jule::Str>::make({_1a7637ccc_PathStdlib,_46326_p})));;
}



inline jule::Bool _1ac955ea2_isConstantValidConditionalCase(jule::Ptr<_1ac756544_If>* _46736_i) {
	{
		auto &_match_expr{ (*((*(_46736_i))))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1bba6d792:;
			{
				jule::Ptr<_1a6cde8d5_Const> _4709_c = (*((*(_46736_i))))._field_Expr.cast_ptr<_1a6cde8d5_Const>(&__jule_any_type19);;
				return (_1a6ce3dc3_IsBool(_4709_c.ptr()) && _1a6ce17c7_ReadBool(_4709_c.ptr()));;
			}
		}
		_match_end_1bba6d73c:;
	};
	return false;;
}



inline jule::Bool _1ac95626b_isUnreachableExpr(jule::Any* _47623_expr) {
	{
		auto &_match_expr{ (*(_47623_expr)) };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1bba6d8d5:;
			{
				jule::Ptr<_1a6cde8d5_Const> _4799_c = (*(_47623_expr)).cast_ptr<_1a6cde8d5_Const>(&__jule_any_type19);;
				return (_1a6ce3dc3_IsBool(_4799_c.ptr()) && (!(_1a6ce17c7_ReadBool(_4799_c.ptr()))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1bba6e5a6:;
			{
				jule::Ptr<_1ac706505_BinaryExprModel> _4829_m = (*(_47623_expr)).cast_ptr<_1ac706505_BinaryExprModel>(&__jule_any_type111);;
				if (((*((*(_4829_m))._field_Op))._field_Id == static_cast<jule::U64>(54LLU))) {
					return (_1ac95626b_isUnreachableExpr(&((*((*(_4829_m))._field_Left))._field_Model)) || _1ac95626b_isUnreachableExpr(&((*((*(_4829_m))._field_Right))._field_Model)));;
				};
			}
		}
		_match_end_1bba6d880:;
	};
	return false;;
}



inline jule::Bool _1ac9565ac_isConstantValidMatchCase(jule::Ptr<_1ac75ad95_Case>* _49130_case) {
	{
		auto expr = &((*((*(_49130_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bba72d5c:;
		if (it != expr_end) {
			jule::Ptr<_1ac8243ae_Data> *_49212_expr = it;
			{
				if (((_1ac824c83_IsConst((*(_49212_expr)).ptr()) && _1a6ce3dc3_IsBool((*((*(_49212_expr))))._field_Constant.ptr())) && _1a6ce17c7_ReadBool((*((*(_49212_expr))))._field_Constant.ptr()))) {
					return true;;
				};
			}
			_iter_next_1bba72d5c:;
			++it;
			goto _iter_begin_1bba72d5c;
		}
		_iter_end_1bba72d5c:;
	};
	return false;;
}



inline jule::Bool _1ac956876_isUnreachableConditionalCase(jule::Ptr<_1ac756544_If>* _50034_i) {
	return _1ac95626b_isUnreachableExpr(&((*((*(_50034_i))))._field_Expr));;
}



inline jule::Bool _1ac956b40_isUnreachableMatchCase(jule::Ptr<_1ac75ad95_Case>* _50428_case) {
	{
		auto expr = &((*((*(_50428_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd86e21c:;
		if (it != expr_end) {
			jule::Ptr<_1ac8243ae_Data> *_50512_expr = it;
			{
				if ((!(_1ac95626b_isUnreachableExpr(&((*((*(_50512_expr))))._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1bd86e21c:;
			++it;
			goto _iter_begin_1bd86e21c;
		}
		_iter_end_1bd86e21c:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1ac960929_checkForBitShiftOpt(jule::Ptr<_1ac70600a_OperandExprModel>* _63425_l, jule::Ptr<_1ac70600a_OperandExprModel>* _63448_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_1a6cddbd1_IsInt(_1ac859dea_Str((*((*(_63425_l))))._field_Kind.ptr())))) || (!(_1a6cddbd1_IsInt(_1ac859dea_Str((*((*(_63448_r))))._field_Kind.ptr())))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>(_1a6ce2311_AsU64((*((*(_63448_r))))._field_Model.cast_ptr<_1a6cde8d5_Const>(&__jule_any_type19).ptr()));
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _6425_j = _1dbac937c_Log2(static_cast<jule::F64>(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1)));;
	jule::U64 _6435_z = static_cast<jule::U64>(_6425_j);;
	if ((static_cast<jule::F64>(_6435_z) != _6425_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _6435_z;
	return __jule_func_result;;
}



inline jule::Bool _1ac960ce2_areSameLvalueExprModel(jule::Any* _65128_l, jule::Any* _65143_r) {
	{
		auto &_match_expr{ (*(_65128_l)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bd8beba7:;
			{
				return ((*(_65143_r)) == (*(_65128_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1bd8bec1d:;
			{
				{
					auto &_match_expr{ (*(_65143_r)) };
					
					if (_match_expr.type == &__jule_any_type97) {
						_case_begin_1bd8c0801:;
						{
							goto _match_end_1bd8c0867;
						}
					}
					else {
						_case_begin_1bd8c08bc:;
						{
							return false;;
						}
					}
					_match_end_1bd8c0867:;
				};
				jule::Ptr<_1ac70b076_StructSubIdentExprModel> _6649_lsi = (*(_65128_l)).cast_ptr<_1ac70b076_StructSubIdentExprModel>(&__jule_any_type97);;
				jule::Ptr<_1ac70b076_StructSubIdentExprModel> _6659_rsi = (*(_65143_r)).cast_ptr<_1ac70b076_StructSubIdentExprModel>(&__jule_any_type97);;
				if (((*(_6649_lsi))._field_Field != (*(_6659_rsi))._field_Field)) {
					return false;;
				};
				return _1ac960ce2_areSameLvalueExprModel(&((*((*(_6649_lsi))._field_Expr))._field_Model), &((*((*(_6659_rsi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1bd8bec95:;
			{
				{
					auto &_match_expr{ (*(_65143_r)) };
					
					if (_match_expr.type == &__jule_any_type110) {
						_case_begin_1bd8c2ced:;
						{
							jule::Ptr<_1ac7068ce_UnaryExprModel> _67713_ul = (*(_65128_l)).cast_ptr<_1ac7068ce_UnaryExprModel>(&__jule_any_type110);;
							jule::Ptr<_1ac7068ce_UnaryExprModel> _67813_ur = (*(_65143_r)).cast_ptr<_1ac7068ce_UnaryExprModel>(&__jule_any_type110);;
							if ((((*((*(_67713_ul))._field_Op))._field_Id != (*((*(_67813_ur))._field_Op))._field_Id) || ((*((*(_67713_ul))._field_Op))._field_Kind != (*((*(_67813_ur))._field_Op))._field_Kind))) {
								return false;;
							};
							return _1ac960ce2_areSameLvalueExprModel(&((*((*(_67713_ul))._field_Expr))._field_Model), &((*((*(_67813_ur))._field_Expr))._field_Model));;
						}
					}
					_match_end_1bd8c22a3:;
				};
			}
		}
		_match_end_1bd8beb52:;
	};
	return false;;
}



inline void _1ac96360d_PushOptLevel(jule::I64 _2917_level) {
	jule::Bool _305_l1 = (_2917_level >= static_cast<jule::I64>(1LL));;
	_1ac9614b8_Copy=_305_l1;
	_1ac9617c6_Deadcode=_305_l1;
	_1ac961a90_Append=_305_l1;
	_1ac961d9d_Math=_305_l1;
	_1ac962167_Access=_305_l1;
	_1ac962431_Inline=_305_l1;
	_1ac9626ea_Ptr=_305_l1;
	_1ac962ac4_Cond=_305_l1;
	_1ac962d8d_Str=_305_l1;
	_1ac963157_Slice=_305_l1;
	_1ac963421_Assign=_305_l1;
}



inline void _1ad3c0d8e_detectEnabled(void) {
	_1ad3bdaa1_exprEnabled=(((_1ac9626ea_Ptr || _1ac961d9d_Math) || _1ac962167_Access) || _1ac962ac4_Cond);
	_1ad3bdd9d_scopeEnabled=(((((_1ac962ac4_Cond || _1ac961a90_Append) || _1ac9614b8_Copy) || _1ac962d8d_Str) || _1ac963157_Slice) || _1ac963421_Assign);
}



inline void _1ad3e9879_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_1a76377c1_Exit(1LL);
}



inline jule::U64 _1ba9d2196_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));;
}



inline jule::Bool _1ad82d362_isCopyOptimizable(jule::Ptr<_1ac8243ae_Data>* _86523_expr) {
	if ((!((*((*(_86523_expr))))._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_86523_expr))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1bad7ec4c:;
			{
				return false;;
			}
		}
		_match_end_1bad7ebe7:;
	};
	return true;;
}



inline jule::Bool _1ad82d72a_isIterCopyOptimizable(jule::Ptr<_1ac8243ae_Data>* _87627_expr, jule::Ptr<_1ac7bb015_Var>* _87641_v) {
	if (((!((*((*(_87627_expr))))._field_Lvalue)) && (!(_1ac85b3b3_Mutable((*((*(_87627_expr))))._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*((*(_87641_v))))._field_Mutable)) && (!((*((*(_87627_expr))))._field_Mutable)));;
}



inline jule::Str _1ad83d33e_decomposeCommonEsq(jule::U8 _149623_b) {
	{
		auto &_match_expr{ _149623_b };
		
		if (_match_expr == '\\') {
			_case_begin_1be003186:;
			{
				return jule::Str::lit("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1be0037e6:;
			{
				return jule::Str::lit("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1be003351:;
			{
				return jule::Str::lit("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1be0033b7:;
			{
				return jule::Str::lit("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1be00342d:;
			{
				return jule::Str::lit("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1be003494:;
			{
				return jule::Str::lit("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1be0039b1:;
			{
				return jule::Str::lit("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1be003a27:;
			{
				return jule::Str::lit("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1be003a8d:;
			{
				return jule::Str::lit("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1be003b04:;
			{
				return jule::Str::lit("\\v", 2);;
			}
		}
		else {
			_case_begin_1be0032da:;
			{
				return jule::Str();;
			}
		}
		_match_end_1bdee8c4d:;
	};
}



inline jule::Str _1ad83d64c_sbtoa(jule::U8 _152310_b) {
	if ((_152310_b == 0LLU)) {
		return jule::Str::lit("\\x00", 4);;
	};
	if ((_152310_b < 128LLU)) {
		jule::Str _15289_seq = _1ad83d33e_decomposeCommonEsq(_152310_b);;
		if (!(_15289_seq).empty()) {
			return _15289_seq;;
		};
		if (((32LL <= _152310_b) && (_152310_b <= 126LLU))) {
			return jule::Str::from_byte(_152310_b);;
		};
	};
	jule::Str _15365_seq = _1dbba3346_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_152310_b)), 8LL);;
	if ((_15365_seq.len() == 2LL)) {
		return (jule::Str::lit("\\0", 2) + _15365_seq);;
	};
	return (jule::Str::lit("\\", 1) + _15365_seq);;
}



inline void _1ad83d938_cstrBytes(_1c164cc40_StrBuilder* _154319_s, jule::Str _154334_ctx) {
	{
		auto expr = &(_154334_ctx);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be008741:;
		if (it != expr_end) {
			jule::U8 *_154412_b = it;
			{
				_1c164d702_WriteStr(_154319_s, _1ad83d64c_sbtoa((*(_154412_b))));
			}
			_iter_next_1be008741:;
			++it;
			goto _iter_begin_1be008741;
		}
		_iter_end_1be008741:;
	};
}



inline void _1ad83dc68_cstrLit(_1c164cc40_StrBuilder* _154917_s, jule::Str _154932_ctx) {
	_1c164d9aa_WriteByte(_154917_s, '\"');
	_1ad83d938_cstrBytes(_154917_s, _154932_ctx);
	_1c164d9aa_WriteByte(_154917_s, '\"');
}



inline void _1ad83e10e_ftoa(_1c164cc40_StrBuilder* _155514_s, jule::F64 _155529_f, jule::I64 _155537_bitsize) {
	if ((_155537_bitsize != 32LL)) {
		if ((_155529_f == static_cast<jule::F64>(static_cast<jule::I64>(_155529_f)))) {
			_1ad83e3ea_itoa(_155514_s, static_cast<jule::I64>(static_cast<jule::I64>(_155529_f)));
			return;;
		};
		if ((_155529_f == static_cast<jule::F64>(static_cast<jule::U64>(_155529_f)))) {
			_1ad83e6d6_utoa(_155514_s, static_cast<jule::U64>(static_cast<jule::U64>(_155529_f)));
			return;;
		};
	};
	jule::Str _15665_m = _1dbb0386d_FmtFloat(_155529_f, 'f', -1LL, _155537_bitsize);;
	_1c164d702_WriteStr(_155514_s, _15665_m);
	if ((!(_1a693de91_Contains(_15665_m, jule::Str::lit(".", 1))))) {
		_1c164d702_WriteStr(_155514_s, jule::Str::lit(".0", 2));
	};
}



inline void _1ad83e3ea_itoa(_1c164cc40_StrBuilder* _157314_s, jule::I64 _157329_x) {
	{
		
		if ((_157329_x == jule::MAX_I64)) {
			_case_begin_1be00c976:;
			{
				_1c164d702_WriteStr(_157314_s, jule::Str::lit("jule::MAX_I64", 13));
				return;;
			}
		}
		else if ((_157329_x == jule::MIN_I64)) {
			_case_begin_1be00c9ed:;
			{
				_1c164d702_WriteStr(_157314_s, jule::Str::lit("jule::MIN_I64", 13));
				return;;
			}
		}
		_match_end_1be00c866:;
	};
	_1c164d702_WriteStr(_157314_s, _1dbba370e_FmtInt(_157329_x, 10LL));
	if (_1a757319b_Is64Bit(jule::Str::lit("amd64", 5))) {
		_1c164d9aa_WriteByte(_157314_s, 'L');
	};
	_1c164d9aa_WriteByte(_157314_s, 'L');
}



inline void _1ad83e6d6_utoa(_1c164cc40_StrBuilder* _159014_s, jule::U64 _159029_x) {
	{
		
		if ((_159029_x == jule::MAX_U64)) {
			_case_begin_1be00eaaa:;
			{
				_1c164d702_WriteStr(_159014_s, jule::Str::lit("jule::MAX_U64", 13));
				return;;
			}
		}
		_match_end_1be00e9ab:;
	};
	_1c164d702_WriteStr(_159014_s, _1dbba3346_FmtUint(_159029_x, 10LL));
	if (_1a757319b_Is64Bit(jule::Str::lit("amd64", 5))) {
		_1c164d9aa_WriteByte(_159014_s, 'L');
	};
	_1c164d702_WriteStr(_159014_s, jule::Str::lit("LU", 2));
}



inline jule::Bool _1ad83eab0_isForwarded(jule::Ptr<_1ac756126_Scope>* _160417_s) {
	jule::Any _16055_last = (*((*(_160417_s))))._field_Stmts[((*((*(_160417_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _16055_last };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1be011d98:;
			{
				{
					auto &_match_expr{ (*(_16055_last.cast_ptr<_1ac8243ae_Data>(&__jule_any_type24)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1be012be0:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1be012b79:;
						{
							return false;;
						}
					}
					_match_end_1be012b24:;
				};
			}
		}
		else {
			_case_begin_1be011e86:;
			{
				return true;;
			}
		}
		_match_end_1be011480:;
	};
}



inline jule::Bool _1ad83ed79_isExprComesFromBind(jule::Ptr<_1ac8243ae_Data>* _161925_d) {
	{
		auto &_match_expr{ (*((*(_161925_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1be01343d:;
			{
				return (*((*((*(_161925_d))))._field_Model.cast_ptr<_1ac7bb015_Var>(&__jule_any_type8)))._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1be0134a4:;
			{
				return (*((*((*((*((*(_161925_d))))._field_Model.cast_ptr<_1ac70b076_StructSubIdentExprModel>(&__jule_any_type97)))._field_Owner))._field_Decl))._field_Binded;;
			}
		}
		else {
			_case_begin_1be0133c7:;
			{
				return false;;
			}
		}
		_match_end_1be013372:;
	};
}



inline jule::Bool _1ad840143_isAny(jule::Ptr<_1ac859a32_TypeKind>* _163115_t) {
	if ((_1ac85cbbc_TypeEnum((*(_163115_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1ac86260b_Prim> _16355_prim = _1ac85c183_Prim((*(_163115_t)).ptr());;
	return ((_16355_prim != nullptr) && _1ac865d29_IsAny(_16355_prim.ptr()));;
}



inline void _1ba9e6793_iterFiles(jule::Ptr<_1ac77a832_Package>* _136019_pkg, jule::Fn<void(jule::Ptr<_1ac81e013_SymbolTable>*)> _136034_f) {
	{
		auto expr = &((*((*(_136019_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be21e2c5:;
		if (it != expr_end) {
			jule::Ptr<_1ac81e013_SymbolTable> _136117_file = *it;
			{
				_136034_f(&(_136117_file));
			}
			_iter_next_1be21e2c5:;
			++it;
			goto _iter_begin_1be21e2c5;
		}
		_iter_end_1be21e2c5:;
	};
}



inline jule::Slice<jule::U8> _1ba9e6aa1_concatAllParts(jule::Slice<jule::Ptr<_1ac6b2e62_Token>> _136719_parts) {
	jule::I64 _13689_n = 0LL;;
	{
		auto expr = &(_136719_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be220381:;
		if (it != expr_end) {
			jule::Ptr<_1ac6b2e62_Token> *_136912_part = it;
			{
				_13689_n+=(*((*(_136912_part))))._field_Kind.len();
			}
			_iter_next_1be220381:;
			++it;
			goto _iter_begin_1be220381;
		}
		_iter_end_1be220381:;
	};
	if ((_13689_n == 0LL)) {
		return nullptr;;
	};
	_1c164cc40_StrBuilder _13759_s = static__1c164d191_New(_13689_n);;
	{
		auto expr = &(_136719_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be21ea67:;
		if (it != expr_end) {
			jule::Ptr<_1ac6b2e62_Token> *_137612_p = it;
			{
				_1c164d702_WriteStr(&_13759_s, (*((*(_137612_p))))._field_Kind);
			}
			_iter_next_1be21ea67:;
			++it;
			goto _iter_begin_1be21ea67;
		}
		_iter_end_1be21ea67:;
	};
	return _1c164e99a_Buf(&_13759_s);;
}



inline jule::Bool _1ba9e6e25_containsTraitMethod(jule::Ptr<_1ac727548_Trait>* _138329_t, jule::Str* _138341_ident) {
	{
		auto expr = &((*((*(_138329_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be22240a:;
		if (it != expr_end) {
			jule::Ptr<_1ac71426b_Fn> _138412_m = *it;
			{
				if (((*(_138412_m))._field_Ident == (*(_138341_ident)))) {
					return true;;
				};
			}
			_iter_next_1be22240a:;
			++it;
			goto _iter_begin_1be22240a;
		}
		_iter_end_1be22240a:;
	};
	return false;;
}



inline void _1ba9e7255_pushMethodsFromInherit(jule::Ptr<_1ac727548_Trait>* _139532_dest, jule::Ptr<_1ac727548_Trait>* _139551_src) {
	_1ba9e7541_pushMethodsFromInherits(_139532_dest, _139551_src);
	{
		auto expr = &((*((*(_139551_src))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be22362b:;
		if (it != expr_end) {
			jule::Ptr<_1ac71426b_Fn> _139717_m = *it;
			{
				if ((!(_1ba9e6e25_containsTraitMethod(_139532_dest, &((*(_139717_m))._field_Ident))))) {
					{ jule::Slice<jule::Ptr<_1ac71426b_Fn>> &__jule_push_dest = (*((*(_139532_dest))))._field_Methods; __jule_push_dest.push(_139717_m); };
				};
			}
			_iter_next_1be22362b:;
			++it;
			goto _iter_begin_1be22362b;
		}
		_iter_end_1be22362b:;
	};
}



inline void _1ba9e7541_pushMethodsFromInherits(jule::Ptr<_1ac727548_Trait>* _140633_dest, jule::Ptr<_1ac727548_Trait>* _140652_src) {
	{
		auto expr = &((*((*(_140652_src))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be224929:;
		if (it != expr_end) {
			jule::Ptr<_1ac861c04_TypeSymbol> _140717_inh = *it;
			{
				jule::Ptr<_1ac727548_Trait> _140813_t2 = _1ac85d98c_Trait((*(_140717_inh))._field_Kind.ptr());;
				_1ba9e7255_pushMethodsFromInherit(_140633_dest, &(_140813_t2));
			}
			_iter_next_1be224929:;
			++it;
			goto _iter_begin_1be224929;
		}
		_iter_end_1be224929:;
	};
}



inline jule::Bool _1ba9e780a_isOpMethod(jule::Ptr<_1ac71426b_Fn>* _141416_m) {
	if ((((*((*(_141416_m))))._field_Generics.len() > 0LL) || ((*((*(_141416_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	jule::Ptr<_1ac717170_FnIns> _14185_mi = (*((*(_141416_m))))._field_Instances[0LL];;
	;
	;
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_Eq)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_Gt)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_GtEq)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_Lt)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_LtEq)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_Shl)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_Shr)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_Add)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_Sub)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_Div)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_Mul)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_Mod)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_BitAnd)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_BitOr)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_BitXor)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_Neg)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_Pos)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_BitNot)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_AddAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_SubAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_DivAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_MulAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_ModAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_ShlAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_ShrAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_BitOrAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_BitAndAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*((*(_14185_mi))._field_Owner))._field_Operators._field_BitXorAssign)) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1ba9e7ac4_isHeadDecl(jule::Ptr<_1ac71426b_Fn>* _143020_m) {
	if ((((*((*(_143020_m))))._field_Generics.len() > 0LL) || ((*((*(_143020_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	if (_1ba9e780a_isOpMethod(_143020_m)) {
		return true;;
	};
	jule::Ptr<_1ac717170_FnIns> _14379_mi = (*((*(_143020_m))))._field_Instances[0LL];;
	;
	return static__1ac7bc467_Dispose(_1ac70316c_FindMethod((*(_14379_mi))._field_Owner.ptr(), jule::Str::lit("Dispose", 7), false));;
}



inline jule::Ptr<_1ac6c7a9d_Directive> _1baa06e8a_findDirective(jule::Slice<jule::Ptr<_1ac6c7a9d_Directive>>* _47423_directives, jule::Str _47454_tag) {
	{
		auto expr = _47423_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be3ebabd:;
		if (it != expr_end) {
			jule::Ptr<_1ac6c7a9d_Directive> _47517_dr = *it;
			{
				if (((*((*(_47517_dr))._field_Tag))._field_Kind == _47454_tag)) {
					return _47517_dr;;
				};
			}
			_iter_next_1be3ebabd:;
			++it;
			goto _iter_begin_1be3ebabd;
		}
		_iter_end_1be3ebabd:;
	};
	return nullptr;;
}



inline jule::Bool _1baa07353_hasDirective(jule::Slice<jule::Ptr<_1ac6c7a9d_Directive>>* _48418_directives, jule::Str _48449_tag) {
	return (_1baa06e8a_findDirective(&((*(_48418_directives))), _48449_tag) != nullptr);;
}



inline jule::Bool _1baa0761c_shouldInitialized(jule::Ptr<_1ac859a32_TypeKind>* _49127_t) {
	jule::Ptr<_1ac86260b_Prim> _4925_prim = _1ac85c183_Prim((*(_49127_t)).ptr());;
	if ((_4925_prim != nullptr)) {
		return ((!(_1ac865d29_IsAny(_4925_prim.ptr()))) && (!(_1ac865a93_IsStr(_4925_prim.ptr()))));;
	};
	{
		
		if ((_1ac85c419_Sptr((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1be3ee8e5:;
			{
				return false;;
			}
		}
		else if ((_1ac85dc23_Map((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1be3ee95b:;
			{
				return false;;
			}
		}
		else if ((_1ac85d1d9_Slc((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1be3ee9d3:;
			{
				return false;;
			}
		}
		else if ((_1ac85d98c_Trait((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1be3eea5a:;
			{
				return false;;
			}
		}
		else if ((_1ac85d470_Fn((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1be3eead2:;
			{
				return false;;
			}
		}
		else if ((_1ac85ce53_Arr((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1be3eeb59:;
			{
				jule::Ptr<_1ac868e2b_Arr> _50813_arr = _1ac85ce53_Arr((*(_49127_t)).ptr());;
				return _1baa0761c_shouldInitialized(&((*(_50813_arr))._field_Elem));;
			}
		}
		else if ((_1ac85d706_Struct((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1be3eebd1:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1be3edb8b:;
			{
				return true;;
			}
		}
		_match_end_1be3ed96b:;
	};
}



inline void _1a763bd7a_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _1a763c100_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_1a763bd7a_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I64 _419_max = _1a763bb8d_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_1a763bb8d_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acbd143b:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_4212_k = it;
			{
				jule::I64 _439_n = (*(_4212_k))[0LL].len();;
				if ((_439_n > _419_max)) {
					_419_max=_439_n;
				};
			}
			_iter_next_1acbd143b:;
			++it;
			goto _iter_begin_1acbd143b;
		}
		_iter_end_1acbd143b:;
	};
	_1c164cc40_StrBuilder _499_s = static__1c164d191_New(32LL);;
	;
	{
		auto expr = &(_1a763bb8d_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acbd2c34:;
		if (it != expr_end) {
			jule::I64 _519_i = it - expr->begin();
			jule::Array<jule::Str,2> *_5112_part = it;
			{
				_1c164d702_WriteStr(&_499_s, (*(_5112_part))[0LL]);
				_1c164d702_WriteStr(&_499_s, _1a6938c27_Repeat(jule::Str::lit(" ", 1), static_cast<jule::I64>(((_419_max - (*(_5112_part))[0LL].len()) + 5LL))));
				_1c164d702_WriteStr(&_499_s, (*(_5112_part))[1LL]);
				if (((_519_i + 1LL) < 5LL)) {
					_1c164d9aa_WriteByte(&_499_s, '\n');
				};
			}
			_iter_next_1acbd2c34:;
			++it;
			_519_i++;
			goto _iter_begin_1acbd2c34;
		}
		_iter_end_1acbd2c34:;
	};
	jule::outln(_499_s);
}



inline void _1a763c331_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_1a763bd7a_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str::lit("jule0.0.15 @master", 18));
}



inline void _1a763c52e_toolDistos(void) {
	jule::out(jule::Str::lit("supported operating systems:\n ", 30));
	jule::out(jule::Str::lit("windows", 7));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("linux", 5));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("darwin", 6));
	jule::outln(jule::Str());
}



inline void _1a763c6a5_toolDistarch(void) {
	jule::out(jule::Str::lit("supported architects:\n ", 23));
	jule::out(jule::Str::lit("amd64", 5));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("i386", 4));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("arm64", 5));
	jule::outln(jule::Str());
}



inline void _1a763c8d6_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(jule::Str::lit("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_1a763bd7a_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1055_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1055_cmd };
		
		if (_match_expr == jule::Str::lit("distos", 6)) {
			_case_begin_1acbd8b4c:;
			{
				_1a763c52e_toolDistos();
			}
		}
		else if (_match_expr == jule::Str::lit("distarch", 8)) {
			_case_begin_1acbd8883:;
			{
				_1a763c6a5_toolDistarch();
			}
		}
		else {
			_case_begin_1acbd7695:;
			{
				_1a763bd7a_printErrorMessage((jule::Str::lit("undefined command: ", 19) + _1055_cmd));
			}
		}
		_match_end_1acbd870c:;
	};
}



inline void _1a763cb17_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_1a763bd7a_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str::lit("julec version: jule0.0.15 @master", 33));
	jule::outln(jule::Str::lit("architecture: amd64", 19));
	jule::outln(jule::Str::lit("operating system: windows", 25));
	jule::outln((jule::Str::lit("default compiler: ", 18) + _1da0b545d_Compiler));
	jule::outln((jule::Str::lit("default C++ standard: ", 22) + _1da0b6a47_CppStd));
}



inline void _1a763ce25_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(jule::Str::lit("command is not given, try julec mod init", 40));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_1a763bd7a_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str::lit("init", 4)) {
			_case_begin_1acbdc1b1:;
			{
				({
					auto except = static__1d9e53131_Write(jule::Str::lit("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_1a763bd7a_printErrorMessage(jule::Str::lit("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1acbdadd5:;
			{
				_1a763bd7a_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1acbdbcc6:;
	};
}



inline jule::Bool _1a763d1de_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str::lit("help", 4)) {
			_case_begin_1acbdd778:;
			{
				_1a763c100_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("version", 7)) {
			_case_begin_1acbdd7de:;
			{
				_1a763c331_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("tool", 4)) {
			_case_begin_1acbdd855:;
			{
				_1a763c8d6_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("julenv", 6)) {
			_case_begin_1acbdd8bb:;
			{
				_1a763cb17_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("mod", 3)) {
			_case_begin_1acbdd107:;
			{
				_1a763ce25_mod(_15320_args);
			}
		}
		else {
			_case_begin_1acbdd091:;
			{
				return false;;
			}
		}
		_match_end_1acbdc964:;
	};
	return true;;
}



inline void _1a763d365_showInfo(void) {
	jule::outln(jule::Str::lit("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307));
}



void entry_point(void) {
	jule::Slice<jule::Str> _1899_args = _1c1681c1e_Args();;
	if ((_1899_args.len() < 2LL)) {
		_1a763d365_showInfo();
		return;;
	};
	if (_1a763d1de_processCommand(&(_1899_args))) {
		return;;
	};
	_1baa771e7_compileCommand(&(_1899_args));
}



inline void _1a763dd27_enableVtp(void) {
	jule::Uintptr _195_hOut = _1d9e381c1_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551605LLU));;
	if ((_195_hOut == jule::MAX_U64)) {
		return;;
	};
	jule::I64 _249_dwMode = 0LL;;
	if ((!(_1d9e3a745_GetConsoleMode(_195_hOut, &(_249_dwMode))))) {
		return;;
	};
	_249_dwMode|=4LL;
	_1d9e3ad1c_SetConsoleMode(_195_hOut, _249_dwMode);
}



inline void _1a763dee2_init(void) {
	_1a763dd27_enableVtp();
}



inline void _1baa73ee6_init(void) {
	_1da0b545d_Compiler=jule::Str::lit("clang", 5);
}



inline jule::Ptr<_1d9e522d9_File> _1baa742c1_openOutput(jule::Str* _4316_path) {
	jule::Str _445_dir = _1a6945250_Dir((*(_4316_path)));;
	({
		auto except = static__1a6946a48_Of(_445_dir);
		if (!except.ok()) {
			({
				auto except = static__1a6945d77_Create(_445_dir);
				if (!except.ok()) {
					_1ad3e9879_Throw(jule::Str::lit("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__1d9e529c1_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_1ad3e9879_Throw(jule::Str::lit("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1baa74447_clearObjects(void) {
	({
		auto except = static__1c157d17b_Remove(_1baa75646_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str::lit("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__1a69460a8_Remove(_1baa73776_OutDir);
}



inline void _1baa74777_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_1a7630665_Cmd> _739_cmd = static__1a7630a83_New(_7214_compiler);;
	(*(_739_cmd))._field_Args=_1a693db1c_Split(_7229_compilerCmd, jule::Str::lit(" ", 1), -1LL);
	({
		auto except = _1a7630c81_Spawn(_739_cmd.ptr());
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1acbe5e9a:;
					{
						static__1ad3e5be9_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1acbe5780:;
					{
						static__1ad3e5be9_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1acbe595b:;
					{
						static__1ad3e5be9_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1acbe5906:;
			};
			_1ad3e9879_Throw(jule::Str());
		}
	});
	jule::I64 _865_status = ({
		auto except = _1a7631215_Wait(_739_cmd.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:15"));
		(except.result);
	});;
	if ((_865_status != 0LL)) {
		jule::Str _889_errorMessage = ((jule::Str::lit("\n>>> your backend compiler (", 28) + _1da0b545d_Compiler) + jule::Str::lit(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1ad3e5be9_Print(jule::Str::lit("\033[31m", 5), _889_errorMessage);
		_1ad3e9879_Throw(jule::Str());
	};
	_1baa74447_clearObjects();
}



inline jule::Bool _1baa74a41_isCppSourceFile(jule::Str _9920_path) {
	jule::I64 _1005_offset = _1a693c643_FindLastByte(_9920_path, '.');;
	if ((_1005_offset == -1LL)) {
		return false;;
	};
	return _1a7561651_IsValidCppExt(_9920_path.slice(_1005_offset));;
}



inline void _1baa74c72_pushCompCmdClang(_1c164cc40_StrBuilder* _10726_cmd) {
	_1c164d702_WriteStr(_10726_cmd, jule::Str::lit("-Wno-everything ", 16));
	_1c164d702_WriteStr(_10726_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _1da0b6a47_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1acbe97ea:;
			{
				_1c164d702_WriteStr(_10726_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1acbe8574:;
			{
				_1c164d702_WriteStr(_10726_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1acbe992c:;
			{
				_1c164d702_WriteStr(_10726_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1acbe9795:;
	};
	_1c164d9aa_WriteByte(_10726_cmd, ' ');
	if (_1da0b7cbd_Production) {
		_1c164d702_WriteStr(_10726_cmd, jule::Str::lit("-O3 ", 4));
		_1c164d702_WriteStr(_10726_cmd, jule::Str::lit("-flto ", 6));
		_1c164d702_WriteStr(_10726_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_1c164d702_WriteStr(_10726_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_1c164d702_WriteStr(_10726_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline void _1baa74ea3_pushCompCmdGcc(_1c164cc40_StrBuilder* _13324_cmd) {
	_1c164d702_WriteStr(_13324_cmd, jule::Str::lit("-w ", 3));
	_1c164d702_WriteStr(_13324_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _1da0b6a47_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1acbec7cb:;
			{
				_1c164d702_WriteStr(_13324_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1acbeae28:;
			{
				_1c164d702_WriteStr(_13324_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1acbeae8e:;
			{
				_1c164d702_WriteStr(_13324_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1acbec776:;
	};
	_1c164d9aa_WriteByte(_13324_cmd, ' ');
	if (_1da0b7cbd_Production) {
		_1c164d702_WriteStr(_13324_cmd, jule::Str::lit("-O3 ", 4));
		_1c164d702_WriteStr(_13324_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_1c164d702_WriteStr(_13324_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_1c164d702_WriteStr(_13324_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline __jule_tuple_str__jule_tuple_str _1baa75437_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1ad2253b9_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_1606_compiler = &(_1da0b67e4_CompilerPath);;
	_1c164cc40_StrBuilder _1619_cmd = static__1c164d191_New(64LL);;
	{
		auto &_match_expr{ _1da0b545d_Compiler };
		
		if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1acc005d1:;
			{
				_1baa74ea3_pushCompCmdGcc(&(_1619_cmd));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1acc00acb:;
			{
				_1baa74c72_pushCompCmdClang(&(_1619_cmd));
			}
		}
		_match_end_1acc007e0:;
	};
	{
		auto expr = &((*((*(_15936_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc00d51:;
		if (it != expr_end) {
			jule::Ptr<_1ac77790b_ImportInfo> *_17112_u = it;
			{
				if (((*((*(_17112_u))))._field_Binded && _1baa74a41_isCppSourceFile((*((*(_17112_u))))._field_Path))) {
					_1c164d702_WriteStr(&_1619_cmd, (*((*(_17112_u))))._field_Path);
					_1c164d9aa_WriteByte(&_1619_cmd, ' ');
				};
			}
			_iter_next_1acc00d51:;
			++it;
			goto _iter_begin_1acc00d51;
		}
		_iter_end_1acc00d51:;
	};
	if (!(_1baa73d3c_Out).empty()) {
		_1c164d702_WriteStr(&_1619_cmd, jule::Str::lit("-o ", 3));
		_1c164d702_WriteStr(&_1619_cmd, _1baa73d3c_Out);
		_1c164d9aa_WriteByte(&_1619_cmd, ' ');
	};
	_1c164d702_WriteStr(&_1619_cmd, _15918_sourcePath);
	{
		auto expr = &((*((*(_15936_ir))))._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc038c0:;
		if (it != expr_end) {
			jule::Str *_18612_pass = it;
			{
				_1c164d9aa_WriteByte(&_1619_cmd, ' ');
				_1c164d702_WriteStr(&_1619_cmd, (*(_18612_pass)));
			}
			_iter_next_1acc038c0:;
			++it;
			goto _iter_begin_1acc038c0;
		}
		_iter_end_1acc038c0:;
	};
	if (_1a76388b0_Os.equal("windows", 7)) {
		_1c164d702_WriteStr(&_1619_cmd, jule::Str::lit(" -lshell32", 10));
	};
	__jule_func_result.__jule_result_arg0 = (*(_1606_compiler));
	__jule_func_result.__jule_result_arg1 = _1c164dee9_Str(&_1619_cmd);
	return __jule_func_result;;
}



inline jule::Str _1baa75646_getCompilePath(void) {
	return _1a694455c_Join(jule::Slice<jule::Str>::make({_1baa73776_OutDir,_1baa73a73_OutName}));;
}



inline void _1baa75877_applyTargetIndependentOptimizations(jule::Ptr<_1ad2253b9_IR>* _20545_ir) {
	jule::Ptr<_1ad3be0ac_Optimizer> _2069_opt = static__1ad3be530_New(_20545_ir);;
	_1ad3c0b19_Optimize(_2069_opt.ptr());
}



inline void _1baa759ed_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _1da0b545d_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1acc0551a:;
			{
				_1ad3e9879_Throw(jule::Str::lit("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1acc05c57:;
			{
				if ((_1da0b67e4_CompilerPath).empty()) {
					_1da0b67e4_CompilerPath=jule::Str::lit("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1acc05cbd:;
			{
				if ((_1da0b67e4_CompilerPath).empty()) {
					_1da0b67e4_CompilerPath=jule::Str::lit("g++", 3);
				};
			}
		}
		else {
			_case_begin_1acc05be1:;
			{
				_1ad3e9879_Throw((jule::Str::lit("invalid option value for --compiler: ", 37) + _1da0b545d_Compiler));
			}
		}
		_match_end_1acc05b8b:;
	};
}



inline void _1baa75c2e_checkTargetArch(jule::Str _22720_arch) {
	if ((((!_22720_arch.equal("amd64", 5)) && (!_22720_arch.equal("arm64", 5))) && (!_22720_arch.equal("i386", 4)))) {
		_1ad3e9879_Throw((jule::Str::lit("--target: unsupported/undefined architecture: ", 46) + _22720_arch));
	};
}



inline void _1baa75e60_checkTargetOs(jule::Str _23518_os) {
	if ((((!_23518_os.equal("windows", 7)) && (!_23518_os.equal("linux", 5))) && (!_23518_os.equal("darwin", 6)))) {
		_1ad3e9879_Throw((jule::Str::lit("--target: unsupported/undefined operating system: ", 50) + _23518_os));
	};
}



inline void _1baa76191_checkTargetFlag(jule::Str* _24321_target) {
	if (((*(_24321_target))).empty()) {
		_1ad3e9879_Throw(jule::Str::lit("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2485_parts = _1a693db1c_Split((*(_24321_target)), jule::Str::lit("-", 1), -1LL);;
	if ((_2485_parts.len() != 2LL)) {
		_1ad3e9879_Throw((jule::Str::lit("--target: undefined platform target format: ", 44) + (*(_24321_target))));
	};
	jule::Str _2535_os;;
	jule::Str _2539_arch;;
	({
		jule::Str ___jule_assign_arg = _2485_parts[0LL];
		jule::Str _1___jule_assign_arg = _2485_parts[1LL];
		_2535_os = ___jule_assign_arg;
		_2539_arch = _1___jule_assign_arg;
	});
	if ((!_2535_os.equal("native", 6))) {
		_1baa75e60_checkTargetOs(_2535_os);
		_1a76388b0_Os=_2535_os;
	};
	if ((!_2539_arch.equal("native", 6))) {
		_1baa75c2e_checkTargetArch(_2539_arch);
		_1a7638b79_Arch=_2539_arch;
	};
	_1a6cd5b1d_UpdateTarget();
}



inline void _1baa763c2_checkOptFlag(jule::Str* _26618_opt) {
	if (((*(_26618_opt))).empty()) {
		_1ad3e9879_Throw(jule::Str::lit("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26618_opt)) };
		
		if (_match_expr == jule::Str::lit("L0", 2)) {
			_case_begin_1acc0c92e:;
			{
				goto _match_end_1acc0c0d2;
			}
		}
		else if (_match_expr == jule::Str::lit("L1", 2)) {
			_case_begin_1acc0c995:;
			{
				_1ac96360d_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1acc0c2e1:;
			{
				_1ad3e9879_Throw((jule::Str::lit("--opt: invalid optimization level: ", 35) + (*(_26618_opt))));
			}
		}
		_match_end_1acc0c0d2:;
	};
}



inline void _1baa76757_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _1da0b6a47_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5) || _match_expr == jule::Str::lit("cpp17", 5) || _match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1acc0c632:;
			{
				goto _match_end_1acc0cd91;
			}
		}
		else {
			_case_begin_1acc0cde6:;
			{
				_1ad3e9879_Throw((jule::Str::lit("--cppstd: invalid cpp standard: ", 32) + _1da0b6a47_CppStd));
			}
		}
		_match_end_1acc0cd91:;
	};
}



inline jule::Slice<jule::Str> _1baa769bb_checkFlags(jule::Slice<jule::Str>* _29216_args) {
	jule::Str _2939_opt = jule::Str::lit("L0", 2);;
	jule::Str _2949_target = jule::Str::lit("native-native", 13);;
	jule::Ptr<_1baa6d793_FlagSet> _2969_fs = static__1baa6da7e_New();;
	_1acc1015c_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2939_opt)))), jule::Str::lit("opt", 3), 0LL, jule::Str::lit("Optimization level", 18));
	_1acc1015c_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2949_target)))), jule::Str::lit("target", 6), 0LL, jule::Str::lit("Target system", 13));
	_1acc1015c_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1baa73d3c_Out)))), jule::Str::lit("out", 3), 'o', jule::Str::lit("Output identifier", 17));
	_1acc16ecc_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1da0b6ccd_Shadowing)))), jule::Str::lit("shadowing", 9), 0LL, jule::Str::lit("Allow shadowing", 15));
	_1acc16ecc_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1da0b7097_Transpilation)))), jule::Str::lit("transpile", 9), 't', jule::Str::lit("Transpile code", 14));
	_1acc1015c_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1da0b545d_Compiler)))), jule::Str::lit("compiler", 8), 0LL, jule::Str::lit("Backend compiler", 16));
	_1acc1015c_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1da0b67e4_CompilerPath)))), jule::Str::lit("compiler-path", 13), 0LL, jule::Str::lit("Path of backend compiler", 24));
	_1acc16ecc_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1da0b7cbd_Production)))), jule::Str::lit("production", 10), 'p', jule::Str::lit("Compile for production", 22));
	_1acc16ecc_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1da0b762a_RC)))), jule::Str::lit("disable-rc", 10), 0LL, jule::Str::lit("Disable reference counting", 26));
	_1acc16ecc_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1da0b7a04_Safety)))), jule::Str::lit("disable-safety", 14), 0LL, jule::Str::lit("Disable safety", 14));
	_1acc1015c_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1da0b6a47_CppStd)))), jule::Str::lit("cppstd", 6), 0LL, jule::Str::lit("C++ standard", 12));
	_1acc16ecc_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ac9614b8_Copy)))), jule::Str::lit("opt-copy", 8), 0LL, jule::Str::lit("Copy optimization", 17));
	_1acc16ecc_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ac9617c6_Deadcode)))), jule::Str::lit("opt-deadcode", 12), 0LL, jule::Str::lit("Deadcode optimization", 21));
	_1acc16ecc_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ac961a90_Append)))), jule::Str::lit("opt-append", 10), 0LL, jule::Str::lit("Append optimization", 19));
	_1acc16ecc_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ac961d9d_Math)))), jule::Str::lit("opt-math", 8), 0LL, jule::Str::lit("Math optimization", 17));
	_1acc16ecc_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ac962167_Access)))), jule::Str::lit("opt-access", 10), 0LL, jule::Str::lit("Access optimization", 19));
	_1acc16ecc_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ac962431_Inline)))), jule::Str::lit("opt-inline", 10), 0LL, jule::Str::lit("Inline optimization", 19));
	_1acc16ecc_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ac9626ea_Ptr)))), jule::Str::lit("opt-ptr", 7), 0LL, jule::Str::lit("Pointer optimizations", 21));
	_1acc16ecc_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ac962ac4_Cond)))), jule::Str::lit("opt-cond", 8), 0LL, jule::Str::lit("Conditional optimizations", 25));
	_1acc16ecc_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ac962d8d_Str)))), jule::Str::lit("opt-str", 7), 0LL, jule::Str::lit("String optimizations", 20));
	_1acc16ecc_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ac963157_Slice)))), jule::Str::lit("opt-slice", 9), 0LL, jule::Str::lit("Slice optimizations", 19));
	_1acc16ecc_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ac963421_Assign)))), jule::Str::lit("opt-assign", 10), 0LL, jule::Str::lit("Assignment optimizations", 24));
	jule::Slice<jule::Str> _3219_content = ({
		auto except = _1baa6e91a_Parse(_2969_fs.ptr(), (*(_29216_args)));
		(except.ok()) ? (except.result) : ({
			_1ad3e9879_Throw(except.error.cast<jule::Str>(&__jule_any_type4));

			nullptr;
		});
	});;
	_1baa759ed_checkCompilerFlag();
	_1baa76757_checkCppStdFlag();
	_1baa76191_checkTargetFlag(&(_2949_target));
	_1baa763c2_checkOptFlag(&(_2939_opt));
	return _3219_content;;
}



inline void _1baa76bec_setupSemaFlags(jule::I64* _33424_flags) {
	if (_1da0b6ccd_Shadowing) {
		(*(_33424_flags))|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1ad2253b9_IR> _1baa76eb6_buildIr(jule::Slice<jule::Str>* _34013_args) {
	jule::Slice<jule::Str> _3415_content = _1baa769bb_checkFlags(_34013_args);;
	jule::I64 _3439_semaFlags = static_cast<jule::I64>(0LL);;
	_1baa76bec_setupSemaFlags(&(_3439_semaFlags));
	if ((_3415_content.len() == 0LL)) {
		_1ad3e9879_Throw(_1a756da9d_Logf(jule::Str::lit("missing compile path", 20), jule::Slice<jule::Any>()));
	} else if ((_3415_content.len() > 1LL)) {
		_1ad3e9879_Throw((jule::Str::lit("undefined content: ", 19) + _3415_content[1LL]));
	};
	jule::Str _3519_path;;
	jule::Bool _35115_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1a6944ae0_Abs(_3415_content[0LL]);
		_3519_path = __jule_assign_result.__jule_result_arg0;
		_35115_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_35115_ok))) {
		_1ad3e9879_Throw(jule::Str::lit("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_1d9e5441d_Status> _3575_inf = ({
		auto except = static__1a6946a48_Of(_1a7637ccc_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1ad3e9879_Throw(_1a756da9d_Logf(jule::Str::lit("standard library directory not found", 36), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_1d9e5441d_Status>(nullptr);});
	});;
	if ((!(_1d9e547e7_IsDir(_3575_inf.ptr())))) {
		_1ad3e9879_Throw(_1a756da9d_Logf(jule::Str::lit("standard library directory not found", 36), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1ad2253b9_IR> _3659_ir;;
	jule::Slice<_1a756d63b_Log> _36513_logs;;
	({
		__jule_tuple_x_1ad2253b9_IR__jule_tuple_s_1a756d63b_Log __jule_assign_result = static__1ad22582b_Build(_3519_path, _3439_semaFlags);
		_3659_ir = __jule_assign_result.__jule_result_arg0;
		_36513_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3659_ir == nullptr) && (_36513_logs == nullptr))) {
		_1ad3e9879_Throw(_1a756da9d_Logf(jule::Str::lit("there is no Jule source code in package: @", 42), jule::Slice<jule::Any>::make({jule::Any(_3519_path, &__jule_any_type4)})));
	};
	if ((_36513_logs != nullptr)) {
		static__1ad3e8da6_PrintLogs(&(_36513_logs));
		_1ad3e9879_Throw(jule::Str());
	};
	return _3659_ir;;
}



inline void _1baa771e7_compileCommand(jule::Slice<jule::Str>* _38024_args) {
	((*(_38024_args))).mut_slice(1LL);;
	if ((*(_38024_args))[0LL].equal("test", 4)) {
		_1da0b7361_Test=true;
		((*(_38024_args))).mut_slice(1LL);;
	};
	jule::Ptr<_1ad2253b9_IR> _3869_ir = _1baa76eb6_buildIr(_38024_args);;
	;
	if ((!(_1da0b7361_Test))) {
		jule::Ptr<_1ac71426b_Fn> _39113_main = _1ac77bdb6_FindFn((*(_3869_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);;
		if ((_39113_main == nullptr)) {
			_1ad3e9879_Throw(_1a756da9d_Logf(jule::Str::lit("missing entry point: entry point (main) function is not defined", 63), jule::Slice<jule::Any>()));
		};
	};
	_1baa75877_applyTargetIndependentOptimizations(&(_3869_ir));
	_1ad226893_Order(_3869_ir.ptr());
	jule::Str _4025_compPath = _1baa75646_getCompilePath();;
	jule::Str _4035_compiler;;
	jule::Str _40315_compilerCmd;;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1baa75437_genCompileCmd(_4025_compPath, &(_3869_ir));
		_4035_compiler = __jule_assign_result.__jule_result_arg0;
		_40315_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1ba9d9555_ObjectCoder> _4059_oc = static__1ba9d9951_New(&(_3869_ir), _1ba9d7a3c_SerializationInfo{._field_Compiler=_4035_compiler, ._field_CompilerCommand=_40315_compilerCmd});;
	if (_1da0b7361_Test) {
		jule::Ptr<_1adc5c593_TestCoder> _41013_tc = static__1adc5c9d3_New(&(_4059_oc));;
		_1adc5dd58_Serialize(_41013_tc);
	} else {
		_1ba9e63a8_Serialize(_4059_oc);
	};
	jule::Ptr<_1d9e522d9_File> _4169_file = _1baa742c1_openOutput(&(_4025_compPath));;
	({
		auto except = _1c157d610_Write(_4169_file.ptr(), _1c164e99a_Buf(&(*(_4059_oc))._field_Buf));
		if (!except.ok()) {
			_1ad3e9879_Throw(jule::Str::lit("object code could not write", 27));
		}
	});
	({
		auto except = _1d9e5386d_Close(_4169_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:420:5"));
	});
	if ((!(_1da0b7097_Transpilation))) {
		_1baa74777_compileIr(_4035_compiler, _40315_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_1a7638cab_init();
	_1a6cd5c61_init();
	_1a763dee2_init();
	_1baa73ee6_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}